// Copyright 2021 Google LLC. All Rights Reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//     http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";

package dcl;

import "proto/connector/sdk.proto";
import "proto/empty.proto";

enum ContainerazureAlphaAzureClusterStateEnum {
  ContainerazureAlphaAzureClusterStateEnumNO_VALUE_DO_NOT_USE = 0;
  ContainerazureAlphaAzureClusterStateEnumSTATE_UNSPECIFIED = 1;
  ContainerazureAlphaAzureClusterStateEnumPROVISIONING = 2;
  ContainerazureAlphaAzureClusterStateEnumRUNNING = 3;
  ContainerazureAlphaAzureClusterStateEnumRECONCILING = 4;
  ContainerazureAlphaAzureClusterStateEnumSTOPPING = 5;
  ContainerazureAlphaAzureClusterStateEnumERROR = 6;
  ContainerazureAlphaAzureClusterStateEnumDEGRADED = 7;
}

message ContainerazureAlphaAzureCluster {
  string name = 1;
  string description = 2;
  string azure_region = 3;
  string resource_group_id = 4;
  string azure_client = 5;
  ContainerazureAlphaAzureClusterNetworking networking = 6;
  ContainerazureAlphaAzureClusterControlPlane control_plane = 7;
  ContainerazureAlphaAzureClusterAuthorization authorization = 8;
  ContainerazureAlphaAzureClusterStateEnum state = 9;
  string endpoint = 10;
  string uid = 11;
  bool reconciling = 12;
  string create_time = 13;
  string update_time = 14;
  string etag = 15;
  map<string, string> annotations = 16;
  ContainerazureAlphaAzureClusterWorkloadIdentityConfig workload_identity_config = 17;
  string project = 18;
  string location = 19;
}

message ContainerazureAlphaAzureClusterNetworking {
  string virtual_network_id = 1;
  repeated string pod_address_cidr_blocks = 2;
  repeated string service_address_cidr_blocks = 3;
}

message ContainerazureAlphaAzureClusterControlPlane {
  string version = 1;
  string subnet_id = 2;
  string vm_size = 3;
  ContainerazureAlphaAzureClusterControlPlaneSshConfig ssh_config = 4;
  ContainerazureAlphaAzureClusterControlPlaneRootVolume root_volume = 5;
  ContainerazureAlphaAzureClusterControlPlaneMainVolume main_volume = 6;
  ContainerazureAlphaAzureClusterControlPlaneDatabaseEncryption database_encryption = 7;
  map<string, string> tags = 8;
}

message ContainerazureAlphaAzureClusterControlPlaneSshConfig {
  string authorized_key = 1;
}

message ContainerazureAlphaAzureClusterControlPlaneRootVolume {
  int64 size_gib = 1;
}

message ContainerazureAlphaAzureClusterControlPlaneMainVolume {
  int64 size_gib = 1;
}

message ContainerazureAlphaAzureClusterControlPlaneDatabaseEncryption {
  string resource_group_id = 1;
  string kms_key_identifier = 2;
}

message ContainerazureAlphaAzureClusterAuthorization {
  repeated ContainerazureAlphaAzureClusterAuthorizationAdminUsers admin_users = 1;
}

message ContainerazureAlphaAzureClusterAuthorizationAdminUsers {
  string username = 1;
}

message ContainerazureAlphaAzureClusterWorkloadIdentityConfig {
  string issuer_uri = 1;
  string workload_pool = 2;
  string identity_provider = 3;
}

message ApplyContainerazureAlphaAzureClusterRequest {
  ContainerazureAlphaAzureCluster resource = 1;
  repeated LifecycleDirective lifecycle_directives = 2;
  string service_account_file = 3;
}

message DeleteContainerazureAlphaAzureClusterRequest {
  string service_account_file = 1;
  ContainerazureAlphaAzureCluster resource = 2;
}

message ListContainerazureAlphaAzureClusterRequest {
  string service_account_file = 1;
	ContainerazureAlphaAzureCluster resource = 2;
}

message ListContainerazureAlphaAzureClusterResponse {
  repeated ContainerazureAlphaAzureCluster items = 1;
}

service ContainerazureAlphaAzureClusterService {
  rpc ApplyContainerazureAlphaAzureCluster(ApplyContainerazureAlphaAzureClusterRequest) returns (ContainerazureAlphaAzureCluster);
  rpc DeleteContainerazureAlphaAzureCluster(DeleteContainerazureAlphaAzureClusterRequest) returns (google.protobuf.Empty);
  rpc ListContainerazureAlphaAzureCluster(ListContainerazureAlphaAzureClusterRequest) returns (ListContainerazureAlphaAzureClusterResponse);
}
