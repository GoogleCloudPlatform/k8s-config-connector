// Copyright 2024 Google LLC. All Rights Reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//     http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";
// All generated protos should be opaque, with "xxx_hidden_" prepended to their field names.


package dcl;

import "proto/connector/sdk.proto";
import "proto/empty.proto";


enum LoggingLogMetricMetricDescriptorLabelsValueTypeEnum {
  LoggingLogMetricMetricDescriptorLabelsValueTypeEnumNO_VALUE_DO_NOT_USE = 0;
  LoggingLogMetricMetricDescriptorLabelsValueTypeEnumSTRING = 1;
  LoggingLogMetricMetricDescriptorLabelsValueTypeEnumBOOL = 2;
  LoggingLogMetricMetricDescriptorLabelsValueTypeEnumINT64 = 3;
  LoggingLogMetricMetricDescriptorLabelsValueTypeEnumDOUBLE = 4;
  LoggingLogMetricMetricDescriptorLabelsValueTypeEnumDISTRIBUTION = 5;
  LoggingLogMetricMetricDescriptorLabelsValueTypeEnumMONEY = 6;
}

enum LoggingLogMetricMetricDescriptorMetricKindEnum {
  LoggingLogMetricMetricDescriptorMetricKindEnumNO_VALUE_DO_NOT_USE = 0;
  LoggingLogMetricMetricDescriptorMetricKindEnumGAUGE = 1;
  LoggingLogMetricMetricDescriptorMetricKindEnumDELTA = 2;
  LoggingLogMetricMetricDescriptorMetricKindEnumCUMULATIVE = 3;
}

enum LoggingLogMetricMetricDescriptorValueTypeEnum {
  LoggingLogMetricMetricDescriptorValueTypeEnumNO_VALUE_DO_NOT_USE = 0;
  LoggingLogMetricMetricDescriptorValueTypeEnumSTRING = 1;
  LoggingLogMetricMetricDescriptorValueTypeEnumBOOL = 2;
  LoggingLogMetricMetricDescriptorValueTypeEnumINT64 = 3;
  LoggingLogMetricMetricDescriptorValueTypeEnumDOUBLE = 4;
  LoggingLogMetricMetricDescriptorValueTypeEnumDISTRIBUTION = 5;
  LoggingLogMetricMetricDescriptorValueTypeEnumMONEY = 6;
}

enum LoggingLogMetricMetricDescriptorLaunchStageEnum {
  LoggingLogMetricMetricDescriptorLaunchStageEnumNO_VALUE_DO_NOT_USE = 0;
  LoggingLogMetricMetricDescriptorLaunchStageEnumUNIMPLEMENTED = 1;
  LoggingLogMetricMetricDescriptorLaunchStageEnumPRELAUNCH = 2;
  LoggingLogMetricMetricDescriptorLaunchStageEnumEARLY_ACCESS = 3;
  LoggingLogMetricMetricDescriptorLaunchStageEnumALPHA = 4;
  LoggingLogMetricMetricDescriptorLaunchStageEnumBETA = 5;
  LoggingLogMetricMetricDescriptorLaunchStageEnumGA = 6;
  LoggingLogMetricMetricDescriptorLaunchStageEnumDEPRECATED = 7;
}

message LoggingLogMetric {
  string name = 1;
  string description = 2;
  string filter = 3;
  bool disabled = 4;
  LoggingLogMetricMetricDescriptor metric_descriptor = 5;
  string value_extractor = 6;
  map<string, string> label_extractors = 7;
  LoggingLogMetricBucketOptions bucket_options = 8;
  string create_time = 9;
  string update_time = 10;
  string project = 11;
}

message LoggingLogMetricMetricDescriptor {
  string name = 1;
  string type = 2;
  repeated LoggingLogMetricMetricDescriptorLabels labels = 3;
  LoggingLogMetricMetricDescriptorMetricKindEnum metric_kind = 4;
  LoggingLogMetricMetricDescriptorValueTypeEnum value_type = 5;
  string unit = 6;
  string description = 7;
  string display_name = 8;
  LoggingLogMetricMetricDescriptorMetadata metadata = 9;
  LoggingLogMetricMetricDescriptorLaunchStageEnum launch_stage = 10;
  repeated string monitored_resource_types = 11;
}

message LoggingLogMetricMetricDescriptorLabels {
  string key = 1;
  LoggingLogMetricMetricDescriptorLabelsValueTypeEnum value_type = 2;
  string description = 3;
}

message LoggingLogMetricMetricDescriptorMetadata {
  string sample_period = 1;
  string ingest_delay = 2;
}

message LoggingLogMetricBucketOptions {
  LoggingLogMetricBucketOptionsLinearBuckets linear_buckets = 1;
  LoggingLogMetricBucketOptionsExponentialBuckets exponential_buckets = 2;
  LoggingLogMetricBucketOptionsExplicitBuckets explicit_buckets = 3;
}

message LoggingLogMetricBucketOptionsLinearBuckets {
  int64 num_finite_buckets = 1;
  double width = 2;
  double offset = 3;
}

message LoggingLogMetricBucketOptionsExponentialBuckets {
  int64 num_finite_buckets = 1;
  double growth_factor = 2;
  double scale = 3;
}

message LoggingLogMetricBucketOptionsExplicitBuckets {
  repeated double bounds = 1;
}

message ApplyLoggingLogMetricRequest {
  LoggingLogMetric resource = 1;
  repeated LifecycleDirective lifecycle_directives = 2;
  string service_account_file = 3;
}

message DeleteLoggingLogMetricRequest {
  string service_account_file = 1;
  LoggingLogMetric resource = 2;
}

message ListLoggingLogMetricRequest {
  string service_account_file = 1;
  string Project = 2;
}

message ListLoggingLogMetricResponse {
  repeated LoggingLogMetric items = 1;
}

service LoggingLogMetricService {
  rpc ApplyLoggingLogMetric(ApplyLoggingLogMetricRequest) returns (LoggingLogMetric);
  rpc DeleteLoggingLogMetric(DeleteLoggingLogMetricRequest) returns (google.protobuf.Empty);
  rpc ListLoggingLogMetric(ListLoggingLogMetricRequest) returns (ListLoggingLogMetricResponse);
}
