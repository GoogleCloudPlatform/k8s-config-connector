// Copyright 2022 Google LLC. All Rights Reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//     http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";
// All generated protos should be opaque, with "xxx_hidden_" prepended to their field names.


package dcl;

import "proto/connector/sdk.proto";
import "proto/empty.proto";


message VertexaiBetaMetadataStore {
  string name = 1;
  string create_time = 2;
  string update_time = 3;
  VertexaiBetaMetadataStoreEncryptionSpec encryption_spec = 4;
  string description = 5;
  VertexaiBetaMetadataStoreState state = 6;
  string project = 7;
  string location = 8;
}

message VertexaiBetaMetadataStoreEncryptionSpec {
  string kms_key_name = 1;
}

message VertexaiBetaMetadataStoreState {
  int64 disk_utilization_bytes = 1;
}

message ApplyVertexaiBetaMetadataStoreRequest {
  VertexaiBetaMetadataStore resource = 1;
  repeated LifecycleDirective lifecycle_directives = 2;
  string service_account_file = 3;
}

message DeleteVertexaiBetaMetadataStoreRequest {
  string service_account_file = 1;
  VertexaiBetaMetadataStore resource = 2;
}

message ListVertexaiBetaMetadataStoreRequest {
  string service_account_file = 1;
  string Project = 2;
  string Location = 3;
}

message ListVertexaiBetaMetadataStoreResponse {
  repeated VertexaiBetaMetadataStore items = 1;
}

service VertexaiBetaMetadataStoreService {
  rpc ApplyVertexaiBetaMetadataStore(ApplyVertexaiBetaMetadataStoreRequest) returns (VertexaiBetaMetadataStore);
  rpc DeleteVertexaiBetaMetadataStore(DeleteVertexaiBetaMetadataStoreRequest) returns (google.protobuf.Empty);
  rpc ListVertexaiBetaMetadataStore(ListVertexaiBetaMetadataStoreRequest) returns (ListVertexaiBetaMetadataStoreResponse);
}
