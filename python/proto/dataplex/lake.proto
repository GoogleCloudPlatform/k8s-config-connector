// Copyright 2024 Google LLC. All Rights Reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//     http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";
// All generated protos should be opaque, with "xxx_hidden_" prepended to their field names.


package dcl;

import "proto/connector/sdk.proto";
import "proto/empty.proto";


enum DataplexLakeStateEnum {
  DataplexLakeStateEnumNO_VALUE_DO_NOT_USE = 0;
  DataplexLakeStateEnumSTATE_UNSPECIFIED = 1;
  DataplexLakeStateEnumACTIVE = 2;
  DataplexLakeStateEnumCREATING = 3;
  DataplexLakeStateEnumDELETING = 4;
  DataplexLakeStateEnumACTION_REQUIRED = 5;
}

enum DataplexLakeMetastoreStatusStateEnum {
  DataplexLakeMetastoreStatusStateEnumNO_VALUE_DO_NOT_USE = 0;
  DataplexLakeMetastoreStatusStateEnumSTATE_UNSPECIFIED = 1;
  DataplexLakeMetastoreStatusStateEnumNONE = 2;
  DataplexLakeMetastoreStatusStateEnumREADY = 3;
  DataplexLakeMetastoreStatusStateEnumUPDATING = 4;
  DataplexLakeMetastoreStatusStateEnumERROR = 5;
}

message DataplexLake {
  string name = 1;
  string display_name = 2;
  string uid = 3;
  string create_time = 4;
  string update_time = 5;
  map<string, string> labels = 6;
  string description = 7;
  DataplexLakeStateEnum state = 8;
  string service_account = 9;
  DataplexLakeMetastore metastore = 10;
  DataplexLakeAssetStatus asset_status = 11;
  DataplexLakeMetastoreStatus metastore_status = 12;
  string project = 13;
  string location = 14;
}

message DataplexLakeMetastore {
  string service = 1;
}

message DataplexLakeAssetStatus {
  string update_time = 1;
  int64 active_assets = 2;
  int64 security_policy_applying_assets = 3;
}

message DataplexLakeMetastoreStatus {
  DataplexLakeMetastoreStatusStateEnum state = 1;
  string message = 2;
  string update_time = 3;
  string endpoint = 4;
}

message ApplyDataplexLakeRequest {
  DataplexLake resource = 1;
  repeated LifecycleDirective lifecycle_directives = 2;
  string service_account_file = 3;
}

message DeleteDataplexLakeRequest {
  string service_account_file = 1;
  DataplexLake resource = 2;
}

message ListDataplexLakeRequest {
  string service_account_file = 1;
  string Project = 2;
  string Location = 3;
}

message ListDataplexLakeResponse {
  repeated DataplexLake items = 1;
}

service DataplexLakeService {
  rpc ApplyDataplexLake(ApplyDataplexLakeRequest) returns (DataplexLake);
  rpc DeleteDataplexLake(DeleteDataplexLakeRequest) returns (google.protobuf.Empty);
  rpc ListDataplexLake(ListDataplexLakeRequest) returns (ListDataplexLakeResponse);
}
