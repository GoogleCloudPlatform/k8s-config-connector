// Copyright 2024 Google LLC. All Rights Reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//     http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";
// All generated protos should be opaque, with "xxx_hidden_" prepended to their field names.


package dcl;

import "proto/connector/sdk.proto";
import "proto/empty.proto";


enum VpcaccessAlphaConnectorStateEnum {
  VpcaccessAlphaConnectorStateEnumNO_VALUE_DO_NOT_USE = 0;
  VpcaccessAlphaConnectorStateEnumSTATE_UNSPECIFIED = 1;
  VpcaccessAlphaConnectorStateEnumREADY = 2;
  VpcaccessAlphaConnectorStateEnumCREATING = 3;
  VpcaccessAlphaConnectorStateEnumDELETING = 4;
  VpcaccessAlphaConnectorStateEnumERROR = 5;
  VpcaccessAlphaConnectorStateEnumUPDATING = 6;
}

message VpcaccessAlphaConnector {
  string name = 1;
  string network = 2;
  string ip_cidr_range = 3;
  VpcaccessAlphaConnectorStateEnum state = 4;
  int64 min_throughput = 5;
  int64 max_throughput = 6;
  repeated string connected_projects = 7;
  VpcaccessAlphaConnectorSubnet subnet = 8;
  string machine_type = 9;
  int64 min_instances = 10;
  int64 max_instances = 11;
  string project = 12;
  string location = 13;
}

message VpcaccessAlphaConnectorSubnet {
  string name = 1;
  string project_id = 2;
}

message ApplyVpcaccessAlphaConnectorRequest {
  VpcaccessAlphaConnector resource = 1;
  repeated LifecycleDirective lifecycle_directives = 2;
  string service_account_file = 3;
}

message DeleteVpcaccessAlphaConnectorRequest {
  string service_account_file = 1;
  VpcaccessAlphaConnector resource = 2;
}

message ListVpcaccessAlphaConnectorRequest {
  string service_account_file = 1;
  string Project = 2;
  string Location = 3;
}

message ListVpcaccessAlphaConnectorResponse {
  repeated VpcaccessAlphaConnector items = 1;
}

service VpcaccessAlphaConnectorService {
  rpc ApplyVpcaccessAlphaConnector(ApplyVpcaccessAlphaConnectorRequest) returns (VpcaccessAlphaConnector);
  rpc DeleteVpcaccessAlphaConnector(DeleteVpcaccessAlphaConnectorRequest) returns (google.protobuf.Empty);
  rpc ListVpcaccessAlphaConnector(ListVpcaccessAlphaConnectorRequest) returns (ListVpcaccessAlphaConnectorResponse);
}
