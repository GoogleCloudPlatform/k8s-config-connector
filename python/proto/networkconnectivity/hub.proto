// Copyright 2024 Google LLC. All Rights Reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//     http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";
// All generated protos should be opaque, with "xxx_hidden_" prepended to their field names.


package dcl;

import "proto/connector/sdk.proto";
import "proto/empty.proto";


enum NetworkconnectivityHubStateEnum {
  NetworkconnectivityHubStateEnumNO_VALUE_DO_NOT_USE = 0;
  NetworkconnectivityHubStateEnumSTATE_UNSPECIFIED = 1;
  NetworkconnectivityHubStateEnumCREATING = 2;
  NetworkconnectivityHubStateEnumACTIVE = 3;
  NetworkconnectivityHubStateEnumDELETING = 4;
}

message NetworkconnectivityHub {
  string name = 1;
  string create_time = 2;
  string update_time = 3;
  map<string, string> labels = 4;
  string description = 5;
  string unique_id = 6;
  NetworkconnectivityHubStateEnum state = 7;
  string project = 8;
  repeated NetworkconnectivityHubRoutingVpcs routing_vpcs = 9;
}

message NetworkconnectivityHubRoutingVpcs {
  string uri = 1;
}

message ApplyNetworkconnectivityHubRequest {
  NetworkconnectivityHub resource = 1;
  repeated LifecycleDirective lifecycle_directives = 2;
  string service_account_file = 3;
}

message DeleteNetworkconnectivityHubRequest {
  string service_account_file = 1;
  NetworkconnectivityHub resource = 2;
}

message ListNetworkconnectivityHubRequest {
  string service_account_file = 1;
  string Project = 2;
}

message ListNetworkconnectivityHubResponse {
  repeated NetworkconnectivityHub items = 1;
}

service NetworkconnectivityHubService {
  rpc ApplyNetworkconnectivityHub(ApplyNetworkconnectivityHubRequest) returns (NetworkconnectivityHub);
  rpc DeleteNetworkconnectivityHub(DeleteNetworkconnectivityHubRequest) returns (google.protobuf.Empty);
  rpc ListNetworkconnectivityHub(ListNetworkconnectivityHubRequest) returns (ListNetworkconnectivityHubResponse);
}
