// Copyright 2024 Google LLC. All Rights Reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//     http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";
// All generated protos should be opaque, with "xxx_hidden_" prepended to their field names.


package dcl;

import "proto/connector/sdk.proto";
import "proto/empty.proto";


message ClouddeployAlphaDeliveryPipeline {
  string name = 1;
  string uid = 2;
  string description = 3;
  map<string, string> annotations = 4;
  map<string, string> labels = 5;
  string create_time = 6;
  string update_time = 7;
  ClouddeployAlphaDeliveryPipelineSerialPipeline serial_pipeline = 8;
  ClouddeployAlphaDeliveryPipelineCondition condition = 9;
  string etag = 10;
  string project = 11;
  string location = 12;
  bool suspended = 13;
}

message ClouddeployAlphaDeliveryPipelineSerialPipeline {
  repeated ClouddeployAlphaDeliveryPipelineSerialPipelineStages stages = 1;
}

message ClouddeployAlphaDeliveryPipelineSerialPipelineStages {
  string target_id = 1;
  repeated string profiles = 2;
  ClouddeployAlphaDeliveryPipelineSerialPipelineStagesStrategy strategy = 3;
  repeated ClouddeployAlphaDeliveryPipelineSerialPipelineStagesDeployParameters deploy_parameters = 4;
}

message ClouddeployAlphaDeliveryPipelineSerialPipelineStagesStrategy {
  ClouddeployAlphaDeliveryPipelineSerialPipelineStagesStrategyStandard standard = 1;
  ClouddeployAlphaDeliveryPipelineSerialPipelineStagesStrategyCanary canary = 2;
}

message ClouddeployAlphaDeliveryPipelineSerialPipelineStagesStrategyStandard {
  bool verify = 1;
  ClouddeployAlphaDeliveryPipelineSerialPipelineStagesStrategyStandardPredeploy predeploy = 2;
  ClouddeployAlphaDeliveryPipelineSerialPipelineStagesStrategyStandardPostdeploy postdeploy = 3;
}

message ClouddeployAlphaDeliveryPipelineSerialPipelineStagesStrategyStandardPredeploy {
  repeated string actions = 1;
}

message ClouddeployAlphaDeliveryPipelineSerialPipelineStagesStrategyStandardPostdeploy {
  repeated string actions = 1;
}

message ClouddeployAlphaDeliveryPipelineSerialPipelineStagesStrategyCanary {
  ClouddeployAlphaDeliveryPipelineSerialPipelineStagesStrategyCanaryRuntimeConfig runtime_config = 1;
  ClouddeployAlphaDeliveryPipelineSerialPipelineStagesStrategyCanaryCanaryDeployment canary_deployment = 2;
  ClouddeployAlphaDeliveryPipelineSerialPipelineStagesStrategyCanaryCustomCanaryDeployment custom_canary_deployment = 3;
}

message ClouddeployAlphaDeliveryPipelineSerialPipelineStagesStrategyCanaryRuntimeConfig {
  ClouddeployAlphaDeliveryPipelineSerialPipelineStagesStrategyCanaryRuntimeConfigKubernetes kubernetes = 1;
  ClouddeployAlphaDeliveryPipelineSerialPipelineStagesStrategyCanaryRuntimeConfigCloudRun cloud_run = 2;
}

message ClouddeployAlphaDeliveryPipelineSerialPipelineStagesStrategyCanaryRuntimeConfigKubernetes {
  ClouddeployAlphaDeliveryPipelineSerialPipelineStagesStrategyCanaryRuntimeConfigKubernetesGatewayServiceMesh gateway_service_mesh = 1;
  ClouddeployAlphaDeliveryPipelineSerialPipelineStagesStrategyCanaryRuntimeConfigKubernetesServiceNetworking service_networking = 2;
}

message ClouddeployAlphaDeliveryPipelineSerialPipelineStagesStrategyCanaryRuntimeConfigKubernetesGatewayServiceMesh {
  string http_route = 1;
  string service = 2;
  string deployment = 3;
  string route_update_wait_time = 4;
  string stable_cutback_duration = 5;
}

message ClouddeployAlphaDeliveryPipelineSerialPipelineStagesStrategyCanaryRuntimeConfigKubernetesServiceNetworking {
  string service = 1;
  string deployment = 2;
  bool disable_pod_overprovisioning = 3;
}

message ClouddeployAlphaDeliveryPipelineSerialPipelineStagesStrategyCanaryRuntimeConfigCloudRun {
  bool automatic_traffic_control = 1;
  repeated string canary_revision_tags = 2;
  repeated string prior_revision_tags = 3;
  repeated string stable_revision_tags = 4;
}

message ClouddeployAlphaDeliveryPipelineSerialPipelineStagesStrategyCanaryCanaryDeployment {
  repeated int64 percentages = 1;
  bool verify = 2;
  ClouddeployAlphaDeliveryPipelineSerialPipelineStagesStrategyCanaryCanaryDeploymentPredeploy predeploy = 3;
  ClouddeployAlphaDeliveryPipelineSerialPipelineStagesStrategyCanaryCanaryDeploymentPostdeploy postdeploy = 4;
}

message ClouddeployAlphaDeliveryPipelineSerialPipelineStagesStrategyCanaryCanaryDeploymentPredeploy {
  repeated string actions = 1;
}

message ClouddeployAlphaDeliveryPipelineSerialPipelineStagesStrategyCanaryCanaryDeploymentPostdeploy {
  repeated string actions = 1;
}

message ClouddeployAlphaDeliveryPipelineSerialPipelineStagesStrategyCanaryCustomCanaryDeployment {
  repeated ClouddeployAlphaDeliveryPipelineSerialPipelineStagesStrategyCanaryCustomCanaryDeploymentPhaseConfigs phase_configs = 1;
}

message ClouddeployAlphaDeliveryPipelineSerialPipelineStagesStrategyCanaryCustomCanaryDeploymentPhaseConfigs {
  string phase_id = 1;
  int64 percentage = 2;
  repeated string profiles = 3;
  bool verify = 4;
  ClouddeployAlphaDeliveryPipelineSerialPipelineStagesStrategyCanaryCustomCanaryDeploymentPhaseConfigsPredeploy predeploy = 5;
  ClouddeployAlphaDeliveryPipelineSerialPipelineStagesStrategyCanaryCustomCanaryDeploymentPhaseConfigsPostdeploy postdeploy = 6;
}

message ClouddeployAlphaDeliveryPipelineSerialPipelineStagesStrategyCanaryCustomCanaryDeploymentPhaseConfigsPredeploy {
  repeated string actions = 1;
}

message ClouddeployAlphaDeliveryPipelineSerialPipelineStagesStrategyCanaryCustomCanaryDeploymentPhaseConfigsPostdeploy {
  repeated string actions = 1;
}

message ClouddeployAlphaDeliveryPipelineSerialPipelineStagesDeployParameters {
  map<string, string> values = 1;
  map<string, string> match_target_labels = 2;
}

message ClouddeployAlphaDeliveryPipelineCondition {
  ClouddeployAlphaDeliveryPipelineConditionPipelineReadyCondition pipeline_ready_condition = 1;
  ClouddeployAlphaDeliveryPipelineConditionTargetsPresentCondition targets_present_condition = 2;
  ClouddeployAlphaDeliveryPipelineConditionTargetsTypeCondition targets_type_condition = 3;
}

message ClouddeployAlphaDeliveryPipelineConditionPipelineReadyCondition {
  bool status = 1;
  string update_time = 2;
}

message ClouddeployAlphaDeliveryPipelineConditionTargetsPresentCondition {
  bool status = 1;
  repeated string missing_targets = 2;
  string update_time = 3;
}

message ClouddeployAlphaDeliveryPipelineConditionTargetsTypeCondition {
  bool status = 1;
  string error_details = 2;
}

message ApplyClouddeployAlphaDeliveryPipelineRequest {
  ClouddeployAlphaDeliveryPipeline resource = 1;
  repeated LifecycleDirective lifecycle_directives = 2;
  string service_account_file = 3;
}

message DeleteClouddeployAlphaDeliveryPipelineRequest {
  string service_account_file = 1;
  ClouddeployAlphaDeliveryPipeline resource = 2;
}

message ListClouddeployAlphaDeliveryPipelineRequest {
  string service_account_file = 1;
  string Project = 2;
  string Location = 3;
}

message ListClouddeployAlphaDeliveryPipelineResponse {
  repeated ClouddeployAlphaDeliveryPipeline items = 1;
}

service ClouddeployAlphaDeliveryPipelineService {
  rpc ApplyClouddeployAlphaDeliveryPipeline(ApplyClouddeployAlphaDeliveryPipelineRequest) returns (ClouddeployAlphaDeliveryPipeline);
  rpc DeleteClouddeployAlphaDeliveryPipeline(DeleteClouddeployAlphaDeliveryPipelineRequest) returns (google.protobuf.Empty);
  rpc ListClouddeployAlphaDeliveryPipeline(ListClouddeployAlphaDeliveryPipelineRequest) returns (ListClouddeployAlphaDeliveryPipelineResponse);
}
