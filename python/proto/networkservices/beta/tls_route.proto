// Copyright 2024 Google LLC. All Rights Reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//     http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";
// All generated protos should be opaque, with "xxx_hidden_" prepended to their field names.


package dcl;

import "proto/connector/sdk.proto";
import "proto/empty.proto";


message NetworkservicesBetaTlsRoute {
  string name = 1;
  string self_link = 2;
  string create_time = 3;
  string update_time = 4;
  string description = 5;
  repeated NetworkservicesBetaTlsRouteRules rules = 6;
  repeated string meshes = 7;
  repeated string gateways = 8;
  string project = 9;
  string location = 10;
}

message NetworkservicesBetaTlsRouteRules {
  repeated NetworkservicesBetaTlsRouteRulesMatches matches = 1;
  NetworkservicesBetaTlsRouteRulesAction action = 2;
}

message NetworkservicesBetaTlsRouteRulesMatches {
  repeated string sni_host = 1;
  repeated string alpn = 2;
}

message NetworkservicesBetaTlsRouteRulesAction {
  repeated NetworkservicesBetaTlsRouteRulesActionDestinations destinations = 1;
}

message NetworkservicesBetaTlsRouteRulesActionDestinations {
  string service_name = 1;
  int64 weight = 2;
}

message ApplyNetworkservicesBetaTlsRouteRequest {
  NetworkservicesBetaTlsRoute resource = 1;
  repeated LifecycleDirective lifecycle_directives = 2;
  string service_account_file = 3;
}

message DeleteNetworkservicesBetaTlsRouteRequest {
  string service_account_file = 1;
  NetworkservicesBetaTlsRoute resource = 2;
}

message ListNetworkservicesBetaTlsRouteRequest {
  string service_account_file = 1;
  string Project = 2;
  string Location = 3;
}

message ListNetworkservicesBetaTlsRouteResponse {
  repeated NetworkservicesBetaTlsRoute items = 1;
}

service NetworkservicesBetaTlsRouteService {
  rpc ApplyNetworkservicesBetaTlsRoute(ApplyNetworkservicesBetaTlsRouteRequest) returns (NetworkservicesBetaTlsRoute);
  rpc DeleteNetworkservicesBetaTlsRoute(DeleteNetworkservicesBetaTlsRouteRequest) returns (google.protobuf.Empty);
  rpc ListNetworkservicesBetaTlsRoute(ListNetworkservicesBetaTlsRouteRequest) returns (ListNetworkservicesBetaTlsRouteResponse);
}
