// Copyright 2021 Google LLC. All Rights Reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//     http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";

package dcl;

import "proto/connector/sdk.proto";
import "proto/empty.proto";

enum GkemulticloudAlphaAzureNodePoolStateEnum {
  GkemulticloudAlphaAzureNodePoolStateEnumNO_VALUE_DO_NOT_USE = 0;
  GkemulticloudAlphaAzureNodePoolStateEnumSTATE_UNSPECIFIED = 1;
  GkemulticloudAlphaAzureNodePoolStateEnumPROVISIONING = 2;
  GkemulticloudAlphaAzureNodePoolStateEnumRUNNING = 3;
  GkemulticloudAlphaAzureNodePoolStateEnumRECONCILING = 4;
  GkemulticloudAlphaAzureNodePoolStateEnumSTOPPING = 5;
  GkemulticloudAlphaAzureNodePoolStateEnumERROR = 6;
  GkemulticloudAlphaAzureNodePoolStateEnumDEGRADED = 7;
}

message GkemulticloudAlphaAzureNodePool {
  string name = 1;
  string version = 2;
  GkemulticloudAlphaAzureNodePoolConfig config = 3;
  string subnet_id = 4;
  GkemulticloudAlphaAzureNodePoolAutoscaling autoscaling = 5;
  GkemulticloudAlphaAzureNodePoolStateEnum state = 6;
  string uid = 7;
  bool reconciling = 8;
  string create_time = 9;
  string update_time = 10;
  string etag = 11;
  map<string, string> annotations = 12;
  GkemulticloudAlphaAzureNodePoolMaxPodsConstraint max_pods_constraint = 13;
  string azure_availability_zone = 14;
  string project = 15;
  string location = 16;
  string azure_cluster = 17;
}

message GkemulticloudAlphaAzureNodePoolConfig {
  string vm_size = 1;
  GkemulticloudAlphaAzureNodePoolConfigRootVolume root_volume = 2;
  map<string, string> tags = 3;
  GkemulticloudAlphaAzureNodePoolConfigSshConfig ssh_config = 4;
}

message GkemulticloudAlphaAzureNodePoolConfigRootVolume {
  int64 size_gib = 1;
}

message GkemulticloudAlphaAzureNodePoolConfigSshConfig {
  string authorized_key = 1;
}

message GkemulticloudAlphaAzureNodePoolAutoscaling {
  int64 min_node_count = 1;
  int64 max_node_count = 2;
}

message GkemulticloudAlphaAzureNodePoolMaxPodsConstraint {
  int64 max_pods_per_node = 1;
}

message ApplyGkemulticloudAlphaAzureNodePoolRequest {
  GkemulticloudAlphaAzureNodePool resource = 1;
  repeated LifecycleDirective lifecycle_directives = 2;
  string service_account_file = 3;
}

message DeleteGkemulticloudAlphaAzureNodePoolRequest {
  string service_account_file = 1;
  GkemulticloudAlphaAzureNodePool resource = 2;
}

message ListGkemulticloudAlphaAzureNodePoolRequest {
  string service_account_file = 1;
	GkemulticloudAlphaAzureNodePool resource = 2;
}

message ListGkemulticloudAlphaAzureNodePoolResponse {
  repeated GkemulticloudAlphaAzureNodePool items = 1;
}

service GkemulticloudAlphaAzureNodePoolService {
  rpc ApplyGkemulticloudAlphaAzureNodePool(ApplyGkemulticloudAlphaAzureNodePoolRequest) returns (GkemulticloudAlphaAzureNodePool);
  rpc DeleteGkemulticloudAlphaAzureNodePool(DeleteGkemulticloudAlphaAzureNodePoolRequest) returns (google.protobuf.Empty);
  rpc ListGkemulticloudAlphaAzureNodePool(ListGkemulticloudAlphaAzureNodePoolRequest) returns (ListGkemulticloudAlphaAzureNodePoolResponse);
}
