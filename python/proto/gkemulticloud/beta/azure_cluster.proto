// Copyright 2021 Google LLC. All Rights Reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//     http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";

package dcl;

import "proto/connector/sdk.proto";
import "proto/empty.proto";

enum GkemulticloudBetaAzureClusterStateEnum {
  GkemulticloudBetaAzureClusterStateEnumNO_VALUE_DO_NOT_USE = 0;
  GkemulticloudBetaAzureClusterStateEnumSTATE_UNSPECIFIED = 1;
  GkemulticloudBetaAzureClusterStateEnumPROVISIONING = 2;
  GkemulticloudBetaAzureClusterStateEnumRUNNING = 3;
  GkemulticloudBetaAzureClusterStateEnumRECONCILING = 4;
  GkemulticloudBetaAzureClusterStateEnumSTOPPING = 5;
  GkemulticloudBetaAzureClusterStateEnumERROR = 6;
  GkemulticloudBetaAzureClusterStateEnumDEGRADED = 7;
}

message GkemulticloudBetaAzureCluster {
  string name = 1;
  string description = 2;
  string azure_region = 3;
  string resource_group_id = 4;
  string azure_client = 5;
  GkemulticloudBetaAzureClusterNetworking networking = 6;
  GkemulticloudBetaAzureClusterControlPlane control_plane = 7;
  GkemulticloudBetaAzureClusterAuthorization authorization = 8;
  GkemulticloudBetaAzureClusterStateEnum state = 9;
  string endpoint = 10;
  string uid = 11;
  bool reconciling = 12;
  string create_time = 13;
  string update_time = 14;
  string etag = 15;
  map<string, string> annotations = 16;
  GkemulticloudBetaAzureClusterWorkloadIdentityConfig workload_identity_config = 17;
  string project = 18;
  string location = 19;
}

message GkemulticloudBetaAzureClusterNetworking {
  string virtual_network_id = 1;
  repeated string pod_address_cidr_blocks = 2;
  repeated string service_address_cidr_blocks = 3;
}

message GkemulticloudBetaAzureClusterControlPlane {
  string version = 1;
  string subnet_id = 2;
  string vm_size = 3;
  GkemulticloudBetaAzureClusterControlPlaneSshConfig ssh_config = 4;
  GkemulticloudBetaAzureClusterControlPlaneRootVolume root_volume = 5;
  GkemulticloudBetaAzureClusterControlPlaneMainVolume main_volume = 6;
  GkemulticloudBetaAzureClusterControlPlaneDatabaseEncryption database_encryption = 7;
  map<string, string> tags = 8;
}

message GkemulticloudBetaAzureClusterControlPlaneSshConfig {
  string authorized_key = 1;
}

message GkemulticloudBetaAzureClusterControlPlaneRootVolume {
  int64 size_gib = 1;
}

message GkemulticloudBetaAzureClusterControlPlaneMainVolume {
  int64 size_gib = 1;
}

message GkemulticloudBetaAzureClusterControlPlaneDatabaseEncryption {
  string resource_group_id = 1;
  string kms_key_identifier = 2;
}

message GkemulticloudBetaAzureClusterAuthorization {
  repeated GkemulticloudBetaAzureClusterAuthorizationAdminUsers admin_users = 1;
}

message GkemulticloudBetaAzureClusterAuthorizationAdminUsers {
  string username = 1;
}

message GkemulticloudBetaAzureClusterWorkloadIdentityConfig {
  string issuer_uri = 1;
  string workload_pool = 2;
  string identity_provider = 3;
}

message ApplyGkemulticloudBetaAzureClusterRequest {
  GkemulticloudBetaAzureCluster resource = 1;
  repeated LifecycleDirective lifecycle_directives = 2;
  string service_account_file = 3;
}

message DeleteGkemulticloudBetaAzureClusterRequest {
  string service_account_file = 1;
  GkemulticloudBetaAzureCluster resource = 2;
}

message ListGkemulticloudBetaAzureClusterRequest {
  string service_account_file = 1;
	GkemulticloudBetaAzureCluster resource = 2;
}

message ListGkemulticloudBetaAzureClusterResponse {
  repeated GkemulticloudBetaAzureCluster items = 1;
}

service GkemulticloudBetaAzureClusterService {
  rpc ApplyGkemulticloudBetaAzureCluster(ApplyGkemulticloudBetaAzureClusterRequest) returns (GkemulticloudBetaAzureCluster);
  rpc DeleteGkemulticloudBetaAzureCluster(DeleteGkemulticloudBetaAzureClusterRequest) returns (google.protobuf.Empty);
  rpc ListGkemulticloudBetaAzureCluster(ListGkemulticloudBetaAzureClusterRequest) returns (ListGkemulticloudBetaAzureClusterResponse);
}
