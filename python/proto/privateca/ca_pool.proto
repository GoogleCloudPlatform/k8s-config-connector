// Copyright 2024 Google LLC. All Rights Reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//     http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";
// All generated protos should be opaque, with "xxx_hidden_" prepended to their field names.


package dcl;

import "proto/connector/sdk.proto";
import "proto/empty.proto";


enum PrivatecaCaPoolTierEnum {
  PrivatecaCaPoolTierEnumNO_VALUE_DO_NOT_USE = 0;
  PrivatecaCaPoolTierEnumTIER_UNSPECIFIED = 1;
  PrivatecaCaPoolTierEnumENTERPRISE = 2;
  PrivatecaCaPoolTierEnumDEVOPS = 3;
}

enum PrivatecaCaPoolIssuancePolicyAllowedKeyTypesEllipticCurveSignatureAlgorithmEnum {
  PrivatecaCaPoolIssuancePolicyAllowedKeyTypesEllipticCurveSignatureAlgorithmEnumNO_VALUE_DO_NOT_USE = 0;
  PrivatecaCaPoolIssuancePolicyAllowedKeyTypesEllipticCurveSignatureAlgorithmEnumEC_SIGNATURE_ALGORITHM_UNSPECIFIED = 1;
  PrivatecaCaPoolIssuancePolicyAllowedKeyTypesEllipticCurveSignatureAlgorithmEnumECDSA_P256 = 2;
  PrivatecaCaPoolIssuancePolicyAllowedKeyTypesEllipticCurveSignatureAlgorithmEnumECDSA_P384 = 3;
  PrivatecaCaPoolIssuancePolicyAllowedKeyTypesEllipticCurveSignatureAlgorithmEnumEDDSA_25519 = 4;
}

enum PrivatecaCaPoolIssuancePolicyPassthroughExtensionsKnownExtensionsEnum {
  PrivatecaCaPoolIssuancePolicyPassthroughExtensionsKnownExtensionsEnumNO_VALUE_DO_NOT_USE = 0;
  PrivatecaCaPoolIssuancePolicyPassthroughExtensionsKnownExtensionsEnumKNOWN_CERTIFICATE_EXTENSION_UNSPECIFIED = 1;
  PrivatecaCaPoolIssuancePolicyPassthroughExtensionsKnownExtensionsEnumBASE_KEY_USAGE = 2;
  PrivatecaCaPoolIssuancePolicyPassthroughExtensionsKnownExtensionsEnumEXTENDED_KEY_USAGE = 3;
  PrivatecaCaPoolIssuancePolicyPassthroughExtensionsKnownExtensionsEnumCA_OPTIONS = 4;
  PrivatecaCaPoolIssuancePolicyPassthroughExtensionsKnownExtensionsEnumPOLICY_IDS = 5;
  PrivatecaCaPoolIssuancePolicyPassthroughExtensionsKnownExtensionsEnumAIA_OCSP_SERVERS = 6;
}

message PrivatecaCaPool {
  string name = 1;
  PrivatecaCaPoolTierEnum tier = 2;
  PrivatecaCaPoolIssuancePolicy issuance_policy = 3;
  PrivatecaCaPoolPublishingOptions publishing_options = 4;
  map<string, string> labels = 5;
  string project = 6;
  string location = 7;
}

message PrivatecaCaPoolIssuancePolicy {
  repeated PrivatecaCaPoolIssuancePolicyAllowedKeyTypes allowed_key_types = 1;
  string maximum_lifetime = 2;
  PrivatecaCaPoolIssuancePolicyAllowedIssuanceModes allowed_issuance_modes = 3;
  PrivatecaCaPoolIssuancePolicyBaselineValues baseline_values = 4;
  PrivatecaCaPoolIssuancePolicyIdentityConstraints identity_constraints = 5;
  PrivatecaCaPoolIssuancePolicyPassthroughExtensions passthrough_extensions = 6;
}

message PrivatecaCaPoolIssuancePolicyAllowedKeyTypes {
  PrivatecaCaPoolIssuancePolicyAllowedKeyTypesRsa rsa = 1;
  PrivatecaCaPoolIssuancePolicyAllowedKeyTypesEllipticCurve elliptic_curve = 2;
}

message PrivatecaCaPoolIssuancePolicyAllowedKeyTypesRsa {
  int64 min_modulus_size = 1;
  int64 max_modulus_size = 2;
}

message PrivatecaCaPoolIssuancePolicyAllowedKeyTypesEllipticCurve {
  PrivatecaCaPoolIssuancePolicyAllowedKeyTypesEllipticCurveSignatureAlgorithmEnum signature_algorithm = 1;
}

message PrivatecaCaPoolIssuancePolicyAllowedIssuanceModes {
  bool allow_csr_based_issuance = 1;
  bool allow_config_based_issuance = 2;
}

message PrivatecaCaPoolIssuancePolicyBaselineValues {
  PrivatecaCaPoolIssuancePolicyBaselineValuesKeyUsage key_usage = 1;
  PrivatecaCaPoolIssuancePolicyBaselineValuesCaOptions ca_options = 2;
  repeated PrivatecaCaPoolIssuancePolicyBaselineValuesPolicyIds policy_ids = 3;
  repeated string aia_ocsp_servers = 4;
  repeated PrivatecaCaPoolIssuancePolicyBaselineValuesAdditionalExtensions additional_extensions = 5;
}

message PrivatecaCaPoolIssuancePolicyBaselineValuesKeyUsage {
  PrivatecaCaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsage base_key_usage = 1;
  PrivatecaCaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsage extended_key_usage = 2;
  repeated PrivatecaCaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsages unknown_extended_key_usages = 3;
}

message PrivatecaCaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsage {
  bool digital_signature = 1;
  bool content_commitment = 2;
  bool key_encipherment = 3;
  bool data_encipherment = 4;
  bool key_agreement = 5;
  bool cert_sign = 6;
  bool crl_sign = 7;
  bool encipher_only = 8;
  bool decipher_only = 9;
}

message PrivatecaCaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsage {
  bool server_auth = 1;
  bool client_auth = 2;
  bool code_signing = 3;
  bool email_protection = 4;
  bool time_stamping = 5;
  bool ocsp_signing = 6;
}

message PrivatecaCaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsages {
  repeated int64 object_id_path = 1;
}

message PrivatecaCaPoolIssuancePolicyBaselineValuesCaOptions {
  bool is_ca = 1;
  int64 max_issuer_path_length = 2;
  bool zero_max_issuer_path_length = 3;
}

message PrivatecaCaPoolIssuancePolicyBaselineValuesPolicyIds {
  repeated int64 object_id_path = 1;
}

message PrivatecaCaPoolIssuancePolicyBaselineValuesAdditionalExtensions {
  PrivatecaCaPoolIssuancePolicyBaselineValuesAdditionalExtensionsObjectId object_id = 1;
  bool critical = 2;
  string value = 3;
}

message PrivatecaCaPoolIssuancePolicyBaselineValuesAdditionalExtensionsObjectId {
  repeated int64 object_id_path = 1;
}

message PrivatecaCaPoolIssuancePolicyIdentityConstraints {
  PrivatecaCaPoolIssuancePolicyIdentityConstraintsCelExpression cel_expression = 1;
  bool allow_subject_passthrough = 2;
  bool allow_subject_alt_names_passthrough = 3;
}

message PrivatecaCaPoolIssuancePolicyIdentityConstraintsCelExpression {
  string expression = 1;
  string title = 2;
  string description = 3;
  string location = 4;
}

message PrivatecaCaPoolIssuancePolicyPassthroughExtensions {
  repeated PrivatecaCaPoolIssuancePolicyPassthroughExtensionsKnownExtensionsEnum known_extensions = 1;
  repeated PrivatecaCaPoolIssuancePolicyPassthroughExtensionsAdditionalExtensions additional_extensions = 2;
}

message PrivatecaCaPoolIssuancePolicyPassthroughExtensionsAdditionalExtensions {
  repeated int64 object_id_path = 1;
}

message PrivatecaCaPoolPublishingOptions {
  bool publish_ca_cert = 1;
  bool publish_crl = 2;
}

message ApplyPrivatecaCaPoolRequest {
  PrivatecaCaPool resource = 1;
  repeated LifecycleDirective lifecycle_directives = 2;
  string service_account_file = 3;
}

message DeletePrivatecaCaPoolRequest {
  string service_account_file = 1;
  PrivatecaCaPool resource = 2;
}

message ListPrivatecaCaPoolRequest {
  string service_account_file = 1;
  string Project = 2;
  string Location = 3;
}

message ListPrivatecaCaPoolResponse {
  repeated PrivatecaCaPool items = 1;
}

service PrivatecaCaPoolService {
  rpc ApplyPrivatecaCaPool(ApplyPrivatecaCaPoolRequest) returns (PrivatecaCaPool);
  rpc DeletePrivatecaCaPool(DeletePrivatecaCaPoolRequest) returns (google.protobuf.Empty);
  rpc ListPrivatecaCaPool(ListPrivatecaCaPoolRequest) returns (ListPrivatecaCaPoolResponse);
}
