// Copyright 2024 Google LLC. All Rights Reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//     http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";
// All generated protos should be opaque, with "xxx_hidden_" prepended to their field names.


package dcl;

import "proto/connector/sdk.proto";
import "proto/empty.proto";


enum PrivatecaBetaCaPoolTierEnum {
  PrivatecaBetaCaPoolTierEnumNO_VALUE_DO_NOT_USE = 0;
  PrivatecaBetaCaPoolTierEnumTIER_UNSPECIFIED = 1;
  PrivatecaBetaCaPoolTierEnumENTERPRISE = 2;
  PrivatecaBetaCaPoolTierEnumDEVOPS = 3;
}

enum PrivatecaBetaCaPoolIssuancePolicyAllowedKeyTypesEllipticCurveSignatureAlgorithmEnum {
  PrivatecaBetaCaPoolIssuancePolicyAllowedKeyTypesEllipticCurveSignatureAlgorithmEnumNO_VALUE_DO_NOT_USE = 0;
  PrivatecaBetaCaPoolIssuancePolicyAllowedKeyTypesEllipticCurveSignatureAlgorithmEnumEC_SIGNATURE_ALGORITHM_UNSPECIFIED = 1;
  PrivatecaBetaCaPoolIssuancePolicyAllowedKeyTypesEllipticCurveSignatureAlgorithmEnumECDSA_P256 = 2;
  PrivatecaBetaCaPoolIssuancePolicyAllowedKeyTypesEllipticCurveSignatureAlgorithmEnumECDSA_P384 = 3;
  PrivatecaBetaCaPoolIssuancePolicyAllowedKeyTypesEllipticCurveSignatureAlgorithmEnumEDDSA_25519 = 4;
}

enum PrivatecaBetaCaPoolIssuancePolicyPassthroughExtensionsKnownExtensionsEnum {
  PrivatecaBetaCaPoolIssuancePolicyPassthroughExtensionsKnownExtensionsEnumNO_VALUE_DO_NOT_USE = 0;
  PrivatecaBetaCaPoolIssuancePolicyPassthroughExtensionsKnownExtensionsEnumKNOWN_CERTIFICATE_EXTENSION_UNSPECIFIED = 1;
  PrivatecaBetaCaPoolIssuancePolicyPassthroughExtensionsKnownExtensionsEnumBASE_KEY_USAGE = 2;
  PrivatecaBetaCaPoolIssuancePolicyPassthroughExtensionsKnownExtensionsEnumEXTENDED_KEY_USAGE = 3;
  PrivatecaBetaCaPoolIssuancePolicyPassthroughExtensionsKnownExtensionsEnumCA_OPTIONS = 4;
  PrivatecaBetaCaPoolIssuancePolicyPassthroughExtensionsKnownExtensionsEnumPOLICY_IDS = 5;
  PrivatecaBetaCaPoolIssuancePolicyPassthroughExtensionsKnownExtensionsEnumAIA_OCSP_SERVERS = 6;
}

message PrivatecaBetaCaPool {
  string name = 1;
  PrivatecaBetaCaPoolTierEnum tier = 2;
  PrivatecaBetaCaPoolIssuancePolicy issuance_policy = 3;
  PrivatecaBetaCaPoolPublishingOptions publishing_options = 4;
  map<string, string> labels = 5;
  string project = 6;
  string location = 7;
}

message PrivatecaBetaCaPoolIssuancePolicy {
  repeated PrivatecaBetaCaPoolIssuancePolicyAllowedKeyTypes allowed_key_types = 1;
  string maximum_lifetime = 2;
  PrivatecaBetaCaPoolIssuancePolicyAllowedIssuanceModes allowed_issuance_modes = 3;
  PrivatecaBetaCaPoolIssuancePolicyBaselineValues baseline_values = 4;
  PrivatecaBetaCaPoolIssuancePolicyIdentityConstraints identity_constraints = 5;
  PrivatecaBetaCaPoolIssuancePolicyPassthroughExtensions passthrough_extensions = 6;
}

message PrivatecaBetaCaPoolIssuancePolicyAllowedKeyTypes {
  PrivatecaBetaCaPoolIssuancePolicyAllowedKeyTypesRsa rsa = 1;
  PrivatecaBetaCaPoolIssuancePolicyAllowedKeyTypesEllipticCurve elliptic_curve = 2;
}

message PrivatecaBetaCaPoolIssuancePolicyAllowedKeyTypesRsa {
  int64 min_modulus_size = 1;
  int64 max_modulus_size = 2;
}

message PrivatecaBetaCaPoolIssuancePolicyAllowedKeyTypesEllipticCurve {
  PrivatecaBetaCaPoolIssuancePolicyAllowedKeyTypesEllipticCurveSignatureAlgorithmEnum signature_algorithm = 1;
}

message PrivatecaBetaCaPoolIssuancePolicyAllowedIssuanceModes {
  bool allow_csr_based_issuance = 1;
  bool allow_config_based_issuance = 2;
}

message PrivatecaBetaCaPoolIssuancePolicyBaselineValues {
  PrivatecaBetaCaPoolIssuancePolicyBaselineValuesKeyUsage key_usage = 1;
  PrivatecaBetaCaPoolIssuancePolicyBaselineValuesCaOptions ca_options = 2;
  repeated PrivatecaBetaCaPoolIssuancePolicyBaselineValuesPolicyIds policy_ids = 3;
  repeated string aia_ocsp_servers = 4;
  repeated PrivatecaBetaCaPoolIssuancePolicyBaselineValuesAdditionalExtensions additional_extensions = 5;
}

message PrivatecaBetaCaPoolIssuancePolicyBaselineValuesKeyUsage {
  PrivatecaBetaCaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsage base_key_usage = 1;
  PrivatecaBetaCaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsage extended_key_usage = 2;
  repeated PrivatecaBetaCaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsages unknown_extended_key_usages = 3;
}

message PrivatecaBetaCaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsage {
  bool digital_signature = 1;
  bool content_commitment = 2;
  bool key_encipherment = 3;
  bool data_encipherment = 4;
  bool key_agreement = 5;
  bool cert_sign = 6;
  bool crl_sign = 7;
  bool encipher_only = 8;
  bool decipher_only = 9;
}

message PrivatecaBetaCaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsage {
  bool server_auth = 1;
  bool client_auth = 2;
  bool code_signing = 3;
  bool email_protection = 4;
  bool time_stamping = 5;
  bool ocsp_signing = 6;
}

message PrivatecaBetaCaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsages {
  repeated int64 object_id_path = 1;
}

message PrivatecaBetaCaPoolIssuancePolicyBaselineValuesCaOptions {
  bool is_ca = 1;
  int64 max_issuer_path_length = 2;
  bool zero_max_issuer_path_length = 3;
}

message PrivatecaBetaCaPoolIssuancePolicyBaselineValuesPolicyIds {
  repeated int64 object_id_path = 1;
}

message PrivatecaBetaCaPoolIssuancePolicyBaselineValuesAdditionalExtensions {
  PrivatecaBetaCaPoolIssuancePolicyBaselineValuesAdditionalExtensionsObjectId object_id = 1;
  bool critical = 2;
  string value = 3;
}

message PrivatecaBetaCaPoolIssuancePolicyBaselineValuesAdditionalExtensionsObjectId {
  repeated int64 object_id_path = 1;
}

message PrivatecaBetaCaPoolIssuancePolicyIdentityConstraints {
  PrivatecaBetaCaPoolIssuancePolicyIdentityConstraintsCelExpression cel_expression = 1;
  bool allow_subject_passthrough = 2;
  bool allow_subject_alt_names_passthrough = 3;
}

message PrivatecaBetaCaPoolIssuancePolicyIdentityConstraintsCelExpression {
  string expression = 1;
  string title = 2;
  string description = 3;
  string location = 4;
}

message PrivatecaBetaCaPoolIssuancePolicyPassthroughExtensions {
  repeated PrivatecaBetaCaPoolIssuancePolicyPassthroughExtensionsKnownExtensionsEnum known_extensions = 1;
  repeated PrivatecaBetaCaPoolIssuancePolicyPassthroughExtensionsAdditionalExtensions additional_extensions = 2;
}

message PrivatecaBetaCaPoolIssuancePolicyPassthroughExtensionsAdditionalExtensions {
  repeated int64 object_id_path = 1;
}

message PrivatecaBetaCaPoolPublishingOptions {
  bool publish_ca_cert = 1;
  bool publish_crl = 2;
}

message ApplyPrivatecaBetaCaPoolRequest {
  PrivatecaBetaCaPool resource = 1;
  repeated LifecycleDirective lifecycle_directives = 2;
  string service_account_file = 3;
}

message DeletePrivatecaBetaCaPoolRequest {
  string service_account_file = 1;
  PrivatecaBetaCaPool resource = 2;
}

message ListPrivatecaBetaCaPoolRequest {
  string service_account_file = 1;
  string Project = 2;
  string Location = 3;
}

message ListPrivatecaBetaCaPoolResponse {
  repeated PrivatecaBetaCaPool items = 1;
}

service PrivatecaBetaCaPoolService {
  rpc ApplyPrivatecaBetaCaPool(ApplyPrivatecaBetaCaPoolRequest) returns (PrivatecaBetaCaPool);
  rpc DeletePrivatecaBetaCaPool(DeletePrivatecaBetaCaPoolRequest) returns (google.protobuf.Empty);
  rpc ListPrivatecaBetaCaPool(ListPrivatecaBetaCaPoolRequest) returns (ListPrivatecaBetaCaPoolResponse);
}
