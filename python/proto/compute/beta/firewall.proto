// Copyright 2021 Google LLC. All Rights Reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//     http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";

package dcl;

import "proto/connector/sdk.proto";
import "proto/empty.proto";

enum ComputeBetaFirewallDirectionEnum {
  ComputeBetaFirewallDirectionEnumNO_VALUE_DO_NOT_USE = 0;
  ComputeBetaFirewallDirectionEnumINGRESS = 1;
  ComputeBetaFirewallDirectionEnumEGRESS = 2;
}

message ComputeBetaFirewall {
  string creation_timestamp = 1;
  string description = 2;
  ComputeBetaFirewallDirectionEnum direction = 3;
  bool disabled = 4;
  string id = 5;
  ComputeBetaFirewallLogConfig log_config = 6;
  string name = 7;
  string network = 8;
  int64 priority = 9;
  string self_link = 10;
  string project = 11;
  repeated ComputeBetaFirewallAllowed allowed = 12;
  repeated ComputeBetaFirewallDenied denied = 13;
  repeated string destination_ranges = 14;
  repeated string source_ranges = 15;
  repeated string source_service_accounts = 16;
  repeated string source_tags = 17;
  repeated string target_service_accounts = 18;
  repeated string target_tags = 19;
}

message ComputeBetaFirewallLogConfig {
  bool enable = 1;
}

message ComputeBetaFirewallAllowed {
  string ip_protocol = 1;
  repeated string ports = 2;
  repeated string ip_protocol_alt = 3;
}

message ComputeBetaFirewallDenied {
  string ip_protocol = 1;
  repeated string ports = 2;
  repeated string ip_protocol_alt = 3;
}

message ApplyComputeBetaFirewallRequest {
  ComputeBetaFirewall resource = 1;
  repeated LifecycleDirective lifecycle_directives = 2;
  string service_account_file = 3;
}

message DeleteComputeBetaFirewallRequest {
  string service_account_file = 1;
  ComputeBetaFirewall resource = 2;
}

message ListComputeBetaFirewallRequest {
  string service_account_file = 1;
  string Project = 2;
}

message ListComputeBetaFirewallResponse {
  repeated ComputeBetaFirewall items = 1;
}

service ComputeBetaFirewallService {
  rpc ApplyComputeBetaFirewall(ApplyComputeBetaFirewallRequest) returns (ComputeBetaFirewall);
  rpc DeleteComputeBetaFirewall(DeleteComputeBetaFirewallRequest) returns (google.protobuf.Empty);
  rpc ListComputeBetaFirewall(ListComputeBetaFirewallRequest) returns (ListComputeBetaFirewallResponse);
}
