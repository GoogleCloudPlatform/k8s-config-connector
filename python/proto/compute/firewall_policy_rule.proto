// Copyright 2024 Google LLC. All Rights Reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//     http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";
// All generated protos should be opaque, with "xxx_hidden_" prepended to their field names.


package dcl;

import "proto/connector/sdk.proto";
import "proto/empty.proto";


enum ComputeFirewallPolicyRuleDirectionEnum {
  ComputeFirewallPolicyRuleDirectionEnumNO_VALUE_DO_NOT_USE = 0;
  ComputeFirewallPolicyRuleDirectionEnumINGRESS = 1;
  ComputeFirewallPolicyRuleDirectionEnumEGRESS = 2;
}

message ComputeFirewallPolicyRule {
  string description = 1;
  int64 priority = 2;
  ComputeFirewallPolicyRuleMatch match = 3;
  string action = 4;
  ComputeFirewallPolicyRuleDirectionEnum direction = 5;
  repeated string target_resources = 6;
  bool enable_logging = 7;
  int64 rule_tuple_count = 8;
  repeated string target_service_accounts = 9;
  bool disabled = 10;
  string kind = 11;
  string firewall_policy = 12;
}

message ComputeFirewallPolicyRuleMatch {
  repeated string src_ip_ranges = 1;
  repeated string dest_ip_ranges = 2;
  repeated string src_region_codes = 3;
  repeated string dest_region_codes = 4;
  repeated string src_threat_intelligences = 5;
  repeated string dest_threat_intelligences = 6;
  repeated string src_fqdns = 7;
  repeated string dest_fqdns = 8;
  repeated ComputeFirewallPolicyRuleMatchLayer4Configs layer4_configs = 9;
  repeated string src_address_groups = 10;
  repeated string dest_address_groups = 11;
}

message ComputeFirewallPolicyRuleMatchLayer4Configs {
  string ip_protocol = 1;
  repeated string ports = 2;
}

message ApplyComputeFirewallPolicyRuleRequest {
  ComputeFirewallPolicyRule resource = 1;
  repeated LifecycleDirective lifecycle_directives = 2;
  string service_account_file = 3;
}

message DeleteComputeFirewallPolicyRuleRequest {
  string service_account_file = 1;
  ComputeFirewallPolicyRule resource = 2;
}

message ListComputeFirewallPolicyRuleRequest {
  string service_account_file = 1;
  string FirewallPolicy = 2;
}

message ListComputeFirewallPolicyRuleResponse {
  repeated ComputeFirewallPolicyRule items = 1;
}

service ComputeFirewallPolicyRuleService {
  rpc ApplyComputeFirewallPolicyRule(ApplyComputeFirewallPolicyRuleRequest) returns (ComputeFirewallPolicyRule);
  rpc DeleteComputeFirewallPolicyRule(DeleteComputeFirewallPolicyRuleRequest) returns (google.protobuf.Empty);
  rpc ListComputeFirewallPolicyRule(ListComputeFirewallPolicyRuleRequest) returns (ListComputeFirewallPolicyRuleResponse);
}
