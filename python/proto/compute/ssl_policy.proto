// Copyright 2021 Google LLC. All Rights Reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//     http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";

package dcl;

import "proto/connector/sdk.proto";
import "proto/empty.proto";

enum ComputeSslPolicyProfileEnum {
  ComputeSslPolicyProfileEnumNO_VALUE_DO_NOT_USE = 0;
  ComputeSslPolicyProfileEnumCOMPATIBLE = 1;
  ComputeSslPolicyProfileEnumMODERN = 2;
  ComputeSslPolicyProfileEnumRESTRICTED = 3;
  ComputeSslPolicyProfileEnumCUSTOM = 4;
}

enum ComputeSslPolicyMinTlsVersionEnum {
  ComputeSslPolicyMinTlsVersionEnumNO_VALUE_DO_NOT_USE = 0;
  ComputeSslPolicyMinTlsVersionEnumTLS_1_0 = 1;
  ComputeSslPolicyMinTlsVersionEnumTLS_1_1 = 2;
  ComputeSslPolicyMinTlsVersionEnumTLS_1_2 = 3;
}

message ComputeSslPolicy {
  int64 id = 1;
  string self_link = 2;
  string name = 3;
  string description = 4;
  ComputeSslPolicyProfileEnum profile = 5;
  ComputeSslPolicyMinTlsVersionEnum min_tls_version = 6;
  repeated string enabled_feature = 7;
  repeated string custom_feature = 8;
  repeated ComputeSslPolicyWarning warning = 9;
  string project = 10;
}

message ComputeSslPolicyWarning {
  string code = 1;
  string message = 2;
  repeated ComputeSslPolicyWarningData data = 3;
}

message ComputeSslPolicyWarningData {
  string key = 1;
  string value = 2;
}

message ApplyComputeSslPolicyRequest {
  ComputeSslPolicy resource = 1;
  repeated LifecycleDirective lifecycle_directives = 2;
  string service_account_file = 3;
}

message DeleteComputeSslPolicyRequest {
  string service_account_file = 1;
  ComputeSslPolicy resource = 2;
}

message ListComputeSslPolicyRequest {
  string service_account_file = 1;
  string Project = 2;
}

message ListComputeSslPolicyResponse {
  repeated ComputeSslPolicy items = 1;
}

service ComputeSslPolicyService {
  rpc ApplyComputeSslPolicy(ApplyComputeSslPolicyRequest) returns (ComputeSslPolicy);
  rpc DeleteComputeSslPolicy(DeleteComputeSslPolicyRequest) returns (google.protobuf.Empty);
  rpc ListComputeSslPolicy(ListComputeSslPolicyRequest) returns (ListComputeSslPolicyResponse);
}
