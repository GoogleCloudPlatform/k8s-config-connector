// Copyright 2021 Google LLC. All Rights Reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//     http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";

package dcl;

import "proto/connector/sdk.proto";
import "proto/empty.proto";

enum ComputeDiskGuestOSFeatureTypeEnum {
  ComputeDiskGuestOSFeatureTypeEnumNO_VALUE_DO_NOT_USE = 0;
  ComputeDiskGuestOSFeatureTypeEnumFEATURE_TYPE_UNSPECIFIED = 1;
  ComputeDiskGuestOSFeatureTypeEnumVIRTIO_SCSI_MULTIQUEUE = 2;
  ComputeDiskGuestOSFeatureTypeEnumWINDOWS = 3;
  ComputeDiskGuestOSFeatureTypeEnumMULTI_IP_SUBNET = 4;
  ComputeDiskGuestOSFeatureTypeEnumUEFI_COMPATIBLE = 5;
  ComputeDiskGuestOSFeatureTypeEnumSECURE_BOOT = 6;
}

enum ComputeDiskGuestOSFeatureTypeAltEnum {
  ComputeDiskGuestOSFeatureTypeAltEnumNO_VALUE_DO_NOT_USE = 0;
  ComputeDiskGuestOSFeatureTypeAltEnumFEATURE_TYPE_UNSPECIFIED = 1;
  ComputeDiskGuestOSFeatureTypeAltEnumVIRTIO_SCSI_MULTIQUEUE = 2;
  ComputeDiskGuestOSFeatureTypeAltEnumWINDOWS = 3;
  ComputeDiskGuestOSFeatureTypeAltEnumMULTI_IP_SUBNET = 4;
  ComputeDiskGuestOSFeatureTypeAltEnumUEFI_COMPATIBLE = 5;
  ComputeDiskGuestOSFeatureTypeAltEnumSECURE_BOOT = 6;
}

enum ComputeDiskStatusEnum {
  ComputeDiskStatusEnumNO_VALUE_DO_NOT_USE = 0;
  ComputeDiskStatusEnumPENDING = 1;
  ComputeDiskStatusEnumRUNNING = 2;
  ComputeDiskStatusEnumDONE = 3;
}

enum ComputeDiskGuestOSFeaturesTypeEnum {
  ComputeDiskGuestOSFeaturesTypeEnumNO_VALUE_DO_NOT_USE = 0;
  ComputeDiskGuestOSFeaturesTypeEnumPATH = 1;
  ComputeDiskGuestOSFeaturesTypeEnumOTHER = 2;
  ComputeDiskGuestOSFeaturesTypeEnumPARAMETER = 3;
}

enum ComputeDiskGuestOSFeaturesTypeAltsEnum {
  ComputeDiskGuestOSFeaturesTypeAltsEnumNO_VALUE_DO_NOT_USE = 0;
  ComputeDiskGuestOSFeaturesTypeAltsEnumFEATURE_TYPE_UNSPECIFIED = 1;
  ComputeDiskGuestOSFeaturesTypeAltsEnumVIRTIO_SCSI_MULTIQUEUE = 2;
  ComputeDiskGuestOSFeaturesTypeAltsEnumWINDOWS = 3;
  ComputeDiskGuestOSFeaturesTypeAltsEnumMULTI_IP_SUBNET = 4;
  ComputeDiskGuestOSFeaturesTypeAltsEnumUEFI_COMPATIBLE = 5;
  ComputeDiskGuestOSFeaturesTypeAltsEnumSECURE_BOOT = 6;
  ComputeDiskGuestOSFeaturesTypeAltsEnumSEV_CAPABLE = 7;
}

message ComputeDisk {
  string self_link = 1;
  string description = 2;
  ComputeDiskEncryptionKey disk_encryption_key = 3;
  repeated ComputeDiskGuestOSFeature guest_os_feature = 4;
  map<string, string> labels = 5;
  string label_fingerprint = 6;
  repeated string license = 7;
  string name = 8;
  string region = 9;
  repeated string replica_zones = 10;
  repeated string resource_policy = 11;
  int64 size_gb = 12;
  string source_image = 13;
  ComputeDiskEncryptionKey source_image_encryption_key = 14;
  string source_image_id = 15;
  string source_snapshot = 16;
  ComputeDiskEncryptionKey source_snapshot_encryption_key = 17;
  string source_snapshot_id = 18;
  string type = 19;
  string zone = 20;
  string project = 21;
  int64 id = 22;
  ComputeDiskStatusEnum status = 23;
  string options = 24;
  repeated string licenses = 25;
  repeated ComputeDiskGuestOSFeatures guest_os_features = 26;
  string last_attach_timestamp = 27;
  string last_detach_timestamp = 28;
  repeated string users = 29;
  repeated int64 license_codes = 30;
  int64 physical_block_size_bytes = 31;
  repeated string resource_policies = 32;
  string source_disk = 33;
  string source_disk_id = 34;
  string location = 35;
}

message ComputeDiskGuestOSFeature {
  ComputeDiskGuestOSFeatureTypeEnum type = 1;
  repeated ComputeDiskGuestOSFeatureTypeAltEnum type_alt = 2;
}

message ComputeDiskEncryptionKey {
  string raw_key = 1;
  string kms_key_name = 2;
  string sha256 = 3;
  string kms_key_service_account = 4;
}

message ComputeDiskGuestOSFeatures {
  ComputeDiskGuestOSFeaturesTypeEnum type = 1;
  repeated ComputeDiskGuestOSFeaturesTypeAltsEnum type_alts = 2;
}

message ApplyComputeDiskRequest {
  ComputeDisk resource = 1;
  repeated LifecycleDirective lifecycle_directives = 2;
  string service_account_file = 3;
}

message DeleteComputeDiskRequest {
  string service_account_file = 1;
  ComputeDisk resource = 2;
}

message ListComputeDiskRequest {
  string service_account_file = 1;
  string Project = 2;
  string Location = 3;
}

message ListComputeDiskResponse {
  repeated ComputeDisk items = 1;
}

service ComputeDiskService {
  rpc ApplyComputeDisk(ApplyComputeDiskRequest) returns (ComputeDisk);
  rpc DeleteComputeDisk(DeleteComputeDiskRequest) returns (google.protobuf.Empty);
  rpc ListComputeDisk(ListComputeDiskRequest) returns (ListComputeDiskResponse);
}
