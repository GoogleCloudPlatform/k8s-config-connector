// Copyright 2024 Google LLC. All Rights Reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//     http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";
// All generated protos should be opaque, with "xxx_hidden_" prepended to their field names.


package dcl;

import "proto/connector/sdk.proto";
import "proto/empty.proto";


enum ComputeSubnetworkPurposeEnum {
  ComputeSubnetworkPurposeEnumNO_VALUE_DO_NOT_USE = 0;
  ComputeSubnetworkPurposeEnumINTERNAL_HTTPS_LOAD_BALANCER = 1;
  ComputeSubnetworkPurposeEnumPRIVATE = 2;
  ComputeSubnetworkPurposeEnumAGGREGATE = 3;
  ComputeSubnetworkPurposeEnumPRIVATE_SERVICE_CONNECT = 4;
  ComputeSubnetworkPurposeEnumCLOUD_EXTENSION = 5;
  ComputeSubnetworkPurposeEnumPRIVATE_NAT = 6;
}

enum ComputeSubnetworkRoleEnum {
  ComputeSubnetworkRoleEnumNO_VALUE_DO_NOT_USE = 0;
  ComputeSubnetworkRoleEnumACTIVE = 1;
  ComputeSubnetworkRoleEnumBACKUP = 2;
}

enum ComputeSubnetworkLogConfigAggregationIntervalEnum {
  ComputeSubnetworkLogConfigAggregationIntervalEnumNO_VALUE_DO_NOT_USE = 0;
  ComputeSubnetworkLogConfigAggregationIntervalEnumINTERVAL_5_SEC = 1;
  ComputeSubnetworkLogConfigAggregationIntervalEnumINTERVAL_30_SEC = 2;
  ComputeSubnetworkLogConfigAggregationIntervalEnumINTERVAL_1_MIN = 3;
  ComputeSubnetworkLogConfigAggregationIntervalEnumINTERVAL_5_MIN = 4;
  ComputeSubnetworkLogConfigAggregationIntervalEnumINTERVAL_10_MIN = 5;
  ComputeSubnetworkLogConfigAggregationIntervalEnumINTERVAL_15_MIN = 6;
}

enum ComputeSubnetworkLogConfigMetadataEnum {
  ComputeSubnetworkLogConfigMetadataEnumNO_VALUE_DO_NOT_USE = 0;
  ComputeSubnetworkLogConfigMetadataEnumEXCLUDE_ALL_METADATA = 1;
  ComputeSubnetworkLogConfigMetadataEnumINCLUDE_ALL_METADATA = 2;
}

message ComputeSubnetwork {
  string creation_timestamp = 1;
  string description = 2;
  string gateway_address = 3;
  string ip_cidr_range = 4;
  string name = 5;
  string network = 6;
  string fingerprint = 7;
  ComputeSubnetworkPurposeEnum purpose = 8;
  ComputeSubnetworkRoleEnum role = 9;
  repeated ComputeSubnetworkSecondaryIPRanges secondary_ip_ranges = 10;
  bool private_ip_google_access = 11;
  string region = 12;
  ComputeSubnetworkLogConfig log_config = 13;
  string project = 14;
  string self_link = 15;
  bool enable_flow_logs = 16;
}

message ComputeSubnetworkSecondaryIPRanges {
  string range_name = 1;
  string ip_cidr_range = 2;
}

message ComputeSubnetworkLogConfig {
  ComputeSubnetworkLogConfigAggregationIntervalEnum aggregation_interval = 1;
  double flow_sampling = 2;
  ComputeSubnetworkLogConfigMetadataEnum metadata = 3;
}

message ApplyComputeSubnetworkRequest {
  ComputeSubnetwork resource = 1;
  repeated LifecycleDirective lifecycle_directives = 2;
  string service_account_file = 3;
}

message DeleteComputeSubnetworkRequest {
  string service_account_file = 1;
  ComputeSubnetwork resource = 2;
}

message ListComputeSubnetworkRequest {
  string service_account_file = 1;
  string Project = 2;
  string Region = 3;
}

message ListComputeSubnetworkResponse {
  repeated ComputeSubnetwork items = 1;
}

service ComputeSubnetworkService {
  rpc ApplyComputeSubnetwork(ApplyComputeSubnetworkRequest) returns (ComputeSubnetwork);
  rpc DeleteComputeSubnetwork(DeleteComputeSubnetworkRequest) returns (google.protobuf.Empty);
  rpc ListComputeSubnetwork(ListComputeSubnetworkRequest) returns (ListComputeSubnetworkResponse);
}
