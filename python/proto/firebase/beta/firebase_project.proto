// Copyright 2024 Google LLC. All Rights Reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//     http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";
// All generated protos should be opaque, with "xxx_hidden_" prepended to their field names.


package dcl;

import "proto/connector/sdk.proto";
import "proto/empty.proto";


enum FirebaseBetaFirebaseProjectStateEnum {
  FirebaseBetaFirebaseProjectStateEnumNO_VALUE_DO_NOT_USE = 0;
  FirebaseBetaFirebaseProjectStateEnumSTATE_UNSPECIFIED = 1;
  FirebaseBetaFirebaseProjectStateEnumACTIVE = 2;
  FirebaseBetaFirebaseProjectStateEnumDELETED = 3;
}

message FirebaseBetaFirebaseProject {
  string project_id = 1;
  int64 project_number = 2;
  string display_name = 3;
  FirebaseBetaFirebaseProjectResources resources = 4;
  FirebaseBetaFirebaseProjectStateEnum state = 5;
  map<string, string> annotations = 6;
  string project = 7;
}

message FirebaseBetaFirebaseProjectResources {
  string hosting_site = 1;
  string realtime_database_instance = 2;
  string storage_bucket = 3;
  string location_id = 4;
}

message ApplyFirebaseBetaFirebaseProjectRequest {
  FirebaseBetaFirebaseProject resource = 1;
  repeated LifecycleDirective lifecycle_directives = 2;
  string service_account_file = 3;
}

message DeleteFirebaseBetaFirebaseProjectRequest {
  string service_account_file = 1;
  FirebaseBetaFirebaseProject resource = 2;
}

message ListFirebaseBetaFirebaseProjectRequest {
  string service_account_file = 1;
}

message ListFirebaseBetaFirebaseProjectResponse {
  repeated FirebaseBetaFirebaseProject items = 1;
}

service FirebaseBetaFirebaseProjectService {
  rpc ApplyFirebaseBetaFirebaseProject(ApplyFirebaseBetaFirebaseProjectRequest) returns (FirebaseBetaFirebaseProject);
  rpc DeleteFirebaseBetaFirebaseProject(DeleteFirebaseBetaFirebaseProjectRequest) returns (google.protobuf.Empty);
  rpc ListFirebaseBetaFirebaseProject(ListFirebaseBetaFirebaseProjectRequest) returns (ListFirebaseBetaFirebaseProjectResponse);
}
