// Copyright 2024 Google LLC. All Rights Reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//     http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";
// All generated protos should be opaque, with "xxx_hidden_" prepended to their field names.


package dcl;

import "proto/connector/sdk.proto";
import "proto/empty.proto";


enum ContainerawsAlphaNodePoolConfigRootVolumeVolumeTypeEnum {
  ContainerawsAlphaNodePoolConfigRootVolumeVolumeTypeEnumNO_VALUE_DO_NOT_USE = 0;
  ContainerawsAlphaNodePoolConfigRootVolumeVolumeTypeEnumVOLUME_TYPE_UNSPECIFIED = 1;
  ContainerawsAlphaNodePoolConfigRootVolumeVolumeTypeEnumGP2 = 2;
  ContainerawsAlphaNodePoolConfigRootVolumeVolumeTypeEnumGP3 = 3;
}

enum ContainerawsAlphaNodePoolConfigTaintsEffectEnum {
  ContainerawsAlphaNodePoolConfigTaintsEffectEnumNO_VALUE_DO_NOT_USE = 0;
  ContainerawsAlphaNodePoolConfigTaintsEffectEnumEFFECT_UNSPECIFIED = 1;
  ContainerawsAlphaNodePoolConfigTaintsEffectEnumNO_SCHEDULE = 2;
  ContainerawsAlphaNodePoolConfigTaintsEffectEnumPREFER_NO_SCHEDULE = 3;
  ContainerawsAlphaNodePoolConfigTaintsEffectEnumNO_EXECUTE = 4;
}

enum ContainerawsAlphaNodePoolConfigInstancePlacementTenancyEnum {
  ContainerawsAlphaNodePoolConfigInstancePlacementTenancyEnumNO_VALUE_DO_NOT_USE = 0;
  ContainerawsAlphaNodePoolConfigInstancePlacementTenancyEnumTENANCY_UNSPECIFIED = 1;
  ContainerawsAlphaNodePoolConfigInstancePlacementTenancyEnumDEFAULT = 2;
  ContainerawsAlphaNodePoolConfigInstancePlacementTenancyEnumDEDICATED = 3;
  ContainerawsAlphaNodePoolConfigInstancePlacementTenancyEnumHOST = 4;
}

enum ContainerawsAlphaNodePoolStateEnum {
  ContainerawsAlphaNodePoolStateEnumNO_VALUE_DO_NOT_USE = 0;
  ContainerawsAlphaNodePoolStateEnumSTATE_UNSPECIFIED = 1;
  ContainerawsAlphaNodePoolStateEnumPROVISIONING = 2;
  ContainerawsAlphaNodePoolStateEnumRUNNING = 3;
  ContainerawsAlphaNodePoolStateEnumRECONCILING = 4;
  ContainerawsAlphaNodePoolStateEnumSTOPPING = 5;
  ContainerawsAlphaNodePoolStateEnumERROR = 6;
  ContainerawsAlphaNodePoolStateEnumDEGRADED = 7;
}

message ContainerawsAlphaNodePool {
  string name = 1;
  string version = 2;
  ContainerawsAlphaNodePoolConfig config = 3;
  ContainerawsAlphaNodePoolAutoscaling autoscaling = 4;
  string subnet_id = 5;
  ContainerawsAlphaNodePoolStateEnum state = 6;
  string uid = 7;
  bool reconciling = 8;
  string create_time = 9;
  string update_time = 10;
  string etag = 11;
  map<string, string> annotations = 12;
  ContainerawsAlphaNodePoolMaxPodsConstraint max_pods_constraint = 13;
  ContainerawsAlphaNodePoolManagement management = 14;
  ContainerawsAlphaNodePoolUpdateSettings update_settings = 15;
  string project = 16;
  string location = 17;
  string cluster = 18;
}

message ContainerawsAlphaNodePoolConfig {
  string instance_type = 1;
  ContainerawsAlphaNodePoolConfigRootVolume root_volume = 2;
  repeated ContainerawsAlphaNodePoolConfigTaints taints = 3;
  map<string, string> labels = 4;
  map<string, string> tags = 5;
  string iam_instance_profile = 6;
  ContainerawsAlphaNodePoolConfigConfigEncryption config_encryption = 7;
  ContainerawsAlphaNodePoolConfigSshConfig ssh_config = 8;
  ContainerawsAlphaNodePoolConfigSpotConfig spot_config = 9;
  repeated string security_group_ids = 10;
  ContainerawsAlphaNodePoolConfigProxyConfig proxy_config = 11;
  ContainerawsAlphaNodePoolConfigInstancePlacement instance_placement = 12;
  string image_type = 13;
  ContainerawsAlphaNodePoolConfigAutoscalingMetricsCollection autoscaling_metrics_collection = 14;
}

message ContainerawsAlphaNodePoolConfigRootVolume {
  int64 size_gib = 1;
  ContainerawsAlphaNodePoolConfigRootVolumeVolumeTypeEnum volume_type = 2;
  int64 iops = 3;
  int64 throughput = 4;
  string kms_key_arn = 5;
}

message ContainerawsAlphaNodePoolConfigTaints {
  string key = 1;
  string value = 2;
  ContainerawsAlphaNodePoolConfigTaintsEffectEnum effect = 3;
}

message ContainerawsAlphaNodePoolConfigConfigEncryption {
  string kms_key_arn = 1;
}

message ContainerawsAlphaNodePoolConfigSshConfig {
  string ec2_key_pair = 1;
}

message ContainerawsAlphaNodePoolConfigSpotConfig {
  repeated string instance_types = 1;
}

message ContainerawsAlphaNodePoolConfigProxyConfig {
  string secret_arn = 1;
  string secret_version = 2;
}

message ContainerawsAlphaNodePoolConfigInstancePlacement {
  ContainerawsAlphaNodePoolConfigInstancePlacementTenancyEnum tenancy = 1;
}

message ContainerawsAlphaNodePoolConfigAutoscalingMetricsCollection {
  string granularity = 1;
  repeated string metrics = 2;
}

message ContainerawsAlphaNodePoolAutoscaling {
  int64 min_node_count = 1;
  int64 max_node_count = 2;
}

message ContainerawsAlphaNodePoolMaxPodsConstraint {
  int64 max_pods_per_node = 1;
}

message ContainerawsAlphaNodePoolManagement {
  bool auto_repair = 1;
}

message ContainerawsAlphaNodePoolUpdateSettings {
  ContainerawsAlphaNodePoolUpdateSettingsSurgeSettings surge_settings = 1;
}

message ContainerawsAlphaNodePoolUpdateSettingsSurgeSettings {
  int64 max_surge = 1;
  int64 max_unavailable = 2;
}

message ApplyContainerawsAlphaNodePoolRequest {
  ContainerawsAlphaNodePool resource = 1;
  repeated LifecycleDirective lifecycle_directives = 2;
  string service_account_file = 3;
}

message DeleteContainerawsAlphaNodePoolRequest {
  string service_account_file = 1;
  ContainerawsAlphaNodePool resource = 2;
}

message ListContainerawsAlphaNodePoolRequest {
  string service_account_file = 1;
  string Project = 2;
  string Location = 3;
  string Cluster = 4;
}

message ListContainerawsAlphaNodePoolResponse {
  repeated ContainerawsAlphaNodePool items = 1;
}

service ContainerawsAlphaNodePoolService {
  rpc ApplyContainerawsAlphaNodePool(ApplyContainerawsAlphaNodePoolRequest) returns (ContainerawsAlphaNodePool);
  rpc DeleteContainerawsAlphaNodePool(DeleteContainerawsAlphaNodePoolRequest) returns (google.protobuf.Empty);
  rpc ListContainerawsAlphaNodePool(ListContainerawsAlphaNodePoolRequest) returns (ListContainerawsAlphaNodePoolResponse);
}
