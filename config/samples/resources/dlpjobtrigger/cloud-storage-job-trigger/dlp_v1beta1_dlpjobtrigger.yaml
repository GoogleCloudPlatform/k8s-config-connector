# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: dlp.cnrm.cloud.google.com/v1beta1
kind: DLPJobTrigger
metadata:
  name: dlpjobtrigger-sample-cloudstoragejobtrigger
spec:
  projectRef:
    # Replace "${PROJECT_ID?}" with your project ID
    external: "projects/${PROJECT_ID?}"
  location: "us-west2"
  description: "A sample job trigger using cloud storage"
  displayName: "sample-trigger"
  triggers:
  - schedule:
      recurrencePeriodDuration: "86400s"
  status: "HEALTHY"
  inspectJob:
    storageConfig:
      cloudStorageOptions:
        fileSet:
          # Replace "${DLP_TEST_BUCKET?}" with your storage bucket name
          url: "gs://${DLP_TEST_BUCKET?}/*"
        bytesLimitPerFile: 1
        fileTypes:
        - "BINARY_FILE"
        - "TEXT_FILE"
        sampleMethod: "TOP"
        filesLimitPercent: 50
      timespanConfig:
        startTime: "2017-01-15T01:30:15.010Z"
        endTime: "2018-01-15T01:30:15.010Z"
        timestampField:
          name: "sample-field"
        enableAutoPopulationOfTimespanConfig: true
    inspectConfig:
      infoTypes:
      - name: "AGE"
      minLikelihood: "UNLIKELY"
      limits:
        maxFindingsPerItem: 3
        maxFindingsPerRequest: 3
        maxFindingsPerInfoType:
        - infoType:
            name: "AGE"
            version: "1"
          maxFindings: 3
      includeQuote: true
      excludeInfoTypes: true
      customInfoTypes:
      - infoType:
          name: "PHONE_NUMBER"
          version: "1"
        likelihood: "LIKELY"
        detectionRules:
        - hotwordRule:
            hotwordRegex:
              pattern: "([1-3])([0-9]*)"
              groupIndexes:
              - 1
              - 2
            proximity:
              windowBefore: 3
              windowAfter: 3
            likelihoodAdjustment:
              fixedLikelihood: "VERY_LIKELY"
        - hotwordRule:
            likelihoodAdjustment:
              relativeLikelihood: -1
        exclusionType: "EXCLUSION_TYPE_EXCLUDE"
        dictionary:
          wordList:
            words:
            - "one"
            - "two"
      - dictionary:
          cloudStoragePath:
            # Replace "${DLP_TEST_BUCKET?}" with your storage bucket name
            path: "gs://${DLP_TEST_BUCKET?}/dictionary-1"
      - regex:
          pattern: "([a-e]+)([f-z]*)"
          groupIndexes:
          - 1
          - 2
      - storedType:
          nameRef:
            name: "dlpjobtrigger-dep-cloudstoragejobtrigger"
      ruleSet:
      - infoTypes:
        - name: "AGE"
          version: "1"
        rules:
        - hotwordRule:
            hotwordRegex:
              pattern: "([1-4])([0-9]*)"
              groupIndexes:
              - 1
              - 2
            proximity:
              windowBefore: 3
              windowAfter: 3
            likelihoodAdjustment:
              fixedLikelihood: "VERY_LIKELY"
        - hotwordRule:
            likelihoodAdjustment:
              relativeLikelihood: -1
        - exclusionRule:
            matchingType: "MATCHING_TYPE_FULL_MATCH"
            dictionary:
              wordList:
                words:
                - "one"
                - "two"
        - exclusionRule:
            dictionary:
              cloudStoragePath:
                # Replace "${DLP_TEST_BUCKET?}" with your storage bucket name
                path: "gs://${DLP_TEST_BUCKET?}/dictionary-2"
        - exclusionRule:
            regex:
              pattern: "([+-])([0-9]+)"
              groupIndexes:
              - 1
              - 2
        - exclusionRule:
            excludeInfoTypes:
              infoTypes:
              - name: "AGE"
                version: "1"
    inspectTemplateRef:
      external: "fake"
