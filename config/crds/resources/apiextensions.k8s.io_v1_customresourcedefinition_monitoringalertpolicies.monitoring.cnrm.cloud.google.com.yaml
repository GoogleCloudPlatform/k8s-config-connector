apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cnrm.cloud.google.com/version: 0.0.0-dev
  creationTimestamp: null
  labels:
    cnrm.cloud.google.com/managed-by-kcc: "true"
    cnrm.cloud.google.com/stability-level: stable
    cnrm.cloud.google.com/system: "true"
    cnrm.cloud.google.com/tf2crd: "true"
  name: monitoringalertpolicies.monitoring.cnrm.cloud.google.com
spec:
  group: monitoring.cnrm.cloud.google.com
  names:
    categories:
    - gcp
    kind: MonitoringAlertPolicy
    listKind: MonitoringAlertPolicyList
    plural: monitoringalertpolicies
    shortNames:
    - gcpmonitoringalertpolicy
    - gcpmonitoringalertpolicies
    singular: monitoringalertpolicy
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: When 'True', the most recent reconcile of the resource succeeded
      jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - description: The reason for the value in 'Ready'
      jsonPath: .status.conditions[?(@.type=='Ready')].reason
      name: Status
      type: string
    - description: The last transition time for the value in 'Status'
      jsonPath: .status.conditions[?(@.type=='Ready')].lastTransitionTime
      name: Status Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: MonitoringAlertPolicy is the Schema for the monitoring API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              alertStrategy:
                description: Control over how this alert policy's notification channels
                  are notified.
                properties:
                  autoClose:
                    description: If an alert policy that was active has no data for
                      this long, any open incidents will close
                    type: string
                  notificationChannelStrategy:
                    description: Control how notifications will be sent out, on a
                      per-channel basis.
                    items:
                      properties:
                        notificationChannelNames:
                          description: |-
                            The full REST resource name for the notification channels that these
                             settings apply to. Each of these correspond to the name field in one
                             of the NotificationChannel objects referenced in the
                             notification_channels field of this AlertPolicy.
                             The format is:

                                 projects/[PROJECT_ID_OR_NUMBER]/notificationChannels/[CHANNEL_ID]
                          items:
                            type: string
                          type: array
                        renotifyInterval:
                          description: The frequency at which to send reminder notifications
                            for open incidents.
                          type: string
                      type: object
                    type: array
                  notificationRateLimit:
                    description: |-
                      Required for alert policies with a `LogMatch` condition.

                       This limit is not implemented for alert policies that are not log-based.
                    properties:
                      period:
                        description: Not more than one notification per `period`.
                        type: string
                    type: object
                type: object
              combiner:
                description: How to combine the results of multiple conditions to
                  determine if an incident should be opened. If `condition_time_series_query_language`
                  is present, this must be `COMBINE_UNSPECIFIED`.
                type: string
              conditions:
                description: A list of conditions for the policy. The conditions are
                  combined by AND or OR according to the `combiner` field. If the
                  combined conditions evaluate to true, then an incident is created.
                  A policy can have from one to six conditions. If `condition_time_series_query_language`
                  is present, it must be the only `condition`. If `condition_monitoring_query_language`
                  is present, it must be the only `condition`.
                items:
                  properties:
                    conditionAbsent:
                      description: A condition that checks that a time series continues
                        to receive new data points.
                      properties:
                        aggregations:
                          description: |-
                            Specifies the alignment of data points in individual time series as
                             well as how to combine the retrieved time series together (such as
                             when aggregating multiple streams on each resource to a single
                             stream for each resource or when aggregating streams across all
                             members of a group of resources). Multiple aggregations
                             are applied in the order specified.

                             This field is similar to the one in the [`ListTimeSeries`
                             request](https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.timeSeries/list).
                             It is advisable to use the `ListTimeSeries` method when debugging this
                             field.
                          items:
                            properties:
                              alignmentPeriod:
                                description: |-
                                  The `alignment_period` specifies a time interval, in seconds, that is used
                                   to divide the data in all the
                                   [time series][google.monitoring.v3.TimeSeries] into consistent blocks of
                                   time. This will be done before the per-series aligner can be applied to
                                   the data.

                                   The value must be at least 60 seconds. If a per-series aligner other than
                                   `ALIGN_NONE` is specified, this field is required or an error is returned.
                                   If no per-series aligner is specified, or the aligner `ALIGN_NONE` is
                                   specified, then this field is ignored.

                                   The maximum value of the `alignment_period` is 2 years, or 104 weeks.
                                type: string
                              crossSeriesReducer:
                                description: |-
                                  The reduction operation to be used to combine time series into a single
                                   time series, where the value of each data point in the resulting series is
                                   a function of all the already aligned values in the input time series.

                                   Not all reducer operations can be applied to all time series. The valid
                                   choices depend on the `metric_kind` and the `value_type` of the original
                                   time series. Reduction can yield a time series with a different
                                   `metric_kind` or `value_type` than the input time series.

                                   Time series data must first be aligned (see `per_series_aligner`) in order
                                   to perform cross-time series reduction. If `cross_series_reducer` is
                                   specified, then `per_series_aligner` must be specified, and must not be
                                   `ALIGN_NONE`. An `alignment_period` must also be specified; otherwise, an
                                   error is returned.
                                type: string
                              groupByFields:
                                description: The set of fields to preserve when `cross_series_reducer`
                                  is specified. The `group_by_fields` determine how
                                  the time series are partitioned into subsets prior
                                  to applying the aggregation operation. Each subset
                                  contains time series that have the same value for
                                  each of the grouping fields. Each individual time
                                  series is a member of exactly one subset. The `cross_series_reducer`
                                  is applied to each subset of time series. It is
                                  not possible to reduce across different resource
                                  types, so this field implicitly contains `resource.type`.  Fields
                                  not specified in `group_by_fields` are aggregated
                                  away.  If `group_by_fields` is not specified and
                                  all the time series have the same resource type,
                                  then the time series are aggregated into a single
                                  output time series. If `cross_series_reducer` is
                                  not defined, this field is ignored.
                                items:
                                  type: string
                                type: array
                              perSeriesAligner:
                                description: |-
                                  An `Aligner` describes how to bring the data points in a single
                                   time series into temporal alignment. Except for `ALIGN_NONE`, all
                                   alignments cause all the data points in an `alignment_period` to be
                                   mathematically grouped together, resulting in a single data point for
                                   each `alignment_period` with end timestamp at the end of the period.

                                   Not all alignment operations may be applied to all time series. The valid
                                   choices depend on the `metric_kind` and `value_type` of the original time
                                   series. Alignment can change the `metric_kind` or the `value_type` of
                                   the time series.

                                   Time series data must be aligned in order to perform cross-time
                                   series reduction. If `cross_series_reducer` is specified, then
                                   `per_series_aligner` must be specified and not equal to `ALIGN_NONE`
                                   and `alignment_period` must be specified; otherwise, an error is
                                   returned.
                                type: string
                            type: object
                          type: array
                        duration:
                          description: The amount of time that a time series must
                            fail to report new data to be considered failing. The
                            minimum value of this field is 120 seconds. Larger values
                            that are a multiple of a minute--for example, 240 or 300
                            seconds--are supported. If an invalid value is given,
                            an error will be returned. The `Duration.nanos` field
                            is ignored.
                          type: string
                        filter:
                          description: |-
                            Required. A
                             [filter](https://cloud.google.com/monitoring/api/v3/filters) that
                             identifies which time series should be compared with the threshold.

                             The filter is similar to the one that is specified in the
                             [`ListTimeSeries`
                             request](https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.timeSeries/list)
                             (that call is useful to verify the time series that will be retrieved /
                             processed). The filter must specify the metric type and the resource
                             type. Optionally, it can specify resource labels and metric labels.
                             This field must not exceed 2048 Unicode characters in length.
                          type: string
                        trigger:
                          description: The number/percent of time series for which
                            the comparison must hold in order for the condition to
                            trigger. If unspecified, then the condition will trigger
                            if the comparison is true for any of the time series that
                            have been identified by `filter` and `aggregations`.
                          properties:
                            count:
                              description: The absolute number of time series that
                                must fail the predicate for the condition to be triggered.
                              format: int32
                              type: integer
                            percent:
                              description: The percentage of time series that must
                                fail the predicate for the condition to be triggered.
                              type: number
                          type: object
                      type: object
                    conditionMatchedLog:
                      description: A condition that checks for log messages matching
                        given constraints. If set, no other conditions can be present.
                      properties:
                        filter:
                          description: Required. A logs-based filter. See [Advanced
                            Logs Queries](https://cloud.google.com/logging/docs/view/advanced-queries)
                            for how this filter should be constructed.
                          type: string
                        labelExtractors:
                          additionalProperties:
                            type: string
                          description: |-
                            Optional. A map from a label key to an extractor expression, which is
                             used to extract the value for this label key. Each entry in this map is
                             a specification for how data should be extracted from log entries that
                             match `filter`. Each combination of extracted values is treated as a
                             separate rule for the purposes of triggering notifications. Label keys
                             and corresponding values can be used in notifications generated by this
                             condition.

                             Please see [the documentation on logs-based metric
                             `valueExtractor`s](https://cloud.google.com/logging/docs/reference/v2/rest/v2/projects.metrics#LogMetric.FIELDS.value_extractor)
                             for syntax and examples.
                          type: object
                      type: object
                    conditionMonitoringQueryLanguage:
                      description: A condition that uses the Monitoring Query Language
                        to define alerts.
                      properties:
                        duration:
                          description: The amount of time that a time series must
                            violate the threshold to be considered failing. Currently,
                            only values that are a multiple of a minute--e.g., 0,
                            60, 120, or 300 seconds--are supported. If an invalid
                            value is given, an error will be returned. When choosing
                            a duration, it is useful to keep in mind the frequency
                            of the underlying time series data (which may also be
                            affected by any alignments specified in the `aggregations`
                            field); a good duration is long enough so that a single
                            outlier does not generate spurious alerts, but short enough
                            that unhealthy states are detected and alerted on quickly.
                          type: string
                        evaluationMissingData:
                          description: A condition control that determines how metric-threshold
                            conditions are evaluated when data stops arriving.
                          type: string
                        query:
                          description: '[Monitoring Query Language](https://cloud.google.com/monitoring/mql)
                            query that outputs a boolean stream.'
                          type: string
                        trigger:
                          description: The number/percent of time series for which
                            the comparison must hold in order for the condition to
                            trigger. If unspecified, then the condition will trigger
                            if the comparison is true for any of the time series that
                            have been identified by `filter` and `aggregations`, or
                            by the ratio, if `denominator_filter` and `denominator_aggregations`
                            are specified.
                          properties:
                            count:
                              description: The absolute number of time series that
                                must fail the predicate for the condition to be triggered.
                              format: int32
                              type: integer
                            percent:
                              description: The percentage of time series that must
                                fail the predicate for the condition to be triggered.
                              type: number
                          type: object
                      type: object
                    conditionPrometheusQueryLanguage:
                      description: A condition that uses the Prometheus query language
                        to define alerts.
                      properties:
                        alertRule:
                          description: |-
                            Optional. The alerting rule name of this alert in the corresponding
                             Prometheus configuration file.

                             Some external tools may require this field to be populated correctly
                             in order to refer to the original Prometheus configuration file.
                             The rule group name and the alert name are necessary to update the
                             relevant AlertPolicies in case the definition of the rule group changes
                             in the future.

                             This field is optional. If this field is not empty, then it must be a
                             [valid Prometheus label
                             name](https://prometheus.io/docs/concepts/data_model/#metric-names-and-labels).
                             This field may not exceed 2048 Unicode characters in length.
                          type: string
                        duration:
                          description: Optional. Alerts are considered firing once
                            their PromQL expression was evaluated to be "true" for
                            this long. Alerts whose PromQL expression was not evaluated
                            to be "true" for long enough are considered pending. Must
                            be a non-negative duration or missing. This field is optional.
                            Its default value is zero.
                          type: string
                        evaluationInterval:
                          description: Optional. How often this rule should be evaluated.
                            Must be a positive multiple of 30 seconds or missing.
                            This field is optional. Its default value is 30 seconds.
                            If this PrometheusQueryLanguageCondition was generated
                            from a Prometheus alerting rule, then this value should
                            be taken from the enclosing rule group.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: Optional. Labels to add to or overwrite in
                            the PromQL query result. Label names [must be valid](https://prometheus.io/docs/concepts/data_model/#metric-names-and-labels).
                            Label values can be [templatized by using variables](https://cloud.google.com/monitoring/alerts/doc-variables).
                            The only available variable names are the names of the
                            labels in the PromQL result, including "__name__" and
                            "value". "labels" may be empty.
                          type: object
                        query:
                          description: Required. The PromQL expression to evaluate.
                            Every evaluation cycle this expression is evaluated at
                            the current time, and all resultant time series become
                            pending/firing alerts. This field must not be empty.
                          type: string
                        ruleGroup:
                          description: |-
                            Optional. The rule group name of this alert in the corresponding
                             Prometheus configuration file.

                             Some external tools may require this field to be populated correctly
                             in order to refer to the original Prometheus configuration file.
                             The rule group name and the alert name are necessary to update the
                             relevant AlertPolicies in case the definition of the rule group changes
                             in the future.

                             This field is optional. If this field is not empty, then it must
                             contain a valid UTF-8 string.
                             This field may not exceed 2048 Unicode characters in length.
                          type: string
                      type: object
                    conditionThreshold:
                      description: A condition that compares a time series against
                        a threshold.
                      properties:
                        aggregations:
                          description: |-
                            Specifies the alignment of data points in individual time series as
                             well as how to combine the retrieved time series together (such as
                             when aggregating multiple streams on each resource to a single
                             stream for each resource or when aggregating streams across all
                             members of a group of resources). Multiple aggregations
                             are applied in the order specified.

                             This field is similar to the one in the [`ListTimeSeries`
                             request](https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.timeSeries/list).
                             It is advisable to use the `ListTimeSeries` method when debugging this
                             field.
                          items:
                            properties:
                              alignmentPeriod:
                                description: |-
                                  The `alignment_period` specifies a time interval, in seconds, that is used
                                   to divide the data in all the
                                   [time series][google.monitoring.v3.TimeSeries] into consistent blocks of
                                   time. This will be done before the per-series aligner can be applied to
                                   the data.

                                   The value must be at least 60 seconds. If a per-series aligner other than
                                   `ALIGN_NONE` is specified, this field is required or an error is returned.
                                   If no per-series aligner is specified, or the aligner `ALIGN_NONE` is
                                   specified, then this field is ignored.

                                   The maximum value of the `alignment_period` is 2 years, or 104 weeks.
                                type: string
                              crossSeriesReducer:
                                description: |-
                                  The reduction operation to be used to combine time series into a single
                                   time series, where the value of each data point in the resulting series is
                                   a function of all the already aligned values in the input time series.

                                   Not all reducer operations can be applied to all time series. The valid
                                   choices depend on the `metric_kind` and the `value_type` of the original
                                   time series. Reduction can yield a time series with a different
                                   `metric_kind` or `value_type` than the input time series.

                                   Time series data must first be aligned (see `per_series_aligner`) in order
                                   to perform cross-time series reduction. If `cross_series_reducer` is
                                   specified, then `per_series_aligner` must be specified, and must not be
                                   `ALIGN_NONE`. An `alignment_period` must also be specified; otherwise, an
                                   error is returned.
                                type: string
                              groupByFields:
                                description: The set of fields to preserve when `cross_series_reducer`
                                  is specified. The `group_by_fields` determine how
                                  the time series are partitioned into subsets prior
                                  to applying the aggregation operation. Each subset
                                  contains time series that have the same value for
                                  each of the grouping fields. Each individual time
                                  series is a member of exactly one subset. The `cross_series_reducer`
                                  is applied to each subset of time series. It is
                                  not possible to reduce across different resource
                                  types, so this field implicitly contains `resource.type`.  Fields
                                  not specified in `group_by_fields` are aggregated
                                  away.  If `group_by_fields` is not specified and
                                  all the time series have the same resource type,
                                  then the time series are aggregated into a single
                                  output time series. If `cross_series_reducer` is
                                  not defined, this field is ignored.
                                items:
                                  type: string
                                type: array
                              perSeriesAligner:
                                description: |-
                                  An `Aligner` describes how to bring the data points in a single
                                   time series into temporal alignment. Except for `ALIGN_NONE`, all
                                   alignments cause all the data points in an `alignment_period` to be
                                   mathematically grouped together, resulting in a single data point for
                                   each `alignment_period` with end timestamp at the end of the period.

                                   Not all alignment operations may be applied to all time series. The valid
                                   choices depend on the `metric_kind` and `value_type` of the original time
                                   series. Alignment can change the `metric_kind` or the `value_type` of
                                   the time series.

                                   Time series data must be aligned in order to perform cross-time
                                   series reduction. If `cross_series_reducer` is specified, then
                                   `per_series_aligner` must be specified and not equal to `ALIGN_NONE`
                                   and `alignment_period` must be specified; otherwise, an error is
                                   returned.
                                type: string
                            type: object
                          type: array
                        comparison:
                          description: |-
                            The comparison to apply between the time series (indicated by `filter`
                             and `aggregation`) and the threshold (indicated by `threshold_value`).
                             The comparison is applied on each time series, with the time series
                             on the left-hand side and the threshold on the right-hand side.

                             Only `COMPARISON_LT` and `COMPARISON_GT` are supported currently.
                          type: string
                        denominatorAggregations:
                          description: |-
                            Specifies the alignment of data points in individual time series
                             selected by `denominatorFilter` as
                             well as how to combine the retrieved time series together (such as
                             when aggregating multiple streams on each resource to a single
                             stream for each resource or when aggregating streams across all
                             members of a group of resources).

                             When computing ratios, the `aggregations` and
                             `denominator_aggregations` fields must use the same alignment period
                             and produce time series that have the same periodicity and labels.
                          items:
                            properties:
                              alignmentPeriod:
                                description: |-
                                  The `alignment_period` specifies a time interval, in seconds, that is used
                                   to divide the data in all the
                                   [time series][google.monitoring.v3.TimeSeries] into consistent blocks of
                                   time. This will be done before the per-series aligner can be applied to
                                   the data.

                                   The value must be at least 60 seconds. If a per-series aligner other than
                                   `ALIGN_NONE` is specified, this field is required or an error is returned.
                                   If no per-series aligner is specified, or the aligner `ALIGN_NONE` is
                                   specified, then this field is ignored.

                                   The maximum value of the `alignment_period` is 2 years, or 104 weeks.
                                type: string
                              crossSeriesReducer:
                                description: |-
                                  The reduction operation to be used to combine time series into a single
                                   time series, where the value of each data point in the resulting series is
                                   a function of all the already aligned values in the input time series.

                                   Not all reducer operations can be applied to all time series. The valid
                                   choices depend on the `metric_kind` and the `value_type` of the original
                                   time series. Reduction can yield a time series with a different
                                   `metric_kind` or `value_type` than the input time series.

                                   Time series data must first be aligned (see `per_series_aligner`) in order
                                   to perform cross-time series reduction. If `cross_series_reducer` is
                                   specified, then `per_series_aligner` must be specified, and must not be
                                   `ALIGN_NONE`. An `alignment_period` must also be specified; otherwise, an
                                   error is returned.
                                type: string
                              groupByFields:
                                description: The set of fields to preserve when `cross_series_reducer`
                                  is specified. The `group_by_fields` determine how
                                  the time series are partitioned into subsets prior
                                  to applying the aggregation operation. Each subset
                                  contains time series that have the same value for
                                  each of the grouping fields. Each individual time
                                  series is a member of exactly one subset. The `cross_series_reducer`
                                  is applied to each subset of time series. It is
                                  not possible to reduce across different resource
                                  types, so this field implicitly contains `resource.type`.  Fields
                                  not specified in `group_by_fields` are aggregated
                                  away.  If `group_by_fields` is not specified and
                                  all the time series have the same resource type,
                                  then the time series are aggregated into a single
                                  output time series. If `cross_series_reducer` is
                                  not defined, this field is ignored.
                                items:
                                  type: string
                                type: array
                              perSeriesAligner:
                                description: |-
                                  An `Aligner` describes how to bring the data points in a single
                                   time series into temporal alignment. Except for `ALIGN_NONE`, all
                                   alignments cause all the data points in an `alignment_period` to be
                                   mathematically grouped together, resulting in a single data point for
                                   each `alignment_period` with end timestamp at the end of the period.

                                   Not all alignment operations may be applied to all time series. The valid
                                   choices depend on the `metric_kind` and `value_type` of the original time
                                   series. Alignment can change the `metric_kind` or the `value_type` of
                                   the time series.

                                   Time series data must be aligned in order to perform cross-time
                                   series reduction. If `cross_series_reducer` is specified, then
                                   `per_series_aligner` must be specified and not equal to `ALIGN_NONE`
                                   and `alignment_period` must be specified; otherwise, an error is
                                   returned.
                                type: string
                            type: object
                          type: array
                        denominatorFilter:
                          description: |-
                            A [filter](https://cloud.google.com/monitoring/api/v3/filters) that
                             identifies a time series that should be used as the denominator of a
                             ratio that will be compared with the threshold. If a
                             `denominator_filter` is specified, the time series specified by the
                             `filter` field will be used as the numerator.

                             The filter must specify the metric type and optionally may contain
                             restrictions on resource type, resource labels, and metric labels.
                             This field may not exceed 2048 Unicode characters in length.
                          type: string
                        duration:
                          description: The amount of time that a time series must
                            violate the threshold to be considered failing. Currently,
                            only values that are a multiple of a minute--e.g., 0,
                            60, 120, or 300 seconds--are supported. If an invalid
                            value is given, an error will be returned. When choosing
                            a duration, it is useful to keep in mind the frequency
                            of the underlying time series data (which may also be
                            affected by any alignments specified in the `aggregations`
                            field); a good duration is long enough so that a single
                            outlier does not generate spurious alerts, but short enough
                            that unhealthy states are detected and alerted on quickly.
                          type: string
                        evaluationMissingData:
                          description: A condition control that determines how metric-threshold
                            conditions are evaluated when data stops arriving. To
                            use this control, the value of the `duration` field must
                            be greater than or equal to 60 seconds.
                          type: string
                        filter:
                          description: |-
                            Required. A
                             [filter](https://cloud.google.com/monitoring/api/v3/filters) that
                             identifies which time series should be compared with the threshold.

                             The filter is similar to the one that is specified in the
                             [`ListTimeSeries`
                             request](https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.timeSeries/list)
                             (that call is useful to verify the time series that will be retrieved /
                             processed). The filter must specify the metric type and the resource
                             type. Optionally, it can specify resource labels and metric labels.
                             This field must not exceed 2048 Unicode characters in length.
                          type: string
                        forecastOptions:
                          description: When this field is present, the `MetricThreshold`
                            condition forecasts whether the time series is predicted
                            to violate the threshold within the `forecast_horizon`.
                            When this field is not set, the `MetricThreshold` tests
                            the current value of the timeseries against the threshold.
                          properties:
                            forecastHorizon:
                              description: Required. The length of time into the future
                                to forecast whether a time series will violate the
                                threshold. If the predicted value is found to violate
                                the threshold, and the violation is observed in all
                                forecasts made for the configured `duration`, then
                                the time series is considered to be failing. The forecast
                                horizon can range from 1 hour to 60 hours.
                              type: string
                          type: object
                        thresholdValue:
                          description: A value against which to compare the time series.
                          type: number
                        trigger:
                          description: The number/percent of time series for which
                            the comparison must hold in order for the condition to
                            trigger. If unspecified, then the condition will trigger
                            if the comparison is true for any of the time series that
                            have been identified by `filter` and `aggregations`, or
                            by the ratio, if `denominator_filter` and `denominator_aggregations`
                            are specified.
                          properties:
                            count:
                              description: The absolute number of time series that
                                must fail the predicate for the condition to be triggered.
                              format: int32
                              type: integer
                            percent:
                              description: The percentage of time series that must
                                fail the predicate for the condition to be triggered.
                              type: number
                          type: object
                      type: object
                    displayName:
                      description: A short name or phrase used to identify the condition
                        in dashboards, notifications, and incidents. To avoid confusion,
                        don't use the same display name for multiple conditions in
                        the same policy.
                      type: string
                    name:
                      description: |-
                        Required if the condition exists. The unique resource name for this
                         condition. Its format is:

                             projects/[PROJECT_ID_OR_NUMBER]/alertPolicies/[POLICY_ID]/conditions/[CONDITION_ID]

                         `[CONDITION_ID]` is assigned by Cloud Monitoring when the
                         condition is created as part of a new or updated alerting policy.

                         When calling the
                         [alertPolicies.create][google.monitoring.v3.AlertPolicyService.CreateAlertPolicy]
                         method, do not include the `name` field in the conditions of the
                         requested alerting policy. Cloud Monitoring creates the
                         condition identifiers and includes them in the new policy.

                         When calling the
                         [alertPolicies.update][google.monitoring.v3.AlertPolicyService.UpdateAlertPolicy]
                         method to update a policy, including a condition `name` causes the
                         existing condition to be updated. Conditions without names are added to
                         the updated policy. Existing conditions are deleted if they are not
                         updated.

                         Best practice is to preserve `[CONDITION_ID]` if you make only small
                         changes, such as those to condition thresholds, durations, or trigger
                         values.  Otherwise, treat the change as a new condition and let the
                         existing condition be deleted.
                      type: string
                  type: object
                type: array
              displayName:
                description: |-
                  A short name or phrase used to identify the policy in dashboards,
                   notifications, and incidents. To avoid confusion, don't use the same
                   display name for multiple policies in the same project. The name is
                   limited to 512 Unicode characters.

                   The convention for the display_name of a PrometheusQueryLanguageCondition
                   is "{rule group name}/{alert name}", where the {rule group name} and
                   {alert name} should be taken from the corresponding Prometheus
                   configuration file. This convention is not enforced.
                   In any case the display_name is not a unique key of the AlertPolicy.
                type: string
              documentation:
                description: Documentation that is included with notifications and
                  incidents related to this policy. Best practice is for the documentation
                  to include information to help responders understand, mitigate,
                  escalate, and correct the underlying problems detected by the alerting
                  policy. Notification channels that have limited capacity might not
                  show this documentation.
                properties:
                  content:
                    description: The body of the documentation, interpreted according
                      to `mime_type`. The content may not exceed 8,192 Unicode characters
                      and may not exceed more than 10,240 bytes when encoded in UTF-8
                      format, whichever is smaller. This text can be [templatized
                      by using variables](https://cloud.google.com/monitoring/alerts/doc-variables).
                    type: string
                  links:
                    description: Optional. Links to content such as playbooks, repositories,
                      and other resources. This field can contain up to 3 entries.
                    items:
                      properties:
                        displayName:
                          description: 'A short display name for the link. The display
                            name must not be empty or exceed 63 characters. Example:
                            "playbook".'
                          type: string
                        url:
                          description: 'The url of a webpage. A url can be templatized
                            by using variables in the path or the query parameters.
                            The total length of a URL should not exceed 2083 characters
                            before and after variable expansion. Example: "https://my_domain.com/playbook?name=${resource.name}"'
                          type: string
                      type: object
                    type: array
                  mimeType:
                    description: The format of the `content` field. Presently, only
                      the value `"text/markdown"` is supported. See [Markdown](https://en.wikipedia.org/wiki/Markdown)
                      for more information.
                    type: string
                  subject:
                    description: |-
                      Optional. The subject line of the notification. The subject line may not
                       exceed 10,240 bytes. In notifications generated by this policy, the
                       contents of the subject line after variable expansion will be truncated
                       to 255 bytes or shorter at the latest UTF-8 character boundary. The
                       255-byte limit is recommended by [this
                       thread](https://stackoverflow.com/questions/1592291/what-is-the-email-subject-length-limit).
                       It is both the limit imposed by some third-party ticketing products and
                       it is common to define textual fields in databases as VARCHAR(255).

                       The contents of the subject line can be [templatized by using
                       variables](https://cloud.google.com/monitoring/alerts/doc-variables).
                       If this field is missing or empty, a default subject line will be
                       generated.
                    type: string
                type: object
              enabled:
                description: Whether or not the policy is enabled. On write, the default
                  interpretation if unset is that the policy is enabled. On read,
                  clients should not make any assumption about the state if it has
                  not been populated. The field should always be populated on List
                  and Get operations, unless a field projection has been specified
                  that strips it out.
                type: boolean
              notificationChannels:
                description: |-
                  Identifies the notification channels to which notifications should be sent
                   when incidents are opened or closed or when new violations occur on
                   an already opened incident. Each element of this array corresponds to
                   the `name` field in each of the
                   [`NotificationChannel`][google.monitoring.v3.NotificationChannel]
                   objects that are returned from the [`ListNotificationChannels`]
                   [google.monitoring.v3.NotificationChannelService.ListNotificationChannels]
                   method. The format of the entries in this field is:

                       projects/[PROJECT_ID_OR_NUMBER]/notificationChannels/[CHANNEL_ID]
                items:
                  type: string
                type: array
              projectRef:
                description: Immutable. The Project that this resource belongs to.
                oneOf:
                - not:
                    required:
                    - external
                  required:
                  - name
                - not:
                    anyOf:
                    - required:
                      - name
                    - required:
                      - namespace
                  required:
                  - external
                properties:
                  external:
                    description: The `projectID` field of a project, when not managed
                      by KCC.
                    type: string
                  kind:
                    description: The kind of the Project resource; optional but must
                      be `Project` if provided.
                    type: string
                  name:
                    description: The `name` field of a `Project` resource.
                    type: string
                  namespace:
                    description: The `namespace` field of a `Project` resource.
                    type: string
                type: object
              resourceID:
                description: Immutable. Optional. The name of the resource. Used for
                  creation and acquisition. When unset, the value of `metadata.name`
                  is used as the default.
                type: string
              severity:
                description: Optional. The severity of an alert policy indicates how
                  important incidents generated by that policy are. The severity level
                  will be displayed on the Incident detail page and in notifications.
                type: string
              userLabels:
                additionalProperties:
                  type: string
                description: |-
                  User-supplied key/value data to be used for organizing and
                   identifying the `AlertPolicy` objects.

                   The field can contain up to 64 entries. Each key and value is limited to
                   63 Unicode characters or 128 bytes, whichever is smaller. Labels and
                   values can contain only lowercase letters, numerals, underscores, and
                   dashes. Keys must begin with a letter.

                   Note that Prometheus {alert name} is a
                   [valid Prometheus label
                   names](https://prometheus.io/docs/concepts/data_model/#metric-names-and-labels),
                   whereas Prometheus {rule group} is an unrestricted UTF-8 string.
                   This means that they cannot be stored as-is in user labels, because
                   they may contain characters that are not allowed in user-label values.
                type: object
            required:
            - projectRef
            type: object
          status:
            properties:
              conditions:
                description: Conditions represent the latest available observations
                  of the MonitoringAlertPolicy's current state.
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's
                        last transition.
                      type: string
                    status:
                      description: Status is the status of the condition. Can be True,
                        False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  type: object
                type: array
              creationRecord:
                description: A read-only record of the creation of the alerting policy.
                  If provided in a call to create or update, this field will be ignored.
                properties:
                  mutateTime:
                    description: When the change occurred.
                    type: string
                  mutatedBy:
                    description: The email address of the user making the change.
                    type: string
                type: object
              mutationRecord:
                description: A read-only record of the most recent change to the alerting
                  policy. If provided in a call to create or update, this field will
                  be ignored.
                properties:
                  mutateTime:
                    description: When the change occurred.
                    type: string
                  mutatedBy:
                    description: The email address of the user making the change.
                    type: string
                type: object
              observedGeneration:
                description: ObservedGeneration is the generation of the resource
                  that was most recently observed by the Config Connector controller.
                  If this is equal to metadata.generation, then that means that the
                  current reported status reflects the most recent desired state of
                  the resource.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
