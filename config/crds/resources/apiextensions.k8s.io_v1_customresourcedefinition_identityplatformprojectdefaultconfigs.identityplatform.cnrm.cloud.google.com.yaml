apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cnrm.cloud.google.com/version: 0.0.0-dev
  creationTimestamp: null
  labels:
    cnrm.cloud.google.com/managed-by-kcc: "true"
    cnrm.cloud.google.com/stability-level: alpha
    cnrm.cloud.google.com/system: "true"
    cnrm.cloud.google.com/tf2crd: "true"
  name: identityplatformprojectdefaultconfigs.identityplatform.cnrm.cloud.google.com
spec:
  group: identityplatform.cnrm.cloud.google.com
  names:
    categories:
    - gcp
    kind: IdentityPlatformProjectDefaultConfig
    plural: identityplatformprojectdefaultconfigs
    shortNames:
    - gcpidentityplatformprojectdefaultconfig
    - gcpidentityplatformprojectdefaultconfigs
    singular: identityplatformprojectdefaultconfig
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: When 'True', the most recent reconcile of the resource succeeded
      jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - description: The reason for the value in 'Ready'
      jsonPath: .status.conditions[?(@.type=='Ready')].reason
      name: Status
      type: string
    - description: The last transition time for the value in 'Status'
      jsonPath: .status.conditions[?(@.type=='Ready')].lastTransitionTime
      name: Status Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'apiVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
            type: string
          kind:
            description: 'kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              projectRef:
                description: The project that this resource belongs to.
                oneOf:
                - not:
                    required:
                    - external
                  required:
                  - name
                - not:
                    anyOf:
                    - required:
                      - name
                    - required:
                      - namespace
                  required:
                  - external
                properties:
                  external:
                    description: 'Allowed value: The `name` field of a `Project` resource.'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                type: object
              resourceID:
                description: Immutable. Optional. The service-generated name of the
                  resource. Used for acquisition only. Leave unset to create a new
                  resource.
                type: string
              signIn:
                description: Configuration related to local sign in methods.
                properties:
                  allowDuplicateEmails:
                    description: Whether to allow more than one account to have the
                      same email.
                    type: boolean
                  anonymous:
                    description: Configuration options related to authenticating an
                      anonymous user.
                    properties:
                      enabled:
                        description: Whether anonymous user auth is enabled for the
                          project or not.
                        type: boolean
                    required:
                    - enabled
                    type: object
                  email:
                    description: Configuration options related to authenticating a
                      user by their email address.
                    properties:
                      enabled:
                        description: Whether email auth is enabled for the project
                          or not.
                        type: boolean
                      passwordRequired:
                        description: |-
                          Whether a password is required for email auth or not. If true, both an email and
                          password must be provided to sign in. If false, a user may sign in via either
                          email/password or email link.
                        type: boolean
                    type: object
                  hashConfig:
                    description: Output only. Hash config information.
                    items:
                      properties:
                        algorithm:
                          description: Different password hash algorithms used in
                            Identity Toolkit.
                          type: string
                        memoryCost:
                          description: Memory cost for hash calculation. Used by scrypt
                            and other similar password derivation algorithms. See
                            https://tools.ietf.org/html/rfc7914 for explanation of
                            field.
                          type: integer
                        rounds:
                          description: How many rounds for hash calculation. Used
                            by scrypt and other similar password derivation algorithms.
                          type: integer
                        saltSeparator:
                          description: Non-printable character to be inserted between
                            the salt and plain text password in base64.
                          type: string
                        signerKey:
                          description: Signer key in base64.
                          type: string
                      type: object
                    type: array
                  phoneNumber:
                    description: Configuration options related to authenticated a
                      user by their phone number.
                    properties:
                      enabled:
                        description: Whether phone number auth is enabled for the
                          project or not.
                        type: boolean
                      testPhoneNumbers:
                        additionalProperties:
                          type: string
                        description: A map of <test phone number, fake code> that
                          can be used for phone auth testing.
                        type: object
                    type: object
                type: object
            required:
            - projectRef
            type: object
          status:
            properties:
              conditions:
                description: Conditions represent the latest available observation
                  of the resource's current state.
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's
                        last transition.
                      type: string
                    status:
                      description: Status is the status of the condition. Can be True,
                        False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  type: object
                type: array
              name:
                description: 'The name of the Config resource. Example: "projects/my-awesome-project/config".'
                type: string
              observedGeneration:
                description: ObservedGeneration is the generation of the resource
                  that was most recently observed by the Config Connector controller.
                  If this is equal to metadata.generation, then that means that the
                  current reported status reflects the most recent desired state of
                  the resource.
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
