apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cnrm.cloud.google.com/version: 0.0.0-dev
  creationTimestamp: null
  labels:
    cnrm.cloud.google.com/managed-by-kcc: "true"
    cnrm.cloud.google.com/stability-level: stable
    cnrm.cloud.google.com/system: "true"
    cnrm.cloud.google.com/tf2crd: "true"
  name: edgecontainerclusters.edgecontainer.cnrm.cloud.google.com
spec:
  group: edgecontainer.cnrm.cloud.google.com
  names:
    categories:
    - gcp
    kind: EdgeContainerCluster
    plural: edgecontainerclusters
    shortNames:
    - gcpedgecontainercluster
    - gcpedgecontainerclusters
    singular: edgecontainercluster
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: When 'True', the most recent reconcile of the resource succeeded
      jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - description: The reason for the value in 'Ready'
      jsonPath: .status.conditions[?(@.type=='Ready')].reason
      name: Status
      type: string
    - description: The last transition time for the value in 'Status'
      jsonPath: .status.conditions[?(@.type=='Ready')].lastTransitionTime
      name: Status Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'apiVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
            type: string
          kind:
            description: 'kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              authorization:
                description: Immutable. RBAC policy that will be applied and managed
                  by GEC.
                properties:
                  adminUsers:
                    description: |-
                      User that will be granted the cluster-admin role on the cluster, providing
                      full access to the cluster. Currently, this is a singular field, but will
                      be expanded to allow multiple admins in the future.
                    properties:
                      usernameRef:
                        oneOf:
                        - not:
                            required:
                            - external
                          required:
                          - name
                        - not:
                            anyOf:
                            - required:
                              - name
                            - required:
                              - namespace
                          required:
                          - external
                        properties:
                          external:
                            description: 'Allowed value: The `email` field of an `IAMServiceAccount`
                              resource.'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                        type: object
                    required:
                    - usernameRef
                    type: object
                required:
                - adminUsers
                type: object
              controlPlane:
                description: The configuration of the cluster control plane.
                properties:
                  local:
                    description: Immutable. Local control plane configuration.
                    properties:
                      machineFilter:
                        description: |-
                          Only machines matching this filter will be allowed to host control
                          plane nodes. The filtering language accepts strings like "name=<name>",
                          and is documented here: [AIP-160](https://google.aip.dev/160).
                        type: string
                      nodeCount:
                        description: |-
                          The number of nodes to serve as replicas of the Control Plane.
                          Only 1 and 3 are supported.
                        type: integer
                      nodeLocation:
                        description: |-
                          Immutable. Name of the Google Distributed Cloud Edge zones where this node pool
                          will be created. For example: 'us-central1-edge-customer-a'.
                        type: string
                      sharedDeploymentPolicy:
                        description: 'Policy configuration about how user applications
                          are deployed. Possible values: ["SHARED_DEPLOYMENT_POLICY_UNSPECIFIED",
                          "ALLOWED", "DISALLOWED"].'
                        type: string
                    type: object
                  remote:
                    description: Immutable. Remote control plane configuration.
                    properties:
                      nodeLocation:
                        description: |-
                          Immutable. Name of the Google Distributed Cloud Edge zones where this node pool
                          will be created. For example: 'us-central1-edge-customer-a'.
                        type: string
                    type: object
                type: object
              controlPlaneEncryption:
                description: |-
                  Remote control plane disk encryption options. This field is only used when
                  enabling CMEK support.
                properties:
                  kmsKeyActiveVersion:
                    description: |-
                      The Cloud KMS CryptoKeyVersion currently in use for protecting control
                      plane disks. Only applicable if kms_key is set.
                    type: string
                  kmsKeyRef:
                    oneOf:
                    - not:
                        required:
                        - external
                      required:
                      - name
                    - not:
                        anyOf:
                        - required:
                          - name
                        - required:
                          - namespace
                      required:
                      - external
                    properties:
                      external:
                        description: 'Allowed value: The `selfLink` field of a `KMSCryptoKey`
                          resource.'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                    type: object
                  kmsKeyState:
                    description: |-
                      Availability of the Cloud KMS CryptoKey. If not 'KEY_AVAILABLE', then
                      nodes may go offline as they cannot access their local data. This can be
                      caused by a lack of permissions to use the key, or if the key is disabled
                      or deleted.
                    type: string
                  kmsStatus:
                    description: |-
                      Error status returned by Cloud KMS when using this key. This field may be
                      populated only if 'kms_key_state' is not 'KMS_KEY_STATE_KEY_AVAILABLE'.
                      If populated, this field contains the error status reported by Cloud KMS.
                    items:
                      properties:
                        code:
                          description: The status code, which should be an enum value
                            of google.rpc.Code.
                          type: integer
                        message:
                          description: A developer-facing error message, which should
                            be in English. Any user-facing error message should be
                            localized and sent in the google.rpc.Status.details field,
                            or localized by the client.
                          type: string
                      type: object
                    type: array
                type: object
              defaultMaxPodsPerNode:
                description: |-
                  The default maximum number of pods per node used if a maximum value is not
                  specified explicitly for a node pool in this cluster. If unspecified, the
                  Kubernetes default value will be used.
                type: integer
              externalLoadBalancerIpv4AddressPools:
                description: Address pools for cluster data plane external load balancing.
                items:
                  type: string
                type: array
              fleet:
                description: |-
                  Immutable. Fleet related configuration.
                  Fleets are a Google Cloud concept for logically organizing clusters,
                  letting you use and manage multi-cluster capabilities and apply
                  consistent policies across your systems.
                properties:
                  membership:
                    description: |-
                      The name of the managed Hub Membership resource associated to this cluster.
                      Membership names are formatted as
                      'projects/<project-number>/locations/global/membership/<cluster-id>'.
                    type: string
                  projectRef:
                    description: The number of the Fleet host project where this cluster
                      will be registered.
                    oneOf:
                    - not:
                        required:
                        - external
                      required:
                      - name
                    - not:
                        anyOf:
                        - required:
                          - name
                        - required:
                          - namespace
                      required:
                      - external
                    properties:
                      external:
                        description: 'Allowed value: string of the format `projects/{{value}}`,
                          where {{value}} is the `number` field of a `Project` resource.'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                    type: object
                required:
                - projectRef
                type: object
              location:
                description: Immutable. The location of the resource.
                type: string
              maintenancePolicy:
                description: Cluster-wide maintenance policy configuration.
                properties:
                  window:
                    description: Specifies the maintenance window in which maintenance
                      may be performed.
                    properties:
                      recurringWindow:
                        description: Represents an arbitrary window of time that recurs.
                        properties:
                          recurrence:
                            description: |-
                              An RRULE (https://tools.ietf.org/html/rfc5545#section-3.8.5.3) for how
                              this window recurs. They go on for the span of time between the start and
                              end time.
                            type: string
                          window:
                            description: Represents an arbitrary window of time.
                            properties:
                              endTime:
                                description: |-
                                  The time that the window ends. The end time must take place after the
                                  start time.
                                type: string
                              startTime:
                                description: The time that the window first starts.
                                type: string
                            type: object
                        type: object
                    required:
                    - recurringWindow
                    type: object
                required:
                - window
                type: object
              networking:
                description: |-
                  Fleet related configuration.
                  Fleets are a Google Cloud concept for logically organizing clusters,
                  letting you use and manage multi-cluster capabilities and apply
                  consistent policies across your systems.
                properties:
                  clusterIpv4CidrBlocks:
                    description: |-
                      Immutable. All pods in the cluster are assigned an RFC1918 IPv4 address from these
                      blocks. Only a single block is supported. This field cannot be changed
                      after creation.
                    items:
                      type: string
                    type: array
                  clusterIpv6CidrBlocks:
                    description: |-
                      Immutable. If specified, dual stack mode is enabled and all pods in the cluster are
                      assigned an IPv6 address from these blocks alongside from an IPv4
                      address. Only a single block is supported. This field cannot be changed
                      after creation.
                    items:
                      type: string
                    type: array
                  networkType:
                    description: IP addressing type of this cluster i.e. SINGLESTACK_V4
                      vs DUALSTACK_V4_V6.
                    type: string
                  servicesIpv4CidrBlocks:
                    description: |-
                      Immutable. All services in the cluster are assigned an RFC1918 IPv4 address from these
                      blocks. Only a single block is supported. This field cannot be changed
                      after creation.
                    items:
                      type: string
                    type: array
                  servicesIpv6CidrBlocks:
                    description: |-
                      Immutable. If specified, dual stack mode is enabled and all services in the cluster are
                      assigned an IPv6 address from these blocks alongside from an IPv4
                      address. Only a single block is supported. This field cannot be changed
                      after creation.
                    items:
                      type: string
                    type: array
                required:
                - clusterIpv4CidrBlocks
                - servicesIpv4CidrBlocks
                type: object
              projectRef:
                description: The project that this resource belongs to.
                oneOf:
                - not:
                    required:
                    - external
                  required:
                  - name
                - not:
                    anyOf:
                    - required:
                      - name
                    - required:
                      - namespace
                  required:
                  - external
                properties:
                  external:
                    description: 'Allowed value: The `name` field of a `Project` resource.'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                type: object
              releaseChannel:
                description: 'The release channel a cluster is subscribed to. Possible
                  values: ["RELEASE_CHANNEL_UNSPECIFIED", "NONE", "REGULAR"].'
                type: string
              resourceID:
                description: Immutable. Optional. The name of the resource. Used for
                  creation and acquisition. When unset, the value of `metadata.name`
                  is used as the default.
                type: string
              systemAddonsConfig:
                description: Config that customers are allowed to define for GDCE
                  system add-ons.
                properties:
                  ingress:
                    description: |-
                      Config for the Ingress add-on which allows customers to create an Ingress
                      object to manage external access to the servers in a cluster. The add-on
                      consists of istiod and istio-ingress.
                    properties:
                      disabled:
                        description: Whether Ingress is disabled.
                        type: boolean
                      ipv4Vip:
                        description: Ingress VIP.
                        type: string
                    type: object
                type: object
              targetVersion:
                description: 'The target cluster version. For example: "1.5.0".'
                type: string
            required:
            - authorization
            - fleet
            - location
            - networking
            - projectRef
            type: object
          status:
            properties:
              clusterCaCertificate:
                description: The PEM-encoded public certificate of the cluster's CA.
                type: string
              conditions:
                description: Conditions represent the latest available observation
                  of the resource's current state.
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's
                        last transition.
                      type: string
                    status:
                      description: Status is the status of the condition. Can be True,
                        False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  type: object
                type: array
              controlPlaneVersion:
                description: The control plane release version.
                type: string
              createTime:
                description: The time the cluster was created, in RFC3339 text format.
                type: string
              endpoint:
                description: The IP address of the Kubernetes API server.
                type: string
              maintenanceEvents:
                description: |-
                  All the maintenance events scheduled for the cluster, including the ones
                  ongoing, planned for the future and done in the past (up to 90 days).
                items:
                  properties:
                    createTime:
                      description: The time when the maintenance event request was
                        created.
                      type: string
                    endTime:
                      description: |-
                        The time when the maintenance event ended, either successfully or not. If
                        the maintenance event is split into multiple maintenance windows,
                        end_time is only updated when the whole flow ends.
                      type: string
                    operation:
                      description: |-
                        The operation for running the maintenance event. Specified in the format
                        projects/*/locations/*/operations/*. If the maintenance event is split
                        into multiple operations (e.g. due to maintenance windows), the latest
                        one is recorded.
                      type: string
                    schedule:
                      description: The schedule of the maintenance event.
                      type: string
                    startTime:
                      description: The time when the maintenance event started.
                      type: string
                    state:
                      description: Indicates the maintenance event state.
                      type: string
                    targetVersion:
                      description: The target version of the cluster.
                      type: string
                    type:
                      description: Indicates the maintenance event type.
                      type: string
                    updateTime:
                      description: The time when the maintenance event message was
                        updated.
                      type: string
                    uuid:
                      description: UUID of the maintenance event.
                      type: string
                  type: object
                type: array
              nodeVersion:
                description: |-
                  The lowest release version among all worker nodes. This field can be empty
                  if the cluster does not have any worker nodes.
                type: string
              observedGeneration:
                description: ObservedGeneration is the generation of the resource
                  that was most recently observed by the Config Connector controller.
                  If this is equal to metadata.generation, then that means that the
                  current reported status reflects the most recent desired state of
                  the resource.
                type: integer
              port:
                description: The port number of the Kubernetes API server.
                type: integer
              status:
                description: Indicates the status of the cluster.
                type: string
              updateTime:
                description: The time the cluster was last updated, in RFC3339 text
                  format.
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
