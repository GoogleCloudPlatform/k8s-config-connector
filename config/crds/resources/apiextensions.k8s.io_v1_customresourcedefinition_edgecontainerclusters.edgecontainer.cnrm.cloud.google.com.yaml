apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cnrm.cloud.google.com/version: 0.0.0-dev
  creationTimestamp: null
  labels:
    cnrm.cloud.google.com/managed-by-kcc: "true"
    cnrm.cloud.google.com/system: "true"
  name: edgecontainerclusters.edgecontainer.cnrm.cloud.google.com
spec:
  group: edgecontainer.cnrm.cloud.google.com
  names:
    categories:
    - gcp
    kind: EdgeContainerCluster
    listKind: EdgeContainerClusterList
    plural: edgecontainerclusters
    shortNames:
    - gcpedgecontainercluster
    - gcpedgecontainerclusters
    singular: edgecontainercluster
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: When 'True', the most recent reconcile of the resource succeeded
      jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - description: The reason for the value in 'Ready'
      jsonPath: .status.conditions[?(@.type=='Ready')].reason
      name: Status
      type: string
    - description: The last transition time for the value in 'Status'
      jsonPath: .status.conditions[?(@.type=='Ready')].lastTransitionTime
      name: Status Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: EdgeContainerCluster is the Schema for the EdgeContainerCluster
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: EdgeContainerClusterSpec defines the desired state of EdgeContainerCluster
            properties:
              authorization:
                description: Required. Immutable. RBAC policy that will be applied
                  and managed by GEC.
                properties:
                  adminUsers:
                    description: Required. User that will be granted the cluster-admin
                      role on the cluster, providing full access to the cluster. Currently,
                      this is a singular field, but will be expanded to allow multiple
                      admins in the future.
                    properties:
                      username:
                        description: Required. An active Google username.
                        type: string
                    type: object
                type: object
              controlPlane:
                description: Optional. The configuration of the cluster control plane.
                properties:
                  local:
                    description: |-
                      Local control plane configuration.

                       Warning: Local control plane clusters must be created in their own
                       project. Local control plane clusters cannot coexist in the same
                       project with any other type of clusters, including non-GDCE clusters.
                       Mixing local control plane GDCE clusters with any other type of
                       clusters in the same project can result in data loss.
                    properties:
                      controlPlaneNodeStorageSchema:
                        description: |-
                          Optional. Name for the storage schema of control plane nodes.

                           Warning: Configurable node local storage schema feature is an
                           experimental feature, and is not recommended for general use
                           in production clusters/nodepools.
                        type: string
                      machineFilter:
                        description: 'Only machines matching this filter will be allowed
                          to host control plane nodes. The filtering language accepts
                          strings like "name=<name>", and is documented here: [AIP-160](https://google.aip.dev/160).'
                        type: string
                      nodeCount:
                        description: The number of nodes to serve as replicas of the
                          Control Plane.
                        format: int32
                        type: integer
                      nodeLocation:
                        description: 'Name of the Google Distributed Cloud Edge zones
                          where this node pool will be created. For example: `us-central1-edge-customer-a`.'
                        type: string
                      sharedDeploymentPolicy:
                        description: Policy configuration about how user applications
                          are deployed.
                        type: string
                    type: object
                  remote:
                    description: Remote control plane configuration.
                    type: object
                type: object
              controlPlaneEncryption:
                description: Optional. Remote control plane disk encryption options.
                  This field is only used when enabling CMEK support.
                properties:
                  kmsKey:
                    description: Optional. The Cloud KMS CryptoKey e.g. projects/{project}/locations/{location}/keyRings/{keyRing}/cryptoKeys/{cryptoKey}
                      to use for protecting control plane disks. If not specified,
                      a Google-managed key will be used instead.
                    type: string
                type: object
              defaultMaxPodsPerNode:
                description: Optional. The default maximum number of pods per node
                  used if a maximum value is not specified explicitly for a node pool
                  in this cluster. If unspecified, the Kubernetes default value will
                  be used.
                format: int32
                type: integer
              externalLoadBalancerIPV4AddressPools:
                description: Optional. IPv4 address pools for cluster data plane external
                  load balancing.
                items:
                  type: string
                type: array
              externalLoadBalancerIPV6AddressPools:
                description: Optional. IPv6 address pools for cluster data plane external
                  load balancing.
                items:
                  type: string
                type: array
              fleet:
                description: Required. Fleet configuration.
                properties:
                  project:
                    description: |-
                      Required. The name of the Fleet host project where this cluster will be
                       registered.

                       Project names are formatted as
                       `projects/<project-number>`.
                    type: string
                type: object
              labels:
                additionalProperties:
                  type: string
                description: Labels associated with this resource.
                type: object
              location:
                description: Required. The location of the machine.
                type: string
              maintenancePolicy:
                description: Optional. Cluster-wide maintenance policy configuration.
                properties:
                  maintenanceExclusions:
                    description: Optional. Exclusions to automatic maintenance. Non-emergency
                      maintenance should not occur in these windows. Each exclusion
                      has a unique name and may be active or expired. The max number
                      of maintenance exclusions allowed at a given time is 3.
                    items:
                      properties:
                        id:
                          description: Optional. A unique (per cluster) id for the
                            window.
                          type: string
                        window:
                          description: Optional. The time window.
                          properties:
                            endTime:
                              description: The time that the window ends. The end
                                time must take place after the start time.
                              type: string
                            startTime:
                              description: The time that the window first starts.
                              type: string
                          type: object
                      type: object
                    type: array
                  window:
                    description: Specifies the maintenance window in which maintenance
                      may be performed.
                    properties:
                      recurringWindow:
                        description: Configuration of a recurring maintenance window.
                        properties:
                          recurrence:
                            description: An RRULE (https://tools.ietf.org/html/rfc5545#section-3.8.5.3)
                              for how this window recurs. They go on for the span
                              of time between the start and end time.
                            type: string
                          window:
                            description: The window of the first recurrence.
                            properties:
                              endTime:
                                description: The time that the window ends. The end
                                  time must take place after the start time.
                                type: string
                              startTime:
                                description: The time that the window first starts.
                                type: string
                            type: object
                        type: object
                    type: object
                type: object
              networking:
                description: Required. Cluster-wide networking configuration.
                properties:
                  clusterIPV4CIDRBlocks:
                    description: Required. All pods in the cluster are assigned an
                      RFC1918 IPv4 address from these blocks. Only a single block
                      is supported. This field cannot be changed after creation.
                    items:
                      type: string
                    type: array
                  servicesIPV4CIDRBlocks:
                    description: Required. All services in the cluster are assigned
                      an RFC1918 IPv4 address from these blocks. Only a single block
                      is supported. This field cannot be changed after creation.
                    items:
                      type: string
                    type: array
                type: object
              projectRef:
                description: Required. The host project of the machine.
                oneOf:
                - not:
                    required:
                    - external
                  required:
                  - name
                - not:
                    anyOf:
                    - required:
                      - name
                    - required:
                      - namespace
                  required:
                  - external
                properties:
                  external:
                    description: The `projectID` field of a project, when not managed
                      by Config Connector.
                    type: string
                  kind:
                    description: The kind of the Project resource; optional but must
                      be `Project` if provided.
                    type: string
                  name:
                    description: The `name` field of a `Project` resource.
                    type: string
                  namespace:
                    description: The `namespace` field of a `Project` resource.
                    type: string
                type: object
              releaseChannel:
                description: Optional. The release channel a cluster is subscribed
                  to.
                type: string
              resourceID:
                description: The EdgeContainerCluster name. If not given, the metadata.name
                  will be used.
                type: string
              survivabilityConfig:
                description: 'Optional. Configuration of the cluster survivability,
                  e.g., for the case when network connectivity is lost. Note: This
                  only applies to local control plane clusters.'
                properties:
                  offlineRebootTtl:
                    description: Optional. Time period that allows the cluster nodes
                      to be rebooted and become functional without network connectivity
                      to Google. The default 0 means not allowed. The maximum is 7
                      days.
                    type: string
                type: object
              systemAddonsConfig:
                description: Optional. The configuration of the system add-ons.
                properties:
                  ingress:
                    description: Optional. Config for Ingress.
                    properties:
                      disabled:
                        description: Optional. Whether Ingress is disabled.
                        type: boolean
                      ipv4Vip:
                        description: Optional. Ingress VIP.
                        type: string
                    type: object
                  vmServiceConfig:
                    description: Optional. Config for VM Service.
                    properties:
                      vmmEnabled:
                        description: Optional. Whether VMM is enabled.
                        type: boolean
                    type: object
                type: object
              targetVersion:
                description: 'Optional. The target cluster version. For example: "1.5.0".'
                type: string
            type: object
          status:
            description: EdgeContainerClusterStatus defines the config connector machine
              state of EdgeContainerCluster
            properties:
              conditions:
                description: Conditions represent the latest available observations
                  of the object's current state.
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's
                        last transition.
                      type: string
                    status:
                      description: Status is the status of the condition. Can be True,
                        False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  type: object
                type: array
              externalRef:
                description: A unique specifier for the EdgeContainerCluster resource
                  in GCP.
                type: string
              observedGeneration:
                description: ObservedGeneration is the generation of the resource
                  that was most recently observed by the Config Connector controller.
                  If this is equal to metadata.generation, then that means that the
                  current reported status reflects the most recent desired state of
                  the resource.
                format: int64
                type: integer
              observedState:
                description: ObservedState is the state of the resource as most recently
                  observed in GCP.
                properties:
                  clusterCACertificate:
                    description: Output only. The PEM-encoded public certificate of
                      the cluster's CA.
                    type: string
                  connectionState:
                    description: Output only. The current connection state of the
                      cluster.
                    type: object
                  controlPlaneEncryption:
                    description: Optional. Remote control plane disk encryption options.
                      This field is only used when enabling CMEK support.
                    properties:
                      kmsKeyActiveVersion:
                        description: Output only. The Cloud KMS CryptoKeyVersion currently
                          in use for protecting control plane disks. Only applicable
                          if kms_key is set.
                        type: string
                      kmsKeyState:
                        description: Output only. Availability of the Cloud KMS CryptoKey.
                          If not `KEY_AVAILABLE`, then nodes may go offline as they
                          cannot access their local data. This can be caused by a
                          lack of permissions to use the key, or if the key is disabled
                          or deleted.
                        type: string
                      kmsStatus:
                        description: Output only. Error status returned by Cloud KMS
                          when using this key. This field may be populated only if
                          `kms_key_state` is not `KMS_KEY_STATE_KEY_AVAILABLE`. If
                          populated, this field contains the error status reported
                          by Cloud KMS.
                        properties:
                          code:
                            description: The status code, which should be an enum
                              value of [google.rpc.Code][google.rpc.Code].
                            format: int32
                            type: integer
                          details:
                            description: A list of messages that carry the error details.  There
                              is a common set of message types for APIs to use.
                            items:
                              properties:
                                typeURL:
                                  description: |-
                                    A URL/resource name that uniquely identifies the type of the serialized
                                     protocol buffer message. This string must contain at least
                                     one "/" character. The last segment of the URL's path must represent
                                     the fully qualified name of the type (as in
                                     `path/google.protobuf.Duration`). The name should be in a canonical form
                                     (e.g., leading "." is not accepted).

                                     In practice, teams usually precompile into the binary all types that they
                                     expect it to use in the context of Any. However, for URLs which use the
                                     scheme `http`, `https`, or no scheme, one can optionally set up a type
                                     server that maps type URLs to message definitions as follows:

                                     * If no scheme is provided, `https` is assumed.
                                     * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                       value in binary format, or produce an error.
                                     * Applications are allowed to cache lookup results based on the
                                       URL, or have them precompiled into a binary to avoid any
                                       lookup. Therefore, binary compatibility needs to be preserved
                                       on changes to types. (Use versioned type names to manage
                                       breaking changes.)

                                     Note: this functionality is not currently available in the official
                                     protobuf release, and it is not used for type URLs beginning with
                                     type.googleapis.com.

                                     Schemes other than `http`, `https` (or the empty scheme) might be
                                     used with implementation specific semantics.
                                  type: string
                                value:
                                  description: Must be a valid serialized protocol
                                    buffer of the above specified type.
                                  format: byte
                                  type: string
                              type: object
                            type: array
                          message:
                            description: A developer-facing error message, which should
                              be in English. Any user-facing error message should
                              be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details]
                              field, or localized by the client.
                            type: string
                        type: object
                      resourceState:
                        description: Output only. The current resource state associated
                          with the cmek.
                        type: string
                    type: object
                  controlPlaneVersion:
                    description: Output only. The control plane release version
                    type: string
                  createTime:
                    description: Output only. The time when the cluster was created.
                    type: string
                  endpoint:
                    description: Output only. The IP address of the Kubernetes API
                      server.
                    type: string
                  fleet:
                    description: Required. Fleet configuration.
                    properties:
                      membership:
                        description: |-
                          Output only. The name of the managed Hub Membership resource associated to
                           this cluster.

                           Membership names are formatted as
                           `projects/<project-number>/locations/global/membership/<cluster-id>`.
                        type: string
                    type: object
                  maintenanceEvents:
                    description: Output only. All the maintenance events scheduled
                      for the cluster, including the ones ongoing, planned for the
                      future and done in the past (up to 90 days).
                    items:
                      type: object
                    type: array
                  nodeVersion:
                    description: Output only. The lowest release version among all
                      worker nodes. This field can be empty if the cluster does not
                      have any worker nodes.
                    type: string
                  port:
                    description: Output only. The port number of the Kubernetes API
                      server.
                    format: int32
                    type: integer
                  status:
                    description: Output only. The current status of the cluster.
                    type: string
                  updateTime:
                    description: Output only. The time when the cluster was last updated.
                    type: string
                type: object
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
