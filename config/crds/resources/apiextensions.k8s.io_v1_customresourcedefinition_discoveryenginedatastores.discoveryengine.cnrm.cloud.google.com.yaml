apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cnrm.cloud.google.com/version: 0.0.0-dev
  creationTimestamp: null
  labels:
    cnrm.cloud.google.com/managed-by-kcc: "true"
    cnrm.cloud.google.com/system: "true"
  name: discoveryenginedatastores.discoveryengine.cnrm.cloud.google.com
spec:
  group: discoveryengine.cnrm.cloud.google.com
  names:
    categories:
    - gcp
    kind: DiscoveryEngineDataStore
    listKind: DiscoveryEngineDataStoreList
    plural: discoveryenginedatastores
    shortNames:
    - gcpdiscoveryenginedatastore
    - gcpdiscoveryenginedatastores
    singular: discoveryenginedatastore
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: When 'True', the most recent reconcile of the resource succeeded
      jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - description: The reason for the value in 'Ready'
      jsonPath: .status.conditions[?(@.type=='Ready')].reason
      name: Status
      type: string
    - description: The last transition time for the value in 'Status'
      jsonPath: .status.conditions[?(@.type=='Ready')].lastTransitionTime
      name: Status Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DiscoveryEngineDataStore is the Schema for the DiscoveryEngineDataStore
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DiscoveryEngineDataStoreSpec defines the desired state of
              DiscoveryEngineDataStore
            properties:
              aclEnabled:
                description: |-
                  Immutable. Whether data in the
                   [DataStore][google.cloud.discoveryengine.v1alpha.DataStore] has ACL
                   information. If set to `true`, the source data must have ACL. ACL will be
                   devingested when data is ingested by
                   [DocumentService.ImportDocuments][google.cloud.discoveryengine.v1alpha.DocumentService.ImportDocuments]
                   methods.

                   When ACL is enabled for the
                   [DataStore][google.cloud.discoveryengine.v1alpha.DataStore],
                   [Document][google.cloud.discoveryengine.v1alpha.Document] can't be accessed
                   by calling
                   [DocumentService.GetDocument][google.cloud.discoveryengine.v1alpha.DocumentService.GetDocument]
                   or
                   [DocumentService.ListDocuments][google.cloud.discoveryengine.v1alpha.DocumentService.ListDocuments].

                   Currently ACL is only supported in `GENERIC` industry vertical with
                   non-`PUBLIC_WEBSITE` content config.
                type: boolean
              collection:
                description: Immutable. The collection for the DataStore.
                type: string
                x-kubernetes-validations:
                - message: Collection field is immutable
                  rule: self == oldSelf
              contentConfig:
                description: Immutable. The content config of the data store. If this
                  field is unset, the server behavior defaults to [ContentConfig.NO_CONTENT][google.cloud.discoveryengine.v1alpha.DataStore.ContentConfig.NO_CONTENT].
                type: string
              displayName:
                description: |-
                  Required. The data store display name.

                   This field must be a UTF-8 encoded string with a length limit of 128
                   characters. Otherwise, an INVALID_ARGUMENT error is returned.
                type: string
              industryVertical:
                description: Immutable. The industry vertical that the data store
                  registers.
                type: string
              languageInfo:
                description: Language info for DataStore.
                properties:
                  languageCode:
                    description: The language code for the DataStore.
                    type: string
                type: object
              location:
                description: Required. The location of the application.
                type: string
              projectRef:
                description: Required. The host project of the application.
                oneOf:
                - not:
                    required:
                    - external
                  required:
                  - name
                - not:
                    anyOf:
                    - required:
                      - name
                    - required:
                      - namespace
                  required:
                  - external
                properties:
                  external:
                    description: The `projectID` field of a project, when not managed
                      by Config Connector.
                    type: string
                  kind:
                    description: The kind of the Project resource; optional but must
                      be `Project` if provided.
                    type: string
                  name:
                    description: The `name` field of a `Project` resource.
                    type: string
                  namespace:
                    description: The `namespace` field of a `Project` resource.
                    type: string
                type: object
              resourceID:
                description: The DiscoveryEngineDataStore name. If not given, the
                  metadata.name will be used.
                type: string
              solutionTypes:
                description: |-
                  The solutions that the data store enrolls. Available solutions for each
                   [industry_vertical][google.cloud.discoveryengine.v1alpha.DataStore.industry_vertical]:

                   * `MEDIA`: `SOLUTION_TYPE_RECOMMENDATION` and `SOLUTION_TYPE_SEARCH`.
                   * `SITE_SEARCH`: `SOLUTION_TYPE_SEARCH` is automatically enrolled. Other
                     solutions cannot be enrolled.
                items:
                  type: string
                type: array
              startingSchema:
                description: |-
                  The start schema to use for this
                   [DataStore][google.cloud.discoveryengine.v1alpha.DataStore] when
                   provisioning it. If unset, a default vertical specialized schema will be
                   used.

                   This field is only used by [CreateDataStore][] API, and will be ignored if
                   used in other APIs. This field will be omitted from all API responses
                   including [CreateDataStore][] API. To retrieve a schema of a
                   [DataStore][google.cloud.discoveryengine.v1alpha.DataStore], use
                   [SchemaService.GetSchema][google.cloud.discoveryengine.v1alpha.SchemaService.GetSchema]
                   API instead.

                   The provided schema will be validated against certain rules on schema.
                   Learn more from [this
                   doc](https://cloud.google.com/generative-ai-app-builder/docs/provide-schema).
                properties:
                  jsonSchema:
                    description: The JSON representation of the schema.
                    type: string
                  name:
                    description: |-
                      Immutable. The full resource name of the schema, in the format of
                       `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/schemas/{schema}`.

                       This field must be a UTF-8 encoded string with a length limit of 1024
                       characters.
                    type: string
                  structSchema:
                    additionalProperties:
                      type: string
                    description: The structured representation of the schema.
                    type: object
                type: object
              workspaceConfig:
                description: Config to store data store type configuration for workspace
                  data. This must be set when [DataStore.content_config][google.cloud.discoveryengine.v1alpha.DataStore.content_config]
                  is set as [DataStore.ContentConfig.GOOGLE_WORKSPACE][google.cloud.discoveryengine.v1alpha.DataStore.ContentConfig.GOOGLE_WORKSPACE].
                properties:
                  dasherCustomerID:
                    description: Obfuscated Dasher customer ID.
                    type: string
                  type:
                    description: The Google Workspace data source.
                    type: string
                type: object
            required:
            - collection
            - location
            - projectRef
            type: object
          status:
            description: DiscoveryEngineDataStoreStatus defines the config connector
              machine state of DiscoveryEngineDataStore
            properties:
              conditions:
                description: Conditions represent the latest available observations
                  of the object's current state.
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's
                        last transition.
                      type: string
                    status:
                      description: Status is the status of the condition. Can be True,
                        False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  type: object
                type: array
              externalRef:
                description: A unique specifier for the DiscoveryEngineDataStore resource
                  in GCP.
                type: string
              observedGeneration:
                description: ObservedGeneration is the generation of the resource
                  that was most recently observed by the Config Connector controller.
                  If this is equal to metadata.generation, then that means that the
                  current reported status reflects the most recent desired state of
                  the resource.
                format: int64
                type: integer
              observedState:
                description: ObservedState is the state of the resource as most recently
                  observed in GCP.
                properties:
                  createTime:
                    description: Output only. Timestamp the [DataStore][google.cloud.discoveryengine.v1alpha.DataStore]
                      was created at.
                    type: string
                  defaultSchemaID:
                    description: Output only. The id of the default [Schema][google.cloud.discoveryengine.v1alpha.Schema]
                      asscociated to this data store.
                    type: string
                  idpConfig:
                    description: Output only. Data store level identity provider config.
                    properties:
                      externalIdpConfig:
                        description: External Identity provider config.
                        properties:
                          workforcePoolName:
                            description: 'Workforce pool name. Example: "locations/global/workforcePools/pool_id"'
                            type: string
                        type: object
                      idpType:
                        description: Identity provider type configured.
                        type: string
                    type: object
                  languageInfo:
                    description: Language info for DataStore.
                    properties:
                      language:
                        description: 'Output only. Language part of normalized_language_code.
                          E.g.: `en-US` -> `en`, `zh-Hans-HK` -> `zh`, `en` -> `en`.'
                        type: string
                      normalizedLanguageCode:
                        description: 'Output only. This is the normalized form of
                          language_code. E.g.: language_code of `en-GB`, `en_GB`,
                          `en-UK` or `en-gb` will have normalized_language_code of
                          `en-GB`.'
                        type: string
                      region:
                        description: 'Output only. Region part of normalized_language_code,
                          if present. E.g.: `en-US` -> `US`, `zh-Hans-HK` -> `HK`,
                          `en` -> ``.'
                        type: string
                    type: object
                  startingSchema:
                    description: |-
                      The start schema to use for this
                       [DataStore][google.cloud.discoveryengine.v1alpha.DataStore] when
                       provisioning it. If unset, a default vertical specialized schema will be
                       used.

                       This field is only used by [CreateDataStore][] API, and will be ignored if
                       used in other APIs. This field will be omitted from all API responses
                       including [CreateDataStore][] API. To retrieve a schema of a
                       [DataStore][google.cloud.discoveryengine.v1alpha.DataStore], use
                       [SchemaService.GetSchema][google.cloud.discoveryengine.v1alpha.SchemaService.GetSchema]
                       API instead.

                       The provided schema will be validated against certain rules on schema.
                       Learn more from [this
                       doc](https://cloud.google.com/generative-ai-app-builder/docs/provide-schema).
                    properties:
                      fieldConfigs:
                        description: Output only. Configurations for fields of the
                          schema.
                        items:
                          properties:
                            advancedSiteSearchDataSources:
                              description: |-
                                If this field is set, only the corresponding source will be indexed for
                                 this field. Otherwise, the values from different sources are merged.

                                 Assuming a page with `<author, a>` in meta tag, and `<author, b>` in page
                                 map:
                                  if this enum is set to METATAGS, we will only index `<author, a>`;
                                  if this enum is not set, we will merge them and index `<author, [a, b]>`.
                              items:
                                type: string
                              type: array
                            completableOption:
                              description: |-
                                If
                                 [completable_option][google.cloud.discoveryengine.v1alpha.FieldConfig.completable_option]
                                 is
                                 [COMPLETABLE_ENABLED][google.cloud.discoveryengine.v1alpha.FieldConfig.CompletableOption.COMPLETABLE_ENABLED],
                                 field values are directly used and returned as suggestions for Autocomplete
                                 in
                                 [CompletionService.CompleteQuery][google.cloud.discoveryengine.v1alpha.CompletionService.CompleteQuery].

                                 If
                                 [completable_option][google.cloud.discoveryengine.v1alpha.FieldConfig.completable_option]
                                 is unset, the server behavior defaults to
                                 [COMPLETABLE_DISABLED][google.cloud.discoveryengine.v1alpha.FieldConfig.CompletableOption.COMPLETABLE_DISABLED]
                                 for fields that support setting completable options, which are just
                                 `string` fields. For those fields that do not support setting completable
                                 options, the server will skip completable option setting, and setting
                                 [completable_option][google.cloud.discoveryengine.v1alpha.FieldConfig.completable_option]
                                 for those fields will throw `INVALID_ARGUMENT` error.
                              type: string
                            dynamicFacetableOption:
                              description: |-
                                If
                                 [dynamic_facetable_option][google.cloud.discoveryengine.v1alpha.FieldConfig.dynamic_facetable_option]
                                 is
                                 [DYNAMIC_FACETABLE_ENABLED][google.cloud.discoveryengine.v1alpha.FieldConfig.DynamicFacetableOption.DYNAMIC_FACETABLE_ENABLED],
                                 field values are available for dynamic facet. Could only be
                                 [DYNAMIC_FACETABLE_DISABLED][google.cloud.discoveryengine.v1alpha.FieldConfig.DynamicFacetableOption.DYNAMIC_FACETABLE_DISABLED]
                                 if
                                 [FieldConfig.indexable_option][google.cloud.discoveryengine.v1alpha.FieldConfig.indexable_option]
                                 is
                                 [INDEXABLE_DISABLED][google.cloud.discoveryengine.v1alpha.FieldConfig.IndexableOption.INDEXABLE_DISABLED].
                                 Otherwise, an `INVALID_ARGUMENT` error will be returned.

                                 If
                                 [dynamic_facetable_option][google.cloud.discoveryengine.v1alpha.FieldConfig.dynamic_facetable_option]
                                 is unset, the server behavior defaults to
                                 [DYNAMIC_FACETABLE_DISABLED][google.cloud.discoveryengine.v1alpha.FieldConfig.DynamicFacetableOption.DYNAMIC_FACETABLE_DISABLED]
                                 for fields that support setting dynamic facetable options. For those fields
                                 that do not support setting dynamic facetable options, such as `object` and
                                 `boolean`, the server will skip dynamic facetable option setting, and
                                 setting
                                 [dynamic_facetable_option][google.cloud.discoveryengine.v1alpha.FieldConfig.dynamic_facetable_option]
                                 for those fields will throw `INVALID_ARGUMENT` error.
                              type: string
                            fieldPath:
                              description: 'Required. Field path of the schema field.
                                For example: `title`, `description`, `release_info.release_year`.'
                              type: string
                            indexableOption:
                              description: |-
                                If
                                 [indexable_option][google.cloud.discoveryengine.v1alpha.FieldConfig.indexable_option]
                                 is
                                 [INDEXABLE_ENABLED][google.cloud.discoveryengine.v1alpha.FieldConfig.IndexableOption.INDEXABLE_ENABLED],
                                 field values are indexed so that it can be filtered or faceted in
                                 [SearchService.Search][google.cloud.discoveryengine.v1alpha.SearchService.Search].

                                 If
                                 [indexable_option][google.cloud.discoveryengine.v1alpha.FieldConfig.indexable_option]
                                 is unset, the server behavior defaults to
                                 [INDEXABLE_DISABLED][google.cloud.discoveryengine.v1alpha.FieldConfig.IndexableOption.INDEXABLE_DISABLED]
                                 for fields that support setting indexable options. For those fields that do
                                 not support setting indexable options, such as `object` and `boolean` and
                                 key properties, the server will skip
                                 [indexable_option][google.cloud.discoveryengine.v1alpha.FieldConfig.indexable_option]
                                 setting, and setting
                                 [indexable_option][google.cloud.discoveryengine.v1alpha.FieldConfig.indexable_option]
                                 for those fields will throw `INVALID_ARGUMENT` error.
                              type: string
                            recsFilterableOption:
                              description: |-
                                If
                                 [recs_filterable_option][google.cloud.discoveryengine.v1alpha.FieldConfig.recs_filterable_option]
                                 is
                                 [FILTERABLE_ENABLED][google.cloud.discoveryengine.v1alpha.FieldConfig.FilterableOption.FILTERABLE_ENABLED],
                                 field values are filterable by filter expression in
                                 [RecommendationService.Recommend][google.cloud.discoveryengine.v1alpha.RecommendationService.Recommend].

                                 If
                                 [FILTERABLE_ENABLED][google.cloud.discoveryengine.v1alpha.FieldConfig.FilterableOption.FILTERABLE_ENABLED]
                                 but the field type is numerical, field values are not filterable by text
                                 queries in
                                 [RecommendationService.Recommend][google.cloud.discoveryengine.v1alpha.RecommendationService.Recommend].
                                 Only textual fields are supported.

                                 If
                                 [recs_filterable_option][google.cloud.discoveryengine.v1alpha.FieldConfig.recs_filterable_option]
                                 is unset, the default setting is
                                 [FILTERABLE_DISABLED][google.cloud.discoveryengine.v1alpha.FieldConfig.FilterableOption.FILTERABLE_DISABLED]
                                 for fields that support setting filterable options.

                                 When a field set to [FILTERABLE_DISABLED] is filtered, a warning is
                                 generated and an empty result is returned.
                              type: string
                            retrievableOption:
                              description: |-
                                If
                                 [retrievable_option][google.cloud.discoveryengine.v1alpha.FieldConfig.retrievable_option]
                                 is
                                 [RETRIEVABLE_ENABLED][google.cloud.discoveryengine.v1alpha.FieldConfig.RetrievableOption.RETRIEVABLE_ENABLED],
                                 field values are included in the search results.

                                 If
                                 [retrievable_option][google.cloud.discoveryengine.v1alpha.FieldConfig.retrievable_option]
                                 is unset, the server behavior defaults to
                                 [RETRIEVABLE_DISABLED][google.cloud.discoveryengine.v1alpha.FieldConfig.RetrievableOption.RETRIEVABLE_DISABLED]
                                 for fields that support setting retrievable options. For those fields
                                 that do not support setting retrievable options, such as `object` and
                                 `boolean`, the server will skip retrievable option setting, and setting
                                 [retrievable_option][google.cloud.discoveryengine.v1alpha.FieldConfig.retrievable_option]
                                 for those fields will throw `INVALID_ARGUMENT` error.
                              type: string
                            schemaOrgPaths:
                              description: |-
                                Field paths for indexing custom attribute from schema.org data. More
                                 details of schema.org and its defined types can be found at
                                 [schema.org](https://schema.org).

                                 It is only used on advanced site search schema.

                                 Currently only support full path from root. The full path to a field is
                                 constructed by concatenating field names, starting from `_root`, with
                                 a period `.` as the delimiter. Examples:

                                 * Publish date of the root: _root.datePublished
                                 * Publish date of the reviews: _root.review.datePublished
                              items:
                                type: string
                              type: array
                            searchableOption:
                              description: |-
                                If
                                 [searchable_option][google.cloud.discoveryengine.v1alpha.FieldConfig.searchable_option]
                                 is
                                 [SEARCHABLE_ENABLED][google.cloud.discoveryengine.v1alpha.FieldConfig.SearchableOption.SEARCHABLE_ENABLED],
                                 field values are searchable by text queries in
                                 [SearchService.Search][google.cloud.discoveryengine.v1alpha.SearchService.Search].

                                 If
                                 [SEARCHABLE_ENABLED][google.cloud.discoveryengine.v1alpha.FieldConfig.SearchableOption.SEARCHABLE_ENABLED]
                                 but field type is numerical, field values will not be searchable by text
                                 queries in
                                 [SearchService.Search][google.cloud.discoveryengine.v1alpha.SearchService.Search],
                                 as there are no text values associated to numerical fields.

                                 If
                                 [searchable_option][google.cloud.discoveryengine.v1alpha.FieldConfig.searchable_option]
                                 is unset, the server behavior defaults to
                                 [SEARCHABLE_DISABLED][google.cloud.discoveryengine.v1alpha.FieldConfig.SearchableOption.SEARCHABLE_DISABLED]
                                 for fields that support setting searchable options. Only `string` fields
                                 that have no key property mapping support setting
                                 [searchable_option][google.cloud.discoveryengine.v1alpha.FieldConfig.searchable_option].

                                 For those fields that do not support setting searchable options, the server
                                 will skip searchable option setting, and setting
                                 [searchable_option][google.cloud.discoveryengine.v1alpha.FieldConfig.searchable_option]
                                 for those fields will throw `INVALID_ARGUMENT` error.
                              type: string
                          type: object
                        type: array
                    type: object
                type: object
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
