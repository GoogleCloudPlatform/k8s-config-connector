apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cnrm.cloud.google.com/version: 0.0.0-dev
  creationTimestamp: null
  labels:
    cnrm.cloud.google.com/dcl2crd: "true"
    cnrm.cloud.google.com/managed-by-kcc: "true"
    cnrm.cloud.google.com/stability-level: stable
    cnrm.cloud.google.com/system: "true"
  name: iamworkforcepoolproviders.iam.cnrm.cloud.google.com
spec:
  group: iam.cnrm.cloud.google.com
  names:
    categories:
    - gcp
    kind: IAMWorkforcePoolProvider
    plural: iamworkforcepoolproviders
    shortNames:
    - gcpiamworkforcepoolprovider
    - gcpiamworkforcepoolproviders
    singular: iamworkforcepoolprovider
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: When 'True', the most recent reconcile of the resource succeeded
      jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - description: The reason for the value in 'Ready'
      jsonPath: .status.conditions[?(@.type=='Ready')].reason
      name: Status
      type: string
    - description: The last transition time for the value in 'Status'
      jsonPath: .status.conditions[?(@.type=='Ready')].lastTransitionTime
      name: Status Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'apiVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
            type: string
          kind:
            description: 'kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              attributeCondition:
                description: 'A [Common Expression Language](https://opensource.google/projects/cel)
                  expression, in plain text, to restrict what otherwise valid authentication
                  credentials issued by the provider should not be accepted. The expression
                  must output a boolean representing whether to allow the federation.
                  The following keywords may be referenced in the expressions: * `assertion`:
                  JSON representing the authentication credential issued by the provider.
                  * `google`: The Google attributes mapped from the assertion in the
                  `attribute_mappings`. `google.profile_photo` and `google.display_name`
                  are not supported. * `attribute`: The custom attributes mapped from
                  the assertion in the `attribute_mappings`. The maximum length of
                  the attribute condition expression is 4096 characters. If unspecified,
                  all valid authentication credentials will be accepted. The following
                  example shows how to only allow credentials with a mapped `google.groups`
                  value of `admins`: ``` "''admins'' in google.groups" ```'
                type: string
              attributeMapping:
                additionalProperties:
                  type: string
                description: 'Required. Maps attributes from the authentication credentials
                  issued by an external identity provider to Google Cloud attributes,
                  such as `subject` and `segment`. Each key must be a string specifying
                  the Google Cloud IAM attribute to map to. The following keys are
                  supported: * `google.subject`: The principal IAM is authenticating.
                  You can reference this value in IAM bindings. This is also the subject
                  that appears in Cloud Logging logs. This is a required field and
                  the mapped subject cannot exceed 127 bytes. * `google.groups`: Groups
                  the authenticating user belongs to. You can grant groups access
                  to resources using an IAM `principalSet` binding; access applies
                  to all members of the group. * `google.display_name`: The name of
                  the authenticated user. This is an optional field and the mapped
                  display name cannot exceed 100 bytes. If not set, `google.subject`
                  will be displayed instead. This attribute cannot be referenced in
                  IAM bindings. * `google.profile_photo`: The URL that specifies the
                  authenticated user''s thumbnail photo. This is an optional field.
                  When set, the image will be visible as the user''s profile picture.
                  If not set, a generic user icon will be displayed instead. This
                  attribute cannot be referenced in IAM bindings. You can also provide
                  custom attributes by specifying `attribute.{custom_attribute}`,
                  where {custom_attribute} is the name of the custom attribute to
                  be mapped. You can define a maximum of 50 custom attributes. The
                  maximum length of a mapped attribute key is 100 characters, and
                  the key may only contain the characters [a-z0-9_]. You can reference
                  these attributes in IAM policies to define fine-grained access for
                  a workforce pool to Google Cloud resources. For example:'
                type: object
              description:
                description: A user-specified description of the provider. Cannot
                  exceed 256 characters.
                type: string
              disabled:
                description: Whether the provider is disabled. You cannot use a disabled
                  provider to exchange tokens. However, existing tokens still grant
                  access.
                type: boolean
              displayName:
                description: A user-specified display name for the provider. Cannot
                  exceed 32 characters.
                type: string
              location:
                description: Immutable. The location for the resource
                type: string
              oidc:
                description: An OpenId Connect 1.0 identity provider configuration.
                properties:
                  clientId:
                    description: Required. The client ID. Must match the audience
                      claim of the JWT issued by the identity provider.
                    type: string
                  clientSecret:
                    description: The optional client secret. Required to enable Authorization
                      Code flow for web sign-in.
                    properties:
                      value:
                        description: The value of the client secret.
                        properties:
                          plainText:
                            description: Input only. The plain text of the client
                              secret value.
                            oneOf:
                            - not:
                                required:
                                - valueFrom
                              required:
                              - value
                            - not:
                                required:
                                - value
                              required:
                              - valueFrom
                            properties:
                              value:
                                description: Value of the field. Cannot be used if
                                  'valueFrom' is specified.
                                type: string
                              valueFrom:
                                description: Source for the field's value. Cannot
                                  be used if 'value' is specified.
                                properties:
                                  secretKeyRef:
                                    description: Reference to a value with the given
                                      key in the given Secret in the resource's namespace.
                                    properties:
                                      key:
                                        description: Key that identifies the value
                                          to be extracted.
                                        type: string
                                      name:
                                        description: Name of the Secret to extract
                                          a value from.
                                        type: string
                                    required:
                                    - name
                                    - key
                                    type: object
                                type: object
                            type: object
                        type: object
                    type: object
                  issuerUri:
                    description: Required. The OIDC issuer URI. Must be a valid URI
                      using the 'https' scheme.
                    type: string
                  jwksJson:
                    description: 'OIDC JWKs in JSON String format. For details on
                      definition of a JWK, see https:tools.ietf.org/html/rfc7517.
                      If not set, then we use the `jwks_uri` from the discovery document
                      fetched from the .well-known path for the `issuer_uri`. Currently,
                      RSA and EC asymmetric keys are supported. The JWK must use following
                      format and include only the following fields: ```{"keys": [{"kty":
                      "RSA/EC", "alg": "<algorithm>", "use": "sig", "kid": "<key-id>",
                      "n": "", "e": "", "x": "", "y": "", "crv": ""}]}```'
                    type: string
                  webSsoConfig:
                    description: Required. Configuration for web single sign-on for
                      the OIDC provider. Here, web sign-in refers to console sign-in
                      and gcloud sign-in through the browser.
                    properties:
                      additionalScopes:
                        description: Additional scopes to request for in the OIDC
                          authentication request on top of scopes requested by default.
                          By default, the `openid`, `profile` and `email` scopes that
                          are supported by the identity provider are requested. Each
                          additional scope may be at most 256 characters. A maximum
                          of 10 additional scopes may be configured.
                        items:
                          type: string
                        type: array
                      assertionClaimsBehavior:
                        description: 'Required. The behavior for how OIDC Claims are
                          included in the `assertion` object used for attribute mapping
                          and attribute condition. Possible values: ASSERTION_CLAIMS_BEHAVIOR_UNSPECIFIED,
                          MERGE_USER_INFO_OVER_ID_TOKEN_CLAIMS, ONLY_ID_TOKEN_CLAIMS'
                        type: string
                      responseType:
                        description: 'Required. The Response Type to request for in
                          the OIDC Authorization Request for web sign-in. The `CODE`
                          Response Type is recommended to avoid the Implicit Flow,
                          for security reasons. Possible values: RESPONSE_TYPE_UNSPECIFIED,
                          CODE, ID_TOKEN'
                        type: string
                    required:
                    - assertionClaimsBehavior
                    - responseType
                    type: object
                required:
                - clientId
                - issuerUri
                - webSsoConfig
                type: object
              resourceID:
                description: Immutable. Optional. The name of the resource. Used for
                  creation and acquisition. When unset, the value of `metadata.name`
                  is used as the default.
                type: string
              saml:
                description: A SAML identity provider configuration.
                properties:
                  idpMetadataXml:
                    description: 'Required. SAML Identity provider configuration metadata
                      xml doc. The xml document should comply with [SAML 2.0 specification](https://docs.oasis-open.org/security/saml/v2.0/saml-metadata-2.0-os.pdf).
                      The max size of the acceptable xml document will be bounded
                      to 128k characters. The metadata xml document should satisfy
                      the following constraints: 1) Must contain an Identity Provider
                      Entity ID. 2) Must contain at least one non-expired signing
                      key certificate. 3) For each signing key: a) Valid from should
                      be no more than 7 days from now. b) Valid to should be no more
                      than 10 years in the future. 4) Up to 3 IdP signing keys are
                      allowed in the metadata xml. When updating the provider''s metadata
                      xml, at least one non-expired signing key must overlap with
                      the existing metadata. This requirement is skipped if there
                      are no non-expired signing keys present in the existing metadata.'
                    type: string
                required:
                - idpMetadataXml
                type: object
              workforcePoolRef:
                description: Immutable.
                oneOf:
                - not:
                    required:
                    - external
                  required:
                  - name
                - not:
                    anyOf:
                    - required:
                      - name
                    - required:
                      - namespace
                  required:
                  - external
                properties:
                  external:
                    description: |-
                      The workforce_pool for the resource

                      Allowed value: The Google Cloud resource name of an `IAMWorkforcePool` resource (format: `locations/{{location}}/workforcePools/{{name}}`).
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                type: object
            required:
            - attributeMapping
            - location
            - workforcePoolRef
            type: object
          status:
            properties:
              conditions:
                description: Conditions represent the latest available observation
                  of the resource's current state.
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's
                        last transition.
                      type: string
                    status:
                      description: Status is the status of the condition. Can be True,
                        False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  type: object
                type: array
              observedGeneration:
                description: ObservedGeneration is the generation of the resource
                  that was most recently observed by the Config Connector controller.
                  If this is equal to metadata.generation, then that means that the
                  current reported status reflects the most recent desired state of
                  the resource.
                type: integer
              oidc:
                properties:
                  clientSecret:
                    properties:
                      value:
                        properties:
                          thumbprint:
                            description: Output only. A thumbprint to represent the
                              current client secret value.
                            type: string
                        type: object
                    type: object
                type: object
              state:
                description: 'Output only. The state of the provider. Possible values:
                  STATE_UNSPECIFIED, ACTIVE, DELETED'
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
