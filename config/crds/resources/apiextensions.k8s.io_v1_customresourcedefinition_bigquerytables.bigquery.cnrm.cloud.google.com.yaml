apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cnrm.cloud.google.com/version: 0.0.0-dev
  creationTimestamp: null
  labels:
    cnrm.cloud.google.com/managed-by-kcc: "true"
    cnrm.cloud.google.com/system: "true"
    cnrm.cloud.google.com/tf2crd: "true"
  name: bigquerytables.bigquery.cnrm.cloud.google.com
spec:
  group: bigquery.cnrm.cloud.google.com
  names:
    categories:
    - gcp
    kind: BigQueryTable
    listKind: BigQueryTableList
    plural: bigquerytables
    shortNames:
    - gcpbigquerytable
    - gcpbigquerytables
    singular: bigquerytable
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: When 'True', the most recent reconcile of the resource succeeded
      jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - description: The reason for the value in 'Ready'
      jsonPath: .status.conditions[?(@.type=='Ready')].reason
      name: Status
      type: string
    - description: The last transition time for the value in 'Status'
      jsonPath: .status.conditions[?(@.type=='Ready')].lastTransitionTime
      name: Status Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: BigQueryTable is the Schema for the BigQueryTable API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: BigQueryTableSpec defines the desired state of BigQueryTable
            properties:
              clustering:
                description: Clustering specification for the table. Must be specified
                  with time-based partitioning, data in the table will be first partitioned
                  and subsequently clustered.
                items:
                  type: string
                type: array
              datasetRef:
                description: DatasetRef defines the resource reference to BigQueryDataset,
                  which "External" field holds the GCP identifier for the KRM object.
                oneOf:
                - not:
                    required:
                    - external
                  required:
                  - name
                - not:
                    anyOf:
                    - required:
                      - name
                    - required:
                      - namespace
                  required:
                  - external
                properties:
                  external:
                    description: A reference to an externally-managed BigQueryDataset
                      resource. Should be in the format "projects/{{projectID}}/datasets/{{datasetID}}".
                    type: string
                  name:
                    description: The name of a BigQueryDataset resource.
                    type: string
                  namespace:
                    description: The namespace of a BigQueryDataset resource.
                    type: string
                type: object
              description:
                description: A user-friendly description of this table.
                type: string
              encryptionConfiguration:
                description: Custom encryption configuration (e.g., Cloud KMS keys).
                properties:
                  kmsKeyRef:
                    description: Describes the Cloud KMS encryption key that will
                      be used to protect destination BigQuery table. The BigQuery
                      Service Account associated with your project requires access
                      to this encryption key.
                    oneOf:
                    - not:
                        required:
                        - external
                      required:
                      - name
                    - not:
                        anyOf:
                        - required:
                          - name
                        - required:
                          - namespace
                      required:
                      - external
                    properties:
                      external:
                        description: A reference to an externally managed KMSCryptoKey.
                          Should be in the format `projects/[kms_project_id]/locations/[region]/keyRings/[key_ring_id]/cryptoKeys/[key]`.
                        type: string
                      name:
                        description: The `name` of a `KMSCryptoKey` resource.
                        type: string
                      namespace:
                        description: The `namespace` of a `KMSCryptoKey` resource.
                        type: string
                    type: object
                  kmsKeyVersion:
                    description: DEPRECATED. // The table will be encrypted with the
                      primary version of Cloud KMS encryption key. // The self link
                      or full name of the kms key version used to encrypt this table.
                    type: string
                required:
                - kmsKeyRef
                type: object
              expirationTime:
                description: The time when this table expires, in milliseconds since
                  the epoch. If not present, the table will persist indefinitely.
                  Expired tables will be deleted and their storage reclaimed.  The
                  defaultTableExpirationMs property of the encapsulating dataset can
                  be used to set a default expirationTime on newly created tables.
                format: int64
                type: integer
              externalDataConfiguration:
                description: Describes the data format, location, and other properties
                  of a table stored outside of BigQuery. By defining these properties,
                  the data source can then be queried as if it were a standard BigQuery
                  table.
                properties:
                  autodetect:
                    description: Try to detect schema and format options automatically.
                      Any option specified explicitly will be honored.
                    type: boolean
                  avroOptions:
                    description: Additional properties to set if sourceFormat is set
                      to AVRO.
                    properties:
                      useAvroLogicalTypes:
                        description: If sourceFormat is set to "AVRO", indicates whether
                          to interpret logical types as the corresponding BigQuery
                          data type (for example, TIMESTAMP), instead of using the
                          raw type (for example, INTEGER).
                        type: boolean
                    required:
                    - useAvroLogicalTypes
                    type: object
                  compression:
                    description: The compression type of the data source. Possible
                      values include GZIP and NONE. The default value is NONE. This
                      setting is ignored for Google Cloud Bigtable, Google Cloud Datastore
                      backups, Avro, ORC and Parquet formats. An empty string is an
                      invalid value.
                    type: string
                  connectionId:
                    description: The connection specifying the credentials to be used
                      to read external storage, such as Azure Blob, Cloud Storage,
                      or S3. The connection_id can have the form `{project_id}.{location_id};{connection_id}`
                      or `projects/{project_id}/locations/{location_id}/connections/{connection_id}`.
                    type: string
                  csvOptions:
                    description: Additional properties to set if sourceFormat is set
                      to CSV.
                    properties:
                      allowJaggedRows:
                        description: Indicates if BigQuery should accept rows that
                          are missing trailing optional columns. If true, BigQuery
                          treats missing trailing columns as null values. If false,
                          records with missing trailing columns are treated as bad
                          records, and if there are too many bad records, an invalid
                          error is returned in the job result. The default value is
                          false.
                        type: boolean
                      allowQuotedNewlines:
                        description: Indicates if BigQuery should allow quoted data
                          sections that contain newline characters in a CSV file.
                          The default value is false.
                        type: boolean
                      encoding:
                        description: The character encoding of the data. The supported
                          values are UTF-8, ISO-8859-1, UTF-16BE, UTF-16LE, UTF-32BE,
                          and UTF-32LE.  The default value is UTF-8. BigQuery decodes
                          the data after the raw, binary data has been split using
                          the values of the quote and fieldDelimiter properties.
                        type: string
                      fieldDelimiter:
                        description: The separator character for fields in a CSV file.
                          The separator is interpreted as a single byte. For files
                          encoded in ISO-8859-1, any single character can be used
                          as a separator. For files encoded in UTF-8, characters represented
                          in decimal range 1-127 (U+0001-U+007F) can be used without
                          any modification. UTF-8 characters encoded with multiple
                          bytes (i.e. U+0080 and above) will have only the first byte
                          used for separating fields. The remaining bytes will be
                          treated as a part of the field. BigQuery also supports the
                          escape sequence "\t" (U+0009) to specify a tab separator.
                          The default value is comma (",", U+002C).
                        type: string
                      quote:
                        description: The value that is used to quote data sections
                          in a CSV file. BigQuery converts the string to ISO-8859-1
                          encoding, and then uses the first byte of the encoded string
                          to split the data in its raw, binary state. The default
                          value is a double-quote ("). If your data does not contain
                          quoted sections, set the property value to an empty string.
                          If your data contains quoted newline characters, you must
                          also set the allowQuotedNewlines property to true. To include
                          the specific quote character within a quoted value, precede
                          it with an additional matching quote character. For example,
                          if you want to escape the default character  ' " ', use
                          ' "" '.
                        type: string
                      skipLeadingRows:
                        description: |-
                          The number of rows at the top of a CSV file that BigQuery will
                           skip when reading the data. The default value is 0. This property is
                           useful if you have header rows in the file that should be skipped.
                           When autodetect is on, the behavior is the following:

                           * skipLeadingRows unspecified - Autodetect tries to detect headers in the
                             first row. If they are not detected, the row is read as data. Otherwise
                             data is read starting from the second row.
                           * skipLeadingRows is 0 - Instructs autodetect that there are no headers and
                             data should be read starting from the first row.
                           * skipLeadingRows = N > 0 - Autodetect skips N-1 rows and tries to detect
                             headers in row N. If headers are not detected, row N is just skipped.
                             Otherwise row N is used to extract column names for the detected schema.
                        format: int64
                        type: integer
                    required:
                    - quote
                    type: object
                  fileSetSpecType:
                    description: Specifies how source URIs are interpreted for constructing
                      the file set to load.  By default source URIs are expanded against
                      the underlying storage.  Other options include specifying manifest
                      files. Only applicable to object storage systems.
                    type: string
                  googleSheetsOptions:
                    description: Additional options if sourceFormat is set to GOOGLE_SHEETS.
                    properties:
                      range:
                        description: 'Range of a sheet to query from. Only used when
                          non-empty. Typical format: sheet_name!top_left_cell_id:bottom_right_cell_id
                          For example: sheet1!A1:B20'
                        type: string
                      skipLeadingRows:
                        description: 'The number of rows at the top of a sheet that
                          BigQuery will skip when reading the data. The default value
                          is 0. This property is useful if you have header rows that
                          should be skipped. When autodetect is on, the behavior is
                          the following: * skipLeadingRows unspecified - Autodetect
                          tries to detect headers in the first row. If they are not
                          detected, the row is read as data. Otherwise data is read
                          starting from the second row. * skipLeadingRows is 0 - Instructs
                          autodetect that there are no headers and data should be
                          read starting from the first row. * skipLeadingRows = N
                          > 0 - Autodetect skips N-1 rows and tries to detect headers
                          in row N. If headers are not detected, row N is just skipped.
                          Otherwise row N is used to extract column names for the
                          detected schema.'
                        format: int64
                        type: integer
                    type: object
                  hivePartitioningOptions:
                    description: When set, configures hive partitioning support. Not
                      all storage formats support hive partitioning -- requesting
                      hive partitioning on an unsupported format will lead to an error,
                      as will providing an invalid specification.
                    properties:
                      mode:
                        description: |-
                          When set, what mode of hive partitioning to use when reading
                           data.  The following modes are supported:

                           * AUTO: automatically infer partition key name(s) and type(s).

                           * STRINGS: automatically infer partition key name(s).  All types are
                           strings.

                           * CUSTOM: partition key schema is encoded in the source URI prefix.

                           Not all storage formats support hive partitioning. Requesting hive
                           partitioning on an unsupported format will lead to an error.
                           Currently supported formats are: JSON, CSV, ORC, Avro and Parquet.
                        type: string
                      requirePartitionFilter:
                        description: |-
                          If set to true, queries over this table require a partition
                           filter that can be used for partition elimination to be specified.

                           Note that this field should only be true when creating a permanent
                           external table or querying a temporary external table.

                           Hive-partitioned loads with require_partition_filter explicitly set to
                           true will fail.
                        type: boolean
                      sourceUriPrefix:
                        description: |-
                          When hive partition detection is requested, a common prefix for
                           all source uris must be required.  The prefix must end immediately before
                           the partition key encoding begins. For example, consider files following
                           this data layout:

                           gs://bucket/path_to_table/dt=2019-06-01/country=USA/id=7/file.avro

                           gs://bucket/path_to_table/dt=2019-05-31/country=CA/id=3/file.avro

                           When hive partitioning is requested with either AUTO or STRINGS detection,
                           the common prefix can be either of gs://bucket/path_to_table or
                           gs://bucket/path_to_table/.

                           CUSTOM detection requires encoding the partitioning schema immediately
                           after the common prefix.  For CUSTOM, any of

                           * gs://bucket/path_to_table/{dt:DATE}/{country:STRING}/{id:INTEGER}

                           * gs://bucket/path_to_table/{dt:STRING}/{country:STRING}/{id:INTEGER}

                           * gs://bucket/path_to_table/{dt:DATE}/{country:STRING}/{id:STRING}

                           would all be valid source URI prefixes.
                        type: string
                    type: object
                  ignoreUnknownValues:
                    description: 'Indicates if BigQuery should allow extra values
                      that are not represented in the table schema. If true, the extra
                      values are ignored. If false, records with extra columns are
                      treated as bad records, and if there are too many bad records,
                      an invalid error is returned in the job result. The default
                      value is false. The sourceFormat property determines what BigQuery
                      treats as an extra value: CSV: Trailing columns JSON: Named
                      values that don''t match any column names Google Cloud Bigtable:
                      This setting is ignored. Google Cloud Datastore backups: This
                      setting is ignored. Avro: This setting is ignored. ORC: This
                      setting is ignored. Parquet: This setting is ignored.'
                    type: boolean
                  jsonOptions:
                    description: Additional properties to set if sourceFormat is set
                      to JSON.
                    properties:
                      encoding:
                        description: The character encoding of the data. The supported
                          values are UTF-8, UTF-16BE, UTF-16LE, UTF-32BE, and UTF-32LE.  The
                          default value is UTF-8.
                        type: string
                    type: object
                  maxBadRecords:
                    description: The maximum number of bad records that BigQuery can
                      ignore when reading data. If the number of bad records exceeds
                      this value, an invalid error is returned in the job result.
                      The default value is 0, which requires that all records are
                      valid. This setting is ignored for Google Cloud Bigtable, Google
                      Cloud Datastore backups, Avro, ORC and Parquet formats.
                    format: int64
                    type: integer
                  metadataCacheMode:
                    description: Metadata Cache Mode for the table. Set this to enable
                      caching of metadata from external data source.
                    type: string
                  objectMetadata:
                    description: |-
                      ObjectMetadata is used to create Object Tables. Object Tables
                       contain a listing of objects (with their metadata) found at the
                       source_uris. If ObjectMetadata is set, source_format should be omitted.

                       Currently SIMPLE is the only supported Object Metadata type.
                    type: string
                  parquetOptions:
                    description: Additional properties to set if sourceFormat is set
                      to PARQUET.
                    properties:
                      enableListInference:
                        description: Indicates whether to use schema inference specifically
                          for Parquet LIST logical type.
                        type: boolean
                      enumAsString:
                        description: Indicates whether to infer Parquet ENUM logical
                          type as STRING instead of BYTES by default.
                        type: boolean
                    type: object
                  referenceFileSchemaUri:
                    description: 'When creating an external table, the user can provide
                      a reference file with the table schema. This is enabled for
                      the following formats: AVRO, PARQUET, ORC.'
                    type: string
                  schema:
                    description: The schema for the data. Schema is required for CSV
                      and JSON formats if autodetect is not on. Schema is disallowed
                      for Google Cloud Bigtable, Cloud Datastore backups, Avro, ORC
                      and Parquet formats.
                    type: string
                  sourceFormat:
                    description: Please see sourceFormat under ExternalDataConfiguration
                      in Bigquery's public API documentation (https://cloud.google.com/bigquery/docs/reference/rest/v2/tables#externaldataconfiguration)
                      for supported formats. To use "GOOGLE_SHEETS" the scopes must
                      include "googleapis.com/auth/drive.readonly".
                    type: string
                  sourceUris:
                    description: "A list of the fully-qualified URIs that point to\tyour
                      data in Google Cloud."
                    items:
                      type: string
                    type: array
                required:
                - autodetect
                - sourceUris
                type: object
              friendlyName:
                description: A descriptive name for this table.
                type: string
              labels:
                additionalProperties:
                  type: string
                description: When using `alpha.cnrm.cloud.google.com/reconciler:direct`
                  annotion, use labels field to set the labels for this resource on
                  GCP. Otherwise, use .metadata.labels. Please refer to https://github.com/GoogleCloudPlatform/k8s-config-connector/issues/4274
                  for context. The labels associated with this table. You can use
                  these to organize and group your tables. Label keys and values can
                  be no longer than 63 characters, can only contain lowercase letters,
                  numeric characters, underscores and dashes. International characters
                  are allowed. Label values are optional. Label keys must start with
                  a letter and each label in the list must have a different key.
                type: object
              materializedView:
                description: The materialized view definition.
                properties:
                  allowNonIncrementalDefinition:
                    description: This option declares the intention to construct a
                      materialized view that isn't refreshed incrementally.
                    type: boolean
                  enableRefresh:
                    description: Enable automatic refresh of the materialized view
                      when the base table is updated. The default value is "true".
                    type: boolean
                  query:
                    description: Required. A query whose results are persisted.
                    type: string
                  refreshIntervalMs:
                    description: The maximum frequency at which this materialized
                      view will be refreshed. The default value is "1800000" (30 minutes).
                    format: int64
                    type: integer
                required:
                - query
                type: object
              maxStaleness:
                description: The maximum staleness of data that could be returned
                  when the table (or stale MV) is queried. Staleness encoded as a
                  string encoding of sql IntervalValue type.
                type: string
              rangePartitioning:
                description: If specified, configures range partitioning for this
                  table.
                properties:
                  field:
                    description: Required. The name of the column to partition the
                      table on. It must be a top-level, INT64 column whose mode is
                      NULLABLE or REQUIRED.
                    type: string
                  range:
                    description: Defines the ranges for range partitioning.
                    properties:
                      end:
                        description: Required. The end of range partitioning, exclusive.
                        format: int64
                        type: integer
                      interval:
                        description: Required. The width of each interval.
                        format: int64
                        type: integer
                      start:
                        description: Immutable. The start of range partitioning, inclusive.
                        format: int64
                        type: integer
                    required:
                    - end
                    - interval
                    - start
                    type: object
                required:
                - field
                - range
                type: object
              requirePartitionFilter:
                description: If set to true, queries over this table require a partition
                  filter that can be used for partition elimination to be specified.
                type: boolean
              resourceID:
                description: The BigQueryTable name. If not given, the metadata.name
                  will be used.
                type: string
              schema:
                description: Describes the schema of this table.
                type: string
              tableConstraints:
                description: Tables Primary Key and Foreign Key information
                properties:
                  foreignKeys:
                    description: Present only if the table has a foreign key. The
                      foreign key is not enforced.
                    items:
                      properties:
                        columnReferences:
                          description: Required. The columns that compose the foreign
                            key.
                          properties:
                            referencedColumn:
                              description: Required. The column in the primary key
                                that are referenced by the referencing_column.
                              type: string
                            referencingColumn:
                              description: Required. The column that composes the
                                foreign key.
                              type: string
                          required:
                          - referencedColumn
                          - referencingColumn
                          type: object
                        name:
                          description: Optional. Set only if the foreign key constraint
                            is named.
                          type: string
                        referencedTable:
                          description: Required. The table that holds the primary
                            key and is referenced by this foreign key.
                          properties:
                            datasetId:
                              description: The ID of the dataset containing this table.
                              type: string
                            projectId:
                              description: The ID of the project containing this table.
                              type: string
                            tableId:
                              description: The Id of the table. The Id can contain
                                Unicode characters in category L (letter), M (mark),
                                N (number), Pc (connector, including underscore),
                                Pd (dash), and Zs (space). For more information, see
                                [General Category](https://wikipedia.org/wiki/Unicode_character_property#General_Category).
                                The maximum length is 1,024 characters.  Certain operations
                                allow suffixing of the table Id with a partition decorator,
                                such as `sample_table$20190123`.
                              type: string
                          required:
                          - datasetId
                          - projectId
                          - tableId
                          type: object
                      required:
                      - columnReferences
                      - referencedTable
                      type: object
                    type: array
                  primaryKey:
                    description: Represents a primary key constraint on a table's
                      columns. Present only if the table has a primary key. The primary
                      key is not enforced.
                    properties:
                      columns:
                        description: Required. The columns that are composed of the
                          primary key constraint.
                        items:
                          type: string
                        type: array
                    required:
                    - columns
                    type: object
                type: object
              timePartitioning:
                description: If specified, configures time-based partitioning for
                  this table.
                properties:
                  expirationMs:
                    description: Number of milliseconds for which to keep the storage
                      for a partition. A wrapper is used here because 0 is an invalid
                      value.
                    format: int64
                    type: integer
                  field:
                    description: Optional. Immutable. If not set, the table is partitioned
                      by pseudo column '_PARTITIONTIME'; if set, the table is partitioned
                      by this field. The field must be a top-level TIMESTAMP or DATE
                      field. Its mode must be NULLABLE or REQUIRED. A wrapper is used
                      here because an empty string is an invalid value.
                    type: string
                  requirePartitionFilter:
                    description: DEPRECATED. This field is deprecated; please use
                      the top level field with the same name instead. If set to true,
                      queries over this table require a partition filter that can
                      be used for partition elimination to be specified.
                    type: boolean
                  type:
                    description: Required. The supported types are DAY, HOUR, MONTH,
                      and YEAR, which will generate one partition per day, hour, month,
                      and year, respectively.
                    type: string
                required:
                - type
                type: object
              view:
                description: The view definition.
                properties:
                  query:
                    description: Required. A query that BigQuery executes when the
                      view is referenced.
                    type: string
                  useLegacySql:
                    description: |-
                      Specifies whether to use BigQuery's legacy SQL for this view.
                       The default value is true. If set to false, the view will use
                       BigQuery's GoogleSQL:
                       https://cloud.google.com/bigquery/sql-reference/

                       Queries and views that reference this view must use the same flag value.
                       A wrapper is used here because the default value is True.
                    type: boolean
                required:
                - query
                type: object
            required:
            - datasetRef
            type: object
          status:
            description: BigQueryTableStatus defines the config connector machine
              state of BigQueryTable
            properties:
              conditions:
                description: Conditions represent the latest available observations
                  of the object's current state.
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's
                        last transition.
                      type: string
                    status:
                      description: Status is the status of the condition. Can be True,
                        False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  type: object
                type: array
              creationTime:
                description: Output only. The time when this table was created, in
                  milliseconds since the epoch.
                format: int64
                type: integer
              etag:
                description: Output only. A hash of this resource.
                type: string
              externalRef:
                description: A unique specifier for the BigQueryTable resource in
                  GCP.
                type: string
              lastModifiedTime:
                description: Output only. The time when this table was last modified,
                  in milliseconds since the epoch.
                format: int64
                type: integer
              location:
                description: Output only. The geographic location where the table
                  resides. This value is inherited from the dataset.
                type: string
              numBytes:
                description: Output only. The size of this table in logical bytes,
                  excluding any data in the streaming buffer.
                format: int64
                type: integer
              numLongTermBytes:
                description: Output only. The number of logical bytes in the table
                  that are considered "long-term storage".
                format: int64
                type: integer
              numRows:
                description: Output only. The number of rows of data in this table,
                  excluding any data in the streaming buffer.
                format: int64
                type: integer
              observedGeneration:
                description: ObservedGeneration is the generation of the resource
                  that was most recently observed by the Config Connector controller.
                  If this is equal to metadata.generation, then that means that the
                  current reported status reflects the most recent desired state of
                  the resource.
                format: int64
                type: integer
              observedState:
                description: ObservedState is the state of the resource as most recently
                  observed in GCP.
                type: object
              selfLink:
                description: Output only. A URL that can be used to access this resource
                  again.
                type: string
              type:
                description: |-
                  Output only. Describes the table type. The following values are supported:

                   * `TABLE`: A normal BigQuery table.
                   * `VIEW`: A virtual table defined by a SQL query.
                   * `EXTERNAL`: A table that references data stored in an external storage
                     system, such as Google Cloud Storage.
                   * `MATERIALIZED_VIEW`: A precomputed view defined by a SQL query.
                   * `SNAPSHOT`: An immutable BigQuery table that preserves the contents of a
                     base table at a particular time. See additional information on
                     [table
                     snapshots](https://cloud.google.com/bigquery/docs/table-snapshots-intro).

                   The default value is `TABLE`.
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
