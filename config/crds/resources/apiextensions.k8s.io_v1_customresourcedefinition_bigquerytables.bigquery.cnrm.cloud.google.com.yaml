apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cnrm.cloud.google.com/version: 0.0.0-dev
  creationTimestamp: null
  labels:
    cnrm.cloud.google.com/managed-by-kcc: "true"
    cnrm.cloud.google.com/system: "true"
  name: bigquerytables.bigquery.cnrm.cloud.google.com
spec:
  group: bigquery.cnrm.cloud.google.com
  names:
    categories:
    - gcp
    kind: BigqueryTable
    listKind: BigqueryTableList
    plural: bigquerytables
    shortNames:
    - gcpbigquerytable
    - gcpbigquerytables
    singular: bigquerytable
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: When 'True', the most recent reconcile of the resource succeeded
      jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - description: The reason for the value in 'Ready'
      jsonPath: .status.conditions[?(@.type=='Ready')].reason
      name: Status
      type: string
    - description: The last transition time for the value in 'Status'
      jsonPath: .status.conditions[?(@.type=='Ready')].lastTransitionTime
      name: Status Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: BigqueryTable is the Schema for the BigqueryTable API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: BigqueryTableSpec defines the desired state of BigqueryTable
            properties:
              biglakeConfiguration:
                description: Optional. Specifies the configuration of a BigLake managed
                  table.
                properties:
                  connectionID:
                    description: Optional. The connection specifying the credentials
                      to be used to read and write to external storage, such as Cloud
                      Storage. The connection_id can have the form `{project}.{location}.{connection_id}`
                      or `projects/{project}/locations/{location}/connections/{connection_id}".
                    type: string
                  fileFormat:
                    description: Optional. The file format the table data is stored
                      in.
                    type: string
                  storageURI:
                    description: Optional. The fully qualified location prefix of
                      the external folder where table data is stored. The '*' wildcard
                      character is not allowed. The URI should be in the format `gs://bucket/path_to_table/`
                    type: string
                  tableFormat:
                    description: Optional. The table format the metadata only snapshots
                      are stored in.
                    type: string
                type: object
              clustering:
                description: Clustering specification for the table. Must be specified
                  with time-based partitioning, data in the table will be first partitioned
                  and subsequently clustered.
                properties:
                  fields:
                    description: |-
                      One or more fields on which data should be clustered. Only top-level,
                       non-repeated, simple-type fields are supported. The ordering of the
                       clustering fields should be prioritized from most to least important
                       for filtering purposes.

                       Additional information on limitations can be found here:
                       https://cloud.google.com/bigquery/docs/creating-clustered-tables#limitations
                    items:
                      type: string
                    type: array
                type: object
              datasetRef:
                description: Required. The dataset the table belongs to.
                oneOf:
                - not:
                    required:
                    - external
                  required:
                  - name
                - not:
                    anyOf:
                    - required:
                      - name
                    - required:
                      - namespace
                  required:
                  - external
                properties:
                  external:
                    description: A reference to an externally managed BigQueryDataset
                      resource. Should be in the format "projects/<projectID>/datasets/<datasetID>".
                    type: string
                  name:
                    description: The name of a BigQueryDataset resource.
                    type: string
                  namespace:
                    description: The namespace of a BigQueryDataset resource.
                    type: string
                type: object
              defaultCollation:
                description: |-
                  Optional. Defines the default collation specification of new STRING fields
                   in the table. During table creation or update, if a STRING field is added
                   to this table without explicit collation specified, then the table inherits
                   the table default collation. A change to this field affects only fields
                   added afterwards, and does not alter the existing fields.
                   The following values are supported:

                   * 'und:ci': undetermined locale, case insensitive.
                   * '': empty string. Default to case-sensitive behavior.
                type: string
              defaultRoundingMode:
                description: Optional. Defines the default rounding mode specification
                  of new decimal fields (NUMERIC OR BIGNUMERIC) in the table. During
                  table creation or update, if a decimal field is added to this table
                  without an explicit rounding mode specified, then the field inherits
                  the table default rounding mode. Changing this field doesn't affect
                  existing fields.
                type: string
              description:
                description: Optional. A user-friendly description of this table.
                type: string
              encryptionConfiguration:
                description: Custom encryption configuration (e.g., Cloud KMS keys).
                properties:
                  kmsKeyName:
                    description: Optional. Describes the Cloud KMS encryption key
                      that will be used to protect destination BigQuery table. The
                      BigQuery Service Account associated with your project requires
                      access to this encryption key.
                    type: string
                type: object
              expirationTime:
                description: Optional. The time when this table expires, in milliseconds
                  since the epoch. If not present, the table will persist indefinitely.
                  Expired tables will be deleted and their storage reclaimed.  The
                  defaultTableExpirationMs property of the encapsulating dataset can
                  be used to set a default expirationTime on newly created tables.
                format: int64
                type: integer
              externalCatalogTableOptions:
                description: Optional. Options defining open source compatible table.
                properties:
                  connectionID:
                    description: Optional. The connection specifying the credentials
                      to be used to read external storage, such as Azure Blob, Cloud
                      Storage, or S3. The connection is needed to read the open source
                      table from BigQuery Engine. The connection_id can have the form
                      `<project_id>.<location_id>.<connection_id>` or `projects/<project_id>/locations/<location_id>/connections/<connection_id>`.
                    type: string
                  parameters:
                    additionalProperties:
                      type: string
                    description: Optional. A map of key value pairs defining the parameters
                      and properties of the open source table. Corresponds with hive
                      meta store table parameters. Maximum size of 4Mib.
                    type: object
                  storageDescriptor:
                    description: Optional. A storage descriptor containing information
                      about the physical storage of this table.
                    properties:
                      inputFormat:
                        description: Optional. Specifies the fully qualified class
                          name of the InputFormat (e.g. "org.apache.hadoop.hive.ql.io.orc.OrcInputFormat").
                          The maximum length is 128 characters.
                        type: string
                      locationURI:
                        description: Optional. The physical location of the table
                          (e.g. `gs://spark-dataproc-data/pangea-data/case_sensitive/`
                          or `gs://spark-dataproc-data/pangea-data/*`). The maximum
                          length is 2056 bytes.
                        type: string
                      outputFormat:
                        description: Optional. Specifies the fully qualified class
                          name of the OutputFormat (e.g. "org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat").
                          The maximum length is 128 characters.
                        type: string
                      serdeInfo:
                        description: Optional. Serializer and deserializer information.
                        properties:
                          name:
                            description: Optional. Name of the SerDe. The maximum
                              length is 256 characters.
                            type: string
                          parameters:
                            additionalProperties:
                              type: string
                            description: Optional. Key-value pairs that define the
                              initialization parameters for the serialization library.
                              Maximum size 10 Kib.
                            type: object
                          serializationLibrary:
                            description: Required. Specifies a fully-qualified class
                              name of the serialization library that is responsible
                              for the translation of data between table representation
                              and the underlying low-level input and output format
                              structures. The maximum length is 256 characters.
                            type: string
                        type: object
                    type: object
                type: object
              externalDataConfiguration:
                description: Optional. Describes the data format, location, and other
                  properties of a table stored outside of BigQuery. By defining these
                  properties, the data source can then be queried as if it were a
                  standard BigQuery table.
                properties:
                  autodetect:
                    description: Try to detect schema and format options automatically.
                      Any option specified explicitly will be honored.
                    type: boolean
                  avroOptions:
                    description: Optional. Additional properties to set if sourceFormat
                      is set to AVRO.
                    properties:
                      useAvroLogicalTypes:
                        description: Optional. If sourceFormat is set to "AVRO", indicates
                          whether to interpret logical types as the corresponding
                          BigQuery data type (for example, TIMESTAMP), instead of
                          using the raw type (for example, INTEGER).
                        type: boolean
                    type: object
                  bigtableOptions:
                    description: Optional. Additional options if sourceFormat is set
                      to BIGTABLE.
                    properties:
                      columnFamilies:
                        description: Optional. List of column families to expose in
                          the table schema along with their types. This list restricts
                          the column families that can be referenced in queries and
                          specifies their value types. You can use this list to do
                          type conversions - see the 'type' field for more details.
                          If you leave this list empty, all column families are present
                          in the table schema and their values are read as BYTES.
                          During a query only the column families referenced in that
                          query are read from Bigtable.
                        items:
                          properties:
                            columns:
                              description: Optional. Lists of columns that should
                                be exposed as individual fields as opposed to a list
                                of (column name, value) pairs. All columns whose qualifier
                                matches a qualifier in this list can be accessed as
                                `<family field name>.<column field name>`. Other columns
                                can be accessed as a list through the `<family field
                                name>.Column` field.
                              items:
                                properties:
                                  encoding:
                                    description: 'Optional. The encoding of the values
                                      when the type is not STRING. Acceptable encoding
                                      values are: TEXT - indicates values are alphanumeric
                                      text strings. BINARY - indicates values are
                                      encoded using HBase Bytes.toBytes family of
                                      functions. ''encoding'' can also be set at the
                                      column family level. However, the setting at
                                      this level takes precedence if ''encoding''
                                      is set at both levels.'
                                    type: string
                                  fieldName:
                                    description: Optional. If the qualifier is not
                                      a valid BigQuery field identifier i.e. does
                                      not match [a-zA-Z][a-zA-Z0-9_]*,  a valid identifier
                                      must be provided as the column field name and
                                      is used as field name in queries.
                                    type: string
                                  onlyReadLatest:
                                    description: Optional. If this is set, only the
                                      latest version of value in this column are exposed.
                                      'onlyReadLatest' can also be set at the column
                                      family level. However, the setting at this level
                                      takes precedence if 'onlyReadLatest' is set
                                      at both levels.
                                    type: boolean
                                  qualifierEncoded:
                                    description: '[Required] Qualifier of the column.
                                      Columns in the parent column family that has
                                      this exact qualifier are exposed as `<family
                                      field name>.<column field name>` field. If the
                                      qualifier is valid UTF-8 string, it can be specified
                                      in the qualifier_string field.  Otherwise, a
                                      base-64 encoded value must be set to qualifier_encoded.
                                      The column field name is the same as the column
                                      qualifier. However, if the qualifier is not
                                      a valid BigQuery field identifier i.e. does
                                      not match [a-zA-Z][a-zA-Z0-9_]*, a valid identifier
                                      must be provided as field_name.'
                                    properties:
                                      value:
                                        description: The bytes value.
                                        format: byte
                                        type: string
                                    type: object
                                  qualifierString:
                                    description: Qualifier string.
                                    type: string
                                  type:
                                    description: |-
                                      Optional. The type to convert the value in cells of this column.
                                       The values are expected to be encoded using HBase Bytes.toBytes function
                                       when using the BINARY encoding value.
                                       Following BigQuery types are allowed (case-sensitive):

                                       * BYTES
                                       * STRING
                                       * INTEGER
                                       * FLOAT
                                       * BOOLEAN
                                       * JSON

                                       Default type is BYTES.
                                       'type' can also be set at the column family level. However, the setting at
                                       this level takes precedence if 'type' is set at both levels.
                                    type: string
                                type: object
                              type: array
                            encoding:
                              description: 'Optional. The encoding of the values when
                                the type is not STRING. Acceptable encoding values
                                are: TEXT - indicates values are alphanumeric text
                                strings. BINARY - indicates values are encoded using
                                HBase Bytes.toBytes family of functions. This can
                                be overridden for a specific column by listing that
                                column in ''columns'' and specifying an encoding for
                                it.'
                              type: string
                            familyID:
                              description: Identifier of the column family.
                              type: string
                            onlyReadLatest:
                              description: Optional. If this is set only the latest
                                version of value are exposed for all columns in this
                                column family. This can be overridden for a specific
                                column by listing that column in 'columns' and specifying
                                a different setting for that column.
                              type: boolean
                            type:
                              description: |-
                                Optional. The type to convert the value in cells of this column family.
                                 The values are expected to be encoded using HBase Bytes.toBytes function
                                 when using the BINARY encoding value.
                                 Following BigQuery types are allowed (case-sensitive):

                                 * BYTES
                                 * STRING
                                 * INTEGER
                                 * FLOAT
                                 * BOOLEAN
                                 * JSON

                                 Default type is BYTES.
                                 This can be overridden for a specific column by listing that column in
                                 'columns' and specifying a type for it.
                              type: string
                          type: object
                        type: array
                      ignoreUnspecifiedColumnFamilies:
                        description: Optional. If field is true, then the column families
                          that are not specified in columnFamilies list are not exposed
                          in the table schema. Otherwise, they are read with BYTES
                          type values. The default value is false.
                        type: boolean
                      outputColumnFamiliesAsJson:
                        description: Optional. If field is true, then each column
                          family will be read as a single JSON column. Otherwise they
                          are read as a repeated cell structure containing timestamp/value
                          tuples. The default value is false.
                        type: boolean
                      readRowkeyAsString:
                        description: Optional. If field is true, then the rowkey column
                          families will be read and converted to string. Otherwise
                          they are read with BYTES type values and users need to manually
                          cast them with CAST if necessary. The default value is false.
                        type: boolean
                    type: object
                  compression:
                    description: Optional. The compression type of the data source.
                      Possible values include GZIP and NONE. The default value is
                      NONE. This setting is ignored for Google Cloud Bigtable, Google
                      Cloud Datastore backups, Avro, ORC and Parquet formats. An empty
                      string is an invalid value.
                    type: string
                  connectionID:
                    description: Optional. The connection specifying the credentials
                      to be used to read external storage, such as Azure Blob, Cloud
                      Storage, or S3. The connection_id can have the form `{project_id}.{location_id};{connection_id}`
                      or `projects/{project_id}/locations/{location_id}/connections/{connection_id}`.
                    type: string
                  csvOptions:
                    description: Optional. Additional properties to set if sourceFormat
                      is set to CSV.
                    properties:
                      allowJaggedRows:
                        description: Optional. Indicates if BigQuery should accept
                          rows that are missing trailing optional columns. If true,
                          BigQuery treats missing trailing columns as null values.
                          If false, records with missing trailing columns are treated
                          as bad records, and if there are too many bad records, an
                          invalid error is returned in the job result. The default
                          value is false.
                        type: boolean
                      allowQuotedNewlines:
                        description: Optional. Indicates if BigQuery should allow
                          quoted data sections that contain newline characters in
                          a CSV file. The default value is false.
                        type: boolean
                      encoding:
                        description: Optional. The character encoding of the data.
                          The supported values are UTF-8, ISO-8859-1, UTF-16BE, UTF-16LE,
                          UTF-32BE, and UTF-32LE.  The default value is UTF-8. BigQuery
                          decodes the data after the raw, binary data has been split
                          using the values of the quote and fieldDelimiter properties.
                        type: string
                      fieldDelimiter:
                        description: Optional. The separator character for fields
                          in a CSV file. The separator is interpreted as a single
                          byte. For files encoded in ISO-8859-1, any single character
                          can be used as a separator. For files encoded in UTF-8,
                          characters represented in decimal range 1-127 (U+0001-U+007F)
                          can be used without any modification. UTF-8 characters encoded
                          with multiple bytes (i.e. U+0080 and above) will have only
                          the first byte used for separating fields. The remaining
                          bytes will be treated as a part of the field. BigQuery also
                          supports the escape sequence "\t" (U+0009) to specify a
                          tab separator. The default value is comma (",", U+002C).
                        type: string
                      nullMarker:
                        description: Optional. Specifies a string that represents
                          a null value in a CSV file. For example, if you specify
                          "\N", BigQuery interprets "\N" as a null value when querying
                          a CSV file. The default value is the empty string. If you
                          set this property to a custom value, BigQuery throws an
                          error if an empty string is present for all data types except
                          for STRING and BYTE. For STRING and BYTE columns, BigQuery
                          interprets the empty string as an empty value.
                        type: string
                      preserveAsciiControlCharacters:
                        description: Optional. Indicates if the embedded ASCII control
                          characters (the first 32 characters in the ASCII-table,
                          from '\x00' to '\x1F') are preserved.
                        type: boolean
                      quote:
                        description: Optional. The value that is used to quote data
                          sections in a CSV file. BigQuery converts the string to
                          ISO-8859-1 encoding, and then uses the first byte of the
                          encoded string to split the data in its raw, binary state.
                          The default value is a double-quote ("). If your data does
                          not contain quoted sections, set the property value to an
                          empty string. If your data contains quoted newline characters,
                          you must also set the allowQuotedNewlines property to true.
                          To include the specific quote character within a quoted
                          value, precede it with an additional matching quote character.
                          For example, if you want to escape the default character  '
                          " ', use ' "" '.
                        type: string
                      skipLeadingRows:
                        description: |-
                          Optional. The number of rows at the top of a CSV file that BigQuery will
                           skip when reading the data. The default value is 0. This property is
                           useful if you have header rows in the file that should be skipped.
                           When autodetect is on, the behavior is the following:

                           * skipLeadingRows unspecified - Autodetect tries to detect headers in the
                             first row. If they are not detected, the row is read as data. Otherwise
                             data is read starting from the second row.
                           * skipLeadingRows is 0 - Instructs autodetect that there are no headers and
                             data should be read starting from the first row.
                           * skipLeadingRows = N > 0 - Autodetect skips N-1 rows and tries to detect
                             headers in row N. If headers are not detected, row N is just skipped.
                             Otherwise row N is used to extract column names for the detected schema.
                        format: int64
                        type: integer
                    type: object
                  decimalTargetTypes:
                    description: |-
                      Defines the list of possible SQL data types to which the source decimal
                       values are converted. This list and the precision and the scale parameters
                       of the decimal field determine the target type. In the order of NUMERIC,
                       BIGNUMERIC, and STRING, a
                       type is picked if it is in the specified list and if it supports the
                       precision and the scale. STRING supports all precision and scale values.
                       If none of the listed types supports the precision and the scale, the type
                       supporting the widest range in the specified list is picked, and if a value
                       exceeds the supported range when reading the data, an error will be thrown.

                       Example: Suppose the value of this field is ["NUMERIC", "BIGNUMERIC"].
                       If (precision,scale) is:

                       * (38,9) -> NUMERIC;
                       * (39,9) -> BIGNUMERIC (NUMERIC cannot hold 30 integer digits);
                       * (38,10) -> BIGNUMERIC (NUMERIC cannot hold 10 fractional digits);
                       * (76,38) -> BIGNUMERIC;
                       * (77,38) -> BIGNUMERIC (error if value exeeds supported range).

                       This field cannot contain duplicate types. The order of the types in this
                       field is ignored. For example, ["BIGNUMERIC", "NUMERIC"] is the same as
                       ["NUMERIC", "BIGNUMERIC"] and NUMERIC always takes precedence over
                       BIGNUMERIC.

                       Defaults to ["NUMERIC", "STRING"] for ORC and ["NUMERIC"] for the other
                       file formats.
                    items:
                      type: string
                    type: array
                  fileSetSpecType:
                    description: Optional. Specifies how source URIs are interpreted
                      for constructing the file set to load.  By default source URIs
                      are expanded against the underlying storage.  Other options
                      include specifying manifest files. Only applicable to object
                      storage systems.
                    type: string
                  googleSheetsOptions:
                    description: Optional. Additional options if sourceFormat is set
                      to GOOGLE_SHEETS.
                    properties:
                      range:
                        description: 'Optional. Range of a sheet to query from. Only
                          used when non-empty. Typical format: sheet_name!top_left_cell_id:bottom_right_cell_id
                          For example: sheet1!A1:B20'
                        type: string
                      skipLeadingRows:
                        description: 'Optional. The number of rows at the top of a
                          sheet that BigQuery will skip when reading the data. The
                          default value is 0. This property is useful if you have
                          header rows that should be skipped. When autodetect is on,
                          the behavior is the following: * skipLeadingRows unspecified
                          - Autodetect tries to detect headers in the first row. If
                          they are not detected, the row is read as data. Otherwise
                          data is read starting from the second row. * skipLeadingRows
                          is 0 - Instructs autodetect that there are no headers and
                          data should be read starting from the first row. * skipLeadingRows
                          = N > 0 - Autodetect skips N-1 rows and tries to detect
                          headers in row N. If headers are not detected, row N is
                          just skipped. Otherwise row N is used to extract column
                          names for the detected schema.'
                        format: int64
                        type: integer
                    type: object
                  hivePartitioningOptions:
                    description: Optional. When set, configures hive partitioning
                      support. Not all storage formats support hive partitioning --
                      requesting hive partitioning on an unsupported format will lead
                      to an error, as will providing an invalid specification.
                    properties:
                      mode:
                        description: |-
                          Optional. When set, what mode of hive partitioning to use when reading
                           data.  The following modes are supported:

                           * AUTO: automatically infer partition key name(s) and type(s).

                           * STRINGS: automatically infer partition key name(s).  All types are
                           strings.

                           * CUSTOM: partition key schema is encoded in the source URI prefix.

                           Not all storage formats support hive partitioning. Requesting hive
                           partitioning on an unsupported format will lead to an error.
                           Currently supported formats are: JSON, CSV, ORC, Avro and Parquet.
                        type: string
                      requirePartitionFilter:
                        description: |-
                          Optional. If set to true, queries over this table require a partition
                           filter that can be used for partition elimination to be specified.

                           Note that this field should only be true when creating a permanent
                           external table or querying a temporary external table.

                           Hive-partitioned loads with require_partition_filter explicitly set to
                           true will fail.
                        type: boolean
                      sourceURIPrefix:
                        description: |-
                          Optional. When hive partition detection is requested, a common prefix for
                           all source uris must be required.  The prefix must end immediately before
                           the partition key encoding begins. For example, consider files following
                           this data layout:

                           gs://bucket/path_to_table/dt=2019-06-01/country=USA/id=7/file.avro

                           gs://bucket/path_to_table/dt=2019-05-31/country=CA/id=3/file.avro

                           When hive partitioning is requested with either AUTO or STRINGS detection,
                           the common prefix can be either of gs://bucket/path_to_table or
                           gs://bucket/path_to_table/.

                           CUSTOM detection requires encoding the partitioning schema immediately
                           after the common prefix.  For CUSTOM, any of

                           * gs://bucket/path_to_table/{dt:DATE}/{country:STRING}/{id:INTEGER}

                           * gs://bucket/path_to_table/{dt:STRING}/{country:STRING}/{id:INTEGER}

                           * gs://bucket/path_to_table/{dt:DATE}/{country:STRING}/{id:STRING}

                           would all be valid source URI prefixes.
                        type: string
                    type: object
                  ignoreUnknownValues:
                    description: 'Optional. Indicates if BigQuery should allow extra
                      values that are not represented in the table schema. If true,
                      the extra values are ignored. If false, records with extra columns
                      are treated as bad records, and if there are too many bad records,
                      an invalid error is returned in the job result. The default
                      value is false. The sourceFormat property determines what BigQuery
                      treats as an extra value: CSV: Trailing columns JSON: Named
                      values that don''t match any column names Google Cloud Bigtable:
                      This setting is ignored. Google Cloud Datastore backups: This
                      setting is ignored. Avro: This setting is ignored. ORC: This
                      setting is ignored. Parquet: This setting is ignored.'
                    type: boolean
                  jsonExtension:
                    description: Optional. Load option to be used together with source_format
                      newline-delimited JSON to indicate that a variant of JSON is
                      being loaded. To load newline-delimited GeoJSON, specify GEOJSON
                      (and source_format must be set to NEWLINE_DELIMITED_JSON).
                    type: string
                  jsonOptions:
                    description: Optional. Additional properties to set if sourceFormat
                      is set to JSON.
                    properties:
                      encoding:
                        description: Optional. The character encoding of the data.
                          The supported values are UTF-8, UTF-16BE, UTF-16LE, UTF-32BE,
                          and UTF-32LE.  The default value is UTF-8.
                        type: string
                    type: object
                  maxBadRecords:
                    description: Optional. The maximum number of bad records that
                      BigQuery can ignore when reading data. If the number of bad
                      records exceeds this value, an invalid error is returned in
                      the job result. The default value is 0, which requires that
                      all records are valid. This setting is ignored for Google Cloud
                      Bigtable, Google Cloud Datastore backups, Avro, ORC and Parquet
                      formats.
                    properties:
                      value:
                        description: The int32 value.
                        format: int32
                        type: integer
                    type: object
                  metadataCacheMode:
                    description: Optional. Metadata Cache Mode for the table. Set
                      this to enable caching of metadata from external data source.
                    type: string
                  objectMetadata:
                    description: |-
                      Optional. ObjectMetadata is used to create Object Tables. Object Tables
                       contain a listing of objects (with their metadata) found at the
                       source_uris. If ObjectMetadata is set, source_format should be omitted.

                       Currently SIMPLE is the only supported Object Metadata type.
                    type: string
                  parquetOptions:
                    description: Optional. Additional properties to set if sourceFormat
                      is set to PARQUET.
                    properties:
                      enableListInference:
                        description: Optional. Indicates whether to use schema inference
                          specifically for Parquet LIST logical type.
                        type: boolean
                      enumAsString:
                        description: Optional. Indicates whether to infer Parquet
                          ENUM logical type as STRING instead of BYTES by default.
                        type: boolean
                      mapTargetType:
                        description: Optional. Indicates how to represent a Parquet
                          map if present.
                        type: string
                    type: object
                  referenceFileSchemaURI:
                    description: 'Optional. When creating an external table, the user
                      can provide a reference file with the table schema. This is
                      enabled for the following formats: AVRO, PARQUET, ORC.'
                    type: string
                  schema:
                    description: Optional. The schema for the data. Schema is required
                      for CSV and JSON formats if autodetect is not on. Schema is
                      disallowed for Google Cloud Bigtable, Cloud Datastore backups,
                      Avro, ORC and Parquet formats.
                    properties:
                      fields:
                        description: Describes the fields in a table.
                        items:
                          properties:
                            collation:
                              description: |-
                                Optional. Field collation can be set only when the type of field is STRING.
                                 The following values are supported:

                                 * 'und:ci': undetermined locale, case insensitive.
                                 * '': empty string. Default to case-sensitive behavior.
                              type: string
                            dataPolicies:
                              description: Optional. Data policy options, will replace
                                the data_policies.
                              items:
                                properties:
                                  name:
                                    description: Data policy resource name in the
                                      form of projects/project_id/locations/location_id/dataPolicies/data_policy_id.
                                    type: string
                                type: object
                              type: array
                            defaultValueExpression:
                              description: Optional. A SQL expression to specify the
                                [default value] (https://cloud.google.com/bigquery/docs/default-values)
                                for this field.
                              type: string
                            description:
                              description: Optional. The field description. The maximum
                                length is 1,024 characters.
                              type: string
                            fields:
                              description: Optional. Describes the nested schema fields
                                if the type property is set to RECORD.
                              items: {}
                              type: array
                            foreignTypeDefinition:
                              description: Optional. Definition of the foreign data
                                type. Only valid for top-level schema fields (not
                                nested fields). If the type is FOREIGN, this field
                                is required.
                              type: string
                            maxLength:
                              description: |-
                                Optional. Maximum length of values of this field for STRINGS or BYTES.

                                 If max_length is not specified, no maximum length constraint is imposed
                                 on this field.

                                 If type = "STRING", then max_length represents the maximum UTF-8
                                 length of strings in this field.

                                 If type = "BYTES", then max_length represents the maximum number of
                                 bytes in this field.

                                 It is invalid to set this field if type &ne; "STRING" and &ne; "BYTES".
                              format: int64
                              type: integer
                            mode:
                              description: Optional. The field mode. Possible values
                                include NULLABLE, REQUIRED and REPEATED. The default
                                value is NULLABLE.
                              type: string
                            name:
                              description: Required. The field name. The name must
                                contain only letters (a-z, A-Z), numbers (0-9), or
                                underscores (_), and must start with a letter or underscore.
                                The maximum length is 300 characters.
                              type: string
                            policyTags:
                              description: Optional. The policy tags attached to this
                                field, used for field-level access control. If not
                                set, defaults to empty policy_tags.
                              properties:
                                names:
                                  description: A list of policy tag resource names.
                                    For example, "projects/1/locations/eu/taxonomies/2/policyTags/3".
                                    At most 1 policy tag is currently allowed.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            precision:
                              description: |-
                                Optional. Precision (maximum number of total digits in base 10) and scale
                                 (maximum number of digits in the fractional part in base 10) constraints
                                 for values of this field for NUMERIC or BIGNUMERIC.

                                 It is invalid to set precision or scale if type &ne; "NUMERIC" and &ne;
                                 "BIGNUMERIC".

                                 If precision and scale are not specified, no value range constraint is
                                 imposed on this field insofar as values are permitted by the type.

                                 Values of this NUMERIC or BIGNUMERIC field must be in this range when:

                                 * Precision (<var>P</var>) and scale (<var>S</var>) are specified:
                                   [-10<sup><var>P</var>-<var>S</var></sup> + 10<sup>-<var>S</var></sup>,
                                    10<sup><var>P</var>-<var>S</var></sup> - 10<sup>-<var>S</var></sup>]
                                 * Precision (<var>P</var>) is specified but not scale (and thus scale is
                                   interpreted to be equal to zero):
                                   [-10<sup><var>P</var></sup> + 1, 10<sup><var>P</var></sup> - 1].

                                 Acceptable values for precision and scale if both are specified:

                                 * If type = "NUMERIC":
                                   1 &le; precision - scale &le; 29 and 0 &le; scale &le; 9.
                                 * If type = "BIGNUMERIC":
                                   1 &le; precision - scale &le; 38 and 0 &le; scale &le; 38.

                                 Acceptable values for precision if only precision is specified but not
                                 scale (and thus scale is interpreted to be equal to zero):

                                 * If type = "NUMERIC": 1 &le; precision &le; 29.
                                 * If type = "BIGNUMERIC": 1 &le; precision &le; 38.

                                 If scale is specified but not precision, then it is invalid.
                              format: int64
                              type: integer
                            rangeElementType:
                              description: |-
                                Optional. The subtype of the RANGE, if the type of this field is RANGE. If
                                 the type is RANGE, this field is required. Values for the field element
                                 type can be the following:

                                 * DATE
                                 * DATETIME
                                 * TIMESTAMP
                              properties:
                                type:
                                  description: Required. The type of a field element.
                                    For more information, see [TableFieldSchema.type][google.cloud.bigquery.v2.TableFieldSchema.type].
                                  type: string
                              type: object
                            roundingMode:
                              description: Optional. Specifies the rounding mode to
                                be used when storing values of NUMERIC and BIGNUMERIC
                                type.
                              type: string
                            scale:
                              description: Optional. See documentation for precision.
                              format: int64
                              type: integer
                            type:
                              description: |-
                                Required. The field data type. Possible values include:

                                 * STRING
                                 * BYTES
                                 * INTEGER (or INT64)
                                 * FLOAT (or FLOAT64)
                                 * BOOLEAN (or BOOL)
                                 * TIMESTAMP
                                 * DATE
                                 * TIME
                                 * DATETIME
                                 * GEOGRAPHY
                                 * NUMERIC
                                 * BIGNUMERIC
                                 * JSON
                                 * RECORD (or STRUCT)
                                 * RANGE

                                 Use of RECORD/STRUCT indicates that the field contains a nested schema.
                              type: string
                          type: object
                        type: array
                      foreignTypeInfo:
                        description: Optional. Specifies metadata of the foreign data
                          type definition in field schema ([TableFieldSchema.foreign_type_definition][google.cloud.bigquery.v2.TableFieldSchema.foreign_type_definition]).
                        properties:
                          typeSystem:
                            description: Required. Specifies the system which defines
                              the foreign data type.
                            type: string
                        type: object
                    type: object
                  sourceFormat:
                    description: '[Required] The data format. For CSV files, specify
                      "CSV". For Google sheets, specify "GOOGLE_SHEETS". For newline-delimited
                      JSON, specify "NEWLINE_DELIMITED_JSON". For Avro files, specify
                      "AVRO". For Google Cloud Datastore backups, specify "DATASTORE_BACKUP".
                      For Apache Iceberg tables, specify "ICEBERG". For ORC files,
                      specify "ORC". For Parquet files, specify "PARQUET". [Beta]
                      For Google Cloud Bigtable, specify "BIGTABLE".'
                    type: string
                  sourceUris:
                    description: '[Required] The fully-qualified URIs that point to
                      your data in Google Cloud. For Google Cloud Storage URIs: Each
                      URI can contain one ''*'' wildcard character and it must come
                      after the ''bucket'' name. Size limits related to load jobs
                      apply to external data sources. For Google Cloud Bigtable URIs:
                      Exactly one URI can be specified and it has be a fully specified
                      and valid HTTPS URL for a Google Cloud Bigtable table. For Google
                      Cloud Datastore backups, exactly one URI can be specified. Also,
                      the ''*'' wildcard character is not allowed.'
                    items:
                      type: string
                    type: array
                type: object
              friendlyName:
                description: Optional. A descriptive name for this table.
                type: string
              kind:
                description: The type of resource ID.
                type: string
              labels:
                additionalProperties:
                  type: string
                description: The labels associated with this table. You can use these
                  to organize and group your tables. Label keys and values can be
                  no longer than 63 characters, can only contain lowercase letters,
                  numeric characters, underscores and dashes. International characters
                  are allowed. Label values are optional. Label keys must start with
                  a letter and each label in the list must have a different key.
                type: object
              materializedView:
                description: Optional. The materialized view definition.
                properties:
                  allowNonIncrementalDefinition:
                    description: Optional. This option declares the intention to construct
                      a materialized view that isn't refreshed incrementally.
                    type: boolean
                  enableRefresh:
                    description: Optional. Enable automatic refresh of the materialized
                      view when the base table is updated. The default value is "true".
                    type: boolean
                  query:
                    description: Required. A query whose results are persisted.
                    type: string
                  refreshIntervalMs:
                    description: Optional. The maximum frequency at which this materialized
                      view will be refreshed. The default value is "1800000" (30 minutes).
                    properties:
                      value:
                        description: The uint64 value.
                        format: int64
                        type: integer
                    type: object
                type: object
              maxStaleness:
                description: Optional. The maximum staleness of data that could be
                  returned when the table (or stale MV) is queried. Staleness encoded
                  as a string encoding of sql IntervalValue type.
                type: string
              partitionDefinition:
                description: Optional. The partition information for all table formats,
                  including managed partitioned tables, hive partitioned tables, iceberg
                  partitioned, and metastore partitioned tables. This field is only
                  populated for metastore partitioned tables. For other table formats,
                  this is an output only field.
                properties:
                  partitionedColumn:
                    description: |-
                      Optional. Details about each partitioning column. This field is output only
                       for all partitioning types other than metastore partitioned tables.
                       BigQuery native tables only support 1 partitioning column. Other table
                       types may support 0, 1 or more partitioning columns.
                       For metastore partitioned tables, the order must match the definition order
                       in the Hive Metastore, where it must match the physical layout of the
                       table. For example,

                       CREATE TABLE a_table(id BIGINT, name STRING)
                       PARTITIONED BY (city STRING, state STRING).

                       In this case the values must be ['city', 'state'] in that order.
                    items:
                      properties:
                        field:
                          description: Required. The name of the partition column.
                          type: string
                      type: object
                    type: array
                type: object
              rangePartitioning:
                description: If specified, configures range partitioning for this
                  table.
                properties:
                  field:
                    description: Required. The name of the column to partition the
                      table on. It must be a top-level, INT64 column whose mode is
                      NULLABLE or REQUIRED.
                    type: string
                  range:
                    description: Defines the ranges for range partitioning.
                    properties:
                      end:
                        description: Required. The end of range partitioning, exclusive.
                          This field is an INT64 value represented as a string.
                        type: string
                      interval:
                        description: Required. The width of each interval. This field
                          is an INT64 value represented as a string.
                        type: string
                      start:
                        description: Required. The start of range partitioning, inclusive.
                          This field is an INT64 value represented as a string.
                        type: string
                    type: object
                type: object
              requirePartitionFilter:
                description: Optional. If set to true, queries over this table require
                  a partition filter that can be used for partition elimination to
                  be specified.
                type: boolean
              resourceID:
                description: The GCP resource identifier. If not given, the metadata.name
                  will be used.
                type: string
              resourceTags:
                additionalProperties:
                  type: string
                description: Optional. The [tags](https://cloud.google.com/bigquery/docs/tags)
                  attached to this table. Tag keys are globally unique. Tag key is
                  expected to be in the namespaced format, for example "123456789012/environment"
                  where 123456789012 is the ID of the parent organization or project
                  resource for this tag key. Tag value is expected to be the short
                  name, for example "Production". See [Tag definitions](https://cloud.google.com/iam/docs/tags-access-control#definitions)
                  for more details.
                type: object
              schema:
                description: Optional. Describes the schema of this table.
                properties:
                  fields:
                    description: Describes the fields in a table.
                    items:
                      properties:
                        collation:
                          description: |-
                            Optional. Field collation can be set only when the type of field is STRING.
                             The following values are supported:

                             * 'und:ci': undetermined locale, case insensitive.
                             * '': empty string. Default to case-sensitive behavior.
                          type: string
                        dataPolicies:
                          description: Optional. Data policy options, will replace
                            the data_policies.
                          items:
                            properties:
                              name:
                                description: Data policy resource name in the form
                                  of projects/project_id/locations/location_id/dataPolicies/data_policy_id.
                                type: string
                            type: object
                          type: array
                        defaultValueExpression:
                          description: Optional. A SQL expression to specify the [default
                            value] (https://cloud.google.com/bigquery/docs/default-values)
                            for this field.
                          type: string
                        description:
                          description: Optional. The field description. The maximum
                            length is 1,024 characters.
                          type: string
                        fields:
                          description: Optional. Describes the nested schema fields
                            if the type property is set to RECORD.
                          items: {}
                          type: array
                        foreignTypeDefinition:
                          description: Optional. Definition of the foreign data type.
                            Only valid for top-level schema fields (not nested fields).
                            If the type is FOREIGN, this field is required.
                          type: string
                        maxLength:
                          description: |-
                            Optional. Maximum length of values of this field for STRINGS or BYTES.

                             If max_length is not specified, no maximum length constraint is imposed
                             on this field.

                             If type = "STRING", then max_length represents the maximum UTF-8
                             length of strings in this field.

                             If type = "BYTES", then max_length represents the maximum number of
                             bytes in this field.

                             It is invalid to set this field if type &ne; "STRING" and &ne; "BYTES".
                          format: int64
                          type: integer
                        mode:
                          description: Optional. The field mode. Possible values include
                            NULLABLE, REQUIRED and REPEATED. The default value is
                            NULLABLE.
                          type: string
                        name:
                          description: Required. The field name. The name must contain
                            only letters (a-z, A-Z), numbers (0-9), or underscores
                            (_), and must start with a letter or underscore. The maximum
                            length is 300 characters.
                          type: string
                        policyTags:
                          description: Optional. The policy tags attached to this
                            field, used for field-level access control. If not set,
                            defaults to empty policy_tags.
                          properties:
                            names:
                              description: A list of policy tag resource names. For
                                example, "projects/1/locations/eu/taxonomies/2/policyTags/3".
                                At most 1 policy tag is currently allowed.
                              items:
                                type: string
                              type: array
                          type: object
                        precision:
                          description: |-
                            Optional. Precision (maximum number of total digits in base 10) and scale
                             (maximum number of digits in the fractional part in base 10) constraints
                             for values of this field for NUMERIC or BIGNUMERIC.

                             It is invalid to set precision or scale if type &ne; "NUMERIC" and &ne;
                             "BIGNUMERIC".

                             If precision and scale are not specified, no value range constraint is
                             imposed on this field insofar as values are permitted by the type.

                             Values of this NUMERIC or BIGNUMERIC field must be in this range when:

                             * Precision (<var>P</var>) and scale (<var>S</var>) are specified:
                               [-10<sup><var>P</var>-<var>S</var></sup> + 10<sup>-<var>S</var></sup>,
                                10<sup><var>P</var>-<var>S</var></sup> - 10<sup>-<var>S</var></sup>]
                             * Precision (<var>P</var>) is specified but not scale (and thus scale is
                               interpreted to be equal to zero):
                               [-10<sup><var>P</var></sup> + 1, 10<sup><var>P</var></sup> - 1].

                             Acceptable values for precision and scale if both are specified:

                             * If type = "NUMERIC":
                               1 &le; precision - scale &le; 29 and 0 &le; scale &le; 9.
                             * If type = "BIGNUMERIC":
                               1 &le; precision - scale &le; 38 and 0 &le; scale &le; 38.

                             Acceptable values for precision if only precision is specified but not
                             scale (and thus scale is interpreted to be equal to zero):

                             * If type = "NUMERIC": 1 &le; precision &le; 29.
                             * If type = "BIGNUMERIC": 1 &le; precision &le; 38.

                             If scale is specified but not precision, then it is invalid.
                          format: int64
                          type: integer
                        rangeElementType:
                          description: |-
                            Optional. The subtype of the RANGE, if the type of this field is RANGE. If
                             the type is RANGE, this field is required. Values for the field element
                             type can be the following:

                             * DATE
                             * DATETIME
                             * TIMESTAMP
                          properties:
                            type:
                              description: Required. The type of a field element.
                                For more information, see [TableFieldSchema.type][google.cloud.bigquery.v2.TableFieldSchema.type].
                              type: string
                          type: object
                        roundingMode:
                          description: Optional. Specifies the rounding mode to be
                            used when storing values of NUMERIC and BIGNUMERIC type.
                          type: string
                        scale:
                          description: Optional. See documentation for precision.
                          format: int64
                          type: integer
                        type:
                          description: |-
                            Required. The field data type. Possible values include:

                             * STRING
                             * BYTES
                             * INTEGER (or INT64)
                             * FLOAT (or FLOAT64)
                             * BOOLEAN (or BOOL)
                             * TIMESTAMP
                             * DATE
                             * TIME
                             * DATETIME
                             * GEOGRAPHY
                             * NUMERIC
                             * BIGNUMERIC
                             * JSON
                             * RECORD (or STRUCT)
                             * RANGE

                             Use of RECORD/STRUCT indicates that the field contains a nested schema.
                          type: string
                      type: object
                    type: array
                  foreignTypeInfo:
                    description: Optional. Specifies metadata of the foreign data
                      type definition in field schema ([TableFieldSchema.foreign_type_definition][google.cloud.bigquery.v2.TableFieldSchema.foreign_type_definition]).
                    properties:
                      typeSystem:
                        description: Required. Specifies the system which defines
                          the foreign data type.
                        type: string
                    type: object
                type: object
              tableConstraints:
                description: Optional. Tables Primary Key and Foreign Key information
                properties:
                  foreignKeys:
                    description: Optional. Present only if the table has a foreign
                      key. The foreign key is not enforced.
                    items:
                      properties:
                        columnReferences:
                          description: Required. The columns that compose the foreign
                            key.
                          items:
                            properties:
                              referencedColumn:
                                description: Required. The column in the primary key
                                  that are referenced by the referencing_column.
                                type: string
                              referencingColumn:
                                description: Required. The column that composes the
                                  foreign key.
                                type: string
                            type: object
                          type: array
                        name:
                          description: Optional. Set only if the foreign key constraint
                            is named.
                          type: string
                        referencedTable:
                          description: Required. The table that holds the primary
                            key and is referenced by this foreign key.
                          properties:
                            datasetID:
                              description: Required. The ID of the dataset containing
                                this table.
                              type: string
                            projectID:
                              description: Required. The ID of the project containing
                                this table.
                              type: string
                            tableID:
                              description: Required. The ID of the table. The ID can
                                contain Unicode characters in category L (letter),
                                M (mark), N (number), Pc (connector, including underscore),
                                Pd (dash), and Zs (space). For more information, see
                                [General Category](https://wikipedia.org/wiki/Unicode_character_property#General_Category).
                                The maximum length is 1,024 characters.  Certain operations
                                allow suffixing of the table ID with a partition decorator,
                                such as `sample_table$20190123`.
                              type: string
                          type: object
                      type: object
                    type: array
                  primaryKey:
                    description: Optional. Represents a primary key constraint on
                      a table's columns. Present only if the table has a primary key.
                      The primary key is not enforced.
                    properties:
                      columns:
                        description: Required. The columns that are composed of the
                          primary key constraint.
                        items:
                          type: string
                        type: array
                    type: object
                type: object
              tableReplicationInfo:
                description: 'Optional. Table replication info for table created `AS
                  REPLICA` DDL like: `CREATE MATERIALIZED VIEW mv1 AS REPLICA OF src_mv`'
                properties:
                  replicationIntervalMs:
                    description: Optional. Specifies the interval at which the source
                      table is polled for updates. It's Optional. If not specified,
                      default replication interval would be applied.
                    format: int64
                    type: integer
                  sourceTable:
                    description: Required. Source table reference that is replicated.
                    properties:
                      datasetID:
                        description: Required. The ID of the dataset containing this
                          table.
                        type: string
                      projectID:
                        description: Required. The ID of the project containing this
                          table.
                        type: string
                      tableID:
                        description: Required. The ID of the table. The ID can contain
                          Unicode characters in category L (letter), M (mark), N (number),
                          Pc (connector, including underscore), Pd (dash), and Zs
                          (space). For more information, see [General Category](https://wikipedia.org/wiki/Unicode_character_property#General_Category).
                          The maximum length is 1,024 characters.  Certain operations
                          allow suffixing of the table ID with a partition decorator,
                          such as `sample_table$20190123`.
                        type: string
                    type: object
                type: object
              timePartitioning:
                description: If specified, configures time-based partitioning for
                  this table.
                properties:
                  expirationMs:
                    description: Optional. Number of milliseconds for which to keep
                      the storage for a partition. A wrapper is used here because
                      0 is an invalid value.
                    format: int64
                    type: integer
                  field:
                    description: Optional. If not set, the table is partitioned by
                      pseudo column '_PARTITIONTIME'; if set, the table is partitioned
                      by this field. The field must be a top-level TIMESTAMP or DATE
                      field. Its mode must be NULLABLE or REQUIRED. A wrapper is used
                      here because an empty string is an invalid value.
                    type: string
                  type:
                    description: Required. The supported types are DAY, HOUR, MONTH,
                      and YEAR, which will generate one partition per day, hour, month,
                      and year, respectively.
                    type: string
                type: object
              view:
                description: Optional. The view definition.
                properties:
                  foreignDefinitions:
                    description: Optional. Foreign view representations.
                    items:
                      properties:
                        dialect:
                          description: Optional. Represents the dialect of the query.
                          type: string
                        query:
                          description: Required. The query that defines the view.
                          type: string
                      type: object
                    type: array
                  privacyPolicy:
                    description: Optional. Specifies the privacy policy for the view.
                    properties:
                      aggregationThresholdPolicy:
                        description: Optional. Policy used for aggregation thresholds.
                        properties:
                          privacyUnitColumns:
                            description: Optional. The privacy unit column(s) associated
                              with this policy. For now, only one column per data
                              source object (table, view) is allowed as a privacy
                              unit column. Representing as a repeated field in metadata
                              for extensibility to multiple columns in future. Duplicates
                              and Repeated struct fields are not allowed. For nested
                              fields, use dot notation ("outer.inner")
                            items:
                              type: string
                            type: array
                          threshold:
                            description: Optional. The threshold for the "aggregation
                              threshold" policy.
                            format: int64
                            type: integer
                        type: object
                      differentialPrivacyPolicy:
                        description: Optional. Policy used for differential privacy.
                        properties:
                          deltaBudget:
                            description: Optional. The total delta budget for all
                              queries against the privacy-protected view. Each subscriber
                              query against this view charges the amount of delta
                              that is pre-defined by the contributor through the privacy
                              policy delta_per_query field. If there is sufficient
                              budget, then the subscriber query attempts to complete.
                              It might still fail due to other reasons, in which case
                              the charge is refunded. If there is insufficient budget
                              the query is rejected. There might be multiple charge
                              attempts if a single query references multiple views.
                              In this case there must be sufficient budget for all
                              charges or the query is rejected and charges are refunded
                              in best effort. The budget does not have a refresh policy
                              and can only be updated via ALTER VIEW or circumvented
                              by creating a new view that can be queried with a fresh
                              budget.
                            type: number
                          deltaPerQuery:
                            description: Optional. The delta value that is used per
                              query. Delta represents the probability that any row
                              will fail to be epsilon differentially private. Indicates
                              the risk associated with exposing aggregate rows in
                              the result of a query.
                            type: number
                          epsilonBudget:
                            description: Optional. The total epsilon budget for all
                              queries against the privacy-protected view. Each subscriber
                              query against this view charges the amount of epsilon
                              they request in their query. If there is sufficient
                              budget, then the subscriber query attempts to complete.
                              It might still fail due to other reasons, in which case
                              the charge is refunded. If there is insufficient budget
                              the query is rejected. There might be multiple charge
                              attempts if a single query references multiple views.
                              In this case there must be sufficient budget for all
                              charges or the query is rejected and charges are refunded
                              in best effort. The budget does not have a refresh policy
                              and can only be updated via ALTER VIEW or circumvented
                              by creating a new view that can be queried with a fresh
                              budget.
                            type: number
                          maxEpsilonPerQuery:
                            description: Optional. The maximum epsilon value that
                              a query can consume. If the subscriber specifies epsilon
                              as a parameter in a SELECT query, it must be less than
                              or equal to this value. The epsilon parameter controls
                              the amount of noise that is added to the groups — a
                              higher epsilon means less noise.
                            type: number
                          maxGroupsContributed:
                            description: Optional. The maximum groups contributed
                              value that is used per query. Represents the maximum
                              number of groups to which each protected entity can
                              contribute. Changing this value does not improve or
                              worsen privacy. The best value for accuracy and utility
                              depends on the query and data.
                            format: int64
                            type: integer
                          privacyUnitColumn:
                            description: Optional. The privacy unit column associated
                              with this policy. Differential privacy policies can
                              only have one privacy unit column per data source object
                              (table, view).
                            type: string
                        type: object
                      joinRestrictionPolicy:
                        description: Optional. Join restriction policy is outside
                          of the one of policies, since this policy can be set along
                          with other policies. This policy gives data providers the
                          ability to enforce joins on the 'join_allowed_columns' when
                          data is queried from a privacy protected view.
                        properties:
                          joinAllowedColumns:
                            description: Optional. The only columns that joins are
                              allowed on. This field is must be specified for join_conditions
                              JOIN_ANY and JOIN_ALL and it cannot be set for JOIN_BLOCKED.
                            items:
                              type: string
                            type: array
                          joinCondition:
                            description: Optional. Specifies if a join is required
                              or not on queries for the view. Default is JOIN_CONDITION_UNSPECIFIED.
                            type: string
                        type: object
                    type: object
                  query:
                    description: Required. A query that BigQuery executes when the
                      view is referenced.
                    type: string
                  useExplicitColumnNames:
                    description: True if the column names are explicitly specified.
                      For example by using the 'CREATE VIEW v(c1, c2) AS ...' syntax.
                      Can only be set for GoogleSQL views.
                    type: boolean
                  useLegacySQL:
                    description: |-
                      Specifies whether to use BigQuery's legacy SQL for this view.
                       The default value is true. If set to false, the view will use
                       BigQuery's GoogleSQL:
                       https://cloud.google.com/bigquery/sql-reference/

                       Queries and views that reference this view must use the same flag value.
                       A wrapper is used here because the default value is True.
                    type: boolean
                  userDefinedFunctionResources:
                    description: Describes user-defined function resources used in
                      the query.
                    items:
                      properties:
                        inlineCode:
                          description: '[Pick one] An inline resource that contains
                            code for a user-defined function (UDF). Providing a inline
                            code resource is equivalent to providing a URI for a file
                            containing the same code.'
                          type: string
                        resourceURI:
                          description: '[Pick one] A code resource to load from a
                            Google Cloud Storage URI (gs://bucket/path).'
                          type: string
                      type: object
                    type: array
                type: object
            type: object
          status:
            description: BigqueryTableStatus defines the config connector machine
              state of BigqueryTable
            properties:
              conditions:
                description: Conditions represent the latest available observations
                  of the object's current state.
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's
                        last transition.
                      type: string
                    status:
                      description: Status is the status of the condition. Can be True,
                        False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  type: object
                type: array
              externalRef:
                description: A unique specifier for the BigqueryTable resource in
                  GCP.
                type: string
              observedGeneration:
                description: ObservedGeneration is the generation of the resource
                  that was most recently observed by the Config Connector controller.
                  If this is equal to metadata.generation, then that means that the
                  current reported status reflects the most recent desired state of
                  the resource.
                format: int64
                type: integer
              observedState:
                description: ObservedState is the state of the resource as most recently
                  observed in GCP.
                properties:
                  cloneDefinition:
                    description: Output only. Contains information about the clone.
                      This value is set via the clone operation.
                    properties:
                      baseTableReference:
                        description: Required. Reference describing the ID of the
                          table that was cloned.
                        properties:
                          datasetID:
                            description: Required. The ID of the dataset containing
                              this table.
                            type: string
                          projectID:
                            description: Required. The ID of the project containing
                              this table.
                            type: string
                          tableID:
                            description: Required. The ID of the table. The ID can
                              contain Unicode characters in category L (letter), M
                              (mark), N (number), Pc (connector, including underscore),
                              Pd (dash), and Zs (space). For more information, see
                              [General Category](https://wikipedia.org/wiki/Unicode_character_property#General_Category).
                              The maximum length is 1,024 characters.  Certain operations
                              allow suffixing of the table ID with a partition decorator,
                              such as `sample_table$20190123`.
                            type: string
                        type: object
                      cloneTime:
                        description: Required. The time at which the base table was
                          cloned. This value is reported in the JSON response using
                          RFC3339 format.
                        type: string
                    type: object
                  creationTime:
                    description: Output only. The time when this table was created,
                      in milliseconds since the epoch.
                    format: int64
                    type: integer
                  etag:
                    description: Output only. A hash of this resource.
                    type: string
                  externalDataConfiguration:
                    description: Optional. Describes the data format, location, and
                      other properties of a table stored outside of BigQuery. By defining
                      these properties, the data source can then be queried as if
                      it were a standard BigQuery table.
                    properties:
                      hivePartitioningOptions:
                        description: Optional. When set, configures hive partitioning
                          support. Not all storage formats support hive partitioning
                          -- requesting hive partitioning on an unsupported format
                          will lead to an error, as will providing an invalid specification.
                        properties:
                          fields:
                            description: Output only. For permanent external tables,
                              this field is populated with the hive partition keys
                              in the order they were inferred. The types of the partition
                              keys can be deduced by checking the table schema (which
                              will include the partition keys). Not every API will
                              populate this field in the output. For example, Tables.Get
                              will populate it, but Tables.List will not contain this
                              field.
                            items:
                              type: string
                            type: array
                        type: object
                    type: object
                  id:
                    description: Output only. An opaque ID uniquely identifying the
                      table.
                    type: string
                  lastModifiedTime:
                    description: Output only. The time when this table was last modified,
                      in milliseconds since the epoch.
                    format: int64
                    type: integer
                  location:
                    description: Output only. The geographic location where the table
                      resides. This value is inherited from the dataset.
                    type: string
                  materializedView:
                    description: Optional. The materialized view definition.
                    properties:
                      lastRefreshTime:
                        description: Output only. The time when this materialized
                          view was last refreshed, in milliseconds since the epoch.
                        format: int64
                        type: integer
                    type: object
                  materializedViewStatus:
                    description: Output only. The materialized view status.
                    type: object
                  numActiveLogicalBytes:
                    description: Output only. Number of logical bytes that are less
                      than 90 days old.
                    format: int64
                    type: integer
                  numActivePhysicalBytes:
                    description: Output only. Number of physical bytes less than 90
                      days old. This data is not kept in real time, and might be delayed
                      by a few seconds to a few minutes.
                    format: int64
                    type: integer
                  numBytes:
                    description: Output only. The size of this table in logical bytes,
                      excluding any data in the streaming buffer.
                    format: int64
                    type: integer
                  numCurrentPhysicalBytes:
                    description: Output only. Number of physical bytes used by current
                      live data storage. This data is not kept in real time, and might
                      be delayed by a few seconds to a few minutes.
                    format: int64
                    type: integer
                  numLongTermBytes:
                    description: Output only. The number of logical bytes in the table
                      that are considered "long-term storage".
                    format: int64
                    type: integer
                  numLongTermLogicalBytes:
                    description: Output only. Number of logical bytes that are more
                      than 90 days old.
                    format: int64
                    type: integer
                  numLongTermPhysicalBytes:
                    description: Output only. Number of physical bytes more than 90
                      days old. This data is not kept in real time, and might be delayed
                      by a few seconds to a few minutes.
                    format: int64
                    type: integer
                  numPartitions:
                    description: Output only. The number of partitions present in
                      the table or materialized view. This data is not kept in real
                      time, and might be delayed by a few seconds to a few minutes.
                    format: int64
                    type: integer
                  numPhysicalBytes:
                    description: Output only. The physical size of this table in bytes.
                      This includes storage used for time travel.
                    format: int64
                    type: integer
                  numRows:
                    description: Output only. The number of rows of data in this table,
                      excluding any data in the streaming buffer.
                    properties:
                      value:
                        description: The uint64 value.
                        format: int64
                        type: integer
                    type: object
                  numTimeTravelPhysicalBytes:
                    description: Output only. Number of physical bytes used by time
                      travel storage (deleted or changed data). This data is not kept
                      in real time, and might be delayed by a few seconds to a few
                      minutes.
                    format: int64
                    type: integer
                  numTotalLogicalBytes:
                    description: Output only. Total number of logical bytes in the
                      table or materialized view.
                    format: int64
                    type: integer
                  numTotalPhysicalBytes:
                    description: Output only. The physical size of this table in bytes.
                      This also includes storage used for time travel. This data is
                      not kept in real time, and might be delayed by a few seconds
                      to a few minutes.
                    format: int64
                    type: integer
                  replicas:
                    description: Optional. Output only. Table references of all replicas
                      currently active on the table.
                    items:
                      properties:
                        datasetID:
                          description: Required. The ID of the dataset containing
                            this table.
                          type: string
                        projectID:
                          description: Required. The ID of the project containing
                            this table.
                          type: string
                        tableID:
                          description: Required. The ID of the table. The ID can contain
                            Unicode characters in category L (letter), M (mark), N
                            (number), Pc (connector, including underscore), Pd (dash),
                            and Zs (space). For more information, see [General Category](https://wikipedia.org/wiki/Unicode_character_property#General_Category).
                            The maximum length is 1,024 characters.  Certain operations
                            allow suffixing of the table ID with a partition decorator,
                            such as `sample_table$20190123`.
                          type: string
                      type: object
                    type: array
                  restrictions:
                    description: Optional. Output only. Restriction config for table.
                      If set, restrict certain accesses on the table based on the
                      config. See [Data egress](https://cloud.google.com/bigquery/docs/analytics-hub-introduction#data_egress)
                      for more details.
                    type: object
                  selfLink:
                    description: Output only. A URL that can be used to access this
                      resource again.
                    type: string
                  snapshotDefinition:
                    description: Output only. Contains information about the snapshot.
                      This value is set via snapshot creation.
                    properties:
                      baseTableReference:
                        description: Required. Reference describing the ID of the
                          table that was snapshot.
                        properties:
                          datasetID:
                            description: Required. The ID of the dataset containing
                              this table.
                            type: string
                          projectID:
                            description: Required. The ID of the project containing
                              this table.
                            type: string
                          tableID:
                            description: Required. The ID of the table. The ID can
                              contain Unicode characters in category L (letter), M
                              (mark), N (number), Pc (connector, including underscore),
                              Pd (dash), and Zs (space). For more information, see
                              [General Category](https://wikipedia.org/wiki/Unicode_character_property#General_Category).
                              The maximum length is 1,024 characters.  Certain operations
                              allow suffixing of the table ID with a partition decorator,
                              such as `sample_table$20190123`.
                            type: string
                        type: object
                      snapshotTime:
                        description: Required. The time at which the base table was
                          snapshot. This value is reported in the JSON response using
                          RFC3339 format.
                        type: string
                    type: object
                  streamingBuffer:
                    description: Output only. Contains information regarding this
                      table's streaming buffer, if one is present. This field will
                      be absent if the table is not being streamed to or if there
                      is no data in the streaming buffer.
                    type: object
                  tableReplicationInfo:
                    description: 'Optional. Table replication info for table created
                      `AS REPLICA` DDL like: `CREATE MATERIALIZED VIEW mv1 AS REPLICA
                      OF src_mv`'
                    properties:
                      replicatedSourceLastRefreshTime:
                        description: Optional. Output only. If source is a materialized
                          view, this field signifies the last refresh time of the
                          source.
                        format: int64
                        type: integer
                      replicationError:
                        description: Optional. Output only. Replication error that
                          will permanently stopped table replication.
                        properties:
                          debugInfo:
                            description: Debugging information. This property is internal
                              to Google and should not be used.
                            type: string
                          location:
                            description: Specifies where the error occurred, if present.
                            type: string
                          message:
                            description: A human-readable description of the error.
                            type: string
                          reason:
                            description: A short error code that summarizes the error.
                            type: string
                        type: object
                      replicationStatus:
                        description: Optional. Output only. Replication status of
                          configured replication.
                        type: string
                    type: object
                  type:
                    description: |-
                      Output only. Describes the table type. The following values are supported:

                       * `TABLE`: A normal BigQuery table.
                       * `VIEW`: A virtual table defined by a SQL query.
                       * `EXTERNAL`: A table that references data stored in an external storage
                         system, such as Google Cloud Storage.
                       * `MATERIALIZED_VIEW`: A precomputed view defined by a SQL query.
                       * `SNAPSHOT`: An immutable BigQuery table that preserves the contents of a
                         base table at a particular time. See additional information on
                         [table
                         snapshots](https://cloud.google.com/bigquery/docs/table-snapshots-intro).

                       The default value is `TABLE`.
                    type: string
                  view:
                    description: Optional. The view definition.
                    properties:
                      privacyPolicy:
                        description: Optional. Specifies the privacy policy for the
                          view.
                        properties:
                          differentialPrivacyPolicy:
                            description: Optional. Policy used for differential privacy.
                            properties:
                              deltaBudgetRemaining:
                                description: Output only. The delta budget remaining.
                                  If budget is exhausted, no more queries are allowed.
                                  Note that the budget for queries that are in progress
                                  is deducted before the query executes. If the query
                                  fails or is cancelled then the budget is refunded.
                                  In this case the amount of budget remaining can
                                  increase.
                                type: number
                              epsilonBudgetRemaining:
                                description: Output only. The epsilon budget remaining.
                                  If budget is exhausted, no more queries are allowed.
                                  Note that the budget for queries that are in progress
                                  is deducted before the query executes. If the query
                                  fails or is cancelled then the budget is refunded.
                                  In this case the amount of budget remaining can
                                  increase.
                                type: number
                            type: object
                        type: object
                    type: object
                type: object
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
