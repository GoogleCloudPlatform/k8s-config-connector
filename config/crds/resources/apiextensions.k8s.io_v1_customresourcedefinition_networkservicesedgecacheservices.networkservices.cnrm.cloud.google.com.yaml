apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cnrm.cloud.google.com/version: 0.0.0-dev
  creationTimestamp: null
  labels:
    cnrm.cloud.google.com/managed-by-kcc: "true"
    cnrm.cloud.google.com/system: "true"
  name: networkservicesedgecacheservices.networkservices.cnrm.cloud.google.com
spec:
  group: networkservices.cnrm.cloud.google.com
  names:
    categories:
    - gcp
    kind: NetworkServicesEdgeCacheService
    listKind: NetworkServicesEdgeCacheServiceList
    plural: networkservicesedgecacheservices
    shortNames:
    - gcpnetworkservicesedgecacheservice
    - gcpnetworkservicesedgecacheservices
    singular: networkservicesedgecacheservice
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: When 'True', the most recent reconcile of the resource succeeded
      jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - description: The reason for the value in 'Ready'
      jsonPath: .status.conditions[?(@.type=='Ready')].reason
      name: Status
      type: string
    - description: The last transition time for the value in 'Status'
      jsonPath: .status.conditions[?(@.type=='Ready')].lastTransitionTime
      name: Status Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: NetworkServicesEdgeCacheService is the Schema for the NetworkServicesEdgeCacheService
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: NetworkServicesEdgeCacheServiceSpec defines the desired state
              of NetworkServicesEdgeCacheService
            properties:
              description:
                description: Optional. A human-readable description of the resource.
                type: string
              disableHttp2:
                description: Optional. Disables HTTP/2. HTTP/2 (h2) is enabled by
                  default and recommended for performance. HTTP/2 improves connection
                  re-use and reduces connection setup overhead by sending multiple
                  streams over the same connection.
                type: boolean
              disableQuic:
                description: Optional. HTTP/3 (IETF QUIC) and Google QUIC are enabled
                  by default.
                type: boolean
              edgeSecurityPolicy:
                description: Optional. Resource URL that points at the Cloud Armor
                  edge security policy that is applied on each request against the
                  EdgeCacheService.
                type: string
              edgeSslCertificates:
                description: 'Optional. URLs to sslCertificate resources that are
                  used to authenticate connections between users and the EdgeCacheService.
                  Note that only "global" certificates with a "scope" of "EDGE_CACHE"
                  can be attached to an EdgeCacheService. Format: projects/{project}/global/sslCertificates/{certificate}'
                items:
                  type: string
                type: array
              labels:
                additionalProperties:
                  type: string
                description: Optional. Set of label tags associated with the EdgeCacheService
                  resource.
                type: object
              location:
                type: string
              logConfig:
                description: Optional. Specifies the logging options for the traffic
                  served by this service. If logging is enabled, logs will be exported
                  to Cloud Logging.
                properties:
                  enable:
                    description: Optional. Specifies whether to enable logging for
                      traffic served by this service.
                    type: boolean
                  sampleRate:
                    description: Optional. Configures the sampling rate of requests.
                      Must be between 0.0 and 1.0 inclusive.
                    type: number
                type: object
              projectRef:
                description: The Project that this resource belongs to.
                oneOf:
                - not:
                    required:
                    - external
                  required:
                  - name
                - not:
                    anyOf:
                    - required:
                      - name
                    - required:
                      - namespace
                  required:
                  - external
                properties:
                  external:
                    description: The `projectID` field of a project, when not managed
                      by Config Connector.
                    type: string
                  kind:
                    description: The kind of the Project resource; optional but must
                      be `Project` if provided.
                    type: string
                  name:
                    description: The `name` field of a `Project` resource.
                    type: string
                  namespace:
                    description: The `namespace` field of a `Project` resource.
                    type: string
                type: object
              requireTls:
                description: Optional. Require TLS (HTTPS) for all clients connecting
                  to this service.
                type: boolean
              resourceID:
                description: The NetworkServicesEdgeCacheService name. If not given,
                  the metadata.name will be used.
                type: string
              routing:
                description: Required. Defines how requests are routed, modified,
                  cached and/or which origin content is filled from.
                properties:
                  hostRules:
                    description: Required. The list of hostRules to match against.
                      These rules define which hostnames the EdgeCacheService will
                      match against, and which route to use for the request.
                    items:
                      properties:
                        description:
                          description: Optional. A human-readable description of the
                            hostRule.
                          type: string
                        hosts:
                          description: Required. The list of host patterns to match.
                            Host patterns must be valid hostnames. Ports are not allowed.
                            Wildcard hosts are supported in the form of "*" or "*-foo.example.com".
                          items:
                            type: string
                          type: array
                        pathMatcher:
                          description: Required. The name of the pathMatcher associated
                            with this hostRule.
                          type: string
                      required:
                      - hosts
                      - pathMatcher
                      type: object
                    type: array
                  pathMatchers:
                    description: Required. The list of pathMatchers referenced via
                      name by hostRules. PathMatcher is used to match the path portion
                      of the URL when a HostRule matches the URL's host portion.
                    items:
                      properties:
                        description:
                          description: Optional. A human-readable description of the
                            resource.
                          type: string
                        name:
                          description: Required. The name to which this PathMatcher
                            is referred by the HostRule.
                          type: string
                        routeRules:
                          description: Required. The routeRules to match against.
                            Each rule must reference an origin via the route_action
                            or a urlRedirect.
                          items:
                            properties:
                              description:
                                description: Optional. A human-readable description
                                  of the routeRule.
                                type: string
                              headerAction:
                                description: Optional. The header actions, including
                                  adding and removing headers, for requests that match
                                  this route.
                                properties:
                                  requestHeadersToAdd:
                                    description: Optional. Describes headers to add
                                      to the request before forwarding to origin.
                                    items:
                                      properties:
                                        headerName:
                                          description: Required. The name of the header
                                            to add.
                                          type: string
                                        headerValue:
                                          description: Required. The value of the
                                            header to add.
                                          type: string
                                        replace:
                                          description: Optional. Whether to replace
                                            all existing headers with the same name.
                                          type: boolean
                                      required:
                                      - headerName
                                      - headerValue
                                      type: object
                                    type: array
                                  requestHeadersToRemove:
                                    description: Optional. A list of header names
                                      for headers that need to be removed from the
                                      request prior to forwarding the request to the
                                      origin.
                                    items:
                                      properties:
                                        headerName:
                                          description: Required. The name of the header
                                            to remove.
                                          type: string
                                      required:
                                      - headerName
                                      type: object
                                    type: array
                                  responseHeadersToAdd:
                                    description: Optional. Describes headers to add
                                      to the response before sending to the client.
                                    items:
                                      properties:
                                        headerName:
                                          description: Required. The name of the header
                                            to add.
                                          type: string
                                        headerValue:
                                          description: Required. The value of the
                                            header to add.
                                          type: string
                                        replace:
                                          description: Optional. Whether to replace
                                            all existing headers with the same name.
                                          type: boolean
                                      required:
                                      - headerName
                                      - headerValue
                                      type: object
                                    type: array
                                  responseHeadersToRemove:
                                    description: Optional. A list of header names
                                      for headers that need to be removed from the
                                      response prior to sending the response back
                                      to the client.
                                    items:
                                      properties:
                                        headerName:
                                          description: Required. The name of the header
                                            to remove.
                                          type: string
                                      required:
                                      - headerName
                                      type: object
                                    type: array
                                type: object
                              matchRules:
                                description: Required. The list of criteria for matching
                                  attributes of a request to this routeRule. All specified
                                  conditions must be satisfied for a match. Must specify
                                  at least one match_rule.
                                items:
                                  properties:
                                    fullPathMatch:
                                      description: Optional. For satisfying the matchRule
                                        condition, the path of the request must exactly
                                        match the value specified in fullPathMatch
                                        after removing any query parameters and anchor
                                        that may be part of the original URL.
                                      type: string
                                    headerMatches:
                                      description: Optional. Specifies a list of header
                                        match criteria, all of which must match corresponding
                                        headers in the request.
                                      items:
                                        properties:
                                          exactMatch:
                                            description: Optional. The value of the
                                              header must exactly match the contents
                                              of exactMatch.
                                            type: string
                                          headerName:
                                            description: Required. The header name
                                              to match on.
                                            type: string
                                          invertMatch:
                                            description: Optional. Specifies that
                                              the match is negated, i.e. a match will
                                              succeed if the header does NOT match
                                              the criteria in this HeaderMatch.
                                            type: boolean
                                          prefixMatch:
                                            description: Optional. The value of the
                                              header must start with the contents
                                              of prefixMatch.
                                            type: string
                                          presentMatch:
                                            description: Optional. Specifies that
                                              the header must exist.
                                            type: boolean
                                          suffixMatch:
                                            description: Optional. The value of the
                                              header must end with the contents of
                                              suffixMatch.
                                            type: string
                                        required:
                                        - headerName
                                        type: object
                                      type: array
                                    ignoreCase:
                                      description: Optional. Specifies that prefixMatch
                                        and fullPathMatch matches are case insensitive.
                                        The default value is false.
                                      type: boolean
                                    pathTemplateMatch:
                                      description: Optional. For satisfying the matchRule
                                        condition, the path of the request must match
                                        the wildcard pattern specified in pathTemplateMatch
                                        after removing any query parameters and anchor
                                        that may be part of the original URL.
                                      type: string
                                    prefixMatch:
                                      description: Optional. For satisfying the matchRule
                                        condition, the request's path must begin with
                                        the specified prefixMatch. prefixMatch must
                                        begin with a /.
                                      type: string
                                    queryParameterMatches:
                                      description: Optional. Specifies a list of query
                                        parameter match criteria, all of which must
                                        match corresponding query parameters in the
                                        request.
                                      items:
                                        properties:
                                          exactMatch:
                                            description: Optional. The value of the
                                              query parameter must exactly match the
                                              contents of exactMatch.
                                            type: string
                                          name:
                                            description: Required. The name of the
                                              query parameter to match.
                                            type: string
                                          presentMatch:
                                            description: Optional. Specifies that
                                              the query parameter must exist.
                                            type: boolean
                                        required:
                                        - name
                                        type: object
                                      type: array
                                  type: object
                                type: array
                              origin:
                                description: 'Optional. The origin that requests are
                                  routed to when this rule matches. Format: projects/{project}/locations/{location}/edgeCacheOrigins/{origin}'
                                type: string
                              priority:
                                description: Required. The priority of this route
                                  rule, where 1 is the highest priority. You cannot
                                  configure two or more routeRules with the same priority.
                                  Priority for each rule must be set to a number between
                                  1 and 999 inclusive.
                                format: int64
                                type: integer
                              routeAction:
                                description: Optional. The route action that will
                                  be taken if this routeRule matches.
                                properties:
                                  cdnPolicy:
                                    description: Optional. The policy that determines
                                      the caching behavior for the route.
                                    properties:
                                      addSignatures:
                                        description: Optional. Enable signature generation
                                          or propagation on this route.
                                        properties:
                                          actions:
                                            description: Required. The actions to
                                              take to add signatures to responses.
                                            items:
                                              type: string
                                            type: array
                                          copiedParameters:
                                            description: Optional. Parameters to copy
                                              from the verified token to the generated
                                              token.
                                            items:
                                              type: string
                                            type: array
                                          keyset:
                                            description: 'Optional. The keyset to
                                              use for signature generation. Format:
                                              projects/{project}/locations/{location}/edgeCacheKeysets/{keyset}'
                                            type: string
                                          tokenQueryParameter:
                                            description: Optional. The query parameter
                                              to use for the generated token.
                                            type: string
                                          tokenTtl:
                                            description: Optional. The TTL for the
                                              generated token.
                                            type: string
                                        required:
                                        - actions
                                        type: object
                                      cacheKeyPolicy:
                                        description: Optional. Defines the request
                                          parameters that contribute to the cache
                                          key.
                                        properties:
                                          excludeHost:
                                            description: Optional. If true, requests
                                              to different hosts will be cached separately.
                                            type: boolean
                                          excludeQueryString:
                                            description: Optional. If true, exclude
                                              query string parameters from the cache
                                              key.
                                            type: boolean
                                          excludedQueryParameters:
                                            description: Optional. Names of query
                                              string parameters to exclude from cache
                                              keys.
                                            items:
                                              type: string
                                            type: array
                                          includeProtocol:
                                            description: Optional. If true, http and
                                              https requests will be cached separately.
                                            type: boolean
                                          includedCookieNames:
                                            description: Optional. Names of Cookies
                                              to include in cache keys.
                                            items:
                                              type: string
                                            type: array
                                          includedHeaderNames:
                                            description: Optional. Names of HTTP request
                                              headers to include in cache keys.
                                            items:
                                              type: string
                                            type: array
                                          includedQueryParameters:
                                            description: Optional. Names of query
                                              string parameters to include in cache
                                              keys.
                                            items:
                                              type: string
                                            type: array
                                        type: object
                                      cacheMode:
                                        description: Optional. The CacheMode for matching
                                          requests.
                                        type: string
                                      clientTtl:
                                        description: Optional. Specifies a separate
                                          client TTL, separate from the TTL used for
                                          Google's cache for the object.
                                        type: string
                                      defaultTtl:
                                        description: Optional. Specifies the default
                                          TTL for cached content served by this origin
                                          for responses that do not have an existing
                                          valid TTL (max-age or s-max-age).
                                        type: string
                                      maxTtl:
                                        description: Optional. Specifies the maximum
                                          allowed TTL for cached content served by
                                          this origin.
                                        type: string
                                      negativeCaching:
                                        description: Optional. Negative caching allows
                                          per-status code cache TTLs to be set, in
                                          order to apply fine-grained caching for
                                          common errors or redirects.
                                        type: boolean
                                      negativeCachingPolicy:
                                        additionalProperties:
                                          type: string
                                        description: Optional. The policy for negative
                                          caching.
                                        type: object
                                      signedRequestKeyset:
                                        description: 'Optional. The EdgeCacheKeyset
                                          resource that contains the set of public
                                          keys used to validate signed requests at
                                          the edge. Format: projects/{project}/locations/{location}/edgeCacheKeysets/{keyset}'
                                        type: string
                                      signedRequestMaximumExpirationTtl:
                                        description: Optional. Defines the maximum
                                          allowed TTL for signed requests.
                                        type: string
                                      signedRequestMode:
                                        description: Optional. Whether to enforce
                                          signed requests.
                                        type: string
                                      signedTokenOptions:
                                        description: Optional. Additional options
                                          for signed requests.
                                        properties:
                                          allowedSignatureAlgorithms:
                                            description: Optional. The allowed signature
                                              algorithms.
                                            items:
                                              type: string
                                            type: array
                                          tokenQueryParameter:
                                            description: Optional. The query parameter
                                              name where the signed token should be
                                              found.
                                            type: string
                                        type: object
                                    type: object
                                  compressionMode:
                                    description: Optional. Specify how to compress
                                      the response to the client. By default, responses
                                      are not compressed.
                                    type: string
                                  corsPolicy:
                                    description: Optional. The policy for managing
                                      cross-origin resource sharing.
                                    properties:
                                      allowCredentials:
                                        description: Optional. Specifies whether credentials
                                          are allowed in CORS requests.
                                        type: boolean
                                      allowHeaders:
                                        description: Optional. Specifies the content
                                          for the Access-Control-Allow-Headers header.
                                        items:
                                          type: string
                                        type: array
                                      allowMethods:
                                        description: Optional. Specifies the content
                                          for the Access-Control-Allow-Methods header.
                                        items:
                                          type: string
                                        type: array
                                      allowOrigins:
                                        description: Optional. Specifies the list
                                          of origins that will be allowed to do CORS
                                          requests.
                                        items:
                                          type: string
                                        type: array
                                      disabled:
                                        description: Optional. If true, CORS policy
                                          is disabled. Defaults to false.
                                        type: boolean
                                      exposeHeaders:
                                        description: Optional. Specifies the content
                                          for the Access-Control-Expose-Headers header.
                                        items:
                                          type: string
                                        type: array
                                      maxAge:
                                        description: Required. Specifies the content
                                          for the Access-Control-Max-Age header.
                                        type: string
                                    required:
                                    - maxAge
                                    type: object
                                  urlRewrite:
                                    description: Optional. If specified, the request
                                      and response are transformed based on these
                                      rules.
                                    properties:
                                      hostRewrite:
                                        description: Optional. Prior to forwarding
                                          the request to the selected origin, the
                                          request's host header is replaced by hostRewrite.
                                        type: string
                                      pathPrefixRewrite:
                                        description: Optional. Prior to forwarding
                                          the request to the selected origin, the
                                          matching portion of the request's path is
                                          replaced by pathPrefixRewrite.
                                        type: string
                                      pathTemplateRewrite:
                                        description: Optional. Prior to forwarding
                                          the request to the selected origin, if the
                                          request matched a pathTemplateMatch, the
                                          matching portion of the request's path is
                                          replaced by pathTemplateRewrite.
                                        type: string
                                    type: object
                                type: object
                              routeMethods:
                                description: Optional. routeMethods defines what HTTP
                                  methods may match this route.
                                properties:
                                  allowedMethods:
                                    description: Required. The list of HTTP methods
                                      allowed for this route. Must be non-empty.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - allowedMethods
                                type: object
                              urlRedirect:
                                description: Optional. The URL redirect configuration
                                  for requests that match this route.
                                properties:
                                  hostRedirect:
                                    description: Optional. The host that will be used
                                      in the redirect response instead of the one
                                      that was supplied in the request.
                                    type: string
                                  httpsRedirect:
                                    description: Optional. If set to true, the URL
                                      scheme in the redirected request is set to https.
                                    type: boolean
                                  pathRedirect:
                                    description: Optional. The path that will be used
                                      in the redirect response instead of the one
                                      that was supplied in the request.
                                    type: string
                                  prefixRedirect:
                                    description: Optional. The prefix that will be
                                      used in the redirect response instead of the
                                      one that was supplied in the request.
                                    type: string
                                  redirectResponseCode:
                                    description: Optional. The HTTP Status code to
                                      use for this RedirectAction.
                                    type: string
                                  stripQuery:
                                    description: Optional. If set to true, any accompanying
                                      query portion of the original URL is removed
                                      prior to redirecting the request.
                                    type: boolean
                                type: object
                            required:
                            - matchRules
                            - priority
                            type: object
                          type: array
                      required:
                      - name
                      - routeRules
                      type: object
                    type: array
                required:
                - hostRules
                - pathMatchers
                type: object
            required:
            - location
            - projectRef
            - routing
            type: object
          status:
            description: NetworkServicesEdgeCacheServiceStatus defines the config
              connector machine state of NetworkServicesEdgeCacheService
            properties:
              conditions:
                description: Conditions represent the latest available observations
                  of the object's current state.
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's
                        last transition.
                      type: string
                    status:
                      description: Status is the status of the condition. Can be True,
                        False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  type: object
                type: array
              externalRef:
                description: A unique specifier for the NetworkServicesEdgeCacheService
                  resource in GCP.
                type: string
              observedGeneration:
                description: ObservedGeneration is the generation of the resource
                  that was most recently observed by the Config Connector controller.
                  If this is equal to metadata.generation, then that means that the
                  current reported status reflects the most recent desired state of
                  the resource.
                format: int64
                type: integer
              observedState:
                description: ObservedState is the state of the resource as most recently
                  observed in GCP.
                properties:
                  createTime:
                    description: Output only. The timestamp when the resource was
                      created.
                    type: string
                  ipv4Addresses:
                    description: Output only. The IPv4 addresses that the service
                      will serve traffic on. These will be static for the lifetime
                      of the service.
                    items:
                      type: string
                    type: array
                  ipv6Addresses:
                    description: Output only. The IPv6 addresses that the service
                      will serve traffic on. These will be static for the lifetime
                      of the service.
                    items:
                      type: string
                    type: array
                  updateTime:
                    description: Output only. The timestamp when the resource was
                      last updated.
                    type: string
                type: object
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
