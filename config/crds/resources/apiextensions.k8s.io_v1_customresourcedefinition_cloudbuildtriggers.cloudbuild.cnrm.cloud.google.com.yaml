apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cnrm.cloud.google.com/version: 0.0.0-dev
  creationTimestamp: null
  labels:
    cnrm.cloud.google.com/managed-by-kcc: "true"
    cnrm.cloud.google.com/stability-level: stable
    cnrm.cloud.google.com/system: "true"
    cnrm.cloud.google.com/tf2crd: "true"
  name: cloudbuildtriggers.cloudbuild.cnrm.cloud.google.com
spec:
  group: cloudbuild.cnrm.cloud.google.com
  names:
    categories:
    - gcp
    kind: CloudBuildTrigger
    plural: cloudbuildtriggers
    shortNames:
    - gcpcloudbuildtrigger
    - gcpcloudbuildtriggers
    singular: cloudbuildtrigger
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: When 'True', the most recent reconcile of the resource succeeded
      jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - description: The reason for the value in 'Ready'
      jsonPath: .status.conditions[?(@.type=='Ready')].reason
      name: Status
      type: string
    - description: The last transition time for the value in 'Status'
      jsonPath: .status.conditions[?(@.type=='Ready')].lastTransitionTime
      name: Status Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'apiVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
            type: string
          kind:
            description: 'kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              approvalConfig:
                description: |-
                  Configuration for manual approval to start a build invocation of this BuildTrigger.
                  Builds created by this trigger will require approval before they execute.
                  Any user with a Cloud Build Approver role for the project can approve a build.
                properties:
                  approvalRequired:
                    description: |-
                      Whether or not approval is needed. If this is set on a build, it will become pending when run,
                      and will need to be explicitly approved to start.
                    type: boolean
                type: object
              bitbucketServerTriggerConfig:
                description: BitbucketServerTriggerConfig describes the configuration
                  of a trigger that creates a build whenever a Bitbucket Server event
                  is received.
                properties:
                  bitbucketServerConfigResourceRef:
                    description: |-
                      Only `external` field is supported to configure the reference.

                      The full resource name of the bitbucket server config. Format:
                      projects/{project}/locations/{location}/bitbucketServerConfigs/{id}.
                    oneOf:
                    - not:
                        required:
                        - external
                      required:
                      - name
                    - not:
                        anyOf:
                        - required:
                          - name
                        - required:
                          - namespace
                      required:
                      - external
                    properties:
                      external:
                        description: 'Allowed value: The `name` field of a `CloudBuildBitbucketServerConfig`
                          resource.'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                    type: object
                  projectKey:
                    description: 'Key of the project that the repo is in. For example:
                      The key for https://mybitbucket.server/projects/TEST/repos/test-repo
                      is "TEST".'
                    type: string
                  pullRequest:
                    description: Filter to match changes in pull requests.
                    properties:
                      branch:
                        description: |-
                          Regex of branches to match.
                          The syntax of the regular expressions accepted is the syntax accepted by RE2 and described at https://github.com/google/re2/wiki/Syntax.
                        type: string
                      commentControl:
                        description: 'Configure builds to run whether a repository
                          owner or collaborator need to comment /gcbrun. Possible
                          values: ["COMMENTS_DISABLED", "COMMENTS_ENABLED", "COMMENTS_ENABLED_FOR_EXTERNAL_CONTRIBUTORS_ONLY"].'
                        type: string
                      invertRegex:
                        description: If true, branches that do NOT match the git_ref
                          will trigger a build.
                        type: boolean
                    required:
                    - branch
                    type: object
                  push:
                    description: Filter to match changes in refs like branches, tags.
                    properties:
                      branch:
                        description: Regex of branches to match.  Specify only one
                          of branch or tag.
                        type: string
                      invertRegex:
                        description: When true, only trigger a build if the revision
                          regex does NOT match the gitRef regex.
                        type: boolean
                      tag:
                        description: Regex of tags to match.  Specify only one of
                          branch or tag.
                        type: string
                    type: object
                  repoSlug:
                    description: |-
                      Slug of the repository. A repository slug is a URL-friendly version of a repository name, automatically generated by Bitbucket for use in the URL.
                      For example, if the repository name is 'test repo', in the URL it would become 'test-repo' as in https://mybitbucket.server/projects/TEST/repos/test-repo.
                    type: string
                required:
                - bitbucketServerConfigResourceRef
                - projectKey
                - repoSlug
                type: object
              build:
                description: Contents of the build template. Either a filename or
                  build template must be provided.
                properties:
                  artifacts:
                    description: Artifacts produced by the build that should be uploaded
                      upon successful completion of all build steps.
                    properties:
                      images:
                        description: |-
                          A list of images to be pushed upon the successful completion of all build steps.

                          The images will be pushed using the builder service account's credentials.

                          The digests of the pushed images will be stored in the Build resource's results field.

                          If any of the images fail to be pushed, the build is marked FAILURE.
                        items:
                          type: string
                        type: array
                      objects:
                        description: |-
                          A list of objects to be uploaded to Cloud Storage upon successful completion of all build steps.

                          Files in the workspace matching specified paths globs will be uploaded to the
                          Cloud Storage location using the builder service account's credentials.

                          The location and generation of the uploaded objects will be stored in the Build resource's results field.

                          If any objects fail to be pushed, the build is marked FAILURE.
                        properties:
                          location:
                            description: |-
                              Cloud Storage bucket and optional object path, in the form "gs://bucket/path/to/somewhere/".

                              Files in the workspace matching any path pattern will be uploaded to Cloud Storage with
                              this location as a prefix.
                            type: string
                          paths:
                            description: Path globs used to match files in the build's
                              workspace.
                            items:
                              type: string
                            type: array
                          timing:
                            description: Output only. Stores timing information for
                              pushing all artifact objects.
                            items:
                              properties:
                                endTime:
                                  description: |-
                                    End of time span.

                                    A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to
                                    nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
                                  type: string
                                startTime:
                                  description: |-
                                    Start of time span.

                                    A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to
                                    nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
                                  type: string
                              type: object
                            type: array
                        type: object
                    type: object
                  availableSecrets:
                    description: Secrets and secret environment variables.
                    properties:
                      secretManager:
                        description: Pairs a secret environment variable with a SecretVersion
                          in Secret Manager.
                        items:
                          properties:
                            env:
                              description: |-
                                Environment variable name to associate with the secret. Secret environment
                                variables must be unique across all of a build's secrets, and must be used
                                by at least one build step.
                              type: string
                            versionRef:
                              oneOf:
                              - not:
                                  required:
                                  - external
                                required:
                                - name
                              - not:
                                  anyOf:
                                  - required:
                                    - name
                                  - required:
                                    - namespace
                                required:
                                - external
                              properties:
                                external:
                                  description: 'Allowed value: The `name` field of
                                    a `SecretManagerSecretVersion` resource.'
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                                namespace:
                                  description: 'Namespace of the referent. More info:
                                    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                  type: string
                              type: object
                          required:
                          - env
                          - versionRef
                          type: object
                        type: array
                    required:
                    - secretManager
                    type: object
                  images:
                    description: |-
                      A list of images to be pushed upon the successful completion of all build steps.
                      The images are pushed using the builder service account's credentials.
                      The digests of the pushed images will be stored in the Build resource's results field.
                      If any of the images fail to be pushed, the build status is marked FAILURE.
                    items:
                      type: string
                    type: array
                  logsBucketRef:
                    description: |-
                      Google Cloud Storage bucket where logs should be written. Logs file
                      names will be of the format ${logsBucket}/log-${build_id}.txt.
                    oneOf:
                    - not:
                        required:
                        - external
                      required:
                      - name
                    - not:
                        anyOf:
                        - required:
                          - name
                        - required:
                          - namespace
                      required:
                      - external
                    properties:
                      external:
                        description: 'Allowed value: The `url` field of a `StorageBucket`
                          resource.'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                    type: object
                  options:
                    description: Special options for this build.
                    properties:
                      diskSizeGb:
                        description: |-
                          Requested disk size for the VM that runs the build. Note that this is NOT "disk free";
                          some of the space will be used by the operating system and build utilities.
                          Also note that this is the minimum disk size that will be allocated for the build --
                          the build may run with a larger disk than requested. At present, the maximum disk size
                          is 1000GB; builds that request more than the maximum are rejected with an error.
                        type: integer
                      dynamicSubstitutions:
                        description: |-
                          Option to specify whether or not to apply bash style string operations to the substitutions.

                          NOTE this is always enabled for triggered builds and cannot be overridden in the build configuration file.
                        type: boolean
                      env:
                        description: |-
                          A list of global environment variable definitions that will exist for all build steps
                          in this build. If a variable is defined in both globally and in a build step,
                          the variable will use the build step value.

                          The elements are of the form "KEY=VALUE" for the environment variable "KEY" being given the value "VALUE".
                        items:
                          type: string
                        type: array
                      logStreamingOption:
                        description: 'Option to define build log streaming behavior
                          to Google Cloud Storage. Possible values: ["STREAM_DEFAULT",
                          "STREAM_ON", "STREAM_OFF"].'
                        type: string
                      logging:
                        description: 'Option to specify the logging mode, which determines
                          if and where build logs are stored. Possible values: ["LOGGING_UNSPECIFIED",
                          "LEGACY", "GCS_ONLY", "STACKDRIVER_ONLY", "CLOUD_LOGGING_ONLY",
                          "NONE"].'
                        type: string
                      machineType:
                        description: Compute Engine machine type on which to run the
                          build.
                        type: string
                      requestedVerifyOption:
                        description: 'Requested verifiability options. Possible values:
                          ["NOT_VERIFIED", "VERIFIED"].'
                        type: string
                      secretEnv:
                        description: |-
                          A list of global environment variables, which are encrypted using a Cloud Key Management
                          Service crypto key. These values must be specified in the build's Secret. These variables
                          will be available to all build steps in this build.
                        items:
                          type: string
                        type: array
                      sourceProvenanceHash:
                        description: 'Requested hash for SourceProvenance. Possible
                          values: ["NONE", "SHA256", "MD5"].'
                        items:
                          type: string
                        type: array
                      substitutionOption:
                        description: |-
                          Option to specify behavior when there is an error in the substitution checks.

                          NOTE this is always set to ALLOW_LOOSE for triggered builds and cannot be overridden
                          in the build configuration file. Possible values: ["MUST_MATCH", "ALLOW_LOOSE"].
                        type: string
                      volumes:
                        description: |-
                          Global list of volumes to mount for ALL build steps

                          Each volume is created as an empty volume prior to starting the build process.
                          Upon completion of the build, volumes and their contents are discarded. Global
                          volume names and paths cannot conflict with the volumes defined a build step.

                          Using a global volume in a build with only one step is not valid as it is indicative
                          of a build request with an incorrect configuration.
                        items:
                          properties:
                            name:
                              description: |-
                                Name of the volume to mount.

                                Volume names must be unique per build step and must be valid names for Docker volumes.
                                Each named volume must be used by at least two build steps.
                              type: string
                            path:
                              description: |-
                                Path at which to mount the volume.

                                Paths must be absolute and cannot conflict with other volume paths on the same
                                build step or with certain reserved volume paths.
                              type: string
                          type: object
                        type: array
                      workerPool:
                        description: |-
                          Option to specify a WorkerPool for the build. Format projects/{project}/workerPools/{workerPool}

                          This field is experimental.
                        type: string
                    type: object
                  queueTtl:
                    description: |-
                      TTL in queue for this build. If provided and the build is enqueued longer than this value,
                      the build will expire and the build status will be EXPIRED.
                      The TTL starts ticking from createTime.
                      A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
                    type: string
                  secret:
                    description: Secrets to decrypt using Cloud Key Management Service.
                    items:
                      properties:
                        kmsKeyRef:
                          description: KMS crypto key to use to decrypt these envs.
                          oneOf:
                          - not:
                              required:
                              - external
                            required:
                            - name
                          - not:
                              anyOf:
                              - required:
                                - name
                              - required:
                                - namespace
                            required:
                            - external
                          properties:
                            external:
                              description: 'Allowed value: The `selfLink` field of
                                a `KMSCryptoKey` resource.'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info:
                                https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                          type: object
                        secretEnv:
                          additionalProperties:
                            type: string
                          description: |-
                            Map of environment variable name to its encrypted value.
                            Secret environment variables must be unique across all of a build's secrets,
                            and must be used by at least one build step. Values can be at most 64 KB in size.
                            There can be at most 100 secret values across all of a build's secrets.
                          type: object
                      required:
                      - kmsKeyRef
                      type: object
                    type: array
                  source:
                    description: |-
                      The location of the source files to build.

                      One of 'storageSource' or 'repoSource' must be provided.
                    properties:
                      repoSource:
                        description: Location of the source in a Google Cloud Source
                          Repository.
                        properties:
                          branchName:
                            description: |-
                              Regex matching branches to build. Exactly one a of branch name, tag, or commit SHA must be provided.
                              The syntax of the regular expressions accepted is the syntax accepted by RE2 and
                              described at https://github.com/google/re2/wiki/Syntax.
                            type: string
                          commitSha:
                            description: Explicit commit SHA to build. Exactly one
                              a of branch name, tag, or commit SHA must be provided.
                            type: string
                          dir:
                            description: |-
                              Directory, relative to the source root, in which to run the build.
                              This must be a relative path. If a step's dir is specified and is an absolute path,
                              this value is ignored for that step's execution.
                            type: string
                          invertRegex:
                            description: Only trigger a build if the revision regex
                              does NOT match the revision regex.
                            type: boolean
                          projectId:
                            description: |-
                              ID of the project that owns the Cloud Source Repository.
                              If omitted, the project ID requesting the build is assumed.
                            type: string
                          repoRef:
                            description: |-
                              The desired Cloud Source Repository. If omitted, "default" is
                              assumed.
                            oneOf:
                            - not:
                                required:
                                - external
                              required:
                              - name
                            - not:
                                anyOf:
                                - required:
                                  - name
                                - required:
                                  - namespace
                              required:
                              - external
                            properties:
                              external:
                                description: 'Allowed value: The `name` field of a
                                  `SourceRepoRepository` resource.'
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                type: string
                              namespace:
                                description: 'Namespace of the referent. More info:
                                  https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                type: string
                            type: object
                          substitutions:
                            additionalProperties:
                              type: string
                            description: Substitutions to use in a triggered build.
                              Should only be used with triggers.run.
                            type: object
                          tagName:
                            description: |-
                              Regex matching tags to build. Exactly one a of branch name, tag, or commit SHA must be provided.
                              The syntax of the regular expressions accepted is the syntax accepted by RE2 and
                              described at https://github.com/google/re2/wiki/Syntax.
                            type: string
                        required:
                        - repoRef
                        type: object
                      storageSource:
                        description: Location of the source in an archive file in
                          Google Cloud Storage.
                        properties:
                          bucketRef:
                            description: Google Cloud Storage bucket containing the
                              source.
                            oneOf:
                            - not:
                                required:
                                - external
                              required:
                              - name
                            - not:
                                anyOf:
                                - required:
                                  - name
                                - required:
                                  - namespace
                              required:
                              - external
                            properties:
                              external:
                                description: 'Allowed value: The `name` field of a
                                  `StorageBucket` resource.'
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                type: string
                              namespace:
                                description: 'Namespace of the referent. More info:
                                  https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                type: string
                            type: object
                          generation:
                            description: |-
                              Google Cloud Storage generation for the object.
                              If the generation is omitted, the latest generation will be used.
                            type: string
                          object:
                            description: |-
                              Google Cloud Storage object containing the source.
                              This object must be a gzipped archive file (.tar.gz) containing source to build.
                            type: string
                        required:
                        - bucketRef
                        - object
                        type: object
                    type: object
                  step:
                    description: The operations to be performed on the workspace.
                    items:
                      properties:
                        allowExitCodes:
                          description: |-
                            Allow this build step to fail without failing the entire build if and
                            only if the exit code is one of the specified codes.

                            If 'allowFailure' is also specified, this field will take precedence.
                          items:
                            type: integer
                          type: array
                        allowFailure:
                          description: |-
                            Allow this build step to fail without failing the entire build.
                            If false, the entire build will fail if this step fails. Otherwise, the
                            build will succeed, but this step will still have a failure status.
                            Error information will be reported in the 'failureDetail' field.

                            'allowExitCodes' takes precedence over this field.
                          type: boolean
                        args:
                          description: |-
                            A list of arguments that will be presented to the step when it is started.

                            If the image used to run the step's container has an entrypoint, the args
                            are used as arguments to that entrypoint. If the image does not define an
                            entrypoint, the first element in args is used as the entrypoint, and the
                            remainder will be used as arguments.
                          items:
                            type: string
                          type: array
                        dir:
                          description: |-
                            Working directory to use when running this step's container.

                            If this value is a relative path, it is relative to the build's working
                            directory. If this value is absolute, it may be outside the build's working
                            directory, in which case the contents of the path may not be persisted
                            across build step executions, unless a 'volume' for that path is specified.

                            If the build specifies a 'RepoSource' with 'dir' and a step with a
                            'dir',
                            which specifies an absolute path, the 'RepoSource' 'dir' is ignored
                            for the step's execution.
                          type: string
                        entrypoint:
                          description: |-
                            Entrypoint to be used instead of the build step image's
                            default entrypoint.
                            If unset, the image's default entrypoint is used.
                          type: string
                        env:
                          description: |-
                            A list of environment variable definitions to be used when
                            running a step.

                            The elements are of the form "KEY=VALUE" for the environment variable
                            "KEY" being given the value "VALUE".
                          items:
                            type: string
                          type: array
                        id:
                          description: |-
                            Unique identifier for this build step, used in 'wait_for' to
                            reference this build step as a dependency.
                          type: string
                        name:
                          description: |-
                            The name of the container image that will run this particular build step.

                            If the image is available in the host's Docker daemon's cache, it will be
                            run directly. If not, the host will attempt to pull the image first, using
                            the builder service account's credentials if necessary.

                            The Docker daemon's cache will already have the latest versions of all of
                            the officially supported build steps (see https://github.com/GoogleCloudPlatform/cloud-builders
                            for images and examples).
                            The Docker daemon will also have cached many of the layers for some popular
                            images, like "ubuntu", "debian", but they will be refreshed at the time
                            you attempt to use them.

                            If you built an image in a previous build step, it will be stored in the
                            host's Docker daemon's cache and is available to use as the name for a
                            later build step.
                          type: string
                        script:
                          description: |-
                            A shell script to be executed in the step.
                            When script is provided, the user cannot specify the entrypoint or args.
                          type: string
                        secretEnv:
                          description: |-
                            A list of environment variables which are encrypted using
                            a Cloud Key
                            Management Service crypto key. These values must be specified in
                            the build's 'Secret'.
                          items:
                            type: string
                          type: array
                        timeout:
                          description: |-
                            Time limit for executing this build step. If not defined,
                            the step has no
                            time limit and will be allowed to continue to run until either it
                            completes or the build itself times out.
                          type: string
                        timing:
                          description: |-
                            Output only. Stores timing information for executing this
                            build step.
                          type: string
                        volumes:
                          description: |-
                            List of volumes to mount into the build step.

                            Each volume is created as an empty volume prior to execution of the
                            build step. Upon completion of the build, volumes and their contents
                            are discarded.

                            Using a named volume in only one step is not valid as it is
                            indicative of a build request with an incorrect configuration.
                          items:
                            properties:
                              name:
                                description: |-
                                  Name of the volume to mount.

                                  Volume names must be unique per build step and must be valid names for
                                  Docker volumes. Each named volume must be used by at least two build steps.
                                type: string
                              path:
                                description: |-
                                  Path at which to mount the volume.

                                  Paths must be absolute and cannot conflict with other volume paths on
                                  the same build step or with certain reserved volume paths.
                                type: string
                            required:
                            - name
                            - path
                            type: object
                          type: array
                        waitFor:
                          description: |-
                            The ID(s) of the step(s) that this build step depends on.

                            This build step will not start until all the build steps in 'wait_for'
                            have completed successfully. If 'wait_for' is empty, this build step
                            will start when all previous build steps in the 'Build.Steps' list
                            have completed successfully.
                          items:
                            type: string
                          type: array
                      required:
                      - name
                      type: object
                    type: array
                  substitutions:
                    additionalProperties:
                      type: string
                    description: Substitutions data for Build resource.
                    type: object
                  tags:
                    description: Tags for annotation of a Build. These are not docker
                      tags.
                    items:
                      type: string
                    type: array
                  timeout:
                    description: |-
                      Amount of time that this build should be allowed to run, to second granularity.
                      If this amount of time elapses, work on the build will cease and the build status will be TIMEOUT.
                      This timeout must be equal to or greater than the sum of the timeouts for build steps within the build.
                      The expected format is the number of seconds followed by s.
                      Default time is ten minutes (600s).
                    type: string
                required:
                - step
                type: object
              description:
                description: Human-readable description of the trigger.
                type: string
              disabled:
                description: Whether the trigger is disabled or not. If true, the
                  trigger will never result in a build.
                type: boolean
              filename:
                description: |-
                  Path, from the source root, to a file whose contents is used for the template.
                  Either a filename or build template must be provided. Set this only when using trigger_template or github.
                  When using Pub/Sub, Webhook or Manual set the file name using git_file_source instead.
                type: string
              filter:
                description: A Common Expression Language string. Used only with Pub/Sub
                  and Webhook.
                type: string
              gitFileSource:
                description: The file source describing the local or remote Build
                  template.
                properties:
                  bitbucketServerConfigRef:
                    description: |-
                      Only `external` field is supported to configure the reference.

                      The full resource name of the bitbucket server config. Format:
                      projects/{project}/locations/{location}/bitbucketServerConfigs/{id}.
                    oneOf:
                    - not:
                        required:
                        - external
                      required:
                      - name
                    - not:
                        anyOf:
                        - required:
                          - name
                        - required:
                          - namespace
                      required:
                      - external
                    properties:
                      external:
                        description: 'Allowed value: The `name` field of a `CloudBuildBitbucketServerConfig`
                          resource.'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                    type: object
                  githubEnterpriseConfigRef:
                    description: |-
                      Only `external` field is supported to configure the reference.

                      The full resource name of the github enterprise config. Format:
                      projects/{project}/locations/{location}/githubEnterpriseConfigs/{id}.
                    oneOf:
                    - not:
                        required:
                        - external
                      required:
                      - name
                    - not:
                        anyOf:
                        - required:
                          - name
                        - required:
                          - namespace
                      required:
                      - external
                    properties:
                      external:
                        description: 'Allowed value: The `name` field of a `CloudBuildGithubEnterpriseConfig`
                          resource.'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                    type: object
                  path:
                    description: The path of the file, with the repo root as the root
                      of the path.
                    type: string
                  repoType:
                    description: |-
                      The type of the repo, since it may not be explicit from the repo field (e.g from a URL).
                      Values can be UNKNOWN, CLOUD_SOURCE_REPOSITORIES, GITHUB, BITBUCKET_SERVER Possible values: ["UNKNOWN", "CLOUD_SOURCE_REPOSITORIES", "GITHUB", "BITBUCKET_SERVER"].
                    type: string
                  repositoryRef:
                    description: |-
                      Only `external` field is supported to configure the reference.

                      The fully qualified resource name of the Repo API repository. The fully qualified resource name of the Repo API repository.
                      If unspecified, the repo from which the trigger invocation originated is assumed to be the repo from which to read the specified path.
                    oneOf:
                    - not:
                        required:
                        - external
                      required:
                      - name
                    - not:
                        anyOf:
                        - required:
                          - name
                        - required:
                          - namespace
                      required:
                      - external
                    properties:
                      external:
                        description: 'Allowed value: The `name` field of a `CloudBuildV2Repository`
                          resource.'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                    type: object
                  revision:
                    description: |-
                      The branch, tag, arbitrary ref, or SHA version of the repo to use when resolving the
                      filename (optional). This field respects the same syntax/resolution as described here: https://git-scm.com/docs/gitrevisions
                      If unspecified, the revision from which the trigger invocation originated is assumed to be the revision from which to read the specified path.
                    type: string
                  uri:
                    description: |-
                      The URI of the repo (optional). If unspecified, the repo from which the trigger
                      invocation originated is assumed to be the repo from which to read the specified path.
                    type: string
                required:
                - path
                - repoType
                type: object
              github:
                description: |-
                  Describes the configuration of a trigger that creates a build whenever a GitHub event is received.

                  One of 'trigger_template', 'github', 'pubsub_config' or 'webhook_config' must be provided.
                properties:
                  enterpriseConfigResourceNameRef:
                    description: |-
                      Only `external` field is supported to configure the reference.

                      The full resource name of the github enterprise config. Format:
                      projects/{project}/locations/{location}/githubEnterpriseConfigs/{id}.
                    oneOf:
                    - not:
                        required:
                        - external
                      required:
                      - name
                    - not:
                        anyOf:
                        - required:
                          - name
                        - required:
                          - namespace
                      required:
                      - external
                    properties:
                      external:
                        description: 'Allowed value: The `name` field of a `CloudBuildGithubEnterpriseConfig`
                          resource.'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                    type: object
                  name:
                    description: |-
                      Name of the repository. For example: The name for
                      https://github.com/googlecloudplatform/cloud-builders is "cloud-builders".
                    type: string
                  owner:
                    description: |-
                      Owner of the repository. For example: The owner for
                      https://github.com/googlecloudplatform/cloud-builders is "googlecloudplatform".
                    type: string
                  pullRequest:
                    description: filter to match changes in pull requests. Specify
                      only one of 'pull_request' or 'push'.
                    properties:
                      branch:
                        description: Regex of branches to match.
                        type: string
                      commentControl:
                        description: 'Whether to block builds on a "/gcbrun" comment
                          from a repository owner or collaborator. Possible values:
                          ["COMMENTS_DISABLED", "COMMENTS_ENABLED", "COMMENTS_ENABLED_FOR_EXTERNAL_CONTRIBUTORS_ONLY"].'
                        type: string
                      invertRegex:
                        description: If true, branches that do NOT match the git_ref
                          will trigger a build.
                        type: boolean
                    required:
                    - branch
                    type: object
                  push:
                    description: filter to match changes in refs, like branches or
                      tags. Specify only one of 'pull_request' or 'push'.
                    properties:
                      branch:
                        description: Regex of branches to match.  Specify only one
                          of branch or tag.
                        type: string
                      invertRegex:
                        description: When true, only trigger a build if the revision
                          regex does NOT match the git_ref regex.
                        type: boolean
                      tag:
                        description: Regex of tags to match.  Specify only one of
                          branch or tag.
                        type: string
                    type: object
                type: object
              ignoredFiles:
                description: |-
                  ignoredFiles and includedFiles are file glob matches using https://golang.org/pkg/path/filepath/#Match
                  extended with support for '**'.

                  If ignoredFiles and changed files are both empty, then they are not
                  used to determine whether or not to trigger a build.

                  If ignoredFiles is not empty, then we ignore any files that match any
                  of the ignored_file globs. If the change has no files that are outside
                  of the ignoredFiles globs, then we do not trigger a build.
                items:
                  type: string
                type: array
              includeBuildLogs:
                description: |-
                  Build logs will be sent back to GitHub as part of the checkrun
                  result.  Values can be INCLUDE_BUILD_LOGS_UNSPECIFIED or
                  INCLUDE_BUILD_LOGS_WITH_STATUS Possible values: ["INCLUDE_BUILD_LOGS_UNSPECIFIED", "INCLUDE_BUILD_LOGS_WITH_STATUS"].
                type: string
              includedFiles:
                description: |-
                  ignoredFiles and includedFiles are file glob matches using https://golang.org/pkg/path/filepath/#Match
                  extended with support for '**'.

                  If any of the files altered in the commit pass the ignoredFiles filter
                  and includedFiles is empty, then as far as this filter is concerned, we
                  should trigger the build.

                  If any of the files altered in the commit pass the ignoredFiles filter
                  and includedFiles is not empty, then we make sure that at least one of
                  those files matches a includedFiles glob. If not, then we do not trigger
                  a build.
                items:
                  type: string
                type: array
              location:
                description: |-
                  Immutable. The [Cloud Build location](https://cloud.google.com/build/docs/locations) for the trigger.
                  If not specified, "global" is used.
                type: string
              pubsubConfig:
                description: |-
                  PubsubConfig describes the configuration of a trigger that creates
                  a build whenever a Pub/Sub message is published.

                  One of 'trigger_template', 'github', 'pubsub_config' 'webhook_config' or 'source_to_build' must be provided.
                properties:
                  serviceAccountRef:
                    description: Service account that will make the push request.
                    oneOf:
                    - not:
                        required:
                        - external
                      required:
                      - name
                    - not:
                        anyOf:
                        - required:
                          - name
                        - required:
                          - namespace
                      required:
                      - external
                    properties:
                      external:
                        description: 'Allowed value: The `email` field of an `IAMServiceAccount`
                          resource.'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                    type: object
                  state:
                    description: |-
                      Potential issues with the underlying Pub/Sub subscription configuration.
                      Only populated on get requests.
                    type: string
                  subscription:
                    description: Output only. Name of the subscription.
                    type: string
                  topicRef:
                    description: |-
                      The name of the topic from which this subscription
                      is receiving messages.
                    oneOf:
                    - not:
                        required:
                        - external
                      required:
                      - name
                    - not:
                        anyOf:
                        - required:
                          - name
                        - required:
                          - namespace
                      required:
                      - external
                    properties:
                      external:
                        description: 'Allowed value: string of the format `projects/{{project}}/topics/{{value}}`,
                          where {{value}} is the `name` field of a `PubSubTopic` resource.'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                    type: object
                required:
                - topicRef
                type: object
              repositoryEventConfig:
                description: The configuration of a trigger that creates a build whenever
                  an event from Repo API is received.
                properties:
                  pullRequest:
                    description: Contains filter properties for matching Pull Requests.
                    properties:
                      branch:
                        description: |-
                          Regex of branches to match.

                          The syntax of the regular expressions accepted is the syntax accepted by
                          RE2 and described at https://github.com/google/re2/wiki/Syntax.
                        type: string
                      commentControl:
                        description: 'Configure builds to run whether a repository
                          owner or collaborator need to comment ''/gcbrun''. Possible
                          values: ["COMMENTS_DISABLED", "COMMENTS_ENABLED", "COMMENTS_ENABLED_FOR_EXTERNAL_CONTRIBUTORS_ONLY"].'
                        type: string
                      invertRegex:
                        description: If true, branches that do NOT match the git_ref
                          will trigger a build.
                        type: boolean
                    type: object
                  push:
                    description: Contains filter properties for matching git pushes.
                    properties:
                      branch:
                        description: |-
                          Regex of branches to match.

                          The syntax of the regular expressions accepted is the syntax accepted by
                          RE2 and described at https://github.com/google/re2/wiki/Syntax.
                        type: string
                      invertRegex:
                        description: If true, only trigger a build if the revision
                          regex does NOT match the git_ref regex.
                        type: boolean
                      tag:
                        description: |-
                          Regex of tags to match.

                          The syntax of the regular expressions accepted is the syntax accepted by
                          RE2 and described at https://github.com/google/re2/wiki/Syntax.
                        type: string
                    type: object
                  repository:
                    description: The resource name of the Repo API resource.
                    type: string
                type: object
              serviceAccountRef:
                description: |-
                  The service account used for all user-controlled operations including
                  triggers.patch, triggers.run, builds.create, and builds.cancel.

                  If no service account is set, then the standard Cloud Build service account
                  ([PROJECT_NUM]@system.gserviceaccount.com) will be used instead.

                  When populating via the external field, the following format is supported:
                  projects/{PROJECT_ID}/serviceAccounts/{SERVICE_ACCOUNT_EMAIL}
                oneOf:
                - not:
                    required:
                    - external
                  required:
                  - name
                - not:
                    anyOf:
                    - required:
                      - name
                    - required:
                      - namespace
                  required:
                  - external
                properties:
                  external:
                    description: 'Allowed value: string of the format `projects/{{project}}/serviceAccounts/{{value}}`,
                      where {{value}} is the `email` field of an `IAMServiceAccount`
                      resource.'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                type: object
              sourceToBuild:
                description: |-
                  The repo and ref of the repository from which to build.
                  This field is used only for those triggers that do not respond to SCM events.
                  Triggers that respond to such events build source at whatever commit caused the event.
                  This field is currently only used by Webhook, Pub/Sub, Manual, and Cron triggers.

                  One of 'trigger_template', 'github', 'pubsub_config' 'webhook_config' or 'source_to_build' must be provided.
                properties:
                  bitbucketServerConfigRef:
                    description: |-
                      Only `external` field is supported to configure the reference.

                      The full resource name of the bitbucket server config. Format:
                      projects/{project}/locations/{location}/bitbucketServerConfigs/{id}.
                    oneOf:
                    - not:
                        required:
                        - external
                      required:
                      - name
                    - not:
                        anyOf:
                        - required:
                          - name
                        - required:
                          - namespace
                      required:
                      - external
                    properties:
                      external:
                        description: 'Allowed value: The `name` field of a `CloudBuildBitbucketServerConfig`
                          resource.'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                    type: object
                  githubEnterpriseConfigRef:
                    description: |-
                      Only `external` field is supported to configure the reference.

                      The full resource name of the github enterprise config. Format:
                      projects/{project}/locations/{location}/githubEnterpriseConfigs/{id}.
                    oneOf:
                    - not:
                        required:
                        - external
                      required:
                      - name
                    - not:
                        anyOf:
                        - required:
                          - name
                        - required:
                          - namespace
                      required:
                      - external
                    properties:
                      external:
                        description: 'Allowed value: The `name` field of a `CloudBuildGithubEnterpriseConfig`
                          resource.'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                    type: object
                  ref:
                    description: The branch or tag to use. Must start with "refs/"
                      (required).
                    type: string
                  repoType:
                    description: |-
                      The type of the repo, since it may not be explicit from the repo field (e.g from a URL).
                      Values can be UNKNOWN, CLOUD_SOURCE_REPOSITORIES, GITHUB, BITBUCKET_SERVER Possible values: ["UNKNOWN", "CLOUD_SOURCE_REPOSITORIES", "GITHUB", "BITBUCKET_SERVER"].
                    type: string
                  repositoryRef:
                    description: |-
                      Only `external` field is supported to configure the reference.

                      The qualified resource name of the Repo API repository.
                      Either uri or repository can be specified and is required.
                    oneOf:
                    - not:
                        required:
                        - external
                      required:
                      - name
                    - not:
                        anyOf:
                        - required:
                          - name
                        - required:
                          - namespace
                      required:
                      - external
                    properties:
                      external:
                        description: 'Allowed value: The `name` field of a `CloudBuildV2Repository`
                          resource.'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                    type: object
                  uri:
                    description: The URI of the repo.
                    type: string
                required:
                - ref
                - repoType
                type: object
              substitutions:
                additionalProperties:
                  type: string
                description: Substitutions data for Build resource.
                type: object
              tags:
                description: Tags for annotation of a BuildTrigger.
                items:
                  type: string
                type: array
              triggerTemplate:
                description: |-
                  Template describing the types of source changes to trigger a build.

                  Branch and tag names in trigger templates are interpreted as regular
                  expressions. Any branch or tag change that matches that regular
                  expression will trigger a build.

                  One of 'trigger_template', 'github', 'pubsub_config', 'webhook_config' or 'source_to_build' must be provided.
                properties:
                  branchName:
                    description: |-
                      Name of the branch to build. Exactly one a of branch name, tag, or commit SHA must be provided.
                      This field is a regular expression.
                    type: string
                  commitSha:
                    description: Explicit commit SHA to build. Exactly one of a branch
                      name, tag, or commit SHA must be provided.
                    type: string
                  dir:
                    description: |-
                      Directory, relative to the source root, in which to run the build.

                      This must be a relative path. If a step's dir is specified and
                      is an absolute path, this value is ignored for that step's
                      execution.
                    type: string
                  invertRegex:
                    description: Only trigger a build if the revision regex does NOT
                      match the revision regex.
                    type: boolean
                  repoRef:
                    description: |-
                      The Cloud Source Repository to build. If omitted, the repo with
                      name "default" is assumed.
                    oneOf:
                    - not:
                        required:
                        - external
                      required:
                      - name
                    - not:
                        anyOf:
                        - required:
                          - name
                        - required:
                          - namespace
                      required:
                      - external
                    properties:
                      external:
                        description: 'Allowed value: The `name` field of a `SourceRepoRepository`
                          resource.'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                    type: object
                  tagName:
                    description: |-
                      Name of the tag to build. Exactly one of a branch name, tag, or commit SHA must be provided.
                      This field is a regular expression.
                    type: string
                type: object
              webhookConfig:
                description: |-
                  WebhookConfig describes the configuration of a trigger that creates
                  a build whenever a webhook is sent to a trigger's webhook URL.

                  One of 'trigger_template', 'github', 'pubsub_config' 'webhook_config' or 'source_to_build' must be provided.
                properties:
                  secretRef:
                    description: The secret required
                    oneOf:
                    - not:
                        required:
                        - external
                      required:
                      - name
                    - not:
                        anyOf:
                        - required:
                          - name
                        - required:
                          - namespace
                      required:
                      - external
                    properties:
                      external:
                        description: 'Allowed value: The `name` field of a `SecretManagerSecretVersion`
                          resource.'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                    type: object
                  state:
                    description: |-
                      Potential issues with the underlying Pub/Sub subscription configuration.
                      Only populated on get requests.
                    type: string
                required:
                - secretRef
                type: object
            type: object
          status:
            properties:
              conditions:
                description: Conditions represent the latest available observation
                  of the resource's current state.
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's
                        last transition.
                      type: string
                    status:
                      description: Status is the status of the condition. Can be True,
                        False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  type: object
                type: array
              createTime:
                description: Time when the trigger was created.
                type: string
              observedGeneration:
                description: ObservedGeneration is the generation of the resource
                  that was most recently observed by the Config Connector controller.
                  If this is equal to metadata.generation, then that means that the
                  current reported status reflects the most recent desired state of
                  the resource.
                type: integer
              triggerId:
                description: The unique identifier for the trigger.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
