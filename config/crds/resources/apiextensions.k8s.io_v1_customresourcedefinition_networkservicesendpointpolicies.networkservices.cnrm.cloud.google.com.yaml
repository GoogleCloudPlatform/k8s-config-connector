apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cnrm.cloud.google.com/version: 0.0.0-dev
  creationTimestamp: null
  labels:
    cnrm.cloud.google.com/managed-by-kcc: "true"
    cnrm.cloud.google.com/system: "true"
  name: networkservicesendpointpolicies.networkservices.cnrm.cloud.google.com
spec:
  group: networkservices.cnrm.cloud.google.com
  names:
    categories:
    - gcp
    kind: NetworkServicesEndpointPolicy
    listKind: NetworkServicesEndpointPolicyList
    plural: networkservicesendpointpolicies
    shortNames:
    - gcpnetworkservicesendpointpolicy
    - gcpnetworkservicesendpointpolicies
    singular: networkservicesendpointpolicy
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: When 'True', the most recent reconcile of the resource succeeded
      jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - description: The reason for the value in 'Ready'
      jsonPath: .status.conditions[?(@.type=='Ready')].reason
      name: Status
      type: string
    - description: The last transition time for the value in 'Status'
      jsonPath: .status.conditions[?(@.type=='Ready')].lastTransitionTime
      name: Status Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: NetworkServicesEndpointPolicy is the Schema for the NetworkServicesEndpointPolicy
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: NetworkServicesEndpointPolicySpec defines the desired state
              of NetworkServicesEndpointPolicy
            properties:
              authorizationPolicy:
                description: Optional. This field specifies the URL of AuthorizationPolicy
                  resource that applies authorization policies to the inbound traffic
                  at the matched endpoints. Refer to Authorization. If this field
                  is not specified, authorization is disabled(no authz checks) for
                  this endpoint.
                type: string
              clientTLSPolicy:
                description: Optional. A URL referring to a ClientTlsPolicy resource.
                  ClientTlsPolicy can be set to specify the authentication for traffic
                  from the proxy to the actual endpoints. More specifically, it is
                  applied to the outgoing traffic from the proxy to the endpoint.
                  This is typically used for sidecar model where the proxy identifies
                  itself as endpoint to the control plane, with the connection between
                  sidecar and endpoint requiring authentication. If this field is
                  not set, authentication is disabled(open). Applicable only when
                  EndpointPolicyType is SIDECAR_PROXY.
                type: string
              description:
                description: Optional. A free-text description of the resource. Max
                  length 1024 characters.
                type: string
              endpointMatcher:
                description: Required. A matcher that selects endpoints to which the
                  policies should be applied.
                properties:
                  metadataLabelMatcher:
                    description: The matcher is based on node metadata presented by
                      xDS clients.
                    properties:
                      metadataLabelMatchCriteria:
                        description: |-
                          Specifies how matching should be done.

                           Supported values are:
                           MATCH_ANY: At least one of the Labels specified in the
                             matcher should match the metadata presented by xDS client.
                           MATCH_ALL: The metadata presented by the xDS client should
                             contain all of the labels specified here.

                           The selection is determined based on the best match. For
                           example, suppose there are three EndpointPolicy
                           resources P1, P2 and P3 and if P1 has a the matcher as
                           MATCH_ANY <A:1, B:1>, P2 has MATCH_ALL <A:1,B:1>, and P3 has
                           MATCH_ALL <A:1,B:1,C:1>.

                           If a client with label <A:1> connects, the config from P1
                           will be selected.

                           If a client with label <A:1,B:1> connects, the config from P2
                           will be selected.

                           If a client with label <A:1,B:1,C:1> connects, the config
                           from P3 will be selected.

                           If there is more than one best match, (for example, if a
                           config P4 with selector <A:1,D:1> exists and if a client with
                           label <A:1,B:1,D:1> connects), an error will be thrown.
                        type: string
                      metadataLabels:
                        description: The list of label value pairs that must match
                          labels in the provided metadata based on filterMatchCriteria
                          This list can have at most 64 entries. The list can be empty
                          if the match criteria is MATCH_ANY, to specify a wildcard
                          match (i.e this matches any client).
                        items:
                          properties:
                            labelName:
                              description: Required. Label name presented as key in
                                xDS Node Metadata.
                              type: string
                            labelValue:
                              description: Required. Label value presented as value
                                corresponding to the above key, in xDS Node Metadata.
                              type: string
                          required:
                          - labelName
                          - labelValue
                          type: object
                        type: array
                    type: object
                type: object
              labels:
                additionalProperties:
                  type: string
                description: Optional. Set of label tags associated with the EndpointPolicy
                  resource.
                type: object
              location:
                description: The location for the resource
                type: string
              projectRef:
                description: The Project that this resource belongs to.
                oneOf:
                - not:
                    required:
                    - external
                  required:
                  - name
                - not:
                    anyOf:
                    - required:
                      - name
                    - required:
                      - namespace
                  required:
                  - external
                properties:
                  external:
                    description: The `projectID` field of a project, when not managed
                      by Config Connector.
                    type: string
                  kind:
                    description: The kind of the Project resource; optional but must
                      be `Project` if provided.
                    type: string
                  name:
                    description: The `name` field of a `Project` resource.
                    type: string
                  namespace:
                    description: The `namespace` field of a `Project` resource.
                    type: string
                type: object
              resourceID:
                description: The NetworkServicesEndpointPolicy name. If not given,
                  the metadata.name will be used.
                type: string
              serverTLSPolicy:
                description: Optional. A URL referring to ServerTlsPolicy resource.
                  ServerTlsPolicy is used to determine the authentication policy to
                  be applied to terminate the inbound traffic at the identified backends.
                  If this field is not set, authentication is disabled(open) for this
                  endpoint.
                type: string
              trafficPortSelector:
                description: Optional. Port selector for the (matched) endpoints.
                  If no port selector is provided, the matched config is applied to
                  all ports.
                properties:
                  ports:
                    description: Optional. A list of ports. Can be port numbers or
                      port range (example, [80-90] specifies all ports from 80 to
                      90, including 80 and 90) or named ports or * to specify all
                      ports. If the list is empty, all ports are selected.
                    items:
                      type: string
                    type: array
                type: object
              type:
                description: Required. The type of endpoint policy. This is primarily
                  used to validate the configuration.
                type: string
            required:
            - endpointMatcher
            - location
            - resourceID
            - type
            type: object
          status:
            description: NetworkServicesEndpointPolicyStatus defines the config connector
              machine state of NetworkServicesEndpointPolicy
            properties:
              conditions:
                description: Conditions represent the latest available observations
                  of the object's current state.
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's
                        last transition.
                      type: string
                    status:
                      description: Status is the status of the condition. Can be True,
                        False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  type: object
                type: array
              externalRef:
                description: A unique specifier for the NetworkServicesEndpointPolicy
                  resource in GCP.
                type: string
              observedGeneration:
                description: ObservedGeneration is the generation of the resource
                  that was most recently observed by the Config Connector controller.
                  If this is equal to metadata.generation, then that means that the
                  current reported status reflects the most recent desired state of
                  the resource.
                format: int64
                type: integer
              observedState:
                description: ObservedState is the state of the resource as most recently
                  observed in GCP.
                properties:
                  createTime:
                    description: Output only. Create time stamp
                    type: string
                  updateTime:
                    description: Output only. Update time stamp
                    type: string
                type: object
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
