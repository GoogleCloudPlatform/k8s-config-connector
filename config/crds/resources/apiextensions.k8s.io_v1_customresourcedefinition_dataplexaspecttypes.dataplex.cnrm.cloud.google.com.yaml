apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cnrm.cloud.google.com/version: 0.0.0-dev
  creationTimestamp: null
  labels:
    cnrm.cloud.google.com/managed-by-kcc: "true"
    cnrm.cloud.google.com/system: "true"
  name: dataplexaspecttypes.dataplex.cnrm.cloud.google.com
spec:
  group: dataplex.cnrm.cloud.google.com
  names:
    categories:
    - gcp
    kind: DataplexAspectType
    listKind: DataplexAspectTypeList
    plural: dataplexaspecttypes
    shortNames:
    - gcpdataplexaspecttype
    - gcpdataplexaspecttypes
    singular: dataplexaspecttype
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: When 'True', the most recent reconcile of the resource succeeded
      jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - description: The reason for the value in 'Ready'
      jsonPath: .status.conditions[?(@.type=='Ready')].reason
      name: Status
      type: string
    - description: The last transition time for the value in 'Status'
      jsonPath: .status.conditions[?(@.type=='Ready')].lastTransitionTime
      name: Status Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DataplexAspectType is the Schema for the DataplexAspectType API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DataplexAspectTypeSpec defines the desired state of DataplexAspectType
            properties:
              authorization:
                description: Immutable. Defines the Authorization for this type.
                properties:
                  alternateUsePermission:
                    description: Immutable. The IAM permission grantable on the EntryGroup
                      to allow access to instantiate Aspects of Dataplex owned AspectTypes,
                      only settable for Dataplex owned Types.
                    type: string
                type: object
              description:
                description: Optional. Description of the AspectType.
                type: string
              displayName:
                description: Optional. User friendly display name.
                type: string
              etag:
                description: The service computes this checksum. The client may send
                  it on update and delete requests to ensure it has an up-to-date
                  value before proceeding.
                type: string
              labels:
                additionalProperties:
                  type: string
                description: Optional. User-defined labels for the AspectType.
                type: object
              location:
                type: string
              metadataTemplate:
                description: Required. MetadataTemplate of the aspect.
                properties:
                  annotations:
                    description: Optional. Specifies annotations on this field.
                    properties:
                      deprecated:
                        description: Optional. Marks a field as deprecated. You can
                          include a deprecation message.
                        type: string
                      description:
                        description: Optional. Description for a field.
                        type: string
                      displayName:
                        description: Optional. Display name for a field.
                        type: string
                      displayOrder:
                        description: Optional. Display order for a field. You can
                          use this to reorder where a field is rendered.
                        format: int32
                        type: integer
                      stringType:
                        description: |-
                          Optional. You can use String Type annotations to specify special
                           meaning to string fields. The following values are supported:

                           * richText: The field must be interpreted as a rich text field.
                           * url: A fully qualified URL link.
                           * resource: A service qualified resource reference.
                        type: string
                      stringValues:
                        description: Optional. Suggested hints for string fields.
                          You can use them to suggest values to users through console.
                        items:
                          type: string
                        type: array
                    type: object
                  arrayItems:
                    description: Optional. If the type is array, set array_items.
                      array_items can refer to a primitive field or a complex (record
                      only) field. To specify a primitive field, you only need to
                      set name and type in the nested MetadataTemplate. The recommended
                      value for the name field is item, as this isn't used in the
                      actual payload.
                  constraints:
                    description: Optional. Specifies the constraints on this field.
                    properties:
                      required:
                        description: Optional. Marks this field as optional or required.
                        type: boolean
                    type: object
                  enumValues:
                    description: Optional. The list of values for an enum type. You
                      must define it if the type is enum.
                    items:
                      properties:
                        deprecated:
                          description: Optional. You can set this message if you need
                            to deprecate an enum value.
                          type: string
                        index:
                          description: Required. Index for the enum value. It can't
                            be modified.
                          format: int32
                          type: integer
                        name:
                          description: Required. Name of the enumvalue. This is the
                            actual value that the aspect can contain.
                          type: string
                      type: object
                    type: array
                  index:
                    description: Optional. Index is used to encode Template messages.
                      The value of index can range between 1 and 2,147,483,647. Index
                      must be unique within all fields in a Template. (Nested Templates
                      can reuse indexes). Once a Template is defined, the index cannot
                      be changed, because it identifies the field in the actual storage
                      format. Index is a mandatory field, but it is optional for top
                      level fields, and map/array "values" definitions.
                    format: int32
                    type: integer
                  mapItems:
                    description: Optional. If the type is map, set map_items. map_items
                      can refer to a primitive field or a complex (record only) field.
                      To specify a primitive field, you only need to set name and
                      type in the nested MetadataTemplate. The recommended value for
                      the name field is item, as this isn't used in the actual payload.
                  name:
                    description: Required. The name of the field.
                    type: string
                  recordFields:
                    description: Optional. Field definition. You must specify it if
                      the type is record. It defines the nested fields.
                    items: {}
                    type: array
                  type:
                    description: |-
                      Required. The datatype of this field. The following values are supported:

                       Primitive types:

                       * string
                       * integer
                       * boolean
                       * double
                       * datetime. Must be of the format RFC3339 UTC "Zulu" (Examples:
                       "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z").

                       Complex types:

                       * enum
                       * array
                       * map
                       * record
                    type: string
                  typeID:
                    description: Optional. You can use type id if this definition
                      of the field needs to be reused later. The type id must be unique
                      across the entire template. You can only specify it if the field
                      type is record.
                    type: string
                  typeRef:
                    description: Optional. A reference to another field definition
                      (not an inline definition). The value must be equal to the value
                      of an id field defined elsewhere in the MetadataTemplate. Only
                      fields with record type can refer to other fields.
                    type: string
                type: object
              projectRef:
                description: The Project that this resource belongs to.
                oneOf:
                - not:
                    required:
                    - external
                  required:
                  - name
                - not:
                    anyOf:
                    - required:
                      - name
                    - required:
                      - namespace
                  required:
                  - external
                properties:
                  external:
                    description: The `projectID` field of a project, when not managed
                      by Config Connector.
                    type: string
                  kind:
                    description: The kind of the Project resource; optional but must
                      be `Project` if provided.
                    type: string
                  name:
                    description: The `name` field of a `Project` resource.
                    type: string
                  namespace:
                    description: The `namespace` field of a `Project` resource.
                    type: string
                type: object
              resourceID:
                description: The DataplexAspectType name. If not given, the metadata.name
                  will be used.
                type: string
            required:
            - location
            - projectRef
            type: object
          status:
            description: DataplexAspectTypeStatus defines the config connector machine
              state of DataplexAspectType
            properties:
              conditions:
                description: Conditions represent the latest available observations
                  of the object's current state.
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's
                        last transition.
                      type: string
                    status:
                      description: Status is the status of the condition. Can be True,
                        False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  type: object
                type: array
              externalRef:
                description: A unique specifier for the DataplexAspectType resource
                  in GCP.
                type: string
              observedGeneration:
                description: ObservedGeneration is the generation of the resource
                  that was most recently observed by the Config Connector controller.
                  If this is equal to metadata.generation, then that means that the
                  current reported status reflects the most recent desired state of
                  the resource.
                format: int64
                type: integer
              observedState:
                description: ObservedState is the state of the resource as most recently
                  observed in GCP.
                properties:
                  createTime:
                    description: Output only. The time when the AspectType was created.
                    type: string
                  transferStatus:
                    description: Output only. Denotes the transfer status of the Aspect
                      Type. It is unspecified for Aspect Types created from Dataplex
                      API.
                    type: string
                  uid:
                    description: Output only. System generated globally unique ID
                      for the AspectType. If you delete and recreate the AspectType
                      with the same name, then this ID will be different.
                    type: string
                  updateTime:
                    description: Output only. The time when the AspectType was last
                      updated.
                    type: string
                type: object
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
