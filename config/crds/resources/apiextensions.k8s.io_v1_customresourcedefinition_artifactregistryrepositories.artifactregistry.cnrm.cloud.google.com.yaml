apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cnrm.cloud.google.com/version: 0.0.0-dev
  creationTimestamp: null
  labels:
    cnrm.cloud.google.com/managed-by-kcc: "true"
    cnrm.cloud.google.com/stability-level: stable
    cnrm.cloud.google.com/system: "true"
    cnrm.cloud.google.com/tf2crd: "true"
  name: artifactregistryrepositories.artifactregistry.cnrm.cloud.google.com
spec:
  group: artifactregistry.cnrm.cloud.google.com
  names:
    categories:
    - gcp
    kind: ArtifactRegistryRepository
    plural: artifactregistryrepositories
    shortNames:
    - gcpartifactregistryrepository
    - gcpartifactregistryrepositories
    singular: artifactregistryrepository
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: When 'True', the most recent reconcile of the resource succeeded
      jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - description: The reason for the value in 'Ready'
      jsonPath: .status.conditions[?(@.type=='Ready')].reason
      name: Status
      type: string
    - description: The last transition time for the value in 'Status'
      jsonPath: .status.conditions[?(@.type=='Ready')].lastTransitionTime
      name: Status Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'apiVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
            type: string
          kind:
            description: 'kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              cleanupPolicies:
                description: |-
                  Cleanup policies for this repository. Cleanup policies indicate when
                  certain package versions can be automatically deleted.
                  Map keys are policy IDs supplied by users during policy creation. They must
                  unique within a repository and be under 128 characters in length.
                items:
                  properties:
                    action:
                      description: 'Policy action. Possible values: ["DELETE", "KEEP"].'
                      type: string
                    condition:
                      description: Policy condition for matching versions.
                      properties:
                        newerThan:
                          description: Match versions newer than a duration.
                          type: string
                        olderThan:
                          description: Match versions older than a duration.
                          type: string
                        packageNamePrefixes:
                          description: Match versions by package prefix. Applied on
                            any prefix match.
                          items:
                            type: string
                          type: array
                        tagPrefixes:
                          description: Match versions by tag prefix. Applied on any
                            prefix match.
                          items:
                            type: string
                          type: array
                        tagState:
                          description: 'Match versions by tag status. Default value:
                            "ANY" Possible values: ["TAGGED", "UNTAGGED", "ANY"].'
                          type: string
                        versionNamePrefixes:
                          description: Match versions by version name prefix. Applied
                            on any prefix match.
                          items:
                            type: string
                          type: array
                      type: object
                    id:
                      type: string
                    mostRecentVersions:
                      description: |-
                        Policy condition for retaining a minimum number of versions. May only be
                        specified with a Keep action.
                      properties:
                        keepCount:
                          description: Minimum number of versions to keep.
                          type: integer
                        packageNamePrefixes:
                          description: Match versions by package prefix. Applied on
                            any prefix match.
                          items:
                            type: string
                          type: array
                      type: object
                  required:
                  - id
                  type: object
                type: array
              cleanupPolicyDryRun:
                description: |-
                  If true, the cleanup pipeline is prevented from deleting versions in this
                  repository.
                type: boolean
              description:
                description: The user-provided description of the repository.
                type: string
              dockerConfig:
                description: Docker repository config contains repository level configuration
                  for the repositories of docker type.
                properties:
                  immutableTags:
                    description: The repository which enabled this flag prevents all
                      tags from being modified, moved or deleted. This does not prevent
                      tags from being created.
                    type: boolean
                type: object
              format:
                description: |-
                  Immutable. The format of packages that are stored in the repository. Supported formats
                  can be found [here](https://cloud.google.com/artifact-registry/docs/supported-formats).
                  You can only create alpha formats if you are a member of the
                  [alpha user group](https://cloud.google.com/artifact-registry/docs/supported-formats#alpha-access).
                type: string
              kmsKeyRef:
                description: |-
                  The customer managed encryption key thatâ€™s used to encrypt the
                  contents of the Repository.
                oneOf:
                - not:
                    required:
                    - external
                  required:
                  - name
                - not:
                    anyOf:
                    - required:
                      - name
                    - required:
                      - namespace
                  required:
                  - external
                properties:
                  external:
                    description: 'Allowed value: The `selfLink` field of a `KMSCryptoKey`
                      resource.'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                type: object
              location:
                description: Immutable. The name of the location this repository is
                  located in.
                type: string
              mavenConfig:
                description: |-
                  MavenRepositoryConfig is maven related repository details.
                  Provides additional configuration details for repositories of the maven
                  format type.
                properties:
                  allowSnapshotOverwrites:
                    description: |-
                      Immutable. The repository with this flag will allow publishing the same
                      snapshot versions.
                    type: boolean
                  versionPolicy:
                    description: 'Immutable. Version policy defines the versions that
                      the registry will accept. Default value: "VERSION_POLICY_UNSPECIFIED"
                      Possible values: ["VERSION_POLICY_UNSPECIFIED", "RELEASE", "SNAPSHOT"].'
                    type: string
                type: object
              mode:
                description: 'Immutable. The mode configures the repository to serve
                  artifacts from different sources. Default value: "STANDARD_REPOSITORY"
                  Possible values: ["STANDARD_REPOSITORY", "VIRTUAL_REPOSITORY", "REMOTE_REPOSITORY"].'
                type: string
              remoteRepositoryConfig:
                description: Immutable. Configuration specific for a Remote Repository.
                properties:
                  description:
                    description: Immutable. The description of the remote source.
                    type: string
                  dockerRepository:
                    description: Immutable. Specific settings for a Docker remote
                      repository.
                    properties:
                      publicRepository:
                        description: 'Immutable. Address of the remote repository.
                          Default value: "DOCKER_HUB" Possible values: ["DOCKER_HUB"].'
                        type: string
                    type: object
                  mavenRepository:
                    description: Immutable. Specific settings for a Maven remote repository.
                    properties:
                      publicRepository:
                        description: 'Immutable. Address of the remote repository.
                          Default value: "MAVEN_CENTRAL" Possible values: ["MAVEN_CENTRAL"].'
                        type: string
                    type: object
                  npmRepository:
                    description: Immutable. Specific settings for an Npm remote repository.
                    properties:
                      publicRepository:
                        description: 'Immutable. Address of the remote repository.
                          Default value: "NPMJS" Possible values: ["NPMJS"].'
                        type: string
                    type: object
                  pythonRepository:
                    description: Immutable. Specific settings for a Python remote
                      repository.
                    properties:
                      publicRepository:
                        description: 'Immutable. Address of the remote repository.
                          Default value: "PYPI" Possible values: ["PYPI"].'
                        type: string
                    type: object
                type: object
              resourceID:
                description: Immutable. Optional. The repositoryId of the resource.
                  Used for creation and acquisition. When unset, the value of `metadata.name`
                  is used as the default.
                type: string
              virtualRepositoryConfig:
                description: Configuration specific for a Virtual Repository.
                properties:
                  upstreamPolicies:
                    description: |-
                      Policies that configure the upstream artifacts distributed by the Virtual
                      Repository. Upstream policies cannot be set on a standard repository.
                    items:
                      properties:
                        id:
                          description: The user-provided ID of the upstream policy.
                          type: string
                        priority:
                          description: Entries with a greater priority value take
                            precedence in the pull order.
                          type: integer
                        repositoryRef:
                          description: |-
                            A reference to the repository resource, for example:
                            "projects/p1/locations/us-central1/repositories/repo1".
                          oneOf:
                          - not:
                              required:
                              - external
                            required:
                            - name
                          - not:
                              anyOf:
                              - required:
                                - name
                              - required:
                                - namespace
                            required:
                            - external
                          properties:
                            external:
                              description: 'Allowed value: string of the format `projects/{{project}}/locations/{{location}}/repositories/{{value}}`,
                                where {{value}} is the `name` field of an `ArtifactRegistryRepository`
                                resource.'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info:
                                https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                          type: object
                      type: object
                    type: array
                type: object
            required:
            - format
            - location
            type: object
          status:
            properties:
              conditions:
                description: Conditions represent the latest available observation
                  of the resource's current state.
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's
                        last transition.
                      type: string
                    status:
                      description: Status is the status of the condition. Can be True,
                        False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  type: object
                type: array
              createTime:
                description: The time when the repository was created.
                type: string
              name:
                description: |-
                  The name of the repository, for example:
                  "repo1".
                type: string
              observedGeneration:
                description: ObservedGeneration is the generation of the resource
                  that was most recently observed by the Config Connector controller.
                  If this is equal to metadata.generation, then that means that the
                  current reported status reflects the most recent desired state of
                  the resource.
                type: integer
              updateTime:
                description: The time when the repository was last updated.
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
