# Copyright 2024 Google LLC. All Rights Reserved.
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
info:
  title: NetworkServices/GrpcRoute
  description: The NetworkServices GrpcRoute resource
  x-dcl-struct-name: GrpcRoute
  x-dcl-has-iam: false
paths:
  get:
    description: The function used to get information about a GrpcRoute
    parameters:
    - name: grpcRoute
      required: true
      description: A full instance of a GrpcRoute
  apply:
    description: The function used to apply information about a GrpcRoute
    parameters:
    - name: grpcRoute
      required: true
      description: A full instance of a GrpcRoute
  delete:
    description: The function used to delete a GrpcRoute
    parameters:
    - name: grpcRoute
      required: true
      description: A full instance of a GrpcRoute
  deleteAll:
    description: The function used to delete all GrpcRoute
    parameters:
    - name: project
      required: true
      schema:
        type: string
    - name: location
      required: true
      schema:
        type: string
  list:
    description: The function used to list information about many GrpcRoute
    parameters:
    - name: project
      required: true
      schema:
        type: string
    - name: location
      required: true
      schema:
        type: string
components:
  schemas:
    GrpcRoute:
      title: GrpcRoute
      x-dcl-id: projects/{{project}}/locations/{{location}}/grpcRoutes/{{name}}
      x-dcl-parent-container: project
      x-dcl-labels: labels
      x-dcl-has-create: true
      x-dcl-has-iam: false
      x-dcl-read-timeout: 0
      x-dcl-apply-timeout: 0
      x-dcl-delete-timeout: 0
      type: object
      required:
      - name
      - hostnames
      - rules
      - project
      - location
      properties:
        createTime:
          type: string
          format: date-time
          x-dcl-go-name: CreateTime
          readOnly: true
          description: Output only. The timestamp when the resource was created.
          x-kubernetes-immutable: true
        description:
          type: string
          x-dcl-go-name: Description
          description: Optional. A free-text description of the resource. Max length
            1024 characters.
        gateways:
          type: array
          x-dcl-go-name: Gateways
          description: 'Optional. Gateways defines a list of gateways this GrpcRoute
            is attached to, as one of the routing rules to route the requests served
            by the gateway. Each gateway reference should match the pattern: `projects/*/locations/global/gateways/`'
          x-dcl-send-empty: true
          x-dcl-list-type: list
          items:
            type: string
            x-dcl-go-type: string
            x-dcl-references:
            - resource: Networkservices/Gateway
              field: selfLink
        hostnames:
          type: array
          x-dcl-go-name: Hostnames
          description: 'Required. Service hostnames with an optional port for which
            this route describes traffic. Format: [:] Hostname is the fully qualified
            domain name of a network host. This matches the RFC 1123 definition of
            a hostname with 2 notable exceptions: - IPs are not allowed. - A hostname
            may be prefixed with a wildcard label (*.). The wildcard label must appear
            by itself as the first label. Hostname can be “precise” which is a domain
            name without the terminating dot of a network host (e.g. “foo.example.com”)
            or “wildcard”, which is a domain name prefixed with a single wildcard
            label (e.g. *.example.com). Note that as per RFC1035 and RFC1123, a label
            must consist of lower case alphanumeric characters or ‘-’, and must start
            and end with an alphanumeric character. No other punctuation is allowed.
            The routes associated with a Router must have unique hostnames. If you
            attempt to attach multiple routes with conflicting hostnames, the configuration
            will be rejected. For example, while it is acceptable for routes for the
            hostnames "*.foo.bar.com" and "*.bar.com" to be associated with the same
            route, it is not possible to associate two routes both with "*.bar.com"
            or both with "bar.com". In the case that multiple routes match the hostname,
            the most specific match will be selected. For example, "foo.bar.baz.com"
            will take precedence over "*.bar.baz.com" and "*.bar.baz.com" will take
            precedence over "*.baz.com". If a port is specified, then gRPC clients
            must use the channel URI with the port to match this rule (i.e. "xds:///service:123"),
            otherwise they must supply the URI without a port (i.e. "xds:///service").'
          x-dcl-send-empty: true
          x-dcl-list-type: list
          items:
            type: string
            x-dcl-go-type: string
        labels:
          type: object
          additionalProperties:
            type: string
          x-dcl-go-name: Labels
          description: Optional. Set of label tags associated with the GrpcRoute resource.
        location:
          type: string
          x-dcl-go-name: Location
          description: The location for the resource
          x-kubernetes-immutable: true
        meshes:
          type: array
          x-dcl-go-name: Meshes
          description: 'Optional. Meshes defines a list of meshes this GrpcRoute is
            attached to, as one of the routing rules to route the requests served
            by the mesh. Each mesh reference should match the pattern: `projects/*/locations/global/meshes/`'
          x-dcl-send-empty: true
          x-dcl-list-type: list
          items:
            type: string
            x-dcl-go-type: string
            x-dcl-references:
            - resource: Networkservices/Mesh
              field: selfLink
        name:
          type: string
          x-dcl-go-name: Name
          description: Required. Name of the GrpcRoute resource. It matches pattern
            `projects/*/locations/global/grpcRoutes/`
        project:
          type: string
          x-dcl-go-name: Project
          description: The project for the resource
          x-kubernetes-immutable: true
          x-dcl-references:
          - resource: Cloudresourcemanager/Project
            field: name
            parent: true
        rules:
          type: array
          x-dcl-go-name: Rules
          description: Required. A list of detailed rules defining how to route traffic.
            Within a single GrpcRoute, the GrpcRoute.RouteAction associated with the
            first matching GrpcRoute.RouteRule will be executed. At least one rule
            must be supplied.
          x-dcl-send-empty: true
          x-dcl-list-type: list
          items:
            type: object
            x-dcl-go-type: GrpcRouteRules
            required:
            - action
            properties:
              action:
                type: object
                x-dcl-go-name: Action
                x-dcl-go-type: GrpcRouteRulesAction
                description: Required. A detailed rule defining how to route traffic.
                  This field is required.
                properties:
                  destinations:
                    type: array
                    x-dcl-go-name: Destinations
                    description: Optional. The destination services to which traffic
                      should be forwarded. If multiple destinations are specified,
                      traffic will be split between Backend Service(s) according to
                      the weight field of these destinations.
                    x-dcl-send-empty: true
                    x-dcl-list-type: list
                    items:
                      type: object
                      x-dcl-go-type: GrpcRouteRulesActionDestinations
                      required:
                      - serviceName
                      properties:
                        serviceName:
                          type: string
                          x-dcl-go-name: ServiceName
                          description: Required. The URL of a destination service
                            to which to route traffic. Must refer to either a BackendService
                            or ServiceDirectoryService.
                          x-dcl-references:
                          - resource: Compute/BackendService
                            field: name
                            format: projects/{{project}}/locations/global/backendServices/{{name}}
                        weight:
                          type: integer
                          format: int64
                          x-dcl-go-name: Weight
                          description: 'Optional. Specifies the proportion of requests
                            forwarded to the backend referenced by the serviceName
                            field. This is computed as: weight/Sum(weights in this
                            destination list). For non-zero values, there may be some
                            epsilon from the exact proportion defined here depending
                            on the precision an implementation supports. If only one
                            serviceName is specified and it has a weight greater than
                            0, 100% of the traffic is forwarded to that backend. If
                            weights are specified for any one service name, they need
                            to be specified for all of them. If weights are unspecified
                            for all services, then, traffic is distributed in equal
                            proportions to all of them.'
                  faultInjectionPolicy:
                    type: object
                    x-dcl-go-name: FaultInjectionPolicy
                    x-dcl-go-type: GrpcRouteRulesActionFaultInjectionPolicy
                    description: Optional. The specification for fault injection introduced
                      into traffic to test the resiliency of clients to destination
                      service failure. As part of fault injection, when clients send
                      requests to a destination, delays can be introduced on a percentage
                      of requests before sending those requests to the destination
                      service. Similarly requests from clients can be aborted by for
                      a percentage of requests. timeout and retry_policy will be ignored
                      by clients that are configured with a fault_injection_policy
                    properties:
                      abort:
                        type: object
                        x-dcl-go-name: Abort
                        x-dcl-go-type: GrpcRouteRulesActionFaultInjectionPolicyAbort
                        description: The specification for aborting to client requests.
                        properties:
                          httpStatus:
                            type: integer
                            format: int64
                            x-dcl-go-name: HttpStatus
                            description: The HTTP status code used to abort the request.
                              The value must be between 200 and 599 inclusive.
                          percentage:
                            type: integer
                            format: int64
                            x-dcl-go-name: Percentage
                            description: The percentage of traffic which will be aborted.
                              The value must be between [0, 100]
                      delay:
                        type: object
                        x-dcl-go-name: Delay
                        x-dcl-go-type: GrpcRouteRulesActionFaultInjectionPolicyDelay
                        description: The specification for injecting delay to client
                          requests.
                        properties:
                          fixedDelay:
                            type: string
                            x-dcl-go-name: FixedDelay
                            description: Specify a fixed delay before forwarding the
                              request.
                          percentage:
                            type: integer
                            format: int64
                            x-dcl-go-name: Percentage
                            description: The percentage of traffic on which delay
                              will be injected. The value must be between [0, 100]
                  retryPolicy:
                    type: object
                    x-dcl-go-name: RetryPolicy
                    x-dcl-go-type: GrpcRouteRulesActionRetryPolicy
                    description: Optional. Specifies the retry policy associated with
                      this route.
                    properties:
                      numRetries:
                        type: integer
                        format: int64
                        x-dcl-go-name: NumRetries
                        description: Specifies the allowed number of retries. This
                          number must be > 0. If not specpfied, default to 1.
                      retryConditions:
                        type: array
                        x-dcl-go-name: RetryConditions
                        description: '- connect-failure: Router will retry on failures
                          connecting to Backend Services, for example due to connection
                          timeouts. - refused-stream: Router will retry if the backend
                          service resets the stream with a REFUSED_STREAM error code.
                          This reset type indicates that it is safe to retry. - cancelled:
                          Router will retry if the gRPC status code in the response
                          header is set to cancelled - deadline-exceeded: Router will
                          retry if the gRPC status code in the response header is
                          set to deadline-exceeded - resource-exhausted: Router will
                          retry if the gRPC status code in the response header is
                          set to resource-exhausted - unavailable: Router will retry
                          if the gRPC status code in the response header is set to
                          unavailable'
                        x-dcl-send-empty: true
                        x-dcl-list-type: list
                        items:
                          type: string
                          x-dcl-go-type: string
                  timeout:
                    type: string
                    x-dcl-go-name: Timeout
                    description: Optional. Specifies the timeout for selected route.
                      Timeout is computed from the time the request has been fully
                      processed (i.e. end of stream) up until the response has been
                      completely processed. Timeout includes all retries.
              matches:
                type: array
                x-dcl-go-name: Matches
                description: Optional. Matches define conditions used for matching
                  the rule against incoming gRPC requests. Each match is independent,
                  i.e. this rule will be matched if ANY one of the matches is satisfied.
                  If no matches field is specified, this rule will unconditionally
                  match traffic.
                x-dcl-send-empty: true
                x-dcl-list-type: list
                items:
                  type: object
                  x-dcl-go-type: GrpcRouteRulesMatches
                  properties:
                    headers:
                      type: array
                      x-dcl-go-name: Headers
                      description: Optional. Specifies a collection of headers to
                        match.
                      x-dcl-send-empty: true
                      x-dcl-list-type: list
                      items:
                        type: object
                        x-dcl-go-type: GrpcRouteRulesMatchesHeaders
                        required:
                        - key
                        - value
                        properties:
                          key:
                            type: string
                            x-dcl-go-name: Key
                            description: Required. The key of the header.
                          type:
                            type: string
                            x-dcl-go-name: Type
                            x-dcl-go-type: GrpcRouteRulesMatchesHeadersTypeEnum
                            description: 'Optional. Specifies how to match against
                              the value of the header. If not specified, a default
                              value of EXACT is used. Possible values: MATCH_TYPE_UNSPECIFIED,
                              MATCH_ANY, MATCH_ALL'
                            enum:
                            - MATCH_TYPE_UNSPECIFIED
                            - MATCH_ANY
                            - MATCH_ALL
                          value:
                            type: string
                            x-dcl-go-name: Value
                            description: Required. The value of the header.
                    method:
                      type: object
                      x-dcl-go-name: Method
                      x-dcl-go-type: GrpcRouteRulesMatchesMethod
                      description: Optional. A gRPC method to match against. If this
                        field is empty or omitted, will match all methods.
                      required:
                      - grpcService
                      - grpcMethod
                      properties:
                        caseSensitive:
                          type: boolean
                          x-dcl-go-name: CaseSensitive
                          description: Optional. Specifies that matches are case sensitive.
                            The default value is true. case_sensitive must not be
                            used with a type of REGULAR_EXPRESSION.
                        grpcMethod:
                          type: string
                          x-dcl-go-name: GrpcMethod
                          description: Required. Name of the method to match against.
                            If unspecified, will match all methods.
                        grpcService:
                          type: string
                          x-dcl-go-name: GrpcService
                          description: Required. Name of the service to match against.
                            If unspecified, will match all services.
                        type:
                          type: string
                          x-dcl-go-name: Type
                          x-dcl-go-type: GrpcRouteRulesMatchesMethodTypeEnum
                          description: 'Optional. Specifies how to match against the
                            name. If not specified, a default value of "EXACT" is
                            used. Possible values: TYPE_UNSPECIFIED, EXACT, REGULAR_EXPRESSION'
                          enum:
                          - TYPE_UNSPECIFIED
                          - EXACT
                          - REGULAR_EXPRESSION
        selfLink:
          type: string
          x-dcl-go-name: SelfLink
          readOnly: true
          description: Output only. Server-defined URL of this resource
          x-kubernetes-immutable: true
        updateTime:
          type: string
          format: date-time
          x-dcl-go-name: UpdateTime
          readOnly: true
          description: Output only. The timestamp when the resource was updated.
          x-kubernetes-immutable: true
