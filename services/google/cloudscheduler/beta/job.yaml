# Copyright 2024 Google LLC. All Rights Reserved.
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
info:
  title: CloudScheduler/Job
  description: The CloudScheduler Job resource
  x-dcl-struct-name: Job
  x-dcl-has-iam: false
paths:
  get:
    description: The function used to get information about a Job
    parameters:
    - name: job
      required: true
      description: A full instance of a Job
  apply:
    description: The function used to apply information about a Job
    parameters:
    - name: job
      required: true
      description: A full instance of a Job
  delete:
    description: The function used to delete a Job
    parameters:
    - name: job
      required: true
      description: A full instance of a Job
  deleteAll:
    description: The function used to delete all Job
    parameters:
    - name: project
      required: true
      schema:
        type: string
    - name: location
      required: true
      schema:
        type: string
  list:
    description: The function used to list information about many Job
    parameters:
    - name: project
      required: true
      schema:
        type: string
    - name: location
      required: true
      schema:
        type: string
components:
  schemas:
    Job:
      title: Job
      x-dcl-id: projects/{{project}}/locations/{{location}}/jobs/{{name}}
      x-dcl-parent-container: project
      x-dcl-has-create: true
      x-dcl-has-iam: false
      x-dcl-read-timeout: 0
      x-dcl-apply-timeout: 0
      x-dcl-delete-timeout: 0
      type: object
      required:
      - name
      - project
      - location
      properties:
        appEngineHttpTarget:
          type: object
          x-dcl-go-name: AppEngineHttpTarget
          x-dcl-go-type: JobAppEngineHttpTarget
          description: App Engine HTTP target.
          x-dcl-conflicts:
          - pubsubTarget
          - httpTarget
          properties:
            appEngineRouting:
              type: object
              x-dcl-go-name: AppEngineRouting
              x-dcl-go-type: JobAppEngineHttpTargetAppEngineRouting
              description: App Engine Routing setting for the job.
              properties:
                host:
                  type: string
                  x-dcl-go-name: Host
                  readOnly: true
                  description: 'Output only. The host that the job is sent to. For
                    more information about how App Engine requests are routed, see
                    [here](https://cloud.google.com/appengine/docs/standard/python/how-requests-are-routed).
                    The host is constructed as: * `host = [application_domain_name]`
                    `| [service] + ''.'' + [application_domain_name]` `| [version]
                    + ''.'' + [application_domain_name]` `| [version_dot_service]+
                    ''.'' + [application_domain_name]` `| [instance] + ''.'' + [application_domain_name]`
                    `| [instance_dot_service] + ''.'' + [application_domain_name]`
                    `| [instance_dot_version] + ''.'' + [application_domain_name]`
                    `| [instance_dot_version_dot_service] + ''.'' + [application_domain_name]`
                    * `application_domain_name` = The domain name of the app, for
                    example .appspot.com, which is associated with the job''s project
                    ID. * `service =` service * `version =` version * `version_dot_service
                    =` version `+ ''.'' +` service * `instance =` instance * `instance_dot_service
                    =` instance `+ ''.'' +` service * `instance_dot_version =` instance
                    `+ ''.'' +` version * `instance_dot_version_dot_service =` instance
                    `+ ''.'' +` version `+ ''.'' +` service If service is empty, then
                    the job will be sent to the service which is the default service
                    when the job is attempted. If version is empty, then the job will
                    be sent to the version which is the default version when the job
                    is attempted. If instance is empty, then the job will be sent
                    to an instance which is available when the job is attempted. If
                    service, version, or instance is invalid, then the job will be
                    sent to the default version of the default service when the job
                    is attempted.'
                instance:
                  type: string
                  x-dcl-go-name: Instance
                  description: App instance. By default, the job is sent to an instance
                    which is available when the job is attempted. Requests can only
                    be sent to a specific instance if [manual scaling is used in App
                    Engine Standard](https://cloud.google.com/appengine/docs/python/an-overview-of-app-engine?hl=en_US#scaling_types_and_instance_classes).
                    App Engine Flex does not support instances. For more information,
                    see [App Engine Standard request routing](https://cloud.google.com/appengine/docs/standard/python/how-requests-are-routed)
                    and [App Engine Flex request routing](https://cloud.google.com/appengine/docs/flexible/python/how-requests-are-routed).
                service:
                  type: string
                  x-dcl-go-name: Service
                  description: App service. By default, the job is sent to the service
                    which is the default service when the job is attempted.
                version:
                  type: string
                  x-dcl-go-name: Version
                  description: App version. By default, the job is sent to the version
                    which is the default version when the job is attempted.
            body:
              type: string
              x-dcl-go-name: Body
              description: Body. HTTP request body. A request body is allowed only
                if the HTTP method is POST or PUT. It will result in invalid argument
                error to set a body on a job with an incompatible HttpMethod.
            headers:
              type: object
              additionalProperties:
                type: string
              x-dcl-go-name: Headers
              description: 'HTTP request headers. This map contains the header field
                names and values. Headers can be set when the job is created. Cloud
                Scheduler sets some headers to default values: * `User-Agent`: By
                default, this header is `"App Engine-Google; (+http://code.google.com/appengine)"`.
                This header can be modified, but Cloud Scheduler will append `"App
                Engine-Google; (+http://code.google.com/appengine)"` to the modified
                `User-Agent`. * `X-CloudScheduler`: This header will be set to true.
                The headers below are output only. They cannot be set or overridden:
                * `X-Google-*`: For Google internal use only. * `X-App Engine-*`:
                For Google internal use only. In addition, some App Engine headers,
                which contain job-specific information, are also be sent to the job
                handler.'
            httpMethod:
              type: string
              x-dcl-go-name: HttpMethod
              x-dcl-go-type: JobAppEngineHttpTargetHttpMethodEnum
              description: 'The HTTP method to use for the request. PATCH and OPTIONS
                are not permitted. Possible values: HTTP_METHOD_UNSPECIFIED, POST,
                GET, HEAD, PUT, DELETE, PATCH, OPTIONS'
              enum:
              - HTTP_METHOD_UNSPECIFIED
              - POST
              - GET
              - HEAD
              - PUT
              - DELETE
              - PATCH
              - OPTIONS
            relativeUri:
              type: string
              x-dcl-go-name: RelativeUri
              description: The relative URI. The relative URL must begin with "/"
                and must be a valid HTTP relative URL. It can contain a path, query
                string arguments, and `#` fragments. If the relative URL is empty,
                then the root path "/" will be used. No spaces are allowed, and the
                maximum length allowed is 2083 characters.
        attemptDeadline:
          type: string
          x-dcl-go-name: AttemptDeadline
          description: 'The deadline for job attempts. If the request handler does
            not respond by this deadline then the request is cancelled and the attempt
            is marked as a `DEADLINE_EXCEEDED` failure. The failed attempt can be
            viewed in execution logs. Cloud Scheduler will retry the job according
            to the RetryConfig. The allowed duration for this deadline is: * For HTTP
            targets, between 15 seconds and 30 minutes. * For App Engine HTTP targets,
            between 15 seconds and 24 hours.'
        description:
          type: string
          x-dcl-go-name: Description
          description: Optionally caller-specified in CreateJob or UpdateJob. A human-readable
            description for the job. This string must not contain more than 500 characters.
        httpTarget:
          type: object
          x-dcl-go-name: HttpTarget
          x-dcl-go-type: JobHttpTarget
          description: HTTP target.
          x-dcl-conflicts:
          - pubsubTarget
          - appEngineHttpTarget
          required:
          - uri
          properties:
            body:
              type: string
              x-dcl-go-name: Body
              description: HTTP request body. A request body is allowed only if the
                HTTP method is POST, PUT, or PATCH. It is an error to set body on
                a job with an incompatible HttpMethod.
            headers:
              type: object
              additionalProperties:
                type: string
              x-dcl-go-name: Headers
              description: 'The user can specify HTTP request headers to send with
                the job''s HTTP request. This map contains the header field names
                and values. Repeated headers are not supported, but a header value
                can contain commas. These headers represent a subset of the headers
                that will accompany the job''s HTTP request. Some HTTP request headers
                will be ignored or replaced. A partial list of headers that will be
                ignored or replaced is below: - Host: This will be computed by Cloud
                Scheduler and derived from uri. * `Content-Length`: This will be computed
                by Cloud Scheduler. * `User-Agent`: This will be set to `"Google-Cloud-Scheduler"`.
                * `X-Google-*`: Google internal use only. * `X-appengine-*`: Google
                internal use only. The total size of headers must be less than 80KB.'
            httpMethod:
              type: string
              x-dcl-go-name: HttpMethod
              x-dcl-go-type: JobHttpTargetHttpMethodEnum
              description: 'Which HTTP method to use for the request. Possible values:
                HTTP_METHOD_UNSPECIFIED, POST, GET, HEAD, PUT, DELETE, PATCH, OPTIONS'
              enum:
              - HTTP_METHOD_UNSPECIFIED
              - POST
              - GET
              - HEAD
              - PUT
              - DELETE
              - PATCH
              - OPTIONS
            oauthToken:
              type: object
              x-dcl-go-name: OAuthToken
              x-dcl-go-type: JobHttpTargetOAuthToken
              description: If specified, an [OAuth token](https://developers.google.com/identity/protocols/OAuth2)
                will be generated and attached as an `Authorization` header in the
                HTTP request. This type of authorization should generally only be
                used when calling Google APIs hosted on *.googleapis.com.
              properties:
                scope:
                  type: string
                  x-dcl-go-name: Scope
                  description: OAuth scope to be used for generating OAuth access
                    token. If not specified, "https://www.googleapis.com/auth/cloud-platform"
                    will be used.
                serviceAccountEmail:
                  type: string
                  x-dcl-go-name: ServiceAccountEmail
                  description: '[Service account email](https://cloud.google.com/iam/docs/service-accounts)
                    to be used for generating OAuth token. The service account must
                    be within the same project as the job. The caller must have iam.serviceAccounts.actAs
                    permission for the service account.'
                  x-dcl-references:
                  - resource: Iam/ServiceAccount
                    field: email
            oidcToken:
              type: object
              x-dcl-go-name: OidcToken
              x-dcl-go-type: JobHttpTargetOidcToken
              description: If specified, an [OIDC](https://developers.google.com/identity/protocols/OpenIDConnect)
                token will be generated and attached as an `Authorization` header
                in the HTTP request. This type of authorization can be used for many
                scenarios, including calling Cloud Run, or endpoints where you intend
                to validate the token yourself.
              properties:
                audience:
                  type: string
                  x-dcl-go-name: Audience
                  description: Audience to be used when generating OIDC token. If
                    not specified, the URI specified in target will be used.
                serviceAccountEmail:
                  type: string
                  x-dcl-go-name: ServiceAccountEmail
                  description: '[Service account email](https://cloud.google.com/iam/docs/service-accounts)
                    to be used for generating OIDC token. The service account must
                    be within the same project as the job. The caller must have iam.serviceAccounts.actAs
                    permission for the service account.'
                  x-dcl-references:
                  - resource: Iam/ServiceAccount
                    field: email
            uri:
              type: string
              x-dcl-go-name: Uri
              description: 'Required. The full URI path that the request will be sent
                to. This string must begin with either "http://" or "https://". Some
                examples of valid values for uri are: `http://acme.com` and `https://acme.com/sales:8080`.
                Cloud Scheduler will encode some characters for safety and compatibility.
                The maximum allowed URL length is 2083 characters after encoding.'
        lastAttemptTime:
          type: string
          format: date-time
          x-dcl-go-name: LastAttemptTime
          readOnly: true
          description: Output only. The time the last job attempt started.
          x-kubernetes-immutable: true
        location:
          type: string
          x-dcl-go-name: Location
          description: The location for the resource
          x-kubernetes-immutable: true
        name:
          type: string
          x-dcl-go-name: Name
          description: 'Optionally caller-specified in CreateJob, after which it becomes
            output only. The job name. For example: `projects/PROJECT_ID/locations/LOCATION_ID/jobs/JOB_ID`.
            * `PROJECT_ID` can contain letters ([A-Za-z]), numbers ([0-9]), hyphens
            (-), colons (:), or periods (.). For more information, see [Identifying
            projects](https://cloud.google.com/resource-manager/docs/creating-managing-projects#identifying_projects)
            * `LOCATION_ID` is the canonical ID for the job''s location. The list
            of available locations can be obtained by calling ListLocations. For more
            information, see https://cloud.google.com/about/locations/. * `JOB_ID`
            can contain only letters ([A-Za-z]), numbers ([0-9]), hyphens (-), or
            underscores (_). The maximum length is 500 characters.'
        project:
          type: string
          x-dcl-go-name: Project
          description: The project for the resource
          x-kubernetes-immutable: true
          x-dcl-references:
          - resource: Cloudresourcemanager/Project
            field: name
            parent: true
        pubsubTarget:
          type: object
          x-dcl-go-name: PubsubTarget
          x-dcl-go-type: JobPubsubTarget
          description: Pub/Sub target.
          x-dcl-conflicts:
          - appEngineHttpTarget
          - httpTarget
          required:
          - topicName
          properties:
            attributes:
              type: object
              additionalProperties:
                type: string
              x-dcl-go-name: Attributes
              description: Attributes for PubsubMessage. Pubsub message must contain
                either non-empty data, or at least one attribute.
            data:
              type: string
              x-dcl-go-name: Data
              description: The message payload for PubsubMessage. Pubsub message must
                contain either non-empty data, or at least one attribute.
            topicName:
              type: string
              x-dcl-go-name: TopicName
              description: Required. The name of the Cloud Pub/Sub topic to which
                messages will be published when a job is delivered. The topic name
                must be in the same format as required by Pub/Sub's [PublishRequest.name](https://cloud.google.com/pubsub/docs/reference/rpc/google.pubsub.v1#publishrequest),
                for example `projects/PROJECT_ID/topics/TOPIC_ID`. The topic must
                be in the same project as the Cloud Scheduler job.
              x-dcl-references:
              - resource: Pubsub/Topic
                field: name
        retryConfig:
          type: object
          x-dcl-go-name: RetryConfig
          x-dcl-go-type: JobRetryConfig
          description: Settings that determine the retry behavior.
          properties:
            maxBackoffDuration:
              type: string
              x-dcl-go-name: MaxBackoffDuration
              description: The maximum amount of time to wait before retrying a job
                after it fails. The default value of this field is 1 hour.
            maxDoublings:
              type: integer
              format: int64
              x-dcl-go-name: MaxDoublings
              description: The time between retries will double `max_doublings` times.
                A job's retry interval starts at min_backoff_duration, then doubles
                `max_doublings` times, then increases linearly, and finally retries
                at intervals of max_backoff_duration up to retry_count times. For
                example, if min_backoff_duration is 10s, max_backoff_duration is 300s,
                and `max_doublings` is 3, then the a job will first be retried in
                10s. The retry interval will double three times, and then increase
                linearly by 2^3 * 10s. Finally, the job will retry at intervals of
                max_backoff_duration until the job has been attempted retry_count
                times. Thus, the requests will retry at 10s, 20s, 40s, 80s, 160s,
                240s, 300s, 300s, .... The default value of this field is 5.
            maxRetryDuration:
              type: string
              x-dcl-go-name: MaxRetryDuration
              description: The time limit for retrying a failed job, measured from
                time when an execution was first attempted. If specified with retry_count,
                the job will be retried until both limits are reached. The default
                value for max_retry_duration is zero, which means retry duration is
                unlimited.
            minBackoffDuration:
              type: string
              x-dcl-go-name: MinBackoffDuration
              description: The minimum amount of time to wait before retrying a job
                after it fails. The default value of this field is 5 seconds.
            retryCount:
              type: integer
              format: int64
              x-dcl-go-name: RetryCount
              description: The number of attempts that the system will make to run
                a job using the exponential backoff procedure described by max_doublings.
                The default value of retry_count is zero. If retry_count is zero,
                a job attempt will *not* be retried if it fails. Instead the Cloud
                Scheduler system will wait for the next scheduled execution time.
                If retry_count is set to a non-zero number then Cloud Scheduler will
                retry failed attempts, using exponential backoff, retry_count times,
                or until the next scheduled execution time, whichever comes first.
                Values greater than 5 and negative values are not allowed.
        schedule:
          type: string
          x-dcl-go-name: Schedule
          description: 'Required, except when used with UpdateJob. Describes the schedule
            on which the job will be executed. The schedule can be either of the following
            types: * [Crontab](http://en.wikipedia.org/wiki/Cron#Overview) * English-like
            [schedule](https://cloud.google.com/scheduler/docs/configuring/cron-job-schedules)
            As a general rule, execution `n + 1` of a job will not begin until execution
            `n` has finished. Cloud Scheduler will never allow two simultaneously
            outstanding executions. For example, this implies that if the `n+1`th
            execution is scheduled to run at 16:00 but the `n`th execution takes until
            16:15, the `n+1`th execution will not start until `16:15`. A scheduled
            start time will be delayed if the previous execution has not ended when
            its scheduled time occurs. If retry_count > 0 and a job attempt fails,
            the job will be tried a total of retry_count times, with exponential backoff,
            until the next scheduled start time.'
        scheduleTime:
          type: string
          format: date-time
          x-dcl-go-name: ScheduleTime
          readOnly: true
          description: Output only. The next time the job is scheduled. Note that
            this may be a retry of a previously failed attempt or the next execution
            time according to the schedule.
          x-kubernetes-immutable: true
        state:
          type: string
          x-dcl-go-name: State
          x-dcl-go-type: JobStateEnum
          readOnly: true
          description: 'Output only. State of the job. Possible values: STATE_UNSPECIFIED,
            ENABLED, PAUSED, DISABLED, UPDATE_FAILED'
          x-kubernetes-immutable: true
          enum:
          - STATE_UNSPECIFIED
          - ENABLED
          - PAUSED
          - DISABLED
          - UPDATE_FAILED
        status:
          type: object
          x-dcl-go-name: Status
          x-dcl-go-type: JobStatus
          readOnly: true
          description: Output only. The response from the target for the last attempted
            execution.
          x-kubernetes-immutable: true
          properties:
            code:
              type: integer
              format: int64
              x-dcl-go-name: Code
              description: The status code, which should be an enum value of google.rpc.Code.
              x-kubernetes-immutable: true
            details:
              type: array
              x-dcl-go-name: Details
              description: A list of messages that carry the error details. There
                is a common set of message types for APIs to use.
              x-kubernetes-immutable: true
              x-dcl-send-empty: true
              x-dcl-list-type: list
              items:
                type: object
                x-dcl-go-type: JobStatusDetails
                properties:
                  typeUrl:
                    type: string
                    x-dcl-go-name: TypeUrl
                    description: 'A URL/resource name that uniquely identifies the
                      type of the serialized protocol buffer message. This string
                      must contain at least one "/" character. The last segment of
                      the URL''s path must represent the fully qualified name of the
                      type (as in `path/google.protobuf.Duration`). The name should
                      be in a canonical form (e.g., leading "." is not accepted).
                      In practice, teams usually precompile into the binary all types
                      that they expect it to use in the context of Any. However, for
                      URLs which use the scheme `http`, `https`, or no scheme, one
                      can optionally set up a type server that maps type URLs to message
                      definitions as follows: * If no scheme is provided, `https`
                      is assumed. * An HTTP GET on the URL must yield a google.protobuf.Type
                      value in binary format, or produce an error. * Applications
                      are allowed to cache lookup results based on the URL, or have
                      them precompiled into a binary to avoid any lookup. Therefore,
                      binary compatibility needs to be preserved on changes to types.
                      (Use versioned type names to manage breaking changes.) Note:
                      this functionality is not currently available in the official
                      protobuf release, and it is not used for type URLs beginning
                      with type.googleapis.com. Schemes other than `http`, `https`
                      (or the empty scheme) might be used with implementation specific
                      semantics.'
                    x-kubernetes-immutable: true
                  value:
                    type: string
                    x-dcl-go-name: Value
                    description: Must be a valid serialized protocol buffer of the
                      above specified type.
                    x-kubernetes-immutable: true
            message:
              type: string
              x-dcl-go-name: Message
              description: A developer-facing error message, which should be in English.
                Any user-facing error message should be localized and sent in the
                google.rpc.Status.details field, or localized by the client.
              x-kubernetes-immutable: true
        timeZone:
          type: string
          x-dcl-go-name: TimeZone
          description: Specifies the time zone to be used in interpreting schedule.
            The value of this field must be a time zone name from the [tz database](http://en.wikipedia.org/wiki/Tz_database).
            Note that some time zones include a provision for daylight savings time.
            The rules for daylight saving time are determined by the chosen tz. For
            UTC use the string "utc". If a time zone is not specified, the default
            will be in UTC (also known as GMT).
          x-dcl-server-default: true
        userUpdateTime:
          type: string
          format: date-time
          x-dcl-go-name: UserUpdateTime
          readOnly: true
          description: Output only. The creation time of the job.
          x-kubernetes-immutable: true
