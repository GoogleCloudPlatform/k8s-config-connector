//go:build !ignore_autogenerated

// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/GoogleCloudPlatform/k8s-config-connector/apis/common/parent"
	refsv1beta1 "github.com/GoogleCloudPlatform/k8s-config-connector/apis/refs/v1beta1"
	servicedirectoryv1alpha1 "github.com/GoogleCloudPlatform/k8s-config-connector/apis/servicedirectory/v1alpha1"
	k8sv1alpha1 "github.com/GoogleCloudPlatform/k8s-config-connector/pkg/apis/k8s/v1alpha1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeCacheService_AddHeader) DeepCopyInto(out *EdgeCacheService_AddHeader) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
} // DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeCacheService_AddHeader.
func (in *EdgeCacheService_AddHeader) DeepCopy() *EdgeCacheService_AddHeader {
	if in == nil {
		return nil
	}
	out := new(EdgeCacheService_AddHeader)
	in.DeepCopyInto(out)
	return out
} // DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeCacheService_AddSignatures) DeepCopyInto(out *EdgeCacheService_AddSignatures) {
	*out = *in
	if in.Actions != nil {
		in, out := &in.Actions, &out.Actions
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Keyset != nil {
		in, out := &in.Keyset, &out.Keyset
		*out = new(string)
		**out = **in
	}
	if in.TokenTtl != nil {
		in, out := &in.TokenTtl, &out.TokenTtl
		*out = new(string)
		**out = **in
	}
	if in.TokenQueryParameter != nil {
		in, out := &in.TokenQueryParameter, &out.TokenQueryParameter
		*out = new(string)
		**out = **in
	}
	if in.CopiedParameters != nil {
		in, out := &in.CopiedParameters, &out.CopiedParameters
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
} // DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeCacheService_AddSignatures.
func (in *EdgeCacheService_AddSignatures) DeepCopy() *EdgeCacheService_AddSignatures {
	if in == nil {
		return nil
	}
	out := new(EdgeCacheService_AddSignatures)
	in.DeepCopyInto(out)
	return out
} // DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeCacheService_CacheKeyPolicy) DeepCopyInto(out *EdgeCacheService_CacheKeyPolicy) {
	*out = *in
	if in.IncludeProtocol != nil {
		in, out := &in.IncludeProtocol, &out.IncludeProtocol
		*out = new(bool)
		**out = **in
	}
	if in.ExcludeHost != nil {
		in, out := &in.ExcludeHost, &out.ExcludeHost
		*out = new(bool)
		**out = **in
	}
	if in.ExcludeQueryString != nil {
		in, out := &in.ExcludeQueryString, &out.ExcludeQueryString
		*out = new(bool)
		**out = **in
	}
	if in.IncludedQueryParameters != nil {
		in, out := &in.IncludedQueryParameters, &out.IncludedQueryParameters
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ExcludedQueryParameters != nil {
		in, out := &in.ExcludedQueryParameters, &out.ExcludedQueryParameters
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.IncludedHeaderNames != nil {
		in, out := &in.IncludedHeaderNames, &out.IncludedHeaderNames
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.IncludedCookieNames != nil {
		in, out := &in.IncludedCookieNames, &out.IncludedCookieNames
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
} // DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeCacheService_CacheKeyPolicy.
func (in *EdgeCacheService_CacheKeyPolicy) DeepCopy() *EdgeCacheService_CacheKeyPolicy {
	if in == nil {
		return nil
	}
	out := new(EdgeCacheService_CacheKeyPolicy)
	in.DeepCopyInto(out)
	return out
} // DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeCacheService_CdnPolicy) DeepCopyInto(out *EdgeCacheService_CdnPolicy) {
	*out = *in
	if in.CacheMode != nil {
		in, out := &in.CacheMode, &out.CacheMode
		*out = new(string)
		**out = **in
	}
	if in.ClientTtl != nil {
		in, out := &in.ClientTtl, &out.ClientTtl
		*out = new(string)
		**out = **in
	}
	if in.DefaultTtl != nil {
		in, out := &in.DefaultTtl, &out.DefaultTtl
		*out = new(string)
		**out = **in
	}
	if in.MaxTtl != nil {
		in, out := &in.MaxTtl, &out.MaxTtl
		*out = new(string)
		**out = **in
	}
	if in.NegativeCaching != nil {
		in, out := &in.NegativeCaching, &out.NegativeCaching
		*out = new(bool)
		**out = **in
	}
	if in.NegativeCachingPolicy != nil {
		in, out := &in.NegativeCachingPolicy, &out.NegativeCachingPolicy
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.CacheKeyPolicy != nil {
		in, out := &in.CacheKeyPolicy, &out.CacheKeyPolicy
		*out = new(EdgeCacheService_CacheKeyPolicy)
		(*in).DeepCopyInto(*out)
	}
	if in.SignedRequestMode != nil {
		in, out := &in.SignedRequestMode, &out.SignedRequestMode
		*out = new(string)
		**out = **in
	}
	if in.SignedRequestKeyset != nil {
		in, out := &in.SignedRequestKeyset, &out.SignedRequestKeyset
		*out = new(string)
		**out = **in
	}
	if in.SignedTokenOptions != nil {
		in, out := &in.SignedTokenOptions, &out.SignedTokenOptions
		*out = new(EdgeCacheService_SignedTokenOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.AddSignatures != nil {
		in, out := &in.AddSignatures, &out.AddSignatures
		*out = new(EdgeCacheService_AddSignatures)
		(*in).DeepCopyInto(*out)
	}
	if in.SignedRequestMaximumExpirationTtl != nil {
		in, out := &in.SignedRequestMaximumExpirationTtl, &out.SignedRequestMaximumExpirationTtl
		*out = new(string)
		**out = **in
	}
} // DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeCacheService_CdnPolicy.
func (in *EdgeCacheService_CdnPolicy) DeepCopy() *EdgeCacheService_CdnPolicy {
	if in == nil {
		return nil
	}
	out := new(EdgeCacheService_CdnPolicy)
	in.DeepCopyInto(out)
	return out
} // DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeCacheService_CorsPolicy) DeepCopyInto(out *EdgeCacheService_CorsPolicy) {
	*out = *in
	if in.MaxAge != nil {
		in, out := &in.MaxAge, &out.MaxAge
		*out = new(string)
		**out = **in
	}
	if in.AllowOrigins != nil {
		in, out := &in.AllowOrigins, &out.AllowOrigins
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.AllowMethods != nil {
		in, out := &in.AllowMethods, &out.AllowMethods
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.AllowHeaders != nil {
		in, out := &in.AllowHeaders, &out.AllowHeaders
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ExposeHeaders != nil {
		in, out := &in.ExposeHeaders, &out.ExposeHeaders
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.AllowCredentials != nil {
		in, out := &in.AllowCredentials, &out.AllowCredentials
		*out = new(bool)
		**out = **in
	}
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = new(bool)
		**out = **in
	}
} // DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeCacheService_CorsPolicy.
func (in *EdgeCacheService_CorsPolicy) DeepCopy() *EdgeCacheService_CorsPolicy {
	if in == nil {
		return nil
	}
	out := new(EdgeCacheService_CorsPolicy)
	in.DeepCopyInto(out)
	return out
} // DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeCacheService_HeaderAction) DeepCopyInto(out *EdgeCacheService_HeaderAction) {
	*out = *in
	if in.RequestHeadersToAdd != nil {
		in, out := &in.RequestHeadersToAdd, &out.RequestHeadersToAdd
		*out = make([]EdgeCacheService_AddHeader, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestHeadersToRemove != nil {
		in, out := &in.RequestHeadersToRemove, &out.RequestHeadersToRemove
		*out = make([]EdgeCacheService_RemoveHeader, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResponseHeadersToAdd != nil {
		in, out := &in.ResponseHeadersToAdd, &out.ResponseHeadersToAdd
		*out = make([]EdgeCacheService_AddHeader, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResponseHeadersToRemove != nil {
		in, out := &in.ResponseHeadersToRemove, &out.ResponseHeadersToRemove
		*out = make([]EdgeCacheService_RemoveHeader, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
} // DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeCacheService_HeaderAction.
func (in *EdgeCacheService_HeaderAction) DeepCopy() *EdgeCacheService_HeaderAction {
	if in == nil {
		return nil
	}
	out := new(EdgeCacheService_HeaderAction)
	in.DeepCopyInto(out)
	return out
} // DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeCacheService_HeaderMatch) DeepCopyInto(out *EdgeCacheService_HeaderMatch) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.InvertMatch != nil {
		in, out := &in.InvertMatch, &out.InvertMatch
		*out = new(bool)
		**out = **in
	}
	if in.PresentMatch != nil {
		in, out := &in.PresentMatch, &out.PresentMatch
		*out = new(bool)
		**out = **in
	}
	if in.ExactMatch != nil {
		in, out := &in.ExactMatch, &out.ExactMatch
		*out = new(string)
		**out = **in
	}
	if in.PrefixMatch != nil {
		in, out := &in.PrefixMatch, &out.PrefixMatch
		*out = new(string)
		**out = **in
	}
	if in.SuffixMatch != nil {
		in, out := &in.SuffixMatch, &out.SuffixMatch
		*out = new(string)
		**out = **in
	}
} // DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeCacheService_HeaderMatch.
func (in *EdgeCacheService_HeaderMatch) DeepCopy() *EdgeCacheService_HeaderMatch {
	if in == nil {
		return nil
	}
	out := new(EdgeCacheService_HeaderMatch)
	in.DeepCopyInto(out)
	return out
} // DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeCacheService_HostRule) DeepCopyInto(out *EdgeCacheService_HostRule) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Hosts != nil {
		in, out := &in.Hosts, &out.Hosts
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.PathMatcher != nil {
		in, out := &in.PathMatcher, &out.PathMatcher
		*out = new(string)
		**out = **in
	}
} // DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeCacheService_HostRule.
func (in *EdgeCacheService_HostRule) DeepCopy() *EdgeCacheService_HostRule {
	if in == nil {
		return nil
	}
	out := new(EdgeCacheService_HostRule)
	in.DeepCopyInto(out)
	return out
} // DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeCacheService_LogConfig) DeepCopyInto(out *EdgeCacheService_LogConfig) {
	*out = *in
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.SampleRate != nil {
		in, out := &in.SampleRate, &out.SampleRate
		*out = new(float64)
		**out = **in
	}
} // DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeCacheService_LogConfig.
func (in *EdgeCacheService_LogConfig) DeepCopy() *EdgeCacheService_LogConfig {
	if in == nil {
		return nil
	}
	out := new(EdgeCacheService_LogConfig)
	in.DeepCopyInto(out)
	return out
} // DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeCacheService_MatchRule) DeepCopyInto(out *EdgeCacheService_MatchRule) {
	*out = *in
	if in.PathTemplateMatch != nil {
		in, out := &in.PathTemplateMatch, &out.PathTemplateMatch
		*out = new(string)
		**out = **in
	}
	if in.PrefixMatch != nil {
		in, out := &in.PrefixMatch, &out.PrefixMatch
		*out = new(string)
		**out = **in
	}
	if in.FullPathMatch != nil {
		in, out := &in.FullPathMatch, &out.FullPathMatch
		*out = new(string)
		**out = **in
	}
	if in.IgnoreCase != nil {
		in, out := &in.IgnoreCase, &out.IgnoreCase
		*out = new(bool)
		**out = **in
	}
	if in.HeaderMatches != nil {
		in, out := &in.HeaderMatches, &out.HeaderMatches
		*out = make([]EdgeCacheService_HeaderMatch, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.QueryParameterMatches != nil {
		in, out := &in.QueryParameterMatches, &out.QueryParameterMatches
		*out = make([]EdgeCacheService_QueryParameterMatch, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
} // DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeCacheService_MatchRule.
func (in *EdgeCacheService_MatchRule) DeepCopy() *EdgeCacheService_MatchRule {
	if in == nil {
		return nil
	}
	out := new(EdgeCacheService_MatchRule)
	in.DeepCopyInto(out)
	return out
} // DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeCacheService_PathMatcher) DeepCopyInto(out *EdgeCacheService_PathMatcher) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.RouteRules != nil {
		in, out := &in.RouteRules, &out.RouteRules
		*out = make([]EdgeCacheService_RouteRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
} // DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeCacheService_PathMatcher.
func (in *EdgeCacheService_PathMatcher) DeepCopy() *EdgeCacheService_PathMatcher {
	if in == nil {
		return nil
	}
	out := new(EdgeCacheService_PathMatcher)
	in.DeepCopyInto(out)
	return out
} // DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeCacheService_QueryParameterMatch) DeepCopyInto(out *EdgeCacheService_QueryParameterMatch) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PresentMatch != nil {
		in, out := &in.PresentMatch, &out.PresentMatch
		*out = new(bool)
		**out = **in
	}
	if in.ExactMatch != nil {
		in, out := &in.ExactMatch, &out.ExactMatch
		*out = new(string)
		**out = **in
	}
} // DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeCacheService_QueryParameterMatch.
func (in *EdgeCacheService_QueryParameterMatch) DeepCopy() *EdgeCacheService_QueryParameterMatch {
	if in == nil {
		return nil
	}
	out := new(EdgeCacheService_QueryParameterMatch)
	in.DeepCopyInto(out)
	return out
} // DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeCacheService_RemoveHeader) DeepCopyInto(out *EdgeCacheService_RemoveHeader) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
} // DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeCacheService_RemoveHeader.
func (in *EdgeCacheService_RemoveHeader) DeepCopy() *EdgeCacheService_RemoveHeader {
	if in == nil {
		return nil
	}
	out := new(EdgeCacheService_RemoveHeader)
	in.DeepCopyInto(out)
	return out
} // DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeCacheService_RouteAction) DeepCopyInto(out *EdgeCacheService_RouteAction) {
	*out = *in
	if in.CdnPolicy != nil {
		in, out := &in.CdnPolicy, &out.CdnPolicy
		*out = new(EdgeCacheService_CdnPolicy)
		(*in).DeepCopyInto(*out)
	}
	if in.UrlRewrite != nil {
		in, out := &in.UrlRewrite, &out.UrlRewrite
		*out = new(EdgeCacheService_UrlRewrite)
		(*in).DeepCopyInto(*out)
	}
	if in.CorsPolicy != nil {
		in, out := &in.CorsPolicy, &out.CorsPolicy
		*out = new(EdgeCacheService_CorsPolicy)
		(*in).DeepCopyInto(*out)
	}
	if in.CompressionMode != nil {
		in, out := &in.CompressionMode, &out.CompressionMode
		*out = new(string)
		**out = **in
	}
} // DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeCacheService_RouteAction.
func (in *EdgeCacheService_RouteAction) DeepCopy() *EdgeCacheService_RouteAction {
	if in == nil {
		return nil
	}
	out := new(EdgeCacheService_RouteAction)
	in.DeepCopyInto(out)
	return out
} // DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeCacheService_RouteMethods) DeepCopyInto(out *EdgeCacheService_RouteMethods) {
	*out = *in
	if in.AllowedMethods != nil {
		in, out := &in.AllowedMethods, &out.AllowedMethods
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
} // DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeCacheService_RouteMethods.
func (in *EdgeCacheService_RouteMethods) DeepCopy() *EdgeCacheService_RouteMethods {
	if in == nil {
		return nil
	}
	out := new(EdgeCacheService_RouteMethods)
	in.DeepCopyInto(out)
	return out
} // DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeCacheService_RouteRule) DeepCopyInto(out *EdgeCacheService_RouteRule) {
	*out = *in
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(int64)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.MatchRules != nil {
		in, out := &in.MatchRules, &out.MatchRules
		*out = make([]EdgeCacheService_MatchRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HeaderAction != nil {
		in, out := &in.HeaderAction, &out.HeaderAction
		*out = new(EdgeCacheService_HeaderAction)
		(*in).DeepCopyInto(*out)
	}
	if in.RouteAction != nil {
		in, out := &in.RouteAction, &out.RouteAction
		*out = new(EdgeCacheService_RouteAction)
		(*in).DeepCopyInto(*out)
	}
	if in.UrlRedirect != nil {
		in, out := &in.UrlRedirect, &out.UrlRedirect
		*out = new(EdgeCacheService_UrlRedirect)
		(*in).DeepCopyInto(*out)
	}
	if in.Origin != nil {
		in, out := &in.Origin, &out.Origin
		*out = new(string)
		**out = **in
	}
	if in.RouteMethods != nil {
		in, out := &in.RouteMethods, &out.RouteMethods
		*out = new(EdgeCacheService_RouteMethods)
		(*in).DeepCopyInto(*out)
	}
} // DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeCacheService_RouteRule.
func (in *EdgeCacheService_RouteRule) DeepCopy() *EdgeCacheService_RouteRule {
	if in == nil {
		return nil
	}
	out := new(EdgeCacheService_RouteRule)
	in.DeepCopyInto(out)
	return out
} // DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeCacheService_Routing) DeepCopyInto(out *EdgeCacheService_Routing) {
	*out = *in
	if in.HostRules != nil {
		in, out := &in.HostRules, &out.HostRules
		*out = make([]EdgeCacheService_HostRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PathMatchers != nil {
		in, out := &in.PathMatchers, &out.PathMatchers
		*out = make([]EdgeCacheService_PathMatcher, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
} // DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeCacheService_Routing.
func (in *EdgeCacheService_Routing) DeepCopy() *EdgeCacheService_Routing {
	if in == nil {
		return nil
	}
	out := new(EdgeCacheService_Routing)
	in.DeepCopyInto(out)
	return out
} // DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeCacheService_SignedTokenOptions) DeepCopyInto(out *EdgeCacheService_SignedTokenOptions) {
	*out = *in
	if in.TokenQueryParameter != nil {
		in, out := &in.TokenQueryParameter, &out.TokenQueryParameter
		*out = new(string)
		**out = **in
	}
	if in.AllowedSignatureAlgorithms != nil {
		in, out := &in.AllowedSignatureAlgorithms, &out.AllowedSignatureAlgorithms
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
} // DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeCacheService_SignedTokenOptions.
func (in *EdgeCacheService_SignedTokenOptions) DeepCopy() *EdgeCacheService_SignedTokenOptions {
	if in == nil {
		return nil
	}
	out := new(EdgeCacheService_SignedTokenOptions)
	in.DeepCopyInto(out)
	return out
} // DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeCacheService_UrlRedirect) DeepCopyInto(out *EdgeCacheService_UrlRedirect) {
	*out = *in
	if in.HostRedirect != nil {
		in, out := &in.HostRedirect, &out.HostRedirect
		*out = new(string)
		**out = **in
	}
	if in.PathRedirect != nil {
		in, out := &in.PathRedirect, &out.PathRedirect
		*out = new(string)
		**out = **in
	}
	if in.PrefixRedirect != nil {
		in, out := &in.PrefixRedirect, &out.PrefixRedirect
		*out = new(string)
		**out = **in
	}
	if in.RedirectResponseCode != nil {
		in, out := &in.RedirectResponseCode, &out.RedirectResponseCode
		*out = new(string)
		**out = **in
	}
	if in.HttpsRedirect != nil {
		in, out := &in.HttpsRedirect, &out.HttpsRedirect
		*out = new(bool)
		**out = **in
	}
	if in.StripQuery != nil {
		in, out := &in.StripQuery, &out.StripQuery
		*out = new(bool)
		**out = **in
	}
} // DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeCacheService_UrlRedirect.
func (in *EdgeCacheService_UrlRedirect) DeepCopy() *EdgeCacheService_UrlRedirect {
	if in == nil {
		return nil
	}
	out := new(EdgeCacheService_UrlRedirect)
	in.DeepCopyInto(out)
	return out
} // DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeCacheService_UrlRewrite) DeepCopyInto(out *EdgeCacheService_UrlRewrite) {
	*out = *in
	if in.PathPrefixRewrite != nil {
		in, out := &in.PathPrefixRewrite, &out.PathPrefixRewrite
		*out = new(string)
		**out = **in
	}
	if in.PathTemplateRewrite != nil {
		in, out := &in.PathTemplateRewrite, &out.PathTemplateRewrite
		*out = new(string)
		**out = **in
	}
	if in.HostRewrite != nil {
		in, out := &in.HostRewrite, &out.HostRewrite
		*out = new(string)
		**out = **in
	}
} // DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeCacheService_UrlRewrite.
func (in *EdgeCacheService_UrlRewrite) DeepCopy() *EdgeCacheService_UrlRewrite {
	if in == nil {
		return nil
	}
	out := new(EdgeCacheService_UrlRewrite)
	in.DeepCopyInto(out)
	return out
} // DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkServicesEdgeCacheService) DeepCopyInto(out *NetworkServicesEdgeCacheService) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
} // DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkServicesEdgeCacheService.
func (in *NetworkServicesEdgeCacheService) DeepCopy() *NetworkServicesEdgeCacheService {
	if in == nil {
		return nil
	}
	out := new(NetworkServicesEdgeCacheService)
	in.DeepCopyInto(out)
	return out
} // DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NetworkServicesEdgeCacheService) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
} // DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkServicesEdgeCacheServiceList) DeepCopyInto(out *NetworkServicesEdgeCacheServiceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]NetworkServicesEdgeCacheService, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
} // DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkServicesEdgeCacheServiceList.
func (in *NetworkServicesEdgeCacheServiceList) DeepCopy() *NetworkServicesEdgeCacheServiceList {
	if in == nil {
		return nil
	}
	out := new(NetworkServicesEdgeCacheServiceList)
	in.DeepCopyInto(out)
	return out
} // DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NetworkServicesEdgeCacheServiceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
} // DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkServicesEdgeCacheServiceObservedState) DeepCopyInto(out *NetworkServicesEdgeCacheServiceObservedState) {
	*out = *in
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
	if in.Ipv4Addresses != nil {
		in, out := &in.Ipv4Addresses, &out.Ipv4Addresses
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Ipv6Addresses != nil {
		in, out := &in.Ipv6Addresses, &out.Ipv6Addresses
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
} // DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkServicesEdgeCacheServiceObservedState.
func (in *NetworkServicesEdgeCacheServiceObservedState) DeepCopy() *NetworkServicesEdgeCacheServiceObservedState {
	if in == nil {
		return nil
	}
	out := new(NetworkServicesEdgeCacheServiceObservedState)
	in.DeepCopyInto(out)
	return out
} // DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkServicesEdgeCacheServiceSpec) DeepCopyInto(out *NetworkServicesEdgeCacheServiceSpec) {
	*out = *in
	if in.ProjectAndLocationRef != nil {
		in, out := &in.ProjectAndLocationRef, &out.ProjectAndLocationRef
		*out = new(parent.ProjectAndLocationRef)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Routing != nil {
		in, out := &in.Routing, &out.Routing
		*out = new(EdgeCacheService_Routing)
		(*in).DeepCopyInto(*out)
	}
	if in.EdgeSslCertificates != nil {
		in, out := &in.EdgeSslCertificates, &out.EdgeSslCertificates
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.DisableQuic != nil {
		in, out := &in.DisableQuic, &out.DisableQuic
		*out = new(bool)
		**out = **in
	}
	if in.LogConfig != nil {
		in, out := &in.LogConfig, &out.LogConfig
		*out = new(EdgeCacheService_LogConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.DisableHttp2 != nil {
		in, out := &in.DisableHttp2, &out.DisableHttp2
		*out = new(bool)
		**out = **in
	}
	if in.RequireTls != nil {
		in, out := &in.RequireTls, &out.RequireTls
		*out = new(bool)
		**out = **in
	}
	if in.EdgeSecurityPolicy != nil {
		in, out := &in.EdgeSecurityPolicy, &out.EdgeSecurityPolicy
		*out = new(string)
		**out = **in
	}
} // DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkServicesEdgeCacheServiceSpec.
func (in *NetworkServicesEdgeCacheServiceSpec) DeepCopy() *NetworkServicesEdgeCacheServiceSpec {
	if in == nil {
		return nil
	}
	out := new(NetworkServicesEdgeCacheServiceSpec)
	in.DeepCopyInto(out)
	return out
} // DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkServicesEdgeCacheServiceStatus) DeepCopyInto(out *NetworkServicesEdgeCacheServiceStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]k8sv1alpha1.Condition, len(*in))
		copy(*out, *in)
	}
	if in.ObservedGeneration != nil {
		in, out := &in.ObservedGeneration, &out.ObservedGeneration
		*out = new(int64)
		**out = **in
	}
	if in.ExternalRef != nil {
		in, out := &in.ExternalRef, &out.ExternalRef
		*out = new(string)
		**out = **in
	}
	if in.ObservedState != nil {
		in, out := &in.ObservedState, &out.ObservedState
		*out = new(NetworkServicesEdgeCacheServiceObservedState)
		(*in).DeepCopyInto(*out)
	}
} // DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkServicesEdgeCacheServiceStatus.
func (in *NetworkServicesEdgeCacheServiceStatus) DeepCopy() *NetworkServicesEdgeCacheServiceStatus {
	if in == nil {
		return nil
	}
	out := new(NetworkServicesEdgeCacheServiceStatus)
	in.DeepCopyInto(out)
	return out
} // DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkServicesServiceBinding) DeepCopyInto(out *NetworkServicesServiceBinding) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
} // DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkServicesServiceBinding.
func (in *NetworkServicesServiceBinding) DeepCopy() *NetworkServicesServiceBinding {
	if in == nil {
		return nil
	}
	out := new(NetworkServicesServiceBinding)
	in.DeepCopyInto(out)
	return out
} // DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NetworkServicesServiceBinding) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
} // DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkServicesServiceBindingList) DeepCopyInto(out *NetworkServicesServiceBindingList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]NetworkServicesServiceBinding, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
} // DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkServicesServiceBindingList.
func (in *NetworkServicesServiceBindingList) DeepCopy() *NetworkServicesServiceBindingList {
	if in == nil {
		return nil
	}
	out := new(NetworkServicesServiceBindingList)
	in.DeepCopyInto(out)
	return out
} // DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NetworkServicesServiceBindingList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
} // DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkServicesServiceBindingObservedState) DeepCopyInto(out *NetworkServicesServiceBindingObservedState) {
	*out = *in
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
} // DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkServicesServiceBindingObservedState.
func (in *NetworkServicesServiceBindingObservedState) DeepCopy() *NetworkServicesServiceBindingObservedState {
	if in == nil {
		return nil
	}
	out := new(NetworkServicesServiceBindingObservedState)
	in.DeepCopyInto(out)
	return out
} // DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkServicesServiceBindingSpec) DeepCopyInto(out *NetworkServicesServiceBindingSpec) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ServiceRef != nil {
		in, out := &in.ServiceRef, &out.ServiceRef
		*out = new(servicedirectoryv1alpha1.ServiceDirectoryServiceRef)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Parent != nil {
		in, out := &in.Parent, &out.Parent
		*out = new(Parent)
		**out = **in
		if (*in).ProjectRef != nil {
			in, out := &(*in).ProjectRef, &(*out).ProjectRef
			*out = new(refsv1beta1.ProjectRef)
			**out = **in
		}
	}
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
} // DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkServicesServiceBindingSpec.
func (in *NetworkServicesServiceBindingSpec) DeepCopy() *NetworkServicesServiceBindingSpec {
	if in == nil {
		return nil
	}
	out := new(NetworkServicesServiceBindingSpec)
	in.DeepCopyInto(out)
	return out
} // DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkServicesServiceBindingStatus) DeepCopyInto(out *NetworkServicesServiceBindingStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]k8sv1alpha1.Condition, len(*in))
		copy(*out, *in)
	}
	if in.ObservedGeneration != nil {
		in, out := &in.ObservedGeneration, &out.ObservedGeneration
		*out = new(int64)
		**out = **in
	}
	if in.ExternalRef != nil {
		in, out := &in.ExternalRef, &out.ExternalRef
		*out = new(string)
		**out = **in
	}
	if in.ObservedState != nil {
		in, out := &in.ObservedState, &out.ObservedState
		*out = new(NetworkServicesServiceBindingObservedState)
		(*in).DeepCopyInto(*out)
	}
} // DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkServicesServiceBindingStatus.
func (in *NetworkServicesServiceBindingStatus) DeepCopy() *NetworkServicesServiceBindingStatus {
	if in == nil {
		return nil
	}
	out := new(NetworkServicesServiceBindingStatus)
	in.DeepCopyInto(out)
	return out
} // DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceBindingIdentity) DeepCopyInto(out *ServiceBindingIdentity) {
	*out = *in
	if in.parent != nil {
		in, out := &in.parent, &out.parent
		*out = new(ServiceBindingParent)
		**out = **in
	}
} // DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceBindingIdentity.
func (in *ServiceBindingIdentity) DeepCopy() *ServiceBindingIdentity {
	if in == nil {
		return nil
	}
	out := new(ServiceBindingIdentity)
	in.DeepCopyInto(out)
	return out
} // DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceBindingParent) DeepCopyInto(out *ServiceBindingParent) {
	*out = *in
} // DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceBindingParent.
func (in *ServiceBindingParent) DeepCopy() *ServiceBindingParent {
	if in == nil {
		return nil
	}
	out := new(ServiceBindingParent)
	in.DeepCopyInto(out)
	return out
} // DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceBindingRef) DeepCopyInto(out *ServiceBindingRef) {
	*out = *in
} // DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceBindingRef.
func (in *ServiceBindingRef) DeepCopy() *ServiceBindingRef {
	if in == nil {
		return nil
	}
	out := new(ServiceBindingRef)
	in.DeepCopyInto(out)
	return out
}
