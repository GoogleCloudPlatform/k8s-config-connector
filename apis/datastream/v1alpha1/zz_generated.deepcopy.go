//go:build !ignore_autogenerated

// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	bigqueryv1beta1 "github.com/GoogleCloudPlatform/k8s-config-connector/apis/bigquery/v1beta1"
	"github.com/GoogleCloudPlatform/k8s-config-connector/apis/refs/v1beta1"
	"github.com/GoogleCloudPlatform/k8s-config-connector/apis/refs/v1beta1/secret"
	k8sv1alpha1 "github.com/GoogleCloudPlatform/k8s-config-connector/pkg/apis/k8s/v1alpha1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AvroFileFormat) DeepCopyInto(out *AvroFileFormat) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AvroFileFormat.
func (in *AvroFileFormat) DeepCopy() *AvroFileFormat {
	if in == nil {
		return nil
	}
	out := new(AvroFileFormat)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BigQueryDestinationConfig) DeepCopyInto(out *BigQueryDestinationConfig) {
	*out = *in
	if in.SingleTargetDataset != nil {
		in, out := &in.SingleTargetDataset, &out.SingleTargetDataset
		*out = new(BigQueryDestinationConfig_SingleTargetDataset)
		(*in).DeepCopyInto(*out)
	}
	if in.SourceHierarchyDatasets != nil {
		in, out := &in.SourceHierarchyDatasets, &out.SourceHierarchyDatasets
		*out = new(BigQueryDestinationConfig_SourceHierarchyDatasets)
		(*in).DeepCopyInto(*out)
	}
	if in.DataFreshness != nil {
		in, out := &in.DataFreshness, &out.DataFreshness
		*out = new(string)
		**out = **in
	}
	if in.Merge != nil {
		in, out := &in.Merge, &out.Merge
		*out = new(BigQueryDestinationConfig_Merge)
		**out = **in
	}
	if in.AppendOnly != nil {
		in, out := &in.AppendOnly, &out.AppendOnly
		*out = new(BigQueryDestinationConfig_AppendOnly)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BigQueryDestinationConfig.
func (in *BigQueryDestinationConfig) DeepCopy() *BigQueryDestinationConfig {
	if in == nil {
		return nil
	}
	out := new(BigQueryDestinationConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BigQueryDestinationConfig_AppendOnly) DeepCopyInto(out *BigQueryDestinationConfig_AppendOnly) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BigQueryDestinationConfig_AppendOnly.
func (in *BigQueryDestinationConfig_AppendOnly) DeepCopy() *BigQueryDestinationConfig_AppendOnly {
	if in == nil {
		return nil
	}
	out := new(BigQueryDestinationConfig_AppendOnly)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BigQueryDestinationConfig_Merge) DeepCopyInto(out *BigQueryDestinationConfig_Merge) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BigQueryDestinationConfig_Merge.
func (in *BigQueryDestinationConfig_Merge) DeepCopy() *BigQueryDestinationConfig_Merge {
	if in == nil {
		return nil
	}
	out := new(BigQueryDestinationConfig_Merge)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BigQueryDestinationConfig_SingleTargetDataset) DeepCopyInto(out *BigQueryDestinationConfig_SingleTargetDataset) {
	*out = *in
	if in.DatasetRef != nil {
		in, out := &in.DatasetRef, &out.DatasetRef
		*out = new(bigqueryv1beta1.DatasetRef)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BigQueryDestinationConfig_SingleTargetDataset.
func (in *BigQueryDestinationConfig_SingleTargetDataset) DeepCopy() *BigQueryDestinationConfig_SingleTargetDataset {
	if in == nil {
		return nil
	}
	out := new(BigQueryDestinationConfig_SingleTargetDataset)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BigQueryDestinationConfig_SourceHierarchyDatasets) DeepCopyInto(out *BigQueryDestinationConfig_SourceHierarchyDatasets) {
	*out = *in
	if in.DatasetTemplate != nil {
		in, out := &in.DatasetTemplate, &out.DatasetTemplate
		*out = new(BigQueryDestinationConfig_SourceHierarchyDatasets_DatasetTemplate)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BigQueryDestinationConfig_SourceHierarchyDatasets.
func (in *BigQueryDestinationConfig_SourceHierarchyDatasets) DeepCopy() *BigQueryDestinationConfig_SourceHierarchyDatasets {
	if in == nil {
		return nil
	}
	out := new(BigQueryDestinationConfig_SourceHierarchyDatasets)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BigQueryDestinationConfig_SourceHierarchyDatasets_DatasetTemplate) DeepCopyInto(out *BigQueryDestinationConfig_SourceHierarchyDatasets_DatasetTemplate) {
	*out = *in
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.DatasetIDPrefix != nil {
		in, out := &in.DatasetIDPrefix, &out.DatasetIDPrefix
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyRef != nil {
		in, out := &in.KMSKeyRef, &out.KMSKeyRef
		*out = new(v1beta1.KMSCryptoKeyRef)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BigQueryDestinationConfig_SourceHierarchyDatasets_DatasetTemplate.
func (in *BigQueryDestinationConfig_SourceHierarchyDatasets_DatasetTemplate) DeepCopy() *BigQueryDestinationConfig_SourceHierarchyDatasets_DatasetTemplate {
	if in == nil {
		return nil
	}
	out := new(BigQueryDestinationConfig_SourceHierarchyDatasets_DatasetTemplate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BigQueryProfile) DeepCopyInto(out *BigQueryProfile) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BigQueryProfile.
func (in *BigQueryProfile) DeepCopy() *BigQueryProfile {
	if in == nil {
		return nil
	}
	out := new(BigQueryProfile)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionProfileIdentity) DeepCopyInto(out *ConnectionProfileIdentity) {
	*out = *in
	if in.parent != nil {
		in, out := &in.parent, &out.parent
		*out = new(ConnectionProfileParent)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionProfileIdentity.
func (in *ConnectionProfileIdentity) DeepCopy() *ConnectionProfileIdentity {
	if in == nil {
		return nil
	}
	out := new(ConnectionProfileIdentity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionProfileParent) DeepCopyInto(out *ConnectionProfileParent) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionProfileParent.
func (in *ConnectionProfileParent) DeepCopy() *ConnectionProfileParent {
	if in == nil {
		return nil
	}
	out := new(ConnectionProfileParent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionProfileRef) DeepCopyInto(out *ConnectionProfileRef) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionProfileRef.
func (in *ConnectionProfileRef) DeepCopy() *ConnectionProfileRef {
	if in == nil {
		return nil
	}
	out := new(ConnectionProfileRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatastreamConnectionProfile) DeepCopyInto(out *DatastreamConnectionProfile) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatastreamConnectionProfile.
func (in *DatastreamConnectionProfile) DeepCopy() *DatastreamConnectionProfile {
	if in == nil {
		return nil
	}
	out := new(DatastreamConnectionProfile)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DatastreamConnectionProfile) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatastreamConnectionProfileList) DeepCopyInto(out *DatastreamConnectionProfileList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DatastreamConnectionProfile, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatastreamConnectionProfileList.
func (in *DatastreamConnectionProfileList) DeepCopy() *DatastreamConnectionProfileList {
	if in == nil {
		return nil
	}
	out := new(DatastreamConnectionProfileList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DatastreamConnectionProfileList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatastreamConnectionProfileObservedState) DeepCopyInto(out *DatastreamConnectionProfileObservedState) {
	*out = *in
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
	if in.OracleProfile != nil {
		in, out := &in.OracleProfile, &out.OracleProfile
		*out = new(OracleProfileObservedState)
		(*in).DeepCopyInto(*out)
	}
	if in.MySQLProfile != nil {
		in, out := &in.MySQLProfile, &out.MySQLProfile
		*out = new(MysqlProfileObservedState)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatastreamConnectionProfileObservedState.
func (in *DatastreamConnectionProfileObservedState) DeepCopy() *DatastreamConnectionProfileObservedState {
	if in == nil {
		return nil
	}
	out := new(DatastreamConnectionProfileObservedState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatastreamConnectionProfileSpec) DeepCopyInto(out *DatastreamConnectionProfileSpec) {
	*out = *in
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
	in.Parent.DeepCopyInto(&out.Parent)
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.OracleProfile != nil {
		in, out := &in.OracleProfile, &out.OracleProfile
		*out = new(OracleProfile)
		(*in).DeepCopyInto(*out)
	}
	if in.GCSProfile != nil {
		in, out := &in.GCSProfile, &out.GCSProfile
		*out = new(GCSProfile)
		(*in).DeepCopyInto(*out)
	}
	if in.MySQLProfile != nil {
		in, out := &in.MySQLProfile, &out.MySQLProfile
		*out = new(MysqlProfile)
		(*in).DeepCopyInto(*out)
	}
	if in.BigQueryProfile != nil {
		in, out := &in.BigQueryProfile, &out.BigQueryProfile
		*out = new(BigQueryProfile)
		**out = **in
	}
	if in.SQLServerProfile != nil {
		in, out := &in.SQLServerProfile, &out.SQLServerProfile
		*out = new(SQLServerProfile)
		(*in).DeepCopyInto(*out)
	}
	if in.StaticServiceIPConnectivity != nil {
		in, out := &in.StaticServiceIPConnectivity, &out.StaticServiceIPConnectivity
		*out = new(StaticServiceIPConnectivity)
		**out = **in
	}
	if in.ForwardSSHConnectivity != nil {
		in, out := &in.ForwardSSHConnectivity, &out.ForwardSSHConnectivity
		*out = new(ForwardSSHTunnelConnectivity)
		(*in).DeepCopyInto(*out)
	}
	if in.PrivateConnectivity != nil {
		in, out := &in.PrivateConnectivity, &out.PrivateConnectivity
		*out = new(PrivateConnectivity)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatastreamConnectionProfileSpec.
func (in *DatastreamConnectionProfileSpec) DeepCopy() *DatastreamConnectionProfileSpec {
	if in == nil {
		return nil
	}
	out := new(DatastreamConnectionProfileSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatastreamConnectionProfileStatus) DeepCopyInto(out *DatastreamConnectionProfileStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]k8sv1alpha1.Condition, len(*in))
		copy(*out, *in)
	}
	if in.ObservedGeneration != nil {
		in, out := &in.ObservedGeneration, &out.ObservedGeneration
		*out = new(int64)
		**out = **in
	}
	if in.ExternalRef != nil {
		in, out := &in.ExternalRef, &out.ExternalRef
		*out = new(string)
		**out = **in
	}
	if in.ObservedState != nil {
		in, out := &in.ObservedState, &out.ObservedState
		*out = new(DatastreamConnectionProfileObservedState)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatastreamConnectionProfileStatus.
func (in *DatastreamConnectionProfileStatus) DeepCopy() *DatastreamConnectionProfileStatus {
	if in == nil {
		return nil
	}
	out := new(DatastreamConnectionProfileStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatastreamPrivateConnection) DeepCopyInto(out *DatastreamPrivateConnection) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatastreamPrivateConnection.
func (in *DatastreamPrivateConnection) DeepCopy() *DatastreamPrivateConnection {
	if in == nil {
		return nil
	}
	out := new(DatastreamPrivateConnection)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DatastreamPrivateConnection) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatastreamPrivateConnectionList) DeepCopyInto(out *DatastreamPrivateConnectionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DatastreamPrivateConnection, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatastreamPrivateConnectionList.
func (in *DatastreamPrivateConnectionList) DeepCopy() *DatastreamPrivateConnectionList {
	if in == nil {
		return nil
	}
	out := new(DatastreamPrivateConnectionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DatastreamPrivateConnectionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatastreamPrivateConnectionObservedState) DeepCopyInto(out *DatastreamPrivateConnectionObservedState) {
	*out = *in
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.Error != nil {
		in, out := &in.Error, &out.Error
		*out = new(Error)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatastreamPrivateConnectionObservedState.
func (in *DatastreamPrivateConnectionObservedState) DeepCopy() *DatastreamPrivateConnectionObservedState {
	if in == nil {
		return nil
	}
	out := new(DatastreamPrivateConnectionObservedState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatastreamPrivateConnectionSpec) DeepCopyInto(out *DatastreamPrivateConnectionSpec) {
	*out = *in
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
	in.Parent.DeepCopyInto(&out.Parent)
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.VPCPeeringConfig != nil {
		in, out := &in.VPCPeeringConfig, &out.VPCPeeringConfig
		*out = new(VpcPeeringConfig)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatastreamPrivateConnectionSpec.
func (in *DatastreamPrivateConnectionSpec) DeepCopy() *DatastreamPrivateConnectionSpec {
	if in == nil {
		return nil
	}
	out := new(DatastreamPrivateConnectionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatastreamPrivateConnectionStatus) DeepCopyInto(out *DatastreamPrivateConnectionStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]k8sv1alpha1.Condition, len(*in))
		copy(*out, *in)
	}
	if in.ObservedGeneration != nil {
		in, out := &in.ObservedGeneration, &out.ObservedGeneration
		*out = new(int64)
		**out = **in
	}
	if in.ExternalRef != nil {
		in, out := &in.ExternalRef, &out.ExternalRef
		*out = new(string)
		**out = **in
	}
	if in.ObservedState != nil {
		in, out := &in.ObservedState, &out.ObservedState
		*out = new(DatastreamPrivateConnectionObservedState)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatastreamPrivateConnectionStatus.
func (in *DatastreamPrivateConnectionStatus) DeepCopy() *DatastreamPrivateConnectionStatus {
	if in == nil {
		return nil
	}
	out := new(DatastreamPrivateConnectionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatastreamRoute) DeepCopyInto(out *DatastreamRoute) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatastreamRoute.
func (in *DatastreamRoute) DeepCopy() *DatastreamRoute {
	if in == nil {
		return nil
	}
	out := new(DatastreamRoute)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DatastreamRoute) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatastreamRouteList) DeepCopyInto(out *DatastreamRouteList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DatastreamRoute, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatastreamRouteList.
func (in *DatastreamRouteList) DeepCopy() *DatastreamRouteList {
	if in == nil {
		return nil
	}
	out := new(DatastreamRouteList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DatastreamRouteList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatastreamRouteObservedState) DeepCopyInto(out *DatastreamRouteObservedState) {
	*out = *in
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatastreamRouteObservedState.
func (in *DatastreamRouteObservedState) DeepCopy() *DatastreamRouteObservedState {
	if in == nil {
		return nil
	}
	out := new(DatastreamRouteObservedState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatastreamRouteSpec) DeepCopyInto(out *DatastreamRouteSpec) {
	*out = *in
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
	if in.PrivateConnectionRef != nil {
		in, out := &in.PrivateConnectionRef, &out.PrivateConnectionRef
		*out = new(PrivateConnectionRef)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.DestinationAddress != nil {
		in, out := &in.DestinationAddress, &out.DestinationAddress
		*out = new(string)
		**out = **in
	}
	if in.DestinationPort != nil {
		in, out := &in.DestinationPort, &out.DestinationPort
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatastreamRouteSpec.
func (in *DatastreamRouteSpec) DeepCopy() *DatastreamRouteSpec {
	if in == nil {
		return nil
	}
	out := new(DatastreamRouteSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatastreamRouteStatus) DeepCopyInto(out *DatastreamRouteStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]k8sv1alpha1.Condition, len(*in))
		copy(*out, *in)
	}
	if in.ObservedGeneration != nil {
		in, out := &in.ObservedGeneration, &out.ObservedGeneration
		*out = new(int64)
		**out = **in
	}
	if in.ExternalRef != nil {
		in, out := &in.ExternalRef, &out.ExternalRef
		*out = new(string)
		**out = **in
	}
	if in.ObservedState != nil {
		in, out := &in.ObservedState, &out.ObservedState
		*out = new(DatastreamRouteObservedState)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatastreamRouteStatus.
func (in *DatastreamRouteStatus) DeepCopy() *DatastreamRouteStatus {
	if in == nil {
		return nil
	}
	out := new(DatastreamRouteStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatastreamStream) DeepCopyInto(out *DatastreamStream) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatastreamStream.
func (in *DatastreamStream) DeepCopy() *DatastreamStream {
	if in == nil {
		return nil
	}
	out := new(DatastreamStream)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DatastreamStream) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatastreamStreamList) DeepCopyInto(out *DatastreamStreamList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DatastreamStream, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatastreamStreamList.
func (in *DatastreamStreamList) DeepCopy() *DatastreamStreamList {
	if in == nil {
		return nil
	}
	out := new(DatastreamStreamList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DatastreamStreamList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatastreamStreamObservedState) DeepCopyInto(out *DatastreamStreamObservedState) {
	*out = *in
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
	if in.Errors != nil {
		in, out := &in.Errors, &out.Errors
		*out = make([]Error, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LastRecoveryTime != nil {
		in, out := &in.LastRecoveryTime, &out.LastRecoveryTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatastreamStreamObservedState.
func (in *DatastreamStreamObservedState) DeepCopy() *DatastreamStreamObservedState {
	if in == nil {
		return nil
	}
	out := new(DatastreamStreamObservedState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatastreamStreamSpec) DeepCopyInto(out *DatastreamStreamSpec) {
	*out = *in
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
	in.Parent.DeepCopyInto(&out.Parent)
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.SourceConfig != nil {
		in, out := &in.SourceConfig, &out.SourceConfig
		*out = new(SourceConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.DestinationConfig != nil {
		in, out := &in.DestinationConfig, &out.DestinationConfig
		*out = new(DestinationConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.BackfillAll != nil {
		in, out := &in.BackfillAll, &out.BackfillAll
		*out = new(Stream_BackfillAllStrategy)
		(*in).DeepCopyInto(*out)
	}
	if in.BackfillNone != nil {
		in, out := &in.BackfillNone, &out.BackfillNone
		*out = new(Stream_BackfillNoneStrategy)
		**out = **in
	}
	if in.CustomerManagedEncryptionKey != nil {
		in, out := &in.CustomerManagedEncryptionKey, &out.CustomerManagedEncryptionKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatastreamStreamSpec.
func (in *DatastreamStreamSpec) DeepCopy() *DatastreamStreamSpec {
	if in == nil {
		return nil
	}
	out := new(DatastreamStreamSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatastreamStreamStatus) DeepCopyInto(out *DatastreamStreamStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]k8sv1alpha1.Condition, len(*in))
		copy(*out, *in)
	}
	if in.ObservedGeneration != nil {
		in, out := &in.ObservedGeneration, &out.ObservedGeneration
		*out = new(int64)
		**out = **in
	}
	if in.ExternalRef != nil {
		in, out := &in.ExternalRef, &out.ExternalRef
		*out = new(string)
		**out = **in
	}
	if in.ObservedState != nil {
		in, out := &in.ObservedState, &out.ObservedState
		*out = new(DatastreamStreamObservedState)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatastreamStreamStatus.
func (in *DatastreamStreamStatus) DeepCopy() *DatastreamStreamStatus {
	if in == nil {
		return nil
	}
	out := new(DatastreamStreamStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DestinationConfig) DeepCopyInto(out *DestinationConfig) {
	*out = *in
	if in.DestinationConnectionProfileRef != nil {
		in, out := &in.DestinationConnectionProfileRef, &out.DestinationConnectionProfileRef
		*out = new(ConnectionProfileRef)
		**out = **in
	}
	if in.GCSDestinationConfig != nil {
		in, out := &in.GCSDestinationConfig, &out.GCSDestinationConfig
		*out = new(GCSDestinationConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.BigqueryDestinationConfig != nil {
		in, out := &in.BigqueryDestinationConfig, &out.BigqueryDestinationConfig
		*out = new(BigQueryDestinationConfig)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DestinationConfig.
func (in *DestinationConfig) DeepCopy() *DestinationConfig {
	if in == nil {
		return nil
	}
	out := new(DestinationConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Error) DeepCopyInto(out *Error) {
	*out = *in
	if in.Reason != nil {
		in, out := &in.Reason, &out.Reason
		*out = new(string)
		**out = **in
	}
	if in.ErrorUUID != nil {
		in, out := &in.ErrorUUID, &out.ErrorUUID
		*out = new(string)
		**out = **in
	}
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
	if in.ErrorTime != nil {
		in, out := &in.ErrorTime, &out.ErrorTime
		*out = new(string)
		**out = **in
	}
	if in.Details != nil {
		in, out := &in.Details, &out.Details
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Error.
func (in *Error) DeepCopy() *Error {
	if in == nil {
		return nil
	}
	out := new(Error)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForwardSSHTunnelConnectivity) DeepCopyInto(out *ForwardSSHTunnelConnectivity) {
	*out = *in
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int32)
		**out = **in
	}
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(secret.BasicAuthSecretRef)
		**out = **in
	}
	if in.PrivateKey != nil {
		in, out := &in.PrivateKey, &out.PrivateKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForwardSSHTunnelConnectivity.
func (in *ForwardSSHTunnelConnectivity) DeepCopy() *ForwardSSHTunnelConnectivity {
	if in == nil {
		return nil
	}
	out := new(ForwardSSHTunnelConnectivity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCSDestinationConfig) DeepCopyInto(out *GCSDestinationConfig) {
	*out = *in
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.FileRotationMb != nil {
		in, out := &in.FileRotationMb, &out.FileRotationMb
		*out = new(int32)
		**out = **in
	}
	if in.FileRotationInterval != nil {
		in, out := &in.FileRotationInterval, &out.FileRotationInterval
		*out = new(string)
		**out = **in
	}
	if in.AvroFileFormat != nil {
		in, out := &in.AvroFileFormat, &out.AvroFileFormat
		*out = new(AvroFileFormat)
		**out = **in
	}
	if in.JsonFileFormat != nil {
		in, out := &in.JsonFileFormat, &out.JsonFileFormat
		*out = new(JsonFileFormat)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCSDestinationConfig.
func (in *GCSDestinationConfig) DeepCopy() *GCSDestinationConfig {
	if in == nil {
		return nil
	}
	out := new(GCSDestinationConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCSProfile) DeepCopyInto(out *GCSProfile) {
	*out = *in
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.RootPath != nil {
		in, out := &in.RootPath, &out.RootPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCSProfile.
func (in *GCSProfile) DeepCopy() *GCSProfile {
	if in == nil {
		return nil
	}
	out := new(GCSProfile)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JsonFileFormat) DeepCopyInto(out *JsonFileFormat) {
	*out = *in
	if in.SchemaFileFormat != nil {
		in, out := &in.SchemaFileFormat, &out.SchemaFileFormat
		*out = new(string)
		**out = **in
	}
	if in.Compression != nil {
		in, out := &in.Compression, &out.Compression
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JsonFileFormat.
func (in *JsonFileFormat) DeepCopy() *JsonFileFormat {
	if in == nil {
		return nil
	}
	out := new(JsonFileFormat)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLColumn) DeepCopyInto(out *MySQLColumn) {
	*out = *in
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = new(string)
		**out = **in
	}
	if in.DataType != nil {
		in, out := &in.DataType, &out.DataType
		*out = new(string)
		**out = **in
	}
	if in.Length != nil {
		in, out := &in.Length, &out.Length
		*out = new(int32)
		**out = **in
	}
	if in.Collation != nil {
		in, out := &in.Collation, &out.Collation
		*out = new(string)
		**out = **in
	}
	if in.PrimaryKey != nil {
		in, out := &in.PrimaryKey, &out.PrimaryKey
		*out = new(bool)
		**out = **in
	}
	if in.Nullable != nil {
		in, out := &in.Nullable, &out.Nullable
		*out = new(bool)
		**out = **in
	}
	if in.OrdinalPosition != nil {
		in, out := &in.OrdinalPosition, &out.OrdinalPosition
		*out = new(int32)
		**out = **in
	}
	if in.Precision != nil {
		in, out := &in.Precision, &out.Precision
		*out = new(int32)
		**out = **in
	}
	if in.Scale != nil {
		in, out := &in.Scale, &out.Scale
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLColumn.
func (in *MySQLColumn) DeepCopy() *MySQLColumn {
	if in == nil {
		return nil
	}
	out := new(MySQLColumn)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLDatabase) DeepCopyInto(out *MySQLDatabase) {
	*out = *in
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.MySQLTables != nil {
		in, out := &in.MySQLTables, &out.MySQLTables
		*out = make([]MySQLTable, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLDatabase.
func (in *MySQLDatabase) DeepCopy() *MySQLDatabase {
	if in == nil {
		return nil
	}
	out := new(MySQLDatabase)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLTable) DeepCopyInto(out *MySQLTable) {
	*out = *in
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = new(string)
		**out = **in
	}
	if in.MySQLColumns != nil {
		in, out := &in.MySQLColumns, &out.MySQLColumns
		*out = make([]MySQLColumn, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLTable.
func (in *MySQLTable) DeepCopy() *MySQLTable {
	if in == nil {
		return nil
	}
	out := new(MySQLTable)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MysqlProfile) DeepCopyInto(out *MysqlProfile) {
	*out = *in
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int32)
		**out = **in
	}
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(secret.BasicAuthSecretRef)
		**out = **in
	}
	if in.SSLConfig != nil {
		in, out := &in.SSLConfig, &out.SSLConfig
		*out = new(MysqlSSLConfig)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MysqlProfile.
func (in *MysqlProfile) DeepCopy() *MysqlProfile {
	if in == nil {
		return nil
	}
	out := new(MysqlProfile)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MysqlProfileObservedState) DeepCopyInto(out *MysqlProfileObservedState) {
	*out = *in
	if in.SSLConfig != nil {
		in, out := &in.SSLConfig, &out.SSLConfig
		*out = new(MysqlSSLConfigObservedState)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MysqlProfileObservedState.
func (in *MysqlProfileObservedState) DeepCopy() *MysqlProfileObservedState {
	if in == nil {
		return nil
	}
	out := new(MysqlProfileObservedState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MysqlRdbms) DeepCopyInto(out *MysqlRdbms) {
	*out = *in
	if in.MySQLDatabases != nil {
		in, out := &in.MySQLDatabases, &out.MySQLDatabases
		*out = make([]MySQLDatabase, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MysqlRdbms.
func (in *MysqlRdbms) DeepCopy() *MysqlRdbms {
	if in == nil {
		return nil
	}
	out := new(MysqlRdbms)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MysqlSSLConfig) DeepCopyInto(out *MysqlSSLConfig) {
	*out = *in
	if in.ClientKey != nil {
		in, out := &in.ClientKey, &out.ClientKey
		*out = new(string)
		**out = **in
	}
	if in.ClientCertificate != nil {
		in, out := &in.ClientCertificate, &out.ClientCertificate
		*out = new(string)
		**out = **in
	}
	if in.CACertificate != nil {
		in, out := &in.CACertificate, &out.CACertificate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MysqlSSLConfig.
func (in *MysqlSSLConfig) DeepCopy() *MysqlSSLConfig {
	if in == nil {
		return nil
	}
	out := new(MysqlSSLConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MysqlSSLConfigObservedState) DeepCopyInto(out *MysqlSSLConfigObservedState) {
	*out = *in
	if in.ClientKeySet != nil {
		in, out := &in.ClientKeySet, &out.ClientKeySet
		*out = new(bool)
		**out = **in
	}
	if in.ClientCertificateSet != nil {
		in, out := &in.ClientCertificateSet, &out.ClientCertificateSet
		*out = new(bool)
		**out = **in
	}
	if in.CACertificateSet != nil {
		in, out := &in.CACertificateSet, &out.CACertificateSet
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MysqlSSLConfigObservedState.
func (in *MysqlSSLConfigObservedState) DeepCopy() *MysqlSSLConfigObservedState {
	if in == nil {
		return nil
	}
	out := new(MysqlSSLConfigObservedState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MysqlSourceConfig) DeepCopyInto(out *MysqlSourceConfig) {
	*out = *in
	if in.IncludeObjects != nil {
		in, out := &in.IncludeObjects, &out.IncludeObjects
		*out = new(MysqlRdbms)
		(*in).DeepCopyInto(*out)
	}
	if in.ExcludeObjects != nil {
		in, out := &in.ExcludeObjects, &out.ExcludeObjects
		*out = new(MysqlRdbms)
		(*in).DeepCopyInto(*out)
	}
	if in.MaxConcurrentCdcTasks != nil {
		in, out := &in.MaxConcurrentCdcTasks, &out.MaxConcurrentCdcTasks
		*out = new(int32)
		**out = **in
	}
	if in.MaxConcurrentBackfillTasks != nil {
		in, out := &in.MaxConcurrentBackfillTasks, &out.MaxConcurrentBackfillTasks
		*out = new(int32)
		**out = **in
	}
	if in.BinaryLogPosition != nil {
		in, out := &in.BinaryLogPosition, &out.BinaryLogPosition
		*out = new(MysqlSourceConfig_BinaryLogPosition)
		**out = **in
	}
	if in.Gtid != nil {
		in, out := &in.Gtid, &out.Gtid
		*out = new(MysqlSourceConfig_Gtid)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MysqlSourceConfig.
func (in *MysqlSourceConfig) DeepCopy() *MysqlSourceConfig {
	if in == nil {
		return nil
	}
	out := new(MysqlSourceConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MysqlSourceConfig_BinaryLogPosition) DeepCopyInto(out *MysqlSourceConfig_BinaryLogPosition) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MysqlSourceConfig_BinaryLogPosition.
func (in *MysqlSourceConfig_BinaryLogPosition) DeepCopy() *MysqlSourceConfig_BinaryLogPosition {
	if in == nil {
		return nil
	}
	out := new(MysqlSourceConfig_BinaryLogPosition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MysqlSourceConfig_Gtid) DeepCopyInto(out *MysqlSourceConfig_Gtid) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MysqlSourceConfig_Gtid.
func (in *MysqlSourceConfig_Gtid) DeepCopy() *MysqlSourceConfig_Gtid {
	if in == nil {
		return nil
	}
	out := new(MysqlSourceConfig_Gtid)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OracleAsmConfig) DeepCopyInto(out *OracleAsmConfig) {
	*out = *in
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int32)
		**out = **in
	}
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(secret.BasicAuthSecretRef)
		**out = **in
	}
	if in.ASMService != nil {
		in, out := &in.ASMService, &out.ASMService
		*out = new(string)
		**out = **in
	}
	if in.ConnectionAttributes != nil {
		in, out := &in.ConnectionAttributes, &out.ConnectionAttributes
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.OracleSSLConfig != nil {
		in, out := &in.OracleSSLConfig, &out.OracleSSLConfig
		*out = new(OracleSSLConfig)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OracleAsmConfig.
func (in *OracleAsmConfig) DeepCopy() *OracleAsmConfig {
	if in == nil {
		return nil
	}
	out := new(OracleAsmConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OracleColumn) DeepCopyInto(out *OracleColumn) {
	*out = *in
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = new(string)
		**out = **in
	}
	if in.DataType != nil {
		in, out := &in.DataType, &out.DataType
		*out = new(string)
		**out = **in
	}
	if in.Length != nil {
		in, out := &in.Length, &out.Length
		*out = new(int32)
		**out = **in
	}
	if in.Precision != nil {
		in, out := &in.Precision, &out.Precision
		*out = new(int32)
		**out = **in
	}
	if in.Scale != nil {
		in, out := &in.Scale, &out.Scale
		*out = new(int32)
		**out = **in
	}
	if in.Encoding != nil {
		in, out := &in.Encoding, &out.Encoding
		*out = new(string)
		**out = **in
	}
	if in.PrimaryKey != nil {
		in, out := &in.PrimaryKey, &out.PrimaryKey
		*out = new(bool)
		**out = **in
	}
	if in.Nullable != nil {
		in, out := &in.Nullable, &out.Nullable
		*out = new(bool)
		**out = **in
	}
	if in.OrdinalPosition != nil {
		in, out := &in.OrdinalPosition, &out.OrdinalPosition
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OracleColumn.
func (in *OracleColumn) DeepCopy() *OracleColumn {
	if in == nil {
		return nil
	}
	out := new(OracleColumn)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OracleProfile) DeepCopyInto(out *OracleProfile) {
	*out = *in
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int32)
		**out = **in
	}
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(secret.BasicAuthSecretRef)
		**out = **in
	}
	if in.DatabaseService != nil {
		in, out := &in.DatabaseService, &out.DatabaseService
		*out = new(string)
		**out = **in
	}
	if in.ConnectionAttributes != nil {
		in, out := &in.ConnectionAttributes, &out.ConnectionAttributes
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.OracleSSLConfig != nil {
		in, out := &in.OracleSSLConfig, &out.OracleSSLConfig
		*out = new(OracleSSLConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.OracleASMConfig != nil {
		in, out := &in.OracleASMConfig, &out.OracleASMConfig
		*out = new(OracleAsmConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.SecreteManagerSecretRef != nil {
		in, out := &in.SecreteManagerSecretRef, &out.SecreteManagerSecretRef
		*out = new(v1beta1.SecretManagerSecretRef)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OracleProfile.
func (in *OracleProfile) DeepCopy() *OracleProfile {
	if in == nil {
		return nil
	}
	out := new(OracleProfile)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OracleProfileObservedState) DeepCopyInto(out *OracleProfileObservedState) {
	*out = *in
	if in.OracleSSLConfig != nil {
		in, out := &in.OracleSSLConfig, &out.OracleSSLConfig
		*out = new(OracleSSLConfigObservedState)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OracleProfileObservedState.
func (in *OracleProfileObservedState) DeepCopy() *OracleProfileObservedState {
	if in == nil {
		return nil
	}
	out := new(OracleProfileObservedState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OracleRdbms) DeepCopyInto(out *OracleRdbms) {
	*out = *in
	if in.OracleSchemas != nil {
		in, out := &in.OracleSchemas, &out.OracleSchemas
		*out = make([]OracleSchema, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OracleRdbms.
func (in *OracleRdbms) DeepCopy() *OracleRdbms {
	if in == nil {
		return nil
	}
	out := new(OracleRdbms)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OracleSSLConfig) DeepCopyInto(out *OracleSSLConfig) {
	*out = *in
	if in.CACertificate != nil {
		in, out := &in.CACertificate, &out.CACertificate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OracleSSLConfig.
func (in *OracleSSLConfig) DeepCopy() *OracleSSLConfig {
	if in == nil {
		return nil
	}
	out := new(OracleSSLConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OracleSSLConfigObservedState) DeepCopyInto(out *OracleSSLConfigObservedState) {
	*out = *in
	if in.CACertificateSet != nil {
		in, out := &in.CACertificateSet, &out.CACertificateSet
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OracleSSLConfigObservedState.
func (in *OracleSSLConfigObservedState) DeepCopy() *OracleSSLConfigObservedState {
	if in == nil {
		return nil
	}
	out := new(OracleSSLConfigObservedState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OracleSchema) DeepCopyInto(out *OracleSchema) {
	*out = *in
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.OracleTables != nil {
		in, out := &in.OracleTables, &out.OracleTables
		*out = make([]OracleTable, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OracleSchema.
func (in *OracleSchema) DeepCopy() *OracleSchema {
	if in == nil {
		return nil
	}
	out := new(OracleSchema)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OracleSourceConfig) DeepCopyInto(out *OracleSourceConfig) {
	*out = *in
	if in.IncludeObjects != nil {
		in, out := &in.IncludeObjects, &out.IncludeObjects
		*out = new(OracleRdbms)
		(*in).DeepCopyInto(*out)
	}
	if in.ExcludeObjects != nil {
		in, out := &in.ExcludeObjects, &out.ExcludeObjects
		*out = new(OracleRdbms)
		(*in).DeepCopyInto(*out)
	}
	if in.MaxConcurrentCdcTasks != nil {
		in, out := &in.MaxConcurrentCdcTasks, &out.MaxConcurrentCdcTasks
		*out = new(int32)
		**out = **in
	}
	if in.MaxConcurrentBackfillTasks != nil {
		in, out := &in.MaxConcurrentBackfillTasks, &out.MaxConcurrentBackfillTasks
		*out = new(int32)
		**out = **in
	}
	if in.DropLargeObjects != nil {
		in, out := &in.DropLargeObjects, &out.DropLargeObjects
		*out = new(OracleSourceConfig_DropLargeObjects)
		**out = **in
	}
	if in.StreamLargeObjects != nil {
		in, out := &in.StreamLargeObjects, &out.StreamLargeObjects
		*out = new(OracleSourceConfig_StreamLargeObjects)
		**out = **in
	}
	if in.LogMiner != nil {
		in, out := &in.LogMiner, &out.LogMiner
		*out = new(OracleSourceConfig_LogMiner)
		**out = **in
	}
	if in.BinaryLogParser != nil {
		in, out := &in.BinaryLogParser, &out.BinaryLogParser
		*out = new(OracleSourceConfig_BinaryLogParser)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OracleSourceConfig.
func (in *OracleSourceConfig) DeepCopy() *OracleSourceConfig {
	if in == nil {
		return nil
	}
	out := new(OracleSourceConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OracleSourceConfig_BinaryLogParser) DeepCopyInto(out *OracleSourceConfig_BinaryLogParser) {
	*out = *in
	if in.OracleAsmLogFileAccess != nil {
		in, out := &in.OracleAsmLogFileAccess, &out.OracleAsmLogFileAccess
		*out = new(OracleSourceConfig_BinaryLogParser_OracleAsmLogFileAccess)
		**out = **in
	}
	if in.LogFileDirectories != nil {
		in, out := &in.LogFileDirectories, &out.LogFileDirectories
		*out = new(OracleSourceConfig_BinaryLogParser_LogFileDirectories)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OracleSourceConfig_BinaryLogParser.
func (in *OracleSourceConfig_BinaryLogParser) DeepCopy() *OracleSourceConfig_BinaryLogParser {
	if in == nil {
		return nil
	}
	out := new(OracleSourceConfig_BinaryLogParser)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OracleSourceConfig_BinaryLogParser_LogFileDirectories) DeepCopyInto(out *OracleSourceConfig_BinaryLogParser_LogFileDirectories) {
	*out = *in
	if in.OnlineLogDirectory != nil {
		in, out := &in.OnlineLogDirectory, &out.OnlineLogDirectory
		*out = new(string)
		**out = **in
	}
	if in.ArchivedLogDirectory != nil {
		in, out := &in.ArchivedLogDirectory, &out.ArchivedLogDirectory
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OracleSourceConfig_BinaryLogParser_LogFileDirectories.
func (in *OracleSourceConfig_BinaryLogParser_LogFileDirectories) DeepCopy() *OracleSourceConfig_BinaryLogParser_LogFileDirectories {
	if in == nil {
		return nil
	}
	out := new(OracleSourceConfig_BinaryLogParser_LogFileDirectories)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OracleSourceConfig_BinaryLogParser_OracleAsmLogFileAccess) DeepCopyInto(out *OracleSourceConfig_BinaryLogParser_OracleAsmLogFileAccess) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OracleSourceConfig_BinaryLogParser_OracleAsmLogFileAccess.
func (in *OracleSourceConfig_BinaryLogParser_OracleAsmLogFileAccess) DeepCopy() *OracleSourceConfig_BinaryLogParser_OracleAsmLogFileAccess {
	if in == nil {
		return nil
	}
	out := new(OracleSourceConfig_BinaryLogParser_OracleAsmLogFileAccess)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OracleSourceConfig_DropLargeObjects) DeepCopyInto(out *OracleSourceConfig_DropLargeObjects) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OracleSourceConfig_DropLargeObjects.
func (in *OracleSourceConfig_DropLargeObjects) DeepCopy() *OracleSourceConfig_DropLargeObjects {
	if in == nil {
		return nil
	}
	out := new(OracleSourceConfig_DropLargeObjects)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OracleSourceConfig_LogMiner) DeepCopyInto(out *OracleSourceConfig_LogMiner) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OracleSourceConfig_LogMiner.
func (in *OracleSourceConfig_LogMiner) DeepCopy() *OracleSourceConfig_LogMiner {
	if in == nil {
		return nil
	}
	out := new(OracleSourceConfig_LogMiner)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OracleSourceConfig_StreamLargeObjects) DeepCopyInto(out *OracleSourceConfig_StreamLargeObjects) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OracleSourceConfig_StreamLargeObjects.
func (in *OracleSourceConfig_StreamLargeObjects) DeepCopy() *OracleSourceConfig_StreamLargeObjects {
	if in == nil {
		return nil
	}
	out := new(OracleSourceConfig_StreamLargeObjects)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OracleTable) DeepCopyInto(out *OracleTable) {
	*out = *in
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = new(string)
		**out = **in
	}
	if in.OracleColumns != nil {
		in, out := &in.OracleColumns, &out.OracleColumns
		*out = make([]OracleColumn, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OracleTable.
func (in *OracleTable) DeepCopy() *OracleTable {
	if in == nil {
		return nil
	}
	out := new(OracleTable)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Parent) DeepCopyInto(out *Parent) {
	*out = *in
	if in.ProjectRef != nil {
		in, out := &in.ProjectRef, &out.ProjectRef
		*out = new(v1beta1.ProjectRef)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Parent.
func (in *Parent) DeepCopy() *Parent {
	if in == nil {
		return nil
	}
	out := new(Parent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgreSQLColumn) DeepCopyInto(out *PostgreSQLColumn) {
	*out = *in
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = new(string)
		**out = **in
	}
	if in.DataType != nil {
		in, out := &in.DataType, &out.DataType
		*out = new(string)
		**out = **in
	}
	if in.Length != nil {
		in, out := &in.Length, &out.Length
		*out = new(int32)
		**out = **in
	}
	if in.Precision != nil {
		in, out := &in.Precision, &out.Precision
		*out = new(int32)
		**out = **in
	}
	if in.Scale != nil {
		in, out := &in.Scale, &out.Scale
		*out = new(int32)
		**out = **in
	}
	if in.PrimaryKey != nil {
		in, out := &in.PrimaryKey, &out.PrimaryKey
		*out = new(bool)
		**out = **in
	}
	if in.Nullable != nil {
		in, out := &in.Nullable, &out.Nullable
		*out = new(bool)
		**out = **in
	}
	if in.OrdinalPosition != nil {
		in, out := &in.OrdinalPosition, &out.OrdinalPosition
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgreSQLColumn.
func (in *PostgreSQLColumn) DeepCopy() *PostgreSQLColumn {
	if in == nil {
		return nil
	}
	out := new(PostgreSQLColumn)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgreSQLSchema) DeepCopyInto(out *PostgreSQLSchema) {
	*out = *in
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.PostgreSQLTables != nil {
		in, out := &in.PostgreSQLTables, &out.PostgreSQLTables
		*out = make([]PostgreSQLTable, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgreSQLSchema.
func (in *PostgreSQLSchema) DeepCopy() *PostgreSQLSchema {
	if in == nil {
		return nil
	}
	out := new(PostgreSQLSchema)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgreSQLTable) DeepCopyInto(out *PostgreSQLTable) {
	*out = *in
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = new(string)
		**out = **in
	}
	if in.PostgreSQLColumns != nil {
		in, out := &in.PostgreSQLColumns, &out.PostgreSQLColumns
		*out = make([]PostgreSQLColumn, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgreSQLTable.
func (in *PostgreSQLTable) DeepCopy() *PostgreSQLTable {
	if in == nil {
		return nil
	}
	out := new(PostgreSQLTable)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresqlProfile) DeepCopyInto(out *PostgresqlProfile) {
	*out = *in
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int32)
		**out = **in
	}
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(secret.BasicAuthSecretRef)
		**out = **in
	}
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresqlProfile.
func (in *PostgresqlProfile) DeepCopy() *PostgresqlProfile {
	if in == nil {
		return nil
	}
	out := new(PostgresqlProfile)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresqlRdbms) DeepCopyInto(out *PostgresqlRdbms) {
	*out = *in
	if in.PostgreSQLSchemas != nil {
		in, out := &in.PostgreSQLSchemas, &out.PostgreSQLSchemas
		*out = make([]PostgreSQLSchema, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresqlRdbms.
func (in *PostgresqlRdbms) DeepCopy() *PostgresqlRdbms {
	if in == nil {
		return nil
	}
	out := new(PostgresqlRdbms)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresqlSourceConfig) DeepCopyInto(out *PostgresqlSourceConfig) {
	*out = *in
	if in.IncludeObjects != nil {
		in, out := &in.IncludeObjects, &out.IncludeObjects
		*out = new(PostgresqlRdbms)
		(*in).DeepCopyInto(*out)
	}
	if in.ExcludeObjects != nil {
		in, out := &in.ExcludeObjects, &out.ExcludeObjects
		*out = new(PostgresqlRdbms)
		(*in).DeepCopyInto(*out)
	}
	if in.ReplicationSlot != nil {
		in, out := &in.ReplicationSlot, &out.ReplicationSlot
		*out = new(string)
		**out = **in
	}
	if in.Publication != nil {
		in, out := &in.Publication, &out.Publication
		*out = new(string)
		**out = **in
	}
	if in.MaxConcurrentBackfillTasks != nil {
		in, out := &in.MaxConcurrentBackfillTasks, &out.MaxConcurrentBackfillTasks
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresqlSourceConfig.
func (in *PostgresqlSourceConfig) DeepCopy() *PostgresqlSourceConfig {
	if in == nil {
		return nil
	}
	out := new(PostgresqlSourceConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateConnectionIdentity) DeepCopyInto(out *PrivateConnectionIdentity) {
	*out = *in
	if in.parent != nil {
		in, out := &in.parent, &out.parent
		*out = new(PrivateConnectionParent)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateConnectionIdentity.
func (in *PrivateConnectionIdentity) DeepCopy() *PrivateConnectionIdentity {
	if in == nil {
		return nil
	}
	out := new(PrivateConnectionIdentity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateConnectionParent) DeepCopyInto(out *PrivateConnectionParent) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateConnectionParent.
func (in *PrivateConnectionParent) DeepCopy() *PrivateConnectionParent {
	if in == nil {
		return nil
	}
	out := new(PrivateConnectionParent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateConnectionRef) DeepCopyInto(out *PrivateConnectionRef) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateConnectionRef.
func (in *PrivateConnectionRef) DeepCopy() *PrivateConnectionRef {
	if in == nil {
		return nil
	}
	out := new(PrivateConnectionRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateConnectivity) DeepCopyInto(out *PrivateConnectivity) {
	*out = *in
	if in.PrivateConnectionRef != nil {
		in, out := &in.PrivateConnectionRef, &out.PrivateConnectionRef
		*out = new(PrivateConnectionRef)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateConnectivity.
func (in *PrivateConnectivity) DeepCopy() *PrivateConnectivity {
	if in == nil {
		return nil
	}
	out := new(PrivateConnectivity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteIdentity) DeepCopyInto(out *RouteIdentity) {
	*out = *in
	if in.parent != nil {
		in, out := &in.parent, &out.parent
		*out = new(RouteParent)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteIdentity.
func (in *RouteIdentity) DeepCopy() *RouteIdentity {
	if in == nil {
		return nil
	}
	out := new(RouteIdentity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteParent) DeepCopyInto(out *RouteParent) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteParent.
func (in *RouteParent) DeepCopy() *RouteParent {
	if in == nil {
		return nil
	}
	out := new(RouteParent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRef) DeepCopyInto(out *RouteRef) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRef.
func (in *RouteRef) DeepCopy() *RouteRef {
	if in == nil {
		return nil
	}
	out := new(RouteRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLServerChangeTables) DeepCopyInto(out *SQLServerChangeTables) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLServerChangeTables.
func (in *SQLServerChangeTables) DeepCopy() *SQLServerChangeTables {
	if in == nil {
		return nil
	}
	out := new(SQLServerChangeTables)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLServerColumn) DeepCopyInto(out *SQLServerColumn) {
	*out = *in
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = new(string)
		**out = **in
	}
	if in.DataType != nil {
		in, out := &in.DataType, &out.DataType
		*out = new(string)
		**out = **in
	}
	if in.Length != nil {
		in, out := &in.Length, &out.Length
		*out = new(int32)
		**out = **in
	}
	if in.Precision != nil {
		in, out := &in.Precision, &out.Precision
		*out = new(int32)
		**out = **in
	}
	if in.Scale != nil {
		in, out := &in.Scale, &out.Scale
		*out = new(int32)
		**out = **in
	}
	if in.PrimaryKey != nil {
		in, out := &in.PrimaryKey, &out.PrimaryKey
		*out = new(bool)
		**out = **in
	}
	if in.Nullable != nil {
		in, out := &in.Nullable, &out.Nullable
		*out = new(bool)
		**out = **in
	}
	if in.OrdinalPosition != nil {
		in, out := &in.OrdinalPosition, &out.OrdinalPosition
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLServerColumn.
func (in *SQLServerColumn) DeepCopy() *SQLServerColumn {
	if in == nil {
		return nil
	}
	out := new(SQLServerColumn)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLServerProfile) DeepCopyInto(out *SQLServerProfile) {
	*out = *in
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int32)
		**out = **in
	}
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(secret.BasicAuthSecretRef)
		**out = **in
	}
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLServerProfile.
func (in *SQLServerProfile) DeepCopy() *SQLServerProfile {
	if in == nil {
		return nil
	}
	out := new(SQLServerProfile)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLServerRdbms) DeepCopyInto(out *SQLServerRdbms) {
	*out = *in
	if in.Schemas != nil {
		in, out := &in.Schemas, &out.Schemas
		*out = make([]SQLServerSchema, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLServerRdbms.
func (in *SQLServerRdbms) DeepCopy() *SQLServerRdbms {
	if in == nil {
		return nil
	}
	out := new(SQLServerRdbms)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLServerSchema) DeepCopyInto(out *SQLServerSchema) {
	*out = *in
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.Tables != nil {
		in, out := &in.Tables, &out.Tables
		*out = make([]SQLServerTable, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLServerSchema.
func (in *SQLServerSchema) DeepCopy() *SQLServerSchema {
	if in == nil {
		return nil
	}
	out := new(SQLServerSchema)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLServerSourceConfig) DeepCopyInto(out *SQLServerSourceConfig) {
	*out = *in
	if in.IncludeObjects != nil {
		in, out := &in.IncludeObjects, &out.IncludeObjects
		*out = new(SQLServerRdbms)
		(*in).DeepCopyInto(*out)
	}
	if in.ExcludeObjects != nil {
		in, out := &in.ExcludeObjects, &out.ExcludeObjects
		*out = new(SQLServerRdbms)
		(*in).DeepCopyInto(*out)
	}
	if in.MaxConcurrentCdcTasks != nil {
		in, out := &in.MaxConcurrentCdcTasks, &out.MaxConcurrentCdcTasks
		*out = new(int32)
		**out = **in
	}
	if in.MaxConcurrentBackfillTasks != nil {
		in, out := &in.MaxConcurrentBackfillTasks, &out.MaxConcurrentBackfillTasks
		*out = new(int32)
		**out = **in
	}
	if in.TransactionLogs != nil {
		in, out := &in.TransactionLogs, &out.TransactionLogs
		*out = new(SQLServerTransactionLogs)
		**out = **in
	}
	if in.ChangeTables != nil {
		in, out := &in.ChangeTables, &out.ChangeTables
		*out = new(SQLServerChangeTables)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLServerSourceConfig.
func (in *SQLServerSourceConfig) DeepCopy() *SQLServerSourceConfig {
	if in == nil {
		return nil
	}
	out := new(SQLServerSourceConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLServerTable) DeepCopyInto(out *SQLServerTable) {
	*out = *in
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = new(string)
		**out = **in
	}
	if in.Columns != nil {
		in, out := &in.Columns, &out.Columns
		*out = make([]SQLServerColumn, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLServerTable.
func (in *SQLServerTable) DeepCopy() *SQLServerTable {
	if in == nil {
		return nil
	}
	out := new(SQLServerTable)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLServerTransactionLogs) DeepCopyInto(out *SQLServerTransactionLogs) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLServerTransactionLogs.
func (in *SQLServerTransactionLogs) DeepCopy() *SQLServerTransactionLogs {
	if in == nil {
		return nil
	}
	out := new(SQLServerTransactionLogs)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceConfig) DeepCopyInto(out *SourceConfig) {
	*out = *in
	if in.SourceConnectionProfileRef != nil {
		in, out := &in.SourceConnectionProfileRef, &out.SourceConnectionProfileRef
		*out = new(ConnectionProfileRef)
		**out = **in
	}
	if in.OracleSourceConfig != nil {
		in, out := &in.OracleSourceConfig, &out.OracleSourceConfig
		*out = new(OracleSourceConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.MySQLSourceConfig != nil {
		in, out := &in.MySQLSourceConfig, &out.MySQLSourceConfig
		*out = new(MysqlSourceConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.PostgreSQLSourceConfig != nil {
		in, out := &in.PostgreSQLSourceConfig, &out.PostgreSQLSourceConfig
		*out = new(PostgresqlSourceConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.SQLServerSourceConfig != nil {
		in, out := &in.SQLServerSourceConfig, &out.SQLServerSourceConfig
		*out = new(SQLServerSourceConfig)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceConfig.
func (in *SourceConfig) DeepCopy() *SourceConfig {
	if in == nil {
		return nil
	}
	out := new(SourceConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StaticServiceIPConnectivity) DeepCopyInto(out *StaticServiceIPConnectivity) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StaticServiceIPConnectivity.
func (in *StaticServiceIPConnectivity) DeepCopy() *StaticServiceIPConnectivity {
	if in == nil {
		return nil
	}
	out := new(StaticServiceIPConnectivity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StreamIdentity) DeepCopyInto(out *StreamIdentity) {
	*out = *in
	if in.parent != nil {
		in, out := &in.parent, &out.parent
		*out = new(StreamParent)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StreamIdentity.
func (in *StreamIdentity) DeepCopy() *StreamIdentity {
	if in == nil {
		return nil
	}
	out := new(StreamIdentity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StreamParent) DeepCopyInto(out *StreamParent) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StreamParent.
func (in *StreamParent) DeepCopy() *StreamParent {
	if in == nil {
		return nil
	}
	out := new(StreamParent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StreamRef) DeepCopyInto(out *StreamRef) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StreamRef.
func (in *StreamRef) DeepCopy() *StreamRef {
	if in == nil {
		return nil
	}
	out := new(StreamRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Stream_BackfillAllStrategy) DeepCopyInto(out *Stream_BackfillAllStrategy) {
	*out = *in
	if in.OracleExcludedObjects != nil {
		in, out := &in.OracleExcludedObjects, &out.OracleExcludedObjects
		*out = new(OracleRdbms)
		(*in).DeepCopyInto(*out)
	}
	if in.MySQLExcludedObjects != nil {
		in, out := &in.MySQLExcludedObjects, &out.MySQLExcludedObjects
		*out = new(MysqlRdbms)
		(*in).DeepCopyInto(*out)
	}
	if in.PostgreSQLExcludedObjects != nil {
		in, out := &in.PostgreSQLExcludedObjects, &out.PostgreSQLExcludedObjects
		*out = new(PostgresqlRdbms)
		(*in).DeepCopyInto(*out)
	}
	if in.SQLServerExcludedObjects != nil {
		in, out := &in.SQLServerExcludedObjects, &out.SQLServerExcludedObjects
		*out = new(SQLServerRdbms)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Stream_BackfillAllStrategy.
func (in *Stream_BackfillAllStrategy) DeepCopy() *Stream_BackfillAllStrategy {
	if in == nil {
		return nil
	}
	out := new(Stream_BackfillAllStrategy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Stream_BackfillNoneStrategy) DeepCopyInto(out *Stream_BackfillNoneStrategy) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Stream_BackfillNoneStrategy.
func (in *Stream_BackfillNoneStrategy) DeepCopy() *Stream_BackfillNoneStrategy {
	if in == nil {
		return nil
	}
	out := new(Stream_BackfillNoneStrategy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VpcPeeringConfig) DeepCopyInto(out *VpcPeeringConfig) {
	*out = *in
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(v1beta1.ComputeNetworkRef)
		**out = **in
	}
	if in.Subnet != nil {
		in, out := &in.Subnet, &out.Subnet
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VpcPeeringConfig.
func (in *VpcPeeringConfig) DeepCopy() *VpcPeeringConfig {
	if in == nil {
		return nil
	}
	out := new(VpcPeeringConfig)
	in.DeepCopyInto(out)
	return out
}
