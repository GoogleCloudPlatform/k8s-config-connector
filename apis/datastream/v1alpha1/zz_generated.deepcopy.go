//go:build !ignore_autogenerated

// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/GoogleCloudPlatform/k8s-config-connector/apis/refs/v1beta1"
	k8sv1alpha1 "github.com/GoogleCloudPlatform/k8s-config-connector/pkg/apis/k8s/v1alpha1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AvroFileFormat) DeepCopyInto(out *AvroFileFormat) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AvroFileFormat.
func (in *AvroFileFormat) DeepCopy() *AvroFileFormat {
	if in == nil {
		return nil
	}
	out := new(AvroFileFormat)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BigQueryDestinationConfigSpec) DeepCopyInto(out *BigQueryDestinationConfigSpec) {
	*out = *in
	if in.SingleTargetDataset != nil {
		in, out := &in.SingleTargetDataset, &out.SingleTargetDataset
		*out = new(BigQueryDestinationConfig_SingleTargetDataset)
		(*in).DeepCopyInto(*out)
	}
	if in.SourceHierarchyDatasets != nil {
		in, out := &in.SourceHierarchyDatasets, &out.SourceHierarchyDatasets
		*out = new(BigQueryDestinationConfig_SourceHierarchyDatasets)
		(*in).DeepCopyInto(*out)
	}
	if in.DataFreshness != nil {
		in, out := &in.DataFreshness, &out.DataFreshness
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BigQueryDestinationConfigSpec.
func (in *BigQueryDestinationConfigSpec) DeepCopy() *BigQueryDestinationConfigSpec {
	if in == nil {
		return nil
	}
	out := new(BigQueryDestinationConfigSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BigQueryDestinationConfig_SingleTargetDataset) DeepCopyInto(out *BigQueryDestinationConfig_SingleTargetDataset) {
	*out = *in
	if in.DatasetRef != nil {
		in, out := &in.DatasetRef, &out.DatasetRef
		*out = new(v1beta1.BigQueryDatasetRef)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BigQueryDestinationConfig_SingleTargetDataset.
func (in *BigQueryDestinationConfig_SingleTargetDataset) DeepCopy() *BigQueryDestinationConfig_SingleTargetDataset {
	if in == nil {
		return nil
	}
	out := new(BigQueryDestinationConfig_SingleTargetDataset)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BigQueryDestinationConfig_SourceHierarchyDatasets) DeepCopyInto(out *BigQueryDestinationConfig_SourceHierarchyDatasets) {
	*out = *in
	if in.DatasetTemplate != nil {
		in, out := &in.DatasetTemplate, &out.DatasetTemplate
		*out = new(BigQueryDestinationConfig_SourceHierarchyDatasets_DatasetTemplate)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BigQueryDestinationConfig_SourceHierarchyDatasets.
func (in *BigQueryDestinationConfig_SourceHierarchyDatasets) DeepCopy() *BigQueryDestinationConfig_SourceHierarchyDatasets {
	if in == nil {
		return nil
	}
	out := new(BigQueryDestinationConfig_SourceHierarchyDatasets)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BigQueryDestinationConfig_SourceHierarchyDatasets_DatasetTemplate) DeepCopyInto(out *BigQueryDestinationConfig_SourceHierarchyDatasets_DatasetTemplate) {
	*out = *in
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.DatasetIDPrefix != nil {
		in, out := &in.DatasetIDPrefix, &out.DatasetIDPrefix
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyRef != nil {
		in, out := &in.KMSKeyRef, &out.KMSKeyRef
		*out = new(v1beta1.KMSCryptoKeyRef)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BigQueryDestinationConfig_SourceHierarchyDatasets_DatasetTemplate.
func (in *BigQueryDestinationConfig_SourceHierarchyDatasets_DatasetTemplate) DeepCopy() *BigQueryDestinationConfig_SourceHierarchyDatasets_DatasetTemplate {
	if in == nil {
		return nil
	}
	out := new(BigQueryDestinationConfig_SourceHierarchyDatasets_DatasetTemplate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionProfileIdentity) DeepCopyInto(out *ConnectionProfileIdentity) {
	*out = *in
	if in.parent != nil {
		in, out := &in.parent, &out.parent
		*out = new(ConnectionProfileParent)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionProfileIdentity.
func (in *ConnectionProfileIdentity) DeepCopy() *ConnectionProfileIdentity {
	if in == nil {
		return nil
	}
	out := new(ConnectionProfileIdentity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionProfileParent) DeepCopyInto(out *ConnectionProfileParent) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionProfileParent.
func (in *ConnectionProfileParent) DeepCopy() *ConnectionProfileParent {
	if in == nil {
		return nil
	}
	out := new(ConnectionProfileParent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionProfileRef) DeepCopyInto(out *ConnectionProfileRef) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionProfileRef.
func (in *ConnectionProfileRef) DeepCopy() *ConnectionProfileRef {
	if in == nil {
		return nil
	}
	out := new(ConnectionProfileRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatastreamStream) DeepCopyInto(out *DatastreamStream) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatastreamStream.
func (in *DatastreamStream) DeepCopy() *DatastreamStream {
	if in == nil {
		return nil
	}
	out := new(DatastreamStream)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DatastreamStream) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatastreamStreamList) DeepCopyInto(out *DatastreamStreamList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DatastreamStream, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatastreamStreamList.
func (in *DatastreamStreamList) DeepCopy() *DatastreamStreamList {
	if in == nil {
		return nil
	}
	out := new(DatastreamStreamList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DatastreamStreamList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatastreamStreamObservedState) DeepCopyInto(out *DatastreamStreamObservedState) {
	*out = *in
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.Errors != nil {
		in, out := &in.Errors, &out.Errors
		*out = make([]Error, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatastreamStreamObservedState.
func (in *DatastreamStreamObservedState) DeepCopy() *DatastreamStreamObservedState {
	if in == nil {
		return nil
	}
	out := new(DatastreamStreamObservedState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatastreamStreamSpec) DeepCopyInto(out *DatastreamStreamSpec) {
	*out = *in
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
	out.ProjectRef = in.ProjectRef
	if in.SourceConfig != nil {
		in, out := &in.SourceConfig, &out.SourceConfig
		*out = new(SourceConfigSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.DestinationConfig != nil {
		in, out := &in.DestinationConfig, &out.DestinationConfig
		*out = new(DestinationConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.CustomerManagedEncryptionKeyRef != nil {
		in, out := &in.CustomerManagedEncryptionKeyRef, &out.CustomerManagedEncryptionKeyRef
		*out = new(v1beta1.KMSCryptoKeyRef)
		**out = **in
	}
	if in.BackfillAll != nil {
		in, out := &in.BackfillAll, &out.BackfillAll
		*out = new(Stream_BackfillAllStrategy)
		(*in).DeepCopyInto(*out)
	}
	if in.BackfillNone != nil {
		in, out := &in.BackfillNone, &out.BackfillNone
		*out = new(Stream_BackfillNoneStrategy)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatastreamStreamSpec.
func (in *DatastreamStreamSpec) DeepCopy() *DatastreamStreamSpec {
	if in == nil {
		return nil
	}
	out := new(DatastreamStreamSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatastreamStreamStatus) DeepCopyInto(out *DatastreamStreamStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]k8sv1alpha1.Condition, len(*in))
		copy(*out, *in)
	}
	if in.ObservedGeneration != nil {
		in, out := &in.ObservedGeneration, &out.ObservedGeneration
		*out = new(int64)
		**out = **in
	}
	if in.ExternalRef != nil {
		in, out := &in.ExternalRef, &out.ExternalRef
		*out = new(string)
		**out = **in
	}
	if in.ObservedState != nil {
		in, out := &in.ObservedState, &out.ObservedState
		*out = new(DatastreamStreamObservedState)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatastreamStreamStatus.
func (in *DatastreamStreamStatus) DeepCopy() *DatastreamStreamStatus {
	if in == nil {
		return nil
	}
	out := new(DatastreamStreamStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DestinationConfig) DeepCopyInto(out *DestinationConfig) {
	*out = *in
	if in.DestinationConnectionProfileRef != nil {
		in, out := &in.DestinationConnectionProfileRef, &out.DestinationConnectionProfileRef
		*out = new(ConnectionProfileRef)
		**out = **in
	}
	if in.GcsDestinationConfig != nil {
		in, out := &in.GcsDestinationConfig, &out.GcsDestinationConfig
		*out = new(GcsDestinationConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.BigqueryDestinationConfig != nil {
		in, out := &in.BigqueryDestinationConfig, &out.BigqueryDestinationConfig
		*out = new(BigQueryDestinationConfigSpec)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DestinationConfig.
func (in *DestinationConfig) DeepCopy() *DestinationConfig {
	if in == nil {
		return nil
	}
	out := new(DestinationConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Error) DeepCopyInto(out *Error) {
	*out = *in
	if in.Reason != nil {
		in, out := &in.Reason, &out.Reason
		*out = new(string)
		**out = **in
	}
	if in.ErrorUuid != nil {
		in, out := &in.ErrorUuid, &out.ErrorUuid
		*out = new(string)
		**out = **in
	}
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
	if in.ErrorTime != nil {
		in, out := &in.ErrorTime, &out.ErrorTime
		*out = new(string)
		**out = **in
	}
	if in.Details != nil {
		in, out := &in.Details, &out.Details
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Error.
func (in *Error) DeepCopy() *Error {
	if in == nil {
		return nil
	}
	out := new(Error)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GcsDestinationConfig) DeepCopyInto(out *GcsDestinationConfig) {
	*out = *in
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.FileRotationMb != nil {
		in, out := &in.FileRotationMb, &out.FileRotationMb
		*out = new(int32)
		**out = **in
	}
	if in.FileRotationInterval != nil {
		in, out := &in.FileRotationInterval, &out.FileRotationInterval
		*out = new(string)
		**out = **in
	}
	if in.AvroFileFormat != nil {
		in, out := &in.AvroFileFormat, &out.AvroFileFormat
		*out = new(AvroFileFormat)
		**out = **in
	}
	if in.JsonFileFormat != nil {
		in, out := &in.JsonFileFormat, &out.JsonFileFormat
		*out = new(JsonFileFormat)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GcsDestinationConfig.
func (in *GcsDestinationConfig) DeepCopy() *GcsDestinationConfig {
	if in == nil {
		return nil
	}
	out := new(GcsDestinationConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JsonFileFormat) DeepCopyInto(out *JsonFileFormat) {
	*out = *in
	if in.SchemaFileFormat != nil {
		in, out := &in.SchemaFileFormat, &out.SchemaFileFormat
		*out = new(string)
		**out = **in
	}
	if in.Compression != nil {
		in, out := &in.Compression, &out.Compression
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JsonFileFormat.
func (in *JsonFileFormat) DeepCopy() *JsonFileFormat {
	if in == nil {
		return nil
	}
	out := new(JsonFileFormat)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MysqlColumn) DeepCopyInto(out *MysqlColumn) {
	*out = *in
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = new(string)
		**out = **in
	}
	if in.DataType != nil {
		in, out := &in.DataType, &out.DataType
		*out = new(string)
		**out = **in
	}
	if in.Length != nil {
		in, out := &in.Length, &out.Length
		*out = new(int32)
		**out = **in
	}
	if in.Collation != nil {
		in, out := &in.Collation, &out.Collation
		*out = new(string)
		**out = **in
	}
	if in.PrimaryKey != nil {
		in, out := &in.PrimaryKey, &out.PrimaryKey
		*out = new(bool)
		**out = **in
	}
	if in.Nullable != nil {
		in, out := &in.Nullable, &out.Nullable
		*out = new(bool)
		**out = **in
	}
	if in.OrdinalPosition != nil {
		in, out := &in.OrdinalPosition, &out.OrdinalPosition
		*out = new(int32)
		**out = **in
	}
	if in.Precision != nil {
		in, out := &in.Precision, &out.Precision
		*out = new(int32)
		**out = **in
	}
	if in.Scale != nil {
		in, out := &in.Scale, &out.Scale
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MysqlColumn.
func (in *MysqlColumn) DeepCopy() *MysqlColumn {
	if in == nil {
		return nil
	}
	out := new(MysqlColumn)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MysqlDatabase) DeepCopyInto(out *MysqlDatabase) {
	*out = *in
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.MysqlTables != nil {
		in, out := &in.MysqlTables, &out.MysqlTables
		*out = make([]MysqlTable, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MysqlDatabase.
func (in *MysqlDatabase) DeepCopy() *MysqlDatabase {
	if in == nil {
		return nil
	}
	out := new(MysqlDatabase)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MysqlRdbms) DeepCopyInto(out *MysqlRdbms) {
	*out = *in
	if in.MysqlDatabases != nil {
		in, out := &in.MysqlDatabases, &out.MysqlDatabases
		*out = make([]MysqlDatabase, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MysqlRdbms.
func (in *MysqlRdbms) DeepCopy() *MysqlRdbms {
	if in == nil {
		return nil
	}
	out := new(MysqlRdbms)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MysqlSourceConfig) DeepCopyInto(out *MysqlSourceConfig) {
	*out = *in
	if in.IncludeObjects != nil {
		in, out := &in.IncludeObjects, &out.IncludeObjects
		*out = new(MysqlRdbms)
		(*in).DeepCopyInto(*out)
	}
	if in.ExcludeObjects != nil {
		in, out := &in.ExcludeObjects, &out.ExcludeObjects
		*out = new(MysqlRdbms)
		(*in).DeepCopyInto(*out)
	}
	if in.MaxConcurrentCdcTasks != nil {
		in, out := &in.MaxConcurrentCdcTasks, &out.MaxConcurrentCdcTasks
		*out = new(int32)
		**out = **in
	}
	if in.MaxConcurrentBackfillTasks != nil {
		in, out := &in.MaxConcurrentBackfillTasks, &out.MaxConcurrentBackfillTasks
		*out = new(int32)
		**out = **in
	}
	if in.BinaryLogPosition != nil {
		in, out := &in.BinaryLogPosition, &out.BinaryLogPosition
		*out = new(MysqlSourceConfig_BinaryLogPosition)
		**out = **in
	}
	if in.Gtid != nil {
		in, out := &in.Gtid, &out.Gtid
		*out = new(MysqlSourceConfig_Gtid)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MysqlSourceConfig.
func (in *MysqlSourceConfig) DeepCopy() *MysqlSourceConfig {
	if in == nil {
		return nil
	}
	out := new(MysqlSourceConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MysqlSourceConfig_BinaryLogPosition) DeepCopyInto(out *MysqlSourceConfig_BinaryLogPosition) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MysqlSourceConfig_BinaryLogPosition.
func (in *MysqlSourceConfig_BinaryLogPosition) DeepCopy() *MysqlSourceConfig_BinaryLogPosition {
	if in == nil {
		return nil
	}
	out := new(MysqlSourceConfig_BinaryLogPosition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MysqlSourceConfig_Gtid) DeepCopyInto(out *MysqlSourceConfig_Gtid) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MysqlSourceConfig_Gtid.
func (in *MysqlSourceConfig_Gtid) DeepCopy() *MysqlSourceConfig_Gtid {
	if in == nil {
		return nil
	}
	out := new(MysqlSourceConfig_Gtid)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MysqlTable) DeepCopyInto(out *MysqlTable) {
	*out = *in
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = new(string)
		**out = **in
	}
	if in.MysqlColumns != nil {
		in, out := &in.MysqlColumns, &out.MysqlColumns
		*out = make([]MysqlColumn, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MysqlTable.
func (in *MysqlTable) DeepCopy() *MysqlTable {
	if in == nil {
		return nil
	}
	out := new(MysqlTable)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OracleColumn) DeepCopyInto(out *OracleColumn) {
	*out = *in
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = new(string)
		**out = **in
	}
	if in.DataType != nil {
		in, out := &in.DataType, &out.DataType
		*out = new(string)
		**out = **in
	}
	if in.Length != nil {
		in, out := &in.Length, &out.Length
		*out = new(int32)
		**out = **in
	}
	if in.Precision != nil {
		in, out := &in.Precision, &out.Precision
		*out = new(int32)
		**out = **in
	}
	if in.Scale != nil {
		in, out := &in.Scale, &out.Scale
		*out = new(int32)
		**out = **in
	}
	if in.Encoding != nil {
		in, out := &in.Encoding, &out.Encoding
		*out = new(string)
		**out = **in
	}
	if in.PrimaryKey != nil {
		in, out := &in.PrimaryKey, &out.PrimaryKey
		*out = new(bool)
		**out = **in
	}
	if in.Nullable != nil {
		in, out := &in.Nullable, &out.Nullable
		*out = new(bool)
		**out = **in
	}
	if in.OrdinalPosition != nil {
		in, out := &in.OrdinalPosition, &out.OrdinalPosition
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OracleColumn.
func (in *OracleColumn) DeepCopy() *OracleColumn {
	if in == nil {
		return nil
	}
	out := new(OracleColumn)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OracleRdbms) DeepCopyInto(out *OracleRdbms) {
	*out = *in
	if in.OracleSchemas != nil {
		in, out := &in.OracleSchemas, &out.OracleSchemas
		*out = make([]OracleSchema, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OracleRdbms.
func (in *OracleRdbms) DeepCopy() *OracleRdbms {
	if in == nil {
		return nil
	}
	out := new(OracleRdbms)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OracleSchema) DeepCopyInto(out *OracleSchema) {
	*out = *in
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.OracleTables != nil {
		in, out := &in.OracleTables, &out.OracleTables
		*out = make([]OracleTable, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OracleSchema.
func (in *OracleSchema) DeepCopy() *OracleSchema {
	if in == nil {
		return nil
	}
	out := new(OracleSchema)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OracleSourceConfig) DeepCopyInto(out *OracleSourceConfig) {
	*out = *in
	if in.IncludeObjects != nil {
		in, out := &in.IncludeObjects, &out.IncludeObjects
		*out = new(OracleRdbms)
		(*in).DeepCopyInto(*out)
	}
	if in.ExcludeObjects != nil {
		in, out := &in.ExcludeObjects, &out.ExcludeObjects
		*out = new(OracleRdbms)
		(*in).DeepCopyInto(*out)
	}
	if in.MaxConcurrentCdcTasks != nil {
		in, out := &in.MaxConcurrentCdcTasks, &out.MaxConcurrentCdcTasks
		*out = new(int32)
		**out = **in
	}
	if in.MaxConcurrentBackfillTasks != nil {
		in, out := &in.MaxConcurrentBackfillTasks, &out.MaxConcurrentBackfillTasks
		*out = new(int32)
		**out = **in
	}
	if in.DropLargeObjects != nil {
		in, out := &in.DropLargeObjects, &out.DropLargeObjects
		*out = new(OracleSourceConfig_DropLargeObjects)
		**out = **in
	}
	if in.StreamLargeObjects != nil {
		in, out := &in.StreamLargeObjects, &out.StreamLargeObjects
		*out = new(OracleSourceConfig_StreamLargeObjects)
		**out = **in
	}
	if in.LogMiner != nil {
		in, out := &in.LogMiner, &out.LogMiner
		*out = new(OracleSourceConfig_LogMiner)
		**out = **in
	}
	if in.BinaryLogParser != nil {
		in, out := &in.BinaryLogParser, &out.BinaryLogParser
		*out = new(OracleSourceConfig_BinaryLogParser)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OracleSourceConfig.
func (in *OracleSourceConfig) DeepCopy() *OracleSourceConfig {
	if in == nil {
		return nil
	}
	out := new(OracleSourceConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OracleSourceConfig_BinaryLogParser) DeepCopyInto(out *OracleSourceConfig_BinaryLogParser) {
	*out = *in
	if in.OracleAsmLogFileAccess != nil {
		in, out := &in.OracleAsmLogFileAccess, &out.OracleAsmLogFileAccess
		*out = new(OracleSourceConfig_BinaryLogParser_OracleAsmLogFileAccess)
		**out = **in
	}
	if in.LogFileDirectories != nil {
		in, out := &in.LogFileDirectories, &out.LogFileDirectories
		*out = new(OracleSourceConfig_BinaryLogParser_LogFileDirectories)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OracleSourceConfig_BinaryLogParser.
func (in *OracleSourceConfig_BinaryLogParser) DeepCopy() *OracleSourceConfig_BinaryLogParser {
	if in == nil {
		return nil
	}
	out := new(OracleSourceConfig_BinaryLogParser)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OracleSourceConfig_BinaryLogParser_LogFileDirectories) DeepCopyInto(out *OracleSourceConfig_BinaryLogParser_LogFileDirectories) {
	*out = *in
	if in.OnlineLogDirectory != nil {
		in, out := &in.OnlineLogDirectory, &out.OnlineLogDirectory
		*out = new(string)
		**out = **in
	}
	if in.ArchivedLogDirectory != nil {
		in, out := &in.ArchivedLogDirectory, &out.ArchivedLogDirectory
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OracleSourceConfig_BinaryLogParser_LogFileDirectories.
func (in *OracleSourceConfig_BinaryLogParser_LogFileDirectories) DeepCopy() *OracleSourceConfig_BinaryLogParser_LogFileDirectories {
	if in == nil {
		return nil
	}
	out := new(OracleSourceConfig_BinaryLogParser_LogFileDirectories)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OracleSourceConfig_BinaryLogParser_OracleAsmLogFileAccess) DeepCopyInto(out *OracleSourceConfig_BinaryLogParser_OracleAsmLogFileAccess) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OracleSourceConfig_BinaryLogParser_OracleAsmLogFileAccess.
func (in *OracleSourceConfig_BinaryLogParser_OracleAsmLogFileAccess) DeepCopy() *OracleSourceConfig_BinaryLogParser_OracleAsmLogFileAccess {
	if in == nil {
		return nil
	}
	out := new(OracleSourceConfig_BinaryLogParser_OracleAsmLogFileAccess)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OracleSourceConfig_DropLargeObjects) DeepCopyInto(out *OracleSourceConfig_DropLargeObjects) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OracleSourceConfig_DropLargeObjects.
func (in *OracleSourceConfig_DropLargeObjects) DeepCopy() *OracleSourceConfig_DropLargeObjects {
	if in == nil {
		return nil
	}
	out := new(OracleSourceConfig_DropLargeObjects)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OracleSourceConfig_LogMiner) DeepCopyInto(out *OracleSourceConfig_LogMiner) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OracleSourceConfig_LogMiner.
func (in *OracleSourceConfig_LogMiner) DeepCopy() *OracleSourceConfig_LogMiner {
	if in == nil {
		return nil
	}
	out := new(OracleSourceConfig_LogMiner)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OracleSourceConfig_StreamLargeObjects) DeepCopyInto(out *OracleSourceConfig_StreamLargeObjects) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OracleSourceConfig_StreamLargeObjects.
func (in *OracleSourceConfig_StreamLargeObjects) DeepCopy() *OracleSourceConfig_StreamLargeObjects {
	if in == nil {
		return nil
	}
	out := new(OracleSourceConfig_StreamLargeObjects)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OracleTable) DeepCopyInto(out *OracleTable) {
	*out = *in
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = new(string)
		**out = **in
	}
	if in.OracleColumns != nil {
		in, out := &in.OracleColumns, &out.OracleColumns
		*out = make([]OracleColumn, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OracleTable.
func (in *OracleTable) DeepCopy() *OracleTable {
	if in == nil {
		return nil
	}
	out := new(OracleTable)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresqlColumn) DeepCopyInto(out *PostgresqlColumn) {
	*out = *in
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = new(string)
		**out = **in
	}
	if in.DataType != nil {
		in, out := &in.DataType, &out.DataType
		*out = new(string)
		**out = **in
	}
	if in.Length != nil {
		in, out := &in.Length, &out.Length
		*out = new(int32)
		**out = **in
	}
	if in.Precision != nil {
		in, out := &in.Precision, &out.Precision
		*out = new(int32)
		**out = **in
	}
	if in.Scale != nil {
		in, out := &in.Scale, &out.Scale
		*out = new(int32)
		**out = **in
	}
	if in.PrimaryKey != nil {
		in, out := &in.PrimaryKey, &out.PrimaryKey
		*out = new(bool)
		**out = **in
	}
	if in.Nullable != nil {
		in, out := &in.Nullable, &out.Nullable
		*out = new(bool)
		**out = **in
	}
	if in.OrdinalPosition != nil {
		in, out := &in.OrdinalPosition, &out.OrdinalPosition
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresqlColumn.
func (in *PostgresqlColumn) DeepCopy() *PostgresqlColumn {
	if in == nil {
		return nil
	}
	out := new(PostgresqlColumn)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresqlRdbms) DeepCopyInto(out *PostgresqlRdbms) {
	*out = *in
	if in.PostgresqlSchemas != nil {
		in, out := &in.PostgresqlSchemas, &out.PostgresqlSchemas
		*out = make([]PostgresqlSchema, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresqlRdbms.
func (in *PostgresqlRdbms) DeepCopy() *PostgresqlRdbms {
	if in == nil {
		return nil
	}
	out := new(PostgresqlRdbms)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresqlSchema) DeepCopyInto(out *PostgresqlSchema) {
	*out = *in
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.PostgresqlTables != nil {
		in, out := &in.PostgresqlTables, &out.PostgresqlTables
		*out = make([]PostgresqlTable, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresqlSchema.
func (in *PostgresqlSchema) DeepCopy() *PostgresqlSchema {
	if in == nil {
		return nil
	}
	out := new(PostgresqlSchema)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresqlSourceConfig) DeepCopyInto(out *PostgresqlSourceConfig) {
	*out = *in
	if in.IncludeObjects != nil {
		in, out := &in.IncludeObjects, &out.IncludeObjects
		*out = new(PostgresqlRdbms)
		(*in).DeepCopyInto(*out)
	}
	if in.ExcludeObjects != nil {
		in, out := &in.ExcludeObjects, &out.ExcludeObjects
		*out = new(PostgresqlRdbms)
		(*in).DeepCopyInto(*out)
	}
	if in.ReplicationSlot != nil {
		in, out := &in.ReplicationSlot, &out.ReplicationSlot
		*out = new(string)
		**out = **in
	}
	if in.Publication != nil {
		in, out := &in.Publication, &out.Publication
		*out = new(string)
		**out = **in
	}
	if in.MaxConcurrentBackfillTasks != nil {
		in, out := &in.MaxConcurrentBackfillTasks, &out.MaxConcurrentBackfillTasks
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresqlSourceConfig.
func (in *PostgresqlSourceConfig) DeepCopy() *PostgresqlSourceConfig {
	if in == nil {
		return nil
	}
	out := new(PostgresqlSourceConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresqlTable) DeepCopyInto(out *PostgresqlTable) {
	*out = *in
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = new(string)
		**out = **in
	}
	if in.PostgresqlColumns != nil {
		in, out := &in.PostgresqlColumns, &out.PostgresqlColumns
		*out = make([]PostgresqlColumn, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresqlTable.
func (in *PostgresqlTable) DeepCopy() *PostgresqlTable {
	if in == nil {
		return nil
	}
	out := new(PostgresqlTable)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceConfig) DeepCopyInto(out *SourceConfig) {
	*out = *in
	if in.SourceConnectionProfile != nil {
		in, out := &in.SourceConnectionProfile, &out.SourceConnectionProfile
		*out = new(string)
		**out = **in
	}
	if in.OracleSourceConfig != nil {
		in, out := &in.OracleSourceConfig, &out.OracleSourceConfig
		*out = new(OracleSourceConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.MysqlSourceConfig != nil {
		in, out := &in.MysqlSourceConfig, &out.MysqlSourceConfig
		*out = new(MysqlSourceConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.PostgresqlSourceConfig != nil {
		in, out := &in.PostgresqlSourceConfig, &out.PostgresqlSourceConfig
		*out = new(PostgresqlSourceConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.SqlServerSourceConfig != nil {
		in, out := &in.SqlServerSourceConfig, &out.SqlServerSourceConfig
		*out = new(SqlServerSourceConfig)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceConfig.
func (in *SourceConfig) DeepCopy() *SourceConfig {
	if in == nil {
		return nil
	}
	out := new(SourceConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceConfigSpec) DeepCopyInto(out *SourceConfigSpec) {
	*out = *in
	if in.SourceConnectionProfileRef != nil {
		in, out := &in.SourceConnectionProfileRef, &out.SourceConnectionProfileRef
		*out = new(ConnectionProfileRef)
		**out = **in
	}
	if in.OracleSourceConfig != nil {
		in, out := &in.OracleSourceConfig, &out.OracleSourceConfig
		*out = new(OracleSourceConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.MysqlSourceConfig != nil {
		in, out := &in.MysqlSourceConfig, &out.MysqlSourceConfig
		*out = new(MysqlSourceConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.PostgresqlSourceConfig != nil {
		in, out := &in.PostgresqlSourceConfig, &out.PostgresqlSourceConfig
		*out = new(PostgresqlSourceConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.SqlServerSourceConfig != nil {
		in, out := &in.SqlServerSourceConfig, &out.SqlServerSourceConfig
		*out = new(SqlServerSourceConfig)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceConfigSpec.
func (in *SourceConfigSpec) DeepCopy() *SourceConfigSpec {
	if in == nil {
		return nil
	}
	out := new(SourceConfigSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlServerChangeTables) DeepCopyInto(out *SqlServerChangeTables) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlServerChangeTables.
func (in *SqlServerChangeTables) DeepCopy() *SqlServerChangeTables {
	if in == nil {
		return nil
	}
	out := new(SqlServerChangeTables)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlServerColumn) DeepCopyInto(out *SqlServerColumn) {
	*out = *in
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = new(string)
		**out = **in
	}
	if in.DataType != nil {
		in, out := &in.DataType, &out.DataType
		*out = new(string)
		**out = **in
	}
	if in.Length != nil {
		in, out := &in.Length, &out.Length
		*out = new(int32)
		**out = **in
	}
	if in.Precision != nil {
		in, out := &in.Precision, &out.Precision
		*out = new(int32)
		**out = **in
	}
	if in.Scale != nil {
		in, out := &in.Scale, &out.Scale
		*out = new(int32)
		**out = **in
	}
	if in.PrimaryKey != nil {
		in, out := &in.PrimaryKey, &out.PrimaryKey
		*out = new(bool)
		**out = **in
	}
	if in.Nullable != nil {
		in, out := &in.Nullable, &out.Nullable
		*out = new(bool)
		**out = **in
	}
	if in.OrdinalPosition != nil {
		in, out := &in.OrdinalPosition, &out.OrdinalPosition
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlServerColumn.
func (in *SqlServerColumn) DeepCopy() *SqlServerColumn {
	if in == nil {
		return nil
	}
	out := new(SqlServerColumn)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlServerRdbms) DeepCopyInto(out *SqlServerRdbms) {
	*out = *in
	if in.Schemas != nil {
		in, out := &in.Schemas, &out.Schemas
		*out = make([]SqlServerSchema, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlServerRdbms.
func (in *SqlServerRdbms) DeepCopy() *SqlServerRdbms {
	if in == nil {
		return nil
	}
	out := new(SqlServerRdbms)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlServerSchema) DeepCopyInto(out *SqlServerSchema) {
	*out = *in
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.Tables != nil {
		in, out := &in.Tables, &out.Tables
		*out = make([]SqlServerTable, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlServerSchema.
func (in *SqlServerSchema) DeepCopy() *SqlServerSchema {
	if in == nil {
		return nil
	}
	out := new(SqlServerSchema)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlServerSourceConfig) DeepCopyInto(out *SqlServerSourceConfig) {
	*out = *in
	if in.IncludeObjects != nil {
		in, out := &in.IncludeObjects, &out.IncludeObjects
		*out = new(SqlServerRdbms)
		(*in).DeepCopyInto(*out)
	}
	if in.ExcludeObjects != nil {
		in, out := &in.ExcludeObjects, &out.ExcludeObjects
		*out = new(SqlServerRdbms)
		(*in).DeepCopyInto(*out)
	}
	if in.MaxConcurrentCdcTasks != nil {
		in, out := &in.MaxConcurrentCdcTasks, &out.MaxConcurrentCdcTasks
		*out = new(int32)
		**out = **in
	}
	if in.MaxConcurrentBackfillTasks != nil {
		in, out := &in.MaxConcurrentBackfillTasks, &out.MaxConcurrentBackfillTasks
		*out = new(int32)
		**out = **in
	}
	if in.TransactionLogs != nil {
		in, out := &in.TransactionLogs, &out.TransactionLogs
		*out = new(SqlServerTransactionLogs)
		**out = **in
	}
	if in.ChangeTables != nil {
		in, out := &in.ChangeTables, &out.ChangeTables
		*out = new(SqlServerChangeTables)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlServerSourceConfig.
func (in *SqlServerSourceConfig) DeepCopy() *SqlServerSourceConfig {
	if in == nil {
		return nil
	}
	out := new(SqlServerSourceConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlServerTable) DeepCopyInto(out *SqlServerTable) {
	*out = *in
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = new(string)
		**out = **in
	}
	if in.Columns != nil {
		in, out := &in.Columns, &out.Columns
		*out = make([]SqlServerColumn, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlServerTable.
func (in *SqlServerTable) DeepCopy() *SqlServerTable {
	if in == nil {
		return nil
	}
	out := new(SqlServerTable)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlServerTransactionLogs) DeepCopyInto(out *SqlServerTransactionLogs) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlServerTransactionLogs.
func (in *SqlServerTransactionLogs) DeepCopy() *SqlServerTransactionLogs {
	if in == nil {
		return nil
	}
	out := new(SqlServerTransactionLogs)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StreamIdentity) DeepCopyInto(out *StreamIdentity) {
	*out = *in
	if in.parent != nil {
		in, out := &in.parent, &out.parent
		*out = new(StreamParent)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StreamIdentity.
func (in *StreamIdentity) DeepCopy() *StreamIdentity {
	if in == nil {
		return nil
	}
	out := new(StreamIdentity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StreamParent) DeepCopyInto(out *StreamParent) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StreamParent.
func (in *StreamParent) DeepCopy() *StreamParent {
	if in == nil {
		return nil
	}
	out := new(StreamParent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StreamRef) DeepCopyInto(out *StreamRef) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StreamRef.
func (in *StreamRef) DeepCopy() *StreamRef {
	if in == nil {
		return nil
	}
	out := new(StreamRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Stream_BackfillAllStrategy) DeepCopyInto(out *Stream_BackfillAllStrategy) {
	*out = *in
	if in.OracleExcludedObjects != nil {
		in, out := &in.OracleExcludedObjects, &out.OracleExcludedObjects
		*out = new(OracleRdbms)
		(*in).DeepCopyInto(*out)
	}
	if in.MysqlExcludedObjects != nil {
		in, out := &in.MysqlExcludedObjects, &out.MysqlExcludedObjects
		*out = new(MysqlRdbms)
		(*in).DeepCopyInto(*out)
	}
	if in.PostgresqlExcludedObjects != nil {
		in, out := &in.PostgresqlExcludedObjects, &out.PostgresqlExcludedObjects
		*out = new(PostgresqlRdbms)
		(*in).DeepCopyInto(*out)
	}
	if in.SqlServerExcludedObjects != nil {
		in, out := &in.SqlServerExcludedObjects, &out.SqlServerExcludedObjects
		*out = new(SqlServerRdbms)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Stream_BackfillAllStrategy.
func (in *Stream_BackfillAllStrategy) DeepCopy() *Stream_BackfillAllStrategy {
	if in == nil {
		return nil
	}
	out := new(Stream_BackfillAllStrategy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Stream_BackfillNoneStrategy) DeepCopyInto(out *Stream_BackfillNoneStrategy) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Stream_BackfillNoneStrategy.
func (in *Stream_BackfillNoneStrategy) DeepCopy() *Stream_BackfillNoneStrategy {
	if in == nil {
		return nil
	}
	out := new(Stream_BackfillNoneStrategy)
	in.DeepCopyInto(out)
	return out
}
