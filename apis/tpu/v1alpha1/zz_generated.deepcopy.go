//go:build !ignore_autogenerated

// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/GoogleCloudPlatform/k8s-config-connector/apis/refs/v1beta1"
	k8sv1alpha1 "github.com/GoogleCloudPlatform/k8s-config-connector/pkg/apis/k8s/v1alpha1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AcceleratorConfig) DeepCopyInto(out *AcceleratorConfig) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Topology != nil {
		in, out := &in.Topology, &out.Topology
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AcceleratorConfig.
func (in *AcceleratorConfig) DeepCopy() *AcceleratorConfig {
	if in == nil {
		return nil
	}
	out := new(AcceleratorConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessConfigObservedState) DeepCopyInto(out *AccessConfigObservedState) {
	*out = *in
	if in.ExternalIP != nil {
		in, out := &in.ExternalIP, &out.ExternalIP
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessConfigObservedState.
func (in *AccessConfigObservedState) DeepCopy() *AccessConfigObservedState {
	if in == nil {
		return nil
	}
	out := new(AccessConfigObservedState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttachedDisk) DeepCopyInto(out *AttachedDisk) {
	*out = *in
	if in.SourceDisk != nil {
		in, out := &in.SourceDisk, &out.SourceDisk
		*out = new(string)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttachedDisk.
func (in *AttachedDisk) DeepCopy() *AttachedDisk {
	if in == nil {
		return nil
	}
	out := new(AttachedDisk)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkConfig) DeepCopyInto(out *NetworkConfig) {
	*out = *in
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(v1beta1.ComputeNetworkRef)
		**out = **in
	}
	if in.SubnetworkRef != nil {
		in, out := &in.SubnetworkRef, &out.SubnetworkRef
		*out = new(v1beta1.ComputeSubnetworkRef)
		**out = **in
	}
	if in.EnableExternalIps != nil {
		in, out := &in.EnableExternalIps, &out.EnableExternalIps
		*out = new(bool)
		**out = **in
	}
	if in.CanIPForward != nil {
		in, out := &in.CanIPForward, &out.CanIPForward
		*out = new(bool)
		**out = **in
	}
	if in.QueueCount != nil {
		in, out := &in.QueueCount, &out.QueueCount
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkConfig.
func (in *NetworkConfig) DeepCopy() *NetworkConfig {
	if in == nil {
		return nil
	}
	out := new(NetworkConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkEndpoint) DeepCopyInto(out *NetworkEndpoint) {
	*out = *in
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkEndpoint.
func (in *NetworkEndpoint) DeepCopy() *NetworkEndpoint {
	if in == nil {
		return nil
	}
	out := new(NetworkEndpoint)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkEndpointObservedState) DeepCopyInto(out *NetworkEndpointObservedState) {
	*out = *in
	if in.AccessConfig != nil {
		in, out := &in.AccessConfig, &out.AccessConfig
		*out = new(AccessConfigObservedState)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkEndpointObservedState.
func (in *NetworkEndpointObservedState) DeepCopy() *NetworkEndpointObservedState {
	if in == nil {
		return nil
	}
	out := new(NetworkEndpointObservedState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeIdentity) DeepCopyInto(out *NodeIdentity) {
	*out = *in
	if in.parent != nil {
		in, out := &in.parent, &out.parent
		*out = new(NodeParent)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeIdentity.
func (in *NodeIdentity) DeepCopy() *NodeIdentity {
	if in == nil {
		return nil
	}
	out := new(NodeIdentity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeParent) DeepCopyInto(out *NodeParent) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeParent.
func (in *NodeParent) DeepCopy() *NodeParent {
	if in == nil {
		return nil
	}
	out := new(NodeParent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeRef) DeepCopyInto(out *NodeRef) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeRef.
func (in *NodeRef) DeepCopy() *NodeRef {
	if in == nil {
		return nil
	}
	out := new(NodeRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchedulingConfig) DeepCopyInto(out *SchedulingConfig) {
	*out = *in
	if in.Preemptible != nil {
		in, out := &in.Preemptible, &out.Preemptible
		*out = new(bool)
		**out = **in
	}
	if in.Reserved != nil {
		in, out := &in.Reserved, &out.Reserved
		*out = new(bool)
		**out = **in
	}
	if in.Spot != nil {
		in, out := &in.Spot, &out.Spot
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchedulingConfig.
func (in *SchedulingConfig) DeepCopy() *SchedulingConfig {
	if in == nil {
		return nil
	}
	out := new(SchedulingConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceAccount) DeepCopyInto(out *ServiceAccount) {
	*out = *in
	if in.ServiceAccountRef != nil {
		in, out := &in.ServiceAccountRef, &out.ServiceAccountRef
		*out = new(v1beta1.IAMServiceAccountRef)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceAccount.
func (in *ServiceAccount) DeepCopy() *ServiceAccount {
	if in == nil {
		return nil
	}
	out := new(ServiceAccount)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShieldedInstanceConfig) DeepCopyInto(out *ShieldedInstanceConfig) {
	*out = *in
	if in.EnableSecureBoot != nil {
		in, out := &in.EnableSecureBoot, &out.EnableSecureBoot
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShieldedInstanceConfig.
func (in *ShieldedInstanceConfig) DeepCopy() *ShieldedInstanceConfig {
	if in == nil {
		return nil
	}
	out := new(ShieldedInstanceConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Symptom) DeepCopyInto(out *Symptom) {
	*out = *in
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.SymptomType != nil {
		in, out := &in.SymptomType, &out.SymptomType
		*out = new(string)
		**out = **in
	}
	if in.Details != nil {
		in, out := &in.Details, &out.Details
		*out = new(string)
		**out = **in
	}
	if in.WorkerID != nil {
		in, out := &in.WorkerID, &out.WorkerID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Symptom.
func (in *Symptom) DeepCopy() *Symptom {
	if in == nil {
		return nil
	}
	out := new(Symptom)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TPUV2NodeSpec) DeepCopyInto(out *TPUV2NodeSpec) {
	*out = *in
	if in.AcceleratorConfig != nil {
		in, out := &in.AcceleratorConfig, &out.AcceleratorConfig
		*out = new(AcceleratorConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
	if in.UseServiceNetworking != nil {
		in, out := &in.UseServiceNetworking, &out.UseServiceNetworking
		*out = new(bool)
		**out = **in
	}
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(v1beta1.ComputeNetworkRef)
		**out = **in
	}
	if in.TensorflowVersion != nil {
		in, out := &in.TensorflowVersion, &out.TensorflowVersion
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TPUV2NodeSpec.
func (in *TPUV2NodeSpec) DeepCopy() *TPUV2NodeSpec {
	if in == nil {
		return nil
	}
	out := new(TPUV2NodeSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TPUVirtualMachine) DeepCopyInto(out *TPUVirtualMachine) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TPUVirtualMachine.
func (in *TPUVirtualMachine) DeepCopy() *TPUVirtualMachine {
	if in == nil {
		return nil
	}
	out := new(TPUVirtualMachine)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TPUVirtualMachine) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TPUVirtualMachineList) DeepCopyInto(out *TPUVirtualMachineList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TPUVirtualMachine, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TPUVirtualMachineList.
func (in *TPUVirtualMachineList) DeepCopy() *TPUVirtualMachineList {
	if in == nil {
		return nil
	}
	out := new(TPUVirtualMachineList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TPUVirtualMachineList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TPUVirtualMachineObservedState) DeepCopyInto(out *TPUVirtualMachineObservedState) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.HealthDescription != nil {
		in, out := &in.HealthDescription, &out.HealthDescription
		*out = new(string)
		**out = **in
	}
	if in.NetworkEndpoints != nil {
		in, out := &in.NetworkEndpoints, &out.NetworkEndpoints
		*out = make([]NetworkEndpointObservedState, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Symptoms != nil {
		in, out := &in.Symptoms, &out.Symptoms
		*out = make([]Symptom, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.QueuedResource != nil {
		in, out := &in.QueuedResource, &out.QueuedResource
		*out = new(string)
		**out = **in
	}
	if in.MultisliceNode != nil {
		in, out := &in.MultisliceNode, &out.MultisliceNode
		*out = new(bool)
		**out = **in
	}
	if in.Health != nil {
		in, out := &in.Health, &out.Health
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TPUVirtualMachineObservedState.
func (in *TPUVirtualMachineObservedState) DeepCopy() *TPUVirtualMachineObservedState {
	if in == nil {
		return nil
	}
	out := new(TPUVirtualMachineObservedState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TPUVirtualMachineSpec) DeepCopyInto(out *TPUVirtualMachineSpec) {
	*out = *in
	if in.ProjectRef != nil {
		in, out := &in.ProjectRef, &out.ProjectRef
		*out = new(v1beta1.ProjectRef)
		**out = **in
	}
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.AcceleratorType != nil {
		in, out := &in.AcceleratorType, &out.AcceleratorType
		*out = new(string)
		**out = **in
	}
	if in.RuntimeVersion != nil {
		in, out := &in.RuntimeVersion, &out.RuntimeVersion
		*out = new(string)
		**out = **in
	}
	if in.NetworkConfig != nil {
		in, out := &in.NetworkConfig, &out.NetworkConfig
		*out = new(NetworkConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkConfigs != nil {
		in, out := &in.NetworkConfigs, &out.NetworkConfigs
		*out = make([]NetworkConfig, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CIDRBlock != nil {
		in, out := &in.CIDRBlock, &out.CIDRBlock
		*out = new(string)
		**out = **in
	}
	if in.ServiceAccount != nil {
		in, out := &in.ServiceAccount, &out.ServiceAccount
		*out = new(ServiceAccount)
		(*in).DeepCopyInto(*out)
	}
	if in.SchedulingConfig != nil {
		in, out := &in.SchedulingConfig, &out.SchedulingConfig
		*out = new(SchedulingConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.DataDisks != nil {
		in, out := &in.DataDisks, &out.DataDisks
		*out = make([]AttachedDisk, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ShieldedInstanceConfig != nil {
		in, out := &in.ShieldedInstanceConfig, &out.ShieldedInstanceConfig
		*out = new(ShieldedInstanceConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.AcceleratorConfig != nil {
		in, out := &in.AcceleratorConfig, &out.AcceleratorConfig
		*out = new(AcceleratorConfig)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TPUVirtualMachineSpec.
func (in *TPUVirtualMachineSpec) DeepCopy() *TPUVirtualMachineSpec {
	if in == nil {
		return nil
	}
	out := new(TPUVirtualMachineSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TPUVirtualMachineStatus) DeepCopyInto(out *TPUVirtualMachineStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]k8sv1alpha1.Condition, len(*in))
		copy(*out, *in)
	}
	if in.ObservedGeneration != nil {
		in, out := &in.ObservedGeneration, &out.ObservedGeneration
		*out = new(int64)
		**out = **in
	}
	if in.ExternalRef != nil {
		in, out := &in.ExternalRef, &out.ExternalRef
		*out = new(string)
		**out = **in
	}
	if in.ObservedState != nil {
		in, out := &in.ObservedState, &out.ObservedState
		*out = new(TPUVirtualMachineObservedState)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TPUVirtualMachineStatus.
func (in *TPUVirtualMachineStatus) DeepCopy() *TPUVirtualMachineStatus {
	if in == nil {
		return nil
	}
	out := new(TPUVirtualMachineStatus)
	in.DeepCopyInto(out)
	return out
}
