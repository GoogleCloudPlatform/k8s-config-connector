// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package v1alpha1


// +kcc:proto=google.cloud.privilegedaccessmanager.v1.Grant
type Grant struct {
	// Identifier. Name of this grant.
	//  Possible formats:
	//
	//  * `organizations/{organization-number}/locations/{region}/entitlements/{entitlement-id}/grants/{grant-id}`
	//  * `folders/{folder-number}/locations/{region}/entitlements/{entitlement-id}/grants/{grant-id}`
	//  * `projects/{project-id|project-number}/locations/{region}/entitlements/{entitlement-id}/grants/{grant-id}`
	//
	//  The last segment of this name (`{grant-id}`) is autogenerated.
	// +kcc:proto:field=google.cloud.privilegedaccessmanager.v1.Grant.name
	Name *string `json:"name,omitempty"`

	// Required. The amount of time access is needed for. This value should be
	//  less than the `max_request_duration` value of the entitlement.
	// +kcc:proto:field=google.cloud.privilegedaccessmanager.v1.Grant.requested_duration
	RequestedDuration *string `json:"requestedDuration,omitempty"`

	// Optional. Justification of why this access is needed.
	// +kcc:proto:field=google.cloud.privilegedaccessmanager.v1.Grant.justification
	Justification *Justification `json:"justification,omitempty"`

	// Optional. Additional email addresses to notify for all the actions
	//  performed on the grant.
	// +kcc:proto:field=google.cloud.privilegedaccessmanager.v1.Grant.additional_email_recipients
	AdditionalEmailRecipients []string `json:"additionalEmailRecipients,omitempty"`
}

// +kcc:proto=google.cloud.privilegedaccessmanager.v1.Grant.AuditTrail
type Grant_AuditTrail struct {
}

// +kcc:proto=google.cloud.privilegedaccessmanager.v1.Grant.Timeline
type Grant_Timeline struct {
}

// +kcc:proto=google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event
type Grant_Timeline_Event struct {
	// The grant was requested.
	// +kcc:proto:field=google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event.requested
	Requested *Grant_Timeline_Event_Requested `json:"requested,omitempty"`

	// The grant was approved.
	// +kcc:proto:field=google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event.approved
	Approved *Grant_Timeline_Event_Approved `json:"approved,omitempty"`

	// The grant was denied.
	// +kcc:proto:field=google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event.denied
	Denied *Grant_Timeline_Event_Denied `json:"denied,omitempty"`

	// The grant was revoked.
	// +kcc:proto:field=google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event.revoked
	Revoked *Grant_Timeline_Event_Revoked `json:"revoked,omitempty"`

	// The grant has been scheduled to give access.
	// +kcc:proto:field=google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event.scheduled
	Scheduled *Grant_Timeline_Event_Scheduled `json:"scheduled,omitempty"`

	// The grant was successfully activated to give access.
	// +kcc:proto:field=google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event.activated
	Activated *Grant_Timeline_Event_Activated `json:"activated,omitempty"`

	// There was a non-retriable error while trying to give access.
	// +kcc:proto:field=google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event.activation_failed
	ActivationFailed *Grant_Timeline_Event_ActivationFailed `json:"activationFailed,omitempty"`

	// The approval workflow did not complete in the necessary duration,
	//  and so the grant is expired.
	// +kcc:proto:field=google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event.expired
	Expired *Grant_Timeline_Event_Expired `json:"expired,omitempty"`

	// Access given by the grant ended automatically as the approved
	//  duration was over.
	// +kcc:proto:field=google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event.ended
	Ended *Grant_Timeline_Event_Ended `json:"ended,omitempty"`

	// The policy bindings made by grant have been modified outside of PAM.
	// +kcc:proto:field=google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event.externally_modified
	ExternallyModified *Grant_Timeline_Event_ExternallyModified `json:"externallyModified,omitempty"`
}

// +kcc:proto=google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event.Activated
type Grant_Timeline_Event_Activated struct {
}

// +kcc:proto=google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event.ActivationFailed
type Grant_Timeline_Event_ActivationFailed struct {
}

// +kcc:proto=google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event.Approved
type Grant_Timeline_Event_Approved struct {
}

// +kcc:proto=google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event.Denied
type Grant_Timeline_Event_Denied struct {
}

// +kcc:proto=google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event.Ended
type Grant_Timeline_Event_Ended struct {
}

// +kcc:proto=google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event.Expired
type Grant_Timeline_Event_Expired struct {
}

// +kcc:proto=google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event.ExternallyModified
type Grant_Timeline_Event_ExternallyModified struct {
}

// +kcc:proto=google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event.Requested
type Grant_Timeline_Event_Requested struct {
}

// +kcc:proto=google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event.Revoked
type Grant_Timeline_Event_Revoked struct {
}

// +kcc:proto=google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event.Scheduled
type Grant_Timeline_Event_Scheduled struct {
}

// +kcc:proto=google.cloud.privilegedaccessmanager.v1.Justification
type Justification struct {
	// A free form textual justification. The system only ensures that this
	//  is not empty. No other kind of validation is performed on the string.
	// +kcc:proto:field=google.cloud.privilegedaccessmanager.v1.Justification.unstructured_justification
	UnstructuredJustification *string `json:"unstructuredJustification,omitempty"`
}

// +kcc:proto=google.cloud.privilegedaccessmanager.v1.PrivilegedAccess
type PrivilegedAccess struct {
	// Access to a Google Cloud resource through IAM.
	// +kcc:proto:field=google.cloud.privilegedaccessmanager.v1.PrivilegedAccess.gcp_iam_access
	GcpIamAccess *PrivilegedAccess_GcpIamAccess `json:"gcpIamAccess,omitempty"`
}

// +kcc:proto=google.cloud.privilegedaccessmanager.v1.PrivilegedAccess.GcpIamAccess
type PrivilegedAccess_GcpIamAccess struct {
	// Required. The type of this resource.
	// +kcc:proto:field=google.cloud.privilegedaccessmanager.v1.PrivilegedAccess.GcpIamAccess.resource_type
	ResourceType *string `json:"resourceType,omitempty"`

	// Required. Name of the resource.
	// +kcc:proto:field=google.cloud.privilegedaccessmanager.v1.PrivilegedAccess.GcpIamAccess.resource
	Resource *string `json:"resource,omitempty"`

	// Required. Role bindings that are created on successful grant.
	// +kcc:proto:field=google.cloud.privilegedaccessmanager.v1.PrivilegedAccess.GcpIamAccess.role_bindings
	RoleBindings []PrivilegedAccess_GcpIamAccess_RoleBinding `json:"roleBindings,omitempty"`
}

// +kcc:proto=google.cloud.privilegedaccessmanager.v1.PrivilegedAccess.GcpIamAccess.RoleBinding
type PrivilegedAccess_GcpIamAccess_RoleBinding struct {
	// Required. IAM role to be granted.
	//  https://cloud.google.com/iam/docs/roles-overview.
	// +kcc:proto:field=google.cloud.privilegedaccessmanager.v1.PrivilegedAccess.GcpIamAccess.RoleBinding.role
	Role *string `json:"role,omitempty"`

	// Optional. The expression field of the IAM condition to be associated
	//  with the role. If specified, a user with an active grant for this
	//  entitlement is able to access the resource only if this condition
	//  evaluates to true for their request.
	//
	//  This field uses the same CEL format as IAM and supports all attributes
	//  that IAM supports, except tags.
	//  https://cloud.google.com/iam/docs/conditions-overview#attributes.
	// +kcc:proto:field=google.cloud.privilegedaccessmanager.v1.PrivilegedAccess.GcpIamAccess.RoleBinding.condition_expression
	ConditionExpression *string `json:"conditionExpression,omitempty"`
}

// +kcc:proto=google.protobuf.Any
type Any struct {
	// A URL/resource name that uniquely identifies the type of the serialized
	//  protocol buffer message. This string must contain at least
	//  one "/" character. The last segment of the URL's path must represent
	//  the fully qualified name of the type (as in
	//  `path/google.protobuf.Duration`). The name should be in a canonical form
	//  (e.g., leading "." is not accepted).
	//
	//  In practice, teams usually precompile into the binary all types that they
	//  expect it to use in the context of Any. However, for URLs which use the
	//  scheme `http`, `https`, or no scheme, one can optionally set up a type
	//  server that maps type URLs to message definitions as follows:
	//
	//  * If no scheme is provided, `https` is assumed.
	//  * An HTTP GET on the URL must yield a [google.protobuf.Type][]
	//    value in binary format, or produce an error.
	//  * Applications are allowed to cache lookup results based on the
	//    URL, or have them precompiled into a binary to avoid any
	//    lookup. Therefore, binary compatibility needs to be preserved
	//    on changes to types. (Use versioned type names to manage
	//    breaking changes.)
	//
	//  Note: this functionality is not currently available in the official
	//  protobuf release, and it is not used for type URLs beginning with
	//  type.googleapis.com.
	//
	//  Schemes other than `http`, `https` (or the empty scheme) might be
	//  used with implementation specific semantics.
	// +kcc:proto:field=google.protobuf.Any.type_url
	TypeURL *string `json:"typeURL,omitempty"`

	// Must be a valid serialized protocol buffer of the above specified type.
	// +kcc:proto:field=google.protobuf.Any.value
	Value []byte `json:"value,omitempty"`
}

// +kcc:proto=google.rpc.Status
type Status struct {
	// The status code, which should be an enum value of
	//  [google.rpc.Code][google.rpc.Code].
	// +kcc:proto:field=google.rpc.Status.code
	Code *int32 `json:"code,omitempty"`

	// A developer-facing error message, which should be in English. Any
	//  user-facing error message should be localized and sent in the
	//  [google.rpc.Status.details][google.rpc.Status.details] field, or localized
	//  by the client.
	// +kcc:proto:field=google.rpc.Status.message
	Message *string `json:"message,omitempty"`

	// A list of messages that carry the error details.  There is a common set of
	//  message types for APIs to use.
	// +kcc:proto:field=google.rpc.Status.details
	Details []Any `json:"details,omitempty"`
}

// +kcc:proto=google.cloud.privilegedaccessmanager.v1.Grant
type GrantObservedState struct {
	// Output only. Create time stamp.
	// +kcc:proto:field=google.cloud.privilegedaccessmanager.v1.Grant.create_time
	CreateTime *string `json:"createTime,omitempty"`

	// Output only. Update time stamp.
	// +kcc:proto:field=google.cloud.privilegedaccessmanager.v1.Grant.update_time
	UpdateTime *string `json:"updateTime,omitempty"`

	// Output only. Username of the user who created this grant.
	// +kcc:proto:field=google.cloud.privilegedaccessmanager.v1.Grant.requester
	Requester *string `json:"requester,omitempty"`

	// Output only. Current state of this grant.
	// +kcc:proto:field=google.cloud.privilegedaccessmanager.v1.Grant.state
	State *string `json:"state,omitempty"`

	// Output only. Timeline of this grant.
	// +kcc:proto:field=google.cloud.privilegedaccessmanager.v1.Grant.timeline
	Timeline *Grant_Timeline `json:"timeline,omitempty"`

	// Output only. The access that would be granted by this grant.
	// +kcc:proto:field=google.cloud.privilegedaccessmanager.v1.Grant.privileged_access
	PrivilegedAccess *PrivilegedAccess `json:"privilegedAccess,omitempty"`

	// Output only. Audit trail of access provided by this grant. If unspecified
	//  then access was never granted.
	// +kcc:proto:field=google.cloud.privilegedaccessmanager.v1.Grant.audit_trail
	AuditTrail *Grant_AuditTrail `json:"auditTrail,omitempty"`

	// Output only. Flag set by the PAM system to indicate that policy bindings
	//  made by this grant have been modified from outside PAM.
	//
	//  After it is set, this flag remains set forever irrespective of the grant
	//  state. A `true` value here indicates that PAM no longer has any certainty
	//  on the access a user has because of this grant.
	// +kcc:proto:field=google.cloud.privilegedaccessmanager.v1.Grant.externally_modified
	ExternallyModified *bool `json:"externallyModified,omitempty"`
}

// +kcc:proto=google.cloud.privilegedaccessmanager.v1.Grant.AuditTrail
type Grant_AuditTrailObservedState struct {
	// Output only. The time at which access was given.
	// +kcc:proto:field=google.cloud.privilegedaccessmanager.v1.Grant.AuditTrail.access_grant_time
	AccessGrantTime *string `json:"accessGrantTime,omitempty"`

	// Output only. The time at which the system removed access. This could be
	//  because of an automatic expiry or because of a revocation.
	//
	//  If unspecified, then access hasn't been removed yet.
	// +kcc:proto:field=google.cloud.privilegedaccessmanager.v1.Grant.AuditTrail.access_remove_time
	AccessRemoveTime *string `json:"accessRemoveTime,omitempty"`
}

// +kcc:proto=google.cloud.privilegedaccessmanager.v1.Grant.Timeline
type Grant_TimelineObservedState struct {
	// Output only. The events that have occurred on this grant. This list
	//  contains entries in the same order as they occurred. The first entry is
	//  always be of type `Requested` and there is always at least one entry in
	//  this array.
	// +kcc:proto:field=google.cloud.privilegedaccessmanager.v1.Grant.Timeline.events
	Events []Grant_Timeline_Event `json:"events,omitempty"`
}

// +kcc:proto=google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event
type Grant_Timeline_EventObservedState struct {
	// The grant was requested.
	// +kcc:proto:field=google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event.requested
	Requested *Grant_Timeline_Event_RequestedObservedState `json:"requested,omitempty"`

	// The grant was approved.
	// +kcc:proto:field=google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event.approved
	Approved *Grant_Timeline_Event_ApprovedObservedState `json:"approved,omitempty"`

	// The grant was denied.
	// +kcc:proto:field=google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event.denied
	Denied *Grant_Timeline_Event_DeniedObservedState `json:"denied,omitempty"`

	// The grant was revoked.
	// +kcc:proto:field=google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event.revoked
	Revoked *Grant_Timeline_Event_RevokedObservedState `json:"revoked,omitempty"`

	// The grant has been scheduled to give access.
	// +kcc:proto:field=google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event.scheduled
	Scheduled *Grant_Timeline_Event_ScheduledObservedState `json:"scheduled,omitempty"`

	// There was a non-retriable error while trying to give access.
	// +kcc:proto:field=google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event.activation_failed
	ActivationFailed *Grant_Timeline_Event_ActivationFailedObservedState `json:"activationFailed,omitempty"`

	// Output only. The time (as recorded at server) when this event occurred.
	// +kcc:proto:field=google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event.event_time
	EventTime *string `json:"eventTime,omitempty"`
}

// +kcc:proto=google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event.ActivationFailed
type Grant_Timeline_Event_ActivationFailedObservedState struct {
	// Output only. The error that occurred while activating the grant.
	// +kcc:proto:field=google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event.ActivationFailed.error
	Error *Status `json:"error,omitempty"`
}

// +kcc:proto=google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event.Approved
type Grant_Timeline_Event_ApprovedObservedState struct {
	// Output only. The reason provided by the approver for approving the
	//  grant.
	// +kcc:proto:field=google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event.Approved.reason
	Reason *string `json:"reason,omitempty"`

	// Output only. Username of the user who approved the grant.
	// +kcc:proto:field=google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event.Approved.actor
	Actor *string `json:"actor,omitempty"`
}

// +kcc:proto=google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event.Denied
type Grant_Timeline_Event_DeniedObservedState struct {
	// Output only. The reason provided by the approver for denying the
	//  grant.
	// +kcc:proto:field=google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event.Denied.reason
	Reason *string `json:"reason,omitempty"`

	// Output only. Username of the user who denied the grant.
	// +kcc:proto:field=google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event.Denied.actor
	Actor *string `json:"actor,omitempty"`
}

// +kcc:proto=google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event.Requested
type Grant_Timeline_Event_RequestedObservedState struct {
	// Output only. The time at which this grant expires unless the approval
	//  workflow completes. If omitted, then the request never expires.
	// +kcc:proto:field=google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event.Requested.expire_time
	ExpireTime *string `json:"expireTime,omitempty"`
}

// +kcc:proto=google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event.Revoked
type Grant_Timeline_Event_RevokedObservedState struct {
	// Output only. The reason provided by the user for revoking the grant.
	// +kcc:proto:field=google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event.Revoked.reason
	Reason *string `json:"reason,omitempty"`

	// Output only. Username of the user who revoked the grant.
	// +kcc:proto:field=google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event.Revoked.actor
	Actor *string `json:"actor,omitempty"`
}

// +kcc:proto=google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event.Scheduled
type Grant_Timeline_Event_ScheduledObservedState struct {
	// Output only. The time at which the access is granted.
	// +kcc:proto:field=google.cloud.privilegedaccessmanager.v1.Grant.Timeline.Event.Scheduled.scheduled_activation_time
	ScheduledActivationTime *string `json:"scheduledActivationTime,omitempty"`
}
