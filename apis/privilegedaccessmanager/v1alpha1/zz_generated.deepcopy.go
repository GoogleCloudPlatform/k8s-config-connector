//go:build !ignore_autogenerated

// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/GoogleCloudPlatform/k8s-config-connector/apis/refs/v1beta1"
	k8sv1alpha1 "github.com/GoogleCloudPlatform/k8s-config-connector/pkg/apis/k8s/v1alpha1"
	"k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessControlEntry) DeepCopyInto(out *AccessControlEntry) {
	*out = *in
	if in.Principals != nil {
		in, out := &in.Principals, &out.Principals
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessControlEntry.
func (in *AccessControlEntry) DeepCopy() *AccessControlEntry {
	if in == nil {
		return nil
	}
	out := new(AccessControlEntry)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AdditionalNotificationTargets) DeepCopyInto(out *AdditionalNotificationTargets) {
	*out = *in
	if in.AdminEmailRecipients != nil {
		in, out := &in.AdminEmailRecipients, &out.AdminEmailRecipients
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.RequesterEmailRecipients != nil {
		in, out := &in.RequesterEmailRecipients, &out.RequesterEmailRecipients
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AdditionalNotificationTargets.
func (in *AdditionalNotificationTargets) DeepCopy() *AdditionalNotificationTargets {
	if in == nil {
		return nil
	}
	out := new(AdditionalNotificationTargets)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApprovalWorkflow) DeepCopyInto(out *ApprovalWorkflow) {
	*out = *in
	if in.ManualApprovals != nil {
		in, out := &in.ManualApprovals, &out.ManualApprovals
		*out = new(ManualApprovals)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApprovalWorkflow.
func (in *ApprovalWorkflow) DeepCopy() *ApprovalWorkflow {
	if in == nil {
		return nil
	}
	out := new(ApprovalWorkflow)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GcpIamAccess) DeepCopyInto(out *GcpIamAccess) {
	*out = *in
	if in.ResourceType != nil {
		in, out := &in.ResourceType, &out.ResourceType
		*out = new(string)
		**out = **in
	}
	if in.ProjectRef != nil {
		in, out := &in.ProjectRef, &out.ProjectRef
		*out = new(v1beta1.ProjectRef)
		**out = **in
	}
	if in.FolderRef != nil {
		in, out := &in.FolderRef, &out.FolderRef
		*out = new(v1beta1.FolderRef)
		**out = **in
	}
	if in.OrganizationRef != nil {
		in, out := &in.OrganizationRef, &out.OrganizationRef
		*out = new(v1beta1.OrganizationRef)
		**out = **in
	}
	if in.RoleBindings != nil {
		in, out := &in.RoleBindings, &out.RoleBindings
		*out = make([]RoleBinding, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GcpIamAccess.
func (in *GcpIamAccess) DeepCopy() *GcpIamAccess {
	if in == nil {
		return nil
	}
	out := new(GcpIamAccess)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManualApprovals) DeepCopyInto(out *ManualApprovals) {
	*out = *in
	if in.RequireApproverJustification != nil {
		in, out := &in.RequireApproverJustification, &out.RequireApproverJustification
		*out = new(bool)
		**out = **in
	}
	if in.Steps != nil {
		in, out := &in.Steps, &out.Steps
		*out = make([]Step, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManualApprovals.
func (in *ManualApprovals) DeepCopy() *ManualApprovals {
	if in == nil {
		return nil
	}
	out := new(ManualApprovals)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivilegedAccess) DeepCopyInto(out *PrivilegedAccess) {
	*out = *in
	if in.GcpIAMAccess != nil {
		in, out := &in.GcpIAMAccess, &out.GcpIAMAccess
		*out = new(GcpIamAccess)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivilegedAccess.
func (in *PrivilegedAccess) DeepCopy() *PrivilegedAccess {
	if in == nil {
		return nil
	}
	out := new(PrivilegedAccess)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivilegedAccessManagerEntitlement) DeepCopyInto(out *PrivilegedAccessManagerEntitlement) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivilegedAccessManagerEntitlement.
func (in *PrivilegedAccessManagerEntitlement) DeepCopy() *PrivilegedAccessManagerEntitlement {
	if in == nil {
		return nil
	}
	out := new(PrivilegedAccessManagerEntitlement)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PrivilegedAccessManagerEntitlement) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivilegedAccessManagerEntitlementList) DeepCopyInto(out *PrivilegedAccessManagerEntitlementList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PrivilegedAccessManagerEntitlement, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivilegedAccessManagerEntitlementList.
func (in *PrivilegedAccessManagerEntitlementList) DeepCopy() *PrivilegedAccessManagerEntitlementList {
	if in == nil {
		return nil
	}
	out := new(PrivilegedAccessManagerEntitlementList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PrivilegedAccessManagerEntitlementList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivilegedAccessManagerEntitlementObservedState) DeepCopyInto(out *PrivilegedAccessManagerEntitlementObservedState) {
	*out = *in
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivilegedAccessManagerEntitlementObservedState.
func (in *PrivilegedAccessManagerEntitlementObservedState) DeepCopy() *PrivilegedAccessManagerEntitlementObservedState {
	if in == nil {
		return nil
	}
	out := new(PrivilegedAccessManagerEntitlementObservedState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivilegedAccessManagerEntitlementSpec) DeepCopyInto(out *PrivilegedAccessManagerEntitlementSpec) {
	*out = *in
	if in.ProjectRef != nil {
		in, out := &in.ProjectRef, &out.ProjectRef
		*out = new(v1beta1.ProjectRef)
		**out = **in
	}
	if in.FolderRef != nil {
		in, out := &in.FolderRef, &out.FolderRef
		*out = new(v1beta1.FolderRef)
		**out = **in
	}
	if in.OrganizationRef != nil {
		in, out := &in.OrganizationRef, &out.OrganizationRef
		*out = new(v1beta1.OrganizationRef)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
	if in.EligibleUsers != nil {
		in, out := &in.EligibleUsers, &out.EligibleUsers
		*out = make([]AccessControlEntry, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ApprovalWorkflow != nil {
		in, out := &in.ApprovalWorkflow, &out.ApprovalWorkflow
		*out = new(ApprovalWorkflow)
		(*in).DeepCopyInto(*out)
	}
	if in.MaxRequestDuration != nil {
		in, out := &in.MaxRequestDuration, &out.MaxRequestDuration
		*out = new(string)
		**out = **in
	}
	if in.PrivilegedAccess != nil {
		in, out := &in.PrivilegedAccess, &out.PrivilegedAccess
		*out = new(PrivilegedAccess)
		(*in).DeepCopyInto(*out)
	}
	if in.RequesterJustificationConfig != nil {
		in, out := &in.RequesterJustificationConfig, &out.RequesterJustificationConfig
		*out = new(RequesterJustificationConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.AdditionalNotificationTargets != nil {
		in, out := &in.AdditionalNotificationTargets, &out.AdditionalNotificationTargets
		*out = new(AdditionalNotificationTargets)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivilegedAccessManagerEntitlementSpec.
func (in *PrivilegedAccessManagerEntitlementSpec) DeepCopy() *PrivilegedAccessManagerEntitlementSpec {
	if in == nil {
		return nil
	}
	out := new(PrivilegedAccessManagerEntitlementSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivilegedAccessManagerEntitlementStatus) DeepCopyInto(out *PrivilegedAccessManagerEntitlementStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]k8sv1alpha1.Condition, len(*in))
		copy(*out, *in)
	}
	if in.ObservedGeneration != nil {
		in, out := &in.ObservedGeneration, &out.ObservedGeneration
		*out = new(int64)
		**out = **in
	}
	if in.ExternalRef != nil {
		in, out := &in.ExternalRef, &out.ExternalRef
		*out = new(string)
		**out = **in
	}
	if in.ObservedState != nil {
		in, out := &in.ObservedState, &out.ObservedState
		*out = new(PrivilegedAccessManagerEntitlementObservedState)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivilegedAccessManagerEntitlementStatus.
func (in *PrivilegedAccessManagerEntitlementStatus) DeepCopy() *PrivilegedAccessManagerEntitlementStatus {
	if in == nil {
		return nil
	}
	out := new(PrivilegedAccessManagerEntitlementStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequesterJustificationConfig) DeepCopyInto(out *RequesterJustificationConfig) {
	*out = *in
	if in.NotMandatory != nil {
		in, out := &in.NotMandatory, &out.NotMandatory
		*out = new(runtime.RawExtension)
		(*in).DeepCopyInto(*out)
	}
	if in.Unstructured != nil {
		in, out := &in.Unstructured, &out.Unstructured
		*out = new(runtime.RawExtension)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequesterJustificationConfig.
func (in *RequesterJustificationConfig) DeepCopy() *RequesterJustificationConfig {
	if in == nil {
		return nil
	}
	out := new(RequesterJustificationConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoleBinding) DeepCopyInto(out *RoleBinding) {
	*out = *in
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.ConditionExpression != nil {
		in, out := &in.ConditionExpression, &out.ConditionExpression
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoleBinding.
func (in *RoleBinding) DeepCopy() *RoleBinding {
	if in == nil {
		return nil
	}
	out := new(RoleBinding)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Step) DeepCopyInto(out *Step) {
	*out = *in
	if in.Approvers != nil {
		in, out := &in.Approvers, &out.Approvers
		*out = make([]AccessControlEntry, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ApprovalsNeeded != nil {
		in, out := &in.ApprovalsNeeded, &out.ApprovalsNeeded
		*out = new(int32)
		**out = **in
	}
	if in.ApproverEmailRecipients != nil {
		in, out := &in.ApproverEmailRecipients, &out.ApproverEmailRecipients
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Step.
func (in *Step) DeepCopy() *Step {
	if in == nil {
		return nil
	}
	out := new(Step)
	in.DeepCopyInto(out)
	return out
}
