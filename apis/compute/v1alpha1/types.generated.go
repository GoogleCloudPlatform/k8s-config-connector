// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package v1alpha1

// +kcc:proto=google.cloud.compute.v1.Interconnect
type Interconnect struct {
	// Administrative status of the interconnect. When this is set to true, the Interconnect is functional and can carry traffic. When set to false, no packets can be carried over the interconnect and no BGP routes are exchanged over it. By default, the status is set to true.
	// +kcc:proto:field=google.cloud.compute.v1.Interconnect.admin_enabled
	AdminEnabled *bool `json:"adminEnabled,omitempty"`

	// [Output only] List of features available for this Interconnect connection, which can take one of the following values: - IF_MACSEC If present then the Interconnect connection is provisioned on MACsec capable hardware ports. If not present then the Interconnect connection is provisioned on non-MACsec capable ports and MACsec isn't supported and enabling MACsec fails.
	//  Check the AvailableFeatures enum for the list of possible values.
	// +kcc:proto:field=google.cloud.compute.v1.Interconnect.available_features
	AvailableFeatures []string `json:"availableFeatures,omitempty"`

	// [Output Only] A list of CircuitInfo objects, that describe the individual circuits in this LAG.
	// +kcc:proto:field=google.cloud.compute.v1.Interconnect.circuit_infos
	CircuitInfos []InterconnectCircuitInfo `json:"circuitInfos,omitempty"`

	// [Output Only] Creation timestamp in RFC3339 text format.
	// +kcc:proto:field=google.cloud.compute.v1.Interconnect.creation_timestamp
	CreationTimestamp *string `json:"creationTimestamp,omitempty"`

	// Customer name, to put in the Letter of Authorization as the party authorized to request a crossconnect.
	// +kcc:proto:field=google.cloud.compute.v1.Interconnect.customer_name
	CustomerName *string `json:"customerName,omitempty"`

	// An optional description of this resource. Provide this property when you create the resource.
	// +kcc:proto:field=google.cloud.compute.v1.Interconnect.description
	Description *string `json:"description,omitempty"`

	// [Output Only] A list of outages expected for this Interconnect.
	// +kcc:proto:field=google.cloud.compute.v1.Interconnect.expected_outages
	ExpectedOutages []InterconnectOutageNotification `json:"expectedOutages,omitempty"`

	// [Output Only] IP address configured on the Google side of the Interconnect link. This can be used only for ping tests.
	// +kcc:proto:field=google.cloud.compute.v1.Interconnect.google_ip_address
	GoogleIPAddress *string `json:"googleIPAddress,omitempty"`

	// [Output Only] Google reference ID to be used when raising support tickets with Google or otherwise to debug backend connectivity issues.
	// +kcc:proto:field=google.cloud.compute.v1.Interconnect.google_reference_id
	GoogleReferenceID *string `json:"googleReferenceID,omitempty"`

	// [Output Only] The unique identifier for the resource. This identifier is defined by the server.
	// +kcc:proto:field=google.cloud.compute.v1.Interconnect.id
	ID *uint64 `json:"id,omitempty"`

	// [Output Only] A list of the URLs of all InterconnectAttachments configured to use this Interconnect.
	// +kcc:proto:field=google.cloud.compute.v1.Interconnect.interconnect_attachments
	InterconnectAttachments []string `json:"interconnectAttachments,omitempty"`

	// Type of interconnect, which can take one of the following values: - PARTNER: A partner-managed interconnection shared between customers though a partner. - DEDICATED: A dedicated physical interconnection with the customer. Note that a value IT_PRIVATE has been deprecated in favor of DEDICATED.
	//  Check the InterconnectType enum for the list of possible values.
	// +kcc:proto:field=google.cloud.compute.v1.Interconnect.interconnect_type
	InterconnectType *string `json:"interconnectType,omitempty"`

	// [Output Only] Type of the resource. Always compute#interconnect for interconnects.
	// +kcc:proto:field=google.cloud.compute.v1.Interconnect.kind
	Kind *string `json:"kind,omitempty"`

	// A fingerprint for the labels being applied to this Interconnect, which is essentially a hash of the labels set used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update labels. You must always provide an up-to-date fingerprint hash in order to update or change labels, otherwise the request will fail with error 412 conditionNotMet. To see the latest fingerprint, make a get() request to retrieve an Interconnect.
	// +kcc:proto:field=google.cloud.compute.v1.Interconnect.label_fingerprint
	LabelFingerprint *string `json:"labelFingerprint,omitempty"`

	// Labels for this resource. These can only be added or modified by the setLabels method. Each label key/value pair must comply with RFC1035. Label values may be empty.
	// +kcc:proto:field=google.cloud.compute.v1.Interconnect.labels
	Labels map[string]string `json:"labels,omitempty"`

	// Type of link requested, which can take one of the following values: - LINK_TYPE_ETHERNET_10G_LR: A 10G Ethernet with LR optics - LINK_TYPE_ETHERNET_100G_LR: A 100G Ethernet with LR optics. Note that this field indicates the speed of each of the links in the bundle, not the speed of the entire bundle.
	//  Check the LinkType enum for the list of possible values.
	// +kcc:proto:field=google.cloud.compute.v1.Interconnect.link_type
	LinkType *string `json:"linkType,omitempty"`

	// URL of the InterconnectLocation object that represents where this connection is to be provisioned.
	// +kcc:proto:field=google.cloud.compute.v1.Interconnect.location
	Location *string `json:"location,omitempty"`

	// Configuration that enables Media Access Control security (MACsec) on the Cloud Interconnect connection between Google and your on-premises router.
	// +kcc:proto:field=google.cloud.compute.v1.Interconnect.macsec
	Macsec *InterconnectMacsec `json:"macsec,omitempty"`

	// Enable or disable MACsec on this Interconnect connection. MACsec enablement fails if the MACsec object is not specified.
	// +kcc:proto:field=google.cloud.compute.v1.Interconnect.macsec_enabled
	MacsecEnabled *bool `json:"macsecEnabled,omitempty"`

	// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
	// +kcc:proto:field=google.cloud.compute.v1.Interconnect.name
	Name *string `json:"name,omitempty"`

	// Email address to contact the customer NOC for operations and maintenance notifications regarding this Interconnect. If specified, this will be used for notifications in addition to all other forms described, such as Cloud Monitoring logs alerting and Cloud Notifications. This field is required for users who sign up for Cloud Interconnect using workforce identity federation.
	// +kcc:proto:field=google.cloud.compute.v1.Interconnect.noc_contact_email
	NocContactEmail *string `json:"nocContactEmail,omitempty"`

	// [Output Only] The current status of this Interconnect's functionality, which can take one of the following values: - OS_ACTIVE: A valid Interconnect, which is turned up and is ready to use. Attachments may be provisioned on this Interconnect. - OS_UNPROVISIONED: An Interconnect that has not completed turnup. No attachments may be provisioned on this Interconnect. - OS_UNDER_MAINTENANCE: An Interconnect that is undergoing internal maintenance. No attachments may be provisioned or updated on this Interconnect.
	//  Check the OperationalStatus enum for the list of possible values.
	// +kcc:proto:field=google.cloud.compute.v1.Interconnect.operational_status
	OperationalStatus *string `json:"operationalStatus,omitempty"`

	// [Output Only] IP address configured on the customer side of the Interconnect link. The customer should configure this IP address during turnup when prompted by Google NOC. This can be used only for ping tests.
	// +kcc:proto:field=google.cloud.compute.v1.Interconnect.peer_ip_address
	PeerIPAddress *string `json:"peerIPAddress,omitempty"`

	// [Output Only] Number of links actually provisioned in this interconnect.
	// +kcc:proto:field=google.cloud.compute.v1.Interconnect.provisioned_link_count
	ProvisionedLinkCount *int32 `json:"provisionedLinkCount,omitempty"`

	// Indicates that this is a Cross-Cloud Interconnect. This field specifies the location outside of Google's network that the interconnect is connected to.
	// +kcc:proto:field=google.cloud.compute.v1.Interconnect.remote_location
	RemoteLocation *string `json:"remoteLocation,omitempty"`

	// Optional. List of features requested for this Interconnect connection, which can take one of the following values: - IF_MACSEC If specified then the connection is created on MACsec capable hardware ports. If not specified, the default value is false, which allocates non-MACsec capable ports first if available. This parameter can be provided only with Interconnect INSERT. It isn't valid for Interconnect PATCH.
	//  Check the RequestedFeatures enum for the list of possible values.
	// +kcc:proto:field=google.cloud.compute.v1.Interconnect.requested_features
	RequestedFeatures []string `json:"requestedFeatures,omitempty"`

	// Target number of physical links in the link bundle, as requested by the customer.
	// +kcc:proto:field=google.cloud.compute.v1.Interconnect.requested_link_count
	RequestedLinkCount *int32 `json:"requestedLinkCount,omitempty"`

	// [Output Only] Reserved for future use.
	// +kcc:proto:field=google.cloud.compute.v1.Interconnect.satisfies_pzs
	SatisfiesPzs *bool `json:"satisfiesPzs,omitempty"`

	// [Output Only] Server-defined URL for the resource.
	// +kcc:proto:field=google.cloud.compute.v1.Interconnect.self_link
	SelfLink *string `json:"selfLink,omitempty"`

	// [Output Only] The current state of Interconnect functionality, which can take one of the following values: - ACTIVE: The Interconnect is valid, turned up and ready to use. Attachments may be provisioned on this Interconnect. - UNPROVISIONED: The Interconnect has not completed turnup. No attachments may be provisioned on this Interconnect. - UNDER_MAINTENANCE: The Interconnect is undergoing internal maintenance. No attachments may be provisioned or updated on this Interconnect.
	//  Check the State enum for the list of possible values.
	// +kcc:proto:field=google.cloud.compute.v1.Interconnect.state
	State *string `json:"state,omitempty"`
}

// +kcc:proto=google.cloud.compute.v1.InterconnectCircuitInfo
type InterconnectCircuitInfo struct {
	// Customer-side demarc ID for this circuit.
	// +kcc:proto:field=google.cloud.compute.v1.InterconnectCircuitInfo.customer_demarc_id
	CustomerDemarcID *string `json:"customerDemarcID,omitempty"`

	// Google-assigned unique ID for this circuit. Assigned at circuit turn-up.
	// +kcc:proto:field=google.cloud.compute.v1.InterconnectCircuitInfo.google_circuit_id
	GoogleCircuitID *string `json:"googleCircuitID,omitempty"`

	// Google-side demarc ID for this circuit. Assigned at circuit turn-up and provided by Google to the customer in the LOA.
	// +kcc:proto:field=google.cloud.compute.v1.InterconnectCircuitInfo.google_demarc_id
	GoogleDemarcID *string `json:"googleDemarcID,omitempty"`
}

// +kcc:proto=google.cloud.compute.v1.InterconnectMacsec
type InterconnectMacsec struct {
	// If set to true, the Interconnect connection is configured with a should-secure MACsec security policy, that allows the Google router to fallback to cleartext traffic if the MKA session cannot be established. By default, the Interconnect connection is configured with a must-secure security policy that drops all traffic if the MKA session cannot be established with your router.
	// +kcc:proto:field=google.cloud.compute.v1.InterconnectMacsec.fail_open
	FailOpen *bool `json:"failOpen,omitempty"`

	// Required. A keychain placeholder describing a set of named key objects along with their start times. A MACsec CKN/CAK is generated for each key in the key chain. Google router automatically picks the key with the most recent startTime when establishing or re-establishing a MACsec secure link.
	// +kcc:proto:field=google.cloud.compute.v1.InterconnectMacsec.pre_shared_keys
	PreSharedKeys []InterconnectMacsecPreSharedKey `json:"preSharedKeys,omitempty"`
}

// +kcc:proto=google.cloud.compute.v1.InterconnectMacsecPreSharedKey
type InterconnectMacsecPreSharedKey struct {
	// Required. A name for this pre-shared key. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
	// +kcc:proto:field=google.cloud.compute.v1.InterconnectMacsecPreSharedKey.name
	Name *string `json:"name,omitempty"`

	// A RFC3339 timestamp on or after which the key is valid. startTime can be in the future. If the keychain has a single key, startTime can be omitted. If the keychain has multiple keys, startTime is mandatory for each key. The start times of keys must be in increasing order. The start times of two consecutive keys must be at least 6 hours apart.
	// +kcc:proto:field=google.cloud.compute.v1.InterconnectMacsecPreSharedKey.start_time
	StartTime *string `json:"startTime,omitempty"`
}

// +kcc:proto=google.cloud.compute.v1.InterconnectOutageNotification
type InterconnectOutageNotification struct {
	// If issue_type is IT_PARTIAL_OUTAGE, a list of the Google-side circuit IDs that will be affected.
	// +kcc:proto:field=google.cloud.compute.v1.InterconnectOutageNotification.affected_circuits
	AffectedCircuits []string `json:"affectedCircuits,omitempty"`

	// A description about the purpose of the outage.
	// +kcc:proto:field=google.cloud.compute.v1.InterconnectOutageNotification.description
	Description *string `json:"description,omitempty"`

	// Scheduled end time for the outage (milliseconds since Unix epoch).
	// +kcc:proto:field=google.cloud.compute.v1.InterconnectOutageNotification.end_time
	EndTime *int64 `json:"endTime,omitempty"`

	// Form this outage is expected to take, which can take one of the following values: - OUTAGE: The Interconnect may be completely out of service for some or all of the specified window. - PARTIAL_OUTAGE: Some circuits comprising the Interconnect as a whole should remain up, but with reduced bandwidth. Note that the versions of this enum prefixed with "IT_" have been deprecated in favor of the unprefixed values.
	//  Check the IssueType enum for the list of possible values.
	// +kcc:proto:field=google.cloud.compute.v1.InterconnectOutageNotification.issue_type
	IssueType *string `json:"issueType,omitempty"`

	// Unique identifier for this outage notification.
	// +kcc:proto:field=google.cloud.compute.v1.InterconnectOutageNotification.name
	Name *string `json:"name,omitempty"`

	// The party that generated this notification, which can take the following value: - GOOGLE: this notification as generated by Google. Note that the value of NSRC_GOOGLE has been deprecated in favor of GOOGLE.
	//  Check the Source enum for the list of possible values.
	// +kcc:proto:field=google.cloud.compute.v1.InterconnectOutageNotification.source
	Source *string `json:"source,omitempty"`

	// Scheduled start time for the outage (milliseconds since Unix epoch).
	// +kcc:proto:field=google.cloud.compute.v1.InterconnectOutageNotification.start_time
	StartTime *int64 `json:"startTime,omitempty"`

	// State of this notification, which can take one of the following values: - ACTIVE: This outage notification is active. The event could be in the past, present, or future. See start_time and end_time for scheduling. - CANCELLED: The outage associated with this notification was cancelled before the outage was due to start. - COMPLETED: The outage associated with this notification is complete. Note that the versions of this enum prefixed with "NS_" have been deprecated in favor of the unprefixed values.
	//  Check the State enum for the list of possible values.
	// +kcc:proto:field=google.cloud.compute.v1.InterconnectOutageNotification.state
	State *string `json:"state,omitempty"`
}

// +kcc:proto=google.cloud.compute.v1.NetworkAttachment
type NetworkAttachment struct {
	// [Output Only] An array of connections for all the producers connected to this network attachment.
	// +kcc:proto:field=google.cloud.compute.v1.NetworkAttachment.connection_endpoints
	ConnectionEndpoints []NetworkAttachmentConnectedEndpoint `json:"connectionEndpoints,omitempty"`

	// Check the ConnectionPreference enum for the list of possible values.
	// +kcc:proto:field=google.cloud.compute.v1.NetworkAttachment.connection_preference
	ConnectionPreference *string `json:"connectionPreference,omitempty"`

	// [Output Only] Creation timestamp in RFC3339 text format.
	// +kcc:proto:field=google.cloud.compute.v1.NetworkAttachment.creation_timestamp
	CreationTimestamp *string `json:"creationTimestamp,omitempty"`

	// An optional description of this resource. Provide this property when you create the resource.
	// +kcc:proto:field=google.cloud.compute.v1.NetworkAttachment.description
	Description *string `json:"description,omitempty"`

	// Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking. An up-to-date fingerprint must be provided in order to patch.
	// +kcc:proto:field=google.cloud.compute.v1.NetworkAttachment.fingerprint
	Fingerprint *string `json:"fingerprint,omitempty"`

	// [Output Only] The unique identifier for the resource type. The server generates this identifier.
	// +kcc:proto:field=google.cloud.compute.v1.NetworkAttachment.id
	ID *uint64 `json:"id,omitempty"`

	// [Output Only] Type of the resource.
	// +kcc:proto:field=google.cloud.compute.v1.NetworkAttachment.kind
	Kind *string `json:"kind,omitempty"`

	// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
	// +kcc:proto:field=google.cloud.compute.v1.NetworkAttachment.name
	Name *string `json:"name,omitempty"`

	// [Output Only] The URL of the network which the Network Attachment belongs to. Practically it is inferred by fetching the network of the first subnetwork associated. Because it is required that all the subnetworks must be from the same network, it is assured that the Network Attachment belongs to the same network as all the subnetworks.
	// +kcc:proto:field=google.cloud.compute.v1.NetworkAttachment.network
	Network *string `json:"network,omitempty"`

	// Projects that are allowed to connect to this network attachment. The project can be specified using its id or number.
	// +kcc:proto:field=google.cloud.compute.v1.NetworkAttachment.producer_accept_lists
	ProducerAcceptLists []string `json:"producerAcceptLists,omitempty"`

	// Projects that are not allowed to connect to this network attachment. The project can be specified using its id or number.
	// +kcc:proto:field=google.cloud.compute.v1.NetworkAttachment.producer_reject_lists
	ProducerRejectLists []string `json:"producerRejectLists,omitempty"`

	// [Output Only] URL of the region where the network attachment resides. This field applies only to the region resource. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body.
	// +kcc:proto:field=google.cloud.compute.v1.NetworkAttachment.region
	Region *string `json:"region,omitempty"`

	// [Output Only] Server-defined URL for the resource.
	// +kcc:proto:field=google.cloud.compute.v1.NetworkAttachment.self_link
	SelfLink *string `json:"selfLink,omitempty"`

	// [Output Only] Server-defined URL for this resource's resource id.
	// +kcc:proto:field=google.cloud.compute.v1.NetworkAttachment.self_link_with_id
	SelfLinkWithID *string `json:"selfLinkWithID,omitempty"`

	// An array of URLs where each entry is the URL of a subnet provided by the service consumer to use for endpoints in the producers that connect to this network attachment.
	// +kcc:proto:field=google.cloud.compute.v1.NetworkAttachment.subnetworks
	Subnetworks []string `json:"subnetworks,omitempty"`
}

// +kcc:proto=google.cloud.compute.v1.NetworkAttachmentConnectedEndpoint
type NetworkAttachmentConnectedEndpoint struct {
	// The IPv4 address assigned to the producer instance network interface. This value will be a range in case of Serverless.
	// +kcc:proto:field=google.cloud.compute.v1.NetworkAttachmentConnectedEndpoint.ip_address
	IPAddress *string `json:"ipAddress,omitempty"`

	// The IPv6 address assigned to the producer instance network interface. This is only assigned when the stack types of both the instance network interface and the consumer subnet are IPv4_IPv6.
	// +kcc:proto:field=google.cloud.compute.v1.NetworkAttachmentConnectedEndpoint.ipv6_address
	IPV6Address *string `json:"ipv6Address,omitempty"`

	// The project id or number of the interface to which the IP was assigned.
	// +kcc:proto:field=google.cloud.compute.v1.NetworkAttachmentConnectedEndpoint.project_id_or_num
	ProjectIDOrNum *string `json:"projectIDOrNum,omitempty"`

	// Alias IP ranges from the same subnetwork.
	// +kcc:proto:field=google.cloud.compute.v1.NetworkAttachmentConnectedEndpoint.secondary_ip_cidr_ranges
	SecondaryIPCIDRRanges []string `json:"secondaryIPCIDRRanges,omitempty"`

	// The status of a connected endpoint to this network attachment.
	//  Check the Status enum for the list of possible values.
	// +kcc:proto:field=google.cloud.compute.v1.NetworkAttachmentConnectedEndpoint.status
	Status *string `json:"status,omitempty"`

	// The subnetwork used to assign the IP to the producer instance network interface.
	// +kcc:proto:field=google.cloud.compute.v1.NetworkAttachmentConnectedEndpoint.subnetwork
	Subnetwork *string `json:"subnetwork,omitempty"`

	// [Output Only] The CIDR range of the subnet from which the IPv4 internal IP was allocated from.
	// +kcc:proto:field=google.cloud.compute.v1.NetworkAttachmentConnectedEndpoint.subnetwork_cidr_range
	SubnetworkCIDRRange *string `json:"subnetworkCIDRRange,omitempty"`
}

// +kcc:proto=google.cloud.compute.v1.NetworkEdgeSecurityService
type NetworkEdgeSecurityService struct {
	// [Output Only] Creation timestamp in RFC3339 text format.
	// +kcc:proto:field=google.cloud.compute.v1.NetworkEdgeSecurityService.creation_timestamp
	CreationTimestamp *string `json:"creationTimestamp,omitempty"`

	// An optional description of this resource. Provide this property when you create the resource.
	// +kcc:proto:field=google.cloud.compute.v1.NetworkEdgeSecurityService.description
	Description *string `json:"description,omitempty"`

	// Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking. This field will be ignored when inserting a NetworkEdgeSecurityService. An up-to-date fingerprint must be provided in order to update the NetworkEdgeSecurityService, otherwise the request will fail with error 412 conditionNotMet. To see the latest fingerprint, make a get() request to retrieve a NetworkEdgeSecurityService.
	// +kcc:proto:field=google.cloud.compute.v1.NetworkEdgeSecurityService.fingerprint
	Fingerprint *string `json:"fingerprint,omitempty"`

	// [Output Only] The unique identifier for the resource. This identifier is defined by the server.
	// +kcc:proto:field=google.cloud.compute.v1.NetworkEdgeSecurityService.id
	ID *uint64 `json:"id,omitempty"`

	// [Output only] Type of the resource. Always compute#networkEdgeSecurityService for NetworkEdgeSecurityServices
	// +kcc:proto:field=google.cloud.compute.v1.NetworkEdgeSecurityService.kind
	Kind *string `json:"kind,omitempty"`

	// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
	// +kcc:proto:field=google.cloud.compute.v1.NetworkEdgeSecurityService.name
	Name *string `json:"name,omitempty"`

	// [Output Only] URL of the region where the resource resides. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body.
	// +kcc:proto:field=google.cloud.compute.v1.NetworkEdgeSecurityService.region
	Region *string `json:"region,omitempty"`

	// The resource URL for the network edge security service associated with this network edge security service.
	// +kcc:proto:field=google.cloud.compute.v1.NetworkEdgeSecurityService.security_policy
	SecurityPolicy *string `json:"securityPolicy,omitempty"`

	// [Output Only] Server-defined URL for the resource.
	// +kcc:proto:field=google.cloud.compute.v1.NetworkEdgeSecurityService.self_link
	SelfLink *string `json:"selfLink,omitempty"`

	// [Output Only] Server-defined URL for this resource with the resource id.
	// +kcc:proto:field=google.cloud.compute.v1.NetworkEdgeSecurityService.self_link_with_id
	SelfLinkWithID *string `json:"selfLinkWithID,omitempty"`
}
