//go:build !ignore_autogenerated

// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	computev1beta1 "github.com/GoogleCloudPlatform/k8s-config-connector/apis/compute/v1beta1"
	"github.com/GoogleCloudPlatform/k8s-config-connector/apis/refs/v1beta1"
	k8sv1alpha1 "github.com/GoogleCloudPlatform/k8s-config-connector/pkg/apis/k8s/v1alpha1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComputeInterconnect) DeepCopyInto(out *ComputeInterconnect) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComputeInterconnect.
func (in *ComputeInterconnect) DeepCopy() *ComputeInterconnect {
	if in == nil {
		return nil
	}
	out := new(ComputeInterconnect)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ComputeInterconnect) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComputeInterconnectList) DeepCopyInto(out *ComputeInterconnectList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ComputeInterconnect, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComputeInterconnectList.
func (in *ComputeInterconnectList) DeepCopy() *ComputeInterconnectList {
	if in == nil {
		return nil
	}
	out := new(ComputeInterconnectList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ComputeInterconnectList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComputeInterconnectObservedState) DeepCopyInto(out *ComputeInterconnectObservedState) {
	*out = *in
	if in.AvailableFeatures != nil {
		in, out := &in.AvailableFeatures, &out.AvailableFeatures
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.CircuitInfos != nil {
		in, out := &in.CircuitInfos, &out.CircuitInfos
		*out = make([]InterconnectCircuitInfo, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CreationTimestamp != nil {
		in, out := &in.CreationTimestamp, &out.CreationTimestamp
		*out = new(string)
		**out = **in
	}
	if in.ExpectedOutages != nil {
		in, out := &in.ExpectedOutages, &out.ExpectedOutages
		*out = make([]InterconnectOutageNotification, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GoogleIPAddress != nil {
		in, out := &in.GoogleIPAddress, &out.GoogleIPAddress
		*out = new(string)
		**out = **in
	}
	if in.GoogleReferenceID != nil {
		in, out := &in.GoogleReferenceID, &out.GoogleReferenceID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(uint64)
		**out = **in
	}
	if in.InterconnectAttachments != nil {
		in, out := &in.InterconnectAttachments, &out.InterconnectAttachments
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.OperationalStatus != nil {
		in, out := &in.OperationalStatus, &out.OperationalStatus
		*out = new(string)
		**out = **in
	}
	if in.PeerIPAddress != nil {
		in, out := &in.PeerIPAddress, &out.PeerIPAddress
		*out = new(string)
		**out = **in
	}
	if in.ProvisionedLinkCount != nil {
		in, out := &in.ProvisionedLinkCount, &out.ProvisionedLinkCount
		*out = new(int32)
		**out = **in
	}
	if in.SatisfiesPzs != nil {
		in, out := &in.SatisfiesPzs, &out.SatisfiesPzs
		*out = new(bool)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComputeInterconnectObservedState.
func (in *ComputeInterconnectObservedState) DeepCopy() *ComputeInterconnectObservedState {
	if in == nil {
		return nil
	}
	out := new(ComputeInterconnectObservedState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComputeInterconnectSpec) DeepCopyInto(out *ComputeInterconnectSpec) {
	*out = *in
	in.Parent.DeepCopyInto(&out.Parent)
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
	if in.AdminEnabled != nil {
		in, out := &in.AdminEnabled, &out.AdminEnabled
		*out = new(bool)
		**out = **in
	}
	if in.CustomerName != nil {
		in, out := &in.CustomerName, &out.CustomerName
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.InterconnectType != nil {
		in, out := &in.InterconnectType, &out.InterconnectType
		*out = new(string)
		**out = **in
	}
	if in.LabelFingerprint != nil {
		in, out := &in.LabelFingerprint, &out.LabelFingerprint
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.LinkType != nil {
		in, out := &in.LinkType, &out.LinkType
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Macsec != nil {
		in, out := &in.Macsec, &out.Macsec
		*out = new(InterconnectMacsec)
		(*in).DeepCopyInto(*out)
	}
	if in.MacsecEnabled != nil {
		in, out := &in.MacsecEnabled, &out.MacsecEnabled
		*out = new(bool)
		**out = **in
	}
	if in.NocContactEmail != nil {
		in, out := &in.NocContactEmail, &out.NocContactEmail
		*out = new(string)
		**out = **in
	}
	if in.RemoteLocation != nil {
		in, out := &in.RemoteLocation, &out.RemoteLocation
		*out = new(string)
		**out = **in
	}
	if in.RequestedFeatures != nil {
		in, out := &in.RequestedFeatures, &out.RequestedFeatures
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.RequestedLinkCount != nil {
		in, out := &in.RequestedLinkCount, &out.RequestedLinkCount
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComputeInterconnectSpec.
func (in *ComputeInterconnectSpec) DeepCopy() *ComputeInterconnectSpec {
	if in == nil {
		return nil
	}
	out := new(ComputeInterconnectSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComputeInterconnectStatus) DeepCopyInto(out *ComputeInterconnectStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]k8sv1alpha1.Condition, len(*in))
		copy(*out, *in)
	}
	if in.ObservedGeneration != nil {
		in, out := &in.ObservedGeneration, &out.ObservedGeneration
		*out = new(int64)
		**out = **in
	}
	if in.ExternalRef != nil {
		in, out := &in.ExternalRef, &out.ExternalRef
		*out = new(string)
		**out = **in
	}
	if in.ObservedState != nil {
		in, out := &in.ObservedState, &out.ObservedState
		*out = new(ComputeInterconnectObservedState)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComputeInterconnectStatus.
func (in *ComputeInterconnectStatus) DeepCopy() *ComputeInterconnectStatus {
	if in == nil {
		return nil
	}
	out := new(ComputeInterconnectStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComputeNetworkAttachment) DeepCopyInto(out *ComputeNetworkAttachment) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComputeNetworkAttachment.
func (in *ComputeNetworkAttachment) DeepCopy() *ComputeNetworkAttachment {
	if in == nil {
		return nil
	}
	out := new(ComputeNetworkAttachment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ComputeNetworkAttachment) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComputeNetworkAttachmentList) DeepCopyInto(out *ComputeNetworkAttachmentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ComputeNetworkAttachment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComputeNetworkAttachmentList.
func (in *ComputeNetworkAttachmentList) DeepCopy() *ComputeNetworkAttachmentList {
	if in == nil {
		return nil
	}
	out := new(ComputeNetworkAttachmentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ComputeNetworkAttachmentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComputeNetworkAttachmentObservedState) DeepCopyInto(out *ComputeNetworkAttachmentObservedState) {
	*out = *in
	if in.ConnectionEndpoints != nil {
		in, out := &in.ConnectionEndpoints, &out.ConnectionEndpoints
		*out = make([]NetworkAttachmentConnectedEndpoint, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CreationTimestamp != nil {
		in, out := &in.CreationTimestamp, &out.CreationTimestamp
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(uint64)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.SelfLinkWithID != nil {
		in, out := &in.SelfLinkWithID, &out.SelfLinkWithID
		*out = new(string)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComputeNetworkAttachmentObservedState.
func (in *ComputeNetworkAttachmentObservedState) DeepCopy() *ComputeNetworkAttachmentObservedState {
	if in == nil {
		return nil
	}
	out := new(ComputeNetworkAttachmentObservedState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComputeNetworkAttachmentParent) DeepCopyInto(out *ComputeNetworkAttachmentParent) {
	*out = *in
	if in.ProjectRef != nil {
		in, out := &in.ProjectRef, &out.ProjectRef
		*out = new(v1beta1.ProjectRef)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComputeNetworkAttachmentParent.
func (in *ComputeNetworkAttachmentParent) DeepCopy() *ComputeNetworkAttachmentParent {
	if in == nil {
		return nil
	}
	out := new(ComputeNetworkAttachmentParent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComputeNetworkAttachmentRef) DeepCopyInto(out *ComputeNetworkAttachmentRef) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComputeNetworkAttachmentRef.
func (in *ComputeNetworkAttachmentRef) DeepCopy() *ComputeNetworkAttachmentRef {
	if in == nil {
		return nil
	}
	out := new(ComputeNetworkAttachmentRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComputeNetworkAttachmentSpec) DeepCopyInto(out *ComputeNetworkAttachmentSpec) {
	*out = *in
	in.ComputeNetworkAttachmentParent.DeepCopyInto(&out.ComputeNetworkAttachmentParent)
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
	if in.ConnectionPreference != nil {
		in, out := &in.ConnectionPreference, &out.ConnectionPreference
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Fingerprint != nil {
		in, out := &in.Fingerprint, &out.Fingerprint
		*out = new(string)
		**out = **in
	}
	if in.ProducerAcceptLists != nil {
		in, out := &in.ProducerAcceptLists, &out.ProducerAcceptLists
		*out = make([]*v1beta1.ProjectRef, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(v1beta1.ProjectRef)
				**out = **in
			}
		}
	}
	if in.ProducerRejectLists != nil {
		in, out := &in.ProducerRejectLists, &out.ProducerRejectLists
		*out = make([]*v1beta1.ProjectRef, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(v1beta1.ProjectRef)
				**out = **in
			}
		}
	}
	if in.SubnetworkRefs != nil {
		in, out := &in.SubnetworkRefs, &out.SubnetworkRefs
		*out = make([]*v1beta1.ComputeSubnetworkRef, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(v1beta1.ComputeSubnetworkRef)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComputeNetworkAttachmentSpec.
func (in *ComputeNetworkAttachmentSpec) DeepCopy() *ComputeNetworkAttachmentSpec {
	if in == nil {
		return nil
	}
	out := new(ComputeNetworkAttachmentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComputeNetworkAttachmentStatus) DeepCopyInto(out *ComputeNetworkAttachmentStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]k8sv1alpha1.Condition, len(*in))
		copy(*out, *in)
	}
	if in.ObservedGeneration != nil {
		in, out := &in.ObservedGeneration, &out.ObservedGeneration
		*out = new(int64)
		**out = **in
	}
	if in.ExternalRef != nil {
		in, out := &in.ExternalRef, &out.ExternalRef
		*out = new(string)
		**out = **in
	}
	if in.ObservedState != nil {
		in, out := &in.ObservedState, &out.ObservedState
		*out = new(ComputeNetworkAttachmentObservedState)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComputeNetworkAttachmentStatus.
func (in *ComputeNetworkAttachmentStatus) DeepCopy() *ComputeNetworkAttachmentStatus {
	if in == nil {
		return nil
	}
	out := new(ComputeNetworkAttachmentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComputeNetworkEdgeSecurityService) DeepCopyInto(out *ComputeNetworkEdgeSecurityService) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComputeNetworkEdgeSecurityService.
func (in *ComputeNetworkEdgeSecurityService) DeepCopy() *ComputeNetworkEdgeSecurityService {
	if in == nil {
		return nil
	}
	out := new(ComputeNetworkEdgeSecurityService)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ComputeNetworkEdgeSecurityService) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComputeNetworkEdgeSecurityServiceList) DeepCopyInto(out *ComputeNetworkEdgeSecurityServiceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ComputeNetworkEdgeSecurityService, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComputeNetworkEdgeSecurityServiceList.
func (in *ComputeNetworkEdgeSecurityServiceList) DeepCopy() *ComputeNetworkEdgeSecurityServiceList {
	if in == nil {
		return nil
	}
	out := new(ComputeNetworkEdgeSecurityServiceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ComputeNetworkEdgeSecurityServiceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComputeNetworkEdgeSecurityServiceObservedState) DeepCopyInto(out *ComputeNetworkEdgeSecurityServiceObservedState) {
	*out = *in
	if in.CreationTimestamp != nil {
		in, out := &in.CreationTimestamp, &out.CreationTimestamp
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(uint64)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.SelfLinkWithID != nil {
		in, out := &in.SelfLinkWithID, &out.SelfLinkWithID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComputeNetworkEdgeSecurityServiceObservedState.
func (in *ComputeNetworkEdgeSecurityServiceObservedState) DeepCopy() *ComputeNetworkEdgeSecurityServiceObservedState {
	if in == nil {
		return nil
	}
	out := new(ComputeNetworkEdgeSecurityServiceObservedState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComputeNetworkEdgeSecurityServiceParent) DeepCopyInto(out *ComputeNetworkEdgeSecurityServiceParent) {
	*out = *in
	if in.ProjectRef != nil {
		in, out := &in.ProjectRef, &out.ProjectRef
		*out = new(v1beta1.ProjectRef)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComputeNetworkEdgeSecurityServiceParent.
func (in *ComputeNetworkEdgeSecurityServiceParent) DeepCopy() *ComputeNetworkEdgeSecurityServiceParent {
	if in == nil {
		return nil
	}
	out := new(ComputeNetworkEdgeSecurityServiceParent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComputeNetworkEdgeSecurityServiceSpec) DeepCopyInto(out *ComputeNetworkEdgeSecurityServiceSpec) {
	*out = *in
	in.ComputeNetworkEdgeSecurityServiceParent.DeepCopyInto(&out.ComputeNetworkEdgeSecurityServiceParent)
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Fingerprint != nil {
		in, out := &in.Fingerprint, &out.Fingerprint
		*out = new(string)
		**out = **in
	}
	if in.SecurityPolicyRef != nil {
		in, out := &in.SecurityPolicyRef, &out.SecurityPolicyRef
		*out = new(computev1beta1.ComputeSecurityPolicyRef)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComputeNetworkEdgeSecurityServiceSpec.
func (in *ComputeNetworkEdgeSecurityServiceSpec) DeepCopy() *ComputeNetworkEdgeSecurityServiceSpec {
	if in == nil {
		return nil
	}
	out := new(ComputeNetworkEdgeSecurityServiceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComputeNetworkEdgeSecurityServiceStatus) DeepCopyInto(out *ComputeNetworkEdgeSecurityServiceStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]k8sv1alpha1.Condition, len(*in))
		copy(*out, *in)
	}
	if in.ObservedGeneration != nil {
		in, out := &in.ObservedGeneration, &out.ObservedGeneration
		*out = new(int64)
		**out = **in
	}
	if in.ExternalRef != nil {
		in, out := &in.ExternalRef, &out.ExternalRef
		*out = new(string)
		**out = **in
	}
	if in.ObservedState != nil {
		in, out := &in.ObservedState, &out.ObservedState
		*out = new(ComputeNetworkEdgeSecurityServiceObservedState)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComputeNetworkEdgeSecurityServiceStatus.
func (in *ComputeNetworkEdgeSecurityServiceStatus) DeepCopy() *ComputeNetworkEdgeSecurityServiceStatus {
	if in == nil {
		return nil
	}
	out := new(ComputeNetworkEdgeSecurityServiceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Interconnect) DeepCopyInto(out *Interconnect) {
	*out = *in
	if in.AdminEnabled != nil {
		in, out := &in.AdminEnabled, &out.AdminEnabled
		*out = new(bool)
		**out = **in
	}
	if in.AvailableFeatures != nil {
		in, out := &in.AvailableFeatures, &out.AvailableFeatures
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.CircuitInfos != nil {
		in, out := &in.CircuitInfos, &out.CircuitInfos
		*out = make([]InterconnectCircuitInfo, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CreationTimestamp != nil {
		in, out := &in.CreationTimestamp, &out.CreationTimestamp
		*out = new(string)
		**out = **in
	}
	if in.CustomerName != nil {
		in, out := &in.CustomerName, &out.CustomerName
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ExpectedOutages != nil {
		in, out := &in.ExpectedOutages, &out.ExpectedOutages
		*out = make([]InterconnectOutageNotification, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GoogleIPAddress != nil {
		in, out := &in.GoogleIPAddress, &out.GoogleIPAddress
		*out = new(string)
		**out = **in
	}
	if in.GoogleReferenceID != nil {
		in, out := &in.GoogleReferenceID, &out.GoogleReferenceID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(uint64)
		**out = **in
	}
	if in.InterconnectAttachments != nil {
		in, out := &in.InterconnectAttachments, &out.InterconnectAttachments
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.InterconnectType != nil {
		in, out := &in.InterconnectType, &out.InterconnectType
		*out = new(string)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.LabelFingerprint != nil {
		in, out := &in.LabelFingerprint, &out.LabelFingerprint
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.LinkType != nil {
		in, out := &in.LinkType, &out.LinkType
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Macsec != nil {
		in, out := &in.Macsec, &out.Macsec
		*out = new(InterconnectMacsec)
		(*in).DeepCopyInto(*out)
	}
	if in.MacsecEnabled != nil {
		in, out := &in.MacsecEnabled, &out.MacsecEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NocContactEmail != nil {
		in, out := &in.NocContactEmail, &out.NocContactEmail
		*out = new(string)
		**out = **in
	}
	if in.OperationalStatus != nil {
		in, out := &in.OperationalStatus, &out.OperationalStatus
		*out = new(string)
		**out = **in
	}
	if in.PeerIPAddress != nil {
		in, out := &in.PeerIPAddress, &out.PeerIPAddress
		*out = new(string)
		**out = **in
	}
	if in.ProvisionedLinkCount != nil {
		in, out := &in.ProvisionedLinkCount, &out.ProvisionedLinkCount
		*out = new(int32)
		**out = **in
	}
	if in.RemoteLocation != nil {
		in, out := &in.RemoteLocation, &out.RemoteLocation
		*out = new(string)
		**out = **in
	}
	if in.RequestedFeatures != nil {
		in, out := &in.RequestedFeatures, &out.RequestedFeatures
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.RequestedLinkCount != nil {
		in, out := &in.RequestedLinkCount, &out.RequestedLinkCount
		*out = new(int32)
		**out = **in
	}
	if in.SatisfiesPzs != nil {
		in, out := &in.SatisfiesPzs, &out.SatisfiesPzs
		*out = new(bool)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Interconnect.
func (in *Interconnect) DeepCopy() *Interconnect {
	if in == nil {
		return nil
	}
	out := new(Interconnect)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InterconnectCircuitInfo) DeepCopyInto(out *InterconnectCircuitInfo) {
	*out = *in
	if in.CustomerDemarcID != nil {
		in, out := &in.CustomerDemarcID, &out.CustomerDemarcID
		*out = new(string)
		**out = **in
	}
	if in.GoogleCircuitID != nil {
		in, out := &in.GoogleCircuitID, &out.GoogleCircuitID
		*out = new(string)
		**out = **in
	}
	if in.GoogleDemarcID != nil {
		in, out := &in.GoogleDemarcID, &out.GoogleDemarcID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InterconnectCircuitInfo.
func (in *InterconnectCircuitInfo) DeepCopy() *InterconnectCircuitInfo {
	if in == nil {
		return nil
	}
	out := new(InterconnectCircuitInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InterconnectIdentity) DeepCopyInto(out *InterconnectIdentity) {
	*out = *in
	if in.parent != nil {
		in, out := &in.parent, &out.parent
		*out = new(InterconnectParent)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InterconnectIdentity.
func (in *InterconnectIdentity) DeepCopy() *InterconnectIdentity {
	if in == nil {
		return nil
	}
	out := new(InterconnectIdentity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InterconnectMacsec) DeepCopyInto(out *InterconnectMacsec) {
	*out = *in
	if in.FailOpen != nil {
		in, out := &in.FailOpen, &out.FailOpen
		*out = new(bool)
		**out = **in
	}
	if in.PreSharedKeys != nil {
		in, out := &in.PreSharedKeys, &out.PreSharedKeys
		*out = make([]InterconnectMacsecPreSharedKey, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InterconnectMacsec.
func (in *InterconnectMacsec) DeepCopy() *InterconnectMacsec {
	if in == nil {
		return nil
	}
	out := new(InterconnectMacsec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InterconnectMacsecPreSharedKey) DeepCopyInto(out *InterconnectMacsecPreSharedKey) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InterconnectMacsecPreSharedKey.
func (in *InterconnectMacsecPreSharedKey) DeepCopy() *InterconnectMacsecPreSharedKey {
	if in == nil {
		return nil
	}
	out := new(InterconnectMacsecPreSharedKey)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InterconnectOutageNotification) DeepCopyInto(out *InterconnectOutageNotification) {
	*out = *in
	if in.AffectedCircuits != nil {
		in, out := &in.AffectedCircuits, &out.AffectedCircuits
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EndTime != nil {
		in, out := &in.EndTime, &out.EndTime
		*out = new(int64)
		**out = **in
	}
	if in.IssueType != nil {
		in, out := &in.IssueType, &out.IssueType
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(int64)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InterconnectOutageNotification.
func (in *InterconnectOutageNotification) DeepCopy() *InterconnectOutageNotification {
	if in == nil {
		return nil
	}
	out := new(InterconnectOutageNotification)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InterconnectParent) DeepCopyInto(out *InterconnectParent) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InterconnectParent.
func (in *InterconnectParent) DeepCopy() *InterconnectParent {
	if in == nil {
		return nil
	}
	out := new(InterconnectParent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InterconnectRef) DeepCopyInto(out *InterconnectRef) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InterconnectRef.
func (in *InterconnectRef) DeepCopy() *InterconnectRef {
	if in == nil {
		return nil
	}
	out := new(InterconnectRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkAttachment) DeepCopyInto(out *NetworkAttachment) {
	*out = *in
	if in.ConnectionEndpoints != nil {
		in, out := &in.ConnectionEndpoints, &out.ConnectionEndpoints
		*out = make([]NetworkAttachmentConnectedEndpoint, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConnectionPreference != nil {
		in, out := &in.ConnectionPreference, &out.ConnectionPreference
		*out = new(string)
		**out = **in
	}
	if in.CreationTimestamp != nil {
		in, out := &in.CreationTimestamp, &out.CreationTimestamp
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Fingerprint != nil {
		in, out := &in.Fingerprint, &out.Fingerprint
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(uint64)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.ProducerAcceptLists != nil {
		in, out := &in.ProducerAcceptLists, &out.ProducerAcceptLists
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ProducerRejectLists != nil {
		in, out := &in.ProducerRejectLists, &out.ProducerRejectLists
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.SelfLinkWithID != nil {
		in, out := &in.SelfLinkWithID, &out.SelfLinkWithID
		*out = new(string)
		**out = **in
	}
	if in.Subnetworks != nil {
		in, out := &in.Subnetworks, &out.Subnetworks
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkAttachment.
func (in *NetworkAttachment) DeepCopy() *NetworkAttachment {
	if in == nil {
		return nil
	}
	out := new(NetworkAttachment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkAttachmentConnectedEndpoint) DeepCopyInto(out *NetworkAttachmentConnectedEndpoint) {
	*out = *in
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.IPV6Address != nil {
		in, out := &in.IPV6Address, &out.IPV6Address
		*out = new(string)
		**out = **in
	}
	if in.ProjectIDOrNum != nil {
		in, out := &in.ProjectIDOrNum, &out.ProjectIDOrNum
		*out = new(string)
		**out = **in
	}
	if in.SecondaryIPCIDRRanges != nil {
		in, out := &in.SecondaryIPCIDRRanges, &out.SecondaryIPCIDRRanges
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.Subnetwork != nil {
		in, out := &in.Subnetwork, &out.Subnetwork
		*out = new(string)
		**out = **in
	}
	if in.SubnetworkCIDRRange != nil {
		in, out := &in.SubnetworkCIDRRange, &out.SubnetworkCIDRRange
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkAttachmentConnectedEndpoint.
func (in *NetworkAttachmentConnectedEndpoint) DeepCopy() *NetworkAttachmentConnectedEndpoint {
	if in == nil {
		return nil
	}
	out := new(NetworkAttachmentConnectedEndpoint)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkAttachmentIdentity) DeepCopyInto(out *NetworkAttachmentIdentity) {
	*out = *in
	if in.parent != nil {
		in, out := &in.parent, &out.parent
		*out = new(NetworkAttachmentParent)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkAttachmentIdentity.
func (in *NetworkAttachmentIdentity) DeepCopy() *NetworkAttachmentIdentity {
	if in == nil {
		return nil
	}
	out := new(NetworkAttachmentIdentity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkAttachmentParent) DeepCopyInto(out *NetworkAttachmentParent) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkAttachmentParent.
func (in *NetworkAttachmentParent) DeepCopy() *NetworkAttachmentParent {
	if in == nil {
		return nil
	}
	out := new(NetworkAttachmentParent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkEdgeSecurityService) DeepCopyInto(out *NetworkEdgeSecurityService) {
	*out = *in
	if in.CreationTimestamp != nil {
		in, out := &in.CreationTimestamp, &out.CreationTimestamp
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Fingerprint != nil {
		in, out := &in.Fingerprint, &out.Fingerprint
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(uint64)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SecurityPolicy != nil {
		in, out := &in.SecurityPolicy, &out.SecurityPolicy
		*out = new(string)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.SelfLinkWithID != nil {
		in, out := &in.SelfLinkWithID, &out.SelfLinkWithID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkEdgeSecurityService.
func (in *NetworkEdgeSecurityService) DeepCopy() *NetworkEdgeSecurityService {
	if in == nil {
		return nil
	}
	out := new(NetworkEdgeSecurityService)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkEdgeSecurityServiceIdentity) DeepCopyInto(out *NetworkEdgeSecurityServiceIdentity) {
	*out = *in
	if in.parent != nil {
		in, out := &in.parent, &out.parent
		*out = new(NetworkEdgeSecurityServiceParent)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkEdgeSecurityServiceIdentity.
func (in *NetworkEdgeSecurityServiceIdentity) DeepCopy() *NetworkEdgeSecurityServiceIdentity {
	if in == nil {
		return nil
	}
	out := new(NetworkEdgeSecurityServiceIdentity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkEdgeSecurityServiceParent) DeepCopyInto(out *NetworkEdgeSecurityServiceParent) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkEdgeSecurityServiceParent.
func (in *NetworkEdgeSecurityServiceParent) DeepCopy() *NetworkEdgeSecurityServiceParent {
	if in == nil {
		return nil
	}
	out := new(NetworkEdgeSecurityServiceParent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkEdgeSecurityServiceRef) DeepCopyInto(out *NetworkEdgeSecurityServiceRef) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkEdgeSecurityServiceRef.
func (in *NetworkEdgeSecurityServiceRef) DeepCopy() *NetworkEdgeSecurityServiceRef {
	if in == nil {
		return nil
	}
	out := new(NetworkEdgeSecurityServiceRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Parent) DeepCopyInto(out *Parent) {
	*out = *in
	if in.ProjectRef != nil {
		in, out := &in.ProjectRef, &out.ProjectRef
		*out = new(v1beta1.ProjectRef)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Parent.
func (in *Parent) DeepCopy() *Parent {
	if in == nil {
		return nil
	}
	out := new(Parent)
	in.DeepCopyInto(out)
	return out
}
