//go:build !ignore_autogenerated

// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by controller-gen. DO NOT EDIT.

package v1beta1

import (
	refsv1beta1 "github.com/GoogleCloudPlatform/k8s-config-connector/apis/refs/v1beta1"
	"github.com/GoogleCloudPlatform/k8s-config-connector/pkg/apis/k8s/v1alpha1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlloyDBInstance) DeepCopyInto(out *AlloyDBInstance) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlloyDBInstance.
func (in *AlloyDBInstance) DeepCopy() *AlloyDBInstance {
	if in == nil {
		return nil
	}
	out := new(AlloyDBInstance)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AlloyDBInstance) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlloyDBInstanceList) DeepCopyInto(out *AlloyDBInstanceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AlloyDBInstance, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlloyDBInstanceList.
func (in *AlloyDBInstanceList) DeepCopy() *AlloyDBInstanceList {
	if in == nil {
		return nil
	}
	out := new(AlloyDBInstanceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AlloyDBInstanceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlloyDBInstanceSpec) DeepCopyInto(out *AlloyDBInstanceSpec) {
	*out = *in
	if in.ClusterRef != nil {
		in, out := &in.ClusterRef, &out.ClusterRef
		*out = new(refsv1beta1.AlloyDBClusterRef)
		**out = **in
	}
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.AvailabilityType != nil {
		in, out := &in.AvailabilityType, &out.AvailabilityType
		*out = new(string)
		**out = **in
	}
	if in.DatabaseFlags != nil {
		in, out := &in.DatabaseFlags, &out.DatabaseFlags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.GceZone != nil {
		in, out := &in.GceZone, &out.GceZone
		*out = new(string)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.InstanceTypeRef != nil {
		in, out := &in.InstanceTypeRef, &out.InstanceTypeRef
		*out = new(refsv1beta1.AlloyDBClusterTypeRef)
		**out = **in
	}
	if in.MachineConfig != nil {
		in, out := &in.MachineConfig, &out.MachineConfig
		*out = new(Instance_MachineConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkConfig != nil {
		in, out := &in.NetworkConfig, &out.NetworkConfig
		*out = new(Instance_InstanceNetworkConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.ReadPoolConfig != nil {
		in, out := &in.ReadPoolConfig, &out.ReadPoolConfig
		*out = new(Instance_ReadPoolConfig)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlloyDBInstanceSpec.
func (in *AlloyDBInstanceSpec) DeepCopy() *AlloyDBInstanceSpec {
	if in == nil {
		return nil
	}
	out := new(AlloyDBInstanceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlloyDBInstanceStatus) DeepCopyInto(out *AlloyDBInstanceStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1alpha1.Condition, len(*in))
		copy(*out, *in)
	}
	if in.ObservedGeneration != nil {
		in, out := &in.ObservedGeneration, &out.ObservedGeneration
		*out = new(int64)
		**out = **in
	}
	if in.ExternalRef != nil {
		in, out := &in.ExternalRef, &out.ExternalRef
		*out = new(string)
		**out = **in
	}
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.IpAddress != nil {
		in, out := &in.IpAddress, &out.IpAddress
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OutboundPublicIpAddresses != nil {
		in, out := &in.OutboundPublicIpAddresses, &out.OutboundPublicIpAddresses
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.PublicIpAddress != nil {
		in, out := &in.PublicIpAddress, &out.PublicIpAddress
		*out = new(string)
		**out = **in
	}
	if in.Reconciling != nil {
		in, out := &in.Reconciling, &out.Reconciling
		*out = new(bool)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.Uid != nil {
		in, out := &in.Uid, &out.Uid
		*out = new(string)
		**out = **in
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlloyDBInstanceStatus.
func (in *AlloyDBInstanceStatus) DeepCopy() *AlloyDBInstanceStatus {
	if in == nil {
		return nil
	}
	out := new(AlloyDBInstanceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GeminiInstanceConfig) DeepCopyInto(out *GeminiInstanceConfig) {
	*out = *in
	if in.Entitled != nil {
		in, out := &in.Entitled, &out.Entitled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GeminiInstanceConfig.
func (in *GeminiInstanceConfig) DeepCopy() *GeminiInstanceConfig {
	if in == nil {
		return nil
	}
	out := new(GeminiInstanceConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceIdentity) DeepCopyInto(out *InstanceIdentity) {
	*out = *in
	if in.parent != nil {
		in, out := &in.parent, &out.parent
		*out = new(InstanceParent)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceIdentity.
func (in *InstanceIdentity) DeepCopy() *InstanceIdentity {
	if in == nil {
		return nil
	}
	out := new(InstanceIdentity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceParent) DeepCopyInto(out *InstanceParent) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceParent.
func (in *InstanceParent) DeepCopy() *InstanceParent {
	if in == nil {
		return nil
	}
	out := new(InstanceParent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceRef) DeepCopyInto(out *InstanceRef) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceRef.
func (in *InstanceRef) DeepCopy() *InstanceRef {
	if in == nil {
		return nil
	}
	out := new(InstanceRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Instance_ClientConnectionConfig) DeepCopyInto(out *Instance_ClientConnectionConfig) {
	*out = *in
	if in.RequireConnectors != nil {
		in, out := &in.RequireConnectors, &out.RequireConnectors
		*out = new(bool)
		**out = **in
	}
	if in.SslConfig != nil {
		in, out := &in.SslConfig, &out.SslConfig
		*out = new(SslConfig)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Instance_ClientConnectionConfig.
func (in *Instance_ClientConnectionConfig) DeepCopy() *Instance_ClientConnectionConfig {
	if in == nil {
		return nil
	}
	out := new(Instance_ClientConnectionConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Instance_InstanceNetworkConfig) DeepCopyInto(out *Instance_InstanceNetworkConfig) {
	*out = *in
	if in.AuthorizedExternalNetworks != nil {
		in, out := &in.AuthorizedExternalNetworks, &out.AuthorizedExternalNetworks
		*out = make([]Instance_InstanceNetworkConfig_AuthorizedNetwork, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnablePublicIp != nil {
		in, out := &in.EnablePublicIp, &out.EnablePublicIp
		*out = new(bool)
		**out = **in
	}
	if in.EnableOutboundPublicIp != nil {
		in, out := &in.EnableOutboundPublicIp, &out.EnableOutboundPublicIp
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Instance_InstanceNetworkConfig.
func (in *Instance_InstanceNetworkConfig) DeepCopy() *Instance_InstanceNetworkConfig {
	if in == nil {
		return nil
	}
	out := new(Instance_InstanceNetworkConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Instance_InstanceNetworkConfig_AuthorizedNetwork) DeepCopyInto(out *Instance_InstanceNetworkConfig_AuthorizedNetwork) {
	*out = *in
	if in.CidrRange != nil {
		in, out := &in.CidrRange, &out.CidrRange
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Instance_InstanceNetworkConfig_AuthorizedNetwork.
func (in *Instance_InstanceNetworkConfig_AuthorizedNetwork) DeepCopy() *Instance_InstanceNetworkConfig_AuthorizedNetwork {
	if in == nil {
		return nil
	}
	out := new(Instance_InstanceNetworkConfig_AuthorizedNetwork)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Instance_MachineConfig) DeepCopyInto(out *Instance_MachineConfig) {
	*out = *in
	if in.CpuCount != nil {
		in, out := &in.CpuCount, &out.CpuCount
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Instance_MachineConfig.
func (in *Instance_MachineConfig) DeepCopy() *Instance_MachineConfig {
	if in == nil {
		return nil
	}
	out := new(Instance_MachineConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Instance_Node) DeepCopyInto(out *Instance_Node) {
	*out = *in
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Ip != nil {
		in, out := &in.Ip, &out.Ip
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Instance_Node.
func (in *Instance_Node) DeepCopy() *Instance_Node {
	if in == nil {
		return nil
	}
	out := new(Instance_Node)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Instance_ObservabilityInstanceConfig) DeepCopyInto(out *Instance_ObservabilityInstanceConfig) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.PreserveComments != nil {
		in, out := &in.PreserveComments, &out.PreserveComments
		*out = new(bool)
		**out = **in
	}
	if in.TrackWaitEvents != nil {
		in, out := &in.TrackWaitEvents, &out.TrackWaitEvents
		*out = new(bool)
		**out = **in
	}
	if in.TrackWaitEventTypes != nil {
		in, out := &in.TrackWaitEventTypes, &out.TrackWaitEventTypes
		*out = new(bool)
		**out = **in
	}
	if in.MaxQueryStringLength != nil {
		in, out := &in.MaxQueryStringLength, &out.MaxQueryStringLength
		*out = new(int32)
		**out = **in
	}
	if in.RecordApplicationTags != nil {
		in, out := &in.RecordApplicationTags, &out.RecordApplicationTags
		*out = new(bool)
		**out = **in
	}
	if in.QueryPlansPerMinute != nil {
		in, out := &in.QueryPlansPerMinute, &out.QueryPlansPerMinute
		*out = new(int32)
		**out = **in
	}
	if in.TrackActiveQueries != nil {
		in, out := &in.TrackActiveQueries, &out.TrackActiveQueries
		*out = new(bool)
		**out = **in
	}
	if in.TrackClientAddress != nil {
		in, out := &in.TrackClientAddress, &out.TrackClientAddress
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Instance_ObservabilityInstanceConfig.
func (in *Instance_ObservabilityInstanceConfig) DeepCopy() *Instance_ObservabilityInstanceConfig {
	if in == nil {
		return nil
	}
	out := new(Instance_ObservabilityInstanceConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Instance_PscInstanceConfig) DeepCopyInto(out *Instance_PscInstanceConfig) {
	*out = *in
	if in.ServiceAttachmentLink != nil {
		in, out := &in.ServiceAttachmentLink, &out.ServiceAttachmentLink
		*out = new(string)
		**out = **in
	}
	if in.AllowedConsumerProjects != nil {
		in, out := &in.AllowedConsumerProjects, &out.AllowedConsumerProjects
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.PscDnsName != nil {
		in, out := &in.PscDnsName, &out.PscDnsName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Instance_PscInstanceConfig.
func (in *Instance_PscInstanceConfig) DeepCopy() *Instance_PscInstanceConfig {
	if in == nil {
		return nil
	}
	out := new(Instance_PscInstanceConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Instance_QueryInsightsInstanceConfig) DeepCopyInto(out *Instance_QueryInsightsInstanceConfig) {
	*out = *in
	if in.RecordApplicationTags != nil {
		in, out := &in.RecordApplicationTags, &out.RecordApplicationTags
		*out = new(bool)
		**out = **in
	}
	if in.RecordClientAddress != nil {
		in, out := &in.RecordClientAddress, &out.RecordClientAddress
		*out = new(bool)
		**out = **in
	}
	if in.QueryStringLength != nil {
		in, out := &in.QueryStringLength, &out.QueryStringLength
		*out = new(uint32)
		**out = **in
	}
	if in.QueryPlansPerMinute != nil {
		in, out := &in.QueryPlansPerMinute, &out.QueryPlansPerMinute
		*out = new(uint32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Instance_QueryInsightsInstanceConfig.
func (in *Instance_QueryInsightsInstanceConfig) DeepCopy() *Instance_QueryInsightsInstanceConfig {
	if in == nil {
		return nil
	}
	out := new(Instance_QueryInsightsInstanceConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Instance_ReadPoolConfig) DeepCopyInto(out *Instance_ReadPoolConfig) {
	*out = *in
	if in.NodeCount != nil {
		in, out := &in.NodeCount, &out.NodeCount
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Instance_ReadPoolConfig.
func (in *Instance_ReadPoolConfig) DeepCopy() *Instance_ReadPoolConfig {
	if in == nil {
		return nil
	}
	out := new(Instance_ReadPoolConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Instance_UpdatePolicy) DeepCopyInto(out *Instance_UpdatePolicy) {
	*out = *in
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Instance_UpdatePolicy.
func (in *Instance_UpdatePolicy) DeepCopy() *Instance_UpdatePolicy {
	if in == nil {
		return nil
	}
	out := new(Instance_UpdatePolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SslConfig) DeepCopyInto(out *SslConfig) {
	*out = *in
	if in.SslMode != nil {
		in, out := &in.SslMode, &out.SslMode
		*out = new(string)
		**out = **in
	}
	if in.CaSource != nil {
		in, out := &in.CaSource, &out.CaSource
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SslConfig.
func (in *SslConfig) DeepCopy() *SslConfig {
	if in == nil {
		return nil
	}
	out := new(SslConfig)
	in.DeepCopyInto(out)
	return out
}
