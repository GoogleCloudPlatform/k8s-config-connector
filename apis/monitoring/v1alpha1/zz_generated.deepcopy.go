//go:build !ignore_autogenerated

// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/GoogleCloudPlatform/k8s-config-connector/apis/refs/v1beta1"
	k8sv1alpha1 "github.com/GoogleCloudPlatform/k8s-config-connector/pkg/apis/k8s/v1alpha1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoringNotificationChannel) DeepCopyInto(out *MonitoringNotificationChannel) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoringNotificationChannel.
func (in *MonitoringNotificationChannel) DeepCopy() *MonitoringNotificationChannel {
	if in == nil {
		return nil
	}
	out := new(MonitoringNotificationChannel)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MonitoringNotificationChannel) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoringNotificationChannelList) DeepCopyInto(out *MonitoringNotificationChannelList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MonitoringNotificationChannel, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoringNotificationChannelList.
func (in *MonitoringNotificationChannelList) DeepCopy() *MonitoringNotificationChannelList {
	if in == nil {
		return nil
	}
	out := new(MonitoringNotificationChannelList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MonitoringNotificationChannelList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoringNotificationChannelObservedState) DeepCopyInto(out *MonitoringNotificationChannelObservedState) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoringNotificationChannelObservedState.
func (in *MonitoringNotificationChannelObservedState) DeepCopy() *MonitoringNotificationChannelObservedState {
	if in == nil {
		return nil
	}
	out := new(MonitoringNotificationChannelObservedState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoringNotificationChannelSpec) DeepCopyInto(out *MonitoringNotificationChannelSpec) {
	*out = *in
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
	in.Parent.DeepCopyInto(&out.Parent)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoringNotificationChannelSpec.
func (in *MonitoringNotificationChannelSpec) DeepCopy() *MonitoringNotificationChannelSpec {
	if in == nil {
		return nil
	}
	out := new(MonitoringNotificationChannelSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoringNotificationChannelStatus) DeepCopyInto(out *MonitoringNotificationChannelStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]k8sv1alpha1.Condition, len(*in))
		copy(*out, *in)
	}
	if in.ObservedGeneration != nil {
		in, out := &in.ObservedGeneration, &out.ObservedGeneration
		*out = new(int64)
		**out = **in
	}
	if in.ExternalRef != nil {
		in, out := &in.ExternalRef, &out.ExternalRef
		*out = new(string)
		**out = **in
	}
	if in.ObservedState != nil {
		in, out := &in.ObservedState, &out.ObservedState
		*out = new(MonitoringNotificationChannelObservedState)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoringNotificationChannelStatus.
func (in *MonitoringNotificationChannelStatus) DeepCopy() *MonitoringNotificationChannelStatus {
	if in == nil {
		return nil
	}
	out := new(MonitoringNotificationChannelStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MutationRecord) DeepCopyInto(out *MutationRecord) {
	*out = *in
	if in.MutateTime != nil {
		in, out := &in.MutateTime, &out.MutateTime
		*out = new(string)
		**out = **in
	}
	if in.MutatedBy != nil {
		in, out := &in.MutatedBy, &out.MutatedBy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MutationRecord.
func (in *MutationRecord) DeepCopy() *MutationRecord {
	if in == nil {
		return nil
	}
	out := new(MutationRecord)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationChannel) DeepCopyInto(out *NotificationChannel) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.UserLabels != nil {
		in, out := &in.UserLabels, &out.UserLabels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.VerificationStatus != nil {
		in, out := &in.VerificationStatus, &out.VerificationStatus
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.CreationRecord != nil {
		in, out := &in.CreationRecord, &out.CreationRecord
		*out = new(MutationRecord)
		(*in).DeepCopyInto(*out)
	}
	if in.MutationRecords != nil {
		in, out := &in.MutationRecords, &out.MutationRecords
		*out = make([]MutationRecord, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationChannel.
func (in *NotificationChannel) DeepCopy() *NotificationChannel {
	if in == nil {
		return nil
	}
	out := new(NotificationChannel)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationChannelIdentity) DeepCopyInto(out *NotificationChannelIdentity) {
	*out = *in
	if in.parent != nil {
		in, out := &in.parent, &out.parent
		*out = new(NotificationChannelParent)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationChannelIdentity.
func (in *NotificationChannelIdentity) DeepCopy() *NotificationChannelIdentity {
	if in == nil {
		return nil
	}
	out := new(NotificationChannelIdentity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationChannelParent) DeepCopyInto(out *NotificationChannelParent) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationChannelParent.
func (in *NotificationChannelParent) DeepCopy() *NotificationChannelParent {
	if in == nil {
		return nil
	}
	out := new(NotificationChannelParent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationChannelRef) DeepCopyInto(out *NotificationChannelRef) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationChannelRef.
func (in *NotificationChannelRef) DeepCopy() *NotificationChannelRef {
	if in == nil {
		return nil
	}
	out := new(NotificationChannelRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Parent) DeepCopyInto(out *Parent) {
	*out = *in
	if in.ProjectRef != nil {
		in, out := &in.ProjectRef, &out.ProjectRef
		*out = new(v1beta1.ProjectRef)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Parent.
func (in *Parent) DeepCopy() *Parent {
	if in == nil {
		return nil
	}
	out := new(Parent)
	in.DeepCopyInto(out)
	return out
}
