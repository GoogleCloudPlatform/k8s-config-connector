//go:build !ignore_autogenerated

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	k8sv1alpha1 "github.com/GoogleCloudPlatform/k8s-config-connector/pkg/apis/k8s/v1alpha1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Backup) DeepCopyInto(out *Backup) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.DatabaseUid != nil {
		in, out := &in.DatabaseUid, &out.DatabaseUid
		*out = new(string)
		**out = **in
	}
	if in.SnapshotTime != nil {
		in, out := &in.SnapshotTime, &out.SnapshotTime
		*out = new(string)
		**out = **in
	}
	if in.ExpireTime != nil {
		in, out := &in.ExpireTime, &out.ExpireTime
		*out = new(string)
		**out = **in
	}
	if in.Stats != nil {
		in, out := &in.Stats, &out.Stats
		*out = new(Backup_Stats)
		(*in).DeepCopyInto(*out)
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Backup.
func (in *Backup) DeepCopy() *Backup {
	if in == nil {
		return nil
	}
	out := new(Backup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupSchedule) DeepCopyInto(out *BackupSchedule) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
	if in.Retention != nil {
		in, out := &in.Retention, &out.Retention
		*out = new(string)
		**out = **in
	}
	if in.DailyRecurrence != nil {
		in, out := &in.DailyRecurrence, &out.DailyRecurrence
		*out = new(DailyRecurrence)
		**out = **in
	}
	if in.WeeklyRecurrence != nil {
		in, out := &in.WeeklyRecurrence, &out.WeeklyRecurrence
		*out = new(WeeklyRecurrence)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupSchedule.
func (in *BackupSchedule) DeepCopy() *BackupSchedule {
	if in == nil {
		return nil
	}
	out := new(BackupSchedule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Backup_Stats) DeepCopyInto(out *Backup_Stats) {
	*out = *in
	if in.SizeBytes != nil {
		in, out := &in.SizeBytes, &out.SizeBytes
		*out = new(int64)
		**out = **in
	}
	if in.DocumentCount != nil {
		in, out := &in.DocumentCount, &out.DocumentCount
		*out = new(int64)
		**out = **in
	}
	if in.IndexCount != nil {
		in, out := &in.IndexCount, &out.IndexCount
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Backup_Stats.
func (in *Backup_Stats) DeepCopy() *Backup_Stats {
	if in == nil {
		return nil
	}
	out := new(Backup_Stats)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DailyRecurrence) DeepCopyInto(out *DailyRecurrence) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DailyRecurrence.
func (in *DailyRecurrence) DeepCopy() *DailyRecurrence {
	if in == nil {
		return nil
	}
	out := new(DailyRecurrence)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Database) DeepCopyInto(out *Database) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Uid != nil {
		in, out := &in.Uid, &out.Uid
		*out = new(string)
		**out = **in
	}
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
	if in.LocationID != nil {
		in, out := &in.LocationID, &out.LocationID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.ConcurrencyMode != nil {
		in, out := &in.ConcurrencyMode, &out.ConcurrencyMode
		*out = new(string)
		**out = **in
	}
	if in.VersionRetentionPeriod != nil {
		in, out := &in.VersionRetentionPeriod, &out.VersionRetentionPeriod
		*out = new(string)
		**out = **in
	}
	if in.EarliestVersionTime != nil {
		in, out := &in.EarliestVersionTime, &out.EarliestVersionTime
		*out = new(string)
		**out = **in
	}
	if in.PointInTimeRecoveryEnablement != nil {
		in, out := &in.PointInTimeRecoveryEnablement, &out.PointInTimeRecoveryEnablement
		*out = new(string)
		**out = **in
	}
	if in.AppEngineIntegrationMode != nil {
		in, out := &in.AppEngineIntegrationMode, &out.AppEngineIntegrationMode
		*out = new(string)
		**out = **in
	}
	if in.KeyPrefix != nil {
		in, out := &in.KeyPrefix, &out.KeyPrefix
		*out = new(string)
		**out = **in
	}
	if in.DeleteProtectionState != nil {
		in, out := &in.DeleteProtectionState, &out.DeleteProtectionState
		*out = new(string)
		**out = **in
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Database.
func (in *Database) DeepCopy() *Database {
	if in == nil {
		return nil
	}
	out := new(Database)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Field) DeepCopyInto(out *Field) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.IndexConfig != nil {
		in, out := &in.IndexConfig, &out.IndexConfig
		*out = new(Field_IndexConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.TtlConfig != nil {
		in, out := &in.TtlConfig, &out.TtlConfig
		*out = new(Field_TtlConfig)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Field.
func (in *Field) DeepCopy() *Field {
	if in == nil {
		return nil
	}
	out := new(Field)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Field_IndexConfig) DeepCopyInto(out *Field_IndexConfig) {
	*out = *in
	if in.Indexes != nil {
		in, out := &in.Indexes, &out.Indexes
		*out = make([]Index, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UsesAncestorConfig != nil {
		in, out := &in.UsesAncestorConfig, &out.UsesAncestorConfig
		*out = new(bool)
		**out = **in
	}
	if in.AncestorField != nil {
		in, out := &in.AncestorField, &out.AncestorField
		*out = new(string)
		**out = **in
	}
	if in.Reverting != nil {
		in, out := &in.Reverting, &out.Reverting
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Field_IndexConfig.
func (in *Field_IndexConfig) DeepCopy() *Field_IndexConfig {
	if in == nil {
		return nil
	}
	out := new(Field_IndexConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Field_TtlConfig) DeepCopyInto(out *Field_TtlConfig) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Field_TtlConfig.
func (in *Field_TtlConfig) DeepCopy() *Field_TtlConfig {
	if in == nil {
		return nil
	}
	out := new(Field_TtlConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirestoreDatabase) DeepCopyInto(out *FirestoreDatabase) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirestoreDatabase.
func (in *FirestoreDatabase) DeepCopy() *FirestoreDatabase {
	if in == nil {
		return nil
	}
	out := new(FirestoreDatabase)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FirestoreDatabase) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirestoreDatabaseList) DeepCopyInto(out *FirestoreDatabaseList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FirestoreDatabase, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirestoreDatabaseList.
func (in *FirestoreDatabaseList) DeepCopy() *FirestoreDatabaseList {
	if in == nil {
		return nil
	}
	out := new(FirestoreDatabaseList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FirestoreDatabaseList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirestoreDatabaseObservedState) DeepCopyInto(out *FirestoreDatabaseObservedState) {
	*out = *in
	if in.Uid != nil {
		in, out := &in.Uid, &out.Uid
		*out = new(string)
		**out = **in
	}
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
	if in.VersionRetentionPeriod != nil {
		in, out := &in.VersionRetentionPeriod, &out.VersionRetentionPeriod
		*out = new(string)
		**out = **in
	}
	if in.EarliestVersionTime != nil {
		in, out := &in.EarliestVersionTime, &out.EarliestVersionTime
		*out = new(string)
		**out = **in
	}
	if in.KeyPrefix != nil {
		in, out := &in.KeyPrefix, &out.KeyPrefix
		*out = new(string)
		**out = **in
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirestoreDatabaseObservedState.
func (in *FirestoreDatabaseObservedState) DeepCopy() *FirestoreDatabaseObservedState {
	if in == nil {
		return nil
	}
	out := new(FirestoreDatabaseObservedState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirestoreDatabaseSpec) DeepCopyInto(out *FirestoreDatabaseSpec) {
	*out = *in
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
	if in.LocationID != nil {
		in, out := &in.LocationID, &out.LocationID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.ConcurrencyMode != nil {
		in, out := &in.ConcurrencyMode, &out.ConcurrencyMode
		*out = new(string)
		**out = **in
	}
	if in.PointInTimeRecoveryEnablement != nil {
		in, out := &in.PointInTimeRecoveryEnablement, &out.PointInTimeRecoveryEnablement
		*out = new(string)
		**out = **in
	}
	if in.AppEngineIntegrationMode != nil {
		in, out := &in.AppEngineIntegrationMode, &out.AppEngineIntegrationMode
		*out = new(string)
		**out = **in
	}
	if in.DeleteProtectionState != nil {
		in, out := &in.DeleteProtectionState, &out.DeleteProtectionState
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirestoreDatabaseSpec.
func (in *FirestoreDatabaseSpec) DeepCopy() *FirestoreDatabaseSpec {
	if in == nil {
		return nil
	}
	out := new(FirestoreDatabaseSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirestoreDatabaseStatus) DeepCopyInto(out *FirestoreDatabaseStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]k8sv1alpha1.Condition, len(*in))
		copy(*out, *in)
	}
	if in.ObservedGeneration != nil {
		in, out := &in.ObservedGeneration, &out.ObservedGeneration
		*out = new(int64)
		**out = **in
	}
	if in.ExternalRef != nil {
		in, out := &in.ExternalRef, &out.ExternalRef
		*out = new(string)
		**out = **in
	}
	if in.ObservedState != nil {
		in, out := &in.ObservedState, &out.ObservedState
		*out = new(FirestoreDatabaseObservedState)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirestoreDatabaseStatus.
func (in *FirestoreDatabaseStatus) DeepCopy() *FirestoreDatabaseStatus {
	if in == nil {
		return nil
	}
	out := new(FirestoreDatabaseStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Index) DeepCopyInto(out *Index) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.QueryScope != nil {
		in, out := &in.QueryScope, &out.QueryScope
		*out = new(string)
		**out = **in
	}
	if in.ApiScope != nil {
		in, out := &in.ApiScope, &out.ApiScope
		*out = new(string)
		**out = **in
	}
	if in.Fields != nil {
		in, out := &in.Fields, &out.Fields
		*out = make([]Index_IndexField, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Index.
func (in *Index) DeepCopy() *Index {
	if in == nil {
		return nil
	}
	out := new(Index)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Index_IndexField) DeepCopyInto(out *Index_IndexField) {
	*out = *in
	if in.FieldPath != nil {
		in, out := &in.FieldPath, &out.FieldPath
		*out = new(string)
		**out = **in
	}
	if in.Order != nil {
		in, out := &in.Order, &out.Order
		*out = new(string)
		**out = **in
	}
	if in.ArrayConfig != nil {
		in, out := &in.ArrayConfig, &out.ArrayConfig
		*out = new(string)
		**out = **in
	}
	if in.VectorConfig != nil {
		in, out := &in.VectorConfig, &out.VectorConfig
		*out = new(Index_IndexField_VectorConfig)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Index_IndexField.
func (in *Index_IndexField) DeepCopy() *Index_IndexField {
	if in == nil {
		return nil
	}
	out := new(Index_IndexField)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Index_IndexField_VectorConfig) DeepCopyInto(out *Index_IndexField_VectorConfig) {
	*out = *in
	if in.Dimension != nil {
		in, out := &in.Dimension, &out.Dimension
		*out = new(int32)
		**out = **in
	}
	if in.Flat != nil {
		in, out := &in.Flat, &out.Flat
		*out = new(Index_IndexField_VectorConfig_FlatIndex)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Index_IndexField_VectorConfig.
func (in *Index_IndexField_VectorConfig) DeepCopy() *Index_IndexField_VectorConfig {
	if in == nil {
		return nil
	}
	out := new(Index_IndexField_VectorConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Index_IndexField_VectorConfig_FlatIndex) DeepCopyInto(out *Index_IndexField_VectorConfig_FlatIndex) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Index_IndexField_VectorConfig_FlatIndex.
func (in *Index_IndexField_VectorConfig_FlatIndex) DeepCopy() *Index_IndexField_VectorConfig_FlatIndex {
	if in == nil {
		return nil
	}
	out := new(Index_IndexField_VectorConfig_FlatIndex)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Progress) DeepCopyInto(out *Progress) {
	*out = *in
	if in.EstimatedWork != nil {
		in, out := &in.EstimatedWork, &out.EstimatedWork
		*out = new(int64)
		**out = **in
	}
	if in.CompletedWork != nil {
		in, out := &in.CompletedWork, &out.CompletedWork
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Progress.
func (in *Progress) DeepCopy() *Progress {
	if in == nil {
		return nil
	}
	out := new(Progress)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WeeklyRecurrence) DeepCopyInto(out *WeeklyRecurrence) {
	*out = *in
	if in.Day != nil {
		in, out := &in.Day, &out.Day
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WeeklyRecurrence.
func (in *WeeklyRecurrence) DeepCopy() *WeeklyRecurrence {
	if in == nil {
		return nil
	}
	out := new(WeeklyRecurrence)
	in.DeepCopyInto(out)
	return out
}
