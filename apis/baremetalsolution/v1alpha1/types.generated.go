// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package v1alpha1


// +kcc:proto=google.cloud.baremetalsolution.v2.NfsShare
type NfsShare struct {
	// Immutable. The name of the NFS share.
	// +kcc:proto:field=google.cloud.baremetalsolution.v2.NfsShare.name
	Name *string `json:"name,omitempty"`

	// List of allowed access points.
	// +kcc:proto:field=google.cloud.baremetalsolution.v2.NfsShare.allowed_clients
	AllowedClients []NfsShare_AllowedClient `json:"allowedClients,omitempty"`

	// Labels as key value pairs.
	// +kcc:proto:field=google.cloud.baremetalsolution.v2.NfsShare.labels
	Labels map[string]string `json:"labels,omitempty"`

	// The requested size, in GiB.
	// +kcc:proto:field=google.cloud.baremetalsolution.v2.NfsShare.requested_size_gib
	RequestedSizeGib *int64 `json:"requestedSizeGib,omitempty"`

	// Immutable. The storage type of the underlying volume.
	// +kcc:proto:field=google.cloud.baremetalsolution.v2.NfsShare.storage_type
	StorageType *string `json:"storageType,omitempty"`
}

// +kcc:proto=google.cloud.baremetalsolution.v2.NfsShare.AllowedClient
type NfsShare_AllowedClient struct {
	// The network the access point sits on.
	// +kcc:proto:field=google.cloud.baremetalsolution.v2.NfsShare.AllowedClient.network
	Network *string `json:"network,omitempty"`

	// The subnet of IP addresses permitted to access the share.
	// +kcc:proto:field=google.cloud.baremetalsolution.v2.NfsShare.AllowedClient.allowed_clients_cidr
	AllowedClientsCidr *string `json:"allowedClientsCidr,omitempty"`

	// Mount permissions.
	// +kcc:proto:field=google.cloud.baremetalsolution.v2.NfsShare.AllowedClient.mount_permissions
	MountPermissions *string `json:"mountPermissions,omitempty"`

	// Allow dev flag.  Which controls whether to allow creation of devices.
	// +kcc:proto:field=google.cloud.baremetalsolution.v2.NfsShare.AllowedClient.allow_dev
	AllowDev *bool `json:"allowDev,omitempty"`

	// Allow the setuid flag.
	// +kcc:proto:field=google.cloud.baremetalsolution.v2.NfsShare.AllowedClient.allow_suid
	AllowSuid *bool `json:"allowSuid,omitempty"`

	// Disable root squashing, which is a feature of NFS.
	//  Root squash is a special mapping of the remote superuser (root) identity
	//  when using identity authentication.
	// +kcc:proto:field=google.cloud.baremetalsolution.v2.NfsShare.AllowedClient.no_root_squash
	NoRootSquash *bool `json:"noRootSquash,omitempty"`
}

// +kcc:proto=google.cloud.baremetalsolution.v2.NfsShare
type NfsShareObservedState struct {
	// Output only. An identifier for the NFS share, generated by the backend.
	//  This field will be deprecated in the future, use `id` instead.
	// +kcc:proto:field=google.cloud.baremetalsolution.v2.NfsShare.nfs_share_id
	NfsShareID *string `json:"nfsShareID,omitempty"`

	// Output only. An identifier for the NFS share, generated by the backend.
	//  This is the same value as nfs_share_id and will replace it in the future.
	// +kcc:proto:field=google.cloud.baremetalsolution.v2.NfsShare.id
	ID *string `json:"id,omitempty"`

	// Output only. The state of the NFS share.
	// +kcc:proto:field=google.cloud.baremetalsolution.v2.NfsShare.state
	State *string `json:"state,omitempty"`

	// Output only. The underlying volume of the share. Created automatically
	//  during provisioning.
	// +kcc:proto:field=google.cloud.baremetalsolution.v2.NfsShare.volume
	Volume *string `json:"volume,omitempty"`

	// List of allowed access points.
	// +kcc:proto:field=google.cloud.baremetalsolution.v2.NfsShare.allowed_clients
	AllowedClients []NfsShare_AllowedClientObservedState `json:"allowedClients,omitempty"`
}

// +kcc:proto=google.cloud.baremetalsolution.v2.NfsShare.AllowedClient
type NfsShare_AllowedClientObservedState struct {
	// Output only. The IP address of the share on this network. Assigned
	//  automatically during provisioning based on the network's services_cidr.
	// +kcc:proto:field=google.cloud.baremetalsolution.v2.NfsShare.AllowedClient.share_ip
	ShareIP *string `json:"shareIP,omitempty"`

	// Output only. The path to access NFS, in format shareIP:/InstanceID
	//  InstanceID is the generated ID instead of customer provided name.
	//  example like "10.0.0.0:/g123456789-nfs001"
	// +kcc:proto:field=google.cloud.baremetalsolution.v2.NfsShare.AllowedClient.nfs_path
	NfsPath *string `json:"nfsPath,omitempty"`
}
