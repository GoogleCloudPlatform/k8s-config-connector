// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package v1alpha1


// +kcc:proto=google.cloud.baremetalsolution.v2.Volume
type Volume struct {

	// An identifier for the `Volume`, generated by the backend.
	// +kcc:proto:field=google.cloud.baremetalsolution.v2.Volume.id
	ID *string `json:"id,omitempty"`

	// The storage type for this volume.
	// +kcc:proto:field=google.cloud.baremetalsolution.v2.Volume.storage_type
	StorageType *string `json:"storageType,omitempty"`

	// The state of this storage volume.
	// +kcc:proto:field=google.cloud.baremetalsolution.v2.Volume.state
	State *string `json:"state,omitempty"`

	// The requested size of this storage volume, in GiB.
	// +kcc:proto:field=google.cloud.baremetalsolution.v2.Volume.requested_size_gib
	RequestedSizeGib *int64 `json:"requestedSizeGib,omitempty"`

	// Originally requested size, in GiB.
	// +kcc:proto:field=google.cloud.baremetalsolution.v2.Volume.originally_requested_size_gib
	OriginallyRequestedSizeGib *int64 `json:"originallyRequestedSizeGib,omitempty"`

	// The current size of this storage volume, in GiB, including space reserved
	//  for snapshots. This size might be different than the requested size if the
	//  storage volume has been configured with auto grow or auto shrink.
	// +kcc:proto:field=google.cloud.baremetalsolution.v2.Volume.current_size_gib
	CurrentSizeGib *int64 `json:"currentSizeGib,omitempty"`

	// Additional emergency size that was requested for this Volume, in GiB.
	//  current_size_gib includes this value.
	// +kcc:proto:field=google.cloud.baremetalsolution.v2.Volume.emergency_size_gib
	EmergencySizeGib *int64 `json:"emergencySizeGib,omitempty"`

	// Maximum size volume can be expanded to in case of evergency, in GiB.
	// +kcc:proto:field=google.cloud.baremetalsolution.v2.Volume.max_size_gib
	MaxSizeGib *int64 `json:"maxSizeGib,omitempty"`

	// The size, in GiB, that this storage volume has expanded as a result of an
	//  auto grow policy. In the absence of auto-grow, the value is 0.
	// +kcc:proto:field=google.cloud.baremetalsolution.v2.Volume.auto_grown_size_gib
	AutoGrownSizeGib *int64 `json:"autoGrownSizeGib,omitempty"`

	// The space remaining in the storage volume for new LUNs, in GiB, excluding
	//  space reserved for snapshots.
	// +kcc:proto:field=google.cloud.baremetalsolution.v2.Volume.remaining_space_gib
	RemainingSpaceGib *int64 `json:"remainingSpaceGib,omitempty"`

	// Details about snapshot space reservation and usage on the storage volume.
	// +kcc:proto:field=google.cloud.baremetalsolution.v2.Volume.snapshot_reservation_detail
	SnapshotReservationDetail *Volume_SnapshotReservationDetail `json:"snapshotReservationDetail,omitempty"`

	// The behavior to use when snapshot reserved space is full.
	// +kcc:proto:field=google.cloud.baremetalsolution.v2.Volume.snapshot_auto_delete_behavior
	SnapshotAutoDeleteBehavior *string `json:"snapshotAutoDeleteBehavior,omitempty"`

	// Labels as key value pairs.
	// +kcc:proto:field=google.cloud.baremetalsolution.v2.Volume.labels
	Labels map[string]string `json:"labels,omitempty"`

	// Whether snapshots are enabled.
	// +kcc:proto:field=google.cloud.baremetalsolution.v2.Volume.snapshot_enabled
	SnapshotEnabled *bool `json:"snapshotEnabled,omitempty"`

	// Immutable. Pod name.
	// +kcc:proto:field=google.cloud.baremetalsolution.v2.Volume.pod
	Pod *string `json:"pod,omitempty"`

	// Immutable. Performance tier of the Volume.
	//  Default is SHARED.
	// +kcc:proto:field=google.cloud.baremetalsolution.v2.Volume.performance_tier
	PerformanceTier *string `json:"performanceTier,omitempty"`

	// Input only. User-specified notes for new Volume.
	//  Used to provision Volumes that require manual intervention.
	// +kcc:proto:field=google.cloud.baremetalsolution.v2.Volume.notes
	Notes *string `json:"notes,omitempty"`

	// The workload profile for the volume.
	// +kcc:proto:field=google.cloud.baremetalsolution.v2.Volume.workload_profile
	WorkloadProfile *string `json:"workloadProfile,omitempty"`
}

// +kcc:proto=google.cloud.baremetalsolution.v2.Volume.SnapshotReservationDetail
type Volume_SnapshotReservationDetail struct {
	// The space on this storage volume reserved for snapshots, shown in GiB.
	// +kcc:proto:field=google.cloud.baremetalsolution.v2.Volume.SnapshotReservationDetail.reserved_space_gib
	ReservedSpaceGib *int64 `json:"reservedSpaceGib,omitempty"`

	// The percent of snapshot space on this storage volume actually being used
	//  by the snapshot copies. This value might be higher than 100% if the
	//  snapshot copies have overflowed into the data portion of the storage
	//  volume.
	// +kcc:proto:field=google.cloud.baremetalsolution.v2.Volume.SnapshotReservationDetail.reserved_space_used_percent
	ReservedSpaceUsedPercent *int32 `json:"reservedSpaceUsedPercent,omitempty"`

	// The amount, in GiB, of available space in this storage volume's reserved
	//  snapshot space.
	// +kcc:proto:field=google.cloud.baremetalsolution.v2.Volume.SnapshotReservationDetail.reserved_space_remaining_gib
	ReservedSpaceRemainingGib *int64 `json:"reservedSpaceRemainingGib,omitempty"`

	// Percent of the total Volume size reserved for snapshot copies.
	//  Enabling snapshots requires reserving 20% or more of
	//  the storage volume space for snapshots. Maximum reserved space for
	//  snapshots is 40%.
	//  Setting this field will effectively set snapshot_enabled to true.
	// +kcc:proto:field=google.cloud.baremetalsolution.v2.Volume.SnapshotReservationDetail.reserved_space_percent
	ReservedSpacePercent *int32 `json:"reservedSpacePercent,omitempty"`
}

// +kcc:proto=google.cloud.baremetalsolution.v2.Volume
type VolumeObservedState struct {
	// Output only. The resource name of this `Volume`.
	//  Resource names are schemeless URIs that follow the conventions in
	//  https://cloud.google.com/apis/design/resource_names.
	//  Format:
	//  `projects/{project}/locations/{location}/volumes/{volume}`
	// +kcc:proto:field=google.cloud.baremetalsolution.v2.Volume.name
	Name *string `json:"name,omitempty"`

	// Output only. Storage protocol for the Volume.
	// +kcc:proto:field=google.cloud.baremetalsolution.v2.Volume.protocol
	Protocol *string `json:"protocol,omitempty"`

	// Output only. Whether this volume is a boot volume. A boot volume is one
	//  which contains a boot LUN.
	// +kcc:proto:field=google.cloud.baremetalsolution.v2.Volume.boot_volume
	BootVolume *bool `json:"bootVolume,omitempty"`

	// Output only. Time after which volume will be fully deleted.
	//  It is filled only for volumes in COOLOFF state.
	// +kcc:proto:field=google.cloud.baremetalsolution.v2.Volume.expire_time
	ExpireTime *string `json:"expireTime,omitempty"`

	// Output only. Instances this Volume is attached to.
	//  This field is set only in Get requests.
	// +kcc:proto:field=google.cloud.baremetalsolution.v2.Volume.instances
	Instances []string `json:"instances,omitempty"`

	// Output only. Is the Volume attached at at least one instance.
	//  This field is a lightweight counterpart of `instances` field.
	//  It is filled in List responses as well.
	// +kcc:proto:field=google.cloud.baremetalsolution.v2.Volume.attached
	Attached *bool `json:"attached,omitempty"`
}
