//go:build !ignore_autogenerated

// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by controller-gen. DO NOT EDIT.

package v1beta1

import (
	refsv1beta1 "github.com/GoogleCloudPlatform/k8s-config-connector/apis/refs/v1beta1"
	"github.com/GoogleCloudPlatform/k8s-config-connector/pkg/apis/k8s/v1alpha1"
	"k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscalingEvent) DeepCopyInto(out *AutoscalingEvent) {
	*out = *in
	if in.CurrentNumWorkers != nil {
		in, out := &in.CurrentNumWorkers, &out.CurrentNumWorkers
		*out = new(int64)
		**out = **in
	}
	if in.TargetNumWorkers != nil {
		in, out := &in.TargetNumWorkers, &out.TargetNumWorkers
		*out = new(int64)
		**out = **in
	}
	if in.EventType != nil {
		in, out := &in.EventType, &out.EventType
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(StructuredMessage)
		(*in).DeepCopyInto(*out)
	}
	if in.Time != nil {
		in, out := &in.Time, &out.Time
		*out = new(string)
		**out = **in
	}
	if in.WorkerPool != nil {
		in, out := &in.WorkerPool, &out.WorkerPool
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscalingEvent.
func (in *AutoscalingEvent) DeepCopy() *AutoscalingEvent {
	if in == nil {
		return nil
	}
	out := new(AutoscalingEvent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscalingSettings) DeepCopyInto(out *AutoscalingSettings) {
	*out = *in
	if in.Algorithm != nil {
		in, out := &in.Algorithm, &out.Algorithm
		*out = new(string)
		**out = **in
	}
	if in.MaxNumWorkers != nil {
		in, out := &in.MaxNumWorkers, &out.MaxNumWorkers
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscalingSettings.
func (in *AutoscalingSettings) DeepCopy() *AutoscalingSettings {
	if in == nil {
		return nil
	}
	out := new(AutoscalingSettings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BigQueryIODetails) DeepCopyInto(out *BigQueryIODetails) {
	*out = *in
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = new(string)
		**out = **in
	}
	if in.Dataset != nil {
		in, out := &in.Dataset, &out.Dataset
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BigQueryIODetails.
func (in *BigQueryIODetails) DeepCopy() *BigQueryIODetails {
	if in == nil {
		return nil
	}
	out := new(BigQueryIODetails)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BigTableIODetails) DeepCopyInto(out *BigTableIODetails) {
	*out = *in
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.TableID != nil {
		in, out := &in.TableID, &out.TableID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BigTableIODetails.
func (in *BigTableIODetails) DeepCopy() *BigTableIODetails {
	if in == nil {
		return nil
	}
	out := new(BigTableIODetails)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComputationTopology) DeepCopyInto(out *ComputationTopology) {
	*out = *in
	if in.SystemStageName != nil {
		in, out := &in.SystemStageName, &out.SystemStageName
		*out = new(string)
		**out = **in
	}
	if in.ComputationID != nil {
		in, out := &in.ComputationID, &out.ComputationID
		*out = new(string)
		**out = **in
	}
	if in.KeyRanges != nil {
		in, out := &in.KeyRanges, &out.KeyRanges
		*out = make([]KeyRangeLocation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Inputs != nil {
		in, out := &in.Inputs, &out.Inputs
		*out = make([]StreamLocation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Outputs != nil {
		in, out := &in.Outputs, &out.Outputs
		*out = make([]StreamLocation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StateFamilies != nil {
		in, out := &in.StateFamilies, &out.StateFamilies
		*out = make([]StateFamilyConfig, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComputationTopology.
func (in *ComputationTopology) DeepCopy() *ComputationTopology {
	if in == nil {
		return nil
	}
	out := new(ComputationTopology)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerSpec) DeepCopyInto(out *ContainerSpec) {
	*out = *in
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = new(TemplateMetadata)
		**out = **in
	}
	if in.SdkInfo != nil {
		in, out := &in.SdkInfo, &out.SdkInfo
		*out = new(SDKInfo)
		(*in).DeepCopyInto(*out)
	}
	if in.DefaultEnvironment != nil {
		in, out := &in.DefaultEnvironment, &out.DefaultEnvironment
		*out = new(FlexTemplateRuntimeEnvironment)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerSpec.
func (in *ContainerSpec) DeepCopy() *ContainerSpec {
	if in == nil {
		return nil
	}
	out := new(ContainerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomSourceLocation) DeepCopyInto(out *CustomSourceLocation) {
	*out = *in
	if in.Stateful != nil {
		in, out := &in.Stateful, &out.Stateful
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomSourceLocation.
func (in *CustomSourceLocation) DeepCopy() *CustomSourceLocation {
	if in == nil {
		return nil
	}
	out := new(CustomSourceLocation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataDiskAssignment) DeepCopyInto(out *DataDiskAssignment) {
	*out = *in
	if in.VmInstance != nil {
		in, out := &in.VmInstance, &out.VmInstance
		*out = new(string)
		**out = **in
	}
	if in.DataDisks != nil {
		in, out := &in.DataDisks, &out.DataDisks
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataDiskAssignment.
func (in *DataDiskAssignment) DeepCopy() *DataDiskAssignment {
	if in == nil {
		return nil
	}
	out := new(DataDiskAssignment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataflowFlexTemplateJob) DeepCopyInto(out *DataflowFlexTemplateJob) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataflowFlexTemplateJob.
func (in *DataflowFlexTemplateJob) DeepCopy() *DataflowFlexTemplateJob {
	if in == nil {
		return nil
	}
	out := new(DataflowFlexTemplateJob)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataflowFlexTemplateJob) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataflowFlexTemplateJobList) DeepCopyInto(out *DataflowFlexTemplateJobList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DataflowFlexTemplateJob, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataflowFlexTemplateJobList.
func (in *DataflowFlexTemplateJobList) DeepCopy() *DataflowFlexTemplateJobList {
	if in == nil {
		return nil
	}
	out := new(DataflowFlexTemplateJobList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataflowFlexTemplateJobList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataflowFlexTemplateJobObservedState) DeepCopyInto(out *DataflowFlexTemplateJobObservedState) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataflowFlexTemplateJobObservedState.
func (in *DataflowFlexTemplateJobObservedState) DeepCopy() *DataflowFlexTemplateJobObservedState {
	if in == nil {
		return nil
	}
	out := new(DataflowFlexTemplateJobObservedState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataflowFlexTemplateJobSpec) DeepCopyInto(out *DataflowFlexTemplateJobSpec) {
	*out = *in
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ContainerSpecGcsPath != nil {
		in, out := &in.ContainerSpecGcsPath, &out.ContainerSpecGcsPath
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(runtime.RawExtension)
		(*in).DeepCopyInto(*out)
	}
	if in.TransformNameMapping != nil {
		in, out := &in.TransformNameMapping, &out.TransformNameMapping
		*out = new(runtime.RawExtension)
		(*in).DeepCopyInto(*out)
	}
	if in.NumWorkers != nil {
		in, out := &in.NumWorkers, &out.NumWorkers
		*out = new(int32)
		**out = **in
	}
	if in.MaxWorkers != nil {
		in, out := &in.MaxWorkers, &out.MaxWorkers
		*out = new(int32)
		**out = **in
	}
	if in.ServiceAccountEmailRef != nil {
		in, out := &in.ServiceAccountEmailRef, &out.ServiceAccountEmailRef
		*out = new(refsv1beta1.IAMServiceAccountRef)
		**out = **in
	}
	if in.TempLocation != nil {
		in, out := &in.TempLocation, &out.TempLocation
		*out = new(string)
		**out = **in
	}
	if in.MachineType != nil {
		in, out := &in.MachineType, &out.MachineType
		*out = new(string)
		**out = **in
	}
	if in.AdditionalExperiments != nil {
		in, out := &in.AdditionalExperiments, &out.AdditionalExperiments
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(refsv1beta1.ComputeNetworkRef)
		**out = **in
	}
	if in.SubnetworkRef != nil {
		in, out := &in.SubnetworkRef, &out.SubnetworkRef
		*out = new(refsv1beta1.ComputeSubnetworkRef)
		**out = **in
	}
	if in.KmsKeyNameRef != nil {
		in, out := &in.KmsKeyNameRef, &out.KmsKeyNameRef
		*out = new(refsv1beta1.KMSCryptoKeyRef)
		**out = **in
	}
	if in.IPConfiguration != nil {
		in, out := &in.IPConfiguration, &out.IPConfiguration
		*out = new(string)
		**out = **in
	}
	if in.EnableStreamingEngine != nil {
		in, out := &in.EnableStreamingEngine, &out.EnableStreamingEngine
		*out = new(bool)
		**out = **in
	}
	if in.StagingLocation != nil {
		in, out := &in.StagingLocation, &out.StagingLocation
		*out = new(string)
		**out = **in
	}
	if in.SDKContainerImage != nil {
		in, out := &in.SDKContainerImage, &out.SDKContainerImage
		*out = new(string)
		**out = **in
	}
	if in.AutoscalingAlgorithm != nil {
		in, out := &in.AutoscalingAlgorithm, &out.AutoscalingAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.LauncherMachineType != nil {
		in, out := &in.LauncherMachineType, &out.LauncherMachineType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataflowFlexTemplateJobSpec.
func (in *DataflowFlexTemplateJobSpec) DeepCopy() *DataflowFlexTemplateJobSpec {
	if in == nil {
		return nil
	}
	out := new(DataflowFlexTemplateJobSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataflowFlexTemplateJobStatus) DeepCopyInto(out *DataflowFlexTemplateJobStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1alpha1.Condition, len(*in))
		copy(*out, *in)
	}
	if in.ObservedGeneration != nil {
		in, out := &in.ObservedGeneration, &out.ObservedGeneration
		*out = new(int64)
		**out = **in
	}
	if in.CurrentState != nil {
		in, out := &in.CurrentState, &out.CurrentState
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataflowFlexTemplateJobStatus.
func (in *DataflowFlexTemplateJobStatus) DeepCopy() *DataflowFlexTemplateJobStatus {
	if in == nil {
		return nil
	}
	out := new(DataflowFlexTemplateJobStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatastoreIODetails) DeepCopyInto(out *DatastoreIODetails) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatastoreIODetails.
func (in *DatastoreIODetails) DeepCopy() *DatastoreIODetails {
	if in == nil {
		return nil
	}
	out := new(DatastoreIODetails)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DebugOptions) DeepCopyInto(out *DebugOptions) {
	*out = *in
	if in.EnableHotKeyLogging != nil {
		in, out := &in.EnableHotKeyLogging, &out.EnableHotKeyLogging
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DebugOptions.
func (in *DebugOptions) DeepCopy() *DebugOptions {
	if in == nil {
		return nil
	}
	out := new(DebugOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Disk) DeepCopyInto(out *Disk) {
	*out = *in
	if in.SizeGb != nil {
		in, out := &in.SizeGb, &out.SizeGb
		*out = new(int32)
		**out = **in
	}
	if in.DiskType != nil {
		in, out := &in.DiskType, &out.DiskType
		*out = new(string)
		**out = **in
	}
	if in.MountPoint != nil {
		in, out := &in.MountPoint, &out.MountPoint
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Disk.
func (in *Disk) DeepCopy() *Disk {
	if in == nil {
		return nil
	}
	out := new(Disk)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DisplayData) DeepCopyInto(out *DisplayData) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.StrValue != nil {
		in, out := &in.StrValue, &out.StrValue
		*out = new(string)
		**out = **in
	}
	if in.Int64Value != nil {
		in, out := &in.Int64Value, &out.Int64Value
		*out = new(int64)
		**out = **in
	}
	if in.FloatValue != nil {
		in, out := &in.FloatValue, &out.FloatValue
		*out = new(float32)
		**out = **in
	}
	if in.JavaClassValue != nil {
		in, out := &in.JavaClassValue, &out.JavaClassValue
		*out = new(string)
		**out = **in
	}
	if in.TimestampValue != nil {
		in, out := &in.TimestampValue, &out.TimestampValue
		*out = new(string)
		**out = **in
	}
	if in.DurationValue != nil {
		in, out := &in.DurationValue, &out.DurationValue
		*out = new(string)
		**out = **in
	}
	if in.BoolValue != nil {
		in, out := &in.BoolValue, &out.BoolValue
		*out = new(bool)
		**out = **in
	}
	if in.ShortStrValue != nil {
		in, out := &in.ShortStrValue, &out.ShortStrValue
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DisplayData.
func (in *DisplayData) DeepCopy() *DisplayData {
	if in == nil {
		return nil
	}
	out := new(DisplayData)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DynamicTemplateLaunchParams) DeepCopyInto(out *DynamicTemplateLaunchParams) {
	*out = *in
	if in.GcsPath != nil {
		in, out := &in.GcsPath, &out.GcsPath
		*out = new(string)
		**out = **in
	}
	if in.StagingLocation != nil {
		in, out := &in.StagingLocation, &out.StagingLocation
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DynamicTemplateLaunchParams.
func (in *DynamicTemplateLaunchParams) DeepCopy() *DynamicTemplateLaunchParams {
	if in == nil {
		return nil
	}
	out := new(DynamicTemplateLaunchParams)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Environment) DeepCopyInto(out *Environment) {
	*out = *in
	if in.TempStoragePrefix != nil {
		in, out := &in.TempStoragePrefix, &out.TempStoragePrefix
		*out = new(string)
		**out = **in
	}
	if in.ClusterManagerApiService != nil {
		in, out := &in.ClusterManagerApiService, &out.ClusterManagerApiService
		*out = new(string)
		**out = **in
	}
	if in.Experiments != nil {
		in, out := &in.Experiments, &out.Experiments
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ServiceOptions != nil {
		in, out := &in.ServiceOptions, &out.ServiceOptions
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ServiceKmsKeyName != nil {
		in, out := &in.ServiceKmsKeyName, &out.ServiceKmsKeyName
		*out = new(string)
		**out = **in
	}
	if in.WorkerPools != nil {
		in, out := &in.WorkerPools, &out.WorkerPools
		*out = make([]WorkerPool, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UserAgent != nil {
		in, out := &in.UserAgent, &out.UserAgent
		*out = new(google_protobuf_Struct)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(google_protobuf_Struct)
		**out = **in
	}
	if in.Dataset != nil {
		in, out := &in.Dataset, &out.Dataset
		*out = new(string)
		**out = **in
	}
	if in.SdkPipelineOptions != nil {
		in, out := &in.SdkPipelineOptions, &out.SdkPipelineOptions
		*out = new(google_protobuf_Struct)
		**out = **in
	}
	if in.InternalExperiments != nil {
		in, out := &in.InternalExperiments, &out.InternalExperiments
		*out = new(google_protobuf_Any)
		**out = **in
	}
	if in.ServiceAccountEmail != nil {
		in, out := &in.ServiceAccountEmail, &out.ServiceAccountEmail
		*out = new(string)
		**out = **in
	}
	if in.FlexResourceSchedulingGoal != nil {
		in, out := &in.FlexResourceSchedulingGoal, &out.FlexResourceSchedulingGoal
		*out = new(string)
		**out = **in
	}
	if in.WorkerRegion != nil {
		in, out := &in.WorkerRegion, &out.WorkerRegion
		*out = new(string)
		**out = **in
	}
	if in.WorkerZone != nil {
		in, out := &in.WorkerZone, &out.WorkerZone
		*out = new(string)
		**out = **in
	}
	if in.ShuffleMode != nil {
		in, out := &in.ShuffleMode, &out.ShuffleMode
		*out = new(string)
		**out = **in
	}
	if in.DebugOptions != nil {
		in, out := &in.DebugOptions, &out.DebugOptions
		*out = new(DebugOptions)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Environment.
func (in *Environment) DeepCopy() *Environment {
	if in == nil {
		return nil
	}
	out := new(Environment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExecutionStageState) DeepCopyInto(out *ExecutionStageState) {
	*out = *in
	if in.ExecutionStageName != nil {
		in, out := &in.ExecutionStageName, &out.ExecutionStageName
		*out = new(string)
		**out = **in
	}
	if in.ExecutionStageState != nil {
		in, out := &in.ExecutionStageState, &out.ExecutionStageState
		*out = new(string)
		**out = **in
	}
	if in.CurrentStateTime != nil {
		in, out := &in.CurrentStateTime, &out.CurrentStateTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExecutionStageState.
func (in *ExecutionStageState) DeepCopy() *ExecutionStageState {
	if in == nil {
		return nil
	}
	out := new(ExecutionStageState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExecutionStageSummary) DeepCopyInto(out *ExecutionStageSummary) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.InputSource != nil {
		in, out := &in.InputSource, &out.InputSource
		*out = make([]ExecutionStageSummary_StageSource, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OutputSource != nil {
		in, out := &in.OutputSource, &out.OutputSource
		*out = make([]ExecutionStageSummary_StageSource, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PrerequisiteStage != nil {
		in, out := &in.PrerequisiteStage, &out.PrerequisiteStage
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ComponentTransform != nil {
		in, out := &in.ComponentTransform, &out.ComponentTransform
		*out = make([]ExecutionStageSummary_ComponentTransform, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ComponentSource != nil {
		in, out := &in.ComponentSource, &out.ComponentSource
		*out = make([]ExecutionStageSummary_ComponentSource, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExecutionStageSummary.
func (in *ExecutionStageSummary) DeepCopy() *ExecutionStageSummary {
	if in == nil {
		return nil
	}
	out := new(ExecutionStageSummary)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExecutionStageSummary_ComponentSource) DeepCopyInto(out *ExecutionStageSummary_ComponentSource) {
	*out = *in
	if in.UserName != nil {
		in, out := &in.UserName, &out.UserName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OriginalTransformOrCollection != nil {
		in, out := &in.OriginalTransformOrCollection, &out.OriginalTransformOrCollection
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExecutionStageSummary_ComponentSource.
func (in *ExecutionStageSummary_ComponentSource) DeepCopy() *ExecutionStageSummary_ComponentSource {
	if in == nil {
		return nil
	}
	out := new(ExecutionStageSummary_ComponentSource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExecutionStageSummary_ComponentTransform) DeepCopyInto(out *ExecutionStageSummary_ComponentTransform) {
	*out = *in
	if in.UserName != nil {
		in, out := &in.UserName, &out.UserName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OriginalTransform != nil {
		in, out := &in.OriginalTransform, &out.OriginalTransform
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExecutionStageSummary_ComponentTransform.
func (in *ExecutionStageSummary_ComponentTransform) DeepCopy() *ExecutionStageSummary_ComponentTransform {
	if in == nil {
		return nil
	}
	out := new(ExecutionStageSummary_ComponentTransform)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExecutionStageSummary_StageSource) DeepCopyInto(out *ExecutionStageSummary_StageSource) {
	*out = *in
	if in.UserName != nil {
		in, out := &in.UserName, &out.UserName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OriginalTransformOrCollection != nil {
		in, out := &in.OriginalTransformOrCollection, &out.OriginalTransformOrCollection
		*out = new(string)
		**out = **in
	}
	if in.SizeBytes != nil {
		in, out := &in.SizeBytes, &out.SizeBytes
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExecutionStageSummary_StageSource.
func (in *ExecutionStageSummary_StageSource) DeepCopy() *ExecutionStageSummary_StageSource {
	if in == nil {
		return nil
	}
	out := new(ExecutionStageSummary_StageSource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FailedLocation) DeepCopyInto(out *FailedLocation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FailedLocation.
func (in *FailedLocation) DeepCopy() *FailedLocation {
	if in == nil {
		return nil
	}
	out := new(FailedLocation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FileIODetails) DeepCopyInto(out *FileIODetails) {
	*out = *in
	if in.FilePattern != nil {
		in, out := &in.FilePattern, &out.FilePattern
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FileIODetails.
func (in *FileIODetails) DeepCopy() *FileIODetails {
	if in == nil {
		return nil
	}
	out := new(FileIODetails)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlexTemplateRuntimeEnvironment) DeepCopyInto(out *FlexTemplateRuntimeEnvironment) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlexTemplateRuntimeEnvironment.
func (in *FlexTemplateRuntimeEnvironment) DeepCopy() *FlexTemplateRuntimeEnvironment {
	if in == nil {
		return nil
	}
	out := new(FlexTemplateRuntimeEnvironment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InvalidTemplateParameters) DeepCopyInto(out *InvalidTemplateParameters) {
	*out = *in
	if in.ParameterViolations != nil {
		in, out := &in.ParameterViolations, &out.ParameterViolations
		*out = make([]InvalidTemplateParameters_ParameterViolation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InvalidTemplateParameters.
func (in *InvalidTemplateParameters) DeepCopy() *InvalidTemplateParameters {
	if in == nil {
		return nil
	}
	out := new(InvalidTemplateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InvalidTemplateParameters_ParameterViolation) DeepCopyInto(out *InvalidTemplateParameters_ParameterViolation) {
	*out = *in
	if in.Parameter != nil {
		in, out := &in.Parameter, &out.Parameter
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InvalidTemplateParameters_ParameterViolation.
func (in *InvalidTemplateParameters_ParameterViolation) DeepCopy() *InvalidTemplateParameters_ParameterViolation {
	if in == nil {
		return nil
	}
	out := new(InvalidTemplateParameters_ParameterViolation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Job) DeepCopyInto(out *Job) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Environment != nil {
		in, out := &in.Environment, &out.Environment
		*out = new(Environment)
		(*in).DeepCopyInto(*out)
	}
	if in.Steps != nil {
		in, out := &in.Steps, &out.Steps
		*out = make([]Step, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StepsLocation != nil {
		in, out := &in.StepsLocation, &out.StepsLocation
		*out = new(string)
		**out = **in
	}
	if in.CurrentState != nil {
		in, out := &in.CurrentState, &out.CurrentState
		*out = new(string)
		**out = **in
	}
	if in.CurrentStateTime != nil {
		in, out := &in.CurrentStateTime, &out.CurrentStateTime
		*out = new(string)
		**out = **in
	}
	if in.RequestedState != nil {
		in, out := &in.RequestedState, &out.RequestedState
		*out = new(string)
		**out = **in
	}
	if in.ExecutionInfo != nil {
		in, out := &in.ExecutionInfo, &out.ExecutionInfo
		*out = new(JobExecutionInfo)
		**out = **in
	}
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.ReplaceJobID != nil {
		in, out := &in.ReplaceJobID, &out.ReplaceJobID
		*out = new(string)
		**out = **in
	}
	if in.TransformNameMapping != nil {
		in, out := &in.TransformNameMapping, &out.TransformNameMapping
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ClientRequestID != nil {
		in, out := &in.ClientRequestID, &out.ClientRequestID
		*out = new(string)
		**out = **in
	}
	if in.ReplacedByJobID != nil {
		in, out := &in.ReplacedByJobID, &out.ReplacedByJobID
		*out = new(string)
		**out = **in
	}
	if in.TempFiles != nil {
		in, out := &in.TempFiles, &out.TempFiles
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.PipelineDescription != nil {
		in, out := &in.PipelineDescription, &out.PipelineDescription
		*out = new(PipelineDescription)
		(*in).DeepCopyInto(*out)
	}
	if in.StageStates != nil {
		in, out := &in.StageStates, &out.StageStates
		*out = make([]ExecutionStageState, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.JobMetadata != nil {
		in, out := &in.JobMetadata, &out.JobMetadata
		*out = new(JobMetadata)
		**out = **in
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(string)
		**out = **in
	}
	if in.CreatedFromSnapshotID != nil {
		in, out := &in.CreatedFromSnapshotID, &out.CreatedFromSnapshotID
		*out = new(string)
		**out = **in
	}
	if in.SatisfiesPzs != nil {
		in, out := &in.SatisfiesPzs, &out.SatisfiesPzs
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Job.
func (in *Job) DeepCopy() *Job {
	if in == nil {
		return nil
	}
	out := new(Job)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobExecutionDetails) DeepCopyInto(out *JobExecutionDetails) {
	*out = *in
	if in.Stages != nil {
		in, out := &in.Stages, &out.Stages
		*out = make([]StageSummary, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NextPageToken != nil {
		in, out := &in.NextPageToken, &out.NextPageToken
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobExecutionDetails.
func (in *JobExecutionDetails) DeepCopy() *JobExecutionDetails {
	if in == nil {
		return nil
	}
	out := new(JobExecutionDetails)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobExecutionInfo) DeepCopyInto(out *JobExecutionInfo) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobExecutionInfo.
func (in *JobExecutionInfo) DeepCopy() *JobExecutionInfo {
	if in == nil {
		return nil
	}
	out := new(JobExecutionInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobExecutionStageInfo) DeepCopyInto(out *JobExecutionStageInfo) {
	*out = *in
	if in.StepName != nil {
		in, out := &in.StepName, &out.StepName
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobExecutionStageInfo.
func (in *JobExecutionStageInfo) DeepCopy() *JobExecutionStageInfo {
	if in == nil {
		return nil
	}
	out := new(JobExecutionStageInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobMessage) DeepCopyInto(out *JobMessage) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Time != nil {
		in, out := &in.Time, &out.Time
		*out = new(string)
		**out = **in
	}
	if in.MessageText != nil {
		in, out := &in.MessageText, &out.MessageText
		*out = new(string)
		**out = **in
	}
	if in.MessageImportance != nil {
		in, out := &in.MessageImportance, &out.MessageImportance
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobMessage.
func (in *JobMessage) DeepCopy() *JobMessage {
	if in == nil {
		return nil
	}
	out := new(JobMessage)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobMetadata) DeepCopyInto(out *JobMetadata) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobMetadata.
func (in *JobMetadata) DeepCopy() *JobMetadata {
	if in == nil {
		return nil
	}
	out := new(JobMetadata)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobMetrics) DeepCopyInto(out *JobMetrics) {
	*out = *in
	if in.MetricTime != nil {
		in, out := &in.MetricTime, &out.MetricTime
		*out = new(string)
		**out = **in
	}
	if in.Metrics != nil {
		in, out := &in.Metrics, &out.Metrics
		*out = make([]MetricUpdate, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobMetrics.
func (in *JobMetrics) DeepCopy() *JobMetrics {
	if in == nil {
		return nil
	}
	out := new(JobMetrics)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeyRangeDataDiskAssignment) DeepCopyInto(out *KeyRangeDataDiskAssignment) {
	*out = *in
	if in.Start != nil {
		in, out := &in.Start, &out.Start
		*out = new(string)
		**out = **in
	}
	if in.End != nil {
		in, out := &in.End, &out.End
		*out = new(string)
		**out = **in
	}
	if in.DataDisk != nil {
		in, out := &in.DataDisk, &out.DataDisk
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeyRangeDataDiskAssignment.
func (in *KeyRangeDataDiskAssignment) DeepCopy() *KeyRangeDataDiskAssignment {
	if in == nil {
		return nil
	}
	out := new(KeyRangeDataDiskAssignment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeyRangeLocation) DeepCopyInto(out *KeyRangeLocation) {
	*out = *in
	if in.Start != nil {
		in, out := &in.Start, &out.Start
		*out = new(string)
		**out = **in
	}
	if in.End != nil {
		in, out := &in.End, &out.End
		*out = new(string)
		**out = **in
	}
	if in.DeliveryEndpoint != nil {
		in, out := &in.DeliveryEndpoint, &out.DeliveryEndpoint
		*out = new(string)
		**out = **in
	}
	if in.DataDisk != nil {
		in, out := &in.DataDisk, &out.DataDisk
		*out = new(string)
		**out = **in
	}
	if in.DeprecatedPersistentDirectory != nil {
		in, out := &in.DeprecatedPersistentDirectory, &out.DeprecatedPersistentDirectory
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeyRangeLocation.
func (in *KeyRangeLocation) DeepCopy() *KeyRangeLocation {
	if in == nil {
		return nil
	}
	out := new(KeyRangeLocation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchFlexTemplateParameter) DeepCopyInto(out *LaunchFlexTemplateParameter) {
	*out = *in
	if in.JobName != nil {
		in, out := &in.JobName, &out.JobName
		*out = new(string)
		**out = **in
	}
	if in.ContainerSpec != nil {
		in, out := &in.ContainerSpec, &out.ContainerSpec
		*out = new(ContainerSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.ContainerSpecGcsPath != nil {
		in, out := &in.ContainerSpecGcsPath, &out.ContainerSpecGcsPath
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.LaunchOptions != nil {
		in, out := &in.LaunchOptions, &out.LaunchOptions
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Environment != nil {
		in, out := &in.Environment, &out.Environment
		*out = new(FlexTemplateRuntimeEnvironment)
		**out = **in
	}
	if in.Update != nil {
		in, out := &in.Update, &out.Update
		*out = new(bool)
		**out = **in
	}
	if in.TransformNameMappings != nil {
		in, out := &in.TransformNameMappings, &out.TransformNameMappings
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchFlexTemplateParameter.
func (in *LaunchFlexTemplateParameter) DeepCopy() *LaunchFlexTemplateParameter {
	if in == nil {
		return nil
	}
	out := new(LaunchFlexTemplateParameter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateParameters) DeepCopyInto(out *LaunchTemplateParameters) {
	*out = *in
	if in.JobName != nil {
		in, out := &in.JobName, &out.JobName
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Environment != nil {
		in, out := &in.Environment, &out.Environment
		*out = new(RuntimeEnvironment)
		(*in).DeepCopyInto(*out)
	}
	if in.Update != nil {
		in, out := &in.Update, &out.Update
		*out = new(bool)
		**out = **in
	}
	if in.TransformNameMapping != nil {
		in, out := &in.TransformNameMapping, &out.TransformNameMapping
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateParameters.
func (in *LaunchTemplateParameters) DeepCopy() *LaunchTemplateParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetricStructuredName) DeepCopyInto(out *MetricStructuredName) {
	*out = *in
	if in.Origin != nil {
		in, out := &in.Origin, &out.Origin
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetricStructuredName.
func (in *MetricStructuredName) DeepCopy() *MetricStructuredName {
	if in == nil {
		return nil
	}
	out := new(MetricStructuredName)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetricUpdate) DeepCopyInto(out *MetricUpdate) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(MetricStructuredName)
		(*in).DeepCopyInto(*out)
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.Cumulative != nil {
		in, out := &in.Cumulative, &out.Cumulative
		*out = new(bool)
		**out = **in
	}
	if in.Scalar != nil {
		in, out := &in.Scalar, &out.Scalar
		*out = new(google_protobuf_Value)
		**out = **in
	}
	if in.MeanSum != nil {
		in, out := &in.MeanSum, &out.MeanSum
		*out = new(google_protobuf_Value)
		**out = **in
	}
	if in.MeanCount != nil {
		in, out := &in.MeanCount, &out.MeanCount
		*out = new(google_protobuf_Value)
		**out = **in
	}
	if in.Set != nil {
		in, out := &in.Set, &out.Set
		*out = new(google_protobuf_Value)
		**out = **in
	}
	if in.Distribution != nil {
		in, out := &in.Distribution, &out.Distribution
		*out = new(google_protobuf_Value)
		**out = **in
	}
	if in.Gauge != nil {
		in, out := &in.Gauge, &out.Gauge
		*out = new(google_protobuf_Value)
		**out = **in
	}
	if in.Internal != nil {
		in, out := &in.Internal, &out.Internal
		*out = new(google_protobuf_Value)
		**out = **in
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetricUpdate.
func (in *MetricUpdate) DeepCopy() *MetricUpdate {
	if in == nil {
		return nil
	}
	out := new(MetricUpdate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MountedDataDisk) DeepCopyInto(out *MountedDataDisk) {
	*out = *in
	if in.DataDisk != nil {
		in, out := &in.DataDisk, &out.DataDisk
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MountedDataDisk.
func (in *MountedDataDisk) DeepCopy() *MountedDataDisk {
	if in == nil {
		return nil
	}
	out := new(MountedDataDisk)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Package) DeepCopyInto(out *Package) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Package.
func (in *Package) DeepCopy() *Package {
	if in == nil {
		return nil
	}
	out := new(Package)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineDescription) DeepCopyInto(out *PipelineDescription) {
	*out = *in
	if in.OriginalPipelineTransform != nil {
		in, out := &in.OriginalPipelineTransform, &out.OriginalPipelineTransform
		*out = make([]TransformSummary, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExecutionPipelineStage != nil {
		in, out := &in.ExecutionPipelineStage, &out.ExecutionPipelineStage
		*out = make([]ExecutionStageSummary, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DisplayData != nil {
		in, out := &in.DisplayData, &out.DisplayData
		*out = make([]DisplayData, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineDescription.
func (in *PipelineDescription) DeepCopy() *PipelineDescription {
	if in == nil {
		return nil
	}
	out := new(PipelineDescription)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProgressTimeseries) DeepCopyInto(out *ProgressTimeseries) {
	*out = *in
	if in.CurrentProgress != nil {
		in, out := &in.CurrentProgress, &out.CurrentProgress
		*out = new(float64)
		**out = **in
	}
	if in.DataPoints != nil {
		in, out := &in.DataPoints, &out.DataPoints
		*out = make([]ProgressTimeseries_Point, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProgressTimeseries.
func (in *ProgressTimeseries) DeepCopy() *ProgressTimeseries {
	if in == nil {
		return nil
	}
	out := new(ProgressTimeseries)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProgressTimeseries_Point) DeepCopyInto(out *ProgressTimeseries_Point) {
	*out = *in
	if in.Time != nil {
		in, out := &in.Time, &out.Time
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProgressTimeseries_Point.
func (in *ProgressTimeseries_Point) DeepCopy() *ProgressTimeseries_Point {
	if in == nil {
		return nil
	}
	out := new(ProgressTimeseries_Point)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PubSubIODetails) DeepCopyInto(out *PubSubIODetails) {
	*out = *in
	if in.Topic != nil {
		in, out := &in.Topic, &out.Topic
		*out = new(string)
		**out = **in
	}
	if in.Subscription != nil {
		in, out := &in.Subscription, &out.Subscription
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PubSubIODetails.
func (in *PubSubIODetails) DeepCopy() *PubSubIODetails {
	if in == nil {
		return nil
	}
	out := new(PubSubIODetails)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PubsubLocation) DeepCopyInto(out *PubsubLocation) {
	*out = *in
	if in.Topic != nil {
		in, out := &in.Topic, &out.Topic
		*out = new(string)
		**out = **in
	}
	if in.Subscription != nil {
		in, out := &in.Subscription, &out.Subscription
		*out = new(string)
		**out = **in
	}
	if in.TimestampLabel != nil {
		in, out := &in.TimestampLabel, &out.TimestampLabel
		*out = new(string)
		**out = **in
	}
	if in.IDLabel != nil {
		in, out := &in.IDLabel, &out.IDLabel
		*out = new(string)
		**out = **in
	}
	if in.DropLateData != nil {
		in, out := &in.DropLateData, &out.DropLateData
		*out = new(bool)
		**out = **in
	}
	if in.TrackingSubscription != nil {
		in, out := &in.TrackingSubscription, &out.TrackingSubscription
		*out = new(string)
		**out = **in
	}
	if in.WithAttributes != nil {
		in, out := &in.WithAttributes, &out.WithAttributes
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PubsubLocation.
func (in *PubsubLocation) DeepCopy() *PubsubLocation {
	if in == nil {
		return nil
	}
	out := new(PubsubLocation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PubsubSnapshotMetadata) DeepCopyInto(out *PubsubSnapshotMetadata) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PubsubSnapshotMetadata.
func (in *PubsubSnapshotMetadata) DeepCopy() *PubsubSnapshotMetadata {
	if in == nil {
		return nil
	}
	out := new(PubsubSnapshotMetadata)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuntimeEnvironment) DeepCopyInto(out *RuntimeEnvironment) {
	*out = *in
	if in.NumWorkers != nil {
		in, out := &in.NumWorkers, &out.NumWorkers
		*out = new(int32)
		**out = **in
	}
	if in.MaxWorkers != nil {
		in, out := &in.MaxWorkers, &out.MaxWorkers
		*out = new(int32)
		**out = **in
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
	if in.ServiceAccountEmail != nil {
		in, out := &in.ServiceAccountEmail, &out.ServiceAccountEmail
		*out = new(string)
		**out = **in
	}
	if in.TempLocation != nil {
		in, out := &in.TempLocation, &out.TempLocation
		*out = new(string)
		**out = **in
	}
	if in.BypassTempDirValidation != nil {
		in, out := &in.BypassTempDirValidation, &out.BypassTempDirValidation
		*out = new(bool)
		**out = **in
	}
	if in.MachineType != nil {
		in, out := &in.MachineType, &out.MachineType
		*out = new(string)
		**out = **in
	}
	if in.AdditionalExperiments != nil {
		in, out := &in.AdditionalExperiments, &out.AdditionalExperiments
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.Subnetwork != nil {
		in, out := &in.Subnetwork, &out.Subnetwork
		*out = new(string)
		**out = **in
	}
	if in.AdditionalUserLabels != nil {
		in, out := &in.AdditionalUserLabels, &out.AdditionalUserLabels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.KmsKeyName != nil {
		in, out := &in.KmsKeyName, &out.KmsKeyName
		*out = new(string)
		**out = **in
	}
	if in.IpConfiguration != nil {
		in, out := &in.IpConfiguration, &out.IpConfiguration
		*out = new(string)
		**out = **in
	}
	if in.WorkerRegion != nil {
		in, out := &in.WorkerRegion, &out.WorkerRegion
		*out = new(string)
		**out = **in
	}
	if in.WorkerZone != nil {
		in, out := &in.WorkerZone, &out.WorkerZone
		*out = new(string)
		**out = **in
	}
	if in.EnableStreamingEngine != nil {
		in, out := &in.EnableStreamingEngine, &out.EnableStreamingEngine
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuntimeEnvironment.
func (in *RuntimeEnvironment) DeepCopy() *RuntimeEnvironment {
	if in == nil {
		return nil
	}
	out := new(RuntimeEnvironment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SDKInfo) DeepCopyInto(out *SDKInfo) {
	*out = *in
	if in.Language != nil {
		in, out := &in.Language, &out.Language
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SDKInfo.
func (in *SDKInfo) DeepCopy() *SDKInfo {
	if in == nil {
		return nil
	}
	out := new(SDKInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SdkHarnessContainerImage) DeepCopyInto(out *SdkHarnessContainerImage) {
	*out = *in
	if in.ContainerImage != nil {
		in, out := &in.ContainerImage, &out.ContainerImage
		*out = new(string)
		**out = **in
	}
	if in.UseSingleCorePerContainer != nil {
		in, out := &in.UseSingleCorePerContainer, &out.UseSingleCorePerContainer
		*out = new(bool)
		**out = **in
	}
	if in.EnvironmentID != nil {
		in, out := &in.EnvironmentID, &out.EnvironmentID
		*out = new(string)
		**out = **in
	}
	if in.Capabilities != nil {
		in, out := &in.Capabilities, &out.Capabilities
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SdkHarnessContainerImage.
func (in *SdkHarnessContainerImage) DeepCopy() *SdkHarnessContainerImage {
	if in == nil {
		return nil
	}
	out := new(SdkHarnessContainerImage)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SdkVersion) DeepCopyInto(out *SdkVersion) {
	*out = *in
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
	if in.VersionDisplayName != nil {
		in, out := &in.VersionDisplayName, &out.VersionDisplayName
		*out = new(string)
		**out = **in
	}
	if in.SdkSupportStatus != nil {
		in, out := &in.SdkSupportStatus, &out.SdkSupportStatus
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SdkVersion.
func (in *SdkVersion) DeepCopy() *SdkVersion {
	if in == nil {
		return nil
	}
	out := new(SdkVersion)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Snapshot) DeepCopyInto(out *Snapshot) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.SourceJobID != nil {
		in, out := &in.SourceJobID, &out.SourceJobID
		*out = new(string)
		**out = **in
	}
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = new(string)
		**out = **in
	}
	if in.Ttl != nil {
		in, out := &in.Ttl, &out.Ttl
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.PubsubMetadata != nil {
		in, out := &in.PubsubMetadata, &out.PubsubMetadata
		*out = make([]PubsubSnapshotMetadata, len(*in))
		copy(*out, *in)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DiskSizeBytes != nil {
		in, out := &in.DiskSizeBytes, &out.DiskSizeBytes
		*out = new(int64)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Snapshot.
func (in *Snapshot) DeepCopy() *Snapshot {
	if in == nil {
		return nil
	}
	out := new(Snapshot)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpannerIODetails) DeepCopyInto(out *SpannerIODetails) {
	*out = *in
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.DatabaseID != nil {
		in, out := &in.DatabaseID, &out.DatabaseID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpannerIODetails.
func (in *SpannerIODetails) DeepCopy() *SpannerIODetails {
	if in == nil {
		return nil
	}
	out := new(SpannerIODetails)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StageExecutionDetails) DeepCopyInto(out *StageExecutionDetails) {
	*out = *in
	if in.Workers != nil {
		in, out := &in.Workers, &out.Workers
		*out = make([]WorkerDetails, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NextPageToken != nil {
		in, out := &in.NextPageToken, &out.NextPageToken
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StageExecutionDetails.
func (in *StageExecutionDetails) DeepCopy() *StageExecutionDetails {
	if in == nil {
		return nil
	}
	out := new(StageExecutionDetails)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StageSummary) DeepCopyInto(out *StageSummary) {
	*out = *in
	if in.StageID != nil {
		in, out := &in.StageID, &out.StageID
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(string)
		**out = **in
	}
	if in.EndTime != nil {
		in, out := &in.EndTime, &out.EndTime
		*out = new(string)
		**out = **in
	}
	if in.Progress != nil {
		in, out := &in.Progress, &out.Progress
		*out = new(ProgressTimeseries)
		(*in).DeepCopyInto(*out)
	}
	if in.Metrics != nil {
		in, out := &in.Metrics, &out.Metrics
		*out = make([]MetricUpdate, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StageSummary.
func (in *StageSummary) DeepCopy() *StageSummary {
	if in == nil {
		return nil
	}
	out := new(StageSummary)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StateFamilyConfig) DeepCopyInto(out *StateFamilyConfig) {
	*out = *in
	if in.StateFamily != nil {
		in, out := &in.StateFamily, &out.StateFamily
		*out = new(string)
		**out = **in
	}
	if in.IsRead != nil {
		in, out := &in.IsRead, &out.IsRead
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StateFamilyConfig.
func (in *StateFamilyConfig) DeepCopy() *StateFamilyConfig {
	if in == nil {
		return nil
	}
	out := new(StateFamilyConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Step) DeepCopyInto(out *Step) {
	*out = *in
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = new(google_protobuf_Struct)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Step.
func (in *Step) DeepCopy() *Step {
	if in == nil {
		return nil
	}
	out := new(Step)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StreamLocation) DeepCopyInto(out *StreamLocation) {
	*out = *in
	if in.StreamingStageLocation != nil {
		in, out := &in.StreamingStageLocation, &out.StreamingStageLocation
		*out = new(StreamingStageLocation)
		(*in).DeepCopyInto(*out)
	}
	if in.PubsubLocation != nil {
		in, out := &in.PubsubLocation, &out.PubsubLocation
		*out = new(PubsubLocation)
		(*in).DeepCopyInto(*out)
	}
	if in.SideInputLocation != nil {
		in, out := &in.SideInputLocation, &out.SideInputLocation
		*out = new(StreamingSideInputLocation)
		(*in).DeepCopyInto(*out)
	}
	if in.CustomSourceLocation != nil {
		in, out := &in.CustomSourceLocation, &out.CustomSourceLocation
		*out = new(CustomSourceLocation)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StreamLocation.
func (in *StreamLocation) DeepCopy() *StreamLocation {
	if in == nil {
		return nil
	}
	out := new(StreamLocation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StreamingApplianceSnapshotConfig) DeepCopyInto(out *StreamingApplianceSnapshotConfig) {
	*out = *in
	if in.SnapshotID != nil {
		in, out := &in.SnapshotID, &out.SnapshotID
		*out = new(string)
		**out = **in
	}
	if in.ImportStateEndpoint != nil {
		in, out := &in.ImportStateEndpoint, &out.ImportStateEndpoint
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StreamingApplianceSnapshotConfig.
func (in *StreamingApplianceSnapshotConfig) DeepCopy() *StreamingApplianceSnapshotConfig {
	if in == nil {
		return nil
	}
	out := new(StreamingApplianceSnapshotConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StreamingComputationRanges) DeepCopyInto(out *StreamingComputationRanges) {
	*out = *in
	if in.ComputationID != nil {
		in, out := &in.ComputationID, &out.ComputationID
		*out = new(string)
		**out = **in
	}
	if in.RangeAssignments != nil {
		in, out := &in.RangeAssignments, &out.RangeAssignments
		*out = make([]KeyRangeDataDiskAssignment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StreamingComputationRanges.
func (in *StreamingComputationRanges) DeepCopy() *StreamingComputationRanges {
	if in == nil {
		return nil
	}
	out := new(StreamingComputationRanges)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StreamingSideInputLocation) DeepCopyInto(out *StreamingSideInputLocation) {
	*out = *in
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.StateFamily != nil {
		in, out := &in.StateFamily, &out.StateFamily
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StreamingSideInputLocation.
func (in *StreamingSideInputLocation) DeepCopy() *StreamingSideInputLocation {
	if in == nil {
		return nil
	}
	out := new(StreamingSideInputLocation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StreamingStageLocation) DeepCopyInto(out *StreamingStageLocation) {
	*out = *in
	if in.StreamID != nil {
		in, out := &in.StreamID, &out.StreamID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StreamingStageLocation.
func (in *StreamingStageLocation) DeepCopy() *StreamingStageLocation {
	if in == nil {
		return nil
	}
	out := new(StreamingStageLocation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StructuredMessage) DeepCopyInto(out *StructuredMessage) {
	*out = *in
	if in.MessageText != nil {
		in, out := &in.MessageText, &out.MessageText
		*out = new(string)
		**out = **in
	}
	if in.MessageKey != nil {
		in, out := &in.MessageKey, &out.MessageKey
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]StructuredMessage_Parameter, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StructuredMessage.
func (in *StructuredMessage) DeepCopy() *StructuredMessage {
	if in == nil {
		return nil
	}
	out := new(StructuredMessage)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StructuredMessage_Parameter) DeepCopyInto(out *StructuredMessage_Parameter) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(google_protobuf_Value)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StructuredMessage_Parameter.
func (in *StructuredMessage_Parameter) DeepCopy() *StructuredMessage_Parameter {
	if in == nil {
		return nil
	}
	out := new(StructuredMessage_Parameter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskRunnerSettings) DeepCopyInto(out *TaskRunnerSettings) {
	*out = *in
	if in.TaskUser != nil {
		in, out := &in.TaskUser, &out.TaskUser
		*out = new(string)
		**out = **in
	}
	if in.TaskGroup != nil {
		in, out := &in.TaskGroup, &out.TaskGroup
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.BaseURL != nil {
		in, out := &in.BaseURL, &out.BaseURL
		*out = new(string)
		**out = **in
	}
	if in.DataflowApiVersion != nil {
		in, out := &in.DataflowApiVersion, &out.DataflowApiVersion
		*out = new(string)
		**out = **in
	}
	if in.ParallelWorkerSettings != nil {
		in, out := &in.ParallelWorkerSettings, &out.ParallelWorkerSettings
		*out = new(WorkerSettings)
		(*in).DeepCopyInto(*out)
	}
	if in.BaseTaskDir != nil {
		in, out := &in.BaseTaskDir, &out.BaseTaskDir
		*out = new(string)
		**out = **in
	}
	if in.ContinueOnException != nil {
		in, out := &in.ContinueOnException, &out.ContinueOnException
		*out = new(bool)
		**out = **in
	}
	if in.LogToSerialconsole != nil {
		in, out := &in.LogToSerialconsole, &out.LogToSerialconsole
		*out = new(bool)
		**out = **in
	}
	if in.Alsologtostderr != nil {
		in, out := &in.Alsologtostderr, &out.Alsologtostderr
		*out = new(bool)
		**out = **in
	}
	if in.LogUploadLocation != nil {
		in, out := &in.LogUploadLocation, &out.LogUploadLocation
		*out = new(string)
		**out = **in
	}
	if in.LogDir != nil {
		in, out := &in.LogDir, &out.LogDir
		*out = new(string)
		**out = **in
	}
	if in.TempStoragePrefix != nil {
		in, out := &in.TempStoragePrefix, &out.TempStoragePrefix
		*out = new(string)
		**out = **in
	}
	if in.HarnessCommand != nil {
		in, out := &in.HarnessCommand, &out.HarnessCommand
		*out = new(string)
		**out = **in
	}
	if in.WorkflowFileName != nil {
		in, out := &in.WorkflowFileName, &out.WorkflowFileName
		*out = new(string)
		**out = **in
	}
	if in.CommandlinesFileName != nil {
		in, out := &in.CommandlinesFileName, &out.CommandlinesFileName
		*out = new(string)
		**out = **in
	}
	if in.VmID != nil {
		in, out := &in.VmID, &out.VmID
		*out = new(string)
		**out = **in
	}
	if in.LanguageHint != nil {
		in, out := &in.LanguageHint, &out.LanguageHint
		*out = new(string)
		**out = **in
	}
	if in.StreamingWorkerMainClass != nil {
		in, out := &in.StreamingWorkerMainClass, &out.StreamingWorkerMainClass
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskRunnerSettings.
func (in *TaskRunnerSettings) DeepCopy() *TaskRunnerSettings {
	if in == nil {
		return nil
	}
	out := new(TaskRunnerSettings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TemplateMetadata) DeepCopyInto(out *TemplateMetadata) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TemplateMetadata.
func (in *TemplateMetadata) DeepCopy() *TemplateMetadata {
	if in == nil {
		return nil
	}
	out := new(TemplateMetadata)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopologyConfig) DeepCopyInto(out *TopologyConfig) {
	*out = *in
	if in.Computations != nil {
		in, out := &in.Computations, &out.Computations
		*out = make([]ComputationTopology, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DataDiskAssignments != nil {
		in, out := &in.DataDiskAssignments, &out.DataDiskAssignments
		*out = make([]DataDiskAssignment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UserStageToComputationNameMap != nil {
		in, out := &in.UserStageToComputationNameMap, &out.UserStageToComputationNameMap
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ForwardingKeyBits != nil {
		in, out := &in.ForwardingKeyBits, &out.ForwardingKeyBits
		*out = new(int32)
		**out = **in
	}
	if in.PersistentStateVersion != nil {
		in, out := &in.PersistentStateVersion, &out.PersistentStateVersion
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopologyConfig.
func (in *TopologyConfig) DeepCopy() *TopologyConfig {
	if in == nil {
		return nil
	}
	out := new(TopologyConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransformSummary) DeepCopyInto(out *TransformSummary) {
	*out = *in
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.DisplayData != nil {
		in, out := &in.DisplayData, &out.DisplayData
		*out = make([]DisplayData, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OutputCollectionName != nil {
		in, out := &in.OutputCollectionName, &out.OutputCollectionName
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.InputCollectionName != nil {
		in, out := &in.InputCollectionName, &out.InputCollectionName
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransformSummary.
func (in *TransformSummary) DeepCopy() *TransformSummary {
	if in == nil {
		return nil
	}
	out := new(TransformSummary)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkItemDetails) DeepCopyInto(out *WorkItemDetails) {
	*out = *in
	if in.TaskID != nil {
		in, out := &in.TaskID, &out.TaskID
		*out = new(string)
		**out = **in
	}
	if in.AttemptID != nil {
		in, out := &in.AttemptID, &out.AttemptID
		*out = new(string)
		**out = **in
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(string)
		**out = **in
	}
	if in.EndTime != nil {
		in, out := &in.EndTime, &out.EndTime
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.Progress != nil {
		in, out := &in.Progress, &out.Progress
		*out = new(ProgressTimeseries)
		(*in).DeepCopyInto(*out)
	}
	if in.Metrics != nil {
		in, out := &in.Metrics, &out.Metrics
		*out = make([]MetricUpdate, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkItemDetails.
func (in *WorkItemDetails) DeepCopy() *WorkItemDetails {
	if in == nil {
		return nil
	}
	out := new(WorkItemDetails)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkerDetails) DeepCopyInto(out *WorkerDetails) {
	*out = *in
	if in.WorkerName != nil {
		in, out := &in.WorkerName, &out.WorkerName
		*out = new(string)
		**out = **in
	}
	if in.WorkItems != nil {
		in, out := &in.WorkItems, &out.WorkItems
		*out = make([]WorkItemDetails, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkerDetails.
func (in *WorkerDetails) DeepCopy() *WorkerDetails {
	if in == nil {
		return nil
	}
	out := new(WorkerDetails)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkerPool) DeepCopyInto(out *WorkerPool) {
	*out = *in
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.NumWorkers != nil {
		in, out := &in.NumWorkers, &out.NumWorkers
		*out = new(int32)
		**out = **in
	}
	if in.Packages != nil {
		in, out := &in.Packages, &out.Packages
		*out = make([]Package, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultPackageSet != nil {
		in, out := &in.DefaultPackageSet, &out.DefaultPackageSet
		*out = new(string)
		**out = **in
	}
	if in.MachineType != nil {
		in, out := &in.MachineType, &out.MachineType
		*out = new(string)
		**out = **in
	}
	if in.TeardownPolicy != nil {
		in, out := &in.TeardownPolicy, &out.TeardownPolicy
		*out = new(string)
		**out = **in
	}
	if in.DiskSizeGb != nil {
		in, out := &in.DiskSizeGb, &out.DiskSizeGb
		*out = new(int32)
		**out = **in
	}
	if in.DiskType != nil {
		in, out := &in.DiskType, &out.DiskType
		*out = new(string)
		**out = **in
	}
	if in.DiskSourceImage != nil {
		in, out := &in.DiskSourceImage, &out.DiskSourceImage
		*out = new(string)
		**out = **in
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
	if in.TaskrunnerSettings != nil {
		in, out := &in.TaskrunnerSettings, &out.TaskrunnerSettings
		*out = new(TaskRunnerSettings)
		(*in).DeepCopyInto(*out)
	}
	if in.OnHostMaintenance != nil {
		in, out := &in.OnHostMaintenance, &out.OnHostMaintenance
		*out = new(string)
		**out = **in
	}
	if in.DataDisks != nil {
		in, out := &in.DataDisks, &out.DataDisks
		*out = make([]Disk, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.AutoscalingSettings != nil {
		in, out := &in.AutoscalingSettings, &out.AutoscalingSettings
		*out = new(AutoscalingSettings)
		(*in).DeepCopyInto(*out)
	}
	if in.PoolArgs != nil {
		in, out := &in.PoolArgs, &out.PoolArgs
		*out = new(google_protobuf_Any)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.Subnetwork != nil {
		in, out := &in.Subnetwork, &out.Subnetwork
		*out = new(string)
		**out = **in
	}
	if in.WorkerHarnessContainerImage != nil {
		in, out := &in.WorkerHarnessContainerImage, &out.WorkerHarnessContainerImage
		*out = new(string)
		**out = **in
	}
	if in.NumThreadsPerWorker != nil {
		in, out := &in.NumThreadsPerWorker, &out.NumThreadsPerWorker
		*out = new(int32)
		**out = **in
	}
	if in.IpConfiguration != nil {
		in, out := &in.IpConfiguration, &out.IpConfiguration
		*out = new(string)
		**out = **in
	}
	if in.SdkHarnessContainerImages != nil {
		in, out := &in.SdkHarnessContainerImages, &out.SdkHarnessContainerImages
		*out = make([]SdkHarnessContainerImage, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkerPool.
func (in *WorkerPool) DeepCopy() *WorkerPool {
	if in == nil {
		return nil
	}
	out := new(WorkerPool)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkerSettings) DeepCopyInto(out *WorkerSettings) {
	*out = *in
	if in.BaseURL != nil {
		in, out := &in.BaseURL, &out.BaseURL
		*out = new(string)
		**out = **in
	}
	if in.ReportingEnabled != nil {
		in, out := &in.ReportingEnabled, &out.ReportingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ServicePath != nil {
		in, out := &in.ServicePath, &out.ServicePath
		*out = new(string)
		**out = **in
	}
	if in.ShuffleServicePath != nil {
		in, out := &in.ShuffleServicePath, &out.ShuffleServicePath
		*out = new(string)
		**out = **in
	}
	if in.WorkerID != nil {
		in, out := &in.WorkerID, &out.WorkerID
		*out = new(string)
		**out = **in
	}
	if in.TempStoragePrefix != nil {
		in, out := &in.TempStoragePrefix, &out.TempStoragePrefix
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkerSettings.
func (in *WorkerSettings) DeepCopy() *WorkerSettings {
	if in == nil {
		return nil
	}
	out := new(WorkerSettings)
	in.DeepCopyInto(out)
	return out
}
