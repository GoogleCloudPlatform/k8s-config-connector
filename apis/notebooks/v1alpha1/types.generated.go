// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package v1alpha1


// +kcc:proto=google.cloud.notebooks.v1.Execution
type Execution struct {
	// execute metadata including name, hardware spec, region, labels, etc.
	// +kcc:proto:field=google.cloud.notebooks.v1.Execution.execution_template
	ExecutionTemplate *ExecutionTemplate `json:"executionTemplate,omitempty"`

	// A brief description of this execution.
	// +kcc:proto:field=google.cloud.notebooks.v1.Execution.description
	Description *string `json:"description,omitempty"`

	// Output notebook file generated by this execution
	// +kcc:proto:field=google.cloud.notebooks.v1.Execution.output_notebook_file
	OutputNotebookFile *string `json:"outputNotebookFile,omitempty"`
}

// +kcc:proto=google.cloud.notebooks.v1.ExecutionTemplate
type ExecutionTemplate struct {
	// Required. Scale tier of the hardware used for notebook execution.
	//  DEPRECATED Will be discontinued. As right now only CUSTOM is supported.
	// +kcc:proto:field=google.cloud.notebooks.v1.ExecutionTemplate.scale_tier
	ScaleTier *string `json:"scaleTier,omitempty"`

	// Specifies the type of virtual machine to use for your training
	//  job's master worker. You must specify this field when `scaleTier` is set to
	//  `CUSTOM`.
	//
	//  You can use certain Compute Engine machine types directly in this field.
	//  The following types are supported:
	//
	//  - `n1-standard-4`
	//  - `n1-standard-8`
	//  - `n1-standard-16`
	//  - `n1-standard-32`
	//  - `n1-standard-64`
	//  - `n1-standard-96`
	//  - `n1-highmem-2`
	//  - `n1-highmem-4`
	//  - `n1-highmem-8`
	//  - `n1-highmem-16`
	//  - `n1-highmem-32`
	//  - `n1-highmem-64`
	//  - `n1-highmem-96`
	//  - `n1-highcpu-16`
	//  - `n1-highcpu-32`
	//  - `n1-highcpu-64`
	//  - `n1-highcpu-96`
	//
	//
	//  Alternatively, you can use the following legacy machine types:
	//
	//  - `standard`
	//  - `large_model`
	//  - `complex_model_s`
	//  - `complex_model_m`
	//  - `complex_model_l`
	//  - `standard_gpu`
	//  - `complex_model_m_gpu`
	//  - `complex_model_l_gpu`
	//  - `standard_p100`
	//  - `complex_model_m_p100`
	//  - `standard_v100`
	//  - `large_model_v100`
	//  - `complex_model_m_v100`
	//  - `complex_model_l_v100`
	//
	//
	//  Finally, if you want to use a TPU for training, specify `cloud_tpu` in this
	//  field. Learn more about the [special configuration options for training
	//  with
	//  TPU](https://cloud.google.com/ai-platform/training/docs/using-tpus#configuring_a_custom_tpu_machine).
	// +kcc:proto:field=google.cloud.notebooks.v1.ExecutionTemplate.master_type
	MasterType *string `json:"masterType,omitempty"`

	// Configuration (count and accelerator type) for hardware running notebook
	//  execution.
	// +kcc:proto:field=google.cloud.notebooks.v1.ExecutionTemplate.accelerator_config
	AcceleratorConfig *ExecutionTemplate_SchedulerAcceleratorConfig `json:"acceleratorConfig,omitempty"`

	// Labels for execution.
	//  If execution is scheduled, a field included will be 'nbs-scheduled'.
	//  Otherwise, it is an immediate execution, and an included field will be
	//  'nbs-immediate'. Use fields to efficiently index between various types of
	//  executions.
	// +kcc:proto:field=google.cloud.notebooks.v1.ExecutionTemplate.labels
	Labels map[string]string `json:"labels,omitempty"`

	// Path to the notebook file to execute.
	//  Must be in a Google Cloud Storage bucket.
	//  Format: `gs://{bucket_name}/{folder}/{notebook_file_name}`
	//  Ex: `gs://notebook_user/scheduled_notebooks/sentiment_notebook.ipynb`
	// +kcc:proto:field=google.cloud.notebooks.v1.ExecutionTemplate.input_notebook_file
	InputNotebookFile *string `json:"inputNotebookFile,omitempty"`

	// Container Image URI to a DLVM
	//  Example: 'gcr.io/deeplearning-platform-release/base-cu100'
	//  More examples can be found at:
	//  https://cloud.google.com/ai-platform/deep-learning-containers/docs/choosing-container
	// +kcc:proto:field=google.cloud.notebooks.v1.ExecutionTemplate.container_image_uri
	ContainerImageURI *string `json:"containerImageURI,omitempty"`

	// Path to the notebook folder to write to.
	//  Must be in a Google Cloud Storage bucket path.
	//  Format: `gs://{bucket_name}/{folder}`
	//  Ex: `gs://notebook_user/scheduled_notebooks`
	// +kcc:proto:field=google.cloud.notebooks.v1.ExecutionTemplate.output_notebook_folder
	OutputNotebookFolder *string `json:"outputNotebookFolder,omitempty"`

	// Parameters to be overridden in the notebook during execution.
	//  Ref https://papermill.readthedocs.io/en/latest/usage-parameterize.html on
	//  how to specifying parameters in the input notebook and pass them here
	//  in an YAML file.
	//  Ex: `gs://notebook_user/scheduled_notebooks/sentiment_notebook_params.yaml`
	// +kcc:proto:field=google.cloud.notebooks.v1.ExecutionTemplate.params_yaml_file
	ParamsYamlFile *string `json:"paramsYamlFile,omitempty"`

	// Parameters used within the 'input_notebook_file' notebook.
	// +kcc:proto:field=google.cloud.notebooks.v1.ExecutionTemplate.parameters
	Parameters *string `json:"parameters,omitempty"`

	// The email address of a service account to use when running the execution.
	//  You must have the `iam.serviceAccounts.actAs` permission for the specified
	//  service account.
	// +kcc:proto:field=google.cloud.notebooks.v1.ExecutionTemplate.service_account
	ServiceAccount *string `json:"serviceAccount,omitempty"`

	// The type of Job to be used on this execution.
	// +kcc:proto:field=google.cloud.notebooks.v1.ExecutionTemplate.job_type
	JobType *string `json:"jobType,omitempty"`

	// Parameters used in Dataproc JobType executions.
	// +kcc:proto:field=google.cloud.notebooks.v1.ExecutionTemplate.dataproc_parameters
	DataprocParameters *ExecutionTemplate_DataprocParameters `json:"dataprocParameters,omitempty"`

	// Parameters used in Vertex AI JobType executions.
	// +kcc:proto:field=google.cloud.notebooks.v1.ExecutionTemplate.vertex_ai_parameters
	VertexAiParameters *ExecutionTemplate_VertexAIParameters `json:"vertexAiParameters,omitempty"`

	// Name of the kernel spec to use. This must be specified if the
	//  kernel spec name on the execution target does not match the name in the
	//  input notebook file.
	// +kcc:proto:field=google.cloud.notebooks.v1.ExecutionTemplate.kernel_spec
	KernelSpec *string `json:"kernelSpec,omitempty"`

	// The name of a Vertex AI [Tensorboard] resource to which this execution
	//  will upload Tensorboard logs.
	//  Format:
	//  `projects/{project}/locations/{location}/tensorboards/{tensorboard}`
	// +kcc:proto:field=google.cloud.notebooks.v1.ExecutionTemplate.tensorboard
	Tensorboard *string `json:"tensorboard,omitempty"`
}

// +kcc:proto=google.cloud.notebooks.v1.ExecutionTemplate.DataprocParameters
type ExecutionTemplate_DataprocParameters struct {
	// URI for cluster used to run Dataproc execution.
	//  Format: `projects/{PROJECT_ID}/regions/{REGION}/clusters/{CLUSTER_NAME}`
	// +kcc:proto:field=google.cloud.notebooks.v1.ExecutionTemplate.DataprocParameters.cluster
	Cluster *string `json:"cluster,omitempty"`
}

// +kcc:proto=google.cloud.notebooks.v1.ExecutionTemplate.SchedulerAcceleratorConfig
type ExecutionTemplate_SchedulerAcceleratorConfig struct {
	// Type of this accelerator.
	// +kcc:proto:field=google.cloud.notebooks.v1.ExecutionTemplate.SchedulerAcceleratorConfig.type
	Type *string `json:"type,omitempty"`

	// Count of cores of this accelerator.
	// +kcc:proto:field=google.cloud.notebooks.v1.ExecutionTemplate.SchedulerAcceleratorConfig.core_count
	CoreCount *int64 `json:"coreCount,omitempty"`
}

// +kcc:proto=google.cloud.notebooks.v1.ExecutionTemplate.VertexAIParameters
type ExecutionTemplate_VertexAIParameters struct {
	// The full name of the Compute Engine
	//  [network](https://cloud.google.com/compute/docs/networks-and-firewalls#networks)
	//  to which the Job should be peered. For example,
	//  `projects/12345/global/networks/myVPC`.
	//  [Format](https://cloud.google.com/compute/docs/reference/rest/v1/networks/insert)
	//  is of the form `projects/{project}/global/networks/{network}`.
	//  Where `{project}` is a project number, as in `12345`, and `{network}` is
	//  a network name.
	//
	//  Private services access must already be configured for the network. If
	//  left unspecified, the job is not peered with any network.
	// +kcc:proto:field=google.cloud.notebooks.v1.ExecutionTemplate.VertexAIParameters.network
	Network *string `json:"network,omitempty"`

	// Environment variables.
	//  At most 100 environment variables can be specified and unique.
	//  Example: `GCP_BUCKET=gs://my-bucket/samples/`
	// +kcc:proto:field=google.cloud.notebooks.v1.ExecutionTemplate.VertexAIParameters.env
	Env map[string]string `json:"env,omitempty"`
}

// +kcc:proto=google.cloud.notebooks.v1.Schedule
type Schedule struct {

	// A brief description of this environment.
	// +kcc:proto:field=google.cloud.notebooks.v1.Schedule.description
	Description *string `json:"description,omitempty"`

	// +kcc:proto:field=google.cloud.notebooks.v1.Schedule.state
	State *string `json:"state,omitempty"`

	// Cron-tab formatted schedule by which the job will execute.
	//  Format: minute, hour, day of month, month, day of week,
	//  e.g. `0 0 * * WED` = every Wednesday
	//  More examples: https://crontab.guru/examples.html
	// +kcc:proto:field=google.cloud.notebooks.v1.Schedule.cron_schedule
	CronSchedule *string `json:"cronSchedule,omitempty"`

	// Timezone on which the cron_schedule.
	//  The value of this field must be a time zone name from the tz database.
	//  TZ Database: https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
	//
	//  Note that some time zones include a provision for daylight savings time.
	//  The rules for daylight saving time are determined by the chosen tz.
	//  For UTC use the string "utc". If a time zone is not specified,
	//  the default will be in UTC (also known as GMT).
	// +kcc:proto:field=google.cloud.notebooks.v1.Schedule.time_zone
	TimeZone *string `json:"timeZone,omitempty"`

	// Notebook Execution Template corresponding to this schedule.
	// +kcc:proto:field=google.cloud.notebooks.v1.Schedule.execution_template
	ExecutionTemplate *ExecutionTemplate `json:"executionTemplate,omitempty"`
}

// +kcc:proto=google.cloud.notebooks.v1.Execution
type ExecutionObservedState struct {
	// Output only. The resource name of the execute. Format:
	//  `projects/{project_id}/locations/{location}/executions/{execution_id}`
	// +kcc:proto:field=google.cloud.notebooks.v1.Execution.name
	Name *string `json:"name,omitempty"`

	// Output only. Name used for UI purposes.
	//  Name can only contain alphanumeric characters and underscores '_'.
	// +kcc:proto:field=google.cloud.notebooks.v1.Execution.display_name
	DisplayName *string `json:"displayName,omitempty"`

	// Output only. Time the Execution was instantiated.
	// +kcc:proto:field=google.cloud.notebooks.v1.Execution.create_time
	CreateTime *string `json:"createTime,omitempty"`

	// Output only. Time the Execution was last updated.
	// +kcc:proto:field=google.cloud.notebooks.v1.Execution.update_time
	UpdateTime *string `json:"updateTime,omitempty"`

	// Output only. State of the underlying AI Platform job.
	// +kcc:proto:field=google.cloud.notebooks.v1.Execution.state
	State *string `json:"state,omitempty"`

	// Output only. The URI of the external job used to execute the notebook.
	// +kcc:proto:field=google.cloud.notebooks.v1.Execution.job_uri
	JobURI *string `json:"jobURI,omitempty"`
}

// +kcc:proto=google.cloud.notebooks.v1.Schedule
type ScheduleObservedState struct {
	// Output only. The name of this schedule. Format:
	//  `projects/{project_id}/locations/{location}/schedules/{schedule_id}`
	// +kcc:proto:field=google.cloud.notebooks.v1.Schedule.name
	Name *string `json:"name,omitempty"`

	// Output only. Display name used for UI purposes.
	//  Name can only contain alphanumeric characters, hyphens `-`,
	//  and underscores `_`.
	// +kcc:proto:field=google.cloud.notebooks.v1.Schedule.display_name
	DisplayName *string `json:"displayName,omitempty"`

	// Output only. Time the schedule was created.
	// +kcc:proto:field=google.cloud.notebooks.v1.Schedule.create_time
	CreateTime *string `json:"createTime,omitempty"`

	// Output only. Time the schedule was last updated.
	// +kcc:proto:field=google.cloud.notebooks.v1.Schedule.update_time
	UpdateTime *string `json:"updateTime,omitempty"`

	// Output only. The most recent execution names triggered from this schedule and their
	//  corresponding states.
	// +kcc:proto:field=google.cloud.notebooks.v1.Schedule.recent_executions
	RecentExecutions []Execution `json:"recentExecutions,omitempty"`
}
