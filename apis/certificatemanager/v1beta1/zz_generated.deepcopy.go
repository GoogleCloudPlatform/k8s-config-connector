//go:build !ignore_autogenerated

// Code generated by controller-gen. DO NOT EDIT.

package v1beta1

import (
	"github.com/GoogleCloudPlatform/k8s-config-connector/pkg/apis/k8s/v1alpha1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Certificate) DeepCopyInto(out *Certificate) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.SelfManaged != nil {
		in, out := &in.SelfManaged, &out.SelfManaged
		*out = new(Certificate_SelfManagedCertificate)
		(*in).DeepCopyInto(*out)
	}
	if in.Managed != nil {
		in, out := &in.Managed, &out.Managed
		*out = new(Certificate_ManagedCertificate)
		(*in).DeepCopyInto(*out)
	}
	if in.SanDnsnames != nil {
		in, out := &in.SanDnsnames, &out.SanDnsnames
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.PemCertificate != nil {
		in, out := &in.PemCertificate, &out.PemCertificate
		*out = new(string)
		**out = **in
	}
	if in.ExpireTime != nil {
		in, out := &in.ExpireTime, &out.ExpireTime
		*out = new(string)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Certificate.
func (in *Certificate) DeepCopy() *Certificate {
	if in == nil {
		return nil
	}
	out := new(Certificate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CertificateIssuanceConfig) DeepCopyInto(out *CertificateIssuanceConfig) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.CertificateAuthorityConfig != nil {
		in, out := &in.CertificateAuthorityConfig, &out.CertificateAuthorityConfig
		*out = new(CertificateIssuanceConfig_CertificateAuthorityConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Lifetime != nil {
		in, out := &in.Lifetime, &out.Lifetime
		*out = new(string)
		**out = **in
	}
	if in.RotationWindowPercentage != nil {
		in, out := &in.RotationWindowPercentage, &out.RotationWindowPercentage
		*out = new(int32)
		**out = **in
	}
	if in.KeyAlgorithm != nil {
		in, out := &in.KeyAlgorithm, &out.KeyAlgorithm
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CertificateIssuanceConfig.
func (in *CertificateIssuanceConfig) DeepCopy() *CertificateIssuanceConfig {
	if in == nil {
		return nil
	}
	out := new(CertificateIssuanceConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CertificateIssuanceConfig_CertificateAuthorityConfig) DeepCopyInto(out *CertificateIssuanceConfig_CertificateAuthorityConfig) {
	*out = *in
	if in.CertificateAuthorityServiceConfig != nil {
		in, out := &in.CertificateAuthorityServiceConfig, &out.CertificateAuthorityServiceConfig
		*out = new(CertificateIssuanceConfig_CertificateAuthorityConfig_CertificateAuthorityServiceConfig)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CertificateIssuanceConfig_CertificateAuthorityConfig.
func (in *CertificateIssuanceConfig_CertificateAuthorityConfig) DeepCopy() *CertificateIssuanceConfig_CertificateAuthorityConfig {
	if in == nil {
		return nil
	}
	out := new(CertificateIssuanceConfig_CertificateAuthorityConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CertificateIssuanceConfig_CertificateAuthorityConfig_CertificateAuthorityServiceConfig) DeepCopyInto(out *CertificateIssuanceConfig_CertificateAuthorityConfig_CertificateAuthorityServiceConfig) {
	*out = *in
	if in.CaPool != nil {
		in, out := &in.CaPool, &out.CaPool
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CertificateIssuanceConfig_CertificateAuthorityConfig_CertificateAuthorityServiceConfig.
func (in *CertificateIssuanceConfig_CertificateAuthorityConfig_CertificateAuthorityServiceConfig) DeepCopy() *CertificateIssuanceConfig_CertificateAuthorityConfig_CertificateAuthorityServiceConfig {
	if in == nil {
		return nil
	}
	out := new(CertificateIssuanceConfig_CertificateAuthorityConfig_CertificateAuthorityServiceConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CertificateManagerDNSAuthorization) DeepCopyInto(out *CertificateManagerDNSAuthorization) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CertificateManagerDNSAuthorization.
func (in *CertificateManagerDNSAuthorization) DeepCopy() *CertificateManagerDNSAuthorization {
	if in == nil {
		return nil
	}
	out := new(CertificateManagerDNSAuthorization)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CertificateManagerDNSAuthorization) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CertificateManagerDNSAuthorizationList) DeepCopyInto(out *CertificateManagerDNSAuthorizationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]CertificateManagerDNSAuthorization, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CertificateManagerDNSAuthorizationList.
func (in *CertificateManagerDNSAuthorizationList) DeepCopy() *CertificateManagerDNSAuthorizationList {
	if in == nil {
		return nil
	}
	out := new(CertificateManagerDNSAuthorizationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CertificateManagerDNSAuthorizationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CertificateManagerDNSAuthorizationSpec) DeepCopyInto(out *CertificateManagerDNSAuthorizationSpec) {
	*out = *in
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	out.ProjectRef = in.ProjectRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CertificateManagerDNSAuthorizationSpec.
func (in *CertificateManagerDNSAuthorizationSpec) DeepCopy() *CertificateManagerDNSAuthorizationSpec {
	if in == nil {
		return nil
	}
	out := new(CertificateManagerDNSAuthorizationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CertificateManagerDNSAuthorizationStatus) DeepCopyInto(out *CertificateManagerDNSAuthorizationStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1alpha1.Condition, len(*in))
		copy(*out, *in)
	}
	if in.DnsResourceRecord != nil {
		in, out := &in.DnsResourceRecord, &out.DnsResourceRecord
		*out = make([]DnsauthorizationDnsResourceRecordStatus, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ObservedGeneration != nil {
		in, out := &in.ObservedGeneration, &out.ObservedGeneration
		*out = new(int)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CertificateManagerDNSAuthorizationStatus.
func (in *CertificateManagerDNSAuthorizationStatus) DeepCopy() *CertificateManagerDNSAuthorizationStatus {
	if in == nil {
		return nil
	}
	out := new(CertificateManagerDNSAuthorizationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CertificateMap) DeepCopyInto(out *CertificateMap) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.GclbTargets != nil {
		in, out := &in.GclbTargets, &out.GclbTargets
		*out = make([]CertificateMap_GclbTarget, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CertificateMap.
func (in *CertificateMap) DeepCopy() *CertificateMap {
	if in == nil {
		return nil
	}
	out := new(CertificateMap)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CertificateMapEntry) DeepCopyInto(out *CertificateMapEntry) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.Matcher != nil {
		in, out := &in.Matcher, &out.Matcher
		*out = new(string)
		**out = **in
	}
	if in.Certificates != nil {
		in, out := &in.Certificates, &out.Certificates
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CertificateMapEntry.
func (in *CertificateMapEntry) DeepCopy() *CertificateMapEntry {
	if in == nil {
		return nil
	}
	out := new(CertificateMapEntry)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CertificateMap_GclbTarget) DeepCopyInto(out *CertificateMap_GclbTarget) {
	*out = *in
	if in.TargetHTTPSProxy != nil {
		in, out := &in.TargetHTTPSProxy, &out.TargetHTTPSProxy
		*out = new(string)
		**out = **in
	}
	if in.TargetSslProxy != nil {
		in, out := &in.TargetSslProxy, &out.TargetSslProxy
		*out = new(string)
		**out = **in
	}
	if in.IpConfigs != nil {
		in, out := &in.IpConfigs, &out.IpConfigs
		*out = make([]CertificateMap_GclbTarget_IpConfig, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CertificateMap_GclbTarget.
func (in *CertificateMap_GclbTarget) DeepCopy() *CertificateMap_GclbTarget {
	if in == nil {
		return nil
	}
	out := new(CertificateMap_GclbTarget)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CertificateMap_GclbTarget_IpConfig) DeepCopyInto(out *CertificateMap_GclbTarget_IpConfig) {
	*out = *in
	if in.IpAddress != nil {
		in, out := &in.IpAddress, &out.IpAddress
		*out = new(string)
		**out = **in
	}
	if in.Ports != nil {
		in, out := &in.Ports, &out.Ports
		*out = make([]uint32, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CertificateMap_GclbTarget_IpConfig.
func (in *CertificateMap_GclbTarget_IpConfig) DeepCopy() *CertificateMap_GclbTarget_IpConfig {
	if in == nil {
		return nil
	}
	out := new(CertificateMap_GclbTarget_IpConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Certificate_ManagedCertificate) DeepCopyInto(out *Certificate_ManagedCertificate) {
	*out = *in
	if in.Domains != nil {
		in, out := &in.Domains, &out.Domains
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.DnsAuthorizations != nil {
		in, out := &in.DnsAuthorizations, &out.DnsAuthorizations
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.IssuanceConfig != nil {
		in, out := &in.IssuanceConfig, &out.IssuanceConfig
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.ProvisioningIssue != nil {
		in, out := &in.ProvisioningIssue, &out.ProvisioningIssue
		*out = new(Certificate_ManagedCertificate_ProvisioningIssue)
		(*in).DeepCopyInto(*out)
	}
	if in.AuthorizationAttemptInfo != nil {
		in, out := &in.AuthorizationAttemptInfo, &out.AuthorizationAttemptInfo
		*out = make([]Certificate_ManagedCertificate_AuthorizationAttemptInfo, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Certificate_ManagedCertificate.
func (in *Certificate_ManagedCertificate) DeepCopy() *Certificate_ManagedCertificate {
	if in == nil {
		return nil
	}
	out := new(Certificate_ManagedCertificate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Certificate_ManagedCertificate_AuthorizationAttemptInfo) DeepCopyInto(out *Certificate_ManagedCertificate_AuthorizationAttemptInfo) {
	*out = *in
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.FailureReason != nil {
		in, out := &in.FailureReason, &out.FailureReason
		*out = new(string)
		**out = **in
	}
	if in.Details != nil {
		in, out := &in.Details, &out.Details
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Certificate_ManagedCertificate_AuthorizationAttemptInfo.
func (in *Certificate_ManagedCertificate_AuthorizationAttemptInfo) DeepCopy() *Certificate_ManagedCertificate_AuthorizationAttemptInfo {
	if in == nil {
		return nil
	}
	out := new(Certificate_ManagedCertificate_AuthorizationAttemptInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Certificate_ManagedCertificate_ProvisioningIssue) DeepCopyInto(out *Certificate_ManagedCertificate_ProvisioningIssue) {
	*out = *in
	if in.Reason != nil {
		in, out := &in.Reason, &out.Reason
		*out = new(string)
		**out = **in
	}
	if in.Details != nil {
		in, out := &in.Details, &out.Details
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Certificate_ManagedCertificate_ProvisioningIssue.
func (in *Certificate_ManagedCertificate_ProvisioningIssue) DeepCopy() *Certificate_ManagedCertificate_ProvisioningIssue {
	if in == nil {
		return nil
	}
	out := new(Certificate_ManagedCertificate_ProvisioningIssue)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Certificate_SelfManagedCertificate) DeepCopyInto(out *Certificate_SelfManagedCertificate) {
	*out = *in
	if in.PemCertificate != nil {
		in, out := &in.PemCertificate, &out.PemCertificate
		*out = new(string)
		**out = **in
	}
	if in.PemPrivateKey != nil {
		in, out := &in.PemPrivateKey, &out.PemPrivateKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Certificate_SelfManagedCertificate.
func (in *Certificate_SelfManagedCertificate) DeepCopy() *Certificate_SelfManagedCertificate {
	if in == nil {
		return nil
	}
	out := new(Certificate_SelfManagedCertificate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DnsAuthorization) DeepCopyInto(out *DnsAuthorization) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
	if in.DnsResourceRecord != nil {
		in, out := &in.DnsResourceRecord, &out.DnsResourceRecord
		*out = new(DnsAuthorization_DnsResourceRecord)
		(*in).DeepCopyInto(*out)
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DnsAuthorization.
func (in *DnsAuthorization) DeepCopy() *DnsAuthorization {
	if in == nil {
		return nil
	}
	out := new(DnsAuthorization)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DnsAuthorization_DnsResourceRecord) DeepCopyInto(out *DnsAuthorization_DnsResourceRecord) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Data != nil {
		in, out := &in.Data, &out.Data
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DnsAuthorization_DnsResourceRecord.
func (in *DnsAuthorization_DnsResourceRecord) DeepCopy() *DnsAuthorization_DnsResourceRecord {
	if in == nil {
		return nil
	}
	out := new(DnsAuthorization_DnsResourceRecord)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DnsauthorizationDnsResourceRecordStatus) DeepCopyInto(out *DnsauthorizationDnsResourceRecordStatus) {
	*out = *in
	if in.Data != nil {
		in, out := &in.Data, &out.Data
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DnsauthorizationDnsResourceRecordStatus.
func (in *DnsauthorizationDnsResourceRecordStatus) DeepCopy() *DnsauthorizationDnsResourceRecordStatus {
	if in == nil {
		return nil
	}
	out := new(DnsauthorizationDnsResourceRecordStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrustConfig) DeepCopyInto(out *TrustConfig) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.TrustStores != nil {
		in, out := &in.TrustStores, &out.TrustStores
		*out = make([]TrustConfig_TrustStore, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrustConfig.
func (in *TrustConfig) DeepCopy() *TrustConfig {
	if in == nil {
		return nil
	}
	out := new(TrustConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrustConfig_IntermediateCA) DeepCopyInto(out *TrustConfig_IntermediateCA) {
	*out = *in
	if in.PemCertificate != nil {
		in, out := &in.PemCertificate, &out.PemCertificate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrustConfig_IntermediateCA.
func (in *TrustConfig_IntermediateCA) DeepCopy() *TrustConfig_IntermediateCA {
	if in == nil {
		return nil
	}
	out := new(TrustConfig_IntermediateCA)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrustConfig_TrustAnchor) DeepCopyInto(out *TrustConfig_TrustAnchor) {
	*out = *in
	if in.PemCertificate != nil {
		in, out := &in.PemCertificate, &out.PemCertificate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrustConfig_TrustAnchor.
func (in *TrustConfig_TrustAnchor) DeepCopy() *TrustConfig_TrustAnchor {
	if in == nil {
		return nil
	}
	out := new(TrustConfig_TrustAnchor)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrustConfig_TrustStore) DeepCopyInto(out *TrustConfig_TrustStore) {
	*out = *in
	if in.TrustAnchors != nil {
		in, out := &in.TrustAnchors, &out.TrustAnchors
		*out = make([]TrustConfig_TrustAnchor, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IntermediateCas != nil {
		in, out := &in.IntermediateCas, &out.IntermediateCas
		*out = make([]TrustConfig_IntermediateCA, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrustConfig_TrustStore.
func (in *TrustConfig_TrustStore) DeepCopy() *TrustConfig_TrustStore {
	if in == nil {
		return nil
	}
	out := new(TrustConfig_TrustStore)
	in.DeepCopyInto(out)
	return out
}
