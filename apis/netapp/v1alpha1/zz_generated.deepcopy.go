//go:build !ignore_autogenerated

// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/GoogleCloudPlatform/k8s-config-connector/apis/refs/v1beta1"
	k8sv1alpha1 "github.com/GoogleCloudPlatform/k8s-config-connector/pkg/apis/k8s/v1alpha1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActiveDirectory) DeepCopyInto(out *ActiveDirectory) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
	if in.Site != nil {
		in, out := &in.Site, &out.Site
		*out = new(string)
		**out = **in
	}
	if in.DNS != nil {
		in, out := &in.DNS, &out.DNS
		*out = new(string)
		**out = **in
	}
	if in.NetBiosPrefix != nil {
		in, out := &in.NetBiosPrefix, &out.NetBiosPrefix
		*out = new(string)
		**out = **in
	}
	if in.OrganizationalUnit != nil {
		in, out := &in.OrganizationalUnit, &out.OrganizationalUnit
		*out = new(string)
		**out = **in
	}
	if in.AesEncryption != nil {
		in, out := &in.AesEncryption, &out.AesEncryption
		*out = new(bool)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = new(string)
		**out = **in
	}
	if in.BackupOperators != nil {
		in, out := &in.BackupOperators, &out.BackupOperators
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Administrators != nil {
		in, out := &in.Administrators, &out.Administrators
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.SecurityOperators != nil {
		in, out := &in.SecurityOperators, &out.SecurityOperators
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.KdcHostname != nil {
		in, out := &in.KdcHostname, &out.KdcHostname
		*out = new(string)
		**out = **in
	}
	if in.KdcIP != nil {
		in, out := &in.KdcIP, &out.KdcIP
		*out = new(string)
		**out = **in
	}
	if in.NfsUsersWithLdap != nil {
		in, out := &in.NfsUsersWithLdap, &out.NfsUsersWithLdap
		*out = new(bool)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.LdapSigning != nil {
		in, out := &in.LdapSigning, &out.LdapSigning
		*out = new(bool)
		**out = **in
	}
	if in.EncryptDcConnections != nil {
		in, out := &in.EncryptDcConnections, &out.EncryptDcConnections
		*out = new(bool)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActiveDirectory.
func (in *ActiveDirectory) DeepCopy() *ActiveDirectory {
	if in == nil {
		return nil
	}
	out := new(ActiveDirectory)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActiveDirectoryIdentity) DeepCopyInto(out *ActiveDirectoryIdentity) {
	*out = *in
	if in.parent != nil {
		in, out := &in.parent, &out.parent
		*out = new(ActiveDirectoryParent)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActiveDirectoryIdentity.
func (in *ActiveDirectoryIdentity) DeepCopy() *ActiveDirectoryIdentity {
	if in == nil {
		return nil
	}
	out := new(ActiveDirectoryIdentity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActiveDirectoryObservedState) DeepCopyInto(out *ActiveDirectoryObservedState) {
	*out = *in
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.StateDetails != nil {
		in, out := &in.StateDetails, &out.StateDetails
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActiveDirectoryObservedState.
func (in *ActiveDirectoryObservedState) DeepCopy() *ActiveDirectoryObservedState {
	if in == nil {
		return nil
	}
	out := new(ActiveDirectoryObservedState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActiveDirectoryParent) DeepCopyInto(out *ActiveDirectoryParent) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActiveDirectoryParent.
func (in *ActiveDirectoryParent) DeepCopy() *ActiveDirectoryParent {
	if in == nil {
		return nil
	}
	out := new(ActiveDirectoryParent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActiveDirectoryRef) DeepCopyInto(out *ActiveDirectoryRef) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActiveDirectoryRef.
func (in *ActiveDirectoryRef) DeepCopy() *ActiveDirectoryRef {
	if in == nil {
		return nil
	}
	out := new(ActiveDirectoryRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActiveDirectorySpec) DeepCopyInto(out *ActiveDirectorySpec) {
	*out = *in
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
	if in.ProjectRef != nil {
		in, out := &in.ProjectRef, &out.ProjectRef
		*out = new(v1beta1.ProjectRef)
		**out = **in
	}
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
	if in.Site != nil {
		in, out := &in.Site, &out.Site
		*out = new(string)
		**out = **in
	}
	if in.DNS != nil {
		in, out := &in.DNS, &out.DNS
		*out = new(string)
		**out = **in
	}
	if in.NetBiosPrefix != nil {
		in, out := &in.NetBiosPrefix, &out.NetBiosPrefix
		*out = new(string)
		**out = **in
	}
	if in.OrganizationalUnit != nil {
		in, out := &in.OrganizationalUnit, &out.OrganizationalUnit
		*out = new(string)
		**out = **in
	}
	if in.AesEncryption != nil {
		in, out := &in.AesEncryption, &out.AesEncryption
		*out = new(bool)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = new(string)
		**out = **in
	}
	if in.BackupOperators != nil {
		in, out := &in.BackupOperators, &out.BackupOperators
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Administrators != nil {
		in, out := &in.Administrators, &out.Administrators
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.SecurityOperators != nil {
		in, out := &in.SecurityOperators, &out.SecurityOperators
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.KdcHostname != nil {
		in, out := &in.KdcHostname, &out.KdcHostname
		*out = new(string)
		**out = **in
	}
	if in.KdcIP != nil {
		in, out := &in.KdcIP, &out.KdcIP
		*out = new(string)
		**out = **in
	}
	if in.NfsUsersWithLdap != nil {
		in, out := &in.NfsUsersWithLdap, &out.NfsUsersWithLdap
		*out = new(bool)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.LdapSigning != nil {
		in, out := &in.LdapSigning, &out.LdapSigning
		*out = new(bool)
		**out = **in
	}
	if in.EncryptDcConnections != nil {
		in, out := &in.EncryptDcConnections, &out.EncryptDcConnections
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActiveDirectorySpec.
func (in *ActiveDirectorySpec) DeepCopy() *ActiveDirectorySpec {
	if in == nil {
		return nil
	}
	out := new(ActiveDirectorySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActiveDirectoryStatus) DeepCopyInto(out *ActiveDirectoryStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]k8sv1alpha1.Condition, len(*in))
		copy(*out, *in)
	}
	if in.ObservedGeneration != nil {
		in, out := &in.ObservedGeneration, &out.ObservedGeneration
		*out = new(int64)
		**out = **in
	}
	if in.ExternalRef != nil {
		in, out := &in.ExternalRef, &out.ExternalRef
		*out = new(string)
		**out = **in
	}
	if in.ObservedState != nil {
		in, out := &in.ObservedState, &out.ObservedState
		*out = new(ActiveDirectoryObservedState)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActiveDirectoryStatus.
func (in *ActiveDirectoryStatus) DeepCopy() *ActiveDirectoryStatus {
	if in == nil {
		return nil
	}
	out := new(ActiveDirectoryStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupPolicy) DeepCopyInto(out *BackupPolicy) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.DailyBackupLimit != nil {
		in, out := &in.DailyBackupLimit, &out.DailyBackupLimit
		*out = new(int32)
		**out = **in
	}
	if in.WeeklyBackupLimit != nil {
		in, out := &in.WeeklyBackupLimit, &out.WeeklyBackupLimit
		*out = new(int32)
		**out = **in
	}
	if in.MonthlyBackupLimit != nil {
		in, out := &in.MonthlyBackupLimit, &out.MonthlyBackupLimit
		*out = new(int32)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupPolicy.
func (in *BackupPolicy) DeepCopy() *BackupPolicy {
	if in == nil {
		return nil
	}
	out := new(BackupPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupPolicyIdentity) DeepCopyInto(out *BackupPolicyIdentity) {
	*out = *in
	if in.parent != nil {
		in, out := &in.parent, &out.parent
		*out = new(BackupPolicyParent)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupPolicyIdentity.
func (in *BackupPolicyIdentity) DeepCopy() *BackupPolicyIdentity {
	if in == nil {
		return nil
	}
	out := new(BackupPolicyIdentity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupPolicyObservedState) DeepCopyInto(out *BackupPolicyObservedState) {
	*out = *in
	if in.AssignedVolumeCount != nil {
		in, out := &in.AssignedVolumeCount, &out.AssignedVolumeCount
		*out = new(int32)
		**out = **in
	}
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupPolicyObservedState.
func (in *BackupPolicyObservedState) DeepCopy() *BackupPolicyObservedState {
	if in == nil {
		return nil
	}
	out := new(BackupPolicyObservedState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupPolicyParent) DeepCopyInto(out *BackupPolicyParent) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupPolicyParent.
func (in *BackupPolicyParent) DeepCopy() *BackupPolicyParent {
	if in == nil {
		return nil
	}
	out := new(BackupPolicyParent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupPolicyRef) DeepCopyInto(out *BackupPolicyRef) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupPolicyRef.
func (in *BackupPolicyRef) DeepCopy() *BackupPolicyRef {
	if in == nil {
		return nil
	}
	out := new(BackupPolicyRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetAppActiveDirectory) DeepCopyInto(out *NetAppActiveDirectory) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetAppActiveDirectory.
func (in *NetAppActiveDirectory) DeepCopy() *NetAppActiveDirectory {
	if in == nil {
		return nil
	}
	out := new(NetAppActiveDirectory)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NetAppActiveDirectory) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetAppActiveDirectoryList) DeepCopyInto(out *NetAppActiveDirectoryList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]NetAppActiveDirectory, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetAppActiveDirectoryList.
func (in *NetAppActiveDirectoryList) DeepCopy() *NetAppActiveDirectoryList {
	if in == nil {
		return nil
	}
	out := new(NetAppActiveDirectoryList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NetAppActiveDirectoryList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetAppBackupPolicy) DeepCopyInto(out *NetAppBackupPolicy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetAppBackupPolicy.
func (in *NetAppBackupPolicy) DeepCopy() *NetAppBackupPolicy {
	if in == nil {
		return nil
	}
	out := new(NetAppBackupPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NetAppBackupPolicy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetAppBackupPolicyList) DeepCopyInto(out *NetAppBackupPolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]NetAppBackupPolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetAppBackupPolicyList.
func (in *NetAppBackupPolicyList) DeepCopy() *NetAppBackupPolicyList {
	if in == nil {
		return nil
	}
	out := new(NetAppBackupPolicyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NetAppBackupPolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetAppBackupPolicyObservedState) DeepCopyInto(out *NetAppBackupPolicyObservedState) {
	*out = *in
	if in.AssignedVolumeCount != nil {
		in, out := &in.AssignedVolumeCount, &out.AssignedVolumeCount
		*out = new(int32)
		**out = **in
	}
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetAppBackupPolicyObservedState.
func (in *NetAppBackupPolicyObservedState) DeepCopy() *NetAppBackupPolicyObservedState {
	if in == nil {
		return nil
	}
	out := new(NetAppBackupPolicyObservedState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetAppBackupPolicySpec) DeepCopyInto(out *NetAppBackupPolicySpec) {
	*out = *in
	in.CommonSpec.DeepCopyInto(&out.CommonSpec)
	if in.DailyBackupLimit != nil {
		in, out := &in.DailyBackupLimit, &out.DailyBackupLimit
		*out = new(int32)
		**out = **in
	}
	if in.WeeklyBackupLimit != nil {
		in, out := &in.WeeklyBackupLimit, &out.WeeklyBackupLimit
		*out = new(int32)
		**out = **in
	}
	if in.MonthlyBackupLimit != nil {
		in, out := &in.MonthlyBackupLimit, &out.MonthlyBackupLimit
		*out = new(int32)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetAppBackupPolicySpec.
func (in *NetAppBackupPolicySpec) DeepCopy() *NetAppBackupPolicySpec {
	if in == nil {
		return nil
	}
	out := new(NetAppBackupPolicySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetAppBackupPolicyStatus) DeepCopyInto(out *NetAppBackupPolicyStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]k8sv1alpha1.Condition, len(*in))
		copy(*out, *in)
	}
	if in.ObservedGeneration != nil {
		in, out := &in.ObservedGeneration, &out.ObservedGeneration
		*out = new(int64)
		**out = **in
	}
	if in.ExternalRef != nil {
		in, out := &in.ExternalRef, &out.ExternalRef
		*out = new(string)
		**out = **in
	}
	if in.ObservedState != nil {
		in, out := &in.ObservedState, &out.ObservedState
		*out = new(NetAppBackupPolicyObservedState)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetAppBackupPolicyStatus.
func (in *NetAppBackupPolicyStatus) DeepCopy() *NetAppBackupPolicyStatus {
	if in == nil {
		return nil
	}
	out := new(NetAppBackupPolicyStatus)
	in.DeepCopyInto(out)
	return out
}
