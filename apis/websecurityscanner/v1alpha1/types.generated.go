// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package v1alpha1


// +kcc:proto=google.cloud.websecurityscanner.v1beta.ScanConfigError
type ScanConfigError struct {
	// Indicates the reason code for a configuration failure.
	// +kcc:proto:field=google.cloud.websecurityscanner.v1beta.ScanConfigError.code
	Code *string `json:"code,omitempty"`

	// Indicates the full name of the ScanConfig field that triggers this error,
	//  for example "scan_config.max_qps". This field is provided for
	//  troubleshooting purposes only and its actual value can change in the
	//  future.
	// +kcc:proto:field=google.cloud.websecurityscanner.v1beta.ScanConfigError.field_name
	FieldName *string `json:"fieldName,omitempty"`
}

// +kcc:proto=google.cloud.websecurityscanner.v1beta.ScanRun
type ScanRun struct {
	// The resource name of the ScanRun. The name follows the format of
	//  'projects/{projectId}/scanConfigs/{scanConfigId}/scanRuns/{scanRunId}'.
	//  The ScanRun IDs are generated by the system.
	// +kcc:proto:field=google.cloud.websecurityscanner.v1beta.ScanRun.name
	Name *string `json:"name,omitempty"`

	// The execution state of the ScanRun.
	// +kcc:proto:field=google.cloud.websecurityscanner.v1beta.ScanRun.execution_state
	ExecutionState *string `json:"executionState,omitempty"`

	// The result state of the ScanRun. This field is only available after the
	//  execution state reaches "FINISHED".
	// +kcc:proto:field=google.cloud.websecurityscanner.v1beta.ScanRun.result_state
	ResultState *string `json:"resultState,omitempty"`

	// The time at which the ScanRun started.
	// +kcc:proto:field=google.cloud.websecurityscanner.v1beta.ScanRun.start_time
	StartTime *string `json:"startTime,omitempty"`

	// The time at which the ScanRun reached termination state - that the ScanRun
	//  is either finished or stopped by user.
	// +kcc:proto:field=google.cloud.websecurityscanner.v1beta.ScanRun.end_time
	EndTime *string `json:"endTime,omitempty"`

	// The number of URLs crawled during this ScanRun. If the scan is in progress,
	//  the value represents the number of URLs crawled up to now.
	// +kcc:proto:field=google.cloud.websecurityscanner.v1beta.ScanRun.urls_crawled_count
	UrlsCrawledCount *int64 `json:"urlsCrawledCount,omitempty"`

	// The number of URLs tested during this ScanRun. If the scan is in progress,
	//  the value represents the number of URLs tested up to now. The number of
	//  URLs tested is usually larger than the number URLS crawled because
	//  typically a crawled URL is tested with multiple test payloads.
	// +kcc:proto:field=google.cloud.websecurityscanner.v1beta.ScanRun.urls_tested_count
	UrlsTestedCount *int64 `json:"urlsTestedCount,omitempty"`

	// Whether the scan run has found any vulnerabilities.
	// +kcc:proto:field=google.cloud.websecurityscanner.v1beta.ScanRun.has_vulnerabilities
	HasVulnerabilities *bool `json:"hasVulnerabilities,omitempty"`

	// The percentage of total completion ranging from 0 to 100.
	//  If the scan is in queue, the value is 0.
	//  If the scan is running, the value ranges from 0 to 100.
	//  If the scan is finished, the value is 100.
	// +kcc:proto:field=google.cloud.websecurityscanner.v1beta.ScanRun.progress_percent
	ProgressPercent *int32 `json:"progressPercent,omitempty"`

	// If result_state is an ERROR, this field provides the primary reason for
	//  scan's termination and more details, if such are available.
	// +kcc:proto:field=google.cloud.websecurityscanner.v1beta.ScanRun.error_trace
	ErrorTrace *ScanRunErrorTrace `json:"errorTrace,omitempty"`

	// A list of warnings, if such are encountered during this scan run.
	// +kcc:proto:field=google.cloud.websecurityscanner.v1beta.ScanRun.warning_traces
	WarningTraces []ScanRunWarningTrace `json:"warningTraces,omitempty"`
}

// +kcc:proto=google.cloud.websecurityscanner.v1beta.ScanRunErrorTrace
type ScanRunErrorTrace struct {
	// Indicates the error reason code.
	// +kcc:proto:field=google.cloud.websecurityscanner.v1beta.ScanRunErrorTrace.code
	Code *string `json:"code,omitempty"`

	// If the scan encounters SCAN_CONFIG_ISSUE error, this field has the error
	//  message encountered during scan configuration validation that is performed
	//  before each scan run.
	// +kcc:proto:field=google.cloud.websecurityscanner.v1beta.ScanRunErrorTrace.scan_config_error
	ScanConfigError *ScanConfigError `json:"scanConfigError,omitempty"`

	// If the scan encounters TOO_MANY_HTTP_ERRORS, this field indicates the most
	//  common HTTP error code, if such is available. For example, if this code is
	//  404, the scan has encountered too many NOT_FOUND responses.
	// +kcc:proto:field=google.cloud.websecurityscanner.v1beta.ScanRunErrorTrace.most_common_http_error_code
	MostCommonHTTPErrorCode *int32 `json:"mostCommonHTTPErrorCode,omitempty"`
}

// +kcc:proto=google.cloud.websecurityscanner.v1beta.ScanRunWarningTrace
type ScanRunWarningTrace struct {
	// Indicates the warning code.
	// +kcc:proto:field=google.cloud.websecurityscanner.v1beta.ScanRunWarningTrace.code
	Code *string `json:"code,omitempty"`
}
