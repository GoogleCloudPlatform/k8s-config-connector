// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package v1alpha1


// +kcc:proto=google.cloud.websecurityscanner.v1beta.ScanConfig
type ScanConfig struct {
	// The resource name of the ScanConfig. The name follows the format of
	//  'projects/{projectId}/scanConfigs/{scanConfigId}'. The ScanConfig IDs are
	//  generated by the system.
	// +kcc:proto:field=google.cloud.websecurityscanner.v1beta.ScanConfig.name
	Name *string `json:"name,omitempty"`

	// Required. The user provided display name of the ScanConfig.
	// +kcc:proto:field=google.cloud.websecurityscanner.v1beta.ScanConfig.display_name
	DisplayName *string `json:"displayName,omitempty"`

	// The maximum QPS during scanning. A valid value ranges from 5 to 20
	//  inclusively. If the field is unspecified or its value is set 0, server will
	//  default to 15. Other values outside of [5, 20] range will be rejected with
	//  INVALID_ARGUMENT error.
	// +kcc:proto:field=google.cloud.websecurityscanner.v1beta.ScanConfig.max_qps
	MaxQps *int32 `json:"maxQps,omitempty"`

	// Required. The starting URLs from which the scanner finds site pages.
	// +kcc:proto:field=google.cloud.websecurityscanner.v1beta.ScanConfig.starting_urls
	StartingUrls []string `json:"startingUrls,omitempty"`

	// The authentication configuration. If specified, service will use the
	//  authentication configuration during scanning.
	// +kcc:proto:field=google.cloud.websecurityscanner.v1beta.ScanConfig.authentication
	Authentication *ScanConfig_Authentication `json:"authentication,omitempty"`

	// The user agent used during scanning.
	// +kcc:proto:field=google.cloud.websecurityscanner.v1beta.ScanConfig.user_agent
	UserAgent *string `json:"userAgent,omitempty"`

	// The blacklist URL patterns as described in
	//  https://cloud.google.com/security-scanner/docs/excluded-urls
	// +kcc:proto:field=google.cloud.websecurityscanner.v1beta.ScanConfig.blacklist_patterns
	BlacklistPatterns []string `json:"blacklistPatterns,omitempty"`

	// The schedule of the ScanConfig.
	// +kcc:proto:field=google.cloud.websecurityscanner.v1beta.ScanConfig.schedule
	Schedule *ScanConfig_Schedule `json:"schedule,omitempty"`

	// Set of Cloud Platforms targeted by the scan. If empty, APP_ENGINE will be
	//  used as a default.
	// +kcc:proto:field=google.cloud.websecurityscanner.v1beta.ScanConfig.target_platforms
	TargetPlatforms []string `json:"targetPlatforms,omitempty"`

	// Controls export of scan configurations and results to Cloud Security
	//  Command Center.
	// +kcc:proto:field=google.cloud.websecurityscanner.v1beta.ScanConfig.export_to_security_command_center
	ExportToSecurityCommandCenter *string `json:"exportToSecurityCommandCenter,omitempty"`

	// Latest ScanRun if available.
	// +kcc:proto:field=google.cloud.websecurityscanner.v1beta.ScanConfig.latest_run
	LatestRun *ScanRun `json:"latestRun,omitempty"`

	// The risk level selected for the scan
	// +kcc:proto:field=google.cloud.websecurityscanner.v1beta.ScanConfig.risk_level
	RiskLevel *string `json:"riskLevel,omitempty"`
}

// +kcc:proto=google.cloud.websecurityscanner.v1beta.ScanConfig.Authentication
type ScanConfig_Authentication struct {
	// Authentication using a Google account.
	// +kcc:proto:field=google.cloud.websecurityscanner.v1beta.ScanConfig.Authentication.google_account
	GoogleAccount *ScanConfig_Authentication_GoogleAccount `json:"googleAccount,omitempty"`

	// Authentication using a custom account.
	// +kcc:proto:field=google.cloud.websecurityscanner.v1beta.ScanConfig.Authentication.custom_account
	CustomAccount *ScanConfig_Authentication_CustomAccount `json:"customAccount,omitempty"`
}

// +kcc:proto=google.cloud.websecurityscanner.v1beta.ScanConfig.Authentication.CustomAccount
type ScanConfig_Authentication_CustomAccount struct {
	// Required. The user name of the custom account.
	// +kcc:proto:field=google.cloud.websecurityscanner.v1beta.ScanConfig.Authentication.CustomAccount.username
	Username *string `json:"username,omitempty"`

	// Required. Input only. The password of the custom account. The credential is stored encrypted
	//  and not returned in any response nor included in audit logs.
	// +kcc:proto:field=google.cloud.websecurityscanner.v1beta.ScanConfig.Authentication.CustomAccount.password
	Password *string `json:"password,omitempty"`

	// Required. The login form URL of the website.
	// +kcc:proto:field=google.cloud.websecurityscanner.v1beta.ScanConfig.Authentication.CustomAccount.login_url
	LoginURL *string `json:"loginURL,omitempty"`
}

// +kcc:proto=google.cloud.websecurityscanner.v1beta.ScanConfig.Authentication.GoogleAccount
type ScanConfig_Authentication_GoogleAccount struct {
	// Required. The user name of the Google account.
	// +kcc:proto:field=google.cloud.websecurityscanner.v1beta.ScanConfig.Authentication.GoogleAccount.username
	Username *string `json:"username,omitempty"`

	// Required. Input only. The password of the Google account. The credential is stored encrypted
	//  and not returned in any response nor included in audit logs.
	// +kcc:proto:field=google.cloud.websecurityscanner.v1beta.ScanConfig.Authentication.GoogleAccount.password
	Password *string `json:"password,omitempty"`
}

// +kcc:proto=google.cloud.websecurityscanner.v1beta.ScanConfig.Schedule
type ScanConfig_Schedule struct {
	// A timestamp indicates when the next run will be scheduled. The value is
	//  refreshed by the server after each run. If unspecified, it will default
	//  to current server time, which means the scan will be scheduled to start
	//  immediately.
	// +kcc:proto:field=google.cloud.websecurityscanner.v1beta.ScanConfig.Schedule.schedule_time
	ScheduleTime *string `json:"scheduleTime,omitempty"`

	// Required. The duration of time between executions in days.
	// +kcc:proto:field=google.cloud.websecurityscanner.v1beta.ScanConfig.Schedule.interval_duration_days
	IntervalDurationDays *int32 `json:"intervalDurationDays,omitempty"`
}

// +kcc:proto=google.cloud.websecurityscanner.v1beta.ScanConfigError
type ScanConfigError struct {
	// Indicates the reason code for a configuration failure.
	// +kcc:proto:field=google.cloud.websecurityscanner.v1beta.ScanConfigError.code
	Code *string `json:"code,omitempty"`

	// Indicates the full name of the ScanConfig field that triggers this error,
	//  for example "scan_config.max_qps". This field is provided for
	//  troubleshooting purposes only and its actual value can change in the
	//  future.
	// +kcc:proto:field=google.cloud.websecurityscanner.v1beta.ScanConfigError.field_name
	FieldName *string `json:"fieldName,omitempty"`
}

// +kcc:proto=google.cloud.websecurityscanner.v1beta.ScanRun
type ScanRun struct {
	// The resource name of the ScanRun. The name follows the format of
	//  'projects/{projectId}/scanConfigs/{scanConfigId}/scanRuns/{scanRunId}'.
	//  The ScanRun IDs are generated by the system.
	// +kcc:proto:field=google.cloud.websecurityscanner.v1beta.ScanRun.name
	Name *string `json:"name,omitempty"`

	// The execution state of the ScanRun.
	// +kcc:proto:field=google.cloud.websecurityscanner.v1beta.ScanRun.execution_state
	ExecutionState *string `json:"executionState,omitempty"`

	// The result state of the ScanRun. This field is only available after the
	//  execution state reaches "FINISHED".
	// +kcc:proto:field=google.cloud.websecurityscanner.v1beta.ScanRun.result_state
	ResultState *string `json:"resultState,omitempty"`

	// The time at which the ScanRun started.
	// +kcc:proto:field=google.cloud.websecurityscanner.v1beta.ScanRun.start_time
	StartTime *string `json:"startTime,omitempty"`

	// The time at which the ScanRun reached termination state - that the ScanRun
	//  is either finished or stopped by user.
	// +kcc:proto:field=google.cloud.websecurityscanner.v1beta.ScanRun.end_time
	EndTime *string `json:"endTime,omitempty"`

	// The number of URLs crawled during this ScanRun. If the scan is in progress,
	//  the value represents the number of URLs crawled up to now.
	// +kcc:proto:field=google.cloud.websecurityscanner.v1beta.ScanRun.urls_crawled_count
	UrlsCrawledCount *int64 `json:"urlsCrawledCount,omitempty"`

	// The number of URLs tested during this ScanRun. If the scan is in progress,
	//  the value represents the number of URLs tested up to now. The number of
	//  URLs tested is usually larger than the number URLS crawled because
	//  typically a crawled URL is tested with multiple test payloads.
	// +kcc:proto:field=google.cloud.websecurityscanner.v1beta.ScanRun.urls_tested_count
	UrlsTestedCount *int64 `json:"urlsTestedCount,omitempty"`

	// Whether the scan run has found any vulnerabilities.
	// +kcc:proto:field=google.cloud.websecurityscanner.v1beta.ScanRun.has_vulnerabilities
	HasVulnerabilities *bool `json:"hasVulnerabilities,omitempty"`

	// The percentage of total completion ranging from 0 to 100.
	//  If the scan is in queue, the value is 0.
	//  If the scan is running, the value ranges from 0 to 100.
	//  If the scan is finished, the value is 100.
	// +kcc:proto:field=google.cloud.websecurityscanner.v1beta.ScanRun.progress_percent
	ProgressPercent *int32 `json:"progressPercent,omitempty"`

	// If result_state is an ERROR, this field provides the primary reason for
	//  scan's termination and more details, if such are available.
	// +kcc:proto:field=google.cloud.websecurityscanner.v1beta.ScanRun.error_trace
	ErrorTrace *ScanRunErrorTrace `json:"errorTrace,omitempty"`

	// A list of warnings, if such are encountered during this scan run.
	// +kcc:proto:field=google.cloud.websecurityscanner.v1beta.ScanRun.warning_traces
	WarningTraces []ScanRunWarningTrace `json:"warningTraces,omitempty"`
}

// +kcc:proto=google.cloud.websecurityscanner.v1beta.ScanRunErrorTrace
type ScanRunErrorTrace struct {
	// Indicates the error reason code.
	// +kcc:proto:field=google.cloud.websecurityscanner.v1beta.ScanRunErrorTrace.code
	Code *string `json:"code,omitempty"`

	// If the scan encounters SCAN_CONFIG_ISSUE error, this field has the error
	//  message encountered during scan configuration validation that is performed
	//  before each scan run.
	// +kcc:proto:field=google.cloud.websecurityscanner.v1beta.ScanRunErrorTrace.scan_config_error
	ScanConfigError *ScanConfigError `json:"scanConfigError,omitempty"`

	// If the scan encounters TOO_MANY_HTTP_ERRORS, this field indicates the most
	//  common HTTP error code, if such is available. For example, if this code is
	//  404, the scan has encountered too many NOT_FOUND responses.
	// +kcc:proto:field=google.cloud.websecurityscanner.v1beta.ScanRunErrorTrace.most_common_http_error_code
	MostCommonHTTPErrorCode *int32 `json:"mostCommonHTTPErrorCode,omitempty"`
}

// +kcc:proto=google.cloud.websecurityscanner.v1beta.ScanRunWarningTrace
type ScanRunWarningTrace struct {
	// Indicates the warning code.
	// +kcc:proto:field=google.cloud.websecurityscanner.v1beta.ScanRunWarningTrace.code
	Code *string `json:"code,omitempty"`
}
