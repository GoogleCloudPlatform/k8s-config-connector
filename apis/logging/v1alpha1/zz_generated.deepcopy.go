//go:build !ignore_autogenerated

// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/GoogleCloudPlatform/k8s-config-connector/apis/refs/v1beta1"
	k8sv1alpha1 "github.com/GoogleCloudPlatform/k8s-config-connector/pkg/apis/k8s/v1alpha1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Any) DeepCopyInto(out *Any) {
	*out = *in
	if in.TypeURL != nil {
		in, out := &in.TypeURL, &out.TypeURL
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = make([]byte, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Any.
func (in *Any) DeepCopy() *Any {
	if in == nil {
		return nil
	}
	out := new(Any)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPRequest) DeepCopyInto(out *HTTPRequest) {
	*out = *in
	if in.RequestMethod != nil {
		in, out := &in.RequestMethod, &out.RequestMethod
		*out = new(string)
		**out = **in
	}
	if in.RequestURL != nil {
		in, out := &in.RequestURL, &out.RequestURL
		*out = new(string)
		**out = **in
	}
	if in.RequestSize != nil {
		in, out := &in.RequestSize, &out.RequestSize
		*out = new(int64)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(int32)
		**out = **in
	}
	if in.ResponseSize != nil {
		in, out := &in.ResponseSize, &out.ResponseSize
		*out = new(int64)
		**out = **in
	}
	if in.UserAgent != nil {
		in, out := &in.UserAgent, &out.UserAgent
		*out = new(string)
		**out = **in
	}
	if in.RemoteIP != nil {
		in, out := &in.RemoteIP, &out.RemoteIP
		*out = new(string)
		**out = **in
	}
	if in.ServerIP != nil {
		in, out := &in.ServerIP, &out.ServerIP
		*out = new(string)
		**out = **in
	}
	if in.Referer != nil {
		in, out := &in.Referer, &out.Referer
		*out = new(string)
		**out = **in
	}
	if in.Latency != nil {
		in, out := &in.Latency, &out.Latency
		*out = new(string)
		**out = **in
	}
	if in.CacheLookup != nil {
		in, out := &in.CacheLookup, &out.CacheLookup
		*out = new(bool)
		**out = **in
	}
	if in.CacheHit != nil {
		in, out := &in.CacheHit, &out.CacheHit
		*out = new(bool)
		**out = **in
	}
	if in.CacheValidatedWithOriginServer != nil {
		in, out := &in.CacheValidatedWithOriginServer, &out.CacheValidatedWithOriginServer
		*out = new(bool)
		**out = **in
	}
	if in.CacheFillBytes != nil {
		in, out := &in.CacheFillBytes, &out.CacheFillBytes
		*out = new(int64)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPRequest.
func (in *HTTPRequest) DeepCopy() *HTTPRequest {
	if in == nil {
		return nil
	}
	out := new(HTTPRequest)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogEntryIdentity) DeepCopyInto(out *LogEntryIdentity) {
	*out = *in
	if in.parent != nil {
		in, out := &in.parent, &out.parent
		*out = new(LogEntryParent)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogEntryIdentity.
func (in *LogEntryIdentity) DeepCopy() *LogEntryIdentity {
	if in == nil {
		return nil
	}
	out := new(LogEntryIdentity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogEntryOperation) DeepCopyInto(out *LogEntryOperation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Producer != nil {
		in, out := &in.Producer, &out.Producer
		*out = new(string)
		**out = **in
	}
	if in.First != nil {
		in, out := &in.First, &out.First
		*out = new(bool)
		**out = **in
	}
	if in.Last != nil {
		in, out := &in.Last, &out.Last
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogEntryOperation.
func (in *LogEntryOperation) DeepCopy() *LogEntryOperation {
	if in == nil {
		return nil
	}
	out := new(LogEntryOperation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogEntryParent) DeepCopyInto(out *LogEntryParent) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogEntryParent.
func (in *LogEntryParent) DeepCopy() *LogEntryParent {
	if in == nil {
		return nil
	}
	out := new(LogEntryParent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogEntryRef) DeepCopyInto(out *LogEntryRef) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogEntryRef.
func (in *LogEntryRef) DeepCopy() *LogEntryRef {
	if in == nil {
		return nil
	}
	out := new(LogEntryRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogEntrySourceLocation) DeepCopyInto(out *LogEntrySourceLocation) {
	*out = *in
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.Line != nil {
		in, out := &in.Line, &out.Line
		*out = new(int64)
		**out = **in
	}
	if in.Function != nil {
		in, out := &in.Function, &out.Function
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogEntrySourceLocation.
func (in *LogEntrySourceLocation) DeepCopy() *LogEntrySourceLocation {
	if in == nil {
		return nil
	}
	out := new(LogEntrySourceLocation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogSplit) DeepCopyInto(out *LogSplit) {
	*out = *in
	if in.Uid != nil {
		in, out := &in.Uid, &out.Uid
		*out = new(string)
		**out = **in
	}
	if in.Index != nil {
		in, out := &in.Index, &out.Index
		*out = new(int32)
		**out = **in
	}
	if in.TotalSplits != nil {
		in, out := &in.TotalSplits, &out.TotalSplits
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogSplit.
func (in *LogSplit) DeepCopy() *LogSplit {
	if in == nil {
		return nil
	}
	out := new(LogSplit)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoggingLogEntry) DeepCopyInto(out *LoggingLogEntry) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoggingLogEntry.
func (in *LoggingLogEntry) DeepCopy() *LoggingLogEntry {
	if in == nil {
		return nil
	}
	out := new(LoggingLogEntry)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LoggingLogEntry) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoggingLogEntryList) DeepCopyInto(out *LoggingLogEntryList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]LoggingLogEntry, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoggingLogEntryList.
func (in *LoggingLogEntryList) DeepCopy() *LoggingLogEntryList {
	if in == nil {
		return nil
	}
	out := new(LoggingLogEntryList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LoggingLogEntryList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoggingLogEntryObservedState) DeepCopyInto(out *LoggingLogEntryObservedState) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoggingLogEntryObservedState.
func (in *LoggingLogEntryObservedState) DeepCopy() *LoggingLogEntryObservedState {
	if in == nil {
		return nil
	}
	out := new(LoggingLogEntryObservedState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoggingLogEntrySpec) DeepCopyInto(out *LoggingLogEntrySpec) {
	*out = *in
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
	in.Parent.DeepCopyInto(&out.Parent)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoggingLogEntrySpec.
func (in *LoggingLogEntrySpec) DeepCopy() *LoggingLogEntrySpec {
	if in == nil {
		return nil
	}
	out := new(LoggingLogEntrySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoggingLogEntryStatus) DeepCopyInto(out *LoggingLogEntryStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]k8sv1alpha1.Condition, len(*in))
		copy(*out, *in)
	}
	if in.ObservedGeneration != nil {
		in, out := &in.ObservedGeneration, &out.ObservedGeneration
		*out = new(int64)
		**out = **in
	}
	if in.ExternalRef != nil {
		in, out := &in.ExternalRef, &out.ExternalRef
		*out = new(string)
		**out = **in
	}
	if in.ObservedState != nil {
		in, out := &in.ObservedState, &out.ObservedState
		*out = new(LoggingLogEntryObservedState)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoggingLogEntryStatus.
func (in *LoggingLogEntryStatus) DeepCopy() *LoggingLogEntryStatus {
	if in == nil {
		return nil
	}
	out := new(LoggingLogEntryStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoredResource) DeepCopyInto(out *MonitoredResource) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoredResource.
func (in *MonitoredResource) DeepCopy() *MonitoredResource {
	if in == nil {
		return nil
	}
	out := new(MonitoredResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Parent) DeepCopyInto(out *Parent) {
	*out = *in
	if in.ProjectRef != nil {
		in, out := &in.ProjectRef, &out.ProjectRef
		*out = new(v1beta1.ProjectRef)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Parent.
func (in *Parent) DeepCopy() *Parent {
	if in == nil {
		return nil
	}
	out := new(Parent)
	in.DeepCopyInto(out)
	return out
}
