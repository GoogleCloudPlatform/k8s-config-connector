//go:build !ignore_autogenerated

// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/GoogleCloudPlatform/k8s-config-connector/apis/refs/v1beta1"
	k8sv1alpha1 "github.com/GoogleCloudPlatform/k8s-config-connector/pkg/apis/k8s/v1alpha1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BigQueryOptions) DeepCopyInto(out *BigQueryOptions) {
	*out = *in
	if in.UsePartitionedTables != nil {
		in, out := &in.UsePartitionedTables, &out.UsePartitionedTables
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BigQueryOptions.
func (in *BigQueryOptions) DeepCopy() *BigQueryOptions {
	if in == nil {
		return nil
	}
	out := new(BigQueryOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BigQueryOptionsObservedState) DeepCopyInto(out *BigQueryOptionsObservedState) {
	*out = *in
	if in.UsesTimestampColumnPartitioning != nil {
		in, out := &in.UsesTimestampColumnPartitioning, &out.UsesTimestampColumnPartitioning
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BigQueryOptionsObservedState.
func (in *BigQueryOptionsObservedState) DeepCopy() *BigQueryOptionsObservedState {
	if in == nil {
		return nil
	}
	out := new(BigQueryOptionsObservedState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogExclusion) DeepCopyInto(out *LogExclusion) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = new(string)
		**out = **in
	}
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogExclusion.
func (in *LogExclusion) DeepCopy() *LogExclusion {
	if in == nil {
		return nil
	}
	out := new(LogExclusion)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogExclusionObservedState) DeepCopyInto(out *LogExclusionObservedState) {
	*out = *in
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogExclusionObservedState.
func (in *LogExclusionObservedState) DeepCopy() *LogExclusionObservedState {
	if in == nil {
		return nil
	}
	out := new(LogExclusionObservedState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogSink) DeepCopyInto(out *LogSink) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = new(bool)
		**out = **in
	}
	if in.Exclusions != nil {
		in, out := &in.Exclusions, &out.Exclusions
		*out = make([]LogExclusion, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OutputVersionFormat != nil {
		in, out := &in.OutputVersionFormat, &out.OutputVersionFormat
		*out = new(string)
		**out = **in
	}
	if in.IncludeChildren != nil {
		in, out := &in.IncludeChildren, &out.IncludeChildren
		*out = new(bool)
		**out = **in
	}
	if in.BigqueryOptions != nil {
		in, out := &in.BigqueryOptions, &out.BigqueryOptions
		*out = new(BigQueryOptions)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogSink.
func (in *LogSink) DeepCopy() *LogSink {
	if in == nil {
		return nil
	}
	out := new(LogSink)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogSinkIdentity) DeepCopyInto(out *LogSinkIdentity) {
	*out = *in
	if in.parent != nil {
		in, out := &in.parent, &out.parent
		*out = new(LogSinkParent)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogSinkIdentity.
func (in *LogSinkIdentity) DeepCopy() *LogSinkIdentity {
	if in == nil {
		return nil
	}
	out := new(LogSinkIdentity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogSinkObservedState) DeepCopyInto(out *LogSinkObservedState) {
	*out = *in
	if in.Exclusions != nil {
		in, out := &in.Exclusions, &out.Exclusions
		*out = make([]LogExclusionObservedState, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WriterIdentity != nil {
		in, out := &in.WriterIdentity, &out.WriterIdentity
		*out = new(string)
		**out = **in
	}
	if in.BigqueryOptions != nil {
		in, out := &in.BigqueryOptions, &out.BigqueryOptions
		*out = new(BigQueryOptionsObservedState)
		(*in).DeepCopyInto(*out)
	}
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogSinkObservedState.
func (in *LogSinkObservedState) DeepCopy() *LogSinkObservedState {
	if in == nil {
		return nil
	}
	out := new(LogSinkObservedState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogSinkParent) DeepCopyInto(out *LogSinkParent) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogSinkParent.
func (in *LogSinkParent) DeepCopy() *LogSinkParent {
	if in == nil {
		return nil
	}
	out := new(LogSinkParent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogSinkRef) DeepCopyInto(out *LogSinkRef) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogSinkRef.
func (in *LogSinkRef) DeepCopy() *LogSinkRef {
	if in == nil {
		return nil
	}
	out := new(LogSinkRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoggingLogSink) DeepCopyInto(out *LoggingLogSink) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoggingLogSink.
func (in *LoggingLogSink) DeepCopy() *LoggingLogSink {
	if in == nil {
		return nil
	}
	out := new(LoggingLogSink)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LoggingLogSink) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoggingLogSinkList) DeepCopyInto(out *LoggingLogSinkList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]LoggingLogSink, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoggingLogSinkList.
func (in *LoggingLogSinkList) DeepCopy() *LoggingLogSinkList {
	if in == nil {
		return nil
	}
	out := new(LoggingLogSinkList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LoggingLogSinkList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoggingLogSinkObservedState) DeepCopyInto(out *LoggingLogSinkObservedState) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoggingLogSinkObservedState.
func (in *LoggingLogSinkObservedState) DeepCopy() *LoggingLogSinkObservedState {
	if in == nil {
		return nil
	}
	out := new(LoggingLogSinkObservedState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoggingLogSinkSpec) DeepCopyInto(out *LoggingLogSinkSpec) {
	*out = *in
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
	in.Parent.DeepCopyInto(&out.Parent)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoggingLogSinkSpec.
func (in *LoggingLogSinkSpec) DeepCopy() *LoggingLogSinkSpec {
	if in == nil {
		return nil
	}
	out := new(LoggingLogSinkSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoggingLogSinkStatus) DeepCopyInto(out *LoggingLogSinkStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]k8sv1alpha1.Condition, len(*in))
		copy(*out, *in)
	}
	if in.ObservedGeneration != nil {
		in, out := &in.ObservedGeneration, &out.ObservedGeneration
		*out = new(int64)
		**out = **in
	}
	if in.ExternalRef != nil {
		in, out := &in.ExternalRef, &out.ExternalRef
		*out = new(string)
		**out = **in
	}
	if in.ObservedState != nil {
		in, out := &in.ObservedState, &out.ObservedState
		*out = new(LoggingLogSinkObservedState)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoggingLogSinkStatus.
func (in *LoggingLogSinkStatus) DeepCopy() *LoggingLogSinkStatus {
	if in == nil {
		return nil
	}
	out := new(LoggingLogSinkStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Parent) DeepCopyInto(out *Parent) {
	*out = *in
	if in.ProjectRef != nil {
		in, out := &in.ProjectRef, &out.ProjectRef
		*out = new(v1beta1.ProjectRef)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Parent.
func (in *Parent) DeepCopy() *Parent {
	if in == nil {
		return nil
	}
	out := new(Parent)
	in.DeepCopyInto(out)
	return out
}
