//go:build !ignore_autogenerated

// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/GoogleCloudPlatform/k8s-config-connector/apis/refs/v1beta1"
	k8sv1alpha1 "github.com/GoogleCloudPlatform/k8s-config-connector/pkg/apis/k8s/v1alpha1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AcceleratorConfig) DeepCopyInto(out *AcceleratorConfig) {
	*out = *in
	if in.AcceleratorTypeURI != nil {
		in, out := &in.AcceleratorTypeURI, &out.AcceleratorTypeURI
		*out = new(string)
		**out = **in
	}
	if in.AcceleratorCount != nil {
		in, out := &in.AcceleratorCount, &out.AcceleratorCount
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AcceleratorConfig.
func (in *AcceleratorConfig) DeepCopy() *AcceleratorConfig {
	if in == nil {
		return nil
	}
	out := new(AcceleratorConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscalingConfig) DeepCopyInto(out *AutoscalingConfig) {
	*out = *in
	if in.PolicyURI != nil {
		in, out := &in.PolicyURI, &out.PolicyURI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscalingConfig.
func (in *AutoscalingConfig) DeepCopy() *AutoscalingConfig {
	if in == nil {
		return nil
	}
	out := new(AutoscalingConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutotuningConfig) DeepCopyInto(out *AutotuningConfig) {
	*out = *in
	if in.Scenarios != nil {
		in, out := &in.Scenarios, &out.Scenarios
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutotuningConfig.
func (in *AutotuningConfig) DeepCopy() *AutotuningConfig {
	if in == nil {
		return nil
	}
	out := new(AutotuningConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuxiliaryNodeGroup) DeepCopyInto(out *AuxiliaryNodeGroup) {
	*out = *in
	if in.NodeGroup != nil {
		in, out := &in.NodeGroup, &out.NodeGroup
		*out = new(NodeGroup)
		(*in).DeepCopyInto(*out)
	}
	if in.NodeGroupID != nil {
		in, out := &in.NodeGroupID, &out.NodeGroupID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuxiliaryNodeGroup.
func (in *AuxiliaryNodeGroup) DeepCopy() *AuxiliaryNodeGroup {
	if in == nil {
		return nil
	}
	out := new(AuxiliaryNodeGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BatchIdentity) DeepCopyInto(out *BatchIdentity) {
	*out = *in
	if in.parent != nil {
		in, out := &in.parent, &out.parent
		*out = new(BatchParent)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BatchIdentity.
func (in *BatchIdentity) DeepCopy() *BatchIdentity {
	if in == nil {
		return nil
	}
	out := new(BatchIdentity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BatchParent) DeepCopyInto(out *BatchParent) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BatchParent.
func (in *BatchParent) DeepCopy() *BatchParent {
	if in == nil {
		return nil
	}
	out := new(BatchParent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BatchRef) DeepCopyInto(out *BatchRef) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BatchRef.
func (in *BatchRef) DeepCopy() *BatchRef {
	if in == nil {
		return nil
	}
	out := new(BatchRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Batch_StateHistory) DeepCopyInto(out *Batch_StateHistory) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Batch_StateHistory.
func (in *Batch_StateHistory) DeepCopy() *Batch_StateHistory {
	if in == nil {
		return nil
	}
	out := new(Batch_StateHistory)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Batch_StateHistoryObservedState) DeepCopyInto(out *Batch_StateHistoryObservedState) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.StateMessage != nil {
		in, out := &in.StateMessage, &out.StateMessage
		*out = new(string)
		**out = **in
	}
	if in.StateStartTime != nil {
		in, out := &in.StateStartTime, &out.StateStartTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Batch_StateHistoryObservedState.
func (in *Batch_StateHistoryObservedState) DeepCopy() *Batch_StateHistoryObservedState {
	if in == nil {
		return nil
	}
	out := new(Batch_StateHistoryObservedState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterConfig) DeepCopyInto(out *ClusterConfig) {
	*out = *in
	if in.ConfigBucket != nil {
		in, out := &in.ConfigBucket, &out.ConfigBucket
		*out = new(string)
		**out = **in
	}
	if in.TempBucket != nil {
		in, out := &in.TempBucket, &out.TempBucket
		*out = new(string)
		**out = **in
	}
	if in.GCEClusterConfig != nil {
		in, out := &in.GCEClusterConfig, &out.GCEClusterConfig
		*out = new(GCEClusterConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.MasterConfig != nil {
		in, out := &in.MasterConfig, &out.MasterConfig
		*out = new(InstanceGroupConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.WorkerConfig != nil {
		in, out := &in.WorkerConfig, &out.WorkerConfig
		*out = new(InstanceGroupConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.SecondaryWorkerConfig != nil {
		in, out := &in.SecondaryWorkerConfig, &out.SecondaryWorkerConfig
		*out = new(InstanceGroupConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.SoftwareConfig != nil {
		in, out := &in.SoftwareConfig, &out.SoftwareConfig
		*out = new(SoftwareConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.InitializationActions != nil {
		in, out := &in.InitializationActions, &out.InitializationActions
		*out = make([]NodeInitializationAction, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EncryptionConfig != nil {
		in, out := &in.EncryptionConfig, &out.EncryptionConfig
		*out = new(EncryptionConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.AutoscalingConfig != nil {
		in, out := &in.AutoscalingConfig, &out.AutoscalingConfig
		*out = new(AutoscalingConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.SecurityConfig != nil {
		in, out := &in.SecurityConfig, &out.SecurityConfig
		*out = new(SecurityConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.LifecycleConfig != nil {
		in, out := &in.LifecycleConfig, &out.LifecycleConfig
		*out = new(LifecycleConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.EndpointConfig != nil {
		in, out := &in.EndpointConfig, &out.EndpointConfig
		*out = new(EndpointConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.MetastoreConfig != nil {
		in, out := &in.MetastoreConfig, &out.MetastoreConfig
		*out = new(MetastoreConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.DataprocMetricConfig != nil {
		in, out := &in.DataprocMetricConfig, &out.DataprocMetricConfig
		*out = new(DataprocMetricConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.AuxiliaryNodeGroups != nil {
		in, out := &in.AuxiliaryNodeGroups, &out.AuxiliaryNodeGroups
		*out = make([]AuxiliaryNodeGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterConfig.
func (in *ClusterConfig) DeepCopy() *ClusterConfig {
	if in == nil {
		return nil
	}
	out := new(ClusterConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterConfigObservedState) DeepCopyInto(out *ClusterConfigObservedState) {
	*out = *in
	if in.MasterConfig != nil {
		in, out := &in.MasterConfig, &out.MasterConfig
		*out = new(InstanceGroupConfigObservedState)
		(*in).DeepCopyInto(*out)
	}
	if in.LifecycleConfig != nil {
		in, out := &in.LifecycleConfig, &out.LifecycleConfig
		*out = new(LifecycleConfigObservedState)
		(*in).DeepCopyInto(*out)
	}
	if in.EndpointConfig != nil {
		in, out := &in.EndpointConfig, &out.EndpointConfig
		*out = new(EndpointConfigObservedState)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterConfigObservedState.
func (in *ClusterConfigObservedState) DeepCopy() *ClusterConfigObservedState {
	if in == nil {
		return nil
	}
	out := new(ClusterConfigObservedState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterSelector) DeepCopyInto(out *ClusterSelector) {
	*out = *in
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
	if in.ClusterLabels != nil {
		in, out := &in.ClusterLabels, &out.ClusterLabels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterSelector.
func (in *ClusterSelector) DeepCopy() *ClusterSelector {
	if in == nil {
		return nil
	}
	out := new(ClusterSelector)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfidentialInstanceConfig) DeepCopyInto(out *ConfidentialInstanceConfig) {
	*out = *in
	if in.EnableConfidentialCompute != nil {
		in, out := &in.EnableConfidentialCompute, &out.EnableConfidentialCompute
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfidentialInstanceConfig.
func (in *ConfidentialInstanceConfig) DeepCopy() *ConfidentialInstanceConfig {
	if in == nil {
		return nil
	}
	out := new(ConfidentialInstanceConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataprocBatch) DeepCopyInto(out *DataprocBatch) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataprocBatch.
func (in *DataprocBatch) DeepCopy() *DataprocBatch {
	if in == nil {
		return nil
	}
	out := new(DataprocBatch)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataprocBatch) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataprocBatchList) DeepCopyInto(out *DataprocBatchList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DataprocBatch, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataprocBatchList.
func (in *DataprocBatchList) DeepCopy() *DataprocBatchList {
	if in == nil {
		return nil
	}
	out := new(DataprocBatchList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataprocBatchList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataprocBatchObservedState) DeepCopyInto(out *DataprocBatchObservedState) {
	*out = *in
	if in.Uuid != nil {
		in, out := &in.Uuid, &out.Uuid
		*out = new(string)
		**out = **in
	}
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.RuntimeInfo != nil {
		in, out := &in.RuntimeInfo, &out.RuntimeInfo
		*out = new(RuntimeInfoObservedState)
		(*in).DeepCopyInto(*out)
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.StateMessage != nil {
		in, out := &in.StateMessage, &out.StateMessage
		*out = new(string)
		**out = **in
	}
	if in.StateTime != nil {
		in, out := &in.StateTime, &out.StateTime
		*out = new(string)
		**out = **in
	}
	if in.Creator != nil {
		in, out := &in.Creator, &out.Creator
		*out = new(string)
		**out = **in
	}
	if in.Operation != nil {
		in, out := &in.Operation, &out.Operation
		*out = new(string)
		**out = **in
	}
	if in.StateHistory != nil {
		in, out := &in.StateHistory, &out.StateHistory
		*out = make([]Batch_StateHistoryObservedState, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataprocBatchObservedState.
func (in *DataprocBatchObservedState) DeepCopy() *DataprocBatchObservedState {
	if in == nil {
		return nil
	}
	out := new(DataprocBatchObservedState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataprocBatchSpec) DeepCopyInto(out *DataprocBatchSpec) {
	*out = *in
	if in.PysparkBatch != nil {
		in, out := &in.PysparkBatch, &out.PysparkBatch
		*out = new(PySparkBatch)
		(*in).DeepCopyInto(*out)
	}
	if in.SparkBatch != nil {
		in, out := &in.SparkBatch, &out.SparkBatch
		*out = new(SparkBatch)
		(*in).DeepCopyInto(*out)
	}
	if in.SparkRBatch != nil {
		in, out := &in.SparkRBatch, &out.SparkRBatch
		*out = new(SparkRBatch)
		(*in).DeepCopyInto(*out)
	}
	if in.SparkSQLBatch != nil {
		in, out := &in.SparkSQLBatch, &out.SparkSQLBatch
		*out = new(SparkSQLBatch)
		(*in).DeepCopyInto(*out)
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.RuntimeConfig != nil {
		in, out := &in.RuntimeConfig, &out.RuntimeConfig
		*out = new(RuntimeConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.EnvironmentConfig != nil {
		in, out := &in.EnvironmentConfig, &out.EnvironmentConfig
		*out = new(EnvironmentConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Parent != nil {
		in, out := &in.Parent, &out.Parent
		*out = new(Parent)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataprocBatchSpec.
func (in *DataprocBatchSpec) DeepCopy() *DataprocBatchSpec {
	if in == nil {
		return nil
	}
	out := new(DataprocBatchSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataprocBatchStatus) DeepCopyInto(out *DataprocBatchStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]k8sv1alpha1.Condition, len(*in))
		copy(*out, *in)
	}
	if in.ObservedGeneration != nil {
		in, out := &in.ObservedGeneration, &out.ObservedGeneration
		*out = new(int64)
		**out = **in
	}
	if in.ExternalRef != nil {
		in, out := &in.ExternalRef, &out.ExternalRef
		*out = new(string)
		**out = **in
	}
	if in.ObservedState != nil {
		in, out := &in.ObservedState, &out.ObservedState
		*out = new(DataprocBatchObservedState)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataprocBatchStatus.
func (in *DataprocBatchStatus) DeepCopy() *DataprocBatchStatus {
	if in == nil {
		return nil
	}
	out := new(DataprocBatchStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataprocJob) DeepCopyInto(out *DataprocJob) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataprocJob.
func (in *DataprocJob) DeepCopy() *DataprocJob {
	if in == nil {
		return nil
	}
	out := new(DataprocJob)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataprocJob) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataprocJobList) DeepCopyInto(out *DataprocJobList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DataprocJob, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataprocJobList.
func (in *DataprocJobList) DeepCopy() *DataprocJobList {
	if in == nil {
		return nil
	}
	out := new(DataprocJobList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataprocJobList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataprocJobObservedState) DeepCopyInto(out *DataprocJobObservedState) {
	*out = *in
	if in.Placement != nil {
		in, out := &in.Placement, &out.Placement
		*out = new(JobPlacementObservedState)
		(*in).DeepCopyInto(*out)
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(JobStatusObservedState)
		(*in).DeepCopyInto(*out)
	}
	if in.StatusHistory != nil {
		in, out := &in.StatusHistory, &out.StatusHistory
		*out = make([]JobStatusObservedState, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.YarnApplications != nil {
		in, out := &in.YarnApplications, &out.YarnApplications
		*out = make([]YarnApplication, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DriverOutputResourceURI != nil {
		in, out := &in.DriverOutputResourceURI, &out.DriverOutputResourceURI
		*out = new(string)
		**out = **in
	}
	if in.DriverControlFilesURI != nil {
		in, out := &in.DriverControlFilesURI, &out.DriverControlFilesURI
		*out = new(string)
		**out = **in
	}
	if in.JobUUid != nil {
		in, out := &in.JobUUid, &out.JobUUid
		*out = new(string)
		**out = **in
	}
	if in.Done != nil {
		in, out := &in.Done, &out.Done
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataprocJobObservedState.
func (in *DataprocJobObservedState) DeepCopy() *DataprocJobObservedState {
	if in == nil {
		return nil
	}
	out := new(DataprocJobObservedState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataprocJobParent) DeepCopyInto(out *DataprocJobParent) {
	*out = *in
	if in.ProjectRef != nil {
		in, out := &in.ProjectRef, &out.ProjectRef
		*out = new(v1beta1.ProjectRef)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataprocJobParent.
func (in *DataprocJobParent) DeepCopy() *DataprocJobParent {
	if in == nil {
		return nil
	}
	out := new(DataprocJobParent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataprocJobSpec) DeepCopyInto(out *DataprocJobSpec) {
	*out = *in
	if in.Reference != nil {
		in, out := &in.Reference, &out.Reference
		*out = new(JobReference)
		(*in).DeepCopyInto(*out)
	}
	if in.Placement != nil {
		in, out := &in.Placement, &out.Placement
		*out = new(JobPlacement)
		(*in).DeepCopyInto(*out)
	}
	if in.HadoopJob != nil {
		in, out := &in.HadoopJob, &out.HadoopJob
		*out = new(HadoopJob)
		(*in).DeepCopyInto(*out)
	}
	if in.SparkJob != nil {
		in, out := &in.SparkJob, &out.SparkJob
		*out = new(SparkJob)
		(*in).DeepCopyInto(*out)
	}
	if in.PysparkJob != nil {
		in, out := &in.PysparkJob, &out.PysparkJob
		*out = new(PySparkJob)
		(*in).DeepCopyInto(*out)
	}
	if in.HiveJob != nil {
		in, out := &in.HiveJob, &out.HiveJob
		*out = new(HiveJob)
		(*in).DeepCopyInto(*out)
	}
	if in.PigJob != nil {
		in, out := &in.PigJob, &out.PigJob
		*out = new(PigJob)
		(*in).DeepCopyInto(*out)
	}
	if in.SparkRJob != nil {
		in, out := &in.SparkRJob, &out.SparkRJob
		*out = new(SparkRJob)
		(*in).DeepCopyInto(*out)
	}
	if in.SparkSQLJob != nil {
		in, out := &in.SparkSQLJob, &out.SparkSQLJob
		*out = new(SparkSQLJob)
		(*in).DeepCopyInto(*out)
	}
	if in.PrestoJob != nil {
		in, out := &in.PrestoJob, &out.PrestoJob
		*out = new(PrestoJob)
		(*in).DeepCopyInto(*out)
	}
	if in.TrinoJob != nil {
		in, out := &in.TrinoJob, &out.TrinoJob
		*out = new(TrinoJob)
		(*in).DeepCopyInto(*out)
	}
	if in.FlinkJob != nil {
		in, out := &in.FlinkJob, &out.FlinkJob
		*out = new(FlinkJob)
		(*in).DeepCopyInto(*out)
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Scheduling != nil {
		in, out := &in.Scheduling, &out.Scheduling
		*out = new(JobScheduling)
		(*in).DeepCopyInto(*out)
	}
	if in.DriverSchedulingConfig != nil {
		in, out := &in.DriverSchedulingConfig, &out.DriverSchedulingConfig
		*out = new(DriverSchedulingConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.DataprocJobParent != nil {
		in, out := &in.DataprocJobParent, &out.DataprocJobParent
		*out = new(DataprocJobParent)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataprocJobSpec.
func (in *DataprocJobSpec) DeepCopy() *DataprocJobSpec {
	if in == nil {
		return nil
	}
	out := new(DataprocJobSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataprocJobStatus) DeepCopyInto(out *DataprocJobStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]k8sv1alpha1.Condition, len(*in))
		copy(*out, *in)
	}
	if in.ObservedGeneration != nil {
		in, out := &in.ObservedGeneration, &out.ObservedGeneration
		*out = new(int64)
		**out = **in
	}
	if in.ExternalRef != nil {
		in, out := &in.ExternalRef, &out.ExternalRef
		*out = new(string)
		**out = **in
	}
	if in.ObservedState != nil {
		in, out := &in.ObservedState, &out.ObservedState
		*out = new(DataprocJobObservedState)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataprocJobStatus.
func (in *DataprocJobStatus) DeepCopy() *DataprocJobStatus {
	if in == nil {
		return nil
	}
	out := new(DataprocJobStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataprocMetricConfig) DeepCopyInto(out *DataprocMetricConfig) {
	*out = *in
	if in.Metrics != nil {
		in, out := &in.Metrics, &out.Metrics
		*out = make([]DataprocMetricConfig_Metric, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataprocMetricConfig.
func (in *DataprocMetricConfig) DeepCopy() *DataprocMetricConfig {
	if in == nil {
		return nil
	}
	out := new(DataprocMetricConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataprocMetricConfig_Metric) DeepCopyInto(out *DataprocMetricConfig_Metric) {
	*out = *in
	if in.MetricSource != nil {
		in, out := &in.MetricSource, &out.MetricSource
		*out = new(string)
		**out = **in
	}
	if in.MetricOverrides != nil {
		in, out := &in.MetricOverrides, &out.MetricOverrides
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataprocMetricConfig_Metric.
func (in *DataprocMetricConfig_Metric) DeepCopy() *DataprocMetricConfig_Metric {
	if in == nil {
		return nil
	}
	out := new(DataprocMetricConfig_Metric)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataprocWorkflowTemplate) DeepCopyInto(out *DataprocWorkflowTemplate) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataprocWorkflowTemplate.
func (in *DataprocWorkflowTemplate) DeepCopy() *DataprocWorkflowTemplate {
	if in == nil {
		return nil
	}
	out := new(DataprocWorkflowTemplate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataprocWorkflowTemplate) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataprocWorkflowTemplateList) DeepCopyInto(out *DataprocWorkflowTemplateList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DataprocWorkflowTemplate, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataprocWorkflowTemplateList.
func (in *DataprocWorkflowTemplateList) DeepCopy() *DataprocWorkflowTemplateList {
	if in == nil {
		return nil
	}
	out := new(DataprocWorkflowTemplateList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataprocWorkflowTemplateList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataprocWorkflowTemplateObservedState) DeepCopyInto(out *DataprocWorkflowTemplateObservedState) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
	if in.Placement != nil {
		in, out := &in.Placement, &out.Placement
		*out = new(WorkflowTemplatePlacementObservedState)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataprocWorkflowTemplateObservedState.
func (in *DataprocWorkflowTemplateObservedState) DeepCopy() *DataprocWorkflowTemplateObservedState {
	if in == nil {
		return nil
	}
	out := new(DataprocWorkflowTemplateObservedState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataprocWorkflowTemplateSpec) DeepCopyInto(out *DataprocWorkflowTemplateSpec) {
	*out = *in
	if in.Parent != nil {
		in, out := &in.Parent, &out.Parent
		*out = new(Parent)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(int32)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Placement != nil {
		in, out := &in.Placement, &out.Placement
		*out = new(WorkflowTemplatePlacement)
		(*in).DeepCopyInto(*out)
	}
	if in.Jobs != nil {
		in, out := &in.Jobs, &out.Jobs
		*out = make([]OrderedJob, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]TemplateParameter, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DagTimeout != nil {
		in, out := &in.DagTimeout, &out.DagTimeout
		*out = new(string)
		**out = **in
	}
	if in.EncryptionConfig != nil {
		in, out := &in.EncryptionConfig, &out.EncryptionConfig
		*out = new(WorkflowTemplate_EncryptionConfig)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataprocWorkflowTemplateSpec.
func (in *DataprocWorkflowTemplateSpec) DeepCopy() *DataprocWorkflowTemplateSpec {
	if in == nil {
		return nil
	}
	out := new(DataprocWorkflowTemplateSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataprocWorkflowTemplateStatus) DeepCopyInto(out *DataprocWorkflowTemplateStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]k8sv1alpha1.Condition, len(*in))
		copy(*out, *in)
	}
	if in.ObservedGeneration != nil {
		in, out := &in.ObservedGeneration, &out.ObservedGeneration
		*out = new(int64)
		**out = **in
	}
	if in.ExternalRef != nil {
		in, out := &in.ExternalRef, &out.ExternalRef
		*out = new(string)
		**out = **in
	}
	if in.ObservedState != nil {
		in, out := &in.ObservedState, &out.ObservedState
		*out = new(DataprocWorkflowTemplateObservedState)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataprocWorkflowTemplateStatus.
func (in *DataprocWorkflowTemplateStatus) DeepCopy() *DataprocWorkflowTemplateStatus {
	if in == nil {
		return nil
	}
	out := new(DataprocWorkflowTemplateStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskConfig) DeepCopyInto(out *DiskConfig) {
	*out = *in
	if in.BootDiskType != nil {
		in, out := &in.BootDiskType, &out.BootDiskType
		*out = new(string)
		**out = **in
	}
	if in.BootDiskSizeGB != nil {
		in, out := &in.BootDiskSizeGB, &out.BootDiskSizeGB
		*out = new(int32)
		**out = **in
	}
	if in.NumLocalSsds != nil {
		in, out := &in.NumLocalSsds, &out.NumLocalSsds
		*out = new(int32)
		**out = **in
	}
	if in.LocalSsdInterface != nil {
		in, out := &in.LocalSsdInterface, &out.LocalSsdInterface
		*out = new(string)
		**out = **in
	}
	if in.BootDiskProvisionedIops != nil {
		in, out := &in.BootDiskProvisionedIops, &out.BootDiskProvisionedIops
		*out = new(int64)
		**out = **in
	}
	if in.BootDiskProvisionedThroughput != nil {
		in, out := &in.BootDiskProvisionedThroughput, &out.BootDiskProvisionedThroughput
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskConfig.
func (in *DiskConfig) DeepCopy() *DiskConfig {
	if in == nil {
		return nil
	}
	out := new(DiskConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DriverSchedulingConfig) DeepCopyInto(out *DriverSchedulingConfig) {
	*out = *in
	if in.MemoryMb != nil {
		in, out := &in.MemoryMb, &out.MemoryMb
		*out = new(int32)
		**out = **in
	}
	if in.Vcores != nil {
		in, out := &in.Vcores, &out.Vcores
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DriverSchedulingConfig.
func (in *DriverSchedulingConfig) DeepCopy() *DriverSchedulingConfig {
	if in == nil {
		return nil
	}
	out := new(DriverSchedulingConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EncryptionConfig) DeepCopyInto(out *EncryptionConfig) {
	*out = *in
	if in.GCEPDKMSKeyName != nil {
		in, out := &in.GCEPDKMSKeyName, &out.GCEPDKMSKeyName
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EncryptionConfig.
func (in *EncryptionConfig) DeepCopy() *EncryptionConfig {
	if in == nil {
		return nil
	}
	out := new(EncryptionConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EndpointConfig) DeepCopyInto(out *EndpointConfig) {
	*out = *in
	if in.EnableHTTPPortAccess != nil {
		in, out := &in.EnableHTTPPortAccess, &out.EnableHTTPPortAccess
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EndpointConfig.
func (in *EndpointConfig) DeepCopy() *EndpointConfig {
	if in == nil {
		return nil
	}
	out := new(EndpointConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EndpointConfigObservedState) DeepCopyInto(out *EndpointConfigObservedState) {
	*out = *in
	if in.HTTPPorts != nil {
		in, out := &in.HTTPPorts, &out.HTTPPorts
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EndpointConfigObservedState.
func (in *EndpointConfigObservedState) DeepCopy() *EndpointConfigObservedState {
	if in == nil {
		return nil
	}
	out := new(EndpointConfigObservedState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentConfig) DeepCopyInto(out *EnvironmentConfig) {
	*out = *in
	if in.ExecutionConfig != nil {
		in, out := &in.ExecutionConfig, &out.ExecutionConfig
		*out = new(ExecutionConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.PeripheralsConfig != nil {
		in, out := &in.PeripheralsConfig, &out.PeripheralsConfig
		*out = new(PeripheralsConfig)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentConfig.
func (in *EnvironmentConfig) DeepCopy() *EnvironmentConfig {
	if in == nil {
		return nil
	}
	out := new(EnvironmentConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExecutionConfig) DeepCopyInto(out *ExecutionConfig) {
	*out = *in
	if in.ServiceAccountRef != nil {
		in, out := &in.ServiceAccountRef, &out.ServiceAccountRef
		*out = new(v1beta1.IAMServiceAccountRef)
		**out = **in
	}
	if in.NetworkURI != nil {
		in, out := &in.NetworkURI, &out.NetworkURI
		*out = new(string)
		**out = **in
	}
	if in.SubnetworkURI != nil {
		in, out := &in.SubnetworkURI, &out.SubnetworkURI
		*out = new(string)
		**out = **in
	}
	if in.NetworkTags != nil {
		in, out := &in.NetworkTags, &out.NetworkTags
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.KMSKeyRef != nil {
		in, out := &in.KMSKeyRef, &out.KMSKeyRef
		*out = new(v1beta1.KMSCryptoKeyRef)
		**out = **in
	}
	if in.IdleTTL != nil {
		in, out := &in.IdleTTL, &out.IdleTTL
		*out = new(string)
		**out = **in
	}
	if in.TTL != nil {
		in, out := &in.TTL, &out.TTL
		*out = new(string)
		**out = **in
	}
	if in.StagingBucketRef != nil {
		in, out := &in.StagingBucketRef, &out.StagingBucketRef
		*out = new(v1beta1.StorageBucketRef)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExecutionConfig.
func (in *ExecutionConfig) DeepCopy() *ExecutionConfig {
	if in == nil {
		return nil
	}
	out := new(ExecutionConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlinkJob) DeepCopyInto(out *FlinkJob) {
	*out = *in
	if in.MainJarFileURI != nil {
		in, out := &in.MainJarFileURI, &out.MainJarFileURI
		*out = new(string)
		**out = **in
	}
	if in.MainClass != nil {
		in, out := &in.MainClass, &out.MainClass
		*out = new(string)
		**out = **in
	}
	if in.Args != nil {
		in, out := &in.Args, &out.Args
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.JarFileURIs != nil {
		in, out := &in.JarFileURIs, &out.JarFileURIs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.SavepointURI != nil {
		in, out := &in.SavepointURI, &out.SavepointURI
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.LoggingConfig != nil {
		in, out := &in.LoggingConfig, &out.LoggingConfig
		*out = new(LoggingConfig)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlinkJob.
func (in *FlinkJob) DeepCopy() *FlinkJob {
	if in == nil {
		return nil
	}
	out := new(FlinkJob)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCEClusterConfig) DeepCopyInto(out *GCEClusterConfig) {
	*out = *in
	if in.ZoneURI != nil {
		in, out := &in.ZoneURI, &out.ZoneURI
		*out = new(string)
		**out = **in
	}
	if in.NetworkURI != nil {
		in, out := &in.NetworkURI, &out.NetworkURI
		*out = new(string)
		**out = **in
	}
	if in.SubnetworkURI != nil {
		in, out := &in.SubnetworkURI, &out.SubnetworkURI
		*out = new(string)
		**out = **in
	}
	if in.InternalIPOnly != nil {
		in, out := &in.InternalIPOnly, &out.InternalIPOnly
		*out = new(bool)
		**out = **in
	}
	if in.PrivateIPV6GoogleAccess != nil {
		in, out := &in.PrivateIPV6GoogleAccess, &out.PrivateIPV6GoogleAccess
		*out = new(string)
		**out = **in
	}
	if in.ServiceAccount != nil {
		in, out := &in.ServiceAccount, &out.ServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.ServiceAccountScopes != nil {
		in, out := &in.ServiceAccountScopes, &out.ServiceAccountScopes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ReservationAffinity != nil {
		in, out := &in.ReservationAffinity, &out.ReservationAffinity
		*out = new(ReservationAffinity)
		(*in).DeepCopyInto(*out)
	}
	if in.NodeGroupAffinity != nil {
		in, out := &in.NodeGroupAffinity, &out.NodeGroupAffinity
		*out = new(NodeGroupAffinity)
		(*in).DeepCopyInto(*out)
	}
	if in.ShieldedInstanceConfig != nil {
		in, out := &in.ShieldedInstanceConfig, &out.ShieldedInstanceConfig
		*out = new(ShieldedInstanceConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.ConfidentialInstanceConfig != nil {
		in, out := &in.ConfidentialInstanceConfig, &out.ConfidentialInstanceConfig
		*out = new(ConfidentialInstanceConfig)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCEClusterConfig.
func (in *GCEClusterConfig) DeepCopy() *GCEClusterConfig {
	if in == nil {
		return nil
	}
	out := new(GCEClusterConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HadoopJob) DeepCopyInto(out *HadoopJob) {
	*out = *in
	if in.MainJarFileURI != nil {
		in, out := &in.MainJarFileURI, &out.MainJarFileURI
		*out = new(string)
		**out = **in
	}
	if in.MainClass != nil {
		in, out := &in.MainClass, &out.MainClass
		*out = new(string)
		**out = **in
	}
	if in.Args != nil {
		in, out := &in.Args, &out.Args
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.JarFileURIs != nil {
		in, out := &in.JarFileURIs, &out.JarFileURIs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.FileURIs != nil {
		in, out := &in.FileURIs, &out.FileURIs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ArchiveURIs != nil {
		in, out := &in.ArchiveURIs, &out.ArchiveURIs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.LoggingConfig != nil {
		in, out := &in.LoggingConfig, &out.LoggingConfig
		*out = new(LoggingConfig)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HadoopJob.
func (in *HadoopJob) DeepCopy() *HadoopJob {
	if in == nil {
		return nil
	}
	out := new(HadoopJob)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HiveJob) DeepCopyInto(out *HiveJob) {
	*out = *in
	if in.QueryFileURI != nil {
		in, out := &in.QueryFileURI, &out.QueryFileURI
		*out = new(string)
		**out = **in
	}
	if in.QueryList != nil {
		in, out := &in.QueryList, &out.QueryList
		*out = new(QueryList)
		(*in).DeepCopyInto(*out)
	}
	if in.ContinueOnFailure != nil {
		in, out := &in.ContinueOnFailure, &out.ContinueOnFailure
		*out = new(bool)
		**out = **in
	}
	if in.ScriptVariables != nil {
		in, out := &in.ScriptVariables, &out.ScriptVariables
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.JarFileURIs != nil {
		in, out := &in.JarFileURIs, &out.JarFileURIs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HiveJob.
func (in *HiveJob) DeepCopy() *HiveJob {
	if in == nil {
		return nil
	}
	out := new(HiveJob)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IdentityConfig) DeepCopyInto(out *IdentityConfig) {
	*out = *in
	if in.UserServiceAccountMapping != nil {
		in, out := &in.UserServiceAccountMapping, &out.UserServiceAccountMapping
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IdentityConfig.
func (in *IdentityConfig) DeepCopy() *IdentityConfig {
	if in == nil {
		return nil
	}
	out := new(IdentityConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceFlexibilityPolicy) DeepCopyInto(out *InstanceFlexibilityPolicy) {
	*out = *in
	if in.ProvisioningModelMix != nil {
		in, out := &in.ProvisioningModelMix, &out.ProvisioningModelMix
		*out = new(InstanceFlexibilityPolicy_ProvisioningModelMix)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceSelectionList != nil {
		in, out := &in.InstanceSelectionList, &out.InstanceSelectionList
		*out = make([]InstanceFlexibilityPolicy_InstanceSelection, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceFlexibilityPolicy.
func (in *InstanceFlexibilityPolicy) DeepCopy() *InstanceFlexibilityPolicy {
	if in == nil {
		return nil
	}
	out := new(InstanceFlexibilityPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceFlexibilityPolicyObservedState) DeepCopyInto(out *InstanceFlexibilityPolicyObservedState) {
	*out = *in
	if in.InstanceSelectionResults != nil {
		in, out := &in.InstanceSelectionResults, &out.InstanceSelectionResults
		*out = make([]InstanceFlexibilityPolicy_InstanceSelectionResult, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceFlexibilityPolicyObservedState.
func (in *InstanceFlexibilityPolicyObservedState) DeepCopy() *InstanceFlexibilityPolicyObservedState {
	if in == nil {
		return nil
	}
	out := new(InstanceFlexibilityPolicyObservedState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceFlexibilityPolicy_InstanceSelection) DeepCopyInto(out *InstanceFlexibilityPolicy_InstanceSelection) {
	*out = *in
	if in.MachineTypes != nil {
		in, out := &in.MachineTypes, &out.MachineTypes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Rank != nil {
		in, out := &in.Rank, &out.Rank
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceFlexibilityPolicy_InstanceSelection.
func (in *InstanceFlexibilityPolicy_InstanceSelection) DeepCopy() *InstanceFlexibilityPolicy_InstanceSelection {
	if in == nil {
		return nil
	}
	out := new(InstanceFlexibilityPolicy_InstanceSelection)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceFlexibilityPolicy_InstanceSelectionResult) DeepCopyInto(out *InstanceFlexibilityPolicy_InstanceSelectionResult) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceFlexibilityPolicy_InstanceSelectionResult.
func (in *InstanceFlexibilityPolicy_InstanceSelectionResult) DeepCopy() *InstanceFlexibilityPolicy_InstanceSelectionResult {
	if in == nil {
		return nil
	}
	out := new(InstanceFlexibilityPolicy_InstanceSelectionResult)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceFlexibilityPolicy_InstanceSelectionResultObservedState) DeepCopyInto(out *InstanceFlexibilityPolicy_InstanceSelectionResultObservedState) {
	*out = *in
	if in.MachineType != nil {
		in, out := &in.MachineType, &out.MachineType
		*out = new(string)
		**out = **in
	}
	if in.VmCount != nil {
		in, out := &in.VmCount, &out.VmCount
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceFlexibilityPolicy_InstanceSelectionResultObservedState.
func (in *InstanceFlexibilityPolicy_InstanceSelectionResultObservedState) DeepCopy() *InstanceFlexibilityPolicy_InstanceSelectionResultObservedState {
	if in == nil {
		return nil
	}
	out := new(InstanceFlexibilityPolicy_InstanceSelectionResultObservedState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceFlexibilityPolicy_ProvisioningModelMix) DeepCopyInto(out *InstanceFlexibilityPolicy_ProvisioningModelMix) {
	*out = *in
	if in.StandardCapacityBase != nil {
		in, out := &in.StandardCapacityBase, &out.StandardCapacityBase
		*out = new(int32)
		**out = **in
	}
	if in.StandardCapacityPercentAboveBase != nil {
		in, out := &in.StandardCapacityPercentAboveBase, &out.StandardCapacityPercentAboveBase
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceFlexibilityPolicy_ProvisioningModelMix.
func (in *InstanceFlexibilityPolicy_ProvisioningModelMix) DeepCopy() *InstanceFlexibilityPolicy_ProvisioningModelMix {
	if in == nil {
		return nil
	}
	out := new(InstanceFlexibilityPolicy_ProvisioningModelMix)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceGroupConfig) DeepCopyInto(out *InstanceGroupConfig) {
	*out = *in
	if in.NumInstances != nil {
		in, out := &in.NumInstances, &out.NumInstances
		*out = new(int32)
		**out = **in
	}
	if in.ImageURI != nil {
		in, out := &in.ImageURI, &out.ImageURI
		*out = new(string)
		**out = **in
	}
	if in.MachineTypeURI != nil {
		in, out := &in.MachineTypeURI, &out.MachineTypeURI
		*out = new(string)
		**out = **in
	}
	if in.DiskConfig != nil {
		in, out := &in.DiskConfig, &out.DiskConfig
		*out = new(DiskConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Preemptibility != nil {
		in, out := &in.Preemptibility, &out.Preemptibility
		*out = new(string)
		**out = **in
	}
	if in.Accelerators != nil {
		in, out := &in.Accelerators, &out.Accelerators
		*out = make([]AcceleratorConfig, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MinCPUPlatform != nil {
		in, out := &in.MinCPUPlatform, &out.MinCPUPlatform
		*out = new(string)
		**out = **in
	}
	if in.MinNumInstances != nil {
		in, out := &in.MinNumInstances, &out.MinNumInstances
		*out = new(int32)
		**out = **in
	}
	if in.InstanceFlexibilityPolicy != nil {
		in, out := &in.InstanceFlexibilityPolicy, &out.InstanceFlexibilityPolicy
		*out = new(InstanceFlexibilityPolicy)
		(*in).DeepCopyInto(*out)
	}
	if in.StartupConfig != nil {
		in, out := &in.StartupConfig, &out.StartupConfig
		*out = new(StartupConfig)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceGroupConfig.
func (in *InstanceGroupConfig) DeepCopy() *InstanceGroupConfig {
	if in == nil {
		return nil
	}
	out := new(InstanceGroupConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceGroupConfigObservedState) DeepCopyInto(out *InstanceGroupConfigObservedState) {
	*out = *in
	if in.InstanceNames != nil {
		in, out := &in.InstanceNames, &out.InstanceNames
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.InstanceReferences != nil {
		in, out := &in.InstanceReferences, &out.InstanceReferences
		*out = make([]InstanceReference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsPreemptible != nil {
		in, out := &in.IsPreemptible, &out.IsPreemptible
		*out = new(bool)
		**out = **in
	}
	if in.ManagedGroupConfig != nil {
		in, out := &in.ManagedGroupConfig, &out.ManagedGroupConfig
		*out = new(ManagedGroupConfig)
		**out = **in
	}
	if in.InstanceFlexibilityPolicy != nil {
		in, out := &in.InstanceFlexibilityPolicy, &out.InstanceFlexibilityPolicy
		*out = new(InstanceFlexibilityPolicyObservedState)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceGroupConfigObservedState.
func (in *InstanceGroupConfigObservedState) DeepCopy() *InstanceGroupConfigObservedState {
	if in == nil {
		return nil
	}
	out := new(InstanceGroupConfigObservedState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceReference) DeepCopyInto(out *InstanceReference) {
	*out = *in
	if in.InstanceName != nil {
		in, out := &in.InstanceName, &out.InstanceName
		*out = new(string)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.PublicKey != nil {
		in, out := &in.PublicKey, &out.PublicKey
		*out = new(string)
		**out = **in
	}
	if in.PublicEciesKey != nil {
		in, out := &in.PublicEciesKey, &out.PublicEciesKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceReference.
func (in *InstanceReference) DeepCopy() *InstanceReference {
	if in == nil {
		return nil
	}
	out := new(InstanceReference)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobIdentity) DeepCopyInto(out *JobIdentity) {
	*out = *in
	if in.parent != nil {
		in, out := &in.parent, &out.parent
		*out = new(JobParent)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobIdentity.
func (in *JobIdentity) DeepCopy() *JobIdentity {
	if in == nil {
		return nil
	}
	out := new(JobIdentity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobParent) DeepCopyInto(out *JobParent) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobParent.
func (in *JobParent) DeepCopy() *JobParent {
	if in == nil {
		return nil
	}
	out := new(JobParent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobPlacement) DeepCopyInto(out *JobPlacement) {
	*out = *in
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.ClusterLabels != nil {
		in, out := &in.ClusterLabels, &out.ClusterLabels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobPlacement.
func (in *JobPlacement) DeepCopy() *JobPlacement {
	if in == nil {
		return nil
	}
	out := new(JobPlacement)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobPlacementObservedState) DeepCopyInto(out *JobPlacementObservedState) {
	*out = *in
	if in.ClusterUuid != nil {
		in, out := &in.ClusterUuid, &out.ClusterUuid
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobPlacementObservedState.
func (in *JobPlacementObservedState) DeepCopy() *JobPlacementObservedState {
	if in == nil {
		return nil
	}
	out := new(JobPlacementObservedState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobRef) DeepCopyInto(out *JobRef) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobRef.
func (in *JobRef) DeepCopy() *JobRef {
	if in == nil {
		return nil
	}
	out := new(JobRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobReference) DeepCopyInto(out *JobReference) {
	*out = *in
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.JobID != nil {
		in, out := &in.JobID, &out.JobID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobReference.
func (in *JobReference) DeepCopy() *JobReference {
	if in == nil {
		return nil
	}
	out := new(JobReference)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobScheduling) DeepCopyInto(out *JobScheduling) {
	*out = *in
	if in.MaxFailuresPerHour != nil {
		in, out := &in.MaxFailuresPerHour, &out.MaxFailuresPerHour
		*out = new(int32)
		**out = **in
	}
	if in.MaxFailuresTotal != nil {
		in, out := &in.MaxFailuresTotal, &out.MaxFailuresTotal
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobScheduling.
func (in *JobScheduling) DeepCopy() *JobScheduling {
	if in == nil {
		return nil
	}
	out := new(JobScheduling)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobStatus) DeepCopyInto(out *JobStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobStatus.
func (in *JobStatus) DeepCopy() *JobStatus {
	if in == nil {
		return nil
	}
	out := new(JobStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobStatusObservedState) DeepCopyInto(out *JobStatusObservedState) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.Details != nil {
		in, out := &in.Details, &out.Details
		*out = new(string)
		**out = **in
	}
	if in.StateStartTime != nil {
		in, out := &in.StateStartTime, &out.StateStartTime
		*out = new(string)
		**out = **in
	}
	if in.Substate != nil {
		in, out := &in.Substate, &out.Substate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobStatusObservedState.
func (in *JobStatusObservedState) DeepCopy() *JobStatusObservedState {
	if in == nil {
		return nil
	}
	out := new(JobStatusObservedState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KerberosConfig) DeepCopyInto(out *KerberosConfig) {
	*out = *in
	if in.EnableKerberos != nil {
		in, out := &in.EnableKerberos, &out.EnableKerberos
		*out = new(bool)
		**out = **in
	}
	if in.RootPrincipalPasswordURI != nil {
		in, out := &in.RootPrincipalPasswordURI, &out.RootPrincipalPasswordURI
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyURI != nil {
		in, out := &in.KMSKeyURI, &out.KMSKeyURI
		*out = new(string)
		**out = **in
	}
	if in.KeystoreURI != nil {
		in, out := &in.KeystoreURI, &out.KeystoreURI
		*out = new(string)
		**out = **in
	}
	if in.TruststoreURI != nil {
		in, out := &in.TruststoreURI, &out.TruststoreURI
		*out = new(string)
		**out = **in
	}
	if in.KeystorePasswordURI != nil {
		in, out := &in.KeystorePasswordURI, &out.KeystorePasswordURI
		*out = new(string)
		**out = **in
	}
	if in.KeyPasswordURI != nil {
		in, out := &in.KeyPasswordURI, &out.KeyPasswordURI
		*out = new(string)
		**out = **in
	}
	if in.TruststorePasswordURI != nil {
		in, out := &in.TruststorePasswordURI, &out.TruststorePasswordURI
		*out = new(string)
		**out = **in
	}
	if in.CrossRealmTrustRealm != nil {
		in, out := &in.CrossRealmTrustRealm, &out.CrossRealmTrustRealm
		*out = new(string)
		**out = **in
	}
	if in.CrossRealmTrustKdc != nil {
		in, out := &in.CrossRealmTrustKdc, &out.CrossRealmTrustKdc
		*out = new(string)
		**out = **in
	}
	if in.CrossRealmTrustAdminServer != nil {
		in, out := &in.CrossRealmTrustAdminServer, &out.CrossRealmTrustAdminServer
		*out = new(string)
		**out = **in
	}
	if in.CrossRealmTrustSharedPasswordURI != nil {
		in, out := &in.CrossRealmTrustSharedPasswordURI, &out.CrossRealmTrustSharedPasswordURI
		*out = new(string)
		**out = **in
	}
	if in.KdcDbKeyURI != nil {
		in, out := &in.KdcDbKeyURI, &out.KdcDbKeyURI
		*out = new(string)
		**out = **in
	}
	if in.TgtLifetimeHours != nil {
		in, out := &in.TgtLifetimeHours, &out.TgtLifetimeHours
		*out = new(int32)
		**out = **in
	}
	if in.Realm != nil {
		in, out := &in.Realm, &out.Realm
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KerberosConfig.
func (in *KerberosConfig) DeepCopy() *KerberosConfig {
	if in == nil {
		return nil
	}
	out := new(KerberosConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LifecycleConfig) DeepCopyInto(out *LifecycleConfig) {
	*out = *in
	if in.IdleDeleteTtl != nil {
		in, out := &in.IdleDeleteTtl, &out.IdleDeleteTtl
		*out = new(string)
		**out = **in
	}
	if in.AutoDeleteTime != nil {
		in, out := &in.AutoDeleteTime, &out.AutoDeleteTime
		*out = new(string)
		**out = **in
	}
	if in.AutoDeleteTtl != nil {
		in, out := &in.AutoDeleteTtl, &out.AutoDeleteTtl
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LifecycleConfig.
func (in *LifecycleConfig) DeepCopy() *LifecycleConfig {
	if in == nil {
		return nil
	}
	out := new(LifecycleConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LifecycleConfigObservedState) DeepCopyInto(out *LifecycleConfigObservedState) {
	*out = *in
	if in.IdleStartTime != nil {
		in, out := &in.IdleStartTime, &out.IdleStartTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LifecycleConfigObservedState.
func (in *LifecycleConfigObservedState) DeepCopy() *LifecycleConfigObservedState {
	if in == nil {
		return nil
	}
	out := new(LifecycleConfigObservedState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoggingConfig) DeepCopyInto(out *LoggingConfig) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoggingConfig.
func (in *LoggingConfig) DeepCopy() *LoggingConfig {
	if in == nil {
		return nil
	}
	out := new(LoggingConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedCluster) DeepCopyInto(out *ManagedCluster) {
	*out = *in
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = new(ClusterConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedCluster.
func (in *ManagedCluster) DeepCopy() *ManagedCluster {
	if in == nil {
		return nil
	}
	out := new(ManagedCluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterObservedState) DeepCopyInto(out *ManagedClusterObservedState) {
	*out = *in
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = new(ClusterConfigObservedState)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterObservedState.
func (in *ManagedClusterObservedState) DeepCopy() *ManagedClusterObservedState {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterObservedState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedGroupConfig) DeepCopyInto(out *ManagedGroupConfig) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedGroupConfig.
func (in *ManagedGroupConfig) DeepCopy() *ManagedGroupConfig {
	if in == nil {
		return nil
	}
	out := new(ManagedGroupConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedGroupConfigObservedState) DeepCopyInto(out *ManagedGroupConfigObservedState) {
	*out = *in
	if in.InstanceTemplateName != nil {
		in, out := &in.InstanceTemplateName, &out.InstanceTemplateName
		*out = new(string)
		**out = **in
	}
	if in.InstanceGroupManagerName != nil {
		in, out := &in.InstanceGroupManagerName, &out.InstanceGroupManagerName
		*out = new(string)
		**out = **in
	}
	if in.InstanceGroupManagerURI != nil {
		in, out := &in.InstanceGroupManagerURI, &out.InstanceGroupManagerURI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedGroupConfigObservedState.
func (in *ManagedGroupConfigObservedState) DeepCopy() *ManagedGroupConfigObservedState {
	if in == nil {
		return nil
	}
	out := new(ManagedGroupConfigObservedState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetastoreConfig) DeepCopyInto(out *MetastoreConfig) {
	*out = *in
	if in.DataprocMetastoreService != nil {
		in, out := &in.DataprocMetastoreService, &out.DataprocMetastoreService
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetastoreConfig.
func (in *MetastoreConfig) DeepCopy() *MetastoreConfig {
	if in == nil {
		return nil
	}
	out := new(MetastoreConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeGroup) DeepCopyInto(out *NodeGroup) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Roles != nil {
		in, out := &in.Roles, &out.Roles
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.NodeGroupConfig != nil {
		in, out := &in.NodeGroupConfig, &out.NodeGroupConfig
		*out = new(InstanceGroupConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeGroup.
func (in *NodeGroup) DeepCopy() *NodeGroup {
	if in == nil {
		return nil
	}
	out := new(NodeGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeGroupAffinity) DeepCopyInto(out *NodeGroupAffinity) {
	*out = *in
	if in.NodeGroupURI != nil {
		in, out := &in.NodeGroupURI, &out.NodeGroupURI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeGroupAffinity.
func (in *NodeGroupAffinity) DeepCopy() *NodeGroupAffinity {
	if in == nil {
		return nil
	}
	out := new(NodeGroupAffinity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeInitializationAction) DeepCopyInto(out *NodeInitializationAction) {
	*out = *in
	if in.ExecutableFile != nil {
		in, out := &in.ExecutableFile, &out.ExecutableFile
		*out = new(string)
		**out = **in
	}
	if in.ExecutionTimeout != nil {
		in, out := &in.ExecutionTimeout, &out.ExecutionTimeout
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeInitializationAction.
func (in *NodeInitializationAction) DeepCopy() *NodeInitializationAction {
	if in == nil {
		return nil
	}
	out := new(NodeInitializationAction)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrderedJob) DeepCopyInto(out *OrderedJob) {
	*out = *in
	if in.StepID != nil {
		in, out := &in.StepID, &out.StepID
		*out = new(string)
		**out = **in
	}
	if in.HadoopJob != nil {
		in, out := &in.HadoopJob, &out.HadoopJob
		*out = new(HadoopJob)
		(*in).DeepCopyInto(*out)
	}
	if in.SparkJob != nil {
		in, out := &in.SparkJob, &out.SparkJob
		*out = new(SparkJob)
		(*in).DeepCopyInto(*out)
	}
	if in.PysparkJob != nil {
		in, out := &in.PysparkJob, &out.PysparkJob
		*out = new(PySparkJob)
		(*in).DeepCopyInto(*out)
	}
	if in.HiveJob != nil {
		in, out := &in.HiveJob, &out.HiveJob
		*out = new(HiveJob)
		(*in).DeepCopyInto(*out)
	}
	if in.PigJob != nil {
		in, out := &in.PigJob, &out.PigJob
		*out = new(PigJob)
		(*in).DeepCopyInto(*out)
	}
	if in.SparkRJob != nil {
		in, out := &in.SparkRJob, &out.SparkRJob
		*out = new(SparkRJob)
		(*in).DeepCopyInto(*out)
	}
	if in.SparkSQLJob != nil {
		in, out := &in.SparkSQLJob, &out.SparkSQLJob
		*out = new(SparkSQLJob)
		(*in).DeepCopyInto(*out)
	}
	if in.PrestoJob != nil {
		in, out := &in.PrestoJob, &out.PrestoJob
		*out = new(PrestoJob)
		(*in).DeepCopyInto(*out)
	}
	if in.TrinoJob != nil {
		in, out := &in.TrinoJob, &out.TrinoJob
		*out = new(TrinoJob)
		(*in).DeepCopyInto(*out)
	}
	if in.FlinkJob != nil {
		in, out := &in.FlinkJob, &out.FlinkJob
		*out = new(FlinkJob)
		(*in).DeepCopyInto(*out)
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Scheduling != nil {
		in, out := &in.Scheduling, &out.Scheduling
		*out = new(JobScheduling)
		(*in).DeepCopyInto(*out)
	}
	if in.PrerequisiteStepIds != nil {
		in, out := &in.PrerequisiteStepIds, &out.PrerequisiteStepIds
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrderedJob.
func (in *OrderedJob) DeepCopy() *OrderedJob {
	if in == nil {
		return nil
	}
	out := new(OrderedJob)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParameterValidation) DeepCopyInto(out *ParameterValidation) {
	*out = *in
	if in.Regex != nil {
		in, out := &in.Regex, &out.Regex
		*out = new(RegexValidation)
		(*in).DeepCopyInto(*out)
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = new(ValueValidation)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParameterValidation.
func (in *ParameterValidation) DeepCopy() *ParameterValidation {
	if in == nil {
		return nil
	}
	out := new(ParameterValidation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Parent) DeepCopyInto(out *Parent) {
	*out = *in
	if in.ProjectRef != nil {
		in, out := &in.ProjectRef, &out.ProjectRef
		*out = new(v1beta1.ProjectRef)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Parent.
func (in *Parent) DeepCopy() *Parent {
	if in == nil {
		return nil
	}
	out := new(Parent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PeripheralsConfig) DeepCopyInto(out *PeripheralsConfig) {
	*out = *in
	if in.MetastoreService != nil {
		in, out := &in.MetastoreService, &out.MetastoreService
		*out = new(string)
		**out = **in
	}
	if in.SparkHistoryServerConfig != nil {
		in, out := &in.SparkHistoryServerConfig, &out.SparkHistoryServerConfig
		*out = new(SparkHistoryServerConfig)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PeripheralsConfig.
func (in *PeripheralsConfig) DeepCopy() *PeripheralsConfig {
	if in == nil {
		return nil
	}
	out := new(PeripheralsConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PigJob) DeepCopyInto(out *PigJob) {
	*out = *in
	if in.QueryFileURI != nil {
		in, out := &in.QueryFileURI, &out.QueryFileURI
		*out = new(string)
		**out = **in
	}
	if in.QueryList != nil {
		in, out := &in.QueryList, &out.QueryList
		*out = new(QueryList)
		(*in).DeepCopyInto(*out)
	}
	if in.ContinueOnFailure != nil {
		in, out := &in.ContinueOnFailure, &out.ContinueOnFailure
		*out = new(bool)
		**out = **in
	}
	if in.ScriptVariables != nil {
		in, out := &in.ScriptVariables, &out.ScriptVariables
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.JarFileURIs != nil {
		in, out := &in.JarFileURIs, &out.JarFileURIs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.LoggingConfig != nil {
		in, out := &in.LoggingConfig, &out.LoggingConfig
		*out = new(LoggingConfig)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PigJob.
func (in *PigJob) DeepCopy() *PigJob {
	if in == nil {
		return nil
	}
	out := new(PigJob)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrestoJob) DeepCopyInto(out *PrestoJob) {
	*out = *in
	if in.QueryFileURI != nil {
		in, out := &in.QueryFileURI, &out.QueryFileURI
		*out = new(string)
		**out = **in
	}
	if in.QueryList != nil {
		in, out := &in.QueryList, &out.QueryList
		*out = new(QueryList)
		(*in).DeepCopyInto(*out)
	}
	if in.ContinueOnFailure != nil {
		in, out := &in.ContinueOnFailure, &out.ContinueOnFailure
		*out = new(bool)
		**out = **in
	}
	if in.OutputFormat != nil {
		in, out := &in.OutputFormat, &out.OutputFormat
		*out = new(string)
		**out = **in
	}
	if in.ClientTags != nil {
		in, out := &in.ClientTags, &out.ClientTags
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.LoggingConfig != nil {
		in, out := &in.LoggingConfig, &out.LoggingConfig
		*out = new(LoggingConfig)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrestoJob.
func (in *PrestoJob) DeepCopy() *PrestoJob {
	if in == nil {
		return nil
	}
	out := new(PrestoJob)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PyPiRepositoryConfig) DeepCopyInto(out *PyPiRepositoryConfig) {
	*out = *in
	if in.PypiRepository != nil {
		in, out := &in.PypiRepository, &out.PypiRepository
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PyPiRepositoryConfig.
func (in *PyPiRepositoryConfig) DeepCopy() *PyPiRepositoryConfig {
	if in == nil {
		return nil
	}
	out := new(PyPiRepositoryConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PySparkBatch) DeepCopyInto(out *PySparkBatch) {
	*out = *in
	if in.MainPythonFileURI != nil {
		in, out := &in.MainPythonFileURI, &out.MainPythonFileURI
		*out = new(string)
		**out = **in
	}
	if in.Args != nil {
		in, out := &in.Args, &out.Args
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.PythonFileURIs != nil {
		in, out := &in.PythonFileURIs, &out.PythonFileURIs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.JarFileURIs != nil {
		in, out := &in.JarFileURIs, &out.JarFileURIs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.FileURIs != nil {
		in, out := &in.FileURIs, &out.FileURIs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ArchiveURIs != nil {
		in, out := &in.ArchiveURIs, &out.ArchiveURIs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PySparkBatch.
func (in *PySparkBatch) DeepCopy() *PySparkBatch {
	if in == nil {
		return nil
	}
	out := new(PySparkBatch)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PySparkJob) DeepCopyInto(out *PySparkJob) {
	*out = *in
	if in.MainPythonFileURI != nil {
		in, out := &in.MainPythonFileURI, &out.MainPythonFileURI
		*out = new(string)
		**out = **in
	}
	if in.Args != nil {
		in, out := &in.Args, &out.Args
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.PythonFileURIs != nil {
		in, out := &in.PythonFileURIs, &out.PythonFileURIs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.JarFileURIs != nil {
		in, out := &in.JarFileURIs, &out.JarFileURIs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.FileURIs != nil {
		in, out := &in.FileURIs, &out.FileURIs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ArchiveURIs != nil {
		in, out := &in.ArchiveURIs, &out.ArchiveURIs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.LoggingConfig != nil {
		in, out := &in.LoggingConfig, &out.LoggingConfig
		*out = new(LoggingConfig)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PySparkJob.
func (in *PySparkJob) DeepCopy() *PySparkJob {
	if in == nil {
		return nil
	}
	out := new(PySparkJob)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryList) DeepCopyInto(out *QueryList) {
	*out = *in
	if in.Queries != nil {
		in, out := &in.Queries, &out.Queries
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryList.
func (in *QueryList) DeepCopy() *QueryList {
	if in == nil {
		return nil
	}
	out := new(QueryList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegexValidation) DeepCopyInto(out *RegexValidation) {
	*out = *in
	if in.Regexes != nil {
		in, out := &in.Regexes, &out.Regexes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegexValidation.
func (in *RegexValidation) DeepCopy() *RegexValidation {
	if in == nil {
		return nil
	}
	out := new(RegexValidation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryConfig) DeepCopyInto(out *RepositoryConfig) {
	*out = *in
	if in.PypiRepositoryConfig != nil {
		in, out := &in.PypiRepositoryConfig, &out.PypiRepositoryConfig
		*out = new(PyPiRepositoryConfig)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryConfig.
func (in *RepositoryConfig) DeepCopy() *RepositoryConfig {
	if in == nil {
		return nil
	}
	out := new(RepositoryConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReservationAffinity) DeepCopyInto(out *ReservationAffinity) {
	*out = *in
	if in.ConsumeReservationType != nil {
		in, out := &in.ConsumeReservationType, &out.ConsumeReservationType
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReservationAffinity.
func (in *ReservationAffinity) DeepCopy() *ReservationAffinity {
	if in == nil {
		return nil
	}
	out := new(ReservationAffinity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuntimeConfig) DeepCopyInto(out *RuntimeConfig) {
	*out = *in
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
	if in.ContainerImage != nil {
		in, out := &in.ContainerImage, &out.ContainerImage
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.RepositoryConfig != nil {
		in, out := &in.RepositoryConfig, &out.RepositoryConfig
		*out = new(RepositoryConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.AutotuningConfig != nil {
		in, out := &in.AutotuningConfig, &out.AutotuningConfig
		*out = new(AutotuningConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Cohort != nil {
		in, out := &in.Cohort, &out.Cohort
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuntimeConfig.
func (in *RuntimeConfig) DeepCopy() *RuntimeConfig {
	if in == nil {
		return nil
	}
	out := new(RuntimeConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuntimeInfo) DeepCopyInto(out *RuntimeInfo) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuntimeInfo.
func (in *RuntimeInfo) DeepCopy() *RuntimeInfo {
	if in == nil {
		return nil
	}
	out := new(RuntimeInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuntimeInfoObservedState) DeepCopyInto(out *RuntimeInfoObservedState) {
	*out = *in
	if in.Endpoints != nil {
		in, out := &in.Endpoints, &out.Endpoints
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.OutputURI != nil {
		in, out := &in.OutputURI, &out.OutputURI
		*out = new(string)
		**out = **in
	}
	if in.DiagnosticOutputURI != nil {
		in, out := &in.DiagnosticOutputURI, &out.DiagnosticOutputURI
		*out = new(string)
		**out = **in
	}
	if in.ApproximateUsage != nil {
		in, out := &in.ApproximateUsage, &out.ApproximateUsage
		*out = new(UsageMetrics)
		(*in).DeepCopyInto(*out)
	}
	if in.CurrentUsage != nil {
		in, out := &in.CurrentUsage, &out.CurrentUsage
		*out = new(UsageSnapshot)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuntimeInfoObservedState.
func (in *RuntimeInfoObservedState) DeepCopy() *RuntimeInfoObservedState {
	if in == nil {
		return nil
	}
	out := new(RuntimeInfoObservedState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityConfig) DeepCopyInto(out *SecurityConfig) {
	*out = *in
	if in.KerberosConfig != nil {
		in, out := &in.KerberosConfig, &out.KerberosConfig
		*out = new(KerberosConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.IdentityConfig != nil {
		in, out := &in.IdentityConfig, &out.IdentityConfig
		*out = new(IdentityConfig)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityConfig.
func (in *SecurityConfig) DeepCopy() *SecurityConfig {
	if in == nil {
		return nil
	}
	out := new(SecurityConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceRef) DeepCopyInto(out *ServiceRef) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceRef.
func (in *ServiceRef) DeepCopy() *ServiceRef {
	if in == nil {
		return nil
	}
	out := new(ServiceRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShieldedInstanceConfig) DeepCopyInto(out *ShieldedInstanceConfig) {
	*out = *in
	if in.EnableSecureBoot != nil {
		in, out := &in.EnableSecureBoot, &out.EnableSecureBoot
		*out = new(bool)
		**out = **in
	}
	if in.EnableVTPM != nil {
		in, out := &in.EnableVTPM, &out.EnableVTPM
		*out = new(bool)
		**out = **in
	}
	if in.EnableIntegrityMonitoring != nil {
		in, out := &in.EnableIntegrityMonitoring, &out.EnableIntegrityMonitoring
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShieldedInstanceConfig.
func (in *ShieldedInstanceConfig) DeepCopy() *ShieldedInstanceConfig {
	if in == nil {
		return nil
	}
	out := new(ShieldedInstanceConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SoftwareConfig) DeepCopyInto(out *SoftwareConfig) {
	*out = *in
	if in.ImageVersion != nil {
		in, out := &in.ImageVersion, &out.ImageVersion
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.OptionalComponents != nil {
		in, out := &in.OptionalComponents, &out.OptionalComponents
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SoftwareConfig.
func (in *SoftwareConfig) DeepCopy() *SoftwareConfig {
	if in == nil {
		return nil
	}
	out := new(SoftwareConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkBatch) DeepCopyInto(out *SparkBatch) {
	*out = *in
	if in.MainJarFileURI != nil {
		in, out := &in.MainJarFileURI, &out.MainJarFileURI
		*out = new(string)
		**out = **in
	}
	if in.MainClass != nil {
		in, out := &in.MainClass, &out.MainClass
		*out = new(string)
		**out = **in
	}
	if in.Args != nil {
		in, out := &in.Args, &out.Args
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.JarFileURIs != nil {
		in, out := &in.JarFileURIs, &out.JarFileURIs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.FileURIs != nil {
		in, out := &in.FileURIs, &out.FileURIs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ArchiveURIs != nil {
		in, out := &in.ArchiveURIs, &out.ArchiveURIs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkBatch.
func (in *SparkBatch) DeepCopy() *SparkBatch {
	if in == nil {
		return nil
	}
	out := new(SparkBatch)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkHistoryServerConfig) DeepCopyInto(out *SparkHistoryServerConfig) {
	*out = *in
	if in.DataprocClusterRef != nil {
		in, out := &in.DataprocClusterRef, &out.DataprocClusterRef
		*out = new(v1beta1.DataprocClusterRef)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkHistoryServerConfig.
func (in *SparkHistoryServerConfig) DeepCopy() *SparkHistoryServerConfig {
	if in == nil {
		return nil
	}
	out := new(SparkHistoryServerConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkJob) DeepCopyInto(out *SparkJob) {
	*out = *in
	if in.MainJarFileURI != nil {
		in, out := &in.MainJarFileURI, &out.MainJarFileURI
		*out = new(string)
		**out = **in
	}
	if in.MainClass != nil {
		in, out := &in.MainClass, &out.MainClass
		*out = new(string)
		**out = **in
	}
	if in.Args != nil {
		in, out := &in.Args, &out.Args
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.JarFileURIs != nil {
		in, out := &in.JarFileURIs, &out.JarFileURIs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.FileURIs != nil {
		in, out := &in.FileURIs, &out.FileURIs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ArchiveURIs != nil {
		in, out := &in.ArchiveURIs, &out.ArchiveURIs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.LoggingConfig != nil {
		in, out := &in.LoggingConfig, &out.LoggingConfig
		*out = new(LoggingConfig)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkJob.
func (in *SparkJob) DeepCopy() *SparkJob {
	if in == nil {
		return nil
	}
	out := new(SparkJob)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkRBatch) DeepCopyInto(out *SparkRBatch) {
	*out = *in
	if in.MainRFileURI != nil {
		in, out := &in.MainRFileURI, &out.MainRFileURI
		*out = new(string)
		**out = **in
	}
	if in.Args != nil {
		in, out := &in.Args, &out.Args
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.FileURIs != nil {
		in, out := &in.FileURIs, &out.FileURIs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ArchiveURIs != nil {
		in, out := &in.ArchiveURIs, &out.ArchiveURIs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkRBatch.
func (in *SparkRBatch) DeepCopy() *SparkRBatch {
	if in == nil {
		return nil
	}
	out := new(SparkRBatch)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkRJob) DeepCopyInto(out *SparkRJob) {
	*out = *in
	if in.MainRFileURI != nil {
		in, out := &in.MainRFileURI, &out.MainRFileURI
		*out = new(string)
		**out = **in
	}
	if in.Args != nil {
		in, out := &in.Args, &out.Args
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.FileURIs != nil {
		in, out := &in.FileURIs, &out.FileURIs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ArchiveURIs != nil {
		in, out := &in.ArchiveURIs, &out.ArchiveURIs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.LoggingConfig != nil {
		in, out := &in.LoggingConfig, &out.LoggingConfig
		*out = new(LoggingConfig)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkRJob.
func (in *SparkRJob) DeepCopy() *SparkRJob {
	if in == nil {
		return nil
	}
	out := new(SparkRJob)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkSQLBatch) DeepCopyInto(out *SparkSQLBatch) {
	*out = *in
	if in.QueryFileURI != nil {
		in, out := &in.QueryFileURI, &out.QueryFileURI
		*out = new(string)
		**out = **in
	}
	if in.QueryVariables != nil {
		in, out := &in.QueryVariables, &out.QueryVariables
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.JarFileURIs != nil {
		in, out := &in.JarFileURIs, &out.JarFileURIs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkSQLBatch.
func (in *SparkSQLBatch) DeepCopy() *SparkSQLBatch {
	if in == nil {
		return nil
	}
	out := new(SparkSQLBatch)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SparkSQLJob) DeepCopyInto(out *SparkSQLJob) {
	*out = *in
	if in.QueryFileURI != nil {
		in, out := &in.QueryFileURI, &out.QueryFileURI
		*out = new(string)
		**out = **in
	}
	if in.QueryList != nil {
		in, out := &in.QueryList, &out.QueryList
		*out = new(QueryList)
		(*in).DeepCopyInto(*out)
	}
	if in.ScriptVariables != nil {
		in, out := &in.ScriptVariables, &out.ScriptVariables
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.JarFileURIs != nil {
		in, out := &in.JarFileURIs, &out.JarFileURIs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.LoggingConfig != nil {
		in, out := &in.LoggingConfig, &out.LoggingConfig
		*out = new(LoggingConfig)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SparkSQLJob.
func (in *SparkSQLJob) DeepCopy() *SparkSQLJob {
	if in == nil {
		return nil
	}
	out := new(SparkSQLJob)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StartupConfig) DeepCopyInto(out *StartupConfig) {
	*out = *in
	if in.RequiredRegistrationFraction != nil {
		in, out := &in.RequiredRegistrationFraction, &out.RequiredRegistrationFraction
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StartupConfig.
func (in *StartupConfig) DeepCopy() *StartupConfig {
	if in == nil {
		return nil
	}
	out := new(StartupConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TemplateParameter) DeepCopyInto(out *TemplateParameter) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Fields != nil {
		in, out := &in.Fields, &out.Fields
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Validation != nil {
		in, out := &in.Validation, &out.Validation
		*out = new(ParameterValidation)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TemplateParameter.
func (in *TemplateParameter) DeepCopy() *TemplateParameter {
	if in == nil {
		return nil
	}
	out := new(TemplateParameter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrinoJob) DeepCopyInto(out *TrinoJob) {
	*out = *in
	if in.QueryFileURI != nil {
		in, out := &in.QueryFileURI, &out.QueryFileURI
		*out = new(string)
		**out = **in
	}
	if in.QueryList != nil {
		in, out := &in.QueryList, &out.QueryList
		*out = new(QueryList)
		(*in).DeepCopyInto(*out)
	}
	if in.ContinueOnFailure != nil {
		in, out := &in.ContinueOnFailure, &out.ContinueOnFailure
		*out = new(bool)
		**out = **in
	}
	if in.OutputFormat != nil {
		in, out := &in.OutputFormat, &out.OutputFormat
		*out = new(string)
		**out = **in
	}
	if in.ClientTags != nil {
		in, out := &in.ClientTags, &out.ClientTags
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.LoggingConfig != nil {
		in, out := &in.LoggingConfig, &out.LoggingConfig
		*out = new(LoggingConfig)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrinoJob.
func (in *TrinoJob) DeepCopy() *TrinoJob {
	if in == nil {
		return nil
	}
	out := new(TrinoJob)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UsageMetrics) DeepCopyInto(out *UsageMetrics) {
	*out = *in
	if in.MilliDcuSeconds != nil {
		in, out := &in.MilliDcuSeconds, &out.MilliDcuSeconds
		*out = new(int64)
		**out = **in
	}
	if in.ShuffleStorageGBSeconds != nil {
		in, out := &in.ShuffleStorageGBSeconds, &out.ShuffleStorageGBSeconds
		*out = new(int64)
		**out = **in
	}
	if in.MilliAcceleratorSeconds != nil {
		in, out := &in.MilliAcceleratorSeconds, &out.MilliAcceleratorSeconds
		*out = new(int64)
		**out = **in
	}
	if in.AcceleratorType != nil {
		in, out := &in.AcceleratorType, &out.AcceleratorType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UsageMetrics.
func (in *UsageMetrics) DeepCopy() *UsageMetrics {
	if in == nil {
		return nil
	}
	out := new(UsageMetrics)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UsageSnapshot) DeepCopyInto(out *UsageSnapshot) {
	*out = *in
	if in.MilliDcu != nil {
		in, out := &in.MilliDcu, &out.MilliDcu
		*out = new(int64)
		**out = **in
	}
	if in.ShuffleStorageGB != nil {
		in, out := &in.ShuffleStorageGB, &out.ShuffleStorageGB
		*out = new(int64)
		**out = **in
	}
	if in.MilliDcuPremium != nil {
		in, out := &in.MilliDcuPremium, &out.MilliDcuPremium
		*out = new(int64)
		**out = **in
	}
	if in.ShuffleStorageGBPremium != nil {
		in, out := &in.ShuffleStorageGBPremium, &out.ShuffleStorageGBPremium
		*out = new(int64)
		**out = **in
	}
	if in.MilliAccelerator != nil {
		in, out := &in.MilliAccelerator, &out.MilliAccelerator
		*out = new(int64)
		**out = **in
	}
	if in.AcceleratorType != nil {
		in, out := &in.AcceleratorType, &out.AcceleratorType
		*out = new(string)
		**out = **in
	}
	if in.SnapshotTime != nil {
		in, out := &in.SnapshotTime, &out.SnapshotTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UsageSnapshot.
func (in *UsageSnapshot) DeepCopy() *UsageSnapshot {
	if in == nil {
		return nil
	}
	out := new(UsageSnapshot)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ValueValidation) DeepCopyInto(out *ValueValidation) {
	*out = *in
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ValueValidation.
func (in *ValueValidation) DeepCopy() *ValueValidation {
	if in == nil {
		return nil
	}
	out := new(ValueValidation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkflowTemplateIdentity) DeepCopyInto(out *WorkflowTemplateIdentity) {
	*out = *in
	if in.parent != nil {
		in, out := &in.parent, &out.parent
		*out = new(WorkflowTemplateParent)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkflowTemplateIdentity.
func (in *WorkflowTemplateIdentity) DeepCopy() *WorkflowTemplateIdentity {
	if in == nil {
		return nil
	}
	out := new(WorkflowTemplateIdentity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkflowTemplateParent) DeepCopyInto(out *WorkflowTemplateParent) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkflowTemplateParent.
func (in *WorkflowTemplateParent) DeepCopy() *WorkflowTemplateParent {
	if in == nil {
		return nil
	}
	out := new(WorkflowTemplateParent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkflowTemplatePlacement) DeepCopyInto(out *WorkflowTemplatePlacement) {
	*out = *in
	if in.ManagedCluster != nil {
		in, out := &in.ManagedCluster, &out.ManagedCluster
		*out = new(ManagedCluster)
		(*in).DeepCopyInto(*out)
	}
	if in.ClusterSelector != nil {
		in, out := &in.ClusterSelector, &out.ClusterSelector
		*out = new(ClusterSelector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkflowTemplatePlacement.
func (in *WorkflowTemplatePlacement) DeepCopy() *WorkflowTemplatePlacement {
	if in == nil {
		return nil
	}
	out := new(WorkflowTemplatePlacement)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkflowTemplatePlacementObservedState) DeepCopyInto(out *WorkflowTemplatePlacementObservedState) {
	*out = *in
	if in.ManagedCluster != nil {
		in, out := &in.ManagedCluster, &out.ManagedCluster
		*out = new(ManagedClusterObservedState)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkflowTemplatePlacementObservedState.
func (in *WorkflowTemplatePlacementObservedState) DeepCopy() *WorkflowTemplatePlacementObservedState {
	if in == nil {
		return nil
	}
	out := new(WorkflowTemplatePlacementObservedState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkflowTemplateRef) DeepCopyInto(out *WorkflowTemplateRef) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkflowTemplateRef.
func (in *WorkflowTemplateRef) DeepCopy() *WorkflowTemplateRef {
	if in == nil {
		return nil
	}
	out := new(WorkflowTemplateRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkflowTemplate_EncryptionConfig) DeepCopyInto(out *WorkflowTemplate_EncryptionConfig) {
	*out = *in
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkflowTemplate_EncryptionConfig.
func (in *WorkflowTemplate_EncryptionConfig) DeepCopy() *WorkflowTemplate_EncryptionConfig {
	if in == nil {
		return nil
	}
	out := new(WorkflowTemplate_EncryptionConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *YarnApplication) DeepCopyInto(out *YarnApplication) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.Progress != nil {
		in, out := &in.Progress, &out.Progress
		*out = new(float32)
		**out = **in
	}
	if in.TrackingURL != nil {
		in, out := &in.TrackingURL, &out.TrackingURL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new YarnApplication.
func (in *YarnApplication) DeepCopy() *YarnApplication {
	if in == nil {
		return nil
	}
	out := new(YarnApplication)
	in.DeepCopyInto(out)
	return out
}
