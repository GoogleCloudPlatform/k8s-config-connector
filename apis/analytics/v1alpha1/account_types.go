// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package v1alpha1

import (
	"github.com/GoogleCloudPlatform/k8s-config-connector/pkg/apis/k8s/v1alpha1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

var AnalyticsAccountGVK = GroupVersion.WithKind("AnalyticsAccount")

// AnalyticsAccountSpec defines the desired state of AnalyticsAccount
// +kcc:spec:proto=google.analytics.admin.v1beta.Account
type AnalyticsAccountSpec struct {
	// The AnalyticsAccount name. It's generated by the service.
	// Providing resource ID via this field indicates resource acquisition instead of creation.
	ResourceID *string `json:"resourceID,omitempty"`

	// Required. Human-readable display name for this account.
	// +kcc:proto:field=google.analytics.admin.v1beta.Account.display_name
	// +required
	DisplayName *string `json:"displayName,omitempty"`

	// Country of business. Must be a Unicode CLDR region code.
	// +kcc:proto:field=google.analytics.admin.v1beta.Account.region_code
	// +required
	RegionCode *string `json:"regionCode,omitempty"`

	// Got the following error if 'redirect_uri' field is empty when provisioning the ticket for account creation:
	// rpc error: code = InvalidArgument desc = The value for the 'redirect_uri' field was empty, but must be provided.

	// Redirect URI where the user will be sent after accepting Terms of Service.
	// +kcc:proto:field=google.analytics.admin.v1beta.ProvisionAccountTicketRequest.redirect_uri
	// +required
	RedirectURI *string `json:"redirectURI,omitempty"`
}

// AnalyticsAccountStatus defines the config connector machine state of AnalyticsAccount
type AnalyticsAccountStatus struct {
	/* Conditions represent the latest available observations of the
	   object's current state. */
	Conditions []v1alpha1.Condition `json:"conditions,omitempty"`

	// ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource.
	ObservedGeneration *int64 `json:"observedGeneration,omitempty"`

	// A unique specifier for the AnalyticsAccount resource in GCP.
	ExternalRef *string `json:"externalRef,omitempty"`

	// ObservedState is the state of the resource as most recently observed in GCP.
	ObservedState *AnalyticsAccountObservedState `json:"observedState,omitempty"`
}

// AnalyticsAccountObservedState is the state of the AnalyticsAccount resource as most recently observed in GCP.
// +kcc:observedstate:proto=google.analytics.admin.v1beta.Account
type AnalyticsAccountObservedState struct {
	// Output only. Time when this account was originally created.
	// +kcc:proto:field=google.analytics.admin.v1beta.Account.create_time
	CreateTime *string `json:"createTime,omitempty"`

	// Output only. Time when account payload fields were last updated.
	// +kcc:proto:field=google.analytics.admin.v1beta.Account.update_time
	UpdateTime *string `json:"updateTime,omitempty"`

	// Output only. Indicates whether this Account is soft-deleted or not. Deleted
	//  accounts are excluded from List results unless specifically requested.
	// +kcc:proto:field=google.analytics.admin.v1beta.Account.deleted
	Deleted *bool `json:"deleted,omitempty"`

	// Output only. The URI for a Google Marketing Platform organization resource.
	//  Only set when this account is connected to a GMP organization.
	//  Format: marketingplatformadmin.googleapis.com/organizations/{org_id}
	// +kcc:proto:field=google.analytics.admin.v1beta.Account.gmp_organization
	GMPOrganization *string `json:"gmpOrganization,omitempty"`

	// Output only. The ticket ID received after provisioning the account.
	// Accept the Terms of Service in
	// https://analytics.google.com/analytics/web/?provisioningSignup=false#/termsofservice/ACCOUNT_TICKET_ID
	// to complete the creation of a Google Analytics account.
	// +kcc:proto:field=google.analytics.admin.v1beta.ProvisionAccountTicketResponse.account_ticket_id
	AccountTicketID *string `json:"accountTicketID,omitempty"`
}

// +genclient
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:resource:categories=gcp,shortName=gcpanalyticsaccount;gcpanalyticsaccounts
// +kubebuilder:subresource:status
// +kubebuilder:metadata:labels="cnrm.cloud.google.com/managed-by-kcc=true";"cnrm.cloud.google.com/system=true"
// +kubebuilder:printcolumn:name="Age",JSONPath=".metadata.creationTimestamp",type="date"
// +kubebuilder:printcolumn:name="Ready",JSONPath=".status.conditions[?(@.type=='Ready')].status",type="string",description="When 'True', the most recent reconcile of the resource succeeded"
// +kubebuilder:printcolumn:name="Status",JSONPath=".status.conditions[?(@.type=='Ready')].reason",type="string",description="The reason for the value in 'Ready'"
// +kubebuilder:printcolumn:name="Status Age",JSONPath=".status.conditions[?(@.type=='Ready')].lastTransitionTime",type="date",description="The last transition time for the value in 'Status'"

// AnalyticsAccount is the Schema for the AnalyticsAccount API
// +k8s:openapi-gen=true
type AnalyticsAccount struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`

	// +required
	Spec   AnalyticsAccountSpec   `json:"spec,omitempty"`
	Status AnalyticsAccountStatus `json:"status,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// AnalyticsAccountList contains a list of AnalyticsAccount
type AnalyticsAccountList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []AnalyticsAccount `json:"items"`
}

func init() {
	SchemeBuilder.Register(&AnalyticsAccount{}, &AnalyticsAccountList{})
}
