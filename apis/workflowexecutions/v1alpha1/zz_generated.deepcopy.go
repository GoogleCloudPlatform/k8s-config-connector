//go:build !ignore_autogenerated

// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/GoogleCloudPlatform/k8s-config-connector/apis/refs/v1beta1"
	workflowsv1alpha1 "github.com/GoogleCloudPlatform/k8s-config-connector/apis/workflows/v1alpha1"
	k8sv1alpha1 "github.com/GoogleCloudPlatform/k8s-config-connector/pkg/apis/k8s/v1alpha1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExecutionIdentity) DeepCopyInto(out *ExecutionIdentity) {
	*out = *in
	if in.parent != nil {
		in, out := &in.parent, &out.parent
		*out = new(ExecutionParent)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExecutionIdentity.
func (in *ExecutionIdentity) DeepCopy() *ExecutionIdentity {
	if in == nil {
		return nil
	}
	out := new(ExecutionIdentity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExecutionParent) DeepCopyInto(out *ExecutionParent) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExecutionParent.
func (in *ExecutionParent) DeepCopy() *ExecutionParent {
	if in == nil {
		return nil
	}
	out := new(ExecutionParent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExecutionRef) DeepCopyInto(out *ExecutionRef) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExecutionRef.
func (in *ExecutionRef) DeepCopy() *ExecutionRef {
	if in == nil {
		return nil
	}
	out := new(ExecutionRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Execution_Error) DeepCopyInto(out *Execution_Error) {
	*out = *in
	if in.Payload != nil {
		in, out := &in.Payload, &out.Payload
		*out = new(string)
		**out = **in
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.StackTrace != nil {
		in, out := &in.StackTrace, &out.StackTrace
		*out = new(Execution_StackTrace)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Execution_Error.
func (in *Execution_Error) DeepCopy() *Execution_Error {
	if in == nil {
		return nil
	}
	out := new(Execution_Error)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Execution_StackTrace) DeepCopyInto(out *Execution_StackTrace) {
	*out = *in
	if in.Elements != nil {
		in, out := &in.Elements, &out.Elements
		*out = make([]Execution_StackTraceElement, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Execution_StackTrace.
func (in *Execution_StackTrace) DeepCopy() *Execution_StackTrace {
	if in == nil {
		return nil
	}
	out := new(Execution_StackTrace)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Execution_StackTraceElement) DeepCopyInto(out *Execution_StackTraceElement) {
	*out = *in
	if in.Step != nil {
		in, out := &in.Step, &out.Step
		*out = new(string)
		**out = **in
	}
	if in.Routine != nil {
		in, out := &in.Routine, &out.Routine
		*out = new(string)
		**out = **in
	}
	if in.Position != nil {
		in, out := &in.Position, &out.Position
		*out = new(Execution_StackTraceElement_Position)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Execution_StackTraceElement.
func (in *Execution_StackTraceElement) DeepCopy() *Execution_StackTraceElement {
	if in == nil {
		return nil
	}
	out := new(Execution_StackTraceElement)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Execution_StackTraceElement_Position) DeepCopyInto(out *Execution_StackTraceElement_Position) {
	*out = *in
	if in.Line != nil {
		in, out := &in.Line, &out.Line
		*out = new(int64)
		**out = **in
	}
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = new(int64)
		**out = **in
	}
	if in.Length != nil {
		in, out := &in.Length, &out.Length
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Execution_StackTraceElement_Position.
func (in *Execution_StackTraceElement_Position) DeepCopy() *Execution_StackTraceElement_Position {
	if in == nil {
		return nil
	}
	out := new(Execution_StackTraceElement_Position)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Execution_StateError) DeepCopyInto(out *Execution_StateError) {
	*out = *in
	if in.Details != nil {
		in, out := &in.Details, &out.Details
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Execution_StateError.
func (in *Execution_StateError) DeepCopy() *Execution_StateError {
	if in == nil {
		return nil
	}
	out := new(Execution_StateError)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Execution_Status) DeepCopyInto(out *Execution_Status) {
	*out = *in
	if in.CurrentSteps != nil {
		in, out := &in.CurrentSteps, &out.CurrentSteps
		*out = make([]Execution_Status_Step, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Execution_Status.
func (in *Execution_Status) DeepCopy() *Execution_Status {
	if in == nil {
		return nil
	}
	out := new(Execution_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Execution_Status_Step) DeepCopyInto(out *Execution_Status_Step) {
	*out = *in
	if in.Routine != nil {
		in, out := &in.Routine, &out.Routine
		*out = new(string)
		**out = **in
	}
	if in.Step != nil {
		in, out := &in.Step, &out.Step
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Execution_Status_Step.
func (in *Execution_Status_Step) DeepCopy() *Execution_Status_Step {
	if in == nil {
		return nil
	}
	out := new(Execution_Status_Step)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkflowExecutionParent) DeepCopyInto(out *WorkflowExecutionParent) {
	*out = *in
	if in.ProjectRef != nil {
		in, out := &in.ProjectRef, &out.ProjectRef
		*out = new(v1beta1.ProjectRef)
		**out = **in
	}
	if in.WorkflowRef != nil {
		in, out := &in.WorkflowRef, &out.WorkflowRef
		*out = new(workflowsv1alpha1.WorkflowsWorkflowRef)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkflowExecutionParent.
func (in *WorkflowExecutionParent) DeepCopy() *WorkflowExecutionParent {
	if in == nil {
		return nil
	}
	out := new(WorkflowExecutionParent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkflowsExecution) DeepCopyInto(out *WorkflowsExecution) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkflowsExecution.
func (in *WorkflowsExecution) DeepCopy() *WorkflowsExecution {
	if in == nil {
		return nil
	}
	out := new(WorkflowsExecution)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WorkflowsExecution) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkflowsExecutionList) DeepCopyInto(out *WorkflowsExecutionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]WorkflowsExecution, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkflowsExecutionList.
func (in *WorkflowsExecutionList) DeepCopy() *WorkflowsExecutionList {
	if in == nil {
		return nil
	}
	out := new(WorkflowsExecutionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WorkflowsExecutionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkflowsExecutionObservedState) DeepCopyInto(out *WorkflowsExecutionObservedState) {
	*out = *in
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(string)
		**out = **in
	}
	if in.EndTime != nil {
		in, out := &in.EndTime, &out.EndTime
		*out = new(string)
		**out = **in
	}
	if in.Duration != nil {
		in, out := &in.Duration, &out.Duration
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.Result != nil {
		in, out := &in.Result, &out.Result
		*out = new(string)
		**out = **in
	}
	if in.Error != nil {
		in, out := &in.Error, &out.Error
		*out = new(Execution_Error)
		(*in).DeepCopyInto(*out)
	}
	if in.WorkflowRevisionID != nil {
		in, out := &in.WorkflowRevisionID, &out.WorkflowRevisionID
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(Execution_Status)
		(*in).DeepCopyInto(*out)
	}
	if in.StateError != nil {
		in, out := &in.StateError, &out.StateError
		*out = new(Execution_StateError)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkflowsExecutionObservedState.
func (in *WorkflowsExecutionObservedState) DeepCopy() *WorkflowsExecutionObservedState {
	if in == nil {
		return nil
	}
	out := new(WorkflowsExecutionObservedState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkflowsExecutionSpec) DeepCopyInto(out *WorkflowsExecutionSpec) {
	*out = *in
	if in.Argument != nil {
		in, out := &in.Argument, &out.Argument
		*out = new(string)
		**out = **in
	}
	if in.CallLogLevel != nil {
		in, out := &in.CallLogLevel, &out.CallLogLevel
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.WorkflowExecutionParent != nil {
		in, out := &in.WorkflowExecutionParent, &out.WorkflowExecutionParent
		*out = new(WorkflowExecutionParent)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkflowsExecutionSpec.
func (in *WorkflowsExecutionSpec) DeepCopy() *WorkflowsExecutionSpec {
	if in == nil {
		return nil
	}
	out := new(WorkflowsExecutionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkflowsExecutionStatus) DeepCopyInto(out *WorkflowsExecutionStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]k8sv1alpha1.Condition, len(*in))
		copy(*out, *in)
	}
	if in.ObservedGeneration != nil {
		in, out := &in.ObservedGeneration, &out.ObservedGeneration
		*out = new(int64)
		**out = **in
	}
	if in.ExternalRef != nil {
		in, out := &in.ExternalRef, &out.ExternalRef
		*out = new(string)
		**out = **in
	}
	if in.ObservedState != nil {
		in, out := &in.ObservedState, &out.ObservedState
		*out = new(WorkflowsExecutionObservedState)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkflowsExecutionStatus.
func (in *WorkflowsExecutionStatus) DeepCopy() *WorkflowsExecutionStatus {
	if in == nil {
		return nil
	}
	out := new(WorkflowsExecutionStatus)
	in.DeepCopyInto(out)
	return out
}
