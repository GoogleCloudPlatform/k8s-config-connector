//go:build !ignore_autogenerated

// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by controller-gen. DO NOT EDIT.

package v1beta1

import (
	refsv1beta1 "github.com/GoogleCloudPlatform/k8s-config-connector/apis/refs/v1beta1"
	"github.com/GoogleCloudPlatform/k8s-config-connector/pkg/apis/k8s/v1alpha1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Access) DeepCopyInto(out *Access) {
	*out = *in
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.UserByEmail != nil {
		in, out := &in.UserByEmail, &out.UserByEmail
		*out = new(string)
		**out = **in
	}
	if in.GroupByEmail != nil {
		in, out := &in.GroupByEmail, &out.GroupByEmail
		*out = new(string)
		**out = **in
	}
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
	if in.SpecialGroup != nil {
		in, out := &in.SpecialGroup, &out.SpecialGroup
		*out = new(string)
		**out = **in
	}
	if in.IamMember != nil {
		in, out := &in.IamMember, &out.IamMember
		*out = new(string)
		**out = **in
	}
	if in.View != nil {
		in, out := &in.View, &out.View
		*out = new(TableReference)
		(*in).DeepCopyInto(*out)
	}
	if in.Routine != nil {
		in, out := &in.Routine, &out.Routine
		*out = new(RoutineReference)
		(*in).DeepCopyInto(*out)
	}
	if in.Dataset != nil {
		in, out := &in.Dataset, &out.Dataset
		*out = new(DatasetAccessEntry)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Access.
func (in *Access) DeepCopy() *Access {
	if in == nil {
		return nil
	}
	out := new(Access)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AvroOptions) DeepCopyInto(out *AvroOptions) {
	*out = *in
	if in.UseAvroLogicalTypes != nil {
		in, out := &in.UseAvroLogicalTypes, &out.UseAvroLogicalTypes
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AvroOptions.
func (in *AvroOptions) DeepCopy() *AvroOptions {
	if in == nil {
		return nil
	}
	out := new(AvroOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BigQueryDataset) DeepCopyInto(out *BigQueryDataset) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BigQueryDataset.
func (in *BigQueryDataset) DeepCopy() *BigQueryDataset {
	if in == nil {
		return nil
	}
	out := new(BigQueryDataset)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BigQueryDataset) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BigQueryDatasetList) DeepCopyInto(out *BigQueryDatasetList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]BigQueryDataset, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BigQueryDatasetList.
func (in *BigQueryDatasetList) DeepCopy() *BigQueryDatasetList {
	if in == nil {
		return nil
	}
	out := new(BigQueryDatasetList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BigQueryDatasetList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BigQueryDatasetObservedState) DeepCopyInto(out *BigQueryDatasetObservedState) {
	*out = *in
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BigQueryDatasetObservedState.
func (in *BigQueryDatasetObservedState) DeepCopy() *BigQueryDatasetObservedState {
	if in == nil {
		return nil
	}
	out := new(BigQueryDatasetObservedState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BigQueryDatasetSpec) DeepCopyInto(out *BigQueryDatasetSpec) {
	*out = *in
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
	if in.Access != nil {
		in, out := &in.Access, &out.Access
		*out = make([]Access, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultCollation != nil {
		in, out := &in.DefaultCollation, &out.DefaultCollation
		*out = new(string)
		**out = **in
	}
	if in.DefaultEncryptionConfiguration != nil {
		in, out := &in.DefaultEncryptionConfiguration, &out.DefaultEncryptionConfiguration
		*out = new(EncryptionConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.DefaultPartitionExpirationMs != nil {
		in, out := &in.DefaultPartitionExpirationMs, &out.DefaultPartitionExpirationMs
		*out = new(int64)
		**out = **in
	}
	if in.DefaultTableExpirationMs != nil {
		in, out := &in.DefaultTableExpirationMs, &out.DefaultTableExpirationMs
		*out = new(int64)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FriendlyName != nil {
		in, out := &in.FriendlyName, &out.FriendlyName
		*out = new(string)
		**out = **in
	}
	if in.IsCaseInsensitive != nil {
		in, out := &in.IsCaseInsensitive, &out.IsCaseInsensitive
		*out = new(bool)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.MaxTimeTravelHours != nil {
		in, out := &in.MaxTimeTravelHours, &out.MaxTimeTravelHours
		*out = new(string)
		**out = **in
	}
	if in.ProjectRef != nil {
		in, out := &in.ProjectRef, &out.ProjectRef
		*out = new(refsv1beta1.ProjectRef)
		**out = **in
	}
	if in.StorageBillingModel != nil {
		in, out := &in.StorageBillingModel, &out.StorageBillingModel
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BigQueryDatasetSpec.
func (in *BigQueryDatasetSpec) DeepCopy() *BigQueryDatasetSpec {
	if in == nil {
		return nil
	}
	out := new(BigQueryDatasetSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BigQueryDatasetStatus) DeepCopyInto(out *BigQueryDatasetStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1alpha1.Condition, len(*in))
		copy(*out, *in)
	}
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = new(int64)
		**out = **in
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.ExternalRef != nil {
		in, out := &in.ExternalRef, &out.ExternalRef
		*out = new(string)
		**out = **in
	}
	if in.LastModifiedTime != nil {
		in, out := &in.LastModifiedTime, &out.LastModifiedTime
		*out = new(int64)
		**out = **in
	}
	if in.ObservedGeneration != nil {
		in, out := &in.ObservedGeneration, &out.ObservedGeneration
		*out = new(int64)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.ObservedState != nil {
		in, out := &in.ObservedState, &out.ObservedState
		*out = new(BigQueryDatasetObservedState)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BigQueryDatasetStatus.
func (in *BigQueryDatasetStatus) DeepCopy() *BigQueryDatasetStatus {
	if in == nil {
		return nil
	}
	out := new(BigQueryDatasetStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BigQueryTable) DeepCopyInto(out *BigQueryTable) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BigQueryTable.
func (in *BigQueryTable) DeepCopy() *BigQueryTable {
	if in == nil {
		return nil
	}
	out := new(BigQueryTable)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BigQueryTable) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BigQueryTableList) DeepCopyInto(out *BigQueryTableList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]BigQueryTable, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BigQueryTableList.
func (in *BigQueryTableList) DeepCopy() *BigQueryTableList {
	if in == nil {
		return nil
	}
	out := new(BigQueryTableList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BigQueryTableList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BigQueryTableObservedState) DeepCopyInto(out *BigQueryTableObservedState) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BigQueryTableObservedState.
func (in *BigQueryTableObservedState) DeepCopy() *BigQueryTableObservedState {
	if in == nil {
		return nil
	}
	out := new(BigQueryTableObservedState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BigQueryTableSpec) DeepCopyInto(out *BigQueryTableSpec) {
	*out = *in
	if in.Clustering != nil {
		in, out := &in.Clustering, &out.Clustering
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
	if in.DatasetRef != nil {
		in, out := &in.DatasetRef, &out.DatasetRef
		*out = new(DatasetRef)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EncryptionConfiguration != nil {
		in, out := &in.EncryptionConfiguration, &out.EncryptionConfiguration
		*out = new(TableEncryptionConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.ExpirationTime != nil {
		in, out := &in.ExpirationTime, &out.ExpirationTime
		*out = new(int64)
		**out = **in
	}
	if in.ExternalDataConfiguration != nil {
		in, out := &in.ExternalDataConfiguration, &out.ExternalDataConfiguration
		*out = new(ExternalDataConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.FriendlyName != nil {
		in, out := &in.FriendlyName, &out.FriendlyName
		*out = new(string)
		**out = **in
	}
	if in.MaterializedView != nil {
		in, out := &in.MaterializedView, &out.MaterializedView
		*out = new(MaterializedViewDefinition)
		(*in).DeepCopyInto(*out)
	}
	if in.MaxStaleness != nil {
		in, out := &in.MaxStaleness, &out.MaxStaleness
		*out = new(string)
		**out = **in
	}
	if in.RangePartitioning != nil {
		in, out := &in.RangePartitioning, &out.RangePartitioning
		*out = new(RangePartitioning)
		(*in).DeepCopyInto(*out)
	}
	if in.RequirePartitionFilter != nil {
		in, out := &in.RequirePartitionFilter, &out.RequirePartitionFilter
		*out = new(bool)
		**out = **in
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.TableConstraints != nil {
		in, out := &in.TableConstraints, &out.TableConstraints
		*out = new(TableConstraints)
		(*in).DeepCopyInto(*out)
	}
	if in.TimePartitioning != nil {
		in, out := &in.TimePartitioning, &out.TimePartitioning
		*out = new(TimePartitioning)
		(*in).DeepCopyInto(*out)
	}
	if in.View != nil {
		in, out := &in.View, &out.View
		*out = new(ViewDefinition)
		(*in).DeepCopyInto(*out)
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BigQueryTableSpec.
func (in *BigQueryTableSpec) DeepCopy() *BigQueryTableSpec {
	if in == nil {
		return nil
	}
	out := new(BigQueryTableSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BigQueryTableStatus) DeepCopyInto(out *BigQueryTableStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1alpha1.Condition, len(*in))
		copy(*out, *in)
	}
	if in.ObservedGeneration != nil {
		in, out := &in.ObservedGeneration, &out.ObservedGeneration
		*out = new(int64)
		**out = **in
	}
	if in.ExternalRef != nil {
		in, out := &in.ExternalRef, &out.ExternalRef
		*out = new(string)
		**out = **in
	}
	if in.ObservedState != nil {
		in, out := &in.ObservedState, &out.ObservedState
		*out = new(BigQueryTableObservedState)
		**out = **in
	}
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = new(int64)
		**out = **in
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.LastModifiedTime != nil {
		in, out := &in.LastModifiedTime, &out.LastModifiedTime
		*out = new(int64)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.NumBytes != nil {
		in, out := &in.NumBytes, &out.NumBytes
		*out = new(int64)
		**out = **in
	}
	if in.NumLongTermBytes != nil {
		in, out := &in.NumLongTermBytes, &out.NumLongTermBytes
		*out = new(int64)
		**out = **in
	}
	if in.NumRows != nil {
		in, out := &in.NumRows, &out.NumRows
		*out = new(int64)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BigQueryTableStatus.
func (in *BigQueryTableStatus) DeepCopy() *BigQueryTableStatus {
	if in == nil {
		return nil
	}
	out := new(BigQueryTableStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BoolValue) DeepCopyInto(out *BoolValue) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BoolValue.
func (in *BoolValue) DeepCopy() *BoolValue {
	if in == nil {
		return nil
	}
	out := new(BoolValue)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ColumnReference) DeepCopyInto(out *ColumnReference) {
	*out = *in
	if in.ReferencingColumn != nil {
		in, out := &in.ReferencingColumn, &out.ReferencingColumn
		*out = new(string)
		**out = **in
	}
	if in.ReferencedColumn != nil {
		in, out := &in.ReferencedColumn, &out.ReferencedColumn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ColumnReference.
func (in *ColumnReference) DeepCopy() *ColumnReference {
	if in == nil {
		return nil
	}
	out := new(ColumnReference)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CsvOptions) DeepCopyInto(out *CsvOptions) {
	*out = *in
	if in.FieldDelimiter != nil {
		in, out := &in.FieldDelimiter, &out.FieldDelimiter
		*out = new(string)
		**out = **in
	}
	if in.SkipLeadingRows != nil {
		in, out := &in.SkipLeadingRows, &out.SkipLeadingRows
		*out = new(int64)
		**out = **in
	}
	if in.Quote != nil {
		in, out := &in.Quote, &out.Quote
		*out = new(string)
		**out = **in
	}
	if in.AllowQuotedNewlines != nil {
		in, out := &in.AllowQuotedNewlines, &out.AllowQuotedNewlines
		*out = new(bool)
		**out = **in
	}
	if in.AllowJaggedRows != nil {
		in, out := &in.AllowJaggedRows, &out.AllowJaggedRows
		*out = new(bool)
		**out = **in
	}
	if in.Encoding != nil {
		in, out := &in.Encoding, &out.Encoding
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CsvOptions.
func (in *CsvOptions) DeepCopy() *CsvOptions {
	if in == nil {
		return nil
	}
	out := new(CsvOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasetAccessEntry) DeepCopyInto(out *DatasetAccessEntry) {
	*out = *in
	if in.Dataset != nil {
		in, out := &in.Dataset, &out.Dataset
		*out = new(DatasetReference)
		(*in).DeepCopyInto(*out)
	}
	if in.TargetTypes != nil {
		in, out := &in.TargetTypes, &out.TargetTypes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasetAccessEntry.
func (in *DatasetAccessEntry) DeepCopy() *DatasetAccessEntry {
	if in == nil {
		return nil
	}
	out := new(DatasetAccessEntry)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasetIdentity) DeepCopyInto(out *DatasetIdentity) {
	*out = *in
	if in.parent != nil {
		in, out := &in.parent, &out.parent
		*out = new(DatasetParent)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasetIdentity.
func (in *DatasetIdentity) DeepCopy() *DatasetIdentity {
	if in == nil {
		return nil
	}
	out := new(DatasetIdentity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasetParent) DeepCopyInto(out *DatasetParent) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasetParent.
func (in *DatasetParent) DeepCopy() *DatasetParent {
	if in == nil {
		return nil
	}
	out := new(DatasetParent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasetRef) DeepCopyInto(out *DatasetRef) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasetRef.
func (in *DatasetRef) DeepCopy() *DatasetRef {
	if in == nil {
		return nil
	}
	out := new(DatasetRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasetReference) DeepCopyInto(out *DatasetReference) {
	*out = *in
	if in.DatasetId != nil {
		in, out := &in.DatasetId, &out.DatasetId
		*out = new(string)
		**out = **in
	}
	if in.ProjectId != nil {
		in, out := &in.ProjectId, &out.ProjectId
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasetReference.
func (in *DatasetReference) DeepCopy() *DatasetReference {
	if in == nil {
		return nil
	}
	out := new(DatasetReference)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EncryptionConfiguration) DeepCopyInto(out *EncryptionConfiguration) {
	*out = *in
	if in.KmsKeyRef != nil {
		in, out := &in.KmsKeyRef, &out.KmsKeyRef
		*out = new(refsv1beta1.KMSCryptoKeyRef)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EncryptionConfiguration.
func (in *EncryptionConfiguration) DeepCopy() *EncryptionConfiguration {
	if in == nil {
		return nil
	}
	out := new(EncryptionConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalCatalogDatasetOptions) DeepCopyInto(out *ExternalCatalogDatasetOptions) {
	*out = *in
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.DefaultStorageLocationUri != nil {
		in, out := &in.DefaultStorageLocationUri, &out.DefaultStorageLocationUri
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalCatalogDatasetOptions.
func (in *ExternalCatalogDatasetOptions) DeepCopy() *ExternalCatalogDatasetOptions {
	if in == nil {
		return nil
	}
	out := new(ExternalCatalogDatasetOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalDataConfiguration) DeepCopyInto(out *ExternalDataConfiguration) {
	*out = *in
	if in.Autodetect != nil {
		in, out := &in.Autodetect, &out.Autodetect
		*out = new(bool)
		**out = **in
	}
	if in.AvroOptions != nil {
		in, out := &in.AvroOptions, &out.AvroOptions
		*out = new(AvroOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.Compression != nil {
		in, out := &in.Compression, &out.Compression
		*out = new(string)
		**out = **in
	}
	if in.ConnectionId != nil {
		in, out := &in.ConnectionId, &out.ConnectionId
		*out = new(string)
		**out = **in
	}
	if in.CsvOptions != nil {
		in, out := &in.CsvOptions, &out.CsvOptions
		*out = new(CsvOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.FileSetSpecType != nil {
		in, out := &in.FileSetSpecType, &out.FileSetSpecType
		*out = new(string)
		**out = **in
	}
	if in.GoogleSheetsOptions != nil {
		in, out := &in.GoogleSheetsOptions, &out.GoogleSheetsOptions
		*out = new(GoogleSheetsOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.HivePartitioningOptions != nil {
		in, out := &in.HivePartitioningOptions, &out.HivePartitioningOptions
		*out = new(HivePartitioningOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.IgnoreUnknownValues != nil {
		in, out := &in.IgnoreUnknownValues, &out.IgnoreUnknownValues
		*out = new(bool)
		**out = **in
	}
	if in.JsonOptions != nil {
		in, out := &in.JsonOptions, &out.JsonOptions
		*out = new(JsonOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.MaxBadRecords != nil {
		in, out := &in.MaxBadRecords, &out.MaxBadRecords
		*out = new(int64)
		**out = **in
	}
	if in.MetadataCacheMode != nil {
		in, out := &in.MetadataCacheMode, &out.MetadataCacheMode
		*out = new(string)
		**out = **in
	}
	if in.ObjectMetadata != nil {
		in, out := &in.ObjectMetadata, &out.ObjectMetadata
		*out = new(string)
		**out = **in
	}
	if in.ParquetOptions != nil {
		in, out := &in.ParquetOptions, &out.ParquetOptions
		*out = new(ParquetOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.ReferenceFileSchemaUri != nil {
		in, out := &in.ReferenceFileSchemaUri, &out.ReferenceFileSchemaUri
		*out = new(string)
		**out = **in
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.SourceFormat != nil {
		in, out := &in.SourceFormat, &out.SourceFormat
		*out = new(string)
		**out = **in
	}
	if in.SourceUris != nil {
		in, out := &in.SourceUris, &out.SourceUris
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalDataConfiguration.
func (in *ExternalDataConfiguration) DeepCopy() *ExternalDataConfiguration {
	if in == nil {
		return nil
	}
	out := new(ExternalDataConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalDatasetReference) DeepCopyInto(out *ExternalDatasetReference) {
	*out = *in
	if in.ExternalSource != nil {
		in, out := &in.ExternalSource, &out.ExternalSource
		*out = new(string)
		**out = **in
	}
	if in.Connection != nil {
		in, out := &in.Connection, &out.Connection
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalDatasetReference.
func (in *ExternalDatasetReference) DeepCopy() *ExternalDatasetReference {
	if in == nil {
		return nil
	}
	out := new(ExternalDatasetReference)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForeignKey) DeepCopyInto(out *ForeignKey) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	in.ReferencedTable.DeepCopyInto(&out.ReferencedTable)
	in.ColumnReferences.DeepCopyInto(&out.ColumnReferences)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForeignKey.
func (in *ForeignKey) DeepCopy() *ForeignKey {
	if in == nil {
		return nil
	}
	out := new(ForeignKey)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GcpTag) DeepCopyInto(out *GcpTag) {
	*out = *in
	if in.TagKey != nil {
		in, out := &in.TagKey, &out.TagKey
		*out = new(string)
		**out = **in
	}
	if in.TagValue != nil {
		in, out := &in.TagValue, &out.TagValue
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GcpTag.
func (in *GcpTag) DeepCopy() *GcpTag {
	if in == nil {
		return nil
	}
	out := new(GcpTag)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GoogleSheetsOptions) DeepCopyInto(out *GoogleSheetsOptions) {
	*out = *in
	if in.SkipLeadingRows != nil {
		in, out := &in.SkipLeadingRows, &out.SkipLeadingRows
		*out = new(int64)
		**out = **in
	}
	if in.Range != nil {
		in, out := &in.Range, &out.Range
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GoogleSheetsOptions.
func (in *GoogleSheetsOptions) DeepCopy() *GoogleSheetsOptions {
	if in == nil {
		return nil
	}
	out := new(GoogleSheetsOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HivePartitioningOptions) DeepCopyInto(out *HivePartitioningOptions) {
	*out = *in
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.SourceUriPrefix != nil {
		in, out := &in.SourceUriPrefix, &out.SourceUriPrefix
		*out = new(string)
		**out = **in
	}
	if in.RequirePartitionFilter != nil {
		in, out := &in.RequirePartitionFilter, &out.RequirePartitionFilter
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HivePartitioningOptions.
func (in *HivePartitioningOptions) DeepCopy() *HivePartitioningOptions {
	if in == nil {
		return nil
	}
	out := new(HivePartitioningOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JsonOptions) DeepCopyInto(out *JsonOptions) {
	*out = *in
	if in.Encoding != nil {
		in, out := &in.Encoding, &out.Encoding
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JsonOptions.
func (in *JsonOptions) DeepCopy() *JsonOptions {
	if in == nil {
		return nil
	}
	out := new(JsonOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinkedDatasetMetadata) DeepCopyInto(out *LinkedDatasetMetadata) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinkedDatasetMetadata.
func (in *LinkedDatasetMetadata) DeepCopy() *LinkedDatasetMetadata {
	if in == nil {
		return nil
	}
	out := new(LinkedDatasetMetadata)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinkedDatasetSource) DeepCopyInto(out *LinkedDatasetSource) {
	*out = *in
	if in.SourceDataset != nil {
		in, out := &in.SourceDataset, &out.SourceDataset
		*out = new(DatasetReference)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinkedDatasetSource.
func (in *LinkedDatasetSource) DeepCopy() *LinkedDatasetSource {
	if in == nil {
		return nil
	}
	out := new(LinkedDatasetSource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaterializedViewDefinition) DeepCopyInto(out *MaterializedViewDefinition) {
	*out = *in
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
	if in.EnableRefresh != nil {
		in, out := &in.EnableRefresh, &out.EnableRefresh
		*out = new(bool)
		**out = **in
	}
	if in.RefreshIntervalMs != nil {
		in, out := &in.RefreshIntervalMs, &out.RefreshIntervalMs
		*out = new(int64)
		**out = **in
	}
	if in.AllowNonIncrementalDefinition != nil {
		in, out := &in.AllowNonIncrementalDefinition, &out.AllowNonIncrementalDefinition
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaterializedViewDefinition.
func (in *MaterializedViewDefinition) DeepCopy() *MaterializedViewDefinition {
	if in == nil {
		return nil
	}
	out := new(MaterializedViewDefinition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParquetOptions) DeepCopyInto(out *ParquetOptions) {
	*out = *in
	if in.EnumAsString != nil {
		in, out := &in.EnumAsString, &out.EnumAsString
		*out = new(bool)
		**out = **in
	}
	if in.EnableListInference != nil {
		in, out := &in.EnableListInference, &out.EnableListInference
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParquetOptions.
func (in *ParquetOptions) DeepCopy() *ParquetOptions {
	if in == nil {
		return nil
	}
	out := new(ParquetOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrimaryKey) DeepCopyInto(out *PrimaryKey) {
	*out = *in
	if in.Columns != nil {
		in, out := &in.Columns, &out.Columns
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrimaryKey.
func (in *PrimaryKey) DeepCopy() *PrimaryKey {
	if in == nil {
		return nil
	}
	out := new(PrimaryKey)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RangePartitioning) DeepCopyInto(out *RangePartitioning) {
	*out = *in
	if in.Field != nil {
		in, out := &in.Field, &out.Field
		*out = new(string)
		**out = **in
	}
	in.Range.DeepCopyInto(&out.Range)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RangePartitioning.
func (in *RangePartitioning) DeepCopy() *RangePartitioning {
	if in == nil {
		return nil
	}
	out := new(RangePartitioning)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RangePartitioning_Range) DeepCopyInto(out *RangePartitioning_Range) {
	*out = *in
	if in.Start != nil {
		in, out := &in.Start, &out.Start
		*out = new(int64)
		**out = **in
	}
	if in.End != nil {
		in, out := &in.End, &out.End
		*out = new(int64)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RangePartitioning_Range.
func (in *RangePartitioning_Range) DeepCopy() *RangePartitioning_Range {
	if in == nil {
		return nil
	}
	out := new(RangePartitioning_Range)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RestrictionConfig) DeepCopyInto(out *RestrictionConfig) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RestrictionConfig.
func (in *RestrictionConfig) DeepCopy() *RestrictionConfig {
	if in == nil {
		return nil
	}
	out := new(RestrictionConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoutineReference) DeepCopyInto(out *RoutineReference) {
	*out = *in
	if in.ProjectId != nil {
		in, out := &in.ProjectId, &out.ProjectId
		*out = new(string)
		**out = **in
	}
	if in.DatasetId != nil {
		in, out := &in.DatasetId, &out.DatasetId
		*out = new(string)
		**out = **in
	}
	if in.RoutineId != nil {
		in, out := &in.RoutineId, &out.RoutineId
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoutineReference.
func (in *RoutineReference) DeepCopy() *RoutineReference {
	if in == nil {
		return nil
	}
	out := new(RoutineReference)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableConstraints) DeepCopyInto(out *TableConstraints) {
	*out = *in
	if in.PrimaryKey != nil {
		in, out := &in.PrimaryKey, &out.PrimaryKey
		*out = new(PrimaryKey)
		(*in).DeepCopyInto(*out)
	}
	if in.ForeignKeys != nil {
		in, out := &in.ForeignKeys, &out.ForeignKeys
		*out = make([]ForeignKey, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableConstraints.
func (in *TableConstraints) DeepCopy() *TableConstraints {
	if in == nil {
		return nil
	}
	out := new(TableConstraints)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableEncryptionConfiguration) DeepCopyInto(out *TableEncryptionConfiguration) {
	*out = *in
	if in.KmsKeyRef != nil {
		in, out := &in.KmsKeyRef, &out.KmsKeyRef
		*out = new(refsv1beta1.KMSCryptoKeyRef)
		**out = **in
	}
	if in.KmsKeyVersion != nil {
		in, out := &in.KmsKeyVersion, &out.KmsKeyVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableEncryptionConfiguration.
func (in *TableEncryptionConfiguration) DeepCopy() *TableEncryptionConfiguration {
	if in == nil {
		return nil
	}
	out := new(TableEncryptionConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableIdentity) DeepCopyInto(out *TableIdentity) {
	*out = *in
	if in.parent != nil {
		in, out := &in.parent, &out.parent
		*out = new(TableParent)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableIdentity.
func (in *TableIdentity) DeepCopy() *TableIdentity {
	if in == nil {
		return nil
	}
	out := new(TableIdentity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableParent) DeepCopyInto(out *TableParent) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableParent.
func (in *TableParent) DeepCopy() *TableParent {
	if in == nil {
		return nil
	}
	out := new(TableParent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableRef) DeepCopyInto(out *TableRef) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableRef.
func (in *TableRef) DeepCopy() *TableRef {
	if in == nil {
		return nil
	}
	out := new(TableRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableReference) DeepCopyInto(out *TableReference) {
	*out = *in
	if in.ProjectId != nil {
		in, out := &in.ProjectId, &out.ProjectId
		*out = new(string)
		**out = **in
	}
	if in.DatasetId != nil {
		in, out := &in.DatasetId, &out.DatasetId
		*out = new(string)
		**out = **in
	}
	if in.TableId != nil {
		in, out := &in.TableId, &out.TableId
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableReference.
func (in *TableReference) DeepCopy() *TableReference {
	if in == nil {
		return nil
	}
	out := new(TableReference)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TimePartitioning) DeepCopyInto(out *TimePartitioning) {
	*out = *in
	if in.ExpirationMs != nil {
		in, out := &in.ExpirationMs, &out.ExpirationMs
		*out = new(int64)
		**out = **in
	}
	if in.RequirePartitionFilter != nil {
		in, out := &in.RequirePartitionFilter, &out.RequirePartitionFilter
		*out = new(bool)
		**out = **in
	}
	if in.Field != nil {
		in, out := &in.Field, &out.Field
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TimePartitioning.
func (in *TimePartitioning) DeepCopy() *TimePartitioning {
	if in == nil {
		return nil
	}
	out := new(TimePartitioning)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ViewDefinition) DeepCopyInto(out *ViewDefinition) {
	*out = *in
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
	if in.UseLegacySql != nil {
		in, out := &in.UseLegacySql, &out.UseLegacySql
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ViewDefinition.
func (in *ViewDefinition) DeepCopy() *ViewDefinition {
	if in == nil {
		return nil
	}
	out := new(ViewDefinition)
	in.DeepCopyInto(out)
	return out
}
