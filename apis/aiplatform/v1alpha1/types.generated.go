// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package v1alpha1


// +kcc:proto=google.cloud.aiplatform.v1.ActiveLearningConfig
type ActiveLearningConfig struct {
	// Max number of human labeled DataItems.
	// +kcc:proto:field=google.cloud.aiplatform.v1.ActiveLearningConfig.max_data_item_count
	MaxDataItemCount *int64 `json:"maxDataItemCount,omitempty"`

	// Max percent of total DataItems for human labeling.
	// +kcc:proto:field=google.cloud.aiplatform.v1.ActiveLearningConfig.max_data_item_percentage
	MaxDataItemPercentage *int32 `json:"maxDataItemPercentage,omitempty"`

	// Active learning data sampling config. For every active learning labeling
	//  iteration, it will select a batch of data based on the sampling strategy.
	// +kcc:proto:field=google.cloud.aiplatform.v1.ActiveLearningConfig.sample_config
	SampleConfig *SampleConfig `json:"sampleConfig,omitempty"`

	// CMLE training config. For every active learning labeling iteration, system
	//  will train a machine learning model on CMLE. The trained model will be used
	//  by data sampling algorithm to select DataItems.
	// +kcc:proto:field=google.cloud.aiplatform.v1.ActiveLearningConfig.training_config
	TrainingConfig *TrainingConfig `json:"trainingConfig,omitempty"`
}

// +kcc:proto=google.cloud.aiplatform.v1.DataLabelingJob
type DataLabelingJob struct {

	// Required. The user-defined name of the DataLabelingJob.
	//  The name can be up to 128 characters long and can consist of any UTF-8
	//  characters.
	//  Display name of a DataLabelingJob.
	// +kcc:proto:field=google.cloud.aiplatform.v1.DataLabelingJob.display_name
	DisplayName *string `json:"displayName,omitempty"`

	// Required. Dataset resource names. Right now we only support labeling from a
	//  single Dataset. Format:
	//  `projects/{project}/locations/{location}/datasets/{dataset}`
	// +kcc:proto:field=google.cloud.aiplatform.v1.DataLabelingJob.datasets
	Datasets []string `json:"datasets,omitempty"`

	// Labels to assign to annotations generated by this DataLabelingJob.
	//
	//  Label keys and values can be no longer than 64 characters
	//  (Unicode codepoints), can only contain lowercase letters, numeric
	//  characters, underscores and dashes. International characters are allowed.
	//  See https://goo.gl/xmQnxf for more information and examples of labels.
	//  System reserved label keys are prefixed with "aiplatform.googleapis.com/"
	//  and are immutable.
	// +kcc:proto:field=google.cloud.aiplatform.v1.DataLabelingJob.annotation_labels
	AnnotationLabels map[string]string `json:"annotationLabels,omitempty"`

	// Required. Number of labelers to work on each DataItem.
	// +kcc:proto:field=google.cloud.aiplatform.v1.DataLabelingJob.labeler_count
	LabelerCount *int32 `json:"labelerCount,omitempty"`

	// Required. The Google Cloud Storage location of the instruction pdf. This
	//  pdf is shared with labelers, and provides detailed description on how to
	//  label DataItems in Datasets.
	// +kcc:proto:field=google.cloud.aiplatform.v1.DataLabelingJob.instruction_uri
	InstructionURI *string `json:"instructionURI,omitempty"`

	// Required. Points to a YAML file stored on Google Cloud Storage describing
	//  the config for a specific type of DataLabelingJob. The schema files that
	//  can be used here are found in the
	//  https://storage.googleapis.com/google-cloud-aiplatform bucket in the
	//  /schema/datalabelingjob/inputs/ folder.
	// +kcc:proto:field=google.cloud.aiplatform.v1.DataLabelingJob.inputs_schema_uri
	InputsSchemaURI *string `json:"inputsSchemaURI,omitempty"`

	// Required. Input config parameters for the DataLabelingJob.
	// +kcc:proto:field=google.cloud.aiplatform.v1.DataLabelingJob.inputs
	Inputs *Value `json:"inputs,omitempty"`

	// The labels with user-defined metadata to organize your DataLabelingJobs.
	//
	//  Label keys and values can be no longer than 64 characters
	//  (Unicode codepoints), can only contain lowercase letters, numeric
	//  characters, underscores and dashes. International characters are allowed.
	//
	//  See https://goo.gl/xmQnxf for more information and examples of labels.
	//  System reserved label keys are prefixed with "aiplatform.googleapis.com/"
	//  and are immutable. Following system labels exist for each DataLabelingJob:
	//
	//  * "aiplatform.googleapis.com/schema": output only, its value is the
	//    [inputs_schema][google.cloud.aiplatform.v1.DataLabelingJob.inputs_schema_uri]'s
	//    title.
	// +kcc:proto:field=google.cloud.aiplatform.v1.DataLabelingJob.labels
	Labels map[string]string `json:"labels,omitempty"`

	// The SpecialistPools' resource names associated with this job.
	// +kcc:proto:field=google.cloud.aiplatform.v1.DataLabelingJob.specialist_pools
	SpecialistPools []string `json:"specialistPools,omitempty"`

	// Customer-managed encryption key spec for a DataLabelingJob. If set, this
	//  DataLabelingJob will be secured by this key.
	//
	//  Note: Annotations created in the DataLabelingJob are associated with
	//  the EncryptionSpec of the Dataset they are exported to.
	// +kcc:proto:field=google.cloud.aiplatform.v1.DataLabelingJob.encryption_spec
	EncryptionSpec *EncryptionSpec `json:"encryptionSpec,omitempty"`

	// Parameters that configure the active learning pipeline. Active learning
	//  will label the data incrementally via several iterations. For every
	//  iteration, it will select a batch of data based on the sampling strategy.
	// +kcc:proto:field=google.cloud.aiplatform.v1.DataLabelingJob.active_learning_config
	ActiveLearningConfig *ActiveLearningConfig `json:"activeLearningConfig,omitempty"`
}

// +kcc:proto=google.cloud.aiplatform.v1.EncryptionSpec
type EncryptionSpec struct {
	// Required. The Cloud KMS resource identifier of the customer managed
	//  encryption key used to protect a resource. Has the form:
	//  `projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key`.
	//  The key needs to be in the same region as where the compute resource is
	//  created.
	// +kcc:proto:field=google.cloud.aiplatform.v1.EncryptionSpec.kms_key_name
	KMSKeyName *string `json:"kmsKeyName,omitempty"`
}

// +kcc:proto=google.cloud.aiplatform.v1.SampleConfig
type SampleConfig struct {
	// The percentage of data needed to be labeled in the first batch.
	// +kcc:proto:field=google.cloud.aiplatform.v1.SampleConfig.initial_batch_sample_percentage
	InitialBatchSamplePercentage *int32 `json:"initialBatchSamplePercentage,omitempty"`

	// The percentage of data needed to be labeled in each following batch
	//  (except the first batch).
	// +kcc:proto:field=google.cloud.aiplatform.v1.SampleConfig.following_batch_sample_percentage
	FollowingBatchSamplePercentage *int32 `json:"followingBatchSamplePercentage,omitempty"`

	// Field to choose sampling strategy. Sampling strategy will decide which data
	//  should be selected for human labeling in every batch.
	// +kcc:proto:field=google.cloud.aiplatform.v1.SampleConfig.sample_strategy
	SampleStrategy *string `json:"sampleStrategy,omitempty"`
}

// +kcc:proto=google.cloud.aiplatform.v1.TrainingConfig
type TrainingConfig struct {
	// The timeout hours for the CMLE training job, expressed in milli hours
	//  i.e. 1,000 value in this field means 1 hour.
	// +kcc:proto:field=google.cloud.aiplatform.v1.TrainingConfig.timeout_training_milli_hours
	TimeoutTrainingMilliHours *int64 `json:"timeoutTrainingMilliHours,omitempty"`
}

// +kcc:proto=google.protobuf.Any
type Any struct {
	// A URL/resource name that uniquely identifies the type of the serialized
	//  protocol buffer message. This string must contain at least
	//  one "/" character. The last segment of the URL's path must represent
	//  the fully qualified name of the type (as in
	//  `path/google.protobuf.Duration`). The name should be in a canonical form
	//  (e.g., leading "." is not accepted).
	//
	//  In practice, teams usually precompile into the binary all types that they
	//  expect it to use in the context of Any. However, for URLs which use the
	//  scheme `http`, `https`, or no scheme, one can optionally set up a type
	//  server that maps type URLs to message definitions as follows:
	//
	//  * If no scheme is provided, `https` is assumed.
	//  * An HTTP GET on the URL must yield a [google.protobuf.Type][]
	//    value in binary format, or produce an error.
	//  * Applications are allowed to cache lookup results based on the
	//    URL, or have them precompiled into a binary to avoid any
	//    lookup. Therefore, binary compatibility needs to be preserved
	//    on changes to types. (Use versioned type names to manage
	//    breaking changes.)
	//
	//  Note: this functionality is not currently available in the official
	//  protobuf release, and it is not used for type URLs beginning with
	//  type.googleapis.com.
	//
	//  Schemes other than `http`, `https` (or the empty scheme) might be
	//  used with implementation specific semantics.
	// +kcc:proto:field=google.protobuf.Any.type_url
	TypeURL *string `json:"typeURL,omitempty"`

	// Must be a valid serialized protocol buffer of the above specified type.
	// +kcc:proto:field=google.protobuf.Any.value
	Value []byte `json:"value,omitempty"`
}

// +kcc:proto=google.protobuf.ListValue
type ListValue struct {
	// Repeated field of dynamically typed values.
	// +kcc:proto:field=google.protobuf.ListValue.values
	Values []Value `json:"values,omitempty"`
}

// +kcc:proto=google.protobuf.Value
type Value struct {
	// Represents a null value.
	// +kcc:proto:field=google.protobuf.Value.null_value
	NullValue *string `json:"nullValue,omitempty"`

	// Represents a double value.
	// +kcc:proto:field=google.protobuf.Value.number_value
	NumberValue *float64 `json:"numberValue,omitempty"`

	// Represents a string value.
	// +kcc:proto:field=google.protobuf.Value.string_value
	StringValue *string `json:"stringValue,omitempty"`

	// Represents a boolean value.
	// +kcc:proto:field=google.protobuf.Value.bool_value
	BoolValue *bool `json:"boolValue,omitempty"`

	// Represents a structured value.
	// +kcc:proto:field=google.protobuf.Value.struct_value
	StructValue map[string]string `json:"structValue,omitempty"`

	// Represents a repeated `Value`.
	// +kcc:proto:field=google.protobuf.Value.list_value
	ListValue *ListValue `json:"listValue,omitempty"`
}

// +kcc:proto=google.rpc.Status
type Status struct {
	// The status code, which should be an enum value of
	//  [google.rpc.Code][google.rpc.Code].
	// +kcc:proto:field=google.rpc.Status.code
	Code *int32 `json:"code,omitempty"`

	// A developer-facing error message, which should be in English. Any
	//  user-facing error message should be localized and sent in the
	//  [google.rpc.Status.details][google.rpc.Status.details] field, or localized
	//  by the client.
	// +kcc:proto:field=google.rpc.Status.message
	Message *string `json:"message,omitempty"`

	// A list of messages that carry the error details.  There is a common set of
	//  message types for APIs to use.
	// +kcc:proto:field=google.rpc.Status.details
	Details []Any `json:"details,omitempty"`
}

// +kcc:proto=google.type.Money
type Money struct {
	// The three-letter currency code defined in ISO 4217.
	// +kcc:proto:field=google.type.Money.currency_code
	CurrencyCode *string `json:"currencyCode,omitempty"`

	// The whole units of the amount.
	//  For example if `currencyCode` is `"USD"`, then 1 unit is one US dollar.
	// +kcc:proto:field=google.type.Money.units
	Units *int64 `json:"units,omitempty"`

	// Number of nano (10^-9) units of the amount.
	//  The value must be between -999,999,999 and +999,999,999 inclusive.
	//  If `units` is positive, `nanos` must be positive or zero.
	//  If `units` is zero, `nanos` can be positive, zero, or negative.
	//  If `units` is negative, `nanos` must be negative or zero.
	//  For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.
	// +kcc:proto:field=google.type.Money.nanos
	Nanos *int32 `json:"nanos,omitempty"`
}

// +kcc:proto=google.cloud.aiplatform.v1.DataLabelingJob
type DataLabelingJobObservedState struct {
	// Output only. Resource name of the DataLabelingJob.
	// +kcc:proto:field=google.cloud.aiplatform.v1.DataLabelingJob.name
	Name *string `json:"name,omitempty"`

	// Output only. The detailed state of the job.
	// +kcc:proto:field=google.cloud.aiplatform.v1.DataLabelingJob.state
	State *string `json:"state,omitempty"`

	// Output only. Current labeling job progress percentage scaled in interval
	//  [0, 100], indicating the percentage of DataItems that has been finished.
	// +kcc:proto:field=google.cloud.aiplatform.v1.DataLabelingJob.labeling_progress
	LabelingProgress *int32 `json:"labelingProgress,omitempty"`

	// Output only. Estimated cost(in US dollars) that the DataLabelingJob has
	//  incurred to date.
	// +kcc:proto:field=google.cloud.aiplatform.v1.DataLabelingJob.current_spend
	CurrentSpend *Money `json:"currentSpend,omitempty"`

	// Output only. Timestamp when this DataLabelingJob was created.
	// +kcc:proto:field=google.cloud.aiplatform.v1.DataLabelingJob.create_time
	CreateTime *string `json:"createTime,omitempty"`

	// Output only. Timestamp when this DataLabelingJob was updated most recently.
	// +kcc:proto:field=google.cloud.aiplatform.v1.DataLabelingJob.update_time
	UpdateTime *string `json:"updateTime,omitempty"`

	// Output only. DataLabelingJob errors. It is only populated when job's state
	//  is `JOB_STATE_FAILED` or `JOB_STATE_CANCELLED`.
	// +kcc:proto:field=google.cloud.aiplatform.v1.DataLabelingJob.error
	Error *Status `json:"error,omitempty"`
}
