//go:build !ignore_autogenerated

// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by controller-gen. DO NOT EDIT.

package v1beta1

import (
	refsv1beta1 "github.com/GoogleCloudPlatform/k8s-config-connector/apis/refs/v1beta1"
	"github.com/GoogleCloudPlatform/k8s-config-connector/pkg/clients/generated/apis/k8s/v1alpha1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeaturemembershipBinauthz) DeepCopyInto(out *FeaturemembershipBinauthz) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeaturemembershipBinauthz.
func (in *FeaturemembershipBinauthz) DeepCopy() *FeaturemembershipBinauthz {
	if in == nil {
		return nil
	}
	out := new(FeaturemembershipBinauthz)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeaturemembershipConfigSync) DeepCopyInto(out *FeaturemembershipConfigSync) {
	*out = *in
	if in.Git != nil {
		in, out := &in.Git, &out.Git
		*out = new(FeaturemembershipGit)
		(*in).DeepCopyInto(*out)
	}
	if in.MetricsGcpServiceAccountRef != nil {
		in, out := &in.MetricsGcpServiceAccountRef, &out.MetricsGcpServiceAccountRef
		*out = new(refsv1beta1.MetricsGcpServiceAccountRef)
		**out = **in
	}
	if in.Oci != nil {
		in, out := &in.Oci, &out.Oci
		*out = new(FeaturemembershipOci)
		(*in).DeepCopyInto(*out)
	}
	if in.PreventDrift != nil {
		in, out := &in.PreventDrift, &out.PreventDrift
		*out = new(bool)
		**out = **in
	}
	if in.SourceFormat != nil {
		in, out := &in.SourceFormat, &out.SourceFormat
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeaturemembershipConfigSync.
func (in *FeaturemembershipConfigSync) DeepCopy() *FeaturemembershipConfigSync {
	if in == nil {
		return nil
	}
	out := new(FeaturemembershipConfigSync)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeaturemembershipConfigmanagement) DeepCopyInto(out *FeaturemembershipConfigmanagement) {
	*out = *in
	if in.Binauthz != nil {
		in, out := &in.Binauthz, &out.Binauthz
		*out = new(FeaturemembershipBinauthz)
		(*in).DeepCopyInto(*out)
	}
	if in.ConfigSync != nil {
		in, out := &in.ConfigSync, &out.ConfigSync
		*out = new(FeaturemembershipConfigSync)
		(*in).DeepCopyInto(*out)
	}
	if in.HierarchyController != nil {
		in, out := &in.HierarchyController, &out.HierarchyController
		*out = new(FeaturemembershipHierarchyController)
		(*in).DeepCopyInto(*out)
	}
	if in.PolicyController != nil {
		in, out := &in.PolicyController, &out.PolicyController
		*out = new(FeaturemembershipPolicyController)
		(*in).DeepCopyInto(*out)
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeaturemembershipConfigmanagement.
func (in *FeaturemembershipConfigmanagement) DeepCopy() *FeaturemembershipConfigmanagement {
	if in == nil {
		return nil
	}
	out := new(FeaturemembershipConfigmanagement)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeaturemembershipGit) DeepCopyInto(out *FeaturemembershipGit) {
	*out = *in
	if in.GcpServiceAccountRef != nil {
		in, out := &in.GcpServiceAccountRef, &out.GcpServiceAccountRef
		*out = new(refsv1beta1.IAMServiceAccountRef)
		**out = **in
	}
	if in.HttpsProxy != nil {
		in, out := &in.HttpsProxy, &out.HttpsProxy
		*out = new(string)
		**out = **in
	}
	if in.PolicyDir != nil {
		in, out := &in.PolicyDir, &out.PolicyDir
		*out = new(string)
		**out = **in
	}
	if in.SecretType != nil {
		in, out := &in.SecretType, &out.SecretType
		*out = new(string)
		**out = **in
	}
	if in.SyncBranch != nil {
		in, out := &in.SyncBranch, &out.SyncBranch
		*out = new(string)
		**out = **in
	}
	if in.SyncRepo != nil {
		in, out := &in.SyncRepo, &out.SyncRepo
		*out = new(string)
		**out = **in
	}
	if in.SyncRev != nil {
		in, out := &in.SyncRev, &out.SyncRev
		*out = new(string)
		**out = **in
	}
	if in.SyncWaitSecs != nil {
		in, out := &in.SyncWaitSecs, &out.SyncWaitSecs
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeaturemembershipGit.
func (in *FeaturemembershipGit) DeepCopy() *FeaturemembershipGit {
	if in == nil {
		return nil
	}
	out := new(FeaturemembershipGit)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeaturemembershipHierarchyController) DeepCopyInto(out *FeaturemembershipHierarchyController) {
	*out = *in
	if in.EnableHierarchicalResourceQuota != nil {
		in, out := &in.EnableHierarchicalResourceQuota, &out.EnableHierarchicalResourceQuota
		*out = new(bool)
		**out = **in
	}
	if in.EnablePodTreeLabels != nil {
		in, out := &in.EnablePodTreeLabels, &out.EnablePodTreeLabels
		*out = new(bool)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeaturemembershipHierarchyController.
func (in *FeaturemembershipHierarchyController) DeepCopy() *FeaturemembershipHierarchyController {
	if in == nil {
		return nil
	}
	out := new(FeaturemembershipHierarchyController)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeaturemembershipMesh) DeepCopyInto(out *FeaturemembershipMesh) {
	*out = *in
	if in.ControlPlane != nil {
		in, out := &in.ControlPlane, &out.ControlPlane
		*out = new(string)
		**out = **in
	}
	if in.Management != nil {
		in, out := &in.Management, &out.Management
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeaturemembershipMesh.
func (in *FeaturemembershipMesh) DeepCopy() *FeaturemembershipMesh {
	if in == nil {
		return nil
	}
	out := new(FeaturemembershipMesh)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeaturemembershipMonitoring) DeepCopyInto(out *FeaturemembershipMonitoring) {
	*out = *in
	if in.Backends != nil {
		in, out := &in.Backends, &out.Backends
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeaturemembershipMonitoring.
func (in *FeaturemembershipMonitoring) DeepCopy() *FeaturemembershipMonitoring {
	if in == nil {
		return nil
	}
	out := new(FeaturemembershipMonitoring)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeaturemembershipOci) DeepCopyInto(out *FeaturemembershipOci) {
	*out = *in
	if in.GcpServiceAccountRef != nil {
		in, out := &in.GcpServiceAccountRef, &out.GcpServiceAccountRef
		*out = new(refsv1beta1.IAMServiceAccountRef)
		**out = **in
	}
	if in.PolicyDir != nil {
		in, out := &in.PolicyDir, &out.PolicyDir
		*out = new(string)
		**out = **in
	}
	if in.SecretType != nil {
		in, out := &in.SecretType, &out.SecretType
		*out = new(string)
		**out = **in
	}
	if in.SyncRepo != nil {
		in, out := &in.SyncRepo, &out.SyncRepo
		*out = new(string)
		**out = **in
	}
	if in.SyncWaitSecs != nil {
		in, out := &in.SyncWaitSecs, &out.SyncWaitSecs
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeaturemembershipOci.
func (in *FeaturemembershipOci) DeepCopy() *FeaturemembershipOci {
	if in == nil {
		return nil
	}
	out := new(FeaturemembershipOci)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeaturemembershipPolicyContent) DeepCopyInto(out *FeaturemembershipPolicyContent) {
	*out = *in
	if in.TemplateLibrary != nil {
		in, out := &in.TemplateLibrary, &out.TemplateLibrary
		*out = new(FeaturemembershipTemplateLibrary)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeaturemembershipPolicyContent.
func (in *FeaturemembershipPolicyContent) DeepCopy() *FeaturemembershipPolicyContent {
	if in == nil {
		return nil
	}
	out := new(FeaturemembershipPolicyContent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeaturemembershipPolicyController) DeepCopyInto(out *FeaturemembershipPolicyController) {
	*out = *in
	if in.AuditIntervalSeconds != nil {
		in, out := &in.AuditIntervalSeconds, &out.AuditIntervalSeconds
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ExemptableNamespaces != nil {
		in, out := &in.ExemptableNamespaces, &out.ExemptableNamespaces
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.LogDeniesEnabled != nil {
		in, out := &in.LogDeniesEnabled, &out.LogDeniesEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Monitoring != nil {
		in, out := &in.Monitoring, &out.Monitoring
		*out = new(FeaturemembershipMonitoring)
		(*in).DeepCopyInto(*out)
	}
	if in.MutationEnabled != nil {
		in, out := &in.MutationEnabled, &out.MutationEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ReferentialRulesEnabled != nil {
		in, out := &in.ReferentialRulesEnabled, &out.ReferentialRulesEnabled
		*out = new(bool)
		**out = **in
	}
	if in.TemplateLibraryInstalled != nil {
		in, out := &in.TemplateLibraryInstalled, &out.TemplateLibraryInstalled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeaturemembershipPolicyController.
func (in *FeaturemembershipPolicyController) DeepCopy() *FeaturemembershipPolicyController {
	if in == nil {
		return nil
	}
	out := new(FeaturemembershipPolicyController)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeaturemembershipPolicyControllerHubConfig) DeepCopyInto(out *FeaturemembershipPolicyControllerHubConfig) {
	*out = *in
	if in.AuditIntervalSeconds != nil {
		in, out := &in.AuditIntervalSeconds, &out.AuditIntervalSeconds
		*out = new(int64)
		**out = **in
	}
	if in.ConstraintViolationLimit != nil {
		in, out := &in.ConstraintViolationLimit, &out.ConstraintViolationLimit
		*out = new(int64)
		**out = **in
	}
	if in.ExemptableNamespaces != nil {
		in, out := &in.ExemptableNamespaces, &out.ExemptableNamespaces
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.InstallSpec != nil {
		in, out := &in.InstallSpec, &out.InstallSpec
		*out = new(string)
		**out = **in
	}
	if in.LogDeniesEnabled != nil {
		in, out := &in.LogDeniesEnabled, &out.LogDeniesEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Monitoring != nil {
		in, out := &in.Monitoring, &out.Monitoring
		*out = new(FeaturemembershipMonitoring)
		(*in).DeepCopyInto(*out)
	}
	if in.MutationEnabled != nil {
		in, out := &in.MutationEnabled, &out.MutationEnabled
		*out = new(bool)
		**out = **in
	}
	if in.PolicyContent != nil {
		in, out := &in.PolicyContent, &out.PolicyContent
		*out = new(FeaturemembershipPolicyContent)
		(*in).DeepCopyInto(*out)
	}
	if in.ReferentialRulesEnabled != nil {
		in, out := &in.ReferentialRulesEnabled, &out.ReferentialRulesEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeaturemembershipPolicyControllerHubConfig.
func (in *FeaturemembershipPolicyControllerHubConfig) DeepCopy() *FeaturemembershipPolicyControllerHubConfig {
	if in == nil {
		return nil
	}
	out := new(FeaturemembershipPolicyControllerHubConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeaturemembershipPolicycontroller) DeepCopyInto(out *FeaturemembershipPolicycontroller) {
	*out = *in
	in.PolicyControllerHubConfig.DeepCopyInto(&out.PolicyControllerHubConfig)
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeaturemembershipPolicycontroller.
func (in *FeaturemembershipPolicycontroller) DeepCopy() *FeaturemembershipPolicycontroller {
	if in == nil {
		return nil
	}
	out := new(FeaturemembershipPolicycontroller)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeaturemembershipTemplateLibrary) DeepCopyInto(out *FeaturemembershipTemplateLibrary) {
	*out = *in
	if in.Installation != nil {
		in, out := &in.Installation, &out.Installation
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeaturemembershipTemplateLibrary.
func (in *FeaturemembershipTemplateLibrary) DeepCopy() *FeaturemembershipTemplateLibrary {
	if in == nil {
		return nil
	}
	out := new(FeaturemembershipTemplateLibrary)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GKEHubFeatureMembership) DeepCopyInto(out *GKEHubFeatureMembership) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GKEHubFeatureMembership.
func (in *GKEHubFeatureMembership) DeepCopy() *GKEHubFeatureMembership {
	if in == nil {
		return nil
	}
	out := new(GKEHubFeatureMembership)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GKEHubFeatureMembership) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GKEHubFeatureMembershipList) DeepCopyInto(out *GKEHubFeatureMembershipList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]GKEHubFeatureMembership, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GKEHubFeatureMembershipList.
func (in *GKEHubFeatureMembershipList) DeepCopy() *GKEHubFeatureMembershipList {
	if in == nil {
		return nil
	}
	out := new(GKEHubFeatureMembershipList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GKEHubFeatureMembershipList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GKEHubFeatureMembershipSpec) DeepCopyInto(out *GKEHubFeatureMembershipSpec) {
	*out = *in
	if in.Configmanagement != nil {
		in, out := &in.Configmanagement, &out.Configmanagement
		*out = new(FeaturemembershipConfigmanagement)
		(*in).DeepCopyInto(*out)
	}
	out.FeatureRef = in.FeatureRef
	if in.MembershipLocation != nil {
		in, out := &in.MembershipLocation, &out.MembershipLocation
		*out = new(string)
		**out = **in
	}
	out.MembershipRef = in.MembershipRef
	if in.Mesh != nil {
		in, out := &in.Mesh, &out.Mesh
		*out = new(FeaturemembershipMesh)
		(*in).DeepCopyInto(*out)
	}
	if in.Policycontroller != nil {
		in, out := &in.Policycontroller, &out.Policycontroller
		*out = new(FeaturemembershipPolicycontroller)
		(*in).DeepCopyInto(*out)
	}
	out.ProjectRef = in.ProjectRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GKEHubFeatureMembershipSpec.
func (in *GKEHubFeatureMembershipSpec) DeepCopy() *GKEHubFeatureMembershipSpec {
	if in == nil {
		return nil
	}
	out := new(GKEHubFeatureMembershipSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GKEHubFeatureMembershipStatus) DeepCopyInto(out *GKEHubFeatureMembershipStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1alpha1.Condition, len(*in))
		copy(*out, *in)
	}
	if in.ObservedGeneration != nil {
		in, out := &in.ObservedGeneration, &out.ObservedGeneration
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GKEHubFeatureMembershipStatus.
func (in *GKEHubFeatureMembershipStatus) DeepCopy() *GKEHubFeatureMembershipStatus {
	if in == nil {
		return nil
	}
	out := new(GKEHubFeatureMembershipStatus)
	in.DeepCopyInto(out)
	return out
}
