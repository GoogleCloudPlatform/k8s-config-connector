//go:build !ignore_autogenerated

// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/GoogleCloudPlatform/k8s-config-connector/apis/refs/v1beta1"
	k8sv1alpha1 "github.com/GoogleCloudPlatform/k8s-config-connector/pkg/apis/k8s/v1alpha1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuditConfig) DeepCopyInto(out *AuditConfig) {
	*out = *in
	if in.AuditLogConfigs != nil {
		in, out := &in.AuditLogConfigs, &out.AuditLogConfigs
		*out = make([]AuditLogConfig, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuditConfig.
func (in *AuditConfig) DeepCopy() *AuditConfig {
	if in == nil {
		return nil
	}
	out := new(AuditConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuditLogConfig) DeepCopyInto(out *AuditLogConfig) {
	*out = *in
	if in.ExemptedMembers != nil {
		in, out := &in.ExemptedMembers, &out.ExemptedMembers
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.LogType != nil {
		in, out := &in.LogType, &out.LogType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuditLogConfig.
func (in *AuditLogConfig) DeepCopy() *AuditLogConfig {
	if in == nil {
		return nil
	}
	out := new(AuditLogConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoAccept) DeepCopyInto(out *AutoAccept) {
	*out = *in
	if in.AutoAcceptProjects != nil {
		in, out := &in.AutoAcceptProjects, &out.AutoAcceptProjects
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoAccept.
func (in *AutoAccept) DeepCopy() *AutoAccept {
	if in == nil {
		return nil
	}
	out := new(AutoAccept)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Binding) DeepCopyInto(out *Binding) {
	*out = *in
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = new(Expr)
		(*in).DeepCopyInto(*out)
	}
	if in.Members != nil {
		in, out := &in.Members, &out.Members
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Binding.
func (in *Binding) DeepCopy() *Binding {
	if in == nil {
		return nil
	}
	out := new(Binding)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConsumerPscConfig) DeepCopyInto(out *ConsumerPscConfig) {
	*out = *in
	if in.ConsumerInstanceProject != nil {
		in, out := &in.ConsumerInstanceProject, &out.ConsumerInstanceProject
		*out = new(string)
		**out = **in
	}
	if in.DisableGlobalAccess != nil {
		in, out := &in.DisableGlobalAccess, &out.DisableGlobalAccess
		*out = new(bool)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.ProducerInstanceID != nil {
		in, out := &in.ProducerInstanceID, &out.ProducerInstanceID
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ServiceAttachmentIpAddressMap != nil {
		in, out := &in.ServiceAttachmentIpAddressMap, &out.ServiceAttachmentIpAddressMap
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConsumerPscConfig.
func (in *ConsumerPscConfig) DeepCopy() *ConsumerPscConfig {
	if in == nil {
		return nil
	}
	out := new(ConsumerPscConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConsumerPscConnection) DeepCopyInto(out *ConsumerPscConnection) {
	*out = *in
	if in.Error != nil {
		in, out := &in.Error, &out.Error
		*out = new(GoogleRpcStatus)
		(*in).DeepCopyInto(*out)
	}
	if in.ErrorInfo != nil {
		in, out := &in.ErrorInfo, &out.ErrorInfo
		*out = new(GoogleRpcErrorInfo)
		(*in).DeepCopyInto(*out)
	}
	if in.ErrorType != nil {
		in, out := &in.ErrorType, &out.ErrorType
		*out = new(string)
		**out = **in
	}
	if in.ForwardingRule != nil {
		in, out := &in.ForwardingRule, &out.ForwardingRule
		*out = new(string)
		**out = **in
	}
	if in.GceOperation != nil {
		in, out := &in.GceOperation, &out.GceOperation
		*out = new(string)
		**out = **in
	}
	if in.Ip != nil {
		in, out := &in.Ip, &out.Ip
		*out = new(string)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.ProducerInstanceID != nil {
		in, out := &in.ProducerInstanceID, &out.ProducerInstanceID
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.PscConnectionID != nil {
		in, out := &in.PscConnectionID, &out.PscConnectionID
		*out = new(string)
		**out = **in
	}
	if in.SelectedSubnetwork != nil {
		in, out := &in.SelectedSubnetwork, &out.SelectedSubnetwork
		*out = new(string)
		**out = **in
	}
	if in.ServiceAttachmentUri != nil {
		in, out := &in.ServiceAttachmentUri, &out.ServiceAttachmentUri
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConsumerPscConnection.
func (in *ConsumerPscConnection) DeepCopy() *ConsumerPscConnection {
	if in == nil {
		return nil
	}
	out := new(ConsumerPscConnection)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Empty) DeepCopyInto(out *Empty) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Empty.
func (in *Empty) DeepCopy() *Empty {
	if in == nil {
		return nil
	}
	out := new(Empty)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Expr) DeepCopyInto(out *Expr) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Expr.
func (in *Expr) DeepCopy() *Expr {
	if in == nil {
		return nil
	}
	out := new(Expr)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Filter) DeepCopyInto(out *Filter) {
	*out = *in
	if in.DestRange != nil {
		in, out := &in.DestRange, &out.DestRange
		*out = new(string)
		**out = **in
	}
	if in.IpProtocol != nil {
		in, out := &in.IpProtocol, &out.IpProtocol
		*out = new(string)
		**out = **in
	}
	if in.ProtocolVersion != nil {
		in, out := &in.ProtocolVersion, &out.ProtocolVersion
		*out = new(string)
		**out = **in
	}
	if in.SrcRange != nil {
		in, out := &in.SrcRange, &out.SrcRange
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Filter.
func (in *Filter) DeepCopy() *Filter {
	if in == nil {
		return nil
	}
	out := new(Filter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GoogleRpcErrorInfo) DeepCopyInto(out *GoogleRpcErrorInfo) {
	*out = *in
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Reason != nil {
		in, out := &in.Reason, &out.Reason
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GoogleRpcErrorInfo.
func (in *GoogleRpcErrorInfo) DeepCopy() *GoogleRpcErrorInfo {
	if in == nil {
		return nil
	}
	out := new(GoogleRpcErrorInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GoogleRpcStatus) DeepCopyInto(out *GoogleRpcStatus) {
	*out = *in
	if in.Code != nil {
		in, out := &in.Code, &out.Code
		*out = new(int32)
		**out = **in
	}
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GoogleRpcStatus.
func (in *GoogleRpcStatus) DeepCopy() *GoogleRpcStatus {
	if in == nil {
		return nil
	}
	out := new(GoogleRpcStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Group) DeepCopyInto(out *Group) {
	*out = *in
	if in.AutoAccept != nil {
		in, out := &in.AutoAccept, &out.AutoAccept
		*out = new(AutoAccept)
		(*in).DeepCopyInto(*out)
	}
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RouteTable != nil {
		in, out := &in.RouteTable, &out.RouteTable
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.Uid != nil {
		in, out := &in.Uid, &out.Uid
		*out = new(string)
		**out = **in
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Group.
func (in *Group) DeepCopy() *Group {
	if in == nil {
		return nil
	}
	out := new(Group)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Hub) DeepCopyInto(out *Hub) {
	*out = *in
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ExportPsc != nil {
		in, out := &in.ExportPsc, &out.ExportPsc
		*out = new(bool)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PolicyMode != nil {
		in, out := &in.PolicyMode, &out.PolicyMode
		*out = new(string)
		**out = **in
	}
	if in.PresetTopology != nil {
		in, out := &in.PresetTopology, &out.PresetTopology
		*out = new(string)
		**out = **in
	}
	if in.RouteTables != nil {
		in, out := &in.RouteTables, &out.RouteTables
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.RoutingVpcs != nil {
		in, out := &in.RoutingVpcs, &out.RoutingVpcs
		*out = make([]RoutingVPC, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpokeSummary != nil {
		in, out := &in.SpokeSummary, &out.SpokeSummary
		*out = new(SpokeSummary)
		(*in).DeepCopyInto(*out)
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.UniqueID != nil {
		in, out := &in.UniqueID, &out.UniqueID
		*out = new(string)
		**out = **in
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Hub.
func (in *Hub) DeepCopy() *Hub {
	if in == nil {
		return nil
	}
	out := new(Hub)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InterconnectAttachment) DeepCopyInto(out *InterconnectAttachment) {
	*out = *in
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InterconnectAttachment.
func (in *InterconnectAttachment) DeepCopy() *InterconnectAttachment {
	if in == nil {
		return nil
	}
	out := new(InterconnectAttachment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InternalRange) DeepCopyInto(out *InternalRange) {
	*out = *in
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.IpCidrRange != nil {
		in, out := &in.IpCidrRange, &out.IpCidrRange
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.Overlaps != nil {
		in, out := &in.Overlaps, &out.Overlaps
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Peering != nil {
		in, out := &in.Peering, &out.Peering
		*out = new(string)
		**out = **in
	}
	if in.PrefixLength != nil {
		in, out := &in.PrefixLength, &out.PrefixLength
		*out = new(int32)
		**out = **in
	}
	if in.TargetCidrRange != nil {
		in, out := &in.TargetCidrRange, &out.TargetCidrRange
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
	if in.Usage != nil {
		in, out := &in.Usage, &out.Usage
		*out = new(string)
		**out = **in
	}
	if in.Users != nil {
		in, out := &in.Users, &out.Users
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InternalRange.
func (in *InternalRange) DeepCopy() *InternalRange {
	if in == nil {
		return nil
	}
	out := new(InternalRange)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinkedInterconnectAttachments) DeepCopyInto(out *LinkedInterconnectAttachments) {
	*out = *in
	if in.IncludeImportRanges != nil {
		in, out := &in.IncludeImportRanges, &out.IncludeImportRanges
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.SiteToSiteDataTransfer != nil {
		in, out := &in.SiteToSiteDataTransfer, &out.SiteToSiteDataTransfer
		*out = new(bool)
		**out = **in
	}
	if in.Uris != nil {
		in, out := &in.Uris, &out.Uris
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.VpcNetwork != nil {
		in, out := &in.VpcNetwork, &out.VpcNetwork
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinkedInterconnectAttachments.
func (in *LinkedInterconnectAttachments) DeepCopy() *LinkedInterconnectAttachments {
	if in == nil {
		return nil
	}
	out := new(LinkedInterconnectAttachments)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinkedRouterApplianceInstances) DeepCopyInto(out *LinkedRouterApplianceInstances) {
	*out = *in
	if in.IncludeImportRanges != nil {
		in, out := &in.IncludeImportRanges, &out.IncludeImportRanges
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Instances != nil {
		in, out := &in.Instances, &out.Instances
		*out = make([]RouterApplianceInstance, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SiteToSiteDataTransfer != nil {
		in, out := &in.SiteToSiteDataTransfer, &out.SiteToSiteDataTransfer
		*out = new(bool)
		**out = **in
	}
	if in.VpcNetwork != nil {
		in, out := &in.VpcNetwork, &out.VpcNetwork
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinkedRouterApplianceInstances.
func (in *LinkedRouterApplianceInstances) DeepCopy() *LinkedRouterApplianceInstances {
	if in == nil {
		return nil
	}
	out := new(LinkedRouterApplianceInstances)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinkedVpcNetwork) DeepCopyInto(out *LinkedVpcNetwork) {
	*out = *in
	if in.ExcludeExportRanges != nil {
		in, out := &in.ExcludeExportRanges, &out.ExcludeExportRanges
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.IncludeExportRanges != nil {
		in, out := &in.IncludeExportRanges, &out.IncludeExportRanges
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Uri != nil {
		in, out := &in.Uri, &out.Uri
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinkedVpcNetwork.
func (in *LinkedVpcNetwork) DeepCopy() *LinkedVpcNetwork {
	if in == nil {
		return nil
	}
	out := new(LinkedVpcNetwork)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinkedVpnTunnels) DeepCopyInto(out *LinkedVpnTunnels) {
	*out = *in
	if in.IncludeImportRanges != nil {
		in, out := &in.IncludeImportRanges, &out.IncludeImportRanges
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.SiteToSiteDataTransfer != nil {
		in, out := &in.SiteToSiteDataTransfer, &out.SiteToSiteDataTransfer
		*out = new(bool)
		**out = **in
	}
	if in.Uris != nil {
		in, out := &in.Uris, &out.Uris
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.VpcNetwork != nil {
		in, out := &in.VpcNetwork, &out.VpcNetwork
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinkedVpnTunnels.
func (in *LinkedVpnTunnels) DeepCopy() *LinkedVpnTunnels {
	if in == nil {
		return nil
	}
	out := new(LinkedVpnTunnels)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Location) DeepCopyInto(out *Location) {
	*out = *in
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.LocationID != nil {
		in, out := &in.LocationID, &out.LocationID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Location.
func (in *Location) DeepCopy() *Location {
	if in == nil {
		return nil
	}
	out := new(Location)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkConnectivityServiceConnectionPolicy) DeepCopyInto(out *NetworkConnectivityServiceConnectionPolicy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkConnectivityServiceConnectionPolicy.
func (in *NetworkConnectivityServiceConnectionPolicy) DeepCopy() *NetworkConnectivityServiceConnectionPolicy {
	if in == nil {
		return nil
	}
	out := new(NetworkConnectivityServiceConnectionPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NetworkConnectivityServiceConnectionPolicy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkConnectivityServiceConnectionPolicyList) DeepCopyInto(out *NetworkConnectivityServiceConnectionPolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]NetworkConnectivityServiceConnectionPolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkConnectivityServiceConnectionPolicyList.
func (in *NetworkConnectivityServiceConnectionPolicyList) DeepCopy() *NetworkConnectivityServiceConnectionPolicyList {
	if in == nil {
		return nil
	}
	out := new(NetworkConnectivityServiceConnectionPolicyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NetworkConnectivityServiceConnectionPolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkConnectivityServiceConnectionPolicyObservedState) DeepCopyInto(out *NetworkConnectivityServiceConnectionPolicyObservedState) {
	*out = *in
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.Infrastructure != nil {
		in, out := &in.Infrastructure, &out.Infrastructure
		*out = new(string)
		**out = **in
	}
	if in.PscConnections != nil {
		in, out := &in.PscConnections, &out.PscConnections
		*out = make([]PscConnection, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkConnectivityServiceConnectionPolicyObservedState.
func (in *NetworkConnectivityServiceConnectionPolicyObservedState) DeepCopy() *NetworkConnectivityServiceConnectionPolicyObservedState {
	if in == nil {
		return nil
	}
	out := new(NetworkConnectivityServiceConnectionPolicyObservedState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkConnectivityServiceConnectionPolicySpec) DeepCopyInto(out *NetworkConnectivityServiceConnectionPolicySpec) {
	*out = *in
	out.ProjectRef = in.ProjectRef
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(v1beta1.ComputeNetworkRef)
		**out = **in
	}
	if in.PscConfig != nil {
		in, out := &in.PscConfig, &out.PscConfig
		*out = new(PscConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceClass != nil {
		in, out := &in.ServiceClass, &out.ServiceClass
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkConnectivityServiceConnectionPolicySpec.
func (in *NetworkConnectivityServiceConnectionPolicySpec) DeepCopy() *NetworkConnectivityServiceConnectionPolicySpec {
	if in == nil {
		return nil
	}
	out := new(NetworkConnectivityServiceConnectionPolicySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkConnectivityServiceConnectionPolicyStatus) DeepCopyInto(out *NetworkConnectivityServiceConnectionPolicyStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]k8sv1alpha1.Condition, len(*in))
		copy(*out, *in)
	}
	if in.ObservedGeneration != nil {
		in, out := &in.ObservedGeneration, &out.ObservedGeneration
		*out = new(int64)
		**out = **in
	}
	if in.ExternalRef != nil {
		in, out := &in.ExternalRef, &out.ExternalRef
		*out = new(string)
		**out = **in
	}
	if in.ObservedState != nil {
		in, out := &in.ObservedState, &out.ObservedState
		*out = new(NetworkConnectivityServiceConnectionPolicyObservedState)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkConnectivityServiceConnectionPolicyStatus.
func (in *NetworkConnectivityServiceConnectionPolicyStatus) DeepCopy() *NetworkConnectivityServiceConnectionPolicyStatus {
	if in == nil {
		return nil
	}
	out := new(NetworkConnectivityServiceConnectionPolicyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NextHopInterconnectAttachment) DeepCopyInto(out *NextHopInterconnectAttachment) {
	*out = *in
	if in.SiteToSiteDataTransfer != nil {
		in, out := &in.SiteToSiteDataTransfer, &out.SiteToSiteDataTransfer
		*out = new(bool)
		**out = **in
	}
	if in.Uri != nil {
		in, out := &in.Uri, &out.Uri
		*out = new(string)
		**out = **in
	}
	if in.VpcNetwork != nil {
		in, out := &in.VpcNetwork, &out.VpcNetwork
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NextHopInterconnectAttachment.
func (in *NextHopInterconnectAttachment) DeepCopy() *NextHopInterconnectAttachment {
	if in == nil {
		return nil
	}
	out := new(NextHopInterconnectAttachment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NextHopRouterApplianceInstance) DeepCopyInto(out *NextHopRouterApplianceInstance) {
	*out = *in
	if in.SiteToSiteDataTransfer != nil {
		in, out := &in.SiteToSiteDataTransfer, &out.SiteToSiteDataTransfer
		*out = new(bool)
		**out = **in
	}
	if in.Uri != nil {
		in, out := &in.Uri, &out.Uri
		*out = new(string)
		**out = **in
	}
	if in.VpcNetwork != nil {
		in, out := &in.VpcNetwork, &out.VpcNetwork
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NextHopRouterApplianceInstance.
func (in *NextHopRouterApplianceInstance) DeepCopy() *NextHopRouterApplianceInstance {
	if in == nil {
		return nil
	}
	out := new(NextHopRouterApplianceInstance)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NextHopVPNTunnel) DeepCopyInto(out *NextHopVPNTunnel) {
	*out = *in
	if in.SiteToSiteDataTransfer != nil {
		in, out := &in.SiteToSiteDataTransfer, &out.SiteToSiteDataTransfer
		*out = new(bool)
		**out = **in
	}
	if in.Uri != nil {
		in, out := &in.Uri, &out.Uri
		*out = new(string)
		**out = **in
	}
	if in.VpcNetwork != nil {
		in, out := &in.VpcNetwork, &out.VpcNetwork
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NextHopVPNTunnel.
func (in *NextHopVPNTunnel) DeepCopy() *NextHopVPNTunnel {
	if in == nil {
		return nil
	}
	out := new(NextHopVPNTunnel)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NextHopVpcNetwork) DeepCopyInto(out *NextHopVpcNetwork) {
	*out = *in
	if in.Uri != nil {
		in, out := &in.Uri, &out.Uri
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NextHopVpcNetwork.
func (in *NextHopVpcNetwork) DeepCopy() *NextHopVpcNetwork {
	if in == nil {
		return nil
	}
	out := new(NextHopVpcNetwork)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Policy) DeepCopyInto(out *Policy) {
	*out = *in
	if in.AuditConfigs != nil {
		in, out := &in.AuditConfigs, &out.AuditConfigs
		*out = make([]AuditConfig, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Bindings != nil {
		in, out := &in.Bindings, &out.Bindings
		*out = make([]Binding, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = make([]byte, len(*in))
		copy(*out, *in)
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Policy.
func (in *Policy) DeepCopy() *Policy {
	if in == nil {
		return nil
	}
	out := new(Policy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyBasedRoute) DeepCopyInto(out *PolicyBasedRoute) {
	*out = *in
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = new(Filter)
		(*in).DeepCopyInto(*out)
	}
	if in.InterconnectAttachment != nil {
		in, out := &in.InterconnectAttachment, &out.InterconnectAttachment
		*out = new(InterconnectAttachment)
		(*in).DeepCopyInto(*out)
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.NextHopIlbIp != nil {
		in, out := &in.NextHopIlbIp, &out.NextHopIlbIp
		*out = new(string)
		**out = **in
	}
	if in.NextHopOtherRoutes != nil {
		in, out := &in.NextHopOtherRoutes, &out.NextHopOtherRoutes
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(int32)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
	if in.VirtualMachine != nil {
		in, out := &in.VirtualMachine, &out.VirtualMachine
		*out = new(VirtualMachine)
		(*in).DeepCopyInto(*out)
	}
	if in.Warnings != nil {
		in, out := &in.Warnings, &out.Warnings
		*out = make([]Warnings, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyBasedRoute.
func (in *PolicyBasedRoute) DeepCopy() *PolicyBasedRoute {
	if in == nil {
		return nil
	}
	out := new(PolicyBasedRoute)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProducerPscConfig) DeepCopyInto(out *ProducerPscConfig) {
	*out = *in
	if in.ServiceAttachmentUri != nil {
		in, out := &in.ServiceAttachmentUri, &out.ServiceAttachmentUri
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProducerPscConfig.
func (in *ProducerPscConfig) DeepCopy() *ProducerPscConfig {
	if in == nil {
		return nil
	}
	out := new(ProducerPscConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PscConfig) DeepCopyInto(out *PscConfig) {
	*out = *in
	if in.Limit != nil {
		in, out := &in.Limit, &out.Limit
		*out = new(int64)
		**out = **in
	}
	if in.ProducerInstanceLocation != nil {
		in, out := &in.ProducerInstanceLocation, &out.ProducerInstanceLocation
		*out = new(string)
		**out = **in
	}
	if in.Subnetworks != nil {
		in, out := &in.Subnetworks, &out.Subnetworks
		*out = make([]v1beta1.ComputeSubnetworkRef, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PscConfig.
func (in *PscConfig) DeepCopy() *PscConfig {
	if in == nil {
		return nil
	}
	out := new(PscConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PscConnection) DeepCopyInto(out *PscConnection) {
	*out = *in
	if in.ConsumerAddress != nil {
		in, out := &in.ConsumerAddress, &out.ConsumerAddress
		*out = new(string)
		**out = **in
	}
	if in.ConsumerForwardingRule != nil {
		in, out := &in.ConsumerForwardingRule, &out.ConsumerForwardingRule
		*out = new(string)
		**out = **in
	}
	if in.ConsumerTargetProject != nil {
		in, out := &in.ConsumerTargetProject, &out.ConsumerTargetProject
		*out = new(string)
		**out = **in
	}
	if in.Error != nil {
		in, out := &in.Error, &out.Error
		*out = new(GoogleRpcStatus)
		(*in).DeepCopyInto(*out)
	}
	if in.ErrorInfo != nil {
		in, out := &in.ErrorInfo, &out.ErrorInfo
		*out = new(GoogleRpcErrorInfo)
		(*in).DeepCopyInto(*out)
	}
	if in.ErrorType != nil {
		in, out := &in.ErrorType, &out.ErrorType
		*out = new(string)
		**out = **in
	}
	if in.GceOperation != nil {
		in, out := &in.GceOperation, &out.GceOperation
		*out = new(string)
		**out = **in
	}
	if in.ProducerInstanceID != nil {
		in, out := &in.ProducerInstanceID, &out.ProducerInstanceID
		*out = new(string)
		**out = **in
	}
	if in.PscConnectionID != nil {
		in, out := &in.PscConnectionID, &out.PscConnectionID
		*out = new(string)
		**out = **in
	}
	if in.SelectedSubnetwork != nil {
		in, out := &in.SelectedSubnetwork, &out.SelectedSubnetwork
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PscConnection.
func (in *PscConnection) DeepCopy() *PscConnection {
	if in == nil {
		return nil
	}
	out := new(PscConnection)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionalEndpoint) DeepCopyInto(out *RegionalEndpoint) {
	*out = *in
	if in.AccessType != nil {
		in, out := &in.AccessType, &out.AccessType
		*out = new(string)
		**out = **in
	}
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.IpAddress != nil {
		in, out := &in.IpAddress, &out.IpAddress
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.PscForwardingRule != nil {
		in, out := &in.PscForwardingRule, &out.PscForwardingRule
		*out = new(string)
		**out = **in
	}
	if in.Subnetwork != nil {
		in, out := &in.Subnetwork, &out.Subnetwork
		*out = new(string)
		**out = **in
	}
	if in.TargetGoogleApi != nil {
		in, out := &in.TargetGoogleApi, &out.TargetGoogleApi
		*out = new(string)
		**out = **in
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionalEndpoint.
func (in *RegionalEndpoint) DeepCopy() *RegionalEndpoint {
	if in == nil {
		return nil
	}
	out := new(RegionalEndpoint)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Route) DeepCopyInto(out *Route) {
	*out = *in
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.IpCidrRange != nil {
		in, out := &in.IpCidrRange, &out.IpCidrRange
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NextHopInterconnectAttachment != nil {
		in, out := &in.NextHopInterconnectAttachment, &out.NextHopInterconnectAttachment
		*out = new(NextHopInterconnectAttachment)
		(*in).DeepCopyInto(*out)
	}
	if in.NextHopRouterApplianceInstance != nil {
		in, out := &in.NextHopRouterApplianceInstance, &out.NextHopRouterApplianceInstance
		*out = new(NextHopRouterApplianceInstance)
		(*in).DeepCopyInto(*out)
	}
	if in.NextHopVpcNetwork != nil {
		in, out := &in.NextHopVpcNetwork, &out.NextHopVpcNetwork
		*out = new(NextHopVpcNetwork)
		(*in).DeepCopyInto(*out)
	}
	if in.NextHopVpnTunnel != nil {
		in, out := &in.NextHopVpnTunnel, &out.NextHopVpnTunnel
		*out = new(NextHopVPNTunnel)
		(*in).DeepCopyInto(*out)
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(int64)
		**out = **in
	}
	if in.Spoke != nil {
		in, out := &in.Spoke, &out.Spoke
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Uid != nil {
		in, out := &in.Uid, &out.Uid
		*out = new(string)
		**out = **in
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Route.
func (in *Route) DeepCopy() *Route {
	if in == nil {
		return nil
	}
	out := new(Route)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteTable) DeepCopyInto(out *RouteTable) {
	*out = *in
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.Uid != nil {
		in, out := &in.Uid, &out.Uid
		*out = new(string)
		**out = **in
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteTable.
func (in *RouteTable) DeepCopy() *RouteTable {
	if in == nil {
		return nil
	}
	out := new(RouteTable)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouterApplianceInstance) DeepCopyInto(out *RouterApplianceInstance) {
	*out = *in
	if in.IpAddress != nil {
		in, out := &in.IpAddress, &out.IpAddress
		*out = new(string)
		**out = **in
	}
	if in.VirtualMachine != nil {
		in, out := &in.VirtualMachine, &out.VirtualMachine
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouterApplianceInstance.
func (in *RouterApplianceInstance) DeepCopy() *RouterApplianceInstance {
	if in == nil {
		return nil
	}
	out := new(RouterApplianceInstance)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoutingVPC) DeepCopyInto(out *RoutingVPC) {
	*out = *in
	if in.RequiredForNewSiteToSiteDataTransferSpokes != nil {
		in, out := &in.RequiredForNewSiteToSiteDataTransferSpokes, &out.RequiredForNewSiteToSiteDataTransferSpokes
		*out = new(bool)
		**out = **in
	}
	if in.Uri != nil {
		in, out := &in.Uri, &out.Uri
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoutingVPC.
func (in *RoutingVPC) DeepCopy() *RoutingVPC {
	if in == nil {
		return nil
	}
	out := new(RoutingVPC)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceClass) DeepCopyInto(out *ServiceClass) {
	*out = *in
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ServiceClass != nil {
		in, out := &in.ServiceClass, &out.ServiceClass
		*out = new(string)
		**out = **in
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceClass.
func (in *ServiceClass) DeepCopy() *ServiceClass {
	if in == nil {
		return nil
	}
	out := new(ServiceClass)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceConnectionMap) DeepCopyInto(out *ServiceConnectionMap) {
	*out = *in
	if in.ConsumerPscConfigs != nil {
		in, out := &in.ConsumerPscConfigs, &out.ConsumerPscConfigs
		*out = make([]ConsumerPscConfig, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConsumerPscConnections != nil {
		in, out := &in.ConsumerPscConnections, &out.ConsumerPscConnections
		*out = make([]ConsumerPscConnection, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.Infrastructure != nil {
		in, out := &in.Infrastructure, &out.Infrastructure
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProducerPscConfigs != nil {
		in, out := &in.ProducerPscConfigs, &out.ProducerPscConfigs
		*out = make([]ProducerPscConfig, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceClass != nil {
		in, out := &in.ServiceClass, &out.ServiceClass
		*out = new(string)
		**out = **in
	}
	if in.ServiceClassUri != nil {
		in, out := &in.ServiceClassUri, &out.ServiceClassUri
		*out = new(string)
		**out = **in
	}
	if in.Token != nil {
		in, out := &in.Token, &out.Token
		*out = new(string)
		**out = **in
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceConnectionMap.
func (in *ServiceConnectionMap) DeepCopy() *ServiceConnectionMap {
	if in == nil {
		return nil
	}
	out := new(ServiceConnectionMap)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceConnectionPolicy) DeepCopyInto(out *ServiceConnectionPolicy) {
	*out = *in
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.Infrastructure != nil {
		in, out := &in.Infrastructure, &out.Infrastructure
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.PscConfig != nil {
		in, out := &in.PscConfig, &out.PscConfig
		*out = new(PscConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.PscConnections != nil {
		in, out := &in.PscConnections, &out.PscConnections
		*out = make([]PscConnection, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceClass != nil {
		in, out := &in.ServiceClass, &out.ServiceClass
		*out = new(string)
		**out = **in
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceConnectionPolicy.
func (in *ServiceConnectionPolicy) DeepCopy() *ServiceConnectionPolicy {
	if in == nil {
		return nil
	}
	out := new(ServiceConnectionPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceConnectionToken) DeepCopyInto(out *ServiceConnectionToken) {
	*out = *in
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.ExpireTime != nil {
		in, out := &in.ExpireTime, &out.ExpireTime
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.Token != nil {
		in, out := &in.Token, &out.Token
		*out = new(string)
		**out = **in
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceConnectionToken.
func (in *ServiceConnectionToken) DeepCopy() *ServiceConnectionToken {
	if in == nil {
		return nil
	}
	out := new(ServiceConnectionToken)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Spoke) DeepCopyInto(out *Spoke) {
	*out = *in
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Group != nil {
		in, out := &in.Group, &out.Group
		*out = new(string)
		**out = **in
	}
	if in.Hub != nil {
		in, out := &in.Hub, &out.Hub
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.LinkedInterconnectAttachments != nil {
		in, out := &in.LinkedInterconnectAttachments, &out.LinkedInterconnectAttachments
		*out = new(LinkedInterconnectAttachments)
		(*in).DeepCopyInto(*out)
	}
	if in.LinkedRouterApplianceInstances != nil {
		in, out := &in.LinkedRouterApplianceInstances, &out.LinkedRouterApplianceInstances
		*out = new(LinkedRouterApplianceInstances)
		(*in).DeepCopyInto(*out)
	}
	if in.LinkedVpcNetwork != nil {
		in, out := &in.LinkedVpcNetwork, &out.LinkedVpcNetwork
		*out = new(LinkedVpcNetwork)
		(*in).DeepCopyInto(*out)
	}
	if in.LinkedVpnTunnels != nil {
		in, out := &in.LinkedVpnTunnels, &out.LinkedVpnTunnels
		*out = new(LinkedVpnTunnels)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Reasons != nil {
		in, out := &in.Reasons, &out.Reasons
		*out = make([]StateReason, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpokeType != nil {
		in, out := &in.SpokeType, &out.SpokeType
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.UniqueID != nil {
		in, out := &in.UniqueID, &out.UniqueID
		*out = new(string)
		**out = **in
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Spoke.
func (in *Spoke) DeepCopy() *Spoke {
	if in == nil {
		return nil
	}
	out := new(Spoke)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpokeStateCount) DeepCopyInto(out *SpokeStateCount) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(int64)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpokeStateCount.
func (in *SpokeStateCount) DeepCopy() *SpokeStateCount {
	if in == nil {
		return nil
	}
	out := new(SpokeStateCount)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpokeStateReasonCount) DeepCopyInto(out *SpokeStateReasonCount) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(int64)
		**out = **in
	}
	if in.StateReasonCode != nil {
		in, out := &in.StateReasonCode, &out.StateReasonCode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpokeStateReasonCount.
func (in *SpokeStateReasonCount) DeepCopy() *SpokeStateReasonCount {
	if in == nil {
		return nil
	}
	out := new(SpokeStateReasonCount)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpokeSummary) DeepCopyInto(out *SpokeSummary) {
	*out = *in
	if in.SpokeStateCounts != nil {
		in, out := &in.SpokeStateCounts, &out.SpokeStateCounts
		*out = make([]SpokeStateCount, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpokeStateReasonCounts != nil {
		in, out := &in.SpokeStateReasonCounts, &out.SpokeStateReasonCounts
		*out = make([]SpokeStateReasonCount, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpokeTypeCounts != nil {
		in, out := &in.SpokeTypeCounts, &out.SpokeTypeCounts
		*out = make([]SpokeTypeCount, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpokeSummary.
func (in *SpokeSummary) DeepCopy() *SpokeSummary {
	if in == nil {
		return nil
	}
	out := new(SpokeSummary)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpokeTypeCount) DeepCopyInto(out *SpokeTypeCount) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(int64)
		**out = **in
	}
	if in.SpokeType != nil {
		in, out := &in.SpokeType, &out.SpokeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpokeTypeCount.
func (in *SpokeTypeCount) DeepCopy() *SpokeTypeCount {
	if in == nil {
		return nil
	}
	out := new(SpokeTypeCount)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StateReason) DeepCopyInto(out *StateReason) {
	*out = *in
	if in.Code != nil {
		in, out := &in.Code, &out.Code
		*out = new(string)
		**out = **in
	}
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
	if in.UserDetails != nil {
		in, out := &in.UserDetails, &out.UserDetails
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StateReason.
func (in *StateReason) DeepCopy() *StateReason {
	if in == nil {
		return nil
	}
	out := new(StateReason)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualMachine) DeepCopyInto(out *VirtualMachine) {
	*out = *in
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualMachine.
func (in *VirtualMachine) DeepCopy() *VirtualMachine {
	if in == nil {
		return nil
	}
	out := new(VirtualMachine)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Warnings) DeepCopyInto(out *Warnings) {
	*out = *in
	if in.Code != nil {
		in, out := &in.Code, &out.Code
		*out = new(string)
		**out = **in
	}
	if in.Data != nil {
		in, out := &in.Data, &out.Data
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.WarningMessage != nil {
		in, out := &in.WarningMessage, &out.WarningMessage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Warnings.
func (in *Warnings) DeepCopy() *Warnings {
	if in == nil {
		return nil
	}
	out := new(Warnings)
	in.DeepCopyInto(out)
	return out
}
