//go:build !ignore_autogenerated

// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by controller-gen. DO NOT EDIT.

package v1beta1

import (
	refsv1beta1 "github.com/GoogleCloudPlatform/k8s-config-connector/apis/refs/v1beta1"
	"github.com/GoogleCloudPlatform/k8s-config-connector/pkg/apis/k8s/v1alpha1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Any) DeepCopyInto(out *Any) {
	*out = *in
	if in.TypeURL != nil {
		in, out := &in.TypeURL, &out.TypeURL
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = make([]byte, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Any.
func (in *Any) DeepCopy() *Any {
	if in == nil {
		return nil
	}
	out := new(Any)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupDRBackupVault) DeepCopyInto(out *BackupDRBackupVault) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupDRBackupVault.
func (in *BackupDRBackupVault) DeepCopy() *BackupDRBackupVault {
	if in == nil {
		return nil
	}
	out := new(BackupDRBackupVault)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BackupDRBackupVault) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupDRBackupVaultList) DeepCopyInto(out *BackupDRBackupVaultList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]BackupDRBackupVault, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupDRBackupVaultList.
func (in *BackupDRBackupVaultList) DeepCopy() *BackupDRBackupVaultList {
	if in == nil {
		return nil
	}
	out := new(BackupDRBackupVaultList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BackupDRBackupVaultList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupDRBackupVaultObservedState) DeepCopyInto(out *BackupDRBackupVaultObservedState) {
	*out = *in
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
	if in.Deletable != nil {
		in, out := &in.Deletable, &out.Deletable
		*out = new(bool)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.BackupCount != nil {
		in, out := &in.BackupCount, &out.BackupCount
		*out = new(int64)
		**out = **in
	}
	if in.ServiceAccount != nil {
		in, out := &in.ServiceAccount, &out.ServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.TotalStoredBytes != nil {
		in, out := &in.TotalStoredBytes, &out.TotalStoredBytes
		*out = new(int64)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupDRBackupVaultObservedState.
func (in *BackupDRBackupVaultObservedState) DeepCopy() *BackupDRBackupVaultObservedState {
	if in == nil {
		return nil
	}
	out := new(BackupDRBackupVaultObservedState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupDRBackupVaultParent) DeepCopyInto(out *BackupDRBackupVaultParent) {
	*out = *in
	if in.ProjectRef != nil {
		in, out := &in.ProjectRef, &out.ProjectRef
		*out = new(refsv1beta1.ProjectRef)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupDRBackupVaultParent.
func (in *BackupDRBackupVaultParent) DeepCopy() *BackupDRBackupVaultParent {
	if in == nil {
		return nil
	}
	out := new(BackupDRBackupVaultParent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupDRBackupVaultSpec) DeepCopyInto(out *BackupDRBackupVaultSpec) {
	*out = *in
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
	in.BackupDRBackupVaultParent.DeepCopyInto(&out.BackupDRBackupVaultParent)
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.BackupMinimumEnforcedRetentionDuration != nil {
		in, out := &in.BackupMinimumEnforcedRetentionDuration, &out.BackupMinimumEnforcedRetentionDuration
		*out = new(string)
		**out = **in
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.EffectiveTime != nil {
		in, out := &in.EffectiveTime, &out.EffectiveTime
		*out = new(string)
		**out = **in
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.AccessRestriction != nil {
		in, out := &in.AccessRestriction, &out.AccessRestriction
		*out = new(string)
		**out = **in
	}
	if in.IgnoreInactiveDatasources != nil {
		in, out := &in.IgnoreInactiveDatasources, &out.IgnoreInactiveDatasources
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupDRBackupVaultSpec.
func (in *BackupDRBackupVaultSpec) DeepCopy() *BackupDRBackupVaultSpec {
	if in == nil {
		return nil
	}
	out := new(BackupDRBackupVaultSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupDRBackupVaultStatus) DeepCopyInto(out *BackupDRBackupVaultStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1alpha1.Condition, len(*in))
		copy(*out, *in)
	}
	if in.ObservedGeneration != nil {
		in, out := &in.ObservedGeneration, &out.ObservedGeneration
		*out = new(int64)
		**out = **in
	}
	if in.ExternalRef != nil {
		in, out := &in.ExternalRef, &out.ExternalRef
		*out = new(string)
		**out = **in
	}
	if in.ObservedState != nil {
		in, out := &in.ObservedState, &out.ObservedState
		*out = new(BackupDRBackupVaultObservedState)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupDRBackupVaultStatus.
func (in *BackupDRBackupVaultStatus) DeepCopy() *BackupDRBackupVaultStatus {
	if in == nil {
		return nil
	}
	out := new(BackupDRBackupVaultStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupRule) DeepCopyInto(out *BackupRule) {
	*out = *in
	if in.RuleID != nil {
		in, out := &in.RuleID, &out.RuleID
		*out = new(string)
		**out = **in
	}
	if in.BackupRetentionDays != nil {
		in, out := &in.BackupRetentionDays, &out.BackupRetentionDays
		*out = new(int32)
		**out = **in
	}
	if in.StandardSchedule != nil {
		in, out := &in.StandardSchedule, &out.StandardSchedule
		*out = new(StandardSchedule)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupRule.
func (in *BackupRule) DeepCopy() *BackupRule {
	if in == nil {
		return nil
	}
	out := new(BackupRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupVaultIdentity) DeepCopyInto(out *BackupVaultIdentity) {
	*out = *in
	if in.parent != nil {
		in, out := &in.parent, &out.parent
		*out = new(BackupVaultParent)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupVaultIdentity.
func (in *BackupVaultIdentity) DeepCopy() *BackupVaultIdentity {
	if in == nil {
		return nil
	}
	out := new(BackupVaultIdentity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupVaultParent) DeepCopyInto(out *BackupVaultParent) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupVaultParent.
func (in *BackupVaultParent) DeepCopy() *BackupVaultParent {
	if in == nil {
		return nil
	}
	out := new(BackupVaultParent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupVaultRef) DeepCopyInto(out *BackupVaultRef) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupVaultRef.
func (in *BackupVaultRef) DeepCopy() *BackupVaultRef {
	if in == nil {
		return nil
	}
	out := new(BackupVaultRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupWindow) DeepCopyInto(out *BackupWindow) {
	*out = *in
	if in.StartHourOfDay != nil {
		in, out := &in.StartHourOfDay, &out.StartHourOfDay
		*out = new(int32)
		**out = **in
	}
	if in.EndHourOfDay != nil {
		in, out := &in.EndHourOfDay, &out.EndHourOfDay
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupWindow.
func (in *BackupWindow) DeepCopy() *BackupWindow {
	if in == nil {
		return nil
	}
	out := new(BackupWindow)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleConfigInfo) DeepCopyInto(out *RuleConfigInfo) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleConfigInfo.
func (in *RuleConfigInfo) DeepCopy() *RuleConfigInfo {
	if in == nil {
		return nil
	}
	out := new(RuleConfigInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleConfigInfoObservedState) DeepCopyInto(out *RuleConfigInfoObservedState) {
	*out = *in
	if in.RuleID != nil {
		in, out := &in.RuleID, &out.RuleID
		*out = new(string)
		**out = **in
	}
	if in.LastBackupState != nil {
		in, out := &in.LastBackupState, &out.LastBackupState
		*out = new(string)
		**out = **in
	}
	if in.LastBackupError != nil {
		in, out := &in.LastBackupError, &out.LastBackupError
		*out = new(Status)
		(*in).DeepCopyInto(*out)
	}
	if in.LastSuccessfulBackupConsistencyTime != nil {
		in, out := &in.LastSuccessfulBackupConsistencyTime, &out.LastSuccessfulBackupConsistencyTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleConfigInfoObservedState.
func (in *RuleConfigInfoObservedState) DeepCopy() *RuleConfigInfoObservedState {
	if in == nil {
		return nil
	}
	out := new(RuleConfigInfoObservedState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StandardSchedule) DeepCopyInto(out *StandardSchedule) {
	*out = *in
	if in.RecurrenceType != nil {
		in, out := &in.RecurrenceType, &out.RecurrenceType
		*out = new(string)
		**out = **in
	}
	if in.HourlyFrequency != nil {
		in, out := &in.HourlyFrequency, &out.HourlyFrequency
		*out = new(int32)
		**out = **in
	}
	if in.DaysOfWeek != nil {
		in, out := &in.DaysOfWeek, &out.DaysOfWeek
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.DaysOfMonth != nil {
		in, out := &in.DaysOfMonth, &out.DaysOfMonth
		*out = make([]int32, len(*in))
		copy(*out, *in)
	}
	if in.WeekDayOfMonth != nil {
		in, out := &in.WeekDayOfMonth, &out.WeekDayOfMonth
		*out = new(WeekDayOfMonth)
		(*in).DeepCopyInto(*out)
	}
	if in.Months != nil {
		in, out := &in.Months, &out.Months
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.BackupWindow != nil {
		in, out := &in.BackupWindow, &out.BackupWindow
		*out = new(BackupWindow)
		(*in).DeepCopyInto(*out)
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StandardSchedule.
func (in *StandardSchedule) DeepCopy() *StandardSchedule {
	if in == nil {
		return nil
	}
	out := new(StandardSchedule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Status) DeepCopyInto(out *Status) {
	*out = *in
	if in.Code != nil {
		in, out := &in.Code, &out.Code
		*out = new(int32)
		**out = **in
	}
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
	if in.Details != nil {
		in, out := &in.Details, &out.Details
		*out = make([]Any, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Status.
func (in *Status) DeepCopy() *Status {
	if in == nil {
		return nil
	}
	out := new(Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WeekDayOfMonth) DeepCopyInto(out *WeekDayOfMonth) {
	*out = *in
	if in.WeekOfMonth != nil {
		in, out := &in.WeekOfMonth, &out.WeekOfMonth
		*out = new(string)
		**out = **in
	}
	if in.DayOfWeek != nil {
		in, out := &in.DayOfWeek, &out.DayOfWeek
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WeekDayOfMonth.
func (in *WeekDayOfMonth) DeepCopy() *WeekDayOfMonth {
	if in == nil {
		return nil
	}
	out := new(WeekDayOfMonth)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkforceIdentityBasedManagementURI) DeepCopyInto(out *WorkforceIdentityBasedManagementURI) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkforceIdentityBasedManagementURI.
func (in *WorkforceIdentityBasedManagementURI) DeepCopy() *WorkforceIdentityBasedManagementURI {
	if in == nil {
		return nil
	}
	out := new(WorkforceIdentityBasedManagementURI)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkforceIdentityBasedManagementURIObservedState) DeepCopyInto(out *WorkforceIdentityBasedManagementURIObservedState) {
	*out = *in
	if in.FirstPartyManagementURI != nil {
		in, out := &in.FirstPartyManagementURI, &out.FirstPartyManagementURI
		*out = new(string)
		**out = **in
	}
	if in.ThirdPartyManagementURI != nil {
		in, out := &in.ThirdPartyManagementURI, &out.ThirdPartyManagementURI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkforceIdentityBasedManagementURIObservedState.
func (in *WorkforceIdentityBasedManagementURIObservedState) DeepCopy() *WorkforceIdentityBasedManagementURIObservedState {
	if in == nil {
		return nil
	}
	out := new(WorkforceIdentityBasedManagementURIObservedState)
	in.DeepCopyInto(out)
	return out
}
