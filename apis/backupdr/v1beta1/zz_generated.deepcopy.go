//go:build !ignore_autogenerated

// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by controller-gen. DO NOT EDIT.

package v1beta1

import (
	"github.com/GoogleCloudPlatform/k8s-config-connector/pkg/apis/k8s/v1alpha1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupDRBackupPlan) DeepCopyInto(out *BackupDRBackupPlan) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupDRBackupPlan.
func (in *BackupDRBackupPlan) DeepCopy() *BackupDRBackupPlan {
	if in == nil {
		return nil
	}
	out := new(BackupDRBackupPlan)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BackupDRBackupPlan) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupDRBackupPlanList) DeepCopyInto(out *BackupDRBackupPlanList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]BackupDRBackupPlan, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupDRBackupPlanList.
func (in *BackupDRBackupPlanList) DeepCopy() *BackupDRBackupPlanList {
	if in == nil {
		return nil
	}
	out := new(BackupDRBackupPlanList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BackupDRBackupPlanList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupDRBackupPlanObservedState) DeepCopyInto(out *BackupDRBackupPlanObservedState) {
	*out = *in
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.BackupVaultServiceAccount != nil {
		in, out := &in.BackupVaultServiceAccount, &out.BackupVaultServiceAccount
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupDRBackupPlanObservedState.
func (in *BackupDRBackupPlanObservedState) DeepCopy() *BackupDRBackupPlanObservedState {
	if in == nil {
		return nil
	}
	out := new(BackupDRBackupPlanObservedState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupDRBackupPlanSpec) DeepCopyInto(out *BackupDRBackupPlanSpec) {
	*out = *in
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupDRBackupPlanSpec.
func (in *BackupDRBackupPlanSpec) DeepCopy() *BackupDRBackupPlanSpec {
	if in == nil {
		return nil
	}
	out := new(BackupDRBackupPlanSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupDRBackupPlanStatus) DeepCopyInto(out *BackupDRBackupPlanStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1alpha1.Condition, len(*in))
		copy(*out, *in)
	}
	if in.ObservedGeneration != nil {
		in, out := &in.ObservedGeneration, &out.ObservedGeneration
		*out = new(int64)
		**out = **in
	}
	if in.ExternalRef != nil {
		in, out := &in.ExternalRef, &out.ExternalRef
		*out = new(string)
		**out = **in
	}
	if in.ObservedState != nil {
		in, out := &in.ObservedState, &out.ObservedState
		*out = new(BackupDRBackupPlanObservedState)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupDRBackupPlanStatus.
func (in *BackupDRBackupPlanStatus) DeepCopy() *BackupDRBackupPlanStatus {
	if in == nil {
		return nil
	}
	out := new(BackupDRBackupPlanStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupPlanIdentity) DeepCopyInto(out *BackupPlanIdentity) {
	*out = *in
	if in.parent != nil {
		in, out := &in.parent, &out.parent
		*out = new(BackupPlanParent)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupPlanIdentity.
func (in *BackupPlanIdentity) DeepCopy() *BackupPlanIdentity {
	if in == nil {
		return nil
	}
	out := new(BackupPlanIdentity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupPlanParent) DeepCopyInto(out *BackupPlanParent) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupPlanParent.
func (in *BackupPlanParent) DeepCopy() *BackupPlanParent {
	if in == nil {
		return nil
	}
	out := new(BackupPlanParent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupPlanRef) DeepCopyInto(out *BackupPlanRef) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupPlanRef.
func (in *BackupPlanRef) DeepCopy() *BackupPlanRef {
	if in == nil {
		return nil
	}
	out := new(BackupPlanRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupRule) DeepCopyInto(out *BackupRule) {
	*out = *in
	if in.RuleID != nil {
		in, out := &in.RuleID, &out.RuleID
		*out = new(string)
		**out = **in
	}
	if in.BackupRetentionDays != nil {
		in, out := &in.BackupRetentionDays, &out.BackupRetentionDays
		*out = new(int32)
		**out = **in
	}
	if in.StandardSchedule != nil {
		in, out := &in.StandardSchedule, &out.StandardSchedule
		*out = new(StandardSchedule)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupRule.
func (in *BackupRule) DeepCopy() *BackupRule {
	if in == nil {
		return nil
	}
	out := new(BackupRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupWindow) DeepCopyInto(out *BackupWindow) {
	*out = *in
	if in.StartHourOfDay != nil {
		in, out := &in.StartHourOfDay, &out.StartHourOfDay
		*out = new(int32)
		**out = **in
	}
	if in.EndHourOfDay != nil {
		in, out := &in.EndHourOfDay, &out.EndHourOfDay
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupWindow.
func (in *BackupWindow) DeepCopy() *BackupWindow {
	if in == nil {
		return nil
	}
	out := new(BackupWindow)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StandardSchedule) DeepCopyInto(out *StandardSchedule) {
	*out = *in
	if in.RecurrenceType != nil {
		in, out := &in.RecurrenceType, &out.RecurrenceType
		*out = new(string)
		**out = **in
	}
	if in.HourlyFrequency != nil {
		in, out := &in.HourlyFrequency, &out.HourlyFrequency
		*out = new(int32)
		**out = **in
	}
	if in.DaysOfWeek != nil {
		in, out := &in.DaysOfWeek, &out.DaysOfWeek
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.DaysOfMonth != nil {
		in, out := &in.DaysOfMonth, &out.DaysOfMonth
		*out = make([]int32, len(*in))
		copy(*out, *in)
	}
	if in.WeekDayOfMonth != nil {
		in, out := &in.WeekDayOfMonth, &out.WeekDayOfMonth
		*out = new(WeekDayOfMonth)
		(*in).DeepCopyInto(*out)
	}
	if in.Months != nil {
		in, out := &in.Months, &out.Months
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.BackupWindow != nil {
		in, out := &in.BackupWindow, &out.BackupWindow
		*out = new(BackupWindow)
		(*in).DeepCopyInto(*out)
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StandardSchedule.
func (in *StandardSchedule) DeepCopy() *StandardSchedule {
	if in == nil {
		return nil
	}
	out := new(StandardSchedule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WeekDayOfMonth) DeepCopyInto(out *WeekDayOfMonth) {
	*out = *in
	if in.WeekOfMonth != nil {
		in, out := &in.WeekOfMonth, &out.WeekOfMonth
		*out = new(string)
		**out = **in
	}
	if in.DayOfWeek != nil {
		in, out := &in.DayOfWeek, &out.DayOfWeek
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WeekDayOfMonth.
func (in *WeekDayOfMonth) DeepCopy() *WeekDayOfMonth {
	if in == nil {
		return nil
	}
	out := new(WeekDayOfMonth)
	in.DeepCopyInto(out)
	return out
}
