//go:build !ignore_autogenerated

// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by controller-gen. DO NOT EDIT.

package v1beta1

import (
	k8sv1alpha1 "github.com/GoogleCloudPlatform/k8s-config-connector/pkg/apis/k8s/v1alpha1"
	"github.com/GoogleCloudPlatform/k8s-config-connector/pkg/clients/generated/apis/k8s/v1alpha1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessContextManagerAccessLevel) DeepCopyInto(out *AccessContextManagerAccessLevel) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessContextManagerAccessLevel.
func (in *AccessContextManagerAccessLevel) DeepCopy() *AccessContextManagerAccessLevel {
	if in == nil {
		return nil
	}
	out := new(AccessContextManagerAccessLevel)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AccessContextManagerAccessLevel) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessContextManagerAccessLevelList) DeepCopyInto(out *AccessContextManagerAccessLevelList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AccessContextManagerAccessLevel, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessContextManagerAccessLevelList.
func (in *AccessContextManagerAccessLevelList) DeepCopy() *AccessContextManagerAccessLevelList {
	if in == nil {
		return nil
	}
	out := new(AccessContextManagerAccessLevelList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AccessContextManagerAccessLevelList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessContextManagerAccessLevelSpec) DeepCopyInto(out *AccessContextManagerAccessLevelSpec) {
	*out = *in
	out.AccessPolicyRef = in.AccessPolicyRef
	if in.Basic != nil {
		in, out := &in.Basic, &out.Basic
		*out = new(AccessLevelBasic)
		(*in).DeepCopyInto(*out)
	}
	if in.Custom != nil {
		in, out := &in.Custom, &out.Custom
		*out = new(AccessLevelCustom)
		(*in).DeepCopyInto(*out)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessContextManagerAccessLevelSpec.
func (in *AccessContextManagerAccessLevelSpec) DeepCopy() *AccessContextManagerAccessLevelSpec {
	if in == nil {
		return nil
	}
	out := new(AccessContextManagerAccessLevelSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessContextManagerAccessLevelStatus) DeepCopyInto(out *AccessContextManagerAccessLevelStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1alpha1.Condition, len(*in))
		copy(*out, *in)
	}
	if in.ObservedGeneration != nil {
		in, out := &in.ObservedGeneration, &out.ObservedGeneration
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessContextManagerAccessLevelStatus.
func (in *AccessContextManagerAccessLevelStatus) DeepCopy() *AccessContextManagerAccessLevelStatus {
	if in == nil {
		return nil
	}
	out := new(AccessContextManagerAccessLevelStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessContextManagerAccessPolicy) DeepCopyInto(out *AccessContextManagerAccessPolicy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessContextManagerAccessPolicy.
func (in *AccessContextManagerAccessPolicy) DeepCopy() *AccessContextManagerAccessPolicy {
	if in == nil {
		return nil
	}
	out := new(AccessContextManagerAccessPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AccessContextManagerAccessPolicy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessContextManagerAccessPolicyList) DeepCopyInto(out *AccessContextManagerAccessPolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AccessContextManagerAccessPolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessContextManagerAccessPolicyList.
func (in *AccessContextManagerAccessPolicyList) DeepCopy() *AccessContextManagerAccessPolicyList {
	if in == nil {
		return nil
	}
	out := new(AccessContextManagerAccessPolicyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AccessContextManagerAccessPolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessContextManagerAccessPolicyObservedState) DeepCopyInto(out *AccessContextManagerAccessPolicyObservedState) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessContextManagerAccessPolicyObservedState.
func (in *AccessContextManagerAccessPolicyObservedState) DeepCopy() *AccessContextManagerAccessPolicyObservedState {
	if in == nil {
		return nil
	}
	out := new(AccessContextManagerAccessPolicyObservedState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessContextManagerAccessPolicySpec) DeepCopyInto(out *AccessContextManagerAccessPolicySpec) {
	*out = *in
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessContextManagerAccessPolicySpec.
func (in *AccessContextManagerAccessPolicySpec) DeepCopy() *AccessContextManagerAccessPolicySpec {
	if in == nil {
		return nil
	}
	out := new(AccessContextManagerAccessPolicySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessContextManagerAccessPolicyStatus) DeepCopyInto(out *AccessContextManagerAccessPolicyStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]k8sv1alpha1.Condition, len(*in))
		copy(*out, *in)
	}
	if in.ObservedGeneration != nil {
		in, out := &in.ObservedGeneration, &out.ObservedGeneration
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessContextManagerAccessPolicyStatus.
func (in *AccessContextManagerAccessPolicyStatus) DeepCopy() *AccessContextManagerAccessPolicyStatus {
	if in == nil {
		return nil
	}
	out := new(AccessContextManagerAccessPolicyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessLevelBasic) DeepCopyInto(out *AccessLevelBasic) {
	*out = *in
	if in.CombiningFunction != nil {
		in, out := &in.CombiningFunction, &out.CombiningFunction
		*out = new(string)
		**out = **in
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]AccessLevelBasicConditions, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessLevelBasic.
func (in *AccessLevelBasic) DeepCopy() *AccessLevelBasic {
	if in == nil {
		return nil
	}
	out := new(AccessLevelBasic)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessLevelBasicConditions) DeepCopyInto(out *AccessLevelBasicConditions) {
	*out = *in
	if in.DevicePolicy != nil {
		in, out := &in.DevicePolicy, &out.DevicePolicy
		*out = new(AccessLevelDevicePolicy)
		(*in).DeepCopyInto(*out)
	}
	if in.IpSubnetworks != nil {
		in, out := &in.IpSubnetworks, &out.IpSubnetworks
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Members != nil {
		in, out := &in.Members, &out.Members
		*out = make([]AccessLevelMembers, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Negate != nil {
		in, out := &in.Negate, &out.Negate
		*out = new(bool)
		**out = **in
	}
	if in.Regions != nil {
		in, out := &in.Regions, &out.Regions
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.RequiredAccessLevels != nil {
		in, out := &in.RequiredAccessLevels, &out.RequiredAccessLevels
		*out = make([]AccessLevelRequiredAccessLevels, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessLevelBasicConditions.
func (in *AccessLevelBasicConditions) DeepCopy() *AccessLevelBasicConditions {
	if in == nil {
		return nil
	}
	out := new(AccessLevelBasicConditions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessLevelCustom) DeepCopyInto(out *AccessLevelCustom) {
	*out = *in
	in.Expr.DeepCopyInto(&out.Expr)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessLevelCustom.
func (in *AccessLevelCustom) DeepCopy() *AccessLevelCustom {
	if in == nil {
		return nil
	}
	out := new(AccessLevelCustom)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessLevelDevicePolicy) DeepCopyInto(out *AccessLevelDevicePolicy) {
	*out = *in
	if in.AllowedDeviceManagementLevels != nil {
		in, out := &in.AllowedDeviceManagementLevels, &out.AllowedDeviceManagementLevels
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.AllowedEncryptionStatuses != nil {
		in, out := &in.AllowedEncryptionStatuses, &out.AllowedEncryptionStatuses
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.OsConstraints != nil {
		in, out := &in.OsConstraints, &out.OsConstraints
		*out = make([]AccessLevelOsConstraints, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequireAdminApproval != nil {
		in, out := &in.RequireAdminApproval, &out.RequireAdminApproval
		*out = new(bool)
		**out = **in
	}
	if in.RequireCorpOwned != nil {
		in, out := &in.RequireCorpOwned, &out.RequireCorpOwned
		*out = new(bool)
		**out = **in
	}
	if in.RequireScreenLock != nil {
		in, out := &in.RequireScreenLock, &out.RequireScreenLock
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessLevelDevicePolicy.
func (in *AccessLevelDevicePolicy) DeepCopy() *AccessLevelDevicePolicy {
	if in == nil {
		return nil
	}
	out := new(AccessLevelDevicePolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessLevelExpr) DeepCopyInto(out *AccessLevelExpr) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessLevelExpr.
func (in *AccessLevelExpr) DeepCopy() *AccessLevelExpr {
	if in == nil {
		return nil
	}
	out := new(AccessLevelExpr)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessLevelMembers) DeepCopyInto(out *AccessLevelMembers) {
	*out = *in
	if in.ServiceAccountRef != nil {
		in, out := &in.ServiceAccountRef, &out.ServiceAccountRef
		*out = new(v1alpha1.ResourceRef)
		**out = **in
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessLevelMembers.
func (in *AccessLevelMembers) DeepCopy() *AccessLevelMembers {
	if in == nil {
		return nil
	}
	out := new(AccessLevelMembers)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessLevelOsConstraints) DeepCopyInto(out *AccessLevelOsConstraints) {
	*out = *in
	if in.MinimumVersion != nil {
		in, out := &in.MinimumVersion, &out.MinimumVersion
		*out = new(string)
		**out = **in
	}
	if in.RequireVerifiedChromeOs != nil {
		in, out := &in.RequireVerifiedChromeOs, &out.RequireVerifiedChromeOs
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessLevelOsConstraints.
func (in *AccessLevelOsConstraints) DeepCopy() *AccessLevelOsConstraints {
	if in == nil {
		return nil
	}
	out := new(AccessLevelOsConstraints)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessLevelRequiredAccessLevels) DeepCopyInto(out *AccessLevelRequiredAccessLevels) {
	*out = *in
	if in.External != nil {
		in, out := &in.External, &out.External
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessLevelRequiredAccessLevels.
func (in *AccessLevelRequiredAccessLevels) DeepCopy() *AccessLevelRequiredAccessLevels {
	if in == nil {
		return nil
	}
	out := new(AccessLevelRequiredAccessLevels)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessPolicyIdentity) DeepCopyInto(out *AccessPolicyIdentity) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessPolicyIdentity.
func (in *AccessPolicyIdentity) DeepCopy() *AccessPolicyIdentity {
	if in == nil {
		return nil
	}
	out := new(AccessPolicyIdentity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessPolicyRef) DeepCopyInto(out *AccessPolicyRef) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessPolicyRef.
func (in *AccessPolicyRef) DeepCopy() *AccessPolicyRef {
	if in == nil {
		return nil
	}
	out := new(AccessPolicyRef)
	in.DeepCopyInto(out)
	return out
}
