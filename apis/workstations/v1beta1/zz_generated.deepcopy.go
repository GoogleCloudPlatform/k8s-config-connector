//go:build !ignore_autogenerated

// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by controller-gen. DO NOT EDIT.

package v1beta1

import (
	refsv1beta1 "github.com/GoogleCloudPlatform/k8s-config-connector/apis/refs/v1beta1"
	"github.com/GoogleCloudPlatform/k8s-config-connector/pkg/apis/k8s/v1alpha1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkstationAnnotation) DeepCopyInto(out *WorkstationAnnotation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkstationAnnotation.
func (in *WorkstationAnnotation) DeepCopy() *WorkstationAnnotation {
	if in == nil {
		return nil
	}
	out := new(WorkstationAnnotation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkstationCluster) DeepCopyInto(out *WorkstationCluster) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkstationCluster.
func (in *WorkstationCluster) DeepCopy() *WorkstationCluster {
	if in == nil {
		return nil
	}
	out := new(WorkstationCluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WorkstationCluster) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkstationClusterList) DeepCopyInto(out *WorkstationClusterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]WorkstationCluster, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkstationClusterList.
func (in *WorkstationClusterList) DeepCopy() *WorkstationClusterList {
	if in == nil {
		return nil
	}
	out := new(WorkstationClusterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WorkstationClusterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkstationClusterObservedState) DeepCopyInto(out *WorkstationClusterObservedState) {
	*out = *in
	if in.Uid != nil {
		in, out := &in.Uid, &out.Uid
		*out = new(string)
		**out = **in
	}
	if in.Reconciling != nil {
		in, out := &in.Reconciling, &out.Reconciling
		*out = new(bool)
		**out = **in
	}
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
	if in.DeleteTime != nil {
		in, out := &in.DeleteTime, &out.DeleteTime
		*out = new(string)
		**out = **in
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.ControlPlaneIP != nil {
		in, out := &in.ControlPlaneIP, &out.ControlPlaneIP
		*out = new(string)
		**out = **in
	}
	if in.ClusterHostname != nil {
		in, out := &in.ClusterHostname, &out.ClusterHostname
		*out = new(string)
		**out = **in
	}
	if in.ServiceAttachmentURI != nil {
		in, out := &in.ServiceAttachmentURI, &out.ServiceAttachmentURI
		*out = new(string)
		**out = **in
	}
	if in.Degraded != nil {
		in, out := &in.Degraded, &out.Degraded
		*out = new(bool)
		**out = **in
	}
	if in.GCPConditions != nil {
		in, out := &in.GCPConditions, &out.GCPConditions
		*out = make([]WorkstationServiceGCPCondition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkstationClusterObservedState.
func (in *WorkstationClusterObservedState) DeepCopy() *WorkstationClusterObservedState {
	if in == nil {
		return nil
	}
	out := new(WorkstationClusterObservedState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkstationClusterParent) DeepCopyInto(out *WorkstationClusterParent) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkstationClusterParent.
func (in *WorkstationClusterParent) DeepCopy() *WorkstationClusterParent {
	if in == nil {
		return nil
	}
	out := new(WorkstationClusterParent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkstationClusterRef) DeepCopyInto(out *WorkstationClusterRef) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkstationClusterRef.
func (in *WorkstationClusterRef) DeepCopy() *WorkstationClusterRef {
	if in == nil {
		return nil
	}
	out := new(WorkstationClusterRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkstationClusterSpec) DeepCopyInto(out *WorkstationClusterSpec) {
	*out = *in
	out.ProjectRef = in.ProjectRef
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make([]WorkstationAnnotation, len(*in))
		copy(*out, *in)
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make([]WorkstationLabel, len(*in))
		copy(*out, *in)
	}
	out.NetworkRef = in.NetworkRef
	out.SubnetworkRef = in.SubnetworkRef
	if in.PrivateClusterConfig != nil {
		in, out := &in.PrivateClusterConfig, &out.PrivateClusterConfig
		*out = new(WorkstationCluster_PrivateClusterConfig)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkstationClusterSpec.
func (in *WorkstationClusterSpec) DeepCopy() *WorkstationClusterSpec {
	if in == nil {
		return nil
	}
	out := new(WorkstationClusterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkstationClusterStatus) DeepCopyInto(out *WorkstationClusterStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1alpha1.Condition, len(*in))
		copy(*out, *in)
	}
	if in.ObservedGeneration != nil {
		in, out := &in.ObservedGeneration, &out.ObservedGeneration
		*out = new(int64)
		**out = **in
	}
	if in.ExternalRef != nil {
		in, out := &in.ExternalRef, &out.ExternalRef
		*out = new(string)
		**out = **in
	}
	if in.ObservedState != nil {
		in, out := &in.ObservedState, &out.ObservedState
		*out = new(WorkstationClusterObservedState)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkstationClusterStatus.
func (in *WorkstationClusterStatus) DeepCopy() *WorkstationClusterStatus {
	if in == nil {
		return nil
	}
	out := new(WorkstationClusterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkstationCluster_PrivateClusterConfig) DeepCopyInto(out *WorkstationCluster_PrivateClusterConfig) {
	*out = *in
	if in.EnablePrivateEndpoint != nil {
		in, out := &in.EnablePrivateEndpoint, &out.EnablePrivateEndpoint
		*out = new(bool)
		**out = **in
	}
	if in.AllowedProjects != nil {
		in, out := &in.AllowedProjects, &out.AllowedProjects
		*out = make([]refsv1beta1.ProjectRef, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkstationCluster_PrivateClusterConfig.
func (in *WorkstationCluster_PrivateClusterConfig) DeepCopy() *WorkstationCluster_PrivateClusterConfig {
	if in == nil {
		return nil
	}
	out := new(WorkstationCluster_PrivateClusterConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkstationConfig) DeepCopyInto(out *WorkstationConfig) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkstationConfig.
func (in *WorkstationConfig) DeepCopy() *WorkstationConfig {
	if in == nil {
		return nil
	}
	out := new(WorkstationConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WorkstationConfig) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkstationConfigIdentity) DeepCopyInto(out *WorkstationConfigIdentity) {
	*out = *in
	if in.parent != nil {
		in, out := &in.parent, &out.parent
		*out = new(WorkstationConfigParent)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkstationConfigIdentity.
func (in *WorkstationConfigIdentity) DeepCopy() *WorkstationConfigIdentity {
	if in == nil {
		return nil
	}
	out := new(WorkstationConfigIdentity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkstationConfigList) DeepCopyInto(out *WorkstationConfigList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]WorkstationConfig, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkstationConfigList.
func (in *WorkstationConfigList) DeepCopy() *WorkstationConfigList {
	if in == nil {
		return nil
	}
	out := new(WorkstationConfigList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WorkstationConfigList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkstationConfigObservedState) DeepCopyInto(out *WorkstationConfigObservedState) {
	*out = *in
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
	if in.DeleteTime != nil {
		in, out := &in.DeleteTime, &out.DeleteTime
		*out = new(string)
		**out = **in
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(WorkstationConfig_HostObservedState)
		(*in).DeepCopyInto(*out)
	}
	if in.Degraded != nil {
		in, out := &in.Degraded, &out.Degraded
		*out = new(bool)
		**out = **in
	}
	if in.GCPConditions != nil {
		in, out := &in.GCPConditions, &out.GCPConditions
		*out = make([]WorkstationServiceGCPCondition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkstationConfigObservedState.
func (in *WorkstationConfigObservedState) DeepCopy() *WorkstationConfigObservedState {
	if in == nil {
		return nil
	}
	out := new(WorkstationConfigObservedState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkstationConfigParent) DeepCopyInto(out *WorkstationConfigParent) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkstationConfigParent.
func (in *WorkstationConfigParent) DeepCopy() *WorkstationConfigParent {
	if in == nil {
		return nil
	}
	out := new(WorkstationConfigParent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkstationConfigRef) DeepCopyInto(out *WorkstationConfigRef) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkstationConfigRef.
func (in *WorkstationConfigRef) DeepCopy() *WorkstationConfigRef {
	if in == nil {
		return nil
	}
	out := new(WorkstationConfigRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkstationConfigSpec) DeepCopyInto(out *WorkstationConfigSpec) {
	*out = *in
	if in.Parent != nil {
		in, out := &in.Parent, &out.Parent
		*out = new(WorkstationClusterRef)
		**out = **in
	}
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make([]WorkstationAnnotation, len(*in))
		copy(*out, *in)
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make([]WorkstationLabel, len(*in))
		copy(*out, *in)
	}
	if in.IdleTimeout != nil {
		in, out := &in.IdleTimeout, &out.IdleTimeout
		*out = new(string)
		**out = **in
	}
	if in.RunningTimeout != nil {
		in, out := &in.RunningTimeout, &out.RunningTimeout
		*out = new(string)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(WorkstationConfig_Host)
		(*in).DeepCopyInto(*out)
	}
	if in.PersistentDirectories != nil {
		in, out := &in.PersistentDirectories, &out.PersistentDirectories
		*out = make([]WorkstationConfig_PersistentDirectory, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Container != nil {
		in, out := &in.Container, &out.Container
		*out = new(WorkstationConfig_Container)
		(*in).DeepCopyInto(*out)
	}
	if in.EncryptionKey != nil {
		in, out := &in.EncryptionKey, &out.EncryptionKey
		*out = new(WorkstationConfig_CustomerEncryptionKey)
		(*in).DeepCopyInto(*out)
	}
	if in.ReadinessChecks != nil {
		in, out := &in.ReadinessChecks, &out.ReadinessChecks
		*out = make([]WorkstationConfig_ReadinessCheck, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ReplicaZones != nil {
		in, out := &in.ReplicaZones, &out.ReplicaZones
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkstationConfigSpec.
func (in *WorkstationConfigSpec) DeepCopy() *WorkstationConfigSpec {
	if in == nil {
		return nil
	}
	out := new(WorkstationConfigSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkstationConfigStatus) DeepCopyInto(out *WorkstationConfigStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1alpha1.Condition, len(*in))
		copy(*out, *in)
	}
	if in.ObservedGeneration != nil {
		in, out := &in.ObservedGeneration, &out.ObservedGeneration
		*out = new(int64)
		**out = **in
	}
	if in.ExternalRef != nil {
		in, out := &in.ExternalRef, &out.ExternalRef
		*out = new(string)
		**out = **in
	}
	if in.ObservedState != nil {
		in, out := &in.ObservedState, &out.ObservedState
		*out = new(WorkstationConfigObservedState)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkstationConfigStatus.
func (in *WorkstationConfigStatus) DeepCopy() *WorkstationConfigStatus {
	if in == nil {
		return nil
	}
	out := new(WorkstationConfigStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkstationConfig_Container) DeepCopyInto(out *WorkstationConfig_Container) {
	*out = *in
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.Command != nil {
		in, out := &in.Command, &out.Command
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Args != nil {
		in, out := &in.Args, &out.Args
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Env != nil {
		in, out := &in.Env, &out.Env
		*out = make([]WorkstationConfig_Container_EnvVar, len(*in))
		copy(*out, *in)
	}
	if in.WorkingDir != nil {
		in, out := &in.WorkingDir, &out.WorkingDir
		*out = new(string)
		**out = **in
	}
	if in.RunAsUser != nil {
		in, out := &in.RunAsUser, &out.RunAsUser
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkstationConfig_Container.
func (in *WorkstationConfig_Container) DeepCopy() *WorkstationConfig_Container {
	if in == nil {
		return nil
	}
	out := new(WorkstationConfig_Container)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkstationConfig_Container_EnvVar) DeepCopyInto(out *WorkstationConfig_Container_EnvVar) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkstationConfig_Container_EnvVar.
func (in *WorkstationConfig_Container_EnvVar) DeepCopy() *WorkstationConfig_Container_EnvVar {
	if in == nil {
		return nil
	}
	out := new(WorkstationConfig_Container_EnvVar)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkstationConfig_CustomerEncryptionKey) DeepCopyInto(out *WorkstationConfig_CustomerEncryptionKey) {
	*out = *in
	if in.KmsCryptoKeyRef != nil {
		in, out := &in.KmsCryptoKeyRef, &out.KmsCryptoKeyRef
		*out = new(refsv1beta1.KMSCryptoKeyRef)
		**out = **in
	}
	if in.ServiceAccountRef != nil {
		in, out := &in.ServiceAccountRef, &out.ServiceAccountRef
		*out = new(refsv1beta1.IAMServiceAccountRef)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkstationConfig_CustomerEncryptionKey.
func (in *WorkstationConfig_CustomerEncryptionKey) DeepCopy() *WorkstationConfig_CustomerEncryptionKey {
	if in == nil {
		return nil
	}
	out := new(WorkstationConfig_CustomerEncryptionKey)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkstationConfig_Host) DeepCopyInto(out *WorkstationConfig_Host) {
	*out = *in
	if in.GceInstance != nil {
		in, out := &in.GceInstance, &out.GceInstance
		*out = new(WorkstationConfig_Host_GceInstance)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkstationConfig_Host.
func (in *WorkstationConfig_Host) DeepCopy() *WorkstationConfig_Host {
	if in == nil {
		return nil
	}
	out := new(WorkstationConfig_Host)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkstationConfig_HostObservedState) DeepCopyInto(out *WorkstationConfig_HostObservedState) {
	*out = *in
	if in.GceInstance != nil {
		in, out := &in.GceInstance, &out.GceInstance
		*out = new(WorkstationConfig_Host_GceInstanceObservedState)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkstationConfig_HostObservedState.
func (in *WorkstationConfig_HostObservedState) DeepCopy() *WorkstationConfig_HostObservedState {
	if in == nil {
		return nil
	}
	out := new(WorkstationConfig_HostObservedState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkstationConfig_Host_GceInstance) DeepCopyInto(out *WorkstationConfig_Host_GceInstance) {
	*out = *in
	if in.MachineType != nil {
		in, out := &in.MachineType, &out.MachineType
		*out = new(string)
		**out = **in
	}
	if in.ServiceAccountRef != nil {
		in, out := &in.ServiceAccountRef, &out.ServiceAccountRef
		*out = new(refsv1beta1.IAMServiceAccountRef)
		**out = **in
	}
	if in.ServiceAccountScopes != nil {
		in, out := &in.ServiceAccountScopes, &out.ServiceAccountScopes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.PoolSize != nil {
		in, out := &in.PoolSize, &out.PoolSize
		*out = new(int32)
		**out = **in
	}
	if in.DisablePublicIPAddresses != nil {
		in, out := &in.DisablePublicIPAddresses, &out.DisablePublicIPAddresses
		*out = new(bool)
		**out = **in
	}
	if in.EnableNestedVirtualization != nil {
		in, out := &in.EnableNestedVirtualization, &out.EnableNestedVirtualization
		*out = new(bool)
		**out = **in
	}
	if in.ShieldedInstanceConfig != nil {
		in, out := &in.ShieldedInstanceConfig, &out.ShieldedInstanceConfig
		*out = new(WorkstationConfig_Host_GceInstance_GceShieldedInstanceConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.ConfidentialInstanceConfig != nil {
		in, out := &in.ConfidentialInstanceConfig, &out.ConfidentialInstanceConfig
		*out = new(WorkstationConfig_Host_GceInstance_GceConfidentialInstanceConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.BootDiskSizeGB != nil {
		in, out := &in.BootDiskSizeGB, &out.BootDiskSizeGB
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkstationConfig_Host_GceInstance.
func (in *WorkstationConfig_Host_GceInstance) DeepCopy() *WorkstationConfig_Host_GceInstance {
	if in == nil {
		return nil
	}
	out := new(WorkstationConfig_Host_GceInstance)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkstationConfig_Host_GceInstanceObservedState) DeepCopyInto(out *WorkstationConfig_Host_GceInstanceObservedState) {
	*out = *in
	if in.PooledInstances != nil {
		in, out := &in.PooledInstances, &out.PooledInstances
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkstationConfig_Host_GceInstanceObservedState.
func (in *WorkstationConfig_Host_GceInstanceObservedState) DeepCopy() *WorkstationConfig_Host_GceInstanceObservedState {
	if in == nil {
		return nil
	}
	out := new(WorkstationConfig_Host_GceInstanceObservedState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkstationConfig_Host_GceInstance_GceConfidentialInstanceConfig) DeepCopyInto(out *WorkstationConfig_Host_GceInstance_GceConfidentialInstanceConfig) {
	*out = *in
	if in.EnableConfidentialCompute != nil {
		in, out := &in.EnableConfidentialCompute, &out.EnableConfidentialCompute
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkstationConfig_Host_GceInstance_GceConfidentialInstanceConfig.
func (in *WorkstationConfig_Host_GceInstance_GceConfidentialInstanceConfig) DeepCopy() *WorkstationConfig_Host_GceInstance_GceConfidentialInstanceConfig {
	if in == nil {
		return nil
	}
	out := new(WorkstationConfig_Host_GceInstance_GceConfidentialInstanceConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkstationConfig_Host_GceInstance_GceShieldedInstanceConfig) DeepCopyInto(out *WorkstationConfig_Host_GceInstance_GceShieldedInstanceConfig) {
	*out = *in
	if in.EnableSecureBoot != nil {
		in, out := &in.EnableSecureBoot, &out.EnableSecureBoot
		*out = new(bool)
		**out = **in
	}
	if in.EnableVTPM != nil {
		in, out := &in.EnableVTPM, &out.EnableVTPM
		*out = new(bool)
		**out = **in
	}
	if in.EnableIntegrityMonitoring != nil {
		in, out := &in.EnableIntegrityMonitoring, &out.EnableIntegrityMonitoring
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkstationConfig_Host_GceInstance_GceShieldedInstanceConfig.
func (in *WorkstationConfig_Host_GceInstance_GceShieldedInstanceConfig) DeepCopy() *WorkstationConfig_Host_GceInstance_GceShieldedInstanceConfig {
	if in == nil {
		return nil
	}
	out := new(WorkstationConfig_Host_GceInstance_GceShieldedInstanceConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkstationConfig_PersistentDirectory) DeepCopyInto(out *WorkstationConfig_PersistentDirectory) {
	*out = *in
	if in.GcePD != nil {
		in, out := &in.GcePD, &out.GcePD
		*out = new(WorkstationConfig_PersistentDirectory_GceRegionalPersistentDisk)
		(*in).DeepCopyInto(*out)
	}
	if in.MountPath != nil {
		in, out := &in.MountPath, &out.MountPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkstationConfig_PersistentDirectory.
func (in *WorkstationConfig_PersistentDirectory) DeepCopy() *WorkstationConfig_PersistentDirectory {
	if in == nil {
		return nil
	}
	out := new(WorkstationConfig_PersistentDirectory)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkstationConfig_PersistentDirectory_GceRegionalPersistentDisk) DeepCopyInto(out *WorkstationConfig_PersistentDirectory_GceRegionalPersistentDisk) {
	*out = *in
	if in.SizeGB != nil {
		in, out := &in.SizeGB, &out.SizeGB
		*out = new(int32)
		**out = **in
	}
	if in.FSType != nil {
		in, out := &in.FSType, &out.FSType
		*out = new(string)
		**out = **in
	}
	if in.DiskType != nil {
		in, out := &in.DiskType, &out.DiskType
		*out = new(string)
		**out = **in
	}
	if in.SourceSnapshot != nil {
		in, out := &in.SourceSnapshot, &out.SourceSnapshot
		*out = new(string)
		**out = **in
	}
	if in.ReclaimPolicy != nil {
		in, out := &in.ReclaimPolicy, &out.ReclaimPolicy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkstationConfig_PersistentDirectory_GceRegionalPersistentDisk.
func (in *WorkstationConfig_PersistentDirectory_GceRegionalPersistentDisk) DeepCopy() *WorkstationConfig_PersistentDirectory_GceRegionalPersistentDisk {
	if in == nil {
		return nil
	}
	out := new(WorkstationConfig_PersistentDirectory_GceRegionalPersistentDisk)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkstationConfig_ReadinessCheck) DeepCopyInto(out *WorkstationConfig_ReadinessCheck) {
	*out = *in
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkstationConfig_ReadinessCheck.
func (in *WorkstationConfig_ReadinessCheck) DeepCopy() *WorkstationConfig_ReadinessCheck {
	if in == nil {
		return nil
	}
	out := new(WorkstationConfig_ReadinessCheck)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkstationLabel) DeepCopyInto(out *WorkstationLabel) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkstationLabel.
func (in *WorkstationLabel) DeepCopy() *WorkstationLabel {
	if in == nil {
		return nil
	}
	out := new(WorkstationLabel)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkstationServiceGCPCondition) DeepCopyInto(out *WorkstationServiceGCPCondition) {
	*out = *in
	if in.Code != nil {
		in, out := &in.Code, &out.Code
		*out = new(int32)
		**out = **in
	}
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkstationServiceGCPCondition.
func (in *WorkstationServiceGCPCondition) DeepCopy() *WorkstationServiceGCPCondition {
	if in == nil {
		return nil
	}
	out := new(WorkstationServiceGCPCondition)
	in.DeepCopyInto(out)
	return out
}
