//go:build !ignore_autogenerated

// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/GoogleCloudPlatform/k8s-config-connector/apis/refs/v1beta1"
	apisk8sv1alpha1 "github.com/GoogleCloudPlatform/k8s-config-connector/pkg/apis/k8s/v1alpha1"
	k8sv1alpha1 "github.com/GoogleCloudPlatform/k8s-config-connector/pkg/clients/generated/apis/k8s/v1alpha1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllocationPolicy) DeepCopyInto(out *AllocationPolicy) {
	*out = *in
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(AllocationPolicy_LocationPolicy)
		(*in).DeepCopyInto(*out)
	}
	if in.Instances != nil {
		in, out := &in.Instances, &out.Instances
		*out = make([]AllocationPolicy_InstancePolicyOrTemplate, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceAccountRef != nil {
		in, out := &in.ServiceAccountRef, &out.ServiceAccountRef
		*out = new(v1beta1.IAMServiceAccountRef)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(AllocationPolicy_NetworkPolicy)
		(*in).DeepCopyInto(*out)
	}
	if in.Placement != nil {
		in, out := &in.Placement, &out.Placement
		*out = new(AllocationPolicy_PlacementPolicy)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllocationPolicy.
func (in *AllocationPolicy) DeepCopy() *AllocationPolicy {
	if in == nil {
		return nil
	}
	out := new(AllocationPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllocationPolicy_Accelerator) DeepCopyInto(out *AllocationPolicy_Accelerator) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(int64)
		**out = **in
	}
	if in.InstallGpuDrivers != nil {
		in, out := &in.InstallGpuDrivers, &out.InstallGpuDrivers
		*out = new(bool)
		**out = **in
	}
	if in.DriverVersion != nil {
		in, out := &in.DriverVersion, &out.DriverVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllocationPolicy_Accelerator.
func (in *AllocationPolicy_Accelerator) DeepCopy() *AllocationPolicy_Accelerator {
	if in == nil {
		return nil
	}
	out := new(AllocationPolicy_Accelerator)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllocationPolicy_AttachedDisk) DeepCopyInto(out *AllocationPolicy_AttachedDisk) {
	*out = *in
	if in.NewDisk != nil {
		in, out := &in.NewDisk, &out.NewDisk
		*out = new(AllocationPolicy_Disk)
		(*in).DeepCopyInto(*out)
	}
	if in.ExistingDisk != nil {
		in, out := &in.ExistingDisk, &out.ExistingDisk
		*out = new(string)
		**out = **in
	}
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllocationPolicy_AttachedDisk.
func (in *AllocationPolicy_AttachedDisk) DeepCopy() *AllocationPolicy_AttachedDisk {
	if in == nil {
		return nil
	}
	out := new(AllocationPolicy_AttachedDisk)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllocationPolicy_Disk) DeepCopyInto(out *AllocationPolicy_Disk) {
	*out = *in
	if in.ImageRef != nil {
		in, out := &in.ImageRef, &out.ImageRef
		*out = new(k8sv1alpha1.ResourceRef)
		**out = **in
	}
	if in.Snapshot != nil {
		in, out := &in.Snapshot, &out.Snapshot
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.SizeGB != nil {
		in, out := &in.SizeGB, &out.SizeGB
		*out = new(int64)
		**out = **in
	}
	if in.DiskInterface != nil {
		in, out := &in.DiskInterface, &out.DiskInterface
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllocationPolicy_Disk.
func (in *AllocationPolicy_Disk) DeepCopy() *AllocationPolicy_Disk {
	if in == nil {
		return nil
	}
	out := new(AllocationPolicy_Disk)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllocationPolicy_InstancePolicy) DeepCopyInto(out *AllocationPolicy_InstancePolicy) {
	*out = *in
	if in.MachineType != nil {
		in, out := &in.MachineType, &out.MachineType
		*out = new(string)
		**out = **in
	}
	if in.MinCPUPlatform != nil {
		in, out := &in.MinCPUPlatform, &out.MinCPUPlatform
		*out = new(string)
		**out = **in
	}
	if in.ProvisioningModel != nil {
		in, out := &in.ProvisioningModel, &out.ProvisioningModel
		*out = new(string)
		**out = **in
	}
	if in.Accelerators != nil {
		in, out := &in.Accelerators, &out.Accelerators
		*out = make([]AllocationPolicy_Accelerator, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BootDisk != nil {
		in, out := &in.BootDisk, &out.BootDisk
		*out = new(AllocationPolicy_Disk)
		(*in).DeepCopyInto(*out)
	}
	if in.Disks != nil {
		in, out := &in.Disks, &out.Disks
		*out = make([]AllocationPolicy_AttachedDisk, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Reservation != nil {
		in, out := &in.Reservation, &out.Reservation
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllocationPolicy_InstancePolicy.
func (in *AllocationPolicy_InstancePolicy) DeepCopy() *AllocationPolicy_InstancePolicy {
	if in == nil {
		return nil
	}
	out := new(AllocationPolicy_InstancePolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllocationPolicy_InstancePolicyOrTemplate) DeepCopyInto(out *AllocationPolicy_InstancePolicyOrTemplate) {
	*out = *in
	if in.Policy != nil {
		in, out := &in.Policy, &out.Policy
		*out = new(AllocationPolicy_InstancePolicy)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceTemplate != nil {
		in, out := &in.InstanceTemplate, &out.InstanceTemplate
		*out = new(string)
		**out = **in
	}
	if in.InstallGpuDrivers != nil {
		in, out := &in.InstallGpuDrivers, &out.InstallGpuDrivers
		*out = new(bool)
		**out = **in
	}
	if in.InstallOpsAgent != nil {
		in, out := &in.InstallOpsAgent, &out.InstallOpsAgent
		*out = new(bool)
		**out = **in
	}
	if in.BlockProjectSSHKeys != nil {
		in, out := &in.BlockProjectSSHKeys, &out.BlockProjectSSHKeys
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllocationPolicy_InstancePolicyOrTemplate.
func (in *AllocationPolicy_InstancePolicyOrTemplate) DeepCopy() *AllocationPolicy_InstancePolicyOrTemplate {
	if in == nil {
		return nil
	}
	out := new(AllocationPolicy_InstancePolicyOrTemplate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllocationPolicy_LocationPolicy) DeepCopyInto(out *AllocationPolicy_LocationPolicy) {
	*out = *in
	if in.AllowedLocations != nil {
		in, out := &in.AllowedLocations, &out.AllowedLocations
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllocationPolicy_LocationPolicy.
func (in *AllocationPolicy_LocationPolicy) DeepCopy() *AllocationPolicy_LocationPolicy {
	if in == nil {
		return nil
	}
	out := new(AllocationPolicy_LocationPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllocationPolicy_NetworkInterface) DeepCopyInto(out *AllocationPolicy_NetworkInterface) {
	*out = *in
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(v1beta1.ComputeNetworkRef)
		**out = **in
	}
	if in.SubnetworkRef != nil {
		in, out := &in.SubnetworkRef, &out.SubnetworkRef
		*out = new(v1beta1.ComputeSubnetworkRef)
		**out = **in
	}
	if in.NoExternalIPAddress != nil {
		in, out := &in.NoExternalIPAddress, &out.NoExternalIPAddress
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllocationPolicy_NetworkInterface.
func (in *AllocationPolicy_NetworkInterface) DeepCopy() *AllocationPolicy_NetworkInterface {
	if in == nil {
		return nil
	}
	out := new(AllocationPolicy_NetworkInterface)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllocationPolicy_NetworkPolicy) DeepCopyInto(out *AllocationPolicy_NetworkPolicy) {
	*out = *in
	if in.NetworkInterfaces != nil {
		in, out := &in.NetworkInterfaces, &out.NetworkInterfaces
		*out = make([]AllocationPolicy_NetworkInterface, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllocationPolicy_NetworkPolicy.
func (in *AllocationPolicy_NetworkPolicy) DeepCopy() *AllocationPolicy_NetworkPolicy {
	if in == nil {
		return nil
	}
	out := new(AllocationPolicy_NetworkPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllocationPolicy_PlacementPolicy) DeepCopyInto(out *AllocationPolicy_PlacementPolicy) {
	*out = *in
	if in.Collocation != nil {
		in, out := &in.Collocation, &out.Collocation
		*out = new(string)
		**out = **in
	}
	if in.MaxDistance != nil {
		in, out := &in.MaxDistance, &out.MaxDistance
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllocationPolicy_PlacementPolicy.
func (in *AllocationPolicy_PlacementPolicy) DeepCopy() *AllocationPolicy_PlacementPolicy {
	if in == nil {
		return nil
	}
	out := new(AllocationPolicy_PlacementPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BatchJob) DeepCopyInto(out *BatchJob) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BatchJob.
func (in *BatchJob) DeepCopy() *BatchJob {
	if in == nil {
		return nil
	}
	out := new(BatchJob)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BatchJob) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BatchJobList) DeepCopyInto(out *BatchJobList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]BatchJob, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BatchJobList.
func (in *BatchJobList) DeepCopy() *BatchJobList {
	if in == nil {
		return nil
	}
	out := new(BatchJobList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BatchJobList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BatchJobObservedState) DeepCopyInto(out *BatchJobObservedState) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Uid != nil {
		in, out := &in.Uid, &out.Uid
		*out = new(string)
		**out = **in
	}
	if in.TaskGroups != nil {
		in, out := &in.TaskGroups, &out.TaskGroups
		*out = make([]TaskGroupObservedState, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(JobStatus)
		(*in).DeepCopyInto(*out)
	}
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BatchJobObservedState.
func (in *BatchJobObservedState) DeepCopy() *BatchJobObservedState {
	if in == nil {
		return nil
	}
	out := new(BatchJobObservedState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BatchJobSpec) DeepCopyInto(out *BatchJobSpec) {
	*out = *in
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(int64)
		**out = **in
	}
	if in.TaskGroups != nil {
		in, out := &in.TaskGroups, &out.TaskGroups
		*out = make([]TaskGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AllocationPolicy != nil {
		in, out := &in.AllocationPolicy, &out.AllocationPolicy
		*out = new(AllocationPolicy)
		(*in).DeepCopyInto(*out)
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.LogsPolicy != nil {
		in, out := &in.LogsPolicy, &out.LogsPolicy
		*out = new(LogsPolicy)
		(*in).DeepCopyInto(*out)
	}
	if in.Notifications != nil {
		in, out := &in.Notifications, &out.Notifications
		*out = make([]JobNotification, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Parent != nil {
		in, out := &in.Parent, &out.Parent
		*out = new(Parent)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BatchJobSpec.
func (in *BatchJobSpec) DeepCopy() *BatchJobSpec {
	if in == nil {
		return nil
	}
	out := new(BatchJobSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BatchJobStatus) DeepCopyInto(out *BatchJobStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]k8sv1alpha1.Condition, len(*in))
		copy(*out, *in)
	}
	if in.ObservedGeneration != nil {
		in, out := &in.ObservedGeneration, &out.ObservedGeneration
		*out = new(int64)
		**out = **in
	}
	if in.ExternalRef != nil {
		in, out := &in.ExternalRef, &out.ExternalRef
		*out = new(string)
		**out = **in
	}
	if in.ObservedState != nil {
		in, out := &in.ObservedState, &out.ObservedState
		*out = new(BatchJobObservedState)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BatchJobStatus.
func (in *BatchJobStatus) DeepCopy() *BatchJobStatus {
	if in == nil {
		return nil
	}
	out := new(BatchJobStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BatchTask) DeepCopyInto(out *BatchTask) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BatchTask.
func (in *BatchTask) DeepCopy() *BatchTask {
	if in == nil {
		return nil
	}
	out := new(BatchTask)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BatchTask) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BatchTaskList) DeepCopyInto(out *BatchTaskList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]BatchTask, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BatchTaskList.
func (in *BatchTaskList) DeepCopy() *BatchTaskList {
	if in == nil {
		return nil
	}
	out := new(BatchTaskList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BatchTaskList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BatchTaskObservedState) DeepCopyInto(out *BatchTaskObservedState) {
	*out = *in
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(TaskStatus)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BatchTaskObservedState.
func (in *BatchTaskObservedState) DeepCopy() *BatchTaskObservedState {
	if in == nil {
		return nil
	}
	out := new(BatchTaskObservedState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BatchTaskSpec) DeepCopyInto(out *BatchTaskSpec) {
	*out = *in
	in.Parent.DeepCopyInto(&out.Parent)
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BatchTaskSpec.
func (in *BatchTaskSpec) DeepCopy() *BatchTaskSpec {
	if in == nil {
		return nil
	}
	out := new(BatchTaskSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BatchTaskStatus) DeepCopyInto(out *BatchTaskStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apisk8sv1alpha1.Condition, len(*in))
		copy(*out, *in)
	}
	if in.ObservedGeneration != nil {
		in, out := &in.ObservedGeneration, &out.ObservedGeneration
		*out = new(int64)
		**out = **in
	}
	if in.ExternalRef != nil {
		in, out := &in.ExternalRef, &out.ExternalRef
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ObservedState != nil {
		in, out := &in.ObservedState, &out.ObservedState
		*out = new(BatchTaskObservedState)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BatchTaskStatus.
func (in *BatchTaskStatus) DeepCopy() *BatchTaskStatus {
	if in == nil {
		return nil
	}
	out := new(BatchTaskStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComputeResource) DeepCopyInto(out *ComputeResource) {
	*out = *in
	if in.CPUMilli != nil {
		in, out := &in.CPUMilli, &out.CPUMilli
		*out = new(int64)
		**out = **in
	}
	if in.MemoryMiB != nil {
		in, out := &in.MemoryMiB, &out.MemoryMiB
		*out = new(int64)
		**out = **in
	}
	if in.BootDiskMiB != nil {
		in, out := &in.BootDiskMiB, &out.BootDiskMiB
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComputeResource.
func (in *ComputeResource) DeepCopy() *ComputeResource {
	if in == nil {
		return nil
	}
	out := new(ComputeResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Environment) DeepCopyInto(out *Environment) {
	*out = *in
	if in.Variables != nil {
		in, out := &in.Variables, &out.Variables
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.SecretVariables != nil {
		in, out := &in.SecretVariables, &out.SecretVariables
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.EncryptedVariables != nil {
		in, out := &in.EncryptedVariables, &out.EncryptedVariables
		*out = new(Environment_KMSEnvMap)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Environment.
func (in *Environment) DeepCopy() *Environment {
	if in == nil {
		return nil
	}
	out := new(Environment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Environment_KMSEnvMap) DeepCopyInto(out *Environment_KMSEnvMap) {
	*out = *in
	if in.KMSKeyRef != nil {
		in, out := &in.KMSKeyRef, &out.KMSKeyRef
		*out = new(v1beta1.KMSCryptoKeyRef)
		**out = **in
	}
	if in.CipherText != nil {
		in, out := &in.CipherText, &out.CipherText
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Environment_KMSEnvMap.
func (in *Environment_KMSEnvMap) DeepCopy() *Environment_KMSEnvMap {
	if in == nil {
		return nil
	}
	out := new(Environment_KMSEnvMap)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCS) DeepCopyInto(out *GCS) {
	*out = *in
	if in.RemotePath != nil {
		in, out := &in.RemotePath, &out.RemotePath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCS.
func (in *GCS) DeepCopy() *GCS {
	if in == nil {
		return nil
	}
	out := new(GCS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobIdentity) DeepCopyInto(out *JobIdentity) {
	*out = *in
	if in.parent != nil {
		in, out := &in.parent, &out.parent
		*out = new(JobParent)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobIdentity.
func (in *JobIdentity) DeepCopy() *JobIdentity {
	if in == nil {
		return nil
	}
	out := new(JobIdentity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobNotification) DeepCopyInto(out *JobNotification) {
	*out = *in
	if in.PubsubTopicRef != nil {
		in, out := &in.PubsubTopicRef, &out.PubsubTopicRef
		*out = new(v1beta1.PubSubTopicRef)
		**out = **in
	}
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(JobNotification_Message)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobNotification.
func (in *JobNotification) DeepCopy() *JobNotification {
	if in == nil {
		return nil
	}
	out := new(JobNotification)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobNotification_Message) DeepCopyInto(out *JobNotification_Message) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.NewJobState != nil {
		in, out := &in.NewJobState, &out.NewJobState
		*out = new(string)
		**out = **in
	}
	if in.NewTaskState != nil {
		in, out := &in.NewTaskState, &out.NewTaskState
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobNotification_Message.
func (in *JobNotification_Message) DeepCopy() *JobNotification_Message {
	if in == nil {
		return nil
	}
	out := new(JobNotification_Message)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobParent) DeepCopyInto(out *JobParent) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobParent.
func (in *JobParent) DeepCopy() *JobParent {
	if in == nil {
		return nil
	}
	out := new(JobParent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobRef) DeepCopyInto(out *JobRef) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobRef.
func (in *JobRef) DeepCopy() *JobRef {
	if in == nil {
		return nil
	}
	out := new(JobRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobStatus) DeepCopyInto(out *JobStatus) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.StatusEvents != nil {
		in, out := &in.StatusEvents, &out.StatusEvents
		*out = make([]StatusEvent, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RunDuration != nil {
		in, out := &in.RunDuration, &out.RunDuration
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobStatus.
func (in *JobStatus) DeepCopy() *JobStatus {
	if in == nil {
		return nil
	}
	out := new(JobStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobStatus_InstanceStatus) DeepCopyInto(out *JobStatus_InstanceStatus) {
	*out = *in
	if in.MachineType != nil {
		in, out := &in.MachineType, &out.MachineType
		*out = new(string)
		**out = **in
	}
	if in.ProvisioningModel != nil {
		in, out := &in.ProvisioningModel, &out.ProvisioningModel
		*out = new(string)
		**out = **in
	}
	if in.TaskPack != nil {
		in, out := &in.TaskPack, &out.TaskPack
		*out = new(int64)
		**out = **in
	}
	if in.BootDisk != nil {
		in, out := &in.BootDisk, &out.BootDisk
		*out = new(AllocationPolicy_Disk)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobStatus_InstanceStatus.
func (in *JobStatus_InstanceStatus) DeepCopy() *JobStatus_InstanceStatus {
	if in == nil {
		return nil
	}
	out := new(JobStatus_InstanceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobStatus_TaskGroupStatus) DeepCopyInto(out *JobStatus_TaskGroupStatus) {
	*out = *in
	if in.Counts != nil {
		in, out := &in.Counts, &out.Counts
		*out = make(map[string]int64, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Instances != nil {
		in, out := &in.Instances, &out.Instances
		*out = make([]JobStatus_InstanceStatus, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobStatus_TaskGroupStatus.
func (in *JobStatus_TaskGroupStatus) DeepCopy() *JobStatus_TaskGroupStatus {
	if in == nil {
		return nil
	}
	out := new(JobStatus_TaskGroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LifecyclePolicy) DeepCopyInto(out *LifecyclePolicy) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.ActionCondition != nil {
		in, out := &in.ActionCondition, &out.ActionCondition
		*out = new(LifecyclePolicy_ActionCondition)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LifecyclePolicy.
func (in *LifecyclePolicy) DeepCopy() *LifecyclePolicy {
	if in == nil {
		return nil
	}
	out := new(LifecyclePolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LifecyclePolicy_ActionCondition) DeepCopyInto(out *LifecyclePolicy_ActionCondition) {
	*out = *in
	if in.ExitCodes != nil {
		in, out := &in.ExitCodes, &out.ExitCodes
		*out = make([]int32, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LifecyclePolicy_ActionCondition.
func (in *LifecyclePolicy_ActionCondition) DeepCopy() *LifecyclePolicy_ActionCondition {
	if in == nil {
		return nil
	}
	out := new(LifecyclePolicy_ActionCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogsPolicy) DeepCopyInto(out *LogsPolicy) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.LogsPath != nil {
		in, out := &in.LogsPath, &out.LogsPath
		*out = new(string)
		**out = **in
	}
	if in.CloudLoggingOption != nil {
		in, out := &in.CloudLoggingOption, &out.CloudLoggingOption
		*out = new(LogsPolicy_CloudLoggingOption)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogsPolicy.
func (in *LogsPolicy) DeepCopy() *LogsPolicy {
	if in == nil {
		return nil
	}
	out := new(LogsPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogsPolicy_CloudLoggingOption) DeepCopyInto(out *LogsPolicy_CloudLoggingOption) {
	*out = *in
	if in.UseGenericTaskMonitoredResource != nil {
		in, out := &in.UseGenericTaskMonitoredResource, &out.UseGenericTaskMonitoredResource
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogsPolicy_CloudLoggingOption.
func (in *LogsPolicy_CloudLoggingOption) DeepCopy() *LogsPolicy_CloudLoggingOption {
	if in == nil {
		return nil
	}
	out := new(LogsPolicy_CloudLoggingOption)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Nfs) DeepCopyInto(out *Nfs) {
	*out = *in
	if in.Server != nil {
		in, out := &in.Server, &out.Server
		*out = new(string)
		**out = **in
	}
	if in.RemotePath != nil {
		in, out := &in.RemotePath, &out.RemotePath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Nfs.
func (in *Nfs) DeepCopy() *Nfs {
	if in == nil {
		return nil
	}
	out := new(Nfs)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Parent) DeepCopyInto(out *Parent) {
	*out = *in
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.ProjectRef != nil {
		in, out := &in.ProjectRef, &out.ProjectRef
		*out = new(v1beta1.ProjectRef)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Parent.
func (in *Parent) DeepCopy() *Parent {
	if in == nil {
		return nil
	}
	out := new(Parent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Runnable) DeepCopyInto(out *Runnable) {
	*out = *in
	if in.Container != nil {
		in, out := &in.Container, &out.Container
		*out = new(Runnable_Container)
		(*in).DeepCopyInto(*out)
	}
	if in.Script != nil {
		in, out := &in.Script, &out.Script
		*out = new(Runnable_Script)
		(*in).DeepCopyInto(*out)
	}
	if in.Barrier != nil {
		in, out := &in.Barrier, &out.Barrier
		*out = new(Runnable_Barrier)
		(*in).DeepCopyInto(*out)
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.IgnoreExitStatus != nil {
		in, out := &in.IgnoreExitStatus, &out.IgnoreExitStatus
		*out = new(bool)
		**out = **in
	}
	if in.Background != nil {
		in, out := &in.Background, &out.Background
		*out = new(bool)
		**out = **in
	}
	if in.AlwaysRun != nil {
		in, out := &in.AlwaysRun, &out.AlwaysRun
		*out = new(bool)
		**out = **in
	}
	if in.Environment != nil {
		in, out := &in.Environment, &out.Environment
		*out = new(Environment)
		(*in).DeepCopyInto(*out)
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Runnable.
func (in *Runnable) DeepCopy() *Runnable {
	if in == nil {
		return nil
	}
	out := new(Runnable)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Runnable_Barrier) DeepCopyInto(out *Runnable_Barrier) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Runnable_Barrier.
func (in *Runnable_Barrier) DeepCopy() *Runnable_Barrier {
	if in == nil {
		return nil
	}
	out := new(Runnable_Barrier)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Runnable_Container) DeepCopyInto(out *Runnable_Container) {
	*out = *in
	if in.ImageURI != nil {
		in, out := &in.ImageURI, &out.ImageURI
		*out = new(string)
		**out = **in
	}
	if in.Commands != nil {
		in, out := &in.Commands, &out.Commands
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Entrypoint != nil {
		in, out := &in.Entrypoint, &out.Entrypoint
		*out = new(string)
		**out = **in
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = new(string)
		**out = **in
	}
	if in.BlockExternalNetwork != nil {
		in, out := &in.BlockExternalNetwork, &out.BlockExternalNetwork
		*out = new(bool)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	if in.EnableImageStreaming != nil {
		in, out := &in.EnableImageStreaming, &out.EnableImageStreaming
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Runnable_Container.
func (in *Runnable_Container) DeepCopy() *Runnable_Container {
	if in == nil {
		return nil
	}
	out := new(Runnable_Container)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Runnable_Script) DeepCopyInto(out *Runnable_Script) {
	*out = *in
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Text != nil {
		in, out := &in.Text, &out.Text
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Runnable_Script.
func (in *Runnable_Script) DeepCopy() *Runnable_Script {
	if in == nil {
		return nil
	}
	out := new(Runnable_Script)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceAccount) DeepCopyInto(out *ServiceAccount) {
	*out = *in
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
	if in.Scopes != nil {
		in, out := &in.Scopes, &out.Scopes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceAccount.
func (in *ServiceAccount) DeepCopy() *ServiceAccount {
	if in == nil {
		return nil
	}
	out := new(ServiceAccount)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatusEvent) DeepCopyInto(out *StatusEvent) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EventTime != nil {
		in, out := &in.EventTime, &out.EventTime
		*out = new(string)
		**out = **in
	}
	if in.TaskExecution != nil {
		in, out := &in.TaskExecution, &out.TaskExecution
		*out = new(TaskExecution)
		(*in).DeepCopyInto(*out)
	}
	if in.TaskState != nil {
		in, out := &in.TaskState, &out.TaskState
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatusEvent.
func (in *StatusEvent) DeepCopy() *StatusEvent {
	if in == nil {
		return nil
	}
	out := new(StatusEvent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskExecution) DeepCopyInto(out *TaskExecution) {
	*out = *in
	if in.ExitCode != nil {
		in, out := &in.ExitCode, &out.ExitCode
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskExecution.
func (in *TaskExecution) DeepCopy() *TaskExecution {
	if in == nil {
		return nil
	}
	out := new(TaskExecution)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskGroup) DeepCopyInto(out *TaskGroup) {
	*out = *in
	if in.TaskSpec != nil {
		in, out := &in.TaskSpec, &out.TaskSpec
		*out = new(TaskSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.TaskCount != nil {
		in, out := &in.TaskCount, &out.TaskCount
		*out = new(int64)
		**out = **in
	}
	if in.Parallelism != nil {
		in, out := &in.Parallelism, &out.Parallelism
		*out = new(int64)
		**out = **in
	}
	if in.SchedulingPolicy != nil {
		in, out := &in.SchedulingPolicy, &out.SchedulingPolicy
		*out = new(string)
		**out = **in
	}
	if in.TaskEnvironments != nil {
		in, out := &in.TaskEnvironments, &out.TaskEnvironments
		*out = make([]Environment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TaskCountPerNode != nil {
		in, out := &in.TaskCountPerNode, &out.TaskCountPerNode
		*out = new(int64)
		**out = **in
	}
	if in.RequireHostsFile != nil {
		in, out := &in.RequireHostsFile, &out.RequireHostsFile
		*out = new(bool)
		**out = **in
	}
	if in.PermissiveSSH != nil {
		in, out := &in.PermissiveSSH, &out.PermissiveSSH
		*out = new(bool)
		**out = **in
	}
	if in.RunAsNonRoot != nil {
		in, out := &in.RunAsNonRoot, &out.RunAsNonRoot
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskGroup.
func (in *TaskGroup) DeepCopy() *TaskGroup {
	if in == nil {
		return nil
	}
	out := new(TaskGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskGroupObservedState) DeepCopyInto(out *TaskGroupObservedState) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskGroupObservedState.
func (in *TaskGroupObservedState) DeepCopy() *TaskGroupObservedState {
	if in == nil {
		return nil
	}
	out := new(TaskGroupObservedState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskIdentity) DeepCopyInto(out *TaskIdentity) {
	*out = *in
	if in.parent != nil {
		in, out := &in.parent, &out.parent
		*out = new(TaskParent)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskIdentity.
func (in *TaskIdentity) DeepCopy() *TaskIdentity {
	if in == nil {
		return nil
	}
	out := new(TaskIdentity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskParent) DeepCopyInto(out *TaskParent) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskParent.
func (in *TaskParent) DeepCopy() *TaskParent {
	if in == nil {
		return nil
	}
	out := new(TaskParent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskRef) DeepCopyInto(out *TaskRef) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskRef.
func (in *TaskRef) DeepCopy() *TaskRef {
	if in == nil {
		return nil
	}
	out := new(TaskRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskSpec) DeepCopyInto(out *TaskSpec) {
	*out = *in
	if in.Runnables != nil {
		in, out := &in.Runnables, &out.Runnables
		*out = make([]Runnable, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ComputeResource != nil {
		in, out := &in.ComputeResource, &out.ComputeResource
		*out = new(ComputeResource)
		(*in).DeepCopyInto(*out)
	}
	if in.MaxRunDuration != nil {
		in, out := &in.MaxRunDuration, &out.MaxRunDuration
		*out = new(string)
		**out = **in
	}
	if in.MaxRetryCount != nil {
		in, out := &in.MaxRetryCount, &out.MaxRetryCount
		*out = new(int32)
		**out = **in
	}
	if in.LifecyclePolicies != nil {
		in, out := &in.LifecyclePolicies, &out.LifecyclePolicies
		*out = make([]LifecyclePolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Environments != nil {
		in, out := &in.Environments, &out.Environments
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]Volume, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Environment != nil {
		in, out := &in.Environment, &out.Environment
		*out = new(Environment)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskSpec.
func (in *TaskSpec) DeepCopy() *TaskSpec {
	if in == nil {
		return nil
	}
	out := new(TaskSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskStatus) DeepCopyInto(out *TaskStatus) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.StatusEvents != nil {
		in, out := &in.StatusEvents, &out.StatusEvents
		*out = make([]StatusEvent, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskStatus.
func (in *TaskStatus) DeepCopy() *TaskStatus {
	if in == nil {
		return nil
	}
	out := new(TaskStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Volume) DeepCopyInto(out *Volume) {
	*out = *in
	if in.Nfs != nil {
		in, out := &in.Nfs, &out.Nfs
		*out = new(Nfs)
		(*in).DeepCopyInto(*out)
	}
	if in.GCS != nil {
		in, out := &in.GCS, &out.GCS
		*out = new(GCS)
		(*in).DeepCopyInto(*out)
	}
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.MountPath != nil {
		in, out := &in.MountPath, &out.MountPath
		*out = new(string)
		**out = **in
	}
	if in.MountOptions != nil {
		in, out := &in.MountOptions, &out.MountOptions
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Volume.
func (in *Volume) DeepCopy() *Volume {
	if in == nil {
		return nil
	}
	out := new(Volume)
	in.DeepCopyInto(out)
	return out
}
