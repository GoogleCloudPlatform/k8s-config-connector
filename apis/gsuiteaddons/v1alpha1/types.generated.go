// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package v1alpha1


// +kcc:proto=google.apps.script.type.AddOnWidgetSet
type AddOnWidgetSet struct {
	// The list of widgets used in an add-on.
	// +kcc:proto:field=google.apps.script.type.AddOnWidgetSet.used_widgets
	UsedWidgets []string `json:"usedWidgets,omitempty"`
}

// +kcc:proto=google.apps.script.type.CommonAddOnManifest
type CommonAddOnManifest struct {
	// Required. The display name of the add-on.
	// +kcc:proto:field=google.apps.script.type.CommonAddOnManifest.name
	Name *string `json:"name,omitempty"`

	// Required. The URL for the logo image shown in the add-on toolbar.
	// +kcc:proto:field=google.apps.script.type.CommonAddOnManifest.logo_url
	LogoURL *string `json:"logoURL,omitempty"`

	// Common layout properties for the add-on cards.
	// +kcc:proto:field=google.apps.script.type.CommonAddOnManifest.layout_properties
	LayoutProperties *LayoutProperties `json:"layoutProperties,omitempty"`

	// The widgets used in the add-on. If this field is not specified,
	//  it indicates that default set is used.
	// +kcc:proto:field=google.apps.script.type.CommonAddOnManifest.add_on_widget_set
	AddOnWidgetSet *AddOnWidgetSet `json:"addOnWidgetSet,omitempty"`

	// Whether to pass locale information from host app.
	// +kcc:proto:field=google.apps.script.type.CommonAddOnManifest.use_locale_from_app
	UseLocaleFromApp *bool `json:"useLocaleFromApp,omitempty"`

	// Defines an endpoint that will be executed in any context, in
	//  any host. Any cards generated by this function will always be available to
	//  the user, but may be eclipsed by contextual content when this add-on
	//  declares more targeted triggers.
	// +kcc:proto:field=google.apps.script.type.CommonAddOnManifest.homepage_trigger
	HomepageTrigger *HomepageExtensionPoint `json:"homepageTrigger,omitempty"`

	// Defines a list of extension points in the universal action menu which
	//  serves as a setting menu for the add-on. The extension point can be
	//  link URL to open or an endpoint to execute as a form
	//  submission.
	// +kcc:proto:field=google.apps.script.type.CommonAddOnManifest.universal_actions
	UniversalActions []UniversalActionExtensionPoint `json:"universalActions,omitempty"`

	// An OpenLink action
	//  can only use a URL with an HTTPS, MAILTO or TEL scheme.  For HTTPS links,
	//  the URL must also
	//  [match](/gmail/add-ons/concepts/manifests#whitelisting_urls) one of the
	//  prefixes specified in this whitelist. If the prefix omits the scheme, HTTPS
	//  is assumed.  Notice that HTTP links are automatically rewritten to HTTPS
	//  links.
	// +kcc:proto:field=google.apps.script.type.CommonAddOnManifest.open_link_url_prefixes
	OpenLinkURLPrefixes *ListValue `json:"openLinkURLPrefixes,omitempty"`
}

// +kcc:proto=google.apps.script.type.HomepageExtensionPoint
type HomepageExtensionPoint struct {
	// Required. The endpoint to execute when this extension point is
	//  activated.
	// +kcc:proto:field=google.apps.script.type.HomepageExtensionPoint.run_function
	RunFunction *string `json:"runFunction,omitempty"`

	// Optional. If set to `false`, disable the home-page view in this context.
	//
	//  Defaults to `true` if unset.
	//
	//  If an add-ons custom home-page view is disabled, an autogenerated overview
	//  card will be provided for users instead.
	// +kcc:proto:field=google.apps.script.type.HomepageExtensionPoint.enabled
	Enabled *bool `json:"enabled,omitempty"`
}

// +kcc:proto=google.apps.script.type.HttpOptions
type HttpOptions struct {
	// Configuration for the token sent in the HTTP Authorization header
	// +kcc:proto:field=google.apps.script.type.HttpOptions.authorization_header
	AuthorizationHeader *string `json:"authorizationHeader,omitempty"`
}

// +kcc:proto=google.apps.script.type.LayoutProperties
type LayoutProperties struct {
	// The primary color of the add-on. It sets the color of toolbar. If no
	//  primary color is set explicitly, the default value provided by the
	//  framework is used.
	// +kcc:proto:field=google.apps.script.type.LayoutProperties.primary_color
	PrimaryColor *string `json:"primaryColor,omitempty"`

	// The secondary color of the add-on. It sets the color of buttons.
	//  If primary color is set but no secondary color is set, the
	//  secondary color is the same as the primary color. If neither primary
	//  color nor secondary color is set, the default value provided by the
	//  framework is used.
	// +kcc:proto:field=google.apps.script.type.LayoutProperties.secondary_color
	SecondaryColor *string `json:"secondaryColor,omitempty"`
}

// +kcc:proto=google.apps.script.type.MenuItemExtensionPoint
type MenuItemExtensionPoint struct {
	// Required. The endpoint to execute when this extension point is
	//  activated.
	// +kcc:proto:field=google.apps.script.type.MenuItemExtensionPoint.run_function
	RunFunction *string `json:"runFunction,omitempty"`

	// Required. User-visible text describing the action taken by activating this
	//  extension point. For example, "Insert invoice".
	// +kcc:proto:field=google.apps.script.type.MenuItemExtensionPoint.label
	Label *string `json:"label,omitempty"`

	// The URL for the logo image shown in the add-on toolbar.
	//
	//  If not set, defaults to the add-on's primary logo URL.
	// +kcc:proto:field=google.apps.script.type.MenuItemExtensionPoint.logo_url
	LogoURL *string `json:"logoURL,omitempty"`
}

// +kcc:proto=google.apps.script.type.UniversalActionExtensionPoint
type UniversalActionExtensionPoint struct {
	// Required. User-visible text describing the action taken by activating this
	//  extension point, for example, "Add a new contact".
	// +kcc:proto:field=google.apps.script.type.UniversalActionExtensionPoint.label
	Label *string `json:"label,omitempty"`

	// URL to be opened by the UniversalAction.
	// +kcc:proto:field=google.apps.script.type.UniversalActionExtensionPoint.open_link
	OpenLink *string `json:"openLink,omitempty"`

	// Endpoint to be run by the UniversalAction.
	// +kcc:proto:field=google.apps.script.type.UniversalActionExtensionPoint.run_function
	RunFunction *string `json:"runFunction,omitempty"`
}

// +kcc:proto=google.apps.script.type.calendar.CalendarAddOnManifest
type CalendarAddOnManifest struct {
	// Defines an endpoint that will be executed contexts that don't
	//  match a declared contextual trigger. Any cards generated by this function
	//  will always be available to the user, but may be eclipsed by contextual
	//  content when this add-on declares more targeted triggers.
	//
	//  If present, this overrides the configuration from
	//  `addOns.common.homepageTrigger`.
	// +kcc:proto:field=google.apps.script.type.calendar.CalendarAddOnManifest.homepage_trigger
	HomepageTrigger *HomepageExtensionPoint `json:"homepageTrigger,omitempty"`

	// Defines conference solutions provided by this add-on.
	// +kcc:proto:field=google.apps.script.type.calendar.CalendarAddOnManifest.conference_solution
	ConferenceSolution []ConferenceSolution `json:"conferenceSolution,omitempty"`

	// An endpoint to execute that creates a URL to the add-on's settings page.
	// +kcc:proto:field=google.apps.script.type.calendar.CalendarAddOnManifest.create_settings_url_function
	CreateSettingsURLFunction *string `json:"createSettingsURLFunction,omitempty"`

	// An endpoint to trigger when an event is opened (viewed/edited).
	// +kcc:proto:field=google.apps.script.type.calendar.CalendarAddOnManifest.event_open_trigger
	EventOpenTrigger *CalendarExtensionPoint `json:"eventOpenTrigger,omitempty"`

	// An endpoint to trigger when the open event is updated.
	// +kcc:proto:field=google.apps.script.type.calendar.CalendarAddOnManifest.event_update_trigger
	EventUpdateTrigger *CalendarExtensionPoint `json:"eventUpdateTrigger,omitempty"`

	// Define the level of data access when an event addon is triggered.
	// +kcc:proto:field=google.apps.script.type.calendar.CalendarAddOnManifest.current_event_access
	CurrentEventAccess *string `json:"currentEventAccess,omitempty"`
}

// +kcc:proto=google.apps.script.type.calendar.CalendarExtensionPoint
type CalendarExtensionPoint struct {
	// Required. The endpoint to execute when this extension point is
	//  activated.
	// +kcc:proto:field=google.apps.script.type.calendar.CalendarExtensionPoint.run_function
	RunFunction *string `json:"runFunction,omitempty"`
}

// +kcc:proto=google.apps.script.type.calendar.ConferenceSolution
type ConferenceSolution struct {
	// Required. The endpoint to call when ConferenceData should be created.
	// +kcc:proto:field=google.apps.script.type.calendar.ConferenceSolution.on_create_function
	OnCreateFunction *string `json:"onCreateFunction,omitempty"`

	// Required. IDs should be unique across ConferenceSolutions within one
	//  add-on, but this is not strictly enforced. It is up to the add-on developer
	//  to assign them uniquely, otherwise the wrong ConferenceSolution may be
	//  used when the add-on is triggered. While the developer may change the
	//  display name of an add-on, the ID should not be changed.
	// +kcc:proto:field=google.apps.script.type.calendar.ConferenceSolution.id
	ID *string `json:"id,omitempty"`

	// Required. The display name of the ConferenceSolution.
	// +kcc:proto:field=google.apps.script.type.calendar.ConferenceSolution.name
	Name *string `json:"name,omitempty"`

	// Required. The URL for the logo image of the ConferenceSolution.
	// +kcc:proto:field=google.apps.script.type.calendar.ConferenceSolution.logo_url
	LogoURL *string `json:"logoURL,omitempty"`
}

// +kcc:proto=google.apps.script.type.docs.DocsAddOnManifest
type DocsAddOnManifest struct {
	// If present, this overrides the configuration from
	//  `addOns.common.homepageTrigger`.
	// +kcc:proto:field=google.apps.script.type.docs.DocsAddOnManifest.homepage_trigger
	HomepageTrigger *HomepageExtensionPoint `json:"homepageTrigger,omitempty"`

	// Endpoint to execute when file scope authorization is granted
	//  for this document/user pair.
	// +kcc:proto:field=google.apps.script.type.docs.DocsAddOnManifest.on_file_scope_granted_trigger
	OnFileScopeGrantedTrigger *DocsExtensionPoint `json:"onFileScopeGrantedTrigger,omitempty"`
}

// +kcc:proto=google.apps.script.type.docs.DocsExtensionPoint
type DocsExtensionPoint struct {
	// Required. The endpoint to execute when this extension point is activated.
	// +kcc:proto:field=google.apps.script.type.docs.DocsExtensionPoint.run_function
	RunFunction *string `json:"runFunction,omitempty"`
}

// +kcc:proto=google.apps.script.type.drive.DriveAddOnManifest
type DriveAddOnManifest struct {
	// If present, this overrides the configuration from
	//  `addOns.common.homepageTrigger`.
	// +kcc:proto:field=google.apps.script.type.drive.DriveAddOnManifest.homepage_trigger
	HomepageTrigger *HomepageExtensionPoint `json:"homepageTrigger,omitempty"`

	// Corresponds to behvior that should execute when items are selected
	//  in relevant Drive view (e.g. the My Drive Doclist).
	// +kcc:proto:field=google.apps.script.type.drive.DriveAddOnManifest.on_items_selected_trigger
	OnItemsSelectedTrigger *DriveExtensionPoint `json:"onItemsSelectedTrigger,omitempty"`
}

// +kcc:proto=google.apps.script.type.drive.DriveExtensionPoint
type DriveExtensionPoint struct {
	// Required. The endpoint to execute when this extension point is
	//  activated.
	// +kcc:proto:field=google.apps.script.type.drive.DriveExtensionPoint.run_function
	RunFunction *string `json:"runFunction,omitempty"`
}

// +kcc:proto=google.apps.script.type.gmail.ComposeTrigger
type ComposeTrigger struct {
	// Defines the set of actions for compose time add-on. These are actions
	//  that user can trigger on a compose time addon.
	// +kcc:proto:field=google.apps.script.type.gmail.ComposeTrigger.actions
	Actions []MenuItemExtensionPoint `json:"actions,omitempty"`

	// Define the level of data access when a compose time addon is triggered.
	// +kcc:proto:field=google.apps.script.type.gmail.ComposeTrigger.draft_access
	DraftAccess *string `json:"draftAccess,omitempty"`
}

// +kcc:proto=google.apps.script.type.gmail.ContextualTrigger
type ContextualTrigger struct {
	// UnconditionalTriggers are executed when any mail message is opened.
	// +kcc:proto:field=google.apps.script.type.gmail.ContextualTrigger.unconditional
	Unconditional *UnconditionalTrigger `json:"unconditional,omitempty"`

	// Required. The name of the endpoint to call when a message matches the
	//  trigger.
	// +kcc:proto:field=google.apps.script.type.gmail.ContextualTrigger.on_trigger_function
	OnTriggerFunction *string `json:"onTriggerFunction,omitempty"`
}

// +kcc:proto=google.apps.script.type.gmail.GmailAddOnManifest
type GmailAddOnManifest struct {
	// Defines an endpoint that will be executed in contexts that don't
	//  match a declared contextual trigger. Any cards generated by this function
	//  will always be available to the user, but may be eclipsed by contextual
	//  content when this add-on declares more targeted triggers.
	//
	//  If present, this overrides the configuration from
	//  `addOns.common.homepageTrigger`.
	// +kcc:proto:field=google.apps.script.type.gmail.GmailAddOnManifest.homepage_trigger
	HomepageTrigger *HomepageExtensionPoint `json:"homepageTrigger,omitempty"`

	// Defines the set of conditions that trigger the add-on.
	// +kcc:proto:field=google.apps.script.type.gmail.GmailAddOnManifest.contextual_triggers
	ContextualTriggers []ContextualTrigger `json:"contextualTriggers,omitempty"`

	// Defines set of [universal
	//  actions](/gmail/add-ons/how-tos/universal-actions) for the add-on. The user
	//  triggers universal actions from the add-on toolbar menu.
	// +kcc:proto:field=google.apps.script.type.gmail.GmailAddOnManifest.universal_actions
	UniversalActions []UniversalAction `json:"universalActions,omitempty"`

	// Defines the compose time trigger for a compose time add-on. This is the
	//  trigger that causes an add-on to take action when the user is composing an
	//  email.
	//  All compose time addons are required to have the
	//  gmail.addons.current.action.compose scope even though it might not edit the
	//  draft.
	// +kcc:proto:field=google.apps.script.type.gmail.GmailAddOnManifest.compose_trigger
	ComposeTrigger *ComposeTrigger `json:"composeTrigger,omitempty"`

	// The name of an endpoint that verifies that the add-on has
	//  all the required third-party authorizations, by probing the third-party
	//  APIs. If the probe fails, the function should throw an exception to
	//  initiate the authorization flow. This function is called before each
	//  invocation of the add-on, in order to ensure a smooth user experience.
	// +kcc:proto:field=google.apps.script.type.gmail.GmailAddOnManifest.authorization_check_function
	AuthorizationCheckFunction *string `json:"authorizationCheckFunction,omitempty"`
}

// +kcc:proto=google.apps.script.type.gmail.UnconditionalTrigger
type UnconditionalTrigger struct {
}

// +kcc:proto=google.apps.script.type.gmail.UniversalAction
type UniversalAction struct {
	// Required. User-visible text describing the action, for example, "Add a new
	//  contact."
	// +kcc:proto:field=google.apps.script.type.gmail.UniversalAction.text
	Text *string `json:"text,omitempty"`

	// A link that is opened by Gmail when the user triggers the action.
	// +kcc:proto:field=google.apps.script.type.gmail.UniversalAction.open_link
	OpenLink *string `json:"openLink,omitempty"`

	// An endpoint that is called when the user triggers the
	//  action. See the [universal actions
	//  guide](/gmail/add-ons/how-tos/universal-actions) for details.
	// +kcc:proto:field=google.apps.script.type.gmail.UniversalAction.run_function
	RunFunction *string `json:"runFunction,omitempty"`
}

// +kcc:proto=google.apps.script.type.sheets.SheetsAddOnManifest
type SheetsAddOnManifest struct {
	// If present, this overrides the configuration from
	//  `addOns.common.homepageTrigger`.
	// +kcc:proto:field=google.apps.script.type.sheets.SheetsAddOnManifest.homepage_trigger
	HomepageTrigger *HomepageExtensionPoint `json:"homepageTrigger,omitempty"`

	// Endpoint to execute when file scope authorization is granted
	//  for this document/user pair.
	// +kcc:proto:field=google.apps.script.type.sheets.SheetsAddOnManifest.on_file_scope_granted_trigger
	OnFileScopeGrantedTrigger *SheetsExtensionPoint `json:"onFileScopeGrantedTrigger,omitempty"`
}

// +kcc:proto=google.apps.script.type.sheets.SheetsExtensionPoint
type SheetsExtensionPoint struct {
	// Required. The endpoint to execute when this extension point is activated.
	// +kcc:proto:field=google.apps.script.type.sheets.SheetsExtensionPoint.run_function
	RunFunction *string `json:"runFunction,omitempty"`
}

// +kcc:proto=google.apps.script.type.slides.SlidesAddOnManifest
type SlidesAddOnManifest struct {
	// If present, this overrides the configuration from
	//  `addOns.common.homepageTrigger`.
	// +kcc:proto:field=google.apps.script.type.slides.SlidesAddOnManifest.homepage_trigger
	HomepageTrigger *HomepageExtensionPoint `json:"homepageTrigger,omitempty"`

	// Endpoint to execute when file scope authorization is granted
	//  for this document/user pair.
	// +kcc:proto:field=google.apps.script.type.slides.SlidesAddOnManifest.on_file_scope_granted_trigger
	OnFileScopeGrantedTrigger *SlidesExtensionPoint `json:"onFileScopeGrantedTrigger,omitempty"`
}

// +kcc:proto=google.apps.script.type.slides.SlidesExtensionPoint
type SlidesExtensionPoint struct {
	// Required. The endpoint to execute when this extension point is activated.
	// +kcc:proto:field=google.apps.script.type.slides.SlidesExtensionPoint.run_function
	RunFunction *string `json:"runFunction,omitempty"`
}

// +kcc:proto=google.cloud.gsuiteaddons.v1.AddOns
type AddOns struct {
	// Configuration that is common across all Google Workspace Add-ons.
	// +kcc:proto:field=google.cloud.gsuiteaddons.v1.AddOns.common
	Common *CommonAddOnManifest `json:"common,omitempty"`

	// Gmail add-on configuration.
	// +kcc:proto:field=google.cloud.gsuiteaddons.v1.AddOns.gmail
	Gmail *GmailAddOnManifest `json:"gmail,omitempty"`

	// Drive add-on configuration.
	// +kcc:proto:field=google.cloud.gsuiteaddons.v1.AddOns.drive
	Drive *DriveAddOnManifest `json:"drive,omitempty"`

	// Calendar add-on configuration.
	// +kcc:proto:field=google.cloud.gsuiteaddons.v1.AddOns.calendar
	Calendar *CalendarAddOnManifest `json:"calendar,omitempty"`

	// Docs add-on configuration.
	// +kcc:proto:field=google.cloud.gsuiteaddons.v1.AddOns.docs
	Docs *DocsAddOnManifest `json:"docs,omitempty"`

	// Sheets add-on configuration.
	// +kcc:proto:field=google.cloud.gsuiteaddons.v1.AddOns.sheets
	Sheets *SheetsAddOnManifest `json:"sheets,omitempty"`

	// Slides add-on configuration.
	// +kcc:proto:field=google.cloud.gsuiteaddons.v1.AddOns.slides
	Slides *SlidesAddOnManifest `json:"slides,omitempty"`

	// Options for sending requests to add-on HTTP endpoints
	// +kcc:proto:field=google.cloud.gsuiteaddons.v1.AddOns.http_options
	HTTPOptions *HttpOptions `json:"httpOptions,omitempty"`
}

// +kcc:proto=google.cloud.gsuiteaddons.v1.Deployment
type Deployment struct {
	// The deployment resource name.
	//  Example:  projects/123/deployments/my_deployment.
	// +kcc:proto:field=google.cloud.gsuiteaddons.v1.Deployment.name
	Name *string `json:"name,omitempty"`

	// The list of Google OAuth scopes for which to request consent from the end
	//  user before executing an add-on endpoint.
	// +kcc:proto:field=google.cloud.gsuiteaddons.v1.Deployment.oauth_scopes
	OauthScopes []string `json:"oauthScopes,omitempty"`

	// The Google Workspace Add-on configuration.
	// +kcc:proto:field=google.cloud.gsuiteaddons.v1.Deployment.add_ons
	AddOns *AddOns `json:"addOns,omitempty"`

	// This value is computed by the server based on the version of the
	//  deployment in storage, and may be sent on update and delete requests to
	//  ensure the client has an up-to-date value before proceeding.
	// +kcc:proto:field=google.cloud.gsuiteaddons.v1.Deployment.etag
	Etag *string `json:"etag,omitempty"`
}

// +kcc:proto=google.protobuf.ListValue
type ListValue struct {
	// Repeated field of dynamically typed values.
	// +kcc:proto:field=google.protobuf.ListValue.values
	Values []Value `json:"values,omitempty"`
}

// +kcc:proto=google.protobuf.Value
type Value struct {
	// Represents a null value.
	// +kcc:proto:field=google.protobuf.Value.null_value
	NullValue *string `json:"nullValue,omitempty"`

	// Represents a double value.
	// +kcc:proto:field=google.protobuf.Value.number_value
	NumberValue *float64 `json:"numberValue,omitempty"`

	// Represents a string value.
	// +kcc:proto:field=google.protobuf.Value.string_value
	StringValue *string `json:"stringValue,omitempty"`

	// Represents a boolean value.
	// +kcc:proto:field=google.protobuf.Value.bool_value
	BoolValue *bool `json:"boolValue,omitempty"`

	// Represents a structured value.
	// +kcc:proto:field=google.protobuf.Value.struct_value
	StructValue map[string]string `json:"structValue,omitempty"`

	// Represents a repeated `Value`.
	// +kcc:proto:field=google.protobuf.Value.list_value
	ListValue *ListValue `json:"listValue,omitempty"`
}
