#!/usr/bin/env bash
# Copyright 2024 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

set -o errexit
set -o nounset
set -o pipefail

REPO_ROOT="$(git rev-parse --show-toplevel)"

if [[ -z "${IMAGE_PREFIX:-}" ]]; then
  IMAGE_PREFIX=""
fi

if [[ -z "${IMAGE_TAG:-}" ]]; then
  EXACT_TAG=$(git describe --tags --exact-match 2>/dev/null || true)
  if [[ -n "${EXACT_TAG}" ]]; then
    IMAGE_TAG="${EXACT_TAG}"
    # If there is a github/ prefix (as there is in our internal mirror), remove it
    IMAGE_TAG=${IMAGE_TAG#github/}
  else
    IMAGE_TAG=$(git rev-parse --short=7 HEAD)
  fi
fi
export IMAGE_TAG
echo "Building images with tag: ${IMAGE_TAG}"

# Force the image names, to avoid depending on the current gcloud project
export BUILDER_IMG=${IMAGE_PREFIX}builder:${IMAGE_TAG}
export CONTROLLER_IMG=${IMAGE_PREFIX}controller:${IMAGE_TAG}
export RECORDER_IMG=${IMAGE_PREFIX}recorder:${IMAGE_TAG}
export WEBHOOK_IMG=${IMAGE_PREFIX}webhook:${IMAGE_TAG}
export DELETION_DEFENDER_IMG=${IMAGE_PREFIX}deletiondefender:${IMAGE_TAG}
export UNMANAGED_DETECTOR_IMG=${IMAGE_PREFIX}unmanageddetector:${IMAGE_TAG}

export OPERATOR_IMG=${IMAGE_PREFIX}operator:${IMAGE_TAG}

cd ${REPO_ROOT}
make docker-build

cd ${REPO_ROOT}/operator
make docker-build

# Remove images that are not artifacts we would want to promote / keep
docker image rm ${BUILDER_IMG}
