#!/usr/bin/env bash
# Copyright 2024 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Update the manifests etc in the repository to reflect a new tagged release.

set -o errexit
set -o nounset
set -o pipefail

REPO_ROOT="$(git rev-parse --show-toplevel)"
cd ${REPO_ROOT}

BUILD_DIR="${REPO_ROOT}/.build"
mkdir -p "${BUILD_DIR}"

WORKDIR="${BUILD_DIR}/workdir"
rm -rf "${WORKDIR}"
mkdir -p "${WORKDIR}"


BIN_DIR="${BUILD_DIR}/bin"
mkdir -p "${BIN_DIR}"

GOBIN=${BIN_DIR}/ go install sigs.k8s.io/kustomize/kustomize/v5@v5.3.0
export PATH=${BIN_DIR}/:$PATH

if [[ -z "${VERSION:-}" ]]; then
  echo "VERSION must be set"
  exit 1
fi

# Update our version marker file (used for user agent etc)
cat <<EOF > version/VERSION
${VERSION}
EOF

# Update the version label in our kustomization files
sed -i -e "s@cnrm.cloud.google.com/operator-version:.*@cnrm.cloud.google.com/operator-version: \"${VERSION}\"@g" \
  operator/config/autopilot/kustomization.yaml \
  operator/config/default/kustomization.yaml \
  config/installbundle/release-manifests/standard/kustomization.yaml \
  config/installbundle/release-manifests/autopilot/kustomization.yaml

# Update the default version in the "default" operator channel
cat <<EOF > operator/channels/stable
manifests:
 - version: ${VERSION}
EOF

# Update the default version in the "autopilot" operator channel
cat <<EOF > operator/autopilot-channels/stable
manifests:
 - version: ${VERSION}
EOF


# Build the release bundle
VERSION=${VERSION} dev/tasks/build-release-bundle
cp dist/release-bundle.tar.gz ${WORKDIR}/
cd ${WORKDIR}
tar xzf release-bundle.tar.gz


# Update the operator manifests in the channels / autopilot-channels directory

for channeldir in channels autopilot-channels; do
  mkdir -p ${REPO_ROOT}/operator/config/${channeldir}/release-bundle
  cd ${REPO_ROOT}/operator/config/${channeldir}/release-bundle
  tar xzf ${WORKDIR}/release-bundle.tar.gz

  cd ${REPO_ROOT}/operator/config/${channeldir}

  mkdir -p ${REPO_ROOT}/operator/${channeldir}/packages/configconnector/${VERSION}/cluster/gcp-identity
  kustomize build --load-restrictor=LoadRestrictionsNone cluster-gcp-identity > ${REPO_ROOT}/operator/${channeldir}/packages/configconnector/${VERSION}/cluster/gcp-identity/0-cnrm-system.yaml

  mkdir -p ${REPO_ROOT}/operator/${channeldir}/packages/configconnector/${VERSION}/cluster/workload-identity
  kustomize build --load-restrictor=LoadRestrictionsNone cluster-workload-identity > ${REPO_ROOT}/operator/${channeldir}/packages/configconnector/${VERSION}/cluster/workload-identity/0-cnrm-system.yaml

  mkdir -p ${REPO_ROOT}/operator/${channeldir}/packages/configconnector/${VERSION}/namespaced
  kustomize build --load-restrictor=LoadRestrictionsNone namespaced-main > ${REPO_ROOT}/operator/${channeldir}/packages/configconnector/${VERSION}/namespaced/0-cnrm-system.yaml
  kustomize build --load-restrictor=LoadRestrictionsNone namespaced-per-namespace-components > ${REPO_ROOT}/operator/${channeldir}/packages/configconnector/${VERSION}/namespaced/per-namespace-components.yaml

  kustomize build --load-restrictor=LoadRestrictionsNone  crds > ${REPO_ROOT}/operator/${channeldir}/packages/configconnector/${VERSION}/crds.yaml

  rm -rf ${REPO_ROOT}/operator/config/${channeldir}/release-bundle
done

# Swap container registry
# TODO: This is only needed for release bundles that we didn't build with our scripts here (i.e. only needed for release bundles built with the legacy process)
for channeldir in channels autopilot-channels; do
  find ${REPO_ROOT}/operator/${channeldir}/packages -type f -name "*.yaml" | xargs sed -i -e "s@gcr.io/cnrm-eap/@gcr.io/gke-release/cnrm/@g"
done

# Generate operator/config/gke-addon/image_configmap.yaml
make -C ${REPO_ROOT}/operator manifests