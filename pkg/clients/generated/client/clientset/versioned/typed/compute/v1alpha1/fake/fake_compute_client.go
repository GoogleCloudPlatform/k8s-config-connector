// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// *** DISCLAIMER ***
// Config Connector's go-client for CRDs is currently in ALPHA, which means
// that future versions of the go-client may include breaking changes.
// Please try it out and give us feedback!

// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1alpha1 "github.com/GoogleCloudPlatform/k8s-config-connector/pkg/clients/generated/client/clientset/versioned/typed/compute/v1alpha1"
	rest "k8s.io/client-go/rest"
	testing "k8s.io/client-go/testing"
)

type FakeComputeV1alpha1 struct {
	*testing.Fake
}

func (c *FakeComputeV1alpha1) ComputeAutoscalers(namespace string) v1alpha1.ComputeAutoscalerInterface {
	return &FakeComputeAutoscalers{c, namespace}
}

func (c *FakeComputeV1alpha1) ComputeBackendBucketSignedURLKeys(namespace string) v1alpha1.ComputeBackendBucketSignedURLKeyInterface {
	return &FakeComputeBackendBucketSignedURLKeys{c, namespace}
}

func (c *FakeComputeV1alpha1) ComputeBackendServiceSignedURLKeys(namespace string) v1alpha1.ComputeBackendServiceSignedURLKeyInterface {
	return &FakeComputeBackendServiceSignedURLKeys{c, namespace}
}

func (c *FakeComputeV1alpha1) ComputeDiskResourcePolicyAttachments(namespace string) v1alpha1.ComputeDiskResourcePolicyAttachmentInterface {
	return &FakeComputeDiskResourcePolicyAttachments{c, namespace}
}

func (c *FakeComputeV1alpha1) ComputeGlobalNetworkEndpoints(namespace string) v1alpha1.ComputeGlobalNetworkEndpointInterface {
	return &FakeComputeGlobalNetworkEndpoints{c, namespace}
}

func (c *FakeComputeV1alpha1) ComputeGlobalNetworkEndpointGroups(namespace string) v1alpha1.ComputeGlobalNetworkEndpointGroupInterface {
	return &FakeComputeGlobalNetworkEndpointGroups{c, namespace}
}

func (c *FakeComputeV1alpha1) ComputeInstanceGroupNamedPorts(namespace string) v1alpha1.ComputeInstanceGroupNamedPortInterface {
	return &FakeComputeInstanceGroupNamedPorts{c, namespace}
}

func (c *FakeComputeV1alpha1) ComputeMachineImages(namespace string) v1alpha1.ComputeMachineImageInterface {
	return &FakeComputeMachineImages{c, namespace}
}

func (c *FakeComputeV1alpha1) ComputeNetworkEndpoints(namespace string) v1alpha1.ComputeNetworkEndpointInterface {
	return &FakeComputeNetworkEndpoints{c, namespace}
}

func (c *FakeComputeV1alpha1) ComputeNetworkFirewallPolicyRules(namespace string) v1alpha1.ComputeNetworkFirewallPolicyRuleInterface {
	return &FakeComputeNetworkFirewallPolicyRules{c, namespace}
}

func (c *FakeComputeV1alpha1) ComputeNetworkPeeringRoutesConfigs(namespace string) v1alpha1.ComputeNetworkPeeringRoutesConfigInterface {
	return &FakeComputeNetworkPeeringRoutesConfigs{c, namespace}
}

func (c *FakeComputeV1alpha1) ComputeOrganizationSecurityPolicies(namespace string) v1alpha1.ComputeOrganizationSecurityPolicyInterface {
	return &FakeComputeOrganizationSecurityPolicies{c, namespace}
}

func (c *FakeComputeV1alpha1) ComputeOrganizationSecurityPolicyAssociations(namespace string) v1alpha1.ComputeOrganizationSecurityPolicyAssociationInterface {
	return &FakeComputeOrganizationSecurityPolicyAssociations{c, namespace}
}

func (c *FakeComputeV1alpha1) ComputeOrganizationSecurityPolicyRules(namespace string) v1alpha1.ComputeOrganizationSecurityPolicyRuleInterface {
	return &FakeComputeOrganizationSecurityPolicyRules{c, namespace}
}

func (c *FakeComputeV1alpha1) ComputePerInstanceConfigs(namespace string) v1alpha1.ComputePerInstanceConfigInterface {
	return &FakeComputePerInstanceConfigs{c, namespace}
}

func (c *FakeComputeV1alpha1) ComputeRegionAutoscalers(namespace string) v1alpha1.ComputeRegionAutoscalerInterface {
	return &FakeComputeRegionAutoscalers{c, namespace}
}

func (c *FakeComputeV1alpha1) ComputeRegionDiskResourcePolicyAttachments(namespace string) v1alpha1.ComputeRegionDiskResourcePolicyAttachmentInterface {
	return &FakeComputeRegionDiskResourcePolicyAttachments{c, namespace}
}

func (c *FakeComputeV1alpha1) ComputeRegionPerInstanceConfigs(namespace string) v1alpha1.ComputeRegionPerInstanceConfigInterface {
	return &FakeComputeRegionPerInstanceConfigs{c, namespace}
}

func (c *FakeComputeV1alpha1) ComputeRegionSSLPolicies(namespace string) v1alpha1.ComputeRegionSSLPolicyInterface {
	return &FakeComputeRegionSSLPolicies{c, namespace}
}

// RESTClient returns a RESTClient that is used to communicate
// with API server by this client implementation.
func (c *FakeComputeV1alpha1) RESTClient() rest.Interface {
	var ret *rest.RESTClient
	return ret
}
