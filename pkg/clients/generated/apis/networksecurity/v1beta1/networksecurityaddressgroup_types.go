// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// ----------------------------------------------------------------------------
//
//     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
//
// ----------------------------------------------------------------------------
//
//     This file is automatically generated by Config Connector and manual
//     changes will be clobbered when the file is regenerated.
//
// ----------------------------------------------------------------------------

// *** DISCLAIMER ***
// Config Connector's go-client for CRDs is currently in ALPHA, which means
// that future versions of the go-client may include breaking changes.
// Please try it out and give us feedback!

package v1beta1

import (
	"github.com/GoogleCloudPlatform/k8s-config-connector/pkg/clients/generated/apis/k8s/v1alpha1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

type AddressgroupParent struct {
	// +optional
	OrganizationRef *v1alpha1.ResourceRef `json:"organizationRef,omitempty"`

	// +optional
	ProjectRef *v1alpha1.ResourceRef `json:"projectRef,omitempty"`
}

type NetworkSecurityAddressGroupSpec struct {
	/* Capacity of the Address Group. */
	Capacity int `json:"capacity"`

	/* Free-text description of the resource. */
	// +optional
	Description *string `json:"description,omitempty"`

	/* List of items. */
	// +optional
	Items []string `json:"items,omitempty"`

	/* The location of the gateway security policy.
	The default value is 'global'. */
	Location string `json:"location"`

	/* Only external field is supported to configure the reference
	as an organizationRef

	The name of the parent this address group belongs to.
	Format: organizations/{organization_id} or projects/{project_id} */
	// +optional
	Parent *AddressgroupParent `json:"parent,omitempty"`

	/* The type of the Address Group. Possible values are "IPV4" or "IPV6". Possible values: ["IPV4", "IPV6"]. */
	Type string `json:"type"`
}

type AddressgroupObservedStateStatus struct {
	/* The timestamp when the resource was created.
	A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
	Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z". */
	// +optional
	CreateTime *string `json:"createTime,omitempty"`

	/* The timestamp when the resource was updated.
	A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
	Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z". */
	// +optional
	UpdateTime *string `json:"updateTime,omitempty"`
}

type NetworkSecurityAddressGroupStatus struct {
	/* Conditions represent the latest available observations of the
	   NetworkSecurityAddressGroup's current state. */
	Conditions []v1alpha1.Condition `json:"conditions,omitempty"`
	/* ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource. */
	// +optional
	ObservedGeneration *int `json:"observedGeneration,omitempty"`

	/* The observed state of the underlying GCP resource. */
	// +optional
	ObservedState *AddressgroupObservedStateStatus `json:"observedState,omitempty"`
}

// +genclient
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:resource:categories=gcp,shortName=gcpnetworksecurityaddressgroup;gcpnetworksecurityaddressgroups
// +kubebuilder:subresource:status

// NetworkSecurityAddressGroup is the Schema for the networksecurity API
// +k8s:openapi-gen=true
type NetworkSecurityAddressGroup struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`

	Spec   NetworkSecurityAddressGroupSpec   `json:"spec,omitempty"`
	Status NetworkSecurityAddressGroupStatus `json:"status,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// NetworkSecurityAddressGroupList contains a list of NetworkSecurityAddressGroup
type NetworkSecurityAddressGroupList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []NetworkSecurityAddressGroup `json:"items"`
}

func init() {
	SchemeBuilder.Register(&NetworkSecurityAddressGroup{}, &NetworkSecurityAddressGroupList{})
}
