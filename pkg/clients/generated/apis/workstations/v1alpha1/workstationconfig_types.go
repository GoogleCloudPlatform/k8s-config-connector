// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// ----------------------------------------------------------------------------
//
//     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
//
// ----------------------------------------------------------------------------
//
//     This file is automatically generated by Config Connector and manual
//     changes will be clobbered when the file is regenerated.
//
// ----------------------------------------------------------------------------

// *** DISCLAIMER ***
// Config Connector's go-client for CRDs is currently in ALPHA, which means
// that future versions of the go-client may include breaking changes.
// Please try it out and give us feedback!

package v1alpha1

import (
	"github.com/GoogleCloudPlatform/k8s-config-connector/pkg/clients/generated/apis/k8s/v1alpha1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

type WorkstationconfigAnnotations struct {
	/* Key for the annotation. */
	// +optional
	Key *string `json:"key,omitempty"`

	/* Value for the annotation. */
	// +optional
	Value *string `json:"value,omitempty"`
}

type WorkstationconfigConfidentialInstanceConfig struct {
	/* Optional. Whether the instance has confidential compute enabled. */
	// +optional
	EnableConfidentialCompute *bool `json:"enableConfidentialCompute,omitempty"`
}

type WorkstationconfigContainer struct {
	/* Optional. Arguments passed to the entrypoint. */
	// +optional
	Args []string `json:"args,omitempty"`

	/* Optional. If set, overrides the default ENTRYPOINT specified by the image. */
	// +optional
	Command []string `json:"command,omitempty"`

	/* Optional. Environment variables passed to the container's entrypoint. */
	// +optional
	Env []WorkstationconfigEnv `json:"env,omitempty"`

	/* Optional. A Docker container image that defines a custom environment.

	Cloud Workstations provides a number of
	[preconfigured
	images](https://cloud.google.com/workstations/docs/preconfigured-base-images),
	but you can create your own
	[custom container
	images](https://cloud.google.com/workstations/docs/custom-container-images).
	If using a private image, the `host.gceInstance.serviceAccount` field
	must be specified in the workstation configuration and must have
	permission to pull the specified image. Otherwise, the image must be
	publicly accessible. */
	// +optional
	Image *string `json:"image,omitempty"`

	/* Optional. If set, overrides the USER specified in the image with the given uid. */
	// +optional
	RunAsUser *int32 `json:"runAsUser,omitempty"`

	/* Optional. If set, overrides the default DIR specified by the image. */
	// +optional
	WorkingDir *string `json:"workingDir,omitempty"`
}

type WorkstationconfigEncryptionKey struct {
	/* Immutable. A reference to the Google Cloud KMS encryption key. For example, `"projects/PROJECT_ID/locations/REGION/keyRings/KEY_RING/cryptoKeys/KEY_NAME"`. The key must be in the same region as the workstation configuration. */
	// +optional
	KmsCryptoKeyRef *v1alpha1.ResourceRef `json:"kmsCryptoKeyRef,omitempty"`

	/* Immutable. A reference to a service account to use with the specified KMS key. We recommend that you use a separate service account and follow KMS best practices. For more information, see [Separation of duties](https://cloud.google.com/kms/docs/separation-of-duties) and `gcloud kms keys add-iam-policy-binding` [`--member`](https://cloud.google.com/sdk/gcloud/reference/kms/keys/add-iam-policy-binding#--member). */
	// +optional
	ServiceAccountRef *v1alpha1.ResourceRef `json:"serviceAccountRef,omitempty"`
}

type WorkstationconfigEnv struct {
	/* Name is the name of the environment variable. */
	// +optional
	Name *string `json:"name,omitempty"`

	/* Value is the value of the environment variable. */
	// +optional
	Value *string `json:"value,omitempty"`
}

type WorkstationconfigGceInstance struct {
	/* Optional. The size of the boot disk for the VM in gigabytes (GB). The minimum boot disk size is `30` GB. Defaults to `50` GB. */
	// +optional
	BootDiskSizeGB *int32 `json:"bootDiskSizeGB,omitempty"`

	/* Optional. A set of Compute Engine Confidential VM instance options. */
	// +optional
	ConfidentialInstanceConfig *WorkstationconfigConfidentialInstanceConfig `json:"confidentialInstanceConfig,omitempty"`

	/* Optional. When set to true, disables public IP addresses for VMs. If you disable public IP addresses, you must set up Private Google Access or Cloud NAT on your network. If you use Private Google Access and you use `private.googleapis.com` or `restricted.googleapis.com` for Container Registry and Artifact Registry, make sure that you set up DNS records for domains `*.gcr.io` and `*.pkg.dev`. Defaults to false (VMs have public IP addresses). */
	// +optional
	DisablePublicIPAddresses *bool `json:"disablePublicIPAddresses,omitempty"`

	/* Optional. Whether to enable nested virtualization on Cloud Workstations
	VMs created under this workstation configuration.

	Nested virtualization lets you run virtual machine (VM) instances
	inside your workstation. Before enabling nested virtualization,
	consider the following important considerations. Cloud Workstations
	instances are subject to the [same restrictions as Compute Engine
	instances](https://cloud.google.com/compute/docs/instances/nested-virtualization/overview#restrictions):

	* **Organization policy**: projects, folders, or
	organizations may be restricted from creating nested VMs if the
	**Disable VM nested virtualization** constraint is enforced in
	the organization policy. For more information, see the
	Compute Engine section,
	[Checking whether nested virtualization is
	allowed](https://cloud.google.com/compute/docs/instances/nested-virtualization/managing-constraint#checking_whether_nested_virtualization_is_allowed).
	* **Performance**: nested VMs might experience a 10% or greater
	decrease in performance for workloads that are CPU-bound and
	possibly greater than a 10% decrease for workloads that are
	input/output bound.
	* **Machine Type**: nested virtualization can only be enabled on
	workstation configurations that specify a
	[machine_type][google.cloud.workstations.v1.WorkstationConfig.Host.GceInstance.machine_type]
	in the N1 or N2 machine series.
	* **GPUs**: nested virtualization may not be enabled on workstation
	configurations with accelerators.
	* **Operating System**: Because
	[Container-Optimized
	OS](https://cloud.google.com/compute/docs/images/os-details#container-optimized_os_cos)
	does not support nested virtualization, when nested virtualization is
	enabled, the underlying Compute Engine VM instances boot from an
	[Ubuntu
	LTS](https://cloud.google.com/compute/docs/images/os-details#ubuntu_lts)
	image. */
	// +optional
	EnableNestedVirtualization *bool `json:"enableNestedVirtualization,omitempty"`

	/* Optional. The type of machine to use for VM instancesâ€”for example, `"e2-standard-4"`. For more information about machine types that Cloud Workstations supports, see the list of [available machine types](https://cloud.google.com/workstations/docs/available-machine-types). */
	// +optional
	MachineType *string `json:"machineType,omitempty"`

	/* Optional. The number of VMs that the system should keep idle so that new workstations can be started quickly for new users. Defaults to `0` in the API. */
	// +optional
	PoolSize *int32 `json:"poolSize,omitempty"`

	/* Optional. A reference to the service account for Cloud
	Workstations VMs created with this configuration. When specified, be
	sure that the service account has `logginglogEntries.create` permission
	on the project so it can write logs out to Cloud Logging. If using a
	custom container image, the service account must have permissions to
	pull the specified image.

	If you as the administrator want to be able to `ssh` into the
	underlying VM, you need to set this value to a service account
	for which you have the `iam.serviceAccounts.actAs` permission.
	Conversely, if you don't want anyone to be able to `ssh` into the
	underlying VM, use a service account where no one has that
	permission.

	If not set, VMs run with a service account provided by the
	Cloud Workstations service, and the image must be publicly
	accessible. */
	// +optional
	ServiceAccountRef *v1alpha1.ResourceRef `json:"serviceAccountRef,omitempty"`

	/* Optional. Scopes to grant to the [service_account][google.cloud.workstations.v1.WorkstationConfig.Host.GceInstance.service_account]. Various scopes are automatically added based on feature usage. When specified, users of workstations under this configuration must have `iam.serviceAccounts.actAs` on the service account. */
	// +optional
	ServiceAccountScopes []string `json:"serviceAccountScopes,omitempty"`

	/* Optional. A set of Compute Engine Shielded instance options. */
	// +optional
	ShieldedInstanceConfig *WorkstationconfigShieldedInstanceConfig `json:"shieldedInstanceConfig,omitempty"`

	/* Optional. Network tags to add to the Compute Engine VMs backing the workstations. This option applies [network tags](https://cloud.google.com/vpc/docs/add-remove-network-tags) to VMs created with this configuration. These network tags enable the creation of [firewall rules](https://cloud.google.com/workstations/docs/configure-firewall-rules). */
	// +optional
	Tags []string `json:"tags,omitempty"`
}

type WorkstationconfigGcePD struct {
	/* Optional. The [type of the persistent disk](https://cloud.google.com/compute/docs/disks#disk-types) for the home directory. Defaults to `"pd-standard"`. */
	// +optional
	DiskType *string `json:"diskType,omitempty"`

	/* Optional. Type of file system that the disk should be formatted with. The workstation image must support this file system type. Must be empty if [source_snapshot][google.cloud.workstations.v1.WorkstationConfig.PersistentDirectory.GceRegionalPersistentDisk.source_snapshot] is set. Defaults to `"ext4"`. */
	// +optional
	FsType *string `json:"fsType,omitempty"`

	/* Optional. Whether the persistent disk should be deleted when the workstation is deleted. Valid values are `DELETE` and `RETAIN`. Defaults to `DELETE`. */
	// +optional
	ReclaimPolicy *string `json:"reclaimPolicy,omitempty"`

	/* Optional. The GB capacity of a persistent home directory for each
	workstation created with this configuration. Must be empty if
	[source_snapshot][google.cloud.workstations.v1.WorkstationConfig.PersistentDirectory.GceRegionalPersistentDisk.source_snapshot]
	is set.

	Valid values are `10`, `50`, `100`, `200`, `500`, or `1000`.
	Defaults to `200`. If less than `200` GB, the
	[disk_type][google.cloud.workstations.v1.WorkstationConfig.PersistentDirectory.GceRegionalPersistentDisk.disk_type]
	must be
	`"pd-balanced"` or `"pd-ssd"`. */
	// +optional
	SizeGB *int32 `json:"sizeGB,omitempty"`

	/* Optional. Name of the snapshot to use as the source for the disk. If set, [size_gb][google.cloud.workstations.v1.WorkstationConfig.PersistentDirectory.GceRegionalPersistentDisk.size_gb] and [fs_type][google.cloud.workstations.v1.WorkstationConfig.PersistentDirectory.GceRegionalPersistentDisk.fs_type] must be empty. */
	// +optional
	SourceSnapshot *string `json:"sourceSnapshot,omitempty"`
}

type WorkstationconfigHost struct {
	/* Specifies a Compute Engine instance as the host. */
	// +optional
	GceInstance *WorkstationconfigGceInstance `json:"gceInstance,omitempty"`
}

type WorkstationconfigLabels struct {
	/* Key for the label. */
	// +optional
	Key *string `json:"key,omitempty"`

	/* Value for the label. */
	// +optional
	Value *string `json:"value,omitempty"`
}

type WorkstationconfigPersistentDirectories struct {
	/* A PersistentDirectory backed by a Compute Engine persistent disk. */
	// +optional
	GcePD *WorkstationconfigGcePD `json:"gcePD,omitempty"`

	/* Optional. Location of this directory in the running workstation. */
	// +optional
	MountPath *string `json:"mountPath,omitempty"`
}

type WorkstationconfigReadinessChecks struct {
	/* Optional. Path to which the request should be sent. */
	// +optional
	Path *string `json:"path,omitempty"`

	/* Optional. Port to which the request should be sent. */
	// +optional
	Port *int32 `json:"port,omitempty"`
}

type WorkstationconfigShieldedInstanceConfig struct {
	/* Optional. Whether the instance has integrity monitoring enabled. */
	// +optional
	EnableIntegrityMonitoring *bool `json:"enableIntegrityMonitoring,omitempty"`

	/* Optional. Whether the instance has Secure Boot enabled. */
	// +optional
	EnableSecureBoot *bool `json:"enableSecureBoot,omitempty"`

	/* Optional. Whether the instance has the vTPM enabled. */
	// +optional
	EnableVTPM *bool `json:"enableVTPM,omitempty"`
}

type WorkstationConfigSpec struct {
	/* Optional. Client-specified annotations. */
	// +optional
	Annotations []WorkstationconfigAnnotations `json:"annotations,omitempty"`

	/* Optional. Container that runs upon startup for each workstation using this workstation configuration. */
	// +optional
	Container *WorkstationconfigContainer `json:"container,omitempty"`

	/* Optional. Human-readable name for this workstation configuration. */
	// +optional
	DisplayName *string `json:"displayName,omitempty"`

	/* Immutable. Encrypts resources of this workstation configuration using a
	customer-managed encryption key (CMEK).

	If specified, the boot disk of the Compute Engine instance and the
	persistent disk are encrypted using this encryption key. If
	this field is not set, the disks are encrypted using a generated
	key. Customer-managed encryption keys do not protect disk metadata.

	If the customer-managed encryption key is rotated, when the workstation
	instance is stopped, the system attempts to recreate the
	persistent disk with the new version of the key. Be sure to keep
	older versions of the key until the persistent disk is recreated.
	Otherwise, data on the persistent disk might be lost.

	If the encryption key is revoked, the workstation session automatically
	stops within 7 hours.

	Immutable after the workstation configuration is created. */
	// +optional
	EncryptionKey *WorkstationconfigEncryptionKey `json:"encryptionKey,omitempty"`

	/* Optional. Runtime host for the workstation. */
	// +optional
	Host *WorkstationconfigHost `json:"host,omitempty"`

	/* Optional. Number of seconds to wait before automatically stopping a
	workstation after it last received user traffic.

	A value of `"0s"` indicates that Cloud Workstations VMs created with this
	configuration should never time out due to idleness.
	Provide
	[duration](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#duration)
	terminated by `s` for secondsâ€”for example, `"7200s"` (2 hours).
	The default is `"1200s"` (20 minutes). */
	// +optional
	IdleTimeout *string `json:"idleTimeout,omitempty"`

	/* Optional. [Labels](https://cloud.google.com/workstations/docs/label-resources) that are applied to the workstation configuration and that are also propagated to the underlying Compute Engine resources. */
	// +optional
	Labels []WorkstationconfigLabels `json:"labels,omitempty"`

	/* The location of the WorkstationConfig. */
	// +optional
	Location *string `json:"location,omitempty"`

	/* Parent is a reference to the parent WorkstationCluster for this WorkstationConfig. */
	ParentRef v1alpha1.ResourceRef `json:"parentRef"`

	/* Optional. Directories to persist across workstation sessions. */
	// +optional
	PersistentDirectories []WorkstationconfigPersistentDirectories `json:"persistentDirectories,omitempty"`

	/* Immutable. The Project that this resource belongs to. */
	ProjectRef v1alpha1.ResourceRef `json:"projectRef"`

	/* Optional. Readiness checks to perform when starting a workstation using this workstation configuration. Mark a workstation as running only after all specified readiness checks return 200 status codes. */
	// +optional
	ReadinessChecks []WorkstationconfigReadinessChecks `json:"readinessChecks,omitempty"`

	/* Optional. Immutable. Specifies the zones used to replicate the VM and disk
	resources within the region. If set, exactly two zones within the
	workstation cluster's region must be specifiedâ€”for example,
	`['us-central1-a', 'us-central1-f']`. If this field is empty, two default
	zones within the region are used.

	Immutable after the workstation configuration is created. */
	// +optional
	ReplicaZones []string `json:"replicaZones,omitempty"`

	/* Immutable. The WorkstationConfig name. If not given, the metadata.name will be used. */
	// +optional
	ResourceID *string `json:"resourceID,omitempty"`

	/* Optional. Number of seconds that a workstation can run until it is
	automatically shut down. We recommend that workstations be shut down daily
	to reduce costs and so that security updates can be applied upon restart.
	The
	[idle_timeout][google.cloud.workstations.v1.WorkstationConfig.idle_timeout]
	and
	[running_timeout][google.cloud.workstations.v1.WorkstationConfig.running_timeout]
	fields are independent of each other. Note that the
	[running_timeout][google.cloud.workstations.v1.WorkstationConfig.running_timeout]
	field shuts down VMs after the specified time, regardless of whether or not
	the VMs are idle.

	Provide duration terminated by `s` for secondsâ€”for example, `"54000s"`
	(15 hours). Defaults to `"43200s"` (12 hours). A value of `"0s"` indicates
	that workstations using this configuration should never time out. If
	[encryption_key][google.cloud.workstations.v1.WorkstationConfig.encryption_key]
	is set, it must be greater than `"0s"` and less than
	`"86400s"` (24 hours).

	Warning: A value of `"0s"` indicates that Cloud Workstations VMs created
	with this configuration have no maximum running time. This is strongly
	discouraged because you incur costs and will not pick up security updates. */
	// +optional
	RunningTimeout *string `json:"runningTimeout,omitempty"`
}

type WorkstationconfigGcpConditionsStatus struct {
	/* The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code]. */
	// +optional
	Code *int32 `json:"code,omitempty"`

	/* A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client. */
	// +optional
	Message *string `json:"message,omitempty"`
}

type WorkstationconfigObservedStateStatus struct {
	/* Output only. Time when this workstation configuration was created. */
	// +optional
	CreateTime *string `json:"createTime,omitempty"`

	/* Output only. Whether this resource is degraded, in which case it may require user action to restore full functionality. See also the [conditions][google.cloud.workstations.v1.WorkstationConfig.conditions] field. */
	// +optional
	Degraded *bool `json:"degraded,omitempty"`

	/* Output only. Time when this workstation configuration was soft-deleted. */
	// +optional
	DeleteTime *string `json:"deleteTime,omitempty"`

	/* Optional. Checksum computed by the server. May be sent on update and delete requests to make sure that the client has an up-to-date value before proceeding. */
	// +optional
	Etag *string `json:"etag,omitempty"`

	/* Output only. Status conditions describing the current resource state. */
	// +optional
	GcpConditions []WorkstationconfigGcpConditionsStatus `json:"gcpConditions,omitempty"`

	/* Output only. Number of instances currently available in the pool for faster workstation startup. */
	// +optional
	PooledInstances *int32 `json:"pooledInstances,omitempty"`

	/* Output only. A system-assigned unique identifier for this workstation configuration. */
	// +optional
	Uid *string `json:"uid,omitempty"`

	/* Output only. Time when this workstation configuration was most recently updated. */
	// +optional
	UpdateTime *string `json:"updateTime,omitempty"`
}

type WorkstationConfigStatus struct {
	/* Conditions represent the latest available observations of the
	   WorkstationConfig's current state. */
	Conditions []v1alpha1.Condition `json:"conditions,omitempty"`
	/* A unique specifier for the WorkstationConfig resource in GCP. */
	// +optional
	ExternalRef *string `json:"externalRef,omitempty"`

	/* ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource. */
	// +optional
	ObservedGeneration *int64 `json:"observedGeneration,omitempty"`

	/* ObservedState is the state of the resource as most recently observed in GCP. */
	// +optional
	ObservedState *WorkstationconfigObservedStateStatus `json:"observedState,omitempty"`
}

// +genclient
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:resource:categories=gcp,shortName=gcpworkstationconfig;gcpworkstationconfigs
// +kubebuilder:subresource:status
// +kubebuilder:metadata:labels="cnrm.cloud.google.com/managed-by-kcc=true";"cnrm.cloud.google.com/system=true"
// +kubebuilder:printcolumn:name="Age",JSONPath=".metadata.creationTimestamp",type="date"
// +kubebuilder:printcolumn:name="Ready",JSONPath=".status.conditions[?(@.type=='Ready')].status",type="string",description="When 'True', the most recent reconcile of the resource succeeded"
// +kubebuilder:printcolumn:name="Status",JSONPath=".status.conditions[?(@.type=='Ready')].reason",type="string",description="The reason for the value in 'Ready'"
// +kubebuilder:printcolumn:name="Status Age",JSONPath=".status.conditions[?(@.type=='Ready')].lastTransitionTime",type="date",description="The last transition time for the value in 'Status'"

// WorkstationConfig is the Schema for the workstations API
// +k8s:openapi-gen=true
type WorkstationConfig struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`

	Spec   WorkstationConfigSpec   `json:"spec,omitempty"`
	Status WorkstationConfigStatus `json:"status,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// WorkstationConfigList contains a list of WorkstationConfig
type WorkstationConfigList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []WorkstationConfig `json:"items"`
}

func init() {
	SchemeBuilder.Register(&WorkstationConfig{}, &WorkstationConfigList{})
}
