//go:build !ignore_autogenerated
// +build !ignore_autogenerated

// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// *** DISCLAIMER ***
// Config Connector's go-client for CRDs is currently in ALPHA, which means
// that future versions of the go-client may include breaking changes.
// Please try it out and give us feedback!

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1beta1

import (
	v1alpha1 "github.com/GoogleCloudPlatform/k8s-config-connector/pkg/clients/generated/apis/k8s/v1alpha1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilestoreBackup) DeepCopyInto(out *FilestoreBackup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilestoreBackup.
func (in *FilestoreBackup) DeepCopy() *FilestoreBackup {
	if in == nil {
		return nil
	}
	out := new(FilestoreBackup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FilestoreBackup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilestoreBackupList) DeepCopyInto(out *FilestoreBackupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FilestoreBackup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilestoreBackupList.
func (in *FilestoreBackupList) DeepCopy() *FilestoreBackupList {
	if in == nil {
		return nil
	}
	out := new(FilestoreBackupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FilestoreBackupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilestoreBackupSpec) DeepCopyInto(out *FilestoreBackupSpec) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	out.ProjectRef = in.ProjectRef
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
	out.SourceInstanceRef = in.SourceInstanceRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilestoreBackupSpec.
func (in *FilestoreBackupSpec) DeepCopy() *FilestoreBackupSpec {
	if in == nil {
		return nil
	}
	out := new(FilestoreBackupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilestoreBackupStatus) DeepCopyInto(out *FilestoreBackupStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1alpha1.Condition, len(*in))
		copy(*out, *in)
	}
	if in.CapacityGb != nil {
		in, out := &in.CapacityGb, &out.CapacityGb
		*out = new(int64)
		**out = **in
	}
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.DownloadBytes != nil {
		in, out := &in.DownloadBytes, &out.DownloadBytes
		*out = new(int64)
		**out = **in
	}
	if in.ObservedGeneration != nil {
		in, out := &in.ObservedGeneration, &out.ObservedGeneration
		*out = new(int64)
		**out = **in
	}
	if in.SourceInstanceTier != nil {
		in, out := &in.SourceInstanceTier, &out.SourceInstanceTier
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.StorageBytes != nil {
		in, out := &in.StorageBytes, &out.StorageBytes
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilestoreBackupStatus.
func (in *FilestoreBackupStatus) DeepCopy() *FilestoreBackupStatus {
	if in == nil {
		return nil
	}
	out := new(FilestoreBackupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilestoreInstance) DeepCopyInto(out *FilestoreInstance) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilestoreInstance.
func (in *FilestoreInstance) DeepCopy() *FilestoreInstance {
	if in == nil {
		return nil
	}
	out := new(FilestoreInstance)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FilestoreInstance) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilestoreInstanceList) DeepCopyInto(out *FilestoreInstanceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FilestoreInstance, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilestoreInstanceList.
func (in *FilestoreInstanceList) DeepCopy() *FilestoreInstanceList {
	if in == nil {
		return nil
	}
	out := new(FilestoreInstanceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FilestoreInstanceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilestoreInstanceSpec) DeepCopyInto(out *FilestoreInstanceSpec) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FileShares != nil {
		in, out := &in.FileShares, &out.FileShares
		*out = make([]InstanceFileShares, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Networks != nil {
		in, out := &in.Networks, &out.Networks
		*out = make([]InstanceNetworks, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	out.ProjectRef = in.ProjectRef
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
	if in.Tier != nil {
		in, out := &in.Tier, &out.Tier
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilestoreInstanceSpec.
func (in *FilestoreInstanceSpec) DeepCopy() *FilestoreInstanceSpec {
	if in == nil {
		return nil
	}
	out := new(FilestoreInstanceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilestoreInstanceStatus) DeepCopyInto(out *FilestoreInstanceStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1alpha1.Condition, len(*in))
		copy(*out, *in)
	}
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.ObservedGeneration != nil {
		in, out := &in.ObservedGeneration, &out.ObservedGeneration
		*out = new(int64)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.StatusMessage != nil {
		in, out := &in.StatusMessage, &out.StatusMessage
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilestoreInstanceStatus.
func (in *FilestoreInstanceStatus) DeepCopy() *FilestoreInstanceStatus {
	if in == nil {
		return nil
	}
	out := new(FilestoreInstanceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceFileShares) DeepCopyInto(out *InstanceFileShares) {
	*out = *in
	if in.CapacityGb != nil {
		in, out := &in.CapacityGb, &out.CapacityGb
		*out = new(int64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NfsExportOptions != nil {
		in, out := &in.NfsExportOptions, &out.NfsExportOptions
		*out = make([]InstanceNfsExportOptions, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceBackupRef != nil {
		in, out := &in.SourceBackupRef, &out.SourceBackupRef
		*out = new(v1alpha1.ResourceRef)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceFileShares.
func (in *InstanceFileShares) DeepCopy() *InstanceFileShares {
	if in == nil {
		return nil
	}
	out := new(InstanceFileShares)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceNetworks) DeepCopyInto(out *InstanceNetworks) {
	*out = *in
	if in.IpAddresses != nil {
		in, out := &in.IpAddresses, &out.IpAddresses
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Modes != nil {
		in, out := &in.Modes, &out.Modes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(v1alpha1.ResourceRef)
		**out = **in
	}
	if in.ReservedIPRange != nil {
		in, out := &in.ReservedIPRange, &out.ReservedIPRange
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceNetworks.
func (in *InstanceNetworks) DeepCopy() *InstanceNetworks {
	if in == nil {
		return nil
	}
	out := new(InstanceNetworks)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceNfsExportOptions) DeepCopyInto(out *InstanceNfsExportOptions) {
	*out = *in
	if in.AccessMode != nil {
		in, out := &in.AccessMode, &out.AccessMode
		*out = new(string)
		**out = **in
	}
	if in.AnonGid != nil {
		in, out := &in.AnonGid, &out.AnonGid
		*out = new(int64)
		**out = **in
	}
	if in.AnonUid != nil {
		in, out := &in.AnonUid, &out.AnonUid
		*out = new(int64)
		**out = **in
	}
	if in.IpRanges != nil {
		in, out := &in.IpRanges, &out.IpRanges
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.SquashMode != nil {
		in, out := &in.SquashMode, &out.SquashMode
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceNfsExportOptions.
func (in *InstanceNfsExportOptions) DeepCopy() *InstanceNfsExportOptions {
	if in == nil {
		return nil
	}
	out := new(InstanceNfsExportOptions)
	in.DeepCopyInto(out)
	return out
}
