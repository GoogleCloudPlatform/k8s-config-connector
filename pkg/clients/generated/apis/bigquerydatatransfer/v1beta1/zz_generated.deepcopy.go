//go:build !ignore_autogenerated
// +build !ignore_autogenerated

// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// *** DISCLAIMER ***
// Config Connector's go-client for CRDs is currently in ALPHA, which means
// that future versions of the go-client may include breaking changes.
// Please try it out and give us feedback!

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1beta1

import (
	v1alpha1 "github.com/GoogleCloudPlatform/k8s-config-connector/pkg/clients/generated/apis/k8s/v1alpha1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BigQueryDataTransferConfig) DeepCopyInto(out *BigQueryDataTransferConfig) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BigQueryDataTransferConfig.
func (in *BigQueryDataTransferConfig) DeepCopy() *BigQueryDataTransferConfig {
	if in == nil {
		return nil
	}
	out := new(BigQueryDataTransferConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BigQueryDataTransferConfig) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BigQueryDataTransferConfigList) DeepCopyInto(out *BigQueryDataTransferConfigList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]BigQueryDataTransferConfig, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BigQueryDataTransferConfigList.
func (in *BigQueryDataTransferConfigList) DeepCopy() *BigQueryDataTransferConfigList {
	if in == nil {
		return nil
	}
	out := new(BigQueryDataTransferConfigList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BigQueryDataTransferConfigList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BigQueryDataTransferConfigSpec) DeepCopyInto(out *BigQueryDataTransferConfigSpec) {
	*out = *in
	if in.DataRefreshWindowDays != nil {
		in, out := &in.DataRefreshWindowDays, &out.DataRefreshWindowDays
		*out = new(int32)
		**out = **in
	}
	out.DatasetRef = in.DatasetRef
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = new(bool)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.EmailPreferences != nil {
		in, out := &in.EmailPreferences, &out.EmailPreferences
		*out = new(ConfigEmailPreferences)
		(*in).DeepCopyInto(*out)
	}
	if in.EncryptionConfiguration != nil {
		in, out := &in.EncryptionConfiguration, &out.EncryptionConfiguration
		*out = new(ConfigEncryptionConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.Params != nil {
		in, out := &in.Params, &out.Params
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	out.ProjectRef = in.ProjectRef
	if in.PubSubTopicRef != nil {
		in, out := &in.PubSubTopicRef, &out.PubSubTopicRef
		*out = new(v1alpha1.ResourceRef)
		**out = **in
	}
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
	if in.ScheduleOptions != nil {
		in, out := &in.ScheduleOptions, &out.ScheduleOptions
		*out = new(ConfigScheduleOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceAccountRef != nil {
		in, out := &in.ServiceAccountRef, &out.ServiceAccountRef
		*out = new(v1alpha1.ResourceRef)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BigQueryDataTransferConfigSpec.
func (in *BigQueryDataTransferConfigSpec) DeepCopy() *BigQueryDataTransferConfigSpec {
	if in == nil {
		return nil
	}
	out := new(BigQueryDataTransferConfigSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BigQueryDataTransferConfigStatus) DeepCopyInto(out *BigQueryDataTransferConfigStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1alpha1.Condition, len(*in))
		copy(*out, *in)
	}
	if in.ExternalRef != nil {
		in, out := &in.ExternalRef, &out.ExternalRef
		*out = new(string)
		**out = **in
	}
	if in.ObservedGeneration != nil {
		in, out := &in.ObservedGeneration, &out.ObservedGeneration
		*out = new(int64)
		**out = **in
	}
	if in.ObservedState != nil {
		in, out := &in.ObservedState, &out.ObservedState
		*out = new(ConfigObservedStateStatus)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BigQueryDataTransferConfigStatus.
func (in *BigQueryDataTransferConfigStatus) DeepCopy() *BigQueryDataTransferConfigStatus {
	if in == nil {
		return nil
	}
	out := new(BigQueryDataTransferConfigStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigEmailPreferences) DeepCopyInto(out *ConfigEmailPreferences) {
	*out = *in
	if in.EnableFailureEmail != nil {
		in, out := &in.EnableFailureEmail, &out.EnableFailureEmail
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigEmailPreferences.
func (in *ConfigEmailPreferences) DeepCopy() *ConfigEmailPreferences {
	if in == nil {
		return nil
	}
	out := new(ConfigEmailPreferences)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigEncryptionConfiguration) DeepCopyInto(out *ConfigEncryptionConfiguration) {
	*out = *in
	if in.KmsKeyRef != nil {
		in, out := &in.KmsKeyRef, &out.KmsKeyRef
		*out = new(v1alpha1.ResourceRef)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigEncryptionConfiguration.
func (in *ConfigEncryptionConfiguration) DeepCopy() *ConfigEncryptionConfiguration {
	if in == nil {
		return nil
	}
	out := new(ConfigEncryptionConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigObservedStateStatus) DeepCopyInto(out *ConfigObservedStateStatus) {
	*out = *in
	if in.DatasetRegion != nil {
		in, out := &in.DatasetRegion, &out.DatasetRegion
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NextRunTime != nil {
		in, out := &in.NextRunTime, &out.NextRunTime
		*out = new(string)
		**out = **in
	}
	if in.OwnerInfo != nil {
		in, out := &in.OwnerInfo, &out.OwnerInfo
		*out = new(ConfigOwnerInfoStatus)
		(*in).DeepCopyInto(*out)
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
	if in.UserID != nil {
		in, out := &in.UserID, &out.UserID
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigObservedStateStatus.
func (in *ConfigObservedStateStatus) DeepCopy() *ConfigObservedStateStatus {
	if in == nil {
		return nil
	}
	out := new(ConfigObservedStateStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigOwnerInfoStatus) DeepCopyInto(out *ConfigOwnerInfoStatus) {
	*out = *in
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigOwnerInfoStatus.
func (in *ConfigOwnerInfoStatus) DeepCopy() *ConfigOwnerInfoStatus {
	if in == nil {
		return nil
	}
	out := new(ConfigOwnerInfoStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigScheduleOptions) DeepCopyInto(out *ConfigScheduleOptions) {
	*out = *in
	if in.DisableAutoScheduling != nil {
		in, out := &in.DisableAutoScheduling, &out.DisableAutoScheduling
		*out = new(bool)
		**out = **in
	}
	if in.EndTime != nil {
		in, out := &in.EndTime, &out.EndTime
		*out = new(string)
		**out = **in
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigScheduleOptions.
func (in *ConfigScheduleOptions) DeepCopy() *ConfigScheduleOptions {
	if in == nil {
		return nil
	}
	out := new(ConfigScheduleOptions)
	in.DeepCopyInto(out)
	return out
}
