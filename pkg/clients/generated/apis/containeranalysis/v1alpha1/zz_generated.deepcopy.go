//go:build !ignore_autogenerated
// +build !ignore_autogenerated

// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// *** DISCLAIMER ***
// Config Connector's go-client for CRDs is currently in ALPHA, which means
// that future versions of the go-client may include breaking changes.
// Please try it out and give us feedback!

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1alpha1

import (
	k8sv1alpha1 "github.com/GoogleCloudPlatform/k8s-config-connector/pkg/clients/generated/apis/k8s/v1alpha1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerAnalysisOccurrence) DeepCopyInto(out *ContainerAnalysisOccurrence) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerAnalysisOccurrence.
func (in *ContainerAnalysisOccurrence) DeepCopy() *ContainerAnalysisOccurrence {
	if in == nil {
		return nil
	}
	out := new(ContainerAnalysisOccurrence)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ContainerAnalysisOccurrence) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerAnalysisOccurrenceList) DeepCopyInto(out *ContainerAnalysisOccurrenceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ContainerAnalysisOccurrence, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerAnalysisOccurrenceList.
func (in *ContainerAnalysisOccurrenceList) DeepCopy() *ContainerAnalysisOccurrenceList {
	if in == nil {
		return nil
	}
	out := new(ContainerAnalysisOccurrenceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ContainerAnalysisOccurrenceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerAnalysisOccurrenceSpec) DeepCopyInto(out *ContainerAnalysisOccurrenceSpec) {
	*out = *in
	in.Attestation.DeepCopyInto(&out.Attestation)
	out.ProjectRef = in.ProjectRef
	if in.Remediation != nil {
		in, out := &in.Remediation, &out.Remediation
		*out = new(string)
		**out = **in
	}
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerAnalysisOccurrenceSpec.
func (in *ContainerAnalysisOccurrenceSpec) DeepCopy() *ContainerAnalysisOccurrenceSpec {
	if in == nil {
		return nil
	}
	out := new(ContainerAnalysisOccurrenceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerAnalysisOccurrenceStatus) DeepCopyInto(out *ContainerAnalysisOccurrenceStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]k8sv1alpha1.Condition, len(*in))
		copy(*out, *in)
	}
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ObservedGeneration != nil {
		in, out := &in.ObservedGeneration, &out.ObservedGeneration
		*out = new(int64)
		**out = **in
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerAnalysisOccurrenceStatus.
func (in *ContainerAnalysisOccurrenceStatus) DeepCopy() *ContainerAnalysisOccurrenceStatus {
	if in == nil {
		return nil
	}
	out := new(ContainerAnalysisOccurrenceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OccurrenceAttestation) DeepCopyInto(out *OccurrenceAttestation) {
	*out = *in
	if in.Signatures != nil {
		in, out := &in.Signatures, &out.Signatures
		*out = make([]OccurrenceSignatures, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OccurrenceAttestation.
func (in *OccurrenceAttestation) DeepCopy() *OccurrenceAttestation {
	if in == nil {
		return nil
	}
	out := new(OccurrenceAttestation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OccurrenceSignatures) DeepCopyInto(out *OccurrenceSignatures) {
	*out = *in
	if in.Signature != nil {
		in, out := &in.Signature, &out.Signature
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OccurrenceSignatures.
func (in *OccurrenceSignatures) DeepCopy() *OccurrenceSignatures {
	if in == nil {
		return nil
	}
	out := new(OccurrenceSignatures)
	in.DeepCopyInto(out)
	return out
}
