//go:build !ignore_autogenerated
// +build !ignore_autogenerated

// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// *** DISCLAIMER ***
// Config Connector's go-client for CRDs is currently in ALPHA, which means
// that future versions of the go-client may include breaking changes.
// Please try it out and give us feedback!

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1beta1

import (
	v1alpha1 "github.com/GoogleCloudPlatform/k8s-config-connector/pkg/clients/generated/apis/k8s/v1alpha1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerAnalysisNote) DeepCopyInto(out *ContainerAnalysisNote) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerAnalysisNote.
func (in *ContainerAnalysisNote) DeepCopy() *ContainerAnalysisNote {
	if in == nil {
		return nil
	}
	out := new(ContainerAnalysisNote)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ContainerAnalysisNote) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerAnalysisNoteList) DeepCopyInto(out *ContainerAnalysisNoteList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ContainerAnalysisNote, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerAnalysisNoteList.
func (in *ContainerAnalysisNoteList) DeepCopy() *ContainerAnalysisNoteList {
	if in == nil {
		return nil
	}
	out := new(ContainerAnalysisNoteList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ContainerAnalysisNoteList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerAnalysisNoteSpec) DeepCopyInto(out *ContainerAnalysisNoteSpec) {
	*out = *in
	if in.Attestation != nil {
		in, out := &in.Attestation, &out.Attestation
		*out = new(NoteAttestation)
		(*in).DeepCopyInto(*out)
	}
	if in.Build != nil {
		in, out := &in.Build, &out.Build
		*out = new(NoteBuild)
		**out = **in
	}
	if in.Deployment != nil {
		in, out := &in.Deployment, &out.Deployment
		*out = new(NoteDeployment)
		(*in).DeepCopyInto(*out)
	}
	if in.Discovery != nil {
		in, out := &in.Discovery, &out.Discovery
		*out = new(NoteDiscovery)
		**out = **in
	}
	if in.ExpirationTime != nil {
		in, out := &in.ExpirationTime, &out.ExpirationTime
		*out = new(string)
		**out = **in
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(NoteImage)
		(*in).DeepCopyInto(*out)
	}
	if in.LongDescription != nil {
		in, out := &in.LongDescription, &out.LongDescription
		*out = new(string)
		**out = **in
	}
	if in.Package != nil {
		in, out := &in.Package, &out.Package
		*out = new(NotePackage)
		(*in).DeepCopyInto(*out)
	}
	if in.RelatedNoteNames != nil {
		in, out := &in.RelatedNoteNames, &out.RelatedNoteNames
		*out = make([]v1alpha1.ResourceRef, len(*in))
		copy(*out, *in)
	}
	if in.RelatedUrl != nil {
		in, out := &in.RelatedUrl, &out.RelatedUrl
		*out = make([]NoteRelatedUrl, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
	if in.ShortDescription != nil {
		in, out := &in.ShortDescription, &out.ShortDescription
		*out = new(string)
		**out = **in
	}
	if in.Vulnerability != nil {
		in, out := &in.Vulnerability, &out.Vulnerability
		*out = new(NoteVulnerability)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerAnalysisNoteSpec.
func (in *ContainerAnalysisNoteSpec) DeepCopy() *ContainerAnalysisNoteSpec {
	if in == nil {
		return nil
	}
	out := new(ContainerAnalysisNoteSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerAnalysisNoteStatus) DeepCopyInto(out *ContainerAnalysisNoteStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1alpha1.Condition, len(*in))
		copy(*out, *in)
	}
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(NoteImageStatus)
		(*in).DeepCopyInto(*out)
	}
	if in.ObservedGeneration != nil {
		in, out := &in.ObservedGeneration, &out.ObservedGeneration
		*out = new(int64)
		**out = **in
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerAnalysisNoteStatus.
func (in *ContainerAnalysisNoteStatus) DeepCopy() *ContainerAnalysisNoteStatus {
	if in == nil {
		return nil
	}
	out := new(ContainerAnalysisNoteStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NoteAffectedVersionEnd) DeepCopyInto(out *NoteAffectedVersionEnd) {
	*out = *in
	if in.Epoch != nil {
		in, out := &in.Epoch, &out.Epoch
		*out = new(int64)
		**out = **in
	}
	if in.FullName != nil {
		in, out := &in.FullName, &out.FullName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Revision != nil {
		in, out := &in.Revision, &out.Revision
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NoteAffectedVersionEnd.
func (in *NoteAffectedVersionEnd) DeepCopy() *NoteAffectedVersionEnd {
	if in == nil {
		return nil
	}
	out := new(NoteAffectedVersionEnd)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NoteAffectedVersionStart) DeepCopyInto(out *NoteAffectedVersionStart) {
	*out = *in
	if in.Epoch != nil {
		in, out := &in.Epoch, &out.Epoch
		*out = new(int64)
		**out = **in
	}
	if in.FullName != nil {
		in, out := &in.FullName, &out.FullName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Revision != nil {
		in, out := &in.Revision, &out.Revision
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NoteAffectedVersionStart.
func (in *NoteAffectedVersionStart) DeepCopy() *NoteAffectedVersionStart {
	if in == nil {
		return nil
	}
	out := new(NoteAffectedVersionStart)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NoteAttestation) DeepCopyInto(out *NoteAttestation) {
	*out = *in
	if in.Hint != nil {
		in, out := &in.Hint, &out.Hint
		*out = new(NoteHint)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NoteAttestation.
func (in *NoteAttestation) DeepCopy() *NoteAttestation {
	if in == nil {
		return nil
	}
	out := new(NoteAttestation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NoteBuild) DeepCopyInto(out *NoteBuild) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NoteBuild.
func (in *NoteBuild) DeepCopy() *NoteBuild {
	if in == nil {
		return nil
	}
	out := new(NoteBuild)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NoteCvssV3) DeepCopyInto(out *NoteCvssV3) {
	*out = *in
	if in.AttackComplexity != nil {
		in, out := &in.AttackComplexity, &out.AttackComplexity
		*out = new(string)
		**out = **in
	}
	if in.AttackVector != nil {
		in, out := &in.AttackVector, &out.AttackVector
		*out = new(string)
		**out = **in
	}
	if in.AvailabilityImpact != nil {
		in, out := &in.AvailabilityImpact, &out.AvailabilityImpact
		*out = new(string)
		**out = **in
	}
	if in.BaseScore != nil {
		in, out := &in.BaseScore, &out.BaseScore
		*out = new(float64)
		**out = **in
	}
	if in.ConfidentialityImpact != nil {
		in, out := &in.ConfidentialityImpact, &out.ConfidentialityImpact
		*out = new(string)
		**out = **in
	}
	if in.ExploitabilityScore != nil {
		in, out := &in.ExploitabilityScore, &out.ExploitabilityScore
		*out = new(float64)
		**out = **in
	}
	if in.ImpactScore != nil {
		in, out := &in.ImpactScore, &out.ImpactScore
		*out = new(float64)
		**out = **in
	}
	if in.IntegrityImpact != nil {
		in, out := &in.IntegrityImpact, &out.IntegrityImpact
		*out = new(string)
		**out = **in
	}
	if in.PrivilegesRequired != nil {
		in, out := &in.PrivilegesRequired, &out.PrivilegesRequired
		*out = new(string)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
	if in.UserInteraction != nil {
		in, out := &in.UserInteraction, &out.UserInteraction
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NoteCvssV3.
func (in *NoteCvssV3) DeepCopy() *NoteCvssV3 {
	if in == nil {
		return nil
	}
	out := new(NoteCvssV3)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NoteDeployment) DeepCopyInto(out *NoteDeployment) {
	*out = *in
	if in.ResourceUri != nil {
		in, out := &in.ResourceUri, &out.ResourceUri
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NoteDeployment.
func (in *NoteDeployment) DeepCopy() *NoteDeployment {
	if in == nil {
		return nil
	}
	out := new(NoteDeployment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NoteDetails) DeepCopyInto(out *NoteDetails) {
	*out = *in
	if in.AffectedVersionEnd != nil {
		in, out := &in.AffectedVersionEnd, &out.AffectedVersionEnd
		*out = new(NoteAffectedVersionEnd)
		(*in).DeepCopyInto(*out)
	}
	if in.AffectedVersionStart != nil {
		in, out := &in.AffectedVersionStart, &out.AffectedVersionStart
		*out = new(NoteAffectedVersionStart)
		(*in).DeepCopyInto(*out)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FixedCpeUri != nil {
		in, out := &in.FixedCpeUri, &out.FixedCpeUri
		*out = new(string)
		**out = **in
	}
	if in.FixedPackage != nil {
		in, out := &in.FixedPackage, &out.FixedPackage
		*out = new(string)
		**out = **in
	}
	if in.FixedVersion != nil {
		in, out := &in.FixedVersion, &out.FixedVersion
		*out = new(NoteFixedVersion)
		(*in).DeepCopyInto(*out)
	}
	if in.IsObsolete != nil {
		in, out := &in.IsObsolete, &out.IsObsolete
		*out = new(bool)
		**out = **in
	}
	if in.PackageType != nil {
		in, out := &in.PackageType, &out.PackageType
		*out = new(string)
		**out = **in
	}
	if in.SeverityName != nil {
		in, out := &in.SeverityName, &out.SeverityName
		*out = new(string)
		**out = **in
	}
	if in.SourceUpdateTime != nil {
		in, out := &in.SourceUpdateTime, &out.SourceUpdateTime
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NoteDetails.
func (in *NoteDetails) DeepCopy() *NoteDetails {
	if in == nil {
		return nil
	}
	out := new(NoteDetails)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NoteDiscovery) DeepCopyInto(out *NoteDiscovery) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NoteDiscovery.
func (in *NoteDiscovery) DeepCopy() *NoteDiscovery {
	if in == nil {
		return nil
	}
	out := new(NoteDiscovery)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NoteDistribution) DeepCopyInto(out *NoteDistribution) {
	*out = *in
	if in.Architecture != nil {
		in, out := &in.Architecture, &out.Architecture
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.LatestVersion != nil {
		in, out := &in.LatestVersion, &out.LatestVersion
		*out = new(NoteLatestVersion)
		(*in).DeepCopyInto(*out)
	}
	if in.Maintainer != nil {
		in, out := &in.Maintainer, &out.Maintainer
		*out = new(string)
		**out = **in
	}
	if in.Url != nil {
		in, out := &in.Url, &out.Url
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NoteDistribution.
func (in *NoteDistribution) DeepCopy() *NoteDistribution {
	if in == nil {
		return nil
	}
	out := new(NoteDistribution)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NoteFingerprint) DeepCopyInto(out *NoteFingerprint) {
	*out = *in
	if in.V2Blob != nil {
		in, out := &in.V2Blob, &out.V2Blob
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NoteFingerprint.
func (in *NoteFingerprint) DeepCopy() *NoteFingerprint {
	if in == nil {
		return nil
	}
	out := new(NoteFingerprint)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NoteFingerprintStatus) DeepCopyInto(out *NoteFingerprintStatus) {
	*out = *in
	if in.V2Name != nil {
		in, out := &in.V2Name, &out.V2Name
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NoteFingerprintStatus.
func (in *NoteFingerprintStatus) DeepCopy() *NoteFingerprintStatus {
	if in == nil {
		return nil
	}
	out := new(NoteFingerprintStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NoteFixedVersion) DeepCopyInto(out *NoteFixedVersion) {
	*out = *in
	if in.Epoch != nil {
		in, out := &in.Epoch, &out.Epoch
		*out = new(int64)
		**out = **in
	}
	if in.FullName != nil {
		in, out := &in.FullName, &out.FullName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Revision != nil {
		in, out := &in.Revision, &out.Revision
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NoteFixedVersion.
func (in *NoteFixedVersion) DeepCopy() *NoteFixedVersion {
	if in == nil {
		return nil
	}
	out := new(NoteFixedVersion)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NoteFixingKbs) DeepCopyInto(out *NoteFixingKbs) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Url != nil {
		in, out := &in.Url, &out.Url
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NoteFixingKbs.
func (in *NoteFixingKbs) DeepCopy() *NoteFixingKbs {
	if in == nil {
		return nil
	}
	out := new(NoteFixingKbs)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NoteHint) DeepCopyInto(out *NoteHint) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NoteHint.
func (in *NoteHint) DeepCopy() *NoteHint {
	if in == nil {
		return nil
	}
	out := new(NoteHint)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NoteImage) DeepCopyInto(out *NoteImage) {
	*out = *in
	in.Fingerprint.DeepCopyInto(&out.Fingerprint)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NoteImage.
func (in *NoteImage) DeepCopy() *NoteImage {
	if in == nil {
		return nil
	}
	out := new(NoteImage)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NoteImageStatus) DeepCopyInto(out *NoteImageStatus) {
	*out = *in
	if in.Fingerprint != nil {
		in, out := &in.Fingerprint, &out.Fingerprint
		*out = new(NoteFingerprintStatus)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NoteImageStatus.
func (in *NoteImageStatus) DeepCopy() *NoteImageStatus {
	if in == nil {
		return nil
	}
	out := new(NoteImageStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NoteLatestVersion) DeepCopyInto(out *NoteLatestVersion) {
	*out = *in
	if in.Epoch != nil {
		in, out := &in.Epoch, &out.Epoch
		*out = new(int64)
		**out = **in
	}
	if in.FullName != nil {
		in, out := &in.FullName, &out.FullName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Revision != nil {
		in, out := &in.Revision, &out.Revision
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NoteLatestVersion.
func (in *NoteLatestVersion) DeepCopy() *NoteLatestVersion {
	if in == nil {
		return nil
	}
	out := new(NoteLatestVersion)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotePackage) DeepCopyInto(out *NotePackage) {
	*out = *in
	if in.Distribution != nil {
		in, out := &in.Distribution, &out.Distribution
		*out = make([]NoteDistribution, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotePackage.
func (in *NotePackage) DeepCopy() *NotePackage {
	if in == nil {
		return nil
	}
	out := new(NotePackage)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NoteRelatedUrl) DeepCopyInto(out *NoteRelatedUrl) {
	*out = *in
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.Url != nil {
		in, out := &in.Url, &out.Url
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NoteRelatedUrl.
func (in *NoteRelatedUrl) DeepCopy() *NoteRelatedUrl {
	if in == nil {
		return nil
	}
	out := new(NoteRelatedUrl)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NoteVulnerability) DeepCopyInto(out *NoteVulnerability) {
	*out = *in
	if in.CvssScore != nil {
		in, out := &in.CvssScore, &out.CvssScore
		*out = new(float64)
		**out = **in
	}
	if in.CvssV3 != nil {
		in, out := &in.CvssV3, &out.CvssV3
		*out = new(NoteCvssV3)
		(*in).DeepCopyInto(*out)
	}
	if in.Details != nil {
		in, out := &in.Details, &out.Details
		*out = make([]NoteDetails, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Severity != nil {
		in, out := &in.Severity, &out.Severity
		*out = new(string)
		**out = **in
	}
	if in.SourceUpdateTime != nil {
		in, out := &in.SourceUpdateTime, &out.SourceUpdateTime
		*out = new(string)
		**out = **in
	}
	if in.WindowsDetails != nil {
		in, out := &in.WindowsDetails, &out.WindowsDetails
		*out = make([]NoteWindowsDetails, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NoteVulnerability.
func (in *NoteVulnerability) DeepCopy() *NoteVulnerability {
	if in == nil {
		return nil
	}
	out := new(NoteVulnerability)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NoteWindowsDetails) DeepCopyInto(out *NoteWindowsDetails) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FixingKbs != nil {
		in, out := &in.FixingKbs, &out.FixingKbs
		*out = make([]NoteFixingKbs, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NoteWindowsDetails.
func (in *NoteWindowsDetails) DeepCopy() *NoteWindowsDetails {
	if in == nil {
		return nil
	}
	out := new(NoteWindowsDetails)
	in.DeepCopyInto(out)
	return out
}
