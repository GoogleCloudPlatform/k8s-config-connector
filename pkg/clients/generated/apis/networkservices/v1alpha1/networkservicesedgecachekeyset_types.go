// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// ----------------------------------------------------------------------------
//
//     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
//
// ----------------------------------------------------------------------------
//
//     This file is automatically generated by Config Connector and manual
//     changes will be clobbered when the file is regenerated.
//
// ----------------------------------------------------------------------------

// *** DISCLAIMER ***
// Config Connector's go-client for CRDs is currently in ALPHA, which means
// that future versions of the go-client may include breaking changes.
// Please try it out and give us feedback!

package v1alpha1

import (
	"github.com/GoogleCloudPlatform/k8s-config-connector/pkg/clients/generated/apis/k8s/v1alpha1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

type EdgecachekeysetPublicKey struct {
	/* The ID of the public key. The ID must be 1-63 characters long, and comply with RFC1035.
	The name must be 1-64 characters long, and match the regular expression [a-zA-Z][a-zA-Z0-9_-]*
	which means the first character must be a letter, and all following characters must be a dash, underscore, letter or digit. */
	Id string `json:"id"`

	/* Set to true to have the CDN automatically manage this public key value. */
	// +optional
	Managed *bool `json:"managed,omitempty"`

	/* The base64-encoded value of the Ed25519 public key. The base64 encoding can be padded (44 bytes) or unpadded (43 bytes).
	Representations or encodings of the public key other than this will be rejected with an error. */
	// +optional
	Value *EdgecachekeysetValue `json:"value,omitempty"`
}

type EdgecachekeysetValidationSharedKeys struct {
	/* The name of the secret version in Secret Manager.

	The resource name of the secret version must be in the format 'projects/* /secrets/* /versions/*' where the '*' values are replaced by the secrets themselves.
	The secrets must be at least 16 bytes large.  The recommended secret size depends on the signature algorithm you are using.
	* If you are using HMAC-SHA1, we suggest 20-byte secrets.
	* If you are using HMAC-SHA256, we suggest 32-byte secrets.
	See RFC 2104, Section 3 for more details on these recommendations. */
	SecretVersion string `json:"secretVersion"`
}

type EdgecachekeysetValue struct {
	/* Value of the field. Cannot be used if 'valueFrom' is specified. */
	// +optional
	Value *string `json:"value,omitempty"`

	/* Source for the field's value. Cannot be used if 'value' is specified. */
	// +optional
	ValueFrom *EdgecachekeysetValueFrom `json:"valueFrom,omitempty"`
}

type EdgecachekeysetValueFrom struct {
	/* Reference to a value with the given key in the given Secret in the resource's namespace. */
	// +optional
	SecretKeyRef *v1alpha1.SecretKeyRef `json:"secretKeyRef,omitempty"`
}

type NetworkServicesEdgeCacheKeysetSpec struct {
	/* A human-readable description of the resource. */
	// +optional
	Description *string `json:"description,omitempty"`

	/* The project that this resource belongs to. */
	ProjectRef v1alpha1.ResourceRef `json:"projectRef"`

	/* An ordered list of Ed25519 public keys to use for validating signed requests.
	You must specify 'public_keys' or 'validation_shared_keys' (or both). The keys in 'public_keys' are checked first.
	You may specify no more than one Google-managed public key.
	If you specify 'public_keys', you must specify at least one (1) key and may specify up to three (3) keys.

	Ed25519 public keys are not secret, and only allow Google to validate a request was signed by your corresponding private key.
	Ensure that the private key is kept secret, and that only authorized users can add public keys to a keyset. */
	// +optional
	PublicKey []EdgecachekeysetPublicKey `json:"publicKey,omitempty"`

	/* Immutable. Optional. The name of the resource. Used for creation and acquisition. When unset, the value of `metadata.name` is used as the default. */
	// +optional
	ResourceID *string `json:"resourceID,omitempty"`

	/* An ordered list of shared keys to use for validating signed requests.
	Shared keys are secret.  Ensure that only authorized users can add 'validation_shared_keys' to a keyset.
	You can rotate keys by appending (pushing) a new key to the list of 'validation_shared_keys' and removing any superseded keys.
	You must specify 'public_keys' or 'validation_shared_keys' (or both). The keys in 'public_keys' are checked first. */
	// +optional
	ValidationSharedKeys []EdgecachekeysetValidationSharedKeys `json:"validationSharedKeys,omitempty"`
}

type NetworkServicesEdgeCacheKeysetStatus struct {
	/* Conditions represent the latest available observations of the
	   NetworkServicesEdgeCacheKeyset's current state. */
	Conditions []v1alpha1.Condition `json:"conditions,omitempty"`
	/* ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource. */
	// +optional
	ObservedGeneration *int64 `json:"observedGeneration,omitempty"`
}

// +genclient
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:resource:categories=gcp,shortName=gcpnetworkservicesedgecachekeyset;gcpnetworkservicesedgecachekeysets
// +kubebuilder:subresource:status
// +kubebuilder:metadata:labels="cnrm.cloud.google.com/managed-by-kcc=true";"cnrm.cloud.google.com/stability-level=alpha";"cnrm.cloud.google.com/system=true";"cnrm.cloud.google.com/tf2crd=true"
// +kubebuilder:printcolumn:name="Age",JSONPath=".metadata.creationTimestamp",type="date"
// +kubebuilder:printcolumn:name="Ready",JSONPath=".status.conditions[?(@.type=='Ready')].status",type="string",description="When 'True', the most recent reconcile of the resource succeeded"
// +kubebuilder:printcolumn:name="Status",JSONPath=".status.conditions[?(@.type=='Ready')].reason",type="string",description="The reason for the value in 'Ready'"
// +kubebuilder:printcolumn:name="Status Age",JSONPath=".status.conditions[?(@.type=='Ready')].lastTransitionTime",type="date",description="The last transition time for the value in 'Status'"

// NetworkServicesEdgeCacheKeyset is the Schema for the networkservices API
// +k8s:openapi-gen=true
type NetworkServicesEdgeCacheKeyset struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`

	Spec   NetworkServicesEdgeCacheKeysetSpec   `json:"spec,omitempty"`
	Status NetworkServicesEdgeCacheKeysetStatus `json:"status,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// NetworkServicesEdgeCacheKeysetList contains a list of NetworkServicesEdgeCacheKeyset
type NetworkServicesEdgeCacheKeysetList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []NetworkServicesEdgeCacheKeyset `json:"items"`
}

func init() {
	SchemeBuilder.Register(&NetworkServicesEdgeCacheKeyset{}, &NetworkServicesEdgeCacheKeysetList{})
}
