//go:build !ignore_autogenerated
// +build !ignore_autogenerated

// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// *** DISCLAIMER ***
// Config Connector's go-client for CRDs is currently in ALPHA, which means
// that future versions of the go-client may include breaking changes.
// Please try it out and give us feedback!

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1alpha1

import (
	k8sv1alpha1 "github.com/GoogleCloudPlatform/k8s-config-connector/pkg/clients/generated/apis/k8s/v1alpha1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionprofileBigqueryProfile) DeepCopyInto(out *ConnectionprofileBigqueryProfile) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionprofileBigqueryProfile.
func (in *ConnectionprofileBigqueryProfile) DeepCopy() *ConnectionprofileBigqueryProfile {
	if in == nil {
		return nil
	}
	out := new(ConnectionprofileBigqueryProfile)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionprofileCaCertificate) DeepCopyInto(out *ConnectionprofileCaCertificate) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	if in.ValueFrom != nil {
		in, out := &in.ValueFrom, &out.ValueFrom
		*out = new(ConnectionprofileValueFrom)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionprofileCaCertificate.
func (in *ConnectionprofileCaCertificate) DeepCopy() *ConnectionprofileCaCertificate {
	if in == nil {
		return nil
	}
	out := new(ConnectionprofileCaCertificate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionprofileClientCertificate) DeepCopyInto(out *ConnectionprofileClientCertificate) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	if in.ValueFrom != nil {
		in, out := &in.ValueFrom, &out.ValueFrom
		*out = new(ConnectionprofileValueFrom)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionprofileClientCertificate.
func (in *ConnectionprofileClientCertificate) DeepCopy() *ConnectionprofileClientCertificate {
	if in == nil {
		return nil
	}
	out := new(ConnectionprofileClientCertificate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionprofileClientKey) DeepCopyInto(out *ConnectionprofileClientKey) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	if in.ValueFrom != nil {
		in, out := &in.ValueFrom, &out.ValueFrom
		*out = new(ConnectionprofileValueFrom)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionprofileClientKey.
func (in *ConnectionprofileClientKey) DeepCopy() *ConnectionprofileClientKey {
	if in == nil {
		return nil
	}
	out := new(ConnectionprofileClientKey)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionprofileForwardSshConnectivity) DeepCopyInto(out *ConnectionprofileForwardSshConnectivity) {
	*out = *in
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = new(ConnectionprofilePassword)
		(*in).DeepCopyInto(*out)
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int64)
		**out = **in
	}
	if in.PrivateKey != nil {
		in, out := &in.PrivateKey, &out.PrivateKey
		*out = new(ConnectionprofilePrivateKey)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionprofileForwardSshConnectivity.
func (in *ConnectionprofileForwardSshConnectivity) DeepCopy() *ConnectionprofileForwardSshConnectivity {
	if in == nil {
		return nil
	}
	out := new(ConnectionprofileForwardSshConnectivity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionprofileGcsProfile) DeepCopyInto(out *ConnectionprofileGcsProfile) {
	*out = *in
	if in.RootPath != nil {
		in, out := &in.RootPath, &out.RootPath
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionprofileGcsProfile.
func (in *ConnectionprofileGcsProfile) DeepCopy() *ConnectionprofileGcsProfile {
	if in == nil {
		return nil
	}
	out := new(ConnectionprofileGcsProfile)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionprofileMysqlProfile) DeepCopyInto(out *ConnectionprofileMysqlProfile) {
	*out = *in
	in.Password.DeepCopyInto(&out.Password)
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int64)
		**out = **in
	}
	if in.SslConfig != nil {
		in, out := &in.SslConfig, &out.SslConfig
		*out = new(ConnectionprofileSslConfig)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionprofileMysqlProfile.
func (in *ConnectionprofileMysqlProfile) DeepCopy() *ConnectionprofileMysqlProfile {
	if in == nil {
		return nil
	}
	out := new(ConnectionprofileMysqlProfile)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionprofileOracleProfile) DeepCopyInto(out *ConnectionprofileOracleProfile) {
	*out = *in
	if in.ConnectionAttributes != nil {
		in, out := &in.ConnectionAttributes, &out.ConnectionAttributes
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	in.Password.DeepCopyInto(&out.Password)
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionprofileOracleProfile.
func (in *ConnectionprofileOracleProfile) DeepCopy() *ConnectionprofileOracleProfile {
	if in == nil {
		return nil
	}
	out := new(ConnectionprofileOracleProfile)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionprofilePassword) DeepCopyInto(out *ConnectionprofilePassword) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	if in.ValueFrom != nil {
		in, out := &in.ValueFrom, &out.ValueFrom
		*out = new(ConnectionprofileValueFrom)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionprofilePassword.
func (in *ConnectionprofilePassword) DeepCopy() *ConnectionprofilePassword {
	if in == nil {
		return nil
	}
	out := new(ConnectionprofilePassword)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionprofilePostgresqlProfile) DeepCopyInto(out *ConnectionprofilePostgresqlProfile) {
	*out = *in
	in.Password.DeepCopyInto(&out.Password)
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionprofilePostgresqlProfile.
func (in *ConnectionprofilePostgresqlProfile) DeepCopy() *ConnectionprofilePostgresqlProfile {
	if in == nil {
		return nil
	}
	out := new(ConnectionprofilePostgresqlProfile)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionprofilePrivateConnectivity) DeepCopyInto(out *ConnectionprofilePrivateConnectivity) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionprofilePrivateConnectivity.
func (in *ConnectionprofilePrivateConnectivity) DeepCopy() *ConnectionprofilePrivateConnectivity {
	if in == nil {
		return nil
	}
	out := new(ConnectionprofilePrivateConnectivity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionprofilePrivateKey) DeepCopyInto(out *ConnectionprofilePrivateKey) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	if in.ValueFrom != nil {
		in, out := &in.ValueFrom, &out.ValueFrom
		*out = new(ConnectionprofileValueFrom)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionprofilePrivateKey.
func (in *ConnectionprofilePrivateKey) DeepCopy() *ConnectionprofilePrivateKey {
	if in == nil {
		return nil
	}
	out := new(ConnectionprofilePrivateKey)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionprofileSslConfig) DeepCopyInto(out *ConnectionprofileSslConfig) {
	*out = *in
	if in.CaCertificate != nil {
		in, out := &in.CaCertificate, &out.CaCertificate
		*out = new(ConnectionprofileCaCertificate)
		(*in).DeepCopyInto(*out)
	}
	if in.CaCertificateSet != nil {
		in, out := &in.CaCertificateSet, &out.CaCertificateSet
		*out = new(bool)
		**out = **in
	}
	if in.ClientCertificate != nil {
		in, out := &in.ClientCertificate, &out.ClientCertificate
		*out = new(ConnectionprofileClientCertificate)
		(*in).DeepCopyInto(*out)
	}
	if in.ClientCertificateSet != nil {
		in, out := &in.ClientCertificateSet, &out.ClientCertificateSet
		*out = new(bool)
		**out = **in
	}
	if in.ClientKey != nil {
		in, out := &in.ClientKey, &out.ClientKey
		*out = new(ConnectionprofileClientKey)
		(*in).DeepCopyInto(*out)
	}
	if in.ClientKeySet != nil {
		in, out := &in.ClientKeySet, &out.ClientKeySet
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionprofileSslConfig.
func (in *ConnectionprofileSslConfig) DeepCopy() *ConnectionprofileSslConfig {
	if in == nil {
		return nil
	}
	out := new(ConnectionprofileSslConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionprofileValueFrom) DeepCopyInto(out *ConnectionprofileValueFrom) {
	*out = *in
	if in.SecretKeyRef != nil {
		in, out := &in.SecretKeyRef, &out.SecretKeyRef
		*out = new(k8sv1alpha1.SecretKeyRef)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionprofileValueFrom.
func (in *ConnectionprofileValueFrom) DeepCopy() *ConnectionprofileValueFrom {
	if in == nil {
		return nil
	}
	out := new(ConnectionprofileValueFrom)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatastreamConnectionProfile) DeepCopyInto(out *DatastreamConnectionProfile) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatastreamConnectionProfile.
func (in *DatastreamConnectionProfile) DeepCopy() *DatastreamConnectionProfile {
	if in == nil {
		return nil
	}
	out := new(DatastreamConnectionProfile)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DatastreamConnectionProfile) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatastreamConnectionProfileList) DeepCopyInto(out *DatastreamConnectionProfileList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DatastreamConnectionProfile, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatastreamConnectionProfileList.
func (in *DatastreamConnectionProfileList) DeepCopy() *DatastreamConnectionProfileList {
	if in == nil {
		return nil
	}
	out := new(DatastreamConnectionProfileList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DatastreamConnectionProfileList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatastreamConnectionProfileSpec) DeepCopyInto(out *DatastreamConnectionProfileSpec) {
	*out = *in
	if in.BigqueryProfile != nil {
		in, out := &in.BigqueryProfile, &out.BigqueryProfile
		*out = new(ConnectionprofileBigqueryProfile)
		**out = **in
	}
	if in.ForwardSshConnectivity != nil {
		in, out := &in.ForwardSshConnectivity, &out.ForwardSshConnectivity
		*out = new(ConnectionprofileForwardSshConnectivity)
		(*in).DeepCopyInto(*out)
	}
	if in.GcsProfile != nil {
		in, out := &in.GcsProfile, &out.GcsProfile
		*out = new(ConnectionprofileGcsProfile)
		(*in).DeepCopyInto(*out)
	}
	if in.MysqlProfile != nil {
		in, out := &in.MysqlProfile, &out.MysqlProfile
		*out = new(ConnectionprofileMysqlProfile)
		(*in).DeepCopyInto(*out)
	}
	if in.OracleProfile != nil {
		in, out := &in.OracleProfile, &out.OracleProfile
		*out = new(ConnectionprofileOracleProfile)
		(*in).DeepCopyInto(*out)
	}
	if in.PostgresqlProfile != nil {
		in, out := &in.PostgresqlProfile, &out.PostgresqlProfile
		*out = new(ConnectionprofilePostgresqlProfile)
		(*in).DeepCopyInto(*out)
	}
	if in.PrivateConnectivity != nil {
		in, out := &in.PrivateConnectivity, &out.PrivateConnectivity
		*out = new(ConnectionprofilePrivateConnectivity)
		**out = **in
	}
	out.ProjectRef = in.ProjectRef
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatastreamConnectionProfileSpec.
func (in *DatastreamConnectionProfileSpec) DeepCopy() *DatastreamConnectionProfileSpec {
	if in == nil {
		return nil
	}
	out := new(DatastreamConnectionProfileSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatastreamConnectionProfileStatus) DeepCopyInto(out *DatastreamConnectionProfileStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]k8sv1alpha1.Condition, len(*in))
		copy(*out, *in)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ObservedGeneration != nil {
		in, out := &in.ObservedGeneration, &out.ObservedGeneration
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatastreamConnectionProfileStatus.
func (in *DatastreamConnectionProfileStatus) DeepCopy() *DatastreamConnectionProfileStatus {
	if in == nil {
		return nil
	}
	out := new(DatastreamConnectionProfileStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatastreamPrivateConnection) DeepCopyInto(out *DatastreamPrivateConnection) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatastreamPrivateConnection.
func (in *DatastreamPrivateConnection) DeepCopy() *DatastreamPrivateConnection {
	if in == nil {
		return nil
	}
	out := new(DatastreamPrivateConnection)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DatastreamPrivateConnection) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatastreamPrivateConnectionList) DeepCopyInto(out *DatastreamPrivateConnectionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DatastreamPrivateConnection, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatastreamPrivateConnectionList.
func (in *DatastreamPrivateConnectionList) DeepCopy() *DatastreamPrivateConnectionList {
	if in == nil {
		return nil
	}
	out := new(DatastreamPrivateConnectionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DatastreamPrivateConnectionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatastreamPrivateConnectionSpec) DeepCopyInto(out *DatastreamPrivateConnectionSpec) {
	*out = *in
	out.ProjectRef = in.ProjectRef
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
	out.VpcPeeringConfig = in.VpcPeeringConfig
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatastreamPrivateConnectionSpec.
func (in *DatastreamPrivateConnectionSpec) DeepCopy() *DatastreamPrivateConnectionSpec {
	if in == nil {
		return nil
	}
	out := new(DatastreamPrivateConnectionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatastreamPrivateConnectionStatus) DeepCopyInto(out *DatastreamPrivateConnectionStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]k8sv1alpha1.Condition, len(*in))
		copy(*out, *in)
	}
	if in.Error != nil {
		in, out := &in.Error, &out.Error
		*out = make([]PrivateconnectionErrorStatus, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ObservedGeneration != nil {
		in, out := &in.ObservedGeneration, &out.ObservedGeneration
		*out = new(int64)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatastreamPrivateConnectionStatus.
func (in *DatastreamPrivateConnectionStatus) DeepCopy() *DatastreamPrivateConnectionStatus {
	if in == nil {
		return nil
	}
	out := new(DatastreamPrivateConnectionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatastreamStream) DeepCopyInto(out *DatastreamStream) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatastreamStream.
func (in *DatastreamStream) DeepCopy() *DatastreamStream {
	if in == nil {
		return nil
	}
	out := new(DatastreamStream)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DatastreamStream) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatastreamStreamList) DeepCopyInto(out *DatastreamStreamList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DatastreamStream, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatastreamStreamList.
func (in *DatastreamStreamList) DeepCopy() *DatastreamStreamList {
	if in == nil {
		return nil
	}
	out := new(DatastreamStreamList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DatastreamStreamList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatastreamStreamSpec) DeepCopyInto(out *DatastreamStreamSpec) {
	*out = *in
	if in.BackfillAll != nil {
		in, out := &in.BackfillAll, &out.BackfillAll
		*out = new(StreamBackfillAll)
		(*in).DeepCopyInto(*out)
	}
	if in.BackfillNone != nil {
		in, out := &in.BackfillNone, &out.BackfillNone
		*out = new(StreamBackfillNone)
		**out = **in
	}
	if in.CustomerManagedEncryptionKey != nil {
		in, out := &in.CustomerManagedEncryptionKey, &out.CustomerManagedEncryptionKey
		*out = new(string)
		**out = **in
	}
	if in.DesiredState != nil {
		in, out := &in.DesiredState, &out.DesiredState
		*out = new(string)
		**out = **in
	}
	in.DestinationConfig.DeepCopyInto(&out.DestinationConfig)
	out.ProjectRef = in.ProjectRef
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
	in.SourceConfig.DeepCopyInto(&out.SourceConfig)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatastreamStreamSpec.
func (in *DatastreamStreamSpec) DeepCopy() *DatastreamStreamSpec {
	if in == nil {
		return nil
	}
	out := new(DatastreamStreamSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatastreamStreamStatus) DeepCopyInto(out *DatastreamStreamStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]k8sv1alpha1.Condition, len(*in))
		copy(*out, *in)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ObservedGeneration != nil {
		in, out := &in.ObservedGeneration, &out.ObservedGeneration
		*out = new(int64)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatastreamStreamStatus.
func (in *DatastreamStreamStatus) DeepCopy() *DatastreamStreamStatus {
	if in == nil {
		return nil
	}
	out := new(DatastreamStreamStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateconnectionErrorStatus) DeepCopyInto(out *PrivateconnectionErrorStatus) {
	*out = *in
	if in.Details != nil {
		in, out := &in.Details, &out.Details
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateconnectionErrorStatus.
func (in *PrivateconnectionErrorStatus) DeepCopy() *PrivateconnectionErrorStatus {
	if in == nil {
		return nil
	}
	out := new(PrivateconnectionErrorStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateconnectionVpcPeeringConfig) DeepCopyInto(out *PrivateconnectionVpcPeeringConfig) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateconnectionVpcPeeringConfig.
func (in *PrivateconnectionVpcPeeringConfig) DeepCopy() *PrivateconnectionVpcPeeringConfig {
	if in == nil {
		return nil
	}
	out := new(PrivateconnectionVpcPeeringConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StreamAvroFileFormat) DeepCopyInto(out *StreamAvroFileFormat) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StreamAvroFileFormat.
func (in *StreamAvroFileFormat) DeepCopy() *StreamAvroFileFormat {
	if in == nil {
		return nil
	}
	out := new(StreamAvroFileFormat)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StreamBackfillAll) DeepCopyInto(out *StreamBackfillAll) {
	*out = *in
	if in.MysqlExcludedObjects != nil {
		in, out := &in.MysqlExcludedObjects, &out.MysqlExcludedObjects
		*out = new(StreamMysqlExcludedObjects)
		(*in).DeepCopyInto(*out)
	}
	if in.OracleExcludedObjects != nil {
		in, out := &in.OracleExcludedObjects, &out.OracleExcludedObjects
		*out = new(StreamOracleExcludedObjects)
		(*in).DeepCopyInto(*out)
	}
	if in.PostgresqlExcludedObjects != nil {
		in, out := &in.PostgresqlExcludedObjects, &out.PostgresqlExcludedObjects
		*out = new(StreamPostgresqlExcludedObjects)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StreamBackfillAll.
func (in *StreamBackfillAll) DeepCopy() *StreamBackfillAll {
	if in == nil {
		return nil
	}
	out := new(StreamBackfillAll)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StreamBackfillNone) DeepCopyInto(out *StreamBackfillNone) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StreamBackfillNone.
func (in *StreamBackfillNone) DeepCopy() *StreamBackfillNone {
	if in == nil {
		return nil
	}
	out := new(StreamBackfillNone)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StreamBigqueryDestinationConfig) DeepCopyInto(out *StreamBigqueryDestinationConfig) {
	*out = *in
	if in.DataFreshness != nil {
		in, out := &in.DataFreshness, &out.DataFreshness
		*out = new(string)
		**out = **in
	}
	if in.SingleTargetDataset != nil {
		in, out := &in.SingleTargetDataset, &out.SingleTargetDataset
		*out = new(StreamSingleTargetDataset)
		**out = **in
	}
	if in.SourceHierarchyDatasets != nil {
		in, out := &in.SourceHierarchyDatasets, &out.SourceHierarchyDatasets
		*out = new(StreamSourceHierarchyDatasets)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StreamBigqueryDestinationConfig.
func (in *StreamBigqueryDestinationConfig) DeepCopy() *StreamBigqueryDestinationConfig {
	if in == nil {
		return nil
	}
	out := new(StreamBigqueryDestinationConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StreamDatasetTemplate) DeepCopyInto(out *StreamDatasetTemplate) {
	*out = *in
	if in.DatasetIdPrefix != nil {
		in, out := &in.DatasetIdPrefix, &out.DatasetIdPrefix
		*out = new(string)
		**out = **in
	}
	if in.KmsKeyName != nil {
		in, out := &in.KmsKeyName, &out.KmsKeyName
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StreamDatasetTemplate.
func (in *StreamDatasetTemplate) DeepCopy() *StreamDatasetTemplate {
	if in == nil {
		return nil
	}
	out := new(StreamDatasetTemplate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StreamDestinationConfig) DeepCopyInto(out *StreamDestinationConfig) {
	*out = *in
	if in.BigqueryDestinationConfig != nil {
		in, out := &in.BigqueryDestinationConfig, &out.BigqueryDestinationConfig
		*out = new(StreamBigqueryDestinationConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.GcsDestinationConfig != nil {
		in, out := &in.GcsDestinationConfig, &out.GcsDestinationConfig
		*out = new(StreamGcsDestinationConfig)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StreamDestinationConfig.
func (in *StreamDestinationConfig) DeepCopy() *StreamDestinationConfig {
	if in == nil {
		return nil
	}
	out := new(StreamDestinationConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StreamDropLargeObjects) DeepCopyInto(out *StreamDropLargeObjects) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StreamDropLargeObjects.
func (in *StreamDropLargeObjects) DeepCopy() *StreamDropLargeObjects {
	if in == nil {
		return nil
	}
	out := new(StreamDropLargeObjects)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StreamExcludeObjects) DeepCopyInto(out *StreamExcludeObjects) {
	*out = *in
	if in.PostgresqlSchemas != nil {
		in, out := &in.PostgresqlSchemas, &out.PostgresqlSchemas
		*out = make([]StreamPostgresqlSchemas, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StreamExcludeObjects.
func (in *StreamExcludeObjects) DeepCopy() *StreamExcludeObjects {
	if in == nil {
		return nil
	}
	out := new(StreamExcludeObjects)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StreamGcsDestinationConfig) DeepCopyInto(out *StreamGcsDestinationConfig) {
	*out = *in
	if in.AvroFileFormat != nil {
		in, out := &in.AvroFileFormat, &out.AvroFileFormat
		*out = new(StreamAvroFileFormat)
		**out = **in
	}
	if in.FileRotationInterval != nil {
		in, out := &in.FileRotationInterval, &out.FileRotationInterval
		*out = new(string)
		**out = **in
	}
	if in.FileRotationMb != nil {
		in, out := &in.FileRotationMb, &out.FileRotationMb
		*out = new(int64)
		**out = **in
	}
	if in.JsonFileFormat != nil {
		in, out := &in.JsonFileFormat, &out.JsonFileFormat
		*out = new(StreamJsonFileFormat)
		(*in).DeepCopyInto(*out)
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StreamGcsDestinationConfig.
func (in *StreamGcsDestinationConfig) DeepCopy() *StreamGcsDestinationConfig {
	if in == nil {
		return nil
	}
	out := new(StreamGcsDestinationConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StreamIncludeObjects) DeepCopyInto(out *StreamIncludeObjects) {
	*out = *in
	if in.PostgresqlSchemas != nil {
		in, out := &in.PostgresqlSchemas, &out.PostgresqlSchemas
		*out = make([]StreamPostgresqlSchemas, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StreamIncludeObjects.
func (in *StreamIncludeObjects) DeepCopy() *StreamIncludeObjects {
	if in == nil {
		return nil
	}
	out := new(StreamIncludeObjects)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StreamJsonFileFormat) DeepCopyInto(out *StreamJsonFileFormat) {
	*out = *in
	if in.Compression != nil {
		in, out := &in.Compression, &out.Compression
		*out = new(string)
		**out = **in
	}
	if in.SchemaFileFormat != nil {
		in, out := &in.SchemaFileFormat, &out.SchemaFileFormat
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StreamJsonFileFormat.
func (in *StreamJsonFileFormat) DeepCopy() *StreamJsonFileFormat {
	if in == nil {
		return nil
	}
	out := new(StreamJsonFileFormat)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StreamMysqlColumns) DeepCopyInto(out *StreamMysqlColumns) {
	*out = *in
	if in.Collation != nil {
		in, out := &in.Collation, &out.Collation
		*out = new(string)
		**out = **in
	}
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = new(string)
		**out = **in
	}
	if in.DataType != nil {
		in, out := &in.DataType, &out.DataType
		*out = new(string)
		**out = **in
	}
	if in.Length != nil {
		in, out := &in.Length, &out.Length
		*out = new(int64)
		**out = **in
	}
	if in.Nullable != nil {
		in, out := &in.Nullable, &out.Nullable
		*out = new(bool)
		**out = **in
	}
	if in.OrdinalPosition != nil {
		in, out := &in.OrdinalPosition, &out.OrdinalPosition
		*out = new(int64)
		**out = **in
	}
	if in.PrimaryKey != nil {
		in, out := &in.PrimaryKey, &out.PrimaryKey
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StreamMysqlColumns.
func (in *StreamMysqlColumns) DeepCopy() *StreamMysqlColumns {
	if in == nil {
		return nil
	}
	out := new(StreamMysqlColumns)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StreamMysqlDatabases) DeepCopyInto(out *StreamMysqlDatabases) {
	*out = *in
	if in.MysqlTables != nil {
		in, out := &in.MysqlTables, &out.MysqlTables
		*out = make([]StreamMysqlTables, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StreamMysqlDatabases.
func (in *StreamMysqlDatabases) DeepCopy() *StreamMysqlDatabases {
	if in == nil {
		return nil
	}
	out := new(StreamMysqlDatabases)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StreamMysqlExcludedObjects) DeepCopyInto(out *StreamMysqlExcludedObjects) {
	*out = *in
	if in.MysqlDatabases != nil {
		in, out := &in.MysqlDatabases, &out.MysqlDatabases
		*out = make([]StreamMysqlDatabases, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StreamMysqlExcludedObjects.
func (in *StreamMysqlExcludedObjects) DeepCopy() *StreamMysqlExcludedObjects {
	if in == nil {
		return nil
	}
	out := new(StreamMysqlExcludedObjects)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StreamMysqlSourceConfig) DeepCopyInto(out *StreamMysqlSourceConfig) {
	*out = *in
	if in.ExcludeObjects != nil {
		in, out := &in.ExcludeObjects, &out.ExcludeObjects
		*out = new(StreamExcludeObjects)
		(*in).DeepCopyInto(*out)
	}
	if in.IncludeObjects != nil {
		in, out := &in.IncludeObjects, &out.IncludeObjects
		*out = new(StreamIncludeObjects)
		(*in).DeepCopyInto(*out)
	}
	if in.MaxConcurrentBackfillTasks != nil {
		in, out := &in.MaxConcurrentBackfillTasks, &out.MaxConcurrentBackfillTasks
		*out = new(int64)
		**out = **in
	}
	if in.MaxConcurrentCdcTasks != nil {
		in, out := &in.MaxConcurrentCdcTasks, &out.MaxConcurrentCdcTasks
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StreamMysqlSourceConfig.
func (in *StreamMysqlSourceConfig) DeepCopy() *StreamMysqlSourceConfig {
	if in == nil {
		return nil
	}
	out := new(StreamMysqlSourceConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StreamMysqlTables) DeepCopyInto(out *StreamMysqlTables) {
	*out = *in
	if in.MysqlColumns != nil {
		in, out := &in.MysqlColumns, &out.MysqlColumns
		*out = make([]StreamMysqlColumns, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StreamMysqlTables.
func (in *StreamMysqlTables) DeepCopy() *StreamMysqlTables {
	if in == nil {
		return nil
	}
	out := new(StreamMysqlTables)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StreamOracleColumns) DeepCopyInto(out *StreamOracleColumns) {
	*out = *in
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = new(string)
		**out = **in
	}
	if in.DataType != nil {
		in, out := &in.DataType, &out.DataType
		*out = new(string)
		**out = **in
	}
	if in.Encoding != nil {
		in, out := &in.Encoding, &out.Encoding
		*out = new(string)
		**out = **in
	}
	if in.Length != nil {
		in, out := &in.Length, &out.Length
		*out = new(int64)
		**out = **in
	}
	if in.Nullable != nil {
		in, out := &in.Nullable, &out.Nullable
		*out = new(bool)
		**out = **in
	}
	if in.OrdinalPosition != nil {
		in, out := &in.OrdinalPosition, &out.OrdinalPosition
		*out = new(int64)
		**out = **in
	}
	if in.Precision != nil {
		in, out := &in.Precision, &out.Precision
		*out = new(int64)
		**out = **in
	}
	if in.PrimaryKey != nil {
		in, out := &in.PrimaryKey, &out.PrimaryKey
		*out = new(bool)
		**out = **in
	}
	if in.Scale != nil {
		in, out := &in.Scale, &out.Scale
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StreamOracleColumns.
func (in *StreamOracleColumns) DeepCopy() *StreamOracleColumns {
	if in == nil {
		return nil
	}
	out := new(StreamOracleColumns)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StreamOracleExcludedObjects) DeepCopyInto(out *StreamOracleExcludedObjects) {
	*out = *in
	if in.OracleSchemas != nil {
		in, out := &in.OracleSchemas, &out.OracleSchemas
		*out = make([]StreamOracleSchemas, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StreamOracleExcludedObjects.
func (in *StreamOracleExcludedObjects) DeepCopy() *StreamOracleExcludedObjects {
	if in == nil {
		return nil
	}
	out := new(StreamOracleExcludedObjects)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StreamOracleSchemas) DeepCopyInto(out *StreamOracleSchemas) {
	*out = *in
	if in.OracleTables != nil {
		in, out := &in.OracleTables, &out.OracleTables
		*out = make([]StreamOracleTables, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StreamOracleSchemas.
func (in *StreamOracleSchemas) DeepCopy() *StreamOracleSchemas {
	if in == nil {
		return nil
	}
	out := new(StreamOracleSchemas)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StreamOracleSourceConfig) DeepCopyInto(out *StreamOracleSourceConfig) {
	*out = *in
	if in.DropLargeObjects != nil {
		in, out := &in.DropLargeObjects, &out.DropLargeObjects
		*out = new(StreamDropLargeObjects)
		**out = **in
	}
	if in.ExcludeObjects != nil {
		in, out := &in.ExcludeObjects, &out.ExcludeObjects
		*out = new(StreamExcludeObjects)
		(*in).DeepCopyInto(*out)
	}
	if in.IncludeObjects != nil {
		in, out := &in.IncludeObjects, &out.IncludeObjects
		*out = new(StreamIncludeObjects)
		(*in).DeepCopyInto(*out)
	}
	if in.MaxConcurrentBackfillTasks != nil {
		in, out := &in.MaxConcurrentBackfillTasks, &out.MaxConcurrentBackfillTasks
		*out = new(int64)
		**out = **in
	}
	if in.MaxConcurrentCdcTasks != nil {
		in, out := &in.MaxConcurrentCdcTasks, &out.MaxConcurrentCdcTasks
		*out = new(int64)
		**out = **in
	}
	if in.StreamLargeObjects != nil {
		in, out := &in.StreamLargeObjects, &out.StreamLargeObjects
		*out = new(StreamStreamLargeObjects)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StreamOracleSourceConfig.
func (in *StreamOracleSourceConfig) DeepCopy() *StreamOracleSourceConfig {
	if in == nil {
		return nil
	}
	out := new(StreamOracleSourceConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StreamOracleTables) DeepCopyInto(out *StreamOracleTables) {
	*out = *in
	if in.OracleColumns != nil {
		in, out := &in.OracleColumns, &out.OracleColumns
		*out = make([]StreamOracleColumns, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StreamOracleTables.
func (in *StreamOracleTables) DeepCopy() *StreamOracleTables {
	if in == nil {
		return nil
	}
	out := new(StreamOracleTables)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StreamPostgresqlColumns) DeepCopyInto(out *StreamPostgresqlColumns) {
	*out = *in
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = new(string)
		**out = **in
	}
	if in.DataType != nil {
		in, out := &in.DataType, &out.DataType
		*out = new(string)
		**out = **in
	}
	if in.Length != nil {
		in, out := &in.Length, &out.Length
		*out = new(int64)
		**out = **in
	}
	if in.Nullable != nil {
		in, out := &in.Nullable, &out.Nullable
		*out = new(bool)
		**out = **in
	}
	if in.OrdinalPosition != nil {
		in, out := &in.OrdinalPosition, &out.OrdinalPosition
		*out = new(int64)
		**out = **in
	}
	if in.Precision != nil {
		in, out := &in.Precision, &out.Precision
		*out = new(int64)
		**out = **in
	}
	if in.PrimaryKey != nil {
		in, out := &in.PrimaryKey, &out.PrimaryKey
		*out = new(bool)
		**out = **in
	}
	if in.Scale != nil {
		in, out := &in.Scale, &out.Scale
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StreamPostgresqlColumns.
func (in *StreamPostgresqlColumns) DeepCopy() *StreamPostgresqlColumns {
	if in == nil {
		return nil
	}
	out := new(StreamPostgresqlColumns)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StreamPostgresqlExcludedObjects) DeepCopyInto(out *StreamPostgresqlExcludedObjects) {
	*out = *in
	if in.PostgresqlSchemas != nil {
		in, out := &in.PostgresqlSchemas, &out.PostgresqlSchemas
		*out = make([]StreamPostgresqlSchemas, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StreamPostgresqlExcludedObjects.
func (in *StreamPostgresqlExcludedObjects) DeepCopy() *StreamPostgresqlExcludedObjects {
	if in == nil {
		return nil
	}
	out := new(StreamPostgresqlExcludedObjects)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StreamPostgresqlSchemas) DeepCopyInto(out *StreamPostgresqlSchemas) {
	*out = *in
	if in.PostgresqlTables != nil {
		in, out := &in.PostgresqlTables, &out.PostgresqlTables
		*out = make([]StreamPostgresqlTables, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StreamPostgresqlSchemas.
func (in *StreamPostgresqlSchemas) DeepCopy() *StreamPostgresqlSchemas {
	if in == nil {
		return nil
	}
	out := new(StreamPostgresqlSchemas)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StreamPostgresqlSourceConfig) DeepCopyInto(out *StreamPostgresqlSourceConfig) {
	*out = *in
	if in.ExcludeObjects != nil {
		in, out := &in.ExcludeObjects, &out.ExcludeObjects
		*out = new(StreamExcludeObjects)
		(*in).DeepCopyInto(*out)
	}
	if in.IncludeObjects != nil {
		in, out := &in.IncludeObjects, &out.IncludeObjects
		*out = new(StreamIncludeObjects)
		(*in).DeepCopyInto(*out)
	}
	if in.MaxConcurrentBackfillTasks != nil {
		in, out := &in.MaxConcurrentBackfillTasks, &out.MaxConcurrentBackfillTasks
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StreamPostgresqlSourceConfig.
func (in *StreamPostgresqlSourceConfig) DeepCopy() *StreamPostgresqlSourceConfig {
	if in == nil {
		return nil
	}
	out := new(StreamPostgresqlSourceConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StreamPostgresqlTables) DeepCopyInto(out *StreamPostgresqlTables) {
	*out = *in
	if in.PostgresqlColumns != nil {
		in, out := &in.PostgresqlColumns, &out.PostgresqlColumns
		*out = make([]StreamPostgresqlColumns, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StreamPostgresqlTables.
func (in *StreamPostgresqlTables) DeepCopy() *StreamPostgresqlTables {
	if in == nil {
		return nil
	}
	out := new(StreamPostgresqlTables)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StreamSingleTargetDataset) DeepCopyInto(out *StreamSingleTargetDataset) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StreamSingleTargetDataset.
func (in *StreamSingleTargetDataset) DeepCopy() *StreamSingleTargetDataset {
	if in == nil {
		return nil
	}
	out := new(StreamSingleTargetDataset)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StreamSourceConfig) DeepCopyInto(out *StreamSourceConfig) {
	*out = *in
	if in.MysqlSourceConfig != nil {
		in, out := &in.MysqlSourceConfig, &out.MysqlSourceConfig
		*out = new(StreamMysqlSourceConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.OracleSourceConfig != nil {
		in, out := &in.OracleSourceConfig, &out.OracleSourceConfig
		*out = new(StreamOracleSourceConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.PostgresqlSourceConfig != nil {
		in, out := &in.PostgresqlSourceConfig, &out.PostgresqlSourceConfig
		*out = new(StreamPostgresqlSourceConfig)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StreamSourceConfig.
func (in *StreamSourceConfig) DeepCopy() *StreamSourceConfig {
	if in == nil {
		return nil
	}
	out := new(StreamSourceConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StreamSourceHierarchyDatasets) DeepCopyInto(out *StreamSourceHierarchyDatasets) {
	*out = *in
	in.DatasetTemplate.DeepCopyInto(&out.DatasetTemplate)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StreamSourceHierarchyDatasets.
func (in *StreamSourceHierarchyDatasets) DeepCopy() *StreamSourceHierarchyDatasets {
	if in == nil {
		return nil
	}
	out := new(StreamSourceHierarchyDatasets)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StreamStreamLargeObjects) DeepCopyInto(out *StreamStreamLargeObjects) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StreamStreamLargeObjects.
func (in *StreamStreamLargeObjects) DeepCopy() *StreamStreamLargeObjects {
	if in == nil {
		return nil
	}
	out := new(StreamStreamLargeObjects)
	in.DeepCopyInto(out)
	return out
}
