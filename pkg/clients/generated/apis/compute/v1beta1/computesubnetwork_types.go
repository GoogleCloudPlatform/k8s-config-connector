// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// ----------------------------------------------------------------------------
//
//     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
//
// ----------------------------------------------------------------------------
//
//     This file is automatically generated by Config Connector and manual
//     changes will be clobbered when the file is regenerated.
//
// ----------------------------------------------------------------------------

// *** DISCLAIMER ***
// Config Connector's go-client for CRDs is currently in ALPHA, which means
// that future versions of the go-client may include breaking changes.
// Please try it out and give us feedback!

package v1beta1

import (
	"github.com/GoogleCloudPlatform/k8s-config-connector/pkg/clients/generated/apis/k8s/v1alpha1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

type SubnetworkLogConfig struct {
	/* Can only be specified if VPC flow logging for this subnetwork is enabled.
	Toggles the aggregation interval for collecting flow logs. Increasing the
	interval time will reduce the amount of generated flow logs for long
	lasting connections. Default is an interval of 5 seconds per connection. Default value: "INTERVAL_5_SEC" Possible values: ["INTERVAL_5_SEC", "INTERVAL_30_SEC", "INTERVAL_1_MIN", "INTERVAL_5_MIN", "INTERVAL_10_MIN", "INTERVAL_15_MIN"]. */
	// +optional
	AggregationInterval *string `json:"aggregationInterval,omitempty"`

	/* Export filter used to define which VPC flow logs should be logged, as as CEL expression. See
	https://cloud.google.com/vpc/docs/flow-logs#filtering for details on how to format this field.
	The default value is 'true', which evaluates to include everything. */
	// +optional
	FilterExpr *string `json:"filterExpr,omitempty"`

	/* Can only be specified if VPC flow logging for this subnetwork is enabled.
	The value of the field must be in [0, 1]. Set the sampling rate of VPC
	flow logs within the subnetwork where 1.0 means all collected logs are
	reported and 0.0 means no logs are reported. Default is 0.5 which means
	half of all collected logs are reported. */
	// +optional
	FlowSampling *float64 `json:"flowSampling,omitempty"`

	/* Can only be specified if VPC flow logging for this subnetwork is enabled.
	Configures whether metadata fields should be added to the reported VPC
	flow logs. Default value: "INCLUDE_ALL_METADATA" Possible values: ["EXCLUDE_ALL_METADATA", "INCLUDE_ALL_METADATA", "CUSTOM_METADATA"]. */
	// +optional
	Metadata *string `json:"metadata,omitempty"`

	/* List of metadata fields that should be added to reported logs.
	Can only be specified if VPC flow logs for this subnetwork is enabled and "metadata" is set to CUSTOM_METADATA. */
	// +optional
	MetadataFields []string `json:"metadataFields,omitempty"`
}

type SubnetworkSecondaryIpRange struct {
	/* The range of IP addresses belonging to this subnetwork secondary
	range. Provide this property when you create the subnetwork.
	Ranges must be unique and non-overlapping with all primary and
	secondary IP ranges within a network. Only IPv4 is supported. */
	IpCidrRange string `json:"ipCidrRange"`

	/* The name associated with this subnetwork secondary range, used
	when adding an alias IP range to a VM instance. The name must
	be 1-63 characters long, and comply with RFC1035. The name
	must be unique within the subnetwork. */
	RangeName string `json:"rangeName"`
}

type ComputeSubnetworkSpec struct {
	/* Immutable. An optional description of this resource. Provide this property when
	you create the resource. This field can be set only at resource
	creation time. */
	// +optional
	Description *string `json:"description,omitempty"`

	/* The range of internal addresses that are owned by this subnetwork.
	Provide this property when you create the subnetwork. For example,
	10.0.0.0/8 or 192.168.0.0/16. Ranges must be unique and
	non-overlapping within a network. Only IPv4 is supported. */
	IpCidrRange string `json:"ipCidrRange"`

	/* The access type of IPv6 address this subnet holds. It's immutable and can only be specified during creation
	or the first time the subnet is updated into IPV4_IPV6 dual stack. If the ipv6_type is EXTERNAL then this subnet
	cannot enable direct path. Possible values: ["EXTERNAL", "INTERNAL"]. */
	// +optional
	Ipv6AccessType *string `json:"ipv6AccessType,omitempty"`

	/* This field denotes the VPC flow logging options for this subnetwork. If
	logging is enabled, logs are exported to Cloud Logging. Flow logging
	isn't supported if the subnet 'purpose' field is set to subnetwork is
	'REGIONAL_MANAGED_PROXY' or 'GLOBAL_MANAGED_PROXY'. */
	// +optional
	LogConfig *SubnetworkLogConfig `json:"logConfig,omitempty"`

	/* The network this subnet belongs to. Only networks that are in the
	distributed mode can have subnetworks. */
	NetworkRef v1alpha1.ResourceRef `json:"networkRef"`

	/* When enabled, VMs in this subnetwork without external IP addresses can
	access Google APIs and services by using Private Google Access. */
	// +optional
	PrivateIpGoogleAccess *bool `json:"privateIpGoogleAccess,omitempty"`

	/* The private IPv6 google access type for the VMs in this subnet. */
	// +optional
	PrivateIpv6GoogleAccess *string `json:"privateIpv6GoogleAccess,omitempty"`

	/* Immutable. The purpose of the resource. This field can be either 'PRIVATE_RFC_1918', 'REGIONAL_MANAGED_PROXY', 'GLOBAL_MANAGED_PROXY', or 'PRIVATE_SERVICE_CONNECT'.
	A subnet with purpose set to 'REGIONAL_MANAGED_PROXY' is a user-created subnetwork that is reserved for regional Envoy-based load balancers.
	A subnetwork in a given region with purpose set to 'GLOBAL_MANAGED_PROXY' is a proxy-only subnet and is shared between all the cross-regional Envoy-based load balancers.
	A subnetwork with purpose set to 'PRIVATE_SERVICE_CONNECT' reserves the subnet for hosting a Private Service Connect published service.
	Note that 'REGIONAL_MANAGED_PROXY' is the preferred setting for all regional Envoy load balancers.
	If unspecified, the purpose defaults to 'PRIVATE_RFC_1918'. */
	// +optional
	Purpose *string `json:"purpose,omitempty"`

	/* Immutable. The GCP region for this subnetwork. */
	Region string `json:"region"`

	/* Immutable. Optional. The name of the resource. Used for creation and acquisition. When unset, the value of `metadata.name` is used as the default. */
	// +optional
	ResourceID *string `json:"resourceID,omitempty"`

	/* The role of subnetwork.
	Currently, this field is only used when 'purpose' is 'REGIONAL_MANAGED_PROXY'.
	The value can be set to 'ACTIVE' or 'BACKUP'.
	An 'ACTIVE' subnetwork is one that is currently being used for Envoy-based load balancers in a region.
	A 'BACKUP' subnetwork is one that is ready to be promoted to 'ACTIVE' or is currently draining. Possible values: ["ACTIVE", "BACKUP"]. */
	// +optional
	Role *string `json:"role,omitempty"`

	// +optional
	SecondaryIpRange []SubnetworkSecondaryIpRange `json:"secondaryIpRange,omitempty"`

	/* The stack type for this subnet to identify whether the IPv6 feature is enabled or not.
	If not specified IPV4_ONLY will be used. Possible values: ["IPV4_ONLY", "IPV4_IPV6"]. */
	// +optional
	StackType *string `json:"stackType,omitempty"`
}

type ComputeSubnetworkStatus struct {
	/* Conditions represent the latest available observations of the
	   ComputeSubnetwork's current state. */
	Conditions []v1alpha1.Condition `json:"conditions,omitempty"`
	/* Creation timestamp in RFC3339 text format. */
	// +optional
	CreationTimestamp *string `json:"creationTimestamp,omitempty"`

	/* The range of external IPv6 addresses that are owned by this subnetwork. */
	// +optional
	ExternalIpv6Prefix *string `json:"externalIpv6Prefix,omitempty"`

	/* DEPRECATED. This field is not useful for users, and has been removed as an output. Fingerprint of this resource. This field is used internally during updates of this resource. */
	// +optional
	Fingerprint *string `json:"fingerprint,omitempty"`

	/* The gateway address for default routes to reach destination addresses
	outside this subnetwork. */
	// +optional
	GatewayAddress *string `json:"gatewayAddress,omitempty"`

	/* The internal IPv6 address range that is assigned to this subnetwork. */
	// +optional
	InternalIpv6Prefix *string `json:"internalIpv6Prefix,omitempty"`

	/* The range of internal IPv6 addresses that are owned by this subnetwork. */
	// +optional
	Ipv6CidrRange *string `json:"ipv6CidrRange,omitempty"`

	/* ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource. */
	// +optional
	ObservedGeneration *int64 `json:"observedGeneration,omitempty"`

	// +optional
	SelfLink *string `json:"selfLink,omitempty"`
}

// +genclient
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:resource:categories=gcp,shortName=gcpcomputesubnetwork;gcpcomputesubnetworks
// +kubebuilder:subresource:status
// +kubebuilder:metadata:labels="cnrm.cloud.google.com/managed-by-kcc=true";"cnrm.cloud.google.com/stability-level=stable";"cnrm.cloud.google.com/system=true";"cnrm.cloud.google.com/tf2crd=true"
// +kubebuilder:printcolumn:name="Age",JSONPath=".metadata.creationTimestamp",type="date"
// +kubebuilder:printcolumn:name="Ready",JSONPath=".status.conditions[?(@.type=='Ready')].status",type="string",description="When 'True', the most recent reconcile of the resource succeeded"
// +kubebuilder:printcolumn:name="Status",JSONPath=".status.conditions[?(@.type=='Ready')].reason",type="string",description="The reason for the value in 'Ready'"
// +kubebuilder:printcolumn:name="Status Age",JSONPath=".status.conditions[?(@.type=='Ready')].lastTransitionTime",type="date",description="The last transition time for the value in 'Status'"

// ComputeSubnetwork is the Schema for the compute API
// +k8s:openapi-gen=true
type ComputeSubnetwork struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`

	Spec   ComputeSubnetworkSpec   `json:"spec,omitempty"`
	Status ComputeSubnetworkStatus `json:"status,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// ComputeSubnetworkList contains a list of ComputeSubnetwork
type ComputeSubnetworkList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ComputeSubnetwork `json:"items"`
}

func init() {
	SchemeBuilder.Register(&ComputeSubnetwork{}, &ComputeSubnetworkList{})
}
