// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// ----------------------------------------------------------------------------
//
//     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
//
// ----------------------------------------------------------------------------
//
//     This file is automatically generated by Config Connector and manual
//     changes will be clobbered when the file is regenerated.
//
// ----------------------------------------------------------------------------

// *** DISCLAIMER ***
// Config Connector's go-client for CRDs is currently in ALPHA, which means
// that future versions of the go-client may include breaking changes.
// Please try it out and give us feedback!

package v1beta1

import (
	"github.com/GoogleCloudPlatform/k8s-config-connector/pkg/clients/generated/apis/k8s/v1alpha1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

type ServiceattachmentConsumerAcceptLists struct {
	/* The value of the limit to set. */
	// +optional
	ConnectionLimit *int64 `json:"connectionLimit,omitempty"`

	ProjectRef v1alpha1.ResourceRef `json:"projectRef"`
}

type ComputeServiceAttachmentSpec struct {
	/* The connection preference of service attachment. The value can be set to `ACCEPT_AUTOMATIC`. An `ACCEPT_AUTOMATIC` service attachment is one that always accepts the connection from consumer forwarding rules. Possible values: CONNECTION_PREFERENCE_UNSPECIFIED, ACCEPT_AUTOMATIC, ACCEPT_MANUAL */
	ConnectionPreference string `json:"connectionPreference"`

	/* Projects that are allowed to connect to this service attachment. */
	// +optional
	ConsumerAcceptLists []ServiceattachmentConsumerAcceptLists `json:"consumerAcceptLists,omitempty"`

	// +optional
	ConsumerRejectLists []v1alpha1.ResourceRef `json:"consumerRejectLists,omitempty"`

	/* An optional description of this resource. Provide this property when you create the resource. */
	// +optional
	Description *string `json:"description,omitempty"`

	/* Immutable. If true, enable the proxy protocol which is for supplying client TCP/IP address data in TCP connections that traverse proxies on their way to destination servers. */
	// +optional
	EnableProxyProtocol *bool `json:"enableProxyProtocol,omitempty"`

	/* Immutable. The location for the resource */
	Location string `json:"location"`

	NatSubnets []v1alpha1.ResourceRef `json:"natSubnets"`

	/* Immutable. The Project that this resource belongs to. */
	ProjectRef v1alpha1.ResourceRef `json:"projectRef"`

	/* Immutable. Optional. The name of the resource. Used for creation and acquisition. When unset, the value of `metadata.name` is used as the default. */
	// +optional
	ResourceID *string `json:"resourceID,omitempty"`

	/* Immutable. */
	TargetServiceRef v1alpha1.ResourceRef `json:"targetServiceRef"`
}

type ServiceattachmentConnectedEndpointsStatus struct {
	/* The url of a connected endpoint. */
	// +optional
	Endpoint *string `json:"endpoint,omitempty"`

	/* The PSC connection id of the connected endpoint. */
	// +optional
	PscConnectionId *int64 `json:"pscConnectionId,omitempty"`

	/* The status of a connected endpoint to this service attachment. Possible values: PENDING, RUNNING, DONE */
	// +optional
	Status *string `json:"status,omitempty"`
}

type ServiceattachmentPscServiceAttachmentIdStatus struct {
	// +optional
	High *int64 `json:"high,omitempty"`

	// +optional
	Low *int64 `json:"low,omitempty"`
}

type ComputeServiceAttachmentStatus struct {
	/* Conditions represent the latest available observations of the
	   ComputeServiceAttachment's current state. */
	Conditions []v1alpha1.Condition `json:"conditions,omitempty"`
	/* An array of connections for all the consumers connected to this service attachment. */
	// +optional
	ConnectedEndpoints []ServiceattachmentConnectedEndpointsStatus `json:"connectedEndpoints,omitempty"`

	/* Fingerprint of this resource. This field is used internally during updates of this resource. */
	// +optional
	Fingerprint *string `json:"fingerprint,omitempty"`

	/* The unique identifier for the resource type. The server generates this identifier. */
	// +optional
	Id *int64 `json:"id,omitempty"`

	/* ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource. */
	// +optional
	ObservedGeneration *int64 `json:"observedGeneration,omitempty"`

	/* An 128-bit global unique ID of the PSC service attachment. */
	// +optional
	PscServiceAttachmentId *ServiceattachmentPscServiceAttachmentIdStatus `json:"pscServiceAttachmentId,omitempty"`

	/* URL of the region where the service attachment resides. This field applies only to the region resource. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body. */
	// +optional
	Region *string `json:"region,omitempty"`

	/* Server-defined URL for the resource. */
	// +optional
	SelfLink *string `json:"selfLink,omitempty"`
}

// +genclient
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:resource:categories=gcp,shortName=gcpcomputeserviceattachment;gcpcomputeserviceattachments
// +kubebuilder:subresource:status
// +kubebuilder:metadata:labels="cnrm.cloud.google.com/dcl2crd=true";"cnrm.cloud.google.com/managed-by-kcc=true";"cnrm.cloud.google.com/stability-level=stable";"cnrm.cloud.google.com/system=true"
// +kubebuilder:printcolumn:name="Age",JSONPath=".metadata.creationTimestamp",type="date"
// +kubebuilder:printcolumn:name="Ready",JSONPath=".status.conditions[?(@.type=='Ready')].status",type="string",description="When 'True', the most recent reconcile of the resource succeeded"
// +kubebuilder:printcolumn:name="Status",JSONPath=".status.conditions[?(@.type=='Ready')].reason",type="string",description="The reason for the value in 'Ready'"
// +kubebuilder:printcolumn:name="Status Age",JSONPath=".status.conditions[?(@.type=='Ready')].lastTransitionTime",type="date",description="The last transition time for the value in 'Status'"

// ComputeServiceAttachment is the Schema for the compute API
// +k8s:openapi-gen=true
type ComputeServiceAttachment struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`

	Spec   ComputeServiceAttachmentSpec   `json:"spec,omitempty"`
	Status ComputeServiceAttachmentStatus `json:"status,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// ComputeServiceAttachmentList contains a list of ComputeServiceAttachment
type ComputeServiceAttachmentList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ComputeServiceAttachment `json:"items"`
}

func init() {
	SchemeBuilder.Register(&ComputeServiceAttachment{}, &ComputeServiceAttachmentList{})
}
