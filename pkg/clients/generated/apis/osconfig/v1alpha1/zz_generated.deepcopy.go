//go:build !ignore_autogenerated
// +build !ignore_autogenerated

// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// *** DISCLAIMER ***
// Config Connector's go-client for CRDs is currently in ALPHA, which means
// that future versions of the go-client may include breaking changes.
// Please try it out and give us feedback!

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1alpha1

import (
	k8sv1alpha1 "github.com/GoogleCloudPlatform/k8s-config-connector/pkg/clients/generated/apis/k8s/v1alpha1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OSConfigPatchDeployment) DeepCopyInto(out *OSConfigPatchDeployment) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OSConfigPatchDeployment.
func (in *OSConfigPatchDeployment) DeepCopy() *OSConfigPatchDeployment {
	if in == nil {
		return nil
	}
	out := new(OSConfigPatchDeployment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OSConfigPatchDeployment) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OSConfigPatchDeploymentList) DeepCopyInto(out *OSConfigPatchDeploymentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]OSConfigPatchDeployment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OSConfigPatchDeploymentList.
func (in *OSConfigPatchDeploymentList) DeepCopy() *OSConfigPatchDeploymentList {
	if in == nil {
		return nil
	}
	out := new(OSConfigPatchDeploymentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OSConfigPatchDeploymentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OSConfigPatchDeploymentSpec) DeepCopyInto(out *OSConfigPatchDeploymentSpec) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Duration != nil {
		in, out := &in.Duration, &out.Duration
		*out = new(string)
		**out = **in
	}
	in.InstanceFilter.DeepCopyInto(&out.InstanceFilter)
	if in.OneTimeSchedule != nil {
		in, out := &in.OneTimeSchedule, &out.OneTimeSchedule
		*out = new(PatchdeploymentOneTimeSchedule)
		**out = **in
	}
	if in.PatchConfig != nil {
		in, out := &in.PatchConfig, &out.PatchConfig
		*out = new(PatchdeploymentPatchConfig)
		(*in).DeepCopyInto(*out)
	}
	out.ProjectRef = in.ProjectRef
	if in.RecurringSchedule != nil {
		in, out := &in.RecurringSchedule, &out.RecurringSchedule
		*out = new(PatchdeploymentRecurringSchedule)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
	if in.Rollout != nil {
		in, out := &in.Rollout, &out.Rollout
		*out = new(PatchdeploymentRollout)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OSConfigPatchDeploymentSpec.
func (in *OSConfigPatchDeploymentSpec) DeepCopy() *OSConfigPatchDeploymentSpec {
	if in == nil {
		return nil
	}
	out := new(OSConfigPatchDeploymentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OSConfigPatchDeploymentStatus) DeepCopyInto(out *OSConfigPatchDeploymentStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]k8sv1alpha1.Condition, len(*in))
		copy(*out, *in)
	}
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.LastExecuteTime != nil {
		in, out := &in.LastExecuteTime, &out.LastExecuteTime
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ObservedGeneration != nil {
		in, out := &in.ObservedGeneration, &out.ObservedGeneration
		*out = new(int64)
		**out = **in
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OSConfigPatchDeploymentStatus.
func (in *OSConfigPatchDeploymentStatus) DeepCopy() *OSConfigPatchDeploymentStatus {
	if in == nil {
		return nil
	}
	out := new(OSConfigPatchDeploymentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PatchdeploymentApt) DeepCopyInto(out *PatchdeploymentApt) {
	*out = *in
	if in.Excludes != nil {
		in, out := &in.Excludes, &out.Excludes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ExclusivePackages != nil {
		in, out := &in.ExclusivePackages, &out.ExclusivePackages
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PatchdeploymentApt.
func (in *PatchdeploymentApt) DeepCopy() *PatchdeploymentApt {
	if in == nil {
		return nil
	}
	out := new(PatchdeploymentApt)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PatchdeploymentDisruptionBudget) DeepCopyInto(out *PatchdeploymentDisruptionBudget) {
	*out = *in
	if in.Fixed != nil {
		in, out := &in.Fixed, &out.Fixed
		*out = new(int64)
		**out = **in
	}
	if in.Percentage != nil {
		in, out := &in.Percentage, &out.Percentage
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PatchdeploymentDisruptionBudget.
func (in *PatchdeploymentDisruptionBudget) DeepCopy() *PatchdeploymentDisruptionBudget {
	if in == nil {
		return nil
	}
	out := new(PatchdeploymentDisruptionBudget)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PatchdeploymentGcsObject) DeepCopyInto(out *PatchdeploymentGcsObject) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PatchdeploymentGcsObject.
func (in *PatchdeploymentGcsObject) DeepCopy() *PatchdeploymentGcsObject {
	if in == nil {
		return nil
	}
	out := new(PatchdeploymentGcsObject)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PatchdeploymentGoo) DeepCopyInto(out *PatchdeploymentGoo) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PatchdeploymentGoo.
func (in *PatchdeploymentGoo) DeepCopy() *PatchdeploymentGoo {
	if in == nil {
		return nil
	}
	out := new(PatchdeploymentGoo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PatchdeploymentGroupLabels) DeepCopyInto(out *PatchdeploymentGroupLabels) {
	*out = *in
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PatchdeploymentGroupLabels.
func (in *PatchdeploymentGroupLabels) DeepCopy() *PatchdeploymentGroupLabels {
	if in == nil {
		return nil
	}
	out := new(PatchdeploymentGroupLabels)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PatchdeploymentInstanceFilter) DeepCopyInto(out *PatchdeploymentInstanceFilter) {
	*out = *in
	if in.All != nil {
		in, out := &in.All, &out.All
		*out = new(bool)
		**out = **in
	}
	if in.GroupLabels != nil {
		in, out := &in.GroupLabels, &out.GroupLabels
		*out = make([]PatchdeploymentGroupLabels, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceNamePrefixes != nil {
		in, out := &in.InstanceNamePrefixes, &out.InstanceNamePrefixes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Instances != nil {
		in, out := &in.Instances, &out.Instances
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Zones != nil {
		in, out := &in.Zones, &out.Zones
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PatchdeploymentInstanceFilter.
func (in *PatchdeploymentInstanceFilter) DeepCopy() *PatchdeploymentInstanceFilter {
	if in == nil {
		return nil
	}
	out := new(PatchdeploymentInstanceFilter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PatchdeploymentLinuxExecStepConfig) DeepCopyInto(out *PatchdeploymentLinuxExecStepConfig) {
	*out = *in
	if in.AllowedSuccessCodes != nil {
		in, out := &in.AllowedSuccessCodes, &out.AllowedSuccessCodes
		*out = make([]int64, len(*in))
		copy(*out, *in)
	}
	if in.GcsObject != nil {
		in, out := &in.GcsObject, &out.GcsObject
		*out = new(PatchdeploymentGcsObject)
		**out = **in
	}
	if in.Interpreter != nil {
		in, out := &in.Interpreter, &out.Interpreter
		*out = new(string)
		**out = **in
	}
	if in.LocalPath != nil {
		in, out := &in.LocalPath, &out.LocalPath
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PatchdeploymentLinuxExecStepConfig.
func (in *PatchdeploymentLinuxExecStepConfig) DeepCopy() *PatchdeploymentLinuxExecStepConfig {
	if in == nil {
		return nil
	}
	out := new(PatchdeploymentLinuxExecStepConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PatchdeploymentMonthly) DeepCopyInto(out *PatchdeploymentMonthly) {
	*out = *in
	if in.MonthDay != nil {
		in, out := &in.MonthDay, &out.MonthDay
		*out = new(int64)
		**out = **in
	}
	if in.WeekDayOfMonth != nil {
		in, out := &in.WeekDayOfMonth, &out.WeekDayOfMonth
		*out = new(PatchdeploymentWeekDayOfMonth)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PatchdeploymentMonthly.
func (in *PatchdeploymentMonthly) DeepCopy() *PatchdeploymentMonthly {
	if in == nil {
		return nil
	}
	out := new(PatchdeploymentMonthly)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PatchdeploymentOneTimeSchedule) DeepCopyInto(out *PatchdeploymentOneTimeSchedule) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PatchdeploymentOneTimeSchedule.
func (in *PatchdeploymentOneTimeSchedule) DeepCopy() *PatchdeploymentOneTimeSchedule {
	if in == nil {
		return nil
	}
	out := new(PatchdeploymentOneTimeSchedule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PatchdeploymentPatchConfig) DeepCopyInto(out *PatchdeploymentPatchConfig) {
	*out = *in
	if in.Apt != nil {
		in, out := &in.Apt, &out.Apt
		*out = new(PatchdeploymentApt)
		(*in).DeepCopyInto(*out)
	}
	if in.Goo != nil {
		in, out := &in.Goo, &out.Goo
		*out = new(PatchdeploymentGoo)
		**out = **in
	}
	if in.MigInstancesAllowed != nil {
		in, out := &in.MigInstancesAllowed, &out.MigInstancesAllowed
		*out = new(bool)
		**out = **in
	}
	if in.PostStep != nil {
		in, out := &in.PostStep, &out.PostStep
		*out = new(PatchdeploymentPostStep)
		(*in).DeepCopyInto(*out)
	}
	if in.PreStep != nil {
		in, out := &in.PreStep, &out.PreStep
		*out = new(PatchdeploymentPreStep)
		(*in).DeepCopyInto(*out)
	}
	if in.RebootConfig != nil {
		in, out := &in.RebootConfig, &out.RebootConfig
		*out = new(string)
		**out = **in
	}
	if in.WindowsUpdate != nil {
		in, out := &in.WindowsUpdate, &out.WindowsUpdate
		*out = new(PatchdeploymentWindowsUpdate)
		(*in).DeepCopyInto(*out)
	}
	if in.Yum != nil {
		in, out := &in.Yum, &out.Yum
		*out = new(PatchdeploymentYum)
		(*in).DeepCopyInto(*out)
	}
	if in.Zypper != nil {
		in, out := &in.Zypper, &out.Zypper
		*out = new(PatchdeploymentZypper)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PatchdeploymentPatchConfig.
func (in *PatchdeploymentPatchConfig) DeepCopy() *PatchdeploymentPatchConfig {
	if in == nil {
		return nil
	}
	out := new(PatchdeploymentPatchConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PatchdeploymentPostStep) DeepCopyInto(out *PatchdeploymentPostStep) {
	*out = *in
	if in.LinuxExecStepConfig != nil {
		in, out := &in.LinuxExecStepConfig, &out.LinuxExecStepConfig
		*out = new(PatchdeploymentLinuxExecStepConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.WindowsExecStepConfig != nil {
		in, out := &in.WindowsExecStepConfig, &out.WindowsExecStepConfig
		*out = new(PatchdeploymentWindowsExecStepConfig)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PatchdeploymentPostStep.
func (in *PatchdeploymentPostStep) DeepCopy() *PatchdeploymentPostStep {
	if in == nil {
		return nil
	}
	out := new(PatchdeploymentPostStep)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PatchdeploymentPreStep) DeepCopyInto(out *PatchdeploymentPreStep) {
	*out = *in
	if in.LinuxExecStepConfig != nil {
		in, out := &in.LinuxExecStepConfig, &out.LinuxExecStepConfig
		*out = new(PatchdeploymentLinuxExecStepConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.WindowsExecStepConfig != nil {
		in, out := &in.WindowsExecStepConfig, &out.WindowsExecStepConfig
		*out = new(PatchdeploymentWindowsExecStepConfig)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PatchdeploymentPreStep.
func (in *PatchdeploymentPreStep) DeepCopy() *PatchdeploymentPreStep {
	if in == nil {
		return nil
	}
	out := new(PatchdeploymentPreStep)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PatchdeploymentRecurringSchedule) DeepCopyInto(out *PatchdeploymentRecurringSchedule) {
	*out = *in
	if in.EndTime != nil {
		in, out := &in.EndTime, &out.EndTime
		*out = new(string)
		**out = **in
	}
	if in.LastExecuteTime != nil {
		in, out := &in.LastExecuteTime, &out.LastExecuteTime
		*out = new(string)
		**out = **in
	}
	if in.Monthly != nil {
		in, out := &in.Monthly, &out.Monthly
		*out = new(PatchdeploymentMonthly)
		(*in).DeepCopyInto(*out)
	}
	if in.NextExecuteTime != nil {
		in, out := &in.NextExecuteTime, &out.NextExecuteTime
		*out = new(string)
		**out = **in
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(string)
		**out = **in
	}
	in.TimeOfDay.DeepCopyInto(&out.TimeOfDay)
	in.TimeZone.DeepCopyInto(&out.TimeZone)
	if in.Weekly != nil {
		in, out := &in.Weekly, &out.Weekly
		*out = new(PatchdeploymentWeekly)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PatchdeploymentRecurringSchedule.
func (in *PatchdeploymentRecurringSchedule) DeepCopy() *PatchdeploymentRecurringSchedule {
	if in == nil {
		return nil
	}
	out := new(PatchdeploymentRecurringSchedule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PatchdeploymentRollout) DeepCopyInto(out *PatchdeploymentRollout) {
	*out = *in
	in.DisruptionBudget.DeepCopyInto(&out.DisruptionBudget)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PatchdeploymentRollout.
func (in *PatchdeploymentRollout) DeepCopy() *PatchdeploymentRollout {
	if in == nil {
		return nil
	}
	out := new(PatchdeploymentRollout)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PatchdeploymentTimeOfDay) DeepCopyInto(out *PatchdeploymentTimeOfDay) {
	*out = *in
	if in.Hours != nil {
		in, out := &in.Hours, &out.Hours
		*out = new(int64)
		**out = **in
	}
	if in.Minutes != nil {
		in, out := &in.Minutes, &out.Minutes
		*out = new(int64)
		**out = **in
	}
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(int64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PatchdeploymentTimeOfDay.
func (in *PatchdeploymentTimeOfDay) DeepCopy() *PatchdeploymentTimeOfDay {
	if in == nil {
		return nil
	}
	out := new(PatchdeploymentTimeOfDay)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PatchdeploymentTimeZone) DeepCopyInto(out *PatchdeploymentTimeZone) {
	*out = *in
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PatchdeploymentTimeZone.
func (in *PatchdeploymentTimeZone) DeepCopy() *PatchdeploymentTimeZone {
	if in == nil {
		return nil
	}
	out := new(PatchdeploymentTimeZone)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PatchdeploymentWeekDayOfMonth) DeepCopyInto(out *PatchdeploymentWeekDayOfMonth) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PatchdeploymentWeekDayOfMonth.
func (in *PatchdeploymentWeekDayOfMonth) DeepCopy() *PatchdeploymentWeekDayOfMonth {
	if in == nil {
		return nil
	}
	out := new(PatchdeploymentWeekDayOfMonth)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PatchdeploymentWeekly) DeepCopyInto(out *PatchdeploymentWeekly) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PatchdeploymentWeekly.
func (in *PatchdeploymentWeekly) DeepCopy() *PatchdeploymentWeekly {
	if in == nil {
		return nil
	}
	out := new(PatchdeploymentWeekly)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PatchdeploymentWindowsExecStepConfig) DeepCopyInto(out *PatchdeploymentWindowsExecStepConfig) {
	*out = *in
	if in.AllowedSuccessCodes != nil {
		in, out := &in.AllowedSuccessCodes, &out.AllowedSuccessCodes
		*out = make([]int64, len(*in))
		copy(*out, *in)
	}
	if in.GcsObject != nil {
		in, out := &in.GcsObject, &out.GcsObject
		*out = new(PatchdeploymentGcsObject)
		**out = **in
	}
	if in.Interpreter != nil {
		in, out := &in.Interpreter, &out.Interpreter
		*out = new(string)
		**out = **in
	}
	if in.LocalPath != nil {
		in, out := &in.LocalPath, &out.LocalPath
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PatchdeploymentWindowsExecStepConfig.
func (in *PatchdeploymentWindowsExecStepConfig) DeepCopy() *PatchdeploymentWindowsExecStepConfig {
	if in == nil {
		return nil
	}
	out := new(PatchdeploymentWindowsExecStepConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PatchdeploymentWindowsUpdate) DeepCopyInto(out *PatchdeploymentWindowsUpdate) {
	*out = *in
	if in.Classifications != nil {
		in, out := &in.Classifications, &out.Classifications
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Excludes != nil {
		in, out := &in.Excludes, &out.Excludes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ExclusivePatches != nil {
		in, out := &in.ExclusivePatches, &out.ExclusivePatches
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PatchdeploymentWindowsUpdate.
func (in *PatchdeploymentWindowsUpdate) DeepCopy() *PatchdeploymentWindowsUpdate {
	if in == nil {
		return nil
	}
	out := new(PatchdeploymentWindowsUpdate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PatchdeploymentYum) DeepCopyInto(out *PatchdeploymentYum) {
	*out = *in
	if in.Excludes != nil {
		in, out := &in.Excludes, &out.Excludes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ExclusivePackages != nil {
		in, out := &in.ExclusivePackages, &out.ExclusivePackages
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Minimal != nil {
		in, out := &in.Minimal, &out.Minimal
		*out = new(bool)
		**out = **in
	}
	if in.Security != nil {
		in, out := &in.Security, &out.Security
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PatchdeploymentYum.
func (in *PatchdeploymentYum) DeepCopy() *PatchdeploymentYum {
	if in == nil {
		return nil
	}
	out := new(PatchdeploymentYum)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PatchdeploymentZypper) DeepCopyInto(out *PatchdeploymentZypper) {
	*out = *in
	if in.Categories != nil {
		in, out := &in.Categories, &out.Categories
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Excludes != nil {
		in, out := &in.Excludes, &out.Excludes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ExclusivePatches != nil {
		in, out := &in.ExclusivePatches, &out.ExclusivePatches
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Severities != nil {
		in, out := &in.Severities, &out.Severities
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.WithOptional != nil {
		in, out := &in.WithOptional, &out.WithOptional
		*out = new(bool)
		**out = **in
	}
	if in.WithUpdate != nil {
		in, out := &in.WithUpdate, &out.WithUpdate
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PatchdeploymentZypper.
func (in *PatchdeploymentZypper) DeepCopy() *PatchdeploymentZypper {
	if in == nil {
		return nil
	}
	out := new(PatchdeploymentZypper)
	in.DeepCopyInto(out)
	return out
}
