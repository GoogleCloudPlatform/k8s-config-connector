// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// ----------------------------------------------------------------------------
//
//     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
//
// ----------------------------------------------------------------------------
//
//     This file is automatically generated by Config Connector and manual
//     changes will be clobbered when the file is regenerated.
//
// ----------------------------------------------------------------------------

// *** DISCLAIMER ***
// Config Connector's go-client for CRDs is currently in ALPHA, which means
// that future versions of the go-client may include breaking changes.
// Please try it out and give us feedback!

package v1alpha1

import (
	"github.com/GoogleCloudPlatform/k8s-config-connector/pkg/clients/generated/apis/k8s/v1alpha1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

type ApigeeInstanceSpec struct {
	/* Immutable. Optional. Customer accept list represents the list of projects (id/number) on customer
	side that can privately connect to the service attachment. It is an optional field
	which the customers can provide during the instance creation. By default, the customer
	project associated with the Apigee organization will be included to the list. */
	// +optional
	ConsumerAcceptList []string `json:"consumerAcceptList,omitempty"`

	/* Immutable. Description of the instance. */
	// +optional
	Description *string `json:"description,omitempty"`

	/* Immutable. Customer Managed Encryption Key (CMEK) used for disk and volume encryption. Required for Apigee paid subscriptions only.
	Use the following format: 'projects/([^/]+)/locations/([^/]+)/keyRings/([^/]+)/cryptoKeys/([^/]+)'. */
	// +optional
	DiskEncryptionKeyName *string `json:"diskEncryptionKeyName,omitempty"`

	/* Immutable. Display name of the instance. */
	// +optional
	DisplayName *string `json:"displayName,omitempty"`

	/* Immutable. IP range represents the customer-provided CIDR block of length 22 that will be used for
	the Apigee instance creation. This optional range, if provided, should be freely
	available as part of larger named range the customer has allocated to the Service
	Networking peering. If this is not provided, Apigee will automatically request for any
	available /22 CIDR block from Service Networking. The customer should use this CIDR block
	for configuring their firewall needs to allow traffic from Apigee.
	Input format: "a.b.c.d/22". */
	// +optional
	IpRange *string `json:"ipRange,omitempty"`

	/* Immutable. Required. Compute Engine location where the instance resides. */
	Location string `json:"location"`

	/* Immutable. The Apigee Organization associated with the Apigee instance,
	in the format 'organizations/{{org_name}}'. */
	OrgId string `json:"orgId"`

	/* Immutable. The size of the CIDR block range that will be reserved by the instance. For valid values,
	see [CidrRange](https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.instances#CidrRange) on the documentation. */
	// +optional
	PeeringCidrRange *string `json:"peeringCidrRange,omitempty"`

	/* Immutable. Optional. The name of the resource. Used for creation and acquisition. When unset, the value of `metadata.name` is used as the default. */
	// +optional
	ResourceID *string `json:"resourceID,omitempty"`
}

type ApigeeInstanceStatus struct {
	/* Conditions represent the latest available observations of the
	   ApigeeInstance's current state. */
	Conditions []v1alpha1.Condition `json:"conditions,omitempty"`
	/* Output only. Hostname or IP address of the exposed Apigee endpoint used by clients to connect to the service. */
	// +optional
	Host *string `json:"host,omitempty"`

	/* ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource. */
	// +optional
	ObservedGeneration *int64 `json:"observedGeneration,omitempty"`

	/* Output only. Port number of the exposed Apigee endpoint. */
	// +optional
	Port *string `json:"port,omitempty"`

	/* Output only. Resource name of the service attachment created for the instance in
	the format: projects/* /regions/* /serviceAttachments/* Apigee customers can privately
	forward traffic to this service attachment using the PSC endpoints. */
	// +optional
	ServiceAttachment *string `json:"serviceAttachment,omitempty"`
}

// +genclient
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:resource:categories=gcp,shortName=gcpapigeeinstance;gcpapigeeinstances
// +kubebuilder:subresource:status
// +kubebuilder:metadata:labels="cnrm.cloud.google.com/managed-by-kcc=true";"cnrm.cloud.google.com/stability-level=alpha";"cnrm.cloud.google.com/system=true";"cnrm.cloud.google.com/tf2crd=true"
// +kubebuilder:printcolumn:name="Age",JSONPath=".metadata.creationTimestamp",type="date"
// +kubebuilder:printcolumn:name="Ready",JSONPath=".status.conditions[?(@.type=='Ready')].status",type="string",description="When 'True', the most recent reconcile of the resource succeeded"
// +kubebuilder:printcolumn:name="Status",JSONPath=".status.conditions[?(@.type=='Ready')].reason",type="string",description="The reason for the value in 'Ready'"
// +kubebuilder:printcolumn:name="Status Age",JSONPath=".status.conditions[?(@.type=='Ready')].lastTransitionTime",type="date",description="The last transition time for the value in 'Status'"

// ApigeeInstance is the Schema for the apigee API
// +k8s:openapi-gen=true
type ApigeeInstance struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`

	Spec   ApigeeInstanceSpec   `json:"spec,omitempty"`
	Status ApigeeInstanceStatus `json:"status,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// ApigeeInstanceList contains a list of ApigeeInstance
type ApigeeInstanceList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ApigeeInstance `json:"items"`
}

func init() {
	SchemeBuilder.Register(&ApigeeInstance{}, &ApigeeInstanceList{})
}
