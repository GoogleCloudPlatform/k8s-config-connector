// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// ----------------------------------------------------------------------------
//
//     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
//
// ----------------------------------------------------------------------------
//
//     This file is automatically generated by Config Connector and manual
//     changes will be clobbered when the file is regenerated.
//
// ----------------------------------------------------------------------------

// *** DISCLAIMER ***
// Config Connector's go-client for CRDs is currently in ALPHA, which means
// that future versions of the go-client may include breaking changes.
// Please try it out and give us feedback!

package v1beta1

import (
	"github.com/GoogleCloudPlatform/k8s-config-connector/pkg/clients/generated/apis/k8s/v1alpha1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

type WorkflowtemplateAccelerators struct {
	/* Immutable. The number of the accelerator cards of this type exposed to this instance. */
	// +optional
	AcceleratorCount *int64 `json:"acceleratorCount,omitempty"`

	/* Immutable. Full URL, partial URI, or short name of the accelerator type resource to expose to this instance. See [Compute Engine AcceleratorTypes](https://cloud.google.com/compute/docs/reference/beta/acceleratorTypes). Examples: * `https://www.googleapis.com/compute/beta/projects/[project_id]/zones/us-east1-a/acceleratorTypes/nvidia-tesla-k80` * `projects/[project_id]/zones/us-east1-a/acceleratorTypes/nvidia-tesla-k80` * `nvidia-tesla-k80` **Auto Zone Exception**: If you are using the Dataproc [Auto Zone Placement](https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the accelerator type resource, for example, `nvidia-tesla-k80`. */
	// +optional
	AcceleratorType *string `json:"acceleratorType,omitempty"`
}

type WorkflowtemplateAutoscalingConfig struct {
	/* Immutable. */
	// +optional
	PolicyRef *v1alpha1.ResourceRef `json:"policyRef,omitempty"`
}

type WorkflowtemplateClusterSelector struct {
	/* Immutable. Required. The cluster labels. Cluster must have all labels to match. */
	ClusterLabels map[string]string `json:"clusterLabels"`

	/* Immutable. Optional. The zone where workflow process executes. This parameter does not affect the selection of the cluster. If unspecified, the zone of the first cluster matching the selector is used. */
	// +optional
	Zone *string `json:"zone,omitempty"`
}

type WorkflowtemplateConfig struct {
	/* Immutable. Optional. Autoscaling config for the policy associated with the cluster. Cluster does not autoscale if this field is unset. */
	// +optional
	AutoscalingConfig *WorkflowtemplateAutoscalingConfig `json:"autoscalingConfig,omitempty"`

	/* Immutable. Optional. Encryption settings for the cluster. */
	// +optional
	EncryptionConfig *WorkflowtemplateEncryptionConfig `json:"encryptionConfig,omitempty"`

	/* Immutable. Optional. Port/endpoint configuration for this cluster */
	// +optional
	EndpointConfig *WorkflowtemplateEndpointConfig `json:"endpointConfig,omitempty"`

	/* Immutable. Optional. The shared Compute Engine config settings for all instances in a cluster. */
	// +optional
	GceClusterConfig *WorkflowtemplateGceClusterConfig `json:"gceClusterConfig,omitempty"`

	/* Immutable. Optional. Commands to execute on each node after config is completed. By default, executables are run on master and all worker nodes. You can test a node's `role` metadata to run an executable on a master or worker node, as shown below using `curl` (you can also use `wget`): ROLE=$(curl -H Metadata-Flavor:Google http://metadata/computeMetadata/v1/instance/attributes/dataproc-role) if [[ "${ROLE}" == 'Master' ]]; then ... master specific actions ... else ... worker specific actions ... fi */
	// +optional
	InitializationActions []WorkflowtemplateInitializationActions `json:"initializationActions,omitempty"`

	/* Immutable. Optional. Lifecycle setting for the cluster. */
	// +optional
	LifecycleConfig *WorkflowtemplateLifecycleConfig `json:"lifecycleConfig,omitempty"`

	/* Immutable. Optional. The Compute Engine config settings for the master instance in a cluster. */
	// +optional
	MasterConfig *WorkflowtemplateMasterConfig `json:"masterConfig,omitempty"`

	/* Immutable. Optional. The Compute Engine config settings for additional worker instances in a cluster. */
	// +optional
	SecondaryWorkerConfig *WorkflowtemplateSecondaryWorkerConfig `json:"secondaryWorkerConfig,omitempty"`

	/* Immutable. Optional. Security settings for the cluster. */
	// +optional
	SecurityConfig *WorkflowtemplateSecurityConfig `json:"securityConfig,omitempty"`

	/* Immutable. Optional. The config settings for software inside the cluster. */
	// +optional
	SoftwareConfig *WorkflowtemplateSoftwareConfig `json:"softwareConfig,omitempty"`

	/* Immutable. */
	// +optional
	StagingBucketRef *v1alpha1.ResourceRef `json:"stagingBucketRef,omitempty"`

	/* Immutable. */
	// +optional
	TempBucketRef *v1alpha1.ResourceRef `json:"tempBucketRef,omitempty"`

	/* Immutable. Optional. The Compute Engine config settings for worker instances in a cluster. */
	// +optional
	WorkerConfig *WorkflowtemplateWorkerConfig `json:"workerConfig,omitempty"`
}

type WorkflowtemplateDiskConfig struct {
	/* Immutable. Optional. Size in GB of the boot disk (default is 500GB). */
	// +optional
	BootDiskSizeGb *int64 `json:"bootDiskSizeGb,omitempty"`

	/* Immutable. Optional. Type of the boot disk (default is "pd-standard"). Valid values: "pd-balanced" (Persistent Disk Balanced Solid State Drive), "pd-ssd" (Persistent Disk Solid State Drive), or "pd-standard" (Persistent Disk Hard Disk Drive). See [Disk types](https://cloud.google.com/compute/docs/disks#disk-types). */
	// +optional
	BootDiskType *string `json:"bootDiskType,omitempty"`

	/* Immutable. Optional. Number of attached SSDs, from 0 to 4 (default is 0). If SSDs are not attached, the boot disk is used to store runtime logs and [HDFS](https://hadoop.apache.org/docs/r1.2.1/hdfs_user_guide.html) data. If one or more SSDs are attached, this runtime bulk data is spread across them, and the boot disk contains only basic config and installed binaries. */
	// +optional
	NumLocalSsds *int64 `json:"numLocalSsds,omitempty"`
}

type WorkflowtemplateEncryptionConfig struct {
	/* Immutable. */
	// +optional
	GcePdKmsKeyRef *v1alpha1.ResourceRef `json:"gcePdKmsKeyRef,omitempty"`
}

type WorkflowtemplateEndpointConfig struct {
	/* Immutable. Optional. If true, enable http access to specific ports on the cluster from external sources. Defaults to false. */
	// +optional
	EnableHttpPortAccess *bool `json:"enableHttpPortAccess,omitempty"`
}

type WorkflowtemplateGceClusterConfig struct {
	/* Immutable. Optional. If true, all instances in the cluster will only have internal IP addresses. By default, clusters are not restricted to internal IP addresses, and will have ephemeral external IP addresses assigned to each instance. This `internal_ip_only` restriction can only be enabled for subnetwork enabled networks, and all off-cluster dependencies must be configured to be accessible without external IP addresses. */
	// +optional
	InternalIPOnly *bool `json:"internalIPOnly,omitempty"`

	/* Immutable. The Compute Engine metadata entries to add to all instances (see [Project and instance metadata](https://cloud.google.com/compute/docs/storing-retrieving-metadata#project_and_instance_metadata)). */
	// +optional
	Metadata map[string]string `json:"metadata,omitempty"`

	/* Immutable. */
	// +optional
	NetworkRef *v1alpha1.ResourceRef `json:"networkRef,omitempty"`

	/* Immutable. Optional. Node Group Affinity for sole-tenant clusters. */
	// +optional
	NodeGroupAffinity *WorkflowtemplateNodeGroupAffinity `json:"nodeGroupAffinity,omitempty"`

	/* Immutable. Optional. The type of IPv6 access for a cluster. Possible values: PRIVATE_IPV6_GOOGLE_ACCESS_UNSPECIFIED, INHERIT_FROM_SUBNETWORK, OUTBOUND, BIDIRECTIONAL */
	// +optional
	PrivateIPv6GoogleAccess *string `json:"privateIPv6GoogleAccess,omitempty"`

	/* Immutable. Optional. Reservation Affinity for consuming Zonal reservation. */
	// +optional
	ReservationAffinity *WorkflowtemplateReservationAffinity `json:"reservationAffinity,omitempty"`

	/* Immutable. */
	// +optional
	ServiceAccountRef *v1alpha1.ResourceRef `json:"serviceAccountRef,omitempty"`

	/* Immutable. Optional. The URIs of service account scopes to be included in Compute Engine instances. The following base set of scopes is always included: * https://www.googleapis.com/auth/cloud.useraccounts.readonly * https://www.googleapis.com/auth/devstorage.read_write * https://www.googleapis.com/auth/logging.write If no scopes are specified, the following defaults are also provided: * https://www.googleapis.com/auth/bigquery * https://www.googleapis.com/auth/bigtable.admin.table * https://www.googleapis.com/auth/bigtable.data * https://www.googleapis.com/auth/devstorage.full_control */
	// +optional
	ServiceAccountScopes []string `json:"serviceAccountScopes,omitempty"`

	/* Immutable. Optional. Shielded Instance Config for clusters using Compute Engine Shielded VMs. */
	// +optional
	ShieldedInstanceConfig *WorkflowtemplateShieldedInstanceConfig `json:"shieldedInstanceConfig,omitempty"`

	/* Immutable. */
	// +optional
	SubnetworkRef *v1alpha1.ResourceRef `json:"subnetworkRef,omitempty"`

	/* Immutable. The Compute Engine tags to add to all instances (see [Tagging instances](https://cloud.google.com/compute/docs/label-or-tag-resources#tags)). */
	// +optional
	Tags []string `json:"tags,omitempty"`

	/* Immutable. Optional. The zone where the Compute Engine cluster will be located. On a create request, it is required in the "global" region. If omitted in a non-global Dataproc region, the service will pick a zone in the corresponding Compute Engine region. On a get request, zone will always be present. A full URL, partial URI, or short name are valid. Examples: * `https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]` * `projects/[project_id]/zones/[zone]` * `us-central1-f` */
	// +optional
	Zone *string `json:"zone,omitempty"`
}

type WorkflowtemplateHadoopJob struct {
	/* Immutable. Optional. HCFS URIs of archives to be extracted in the working directory of Hadoop drivers and tasks. Supported file types: .jar, .tar, .tar.gz, .tgz, or .zip. */
	// +optional
	ArchiveUris []string `json:"archiveUris,omitempty"`

	/* Immutable. Optional. The arguments to pass to the driver. Do not include arguments, such as `-libjars` or `-Dfoo=bar`, that can be set as job properties, since a collision may occur that causes an incorrect job submission. */
	// +optional
	Args []string `json:"args,omitempty"`

	/* Immutable. Optional. HCFS (Hadoop Compatible Filesystem) URIs of files to be copied to the working directory of Hadoop drivers and distributed tasks. Useful for naively parallel tasks. */
	// +optional
	FileUris []string `json:"fileUris,omitempty"`

	/* Immutable. Optional. Jar file URIs to add to the CLASSPATHs of the Hadoop driver and tasks. */
	// +optional
	JarFileUris []string `json:"jarFileUris,omitempty"`

	/* Immutable. Optional. The runtime log config for job execution. */
	// +optional
	LoggingConfig *WorkflowtemplateLoggingConfig `json:"loggingConfig,omitempty"`

	/* Immutable. The name of the driver's main class. The jar file containing the class must be in the default CLASSPATH or specified in `jar_file_uris`. */
	// +optional
	MainClass *string `json:"mainClass,omitempty"`

	/* Immutable. The HCFS URI of the jar file containing the main class. Examples: 'gs://foo-bucket/analytics-binaries/extract-useful-metrics-mr.jar' 'hdfs:/tmp/test-samples/custom-wordcount.jar' 'file:///home/usr/lib/hadoop-mapreduce/hadoop-mapreduce-examples.jar' */
	// +optional
	MainJarFileUri *string `json:"mainJarFileUri,omitempty"`

	/* Immutable. Optional. A mapping of property names to values, used to configure Hadoop. Properties that conflict with values set by the Dataproc API may be overwritten. Can include properties set in /etc/hadoop/conf/*-site and classes in user code. */
	// +optional
	Properties map[string]string `json:"properties,omitempty"`
}

type WorkflowtemplateHiveJob struct {
	/* Immutable. Optional. Whether to continue executing queries if a query fails. The default value is `false`. Setting to `true` can be useful when executing independent parallel queries. */
	// +optional
	ContinueOnFailure *bool `json:"continueOnFailure,omitempty"`

	/* Immutable. Optional. HCFS URIs of jar files to add to the CLASSPATH of the Hive server and Hadoop MapReduce (MR) tasks. Can contain Hive SerDes and UDFs. */
	// +optional
	JarFileUris []string `json:"jarFileUris,omitempty"`

	/* Immutable. Optional. A mapping of property names and values, used to configure Hive. Properties that conflict with values set by the Dataproc API may be overwritten. Can include properties set in /etc/hadoop/conf/*-site.xml, /etc/hive/conf/hive-site.xml, and classes in user code. */
	// +optional
	Properties map[string]string `json:"properties,omitempty"`

	/* Immutable. The HCFS URI of the script that contains Hive queries. */
	// +optional
	QueryFileUri *string `json:"queryFileUri,omitempty"`

	/* Immutable. A list of queries. */
	// +optional
	QueryList *WorkflowtemplateQueryList `json:"queryList,omitempty"`

	/* Immutable. Optional. Mapping of query variable names to values (equivalent to the Hive command: `SET name="value";`). */
	// +optional
	ScriptVariables map[string]string `json:"scriptVariables,omitempty"`
}

type WorkflowtemplateInitializationActions struct {
	/* Immutable. Required. Cloud Storage URI of executable file. */
	// +optional
	ExecutableFile *string `json:"executableFile,omitempty"`

	/* Immutable. Optional. Amount of time executable has to complete. Default is 10 minutes (see JSON representation of [Duration](https://developers.google.com/protocol-buffers/docs/proto3#json)). Cluster creation fails with an explanatory error message (the name of the executable that caused the error and the exceeded timeout period) if the executable is not completed at end of the timeout period. */
	// +optional
	ExecutionTimeout *string `json:"executionTimeout,omitempty"`
}

type WorkflowtemplateJobs struct {
	/* Immutable. Optional. Job is a Hadoop job. */
	// +optional
	HadoopJob *WorkflowtemplateHadoopJob `json:"hadoopJob,omitempty"`

	/* Immutable. Optional. Job is a Hive job. */
	// +optional
	HiveJob *WorkflowtemplateHiveJob `json:"hiveJob,omitempty"`

	/* Immutable. Optional. The labels to associate with this job. Label keys must be between 1 and 63 characters long, and must conform to the following regular expression: p{Ll}p{Lo}{0,62} Label values must be between 1 and 63 characters long, and must conform to the following regular expression: [p{Ll}p{Lo}p{N}_-]{0,63} No more than 32 labels can be associated with a given job. */
	// +optional
	Labels map[string]string `json:"labels,omitempty"`

	/* Immutable. Optional. Job is a Pig job. */
	// +optional
	PigJob *WorkflowtemplatePigJob `json:"pigJob,omitempty"`

	/* Immutable. Optional. The optional list of prerequisite job step_ids. If not specified, the job will start at the beginning of workflow. */
	// +optional
	PrerequisiteStepIds []string `json:"prerequisiteStepIds,omitempty"`

	/* Immutable. Optional. Job is a Presto job. */
	// +optional
	PrestoJob *WorkflowtemplatePrestoJob `json:"prestoJob,omitempty"`

	/* Immutable. Optional. Job is a PySpark job. */
	// +optional
	PysparkJob *WorkflowtemplatePysparkJob `json:"pysparkJob,omitempty"`

	/* Immutable. Optional. Job scheduling configuration. */
	// +optional
	Scheduling *WorkflowtemplateScheduling `json:"scheduling,omitempty"`

	/* Immutable. Optional. Job is a Spark job. */
	// +optional
	SparkJob *WorkflowtemplateSparkJob `json:"sparkJob,omitempty"`

	/* Immutable. Optional. Job is a SparkR job. */
	// +optional
	SparkRJob *WorkflowtemplateSparkRJob `json:"sparkRJob,omitempty"`

	/* Immutable. Optional. Job is a SparkSql job. */
	// +optional
	SparkSqlJob *WorkflowtemplateSparkSqlJob `json:"sparkSqlJob,omitempty"`

	/* Immutable. Required. The step id. The id must be unique among all jobs within the template. The step id is used as prefix for job id, as job `goog-dataproc-workflow-step-id` label, and in prerequisiteStepIds field from other steps. The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). Cannot begin or end with underscore or hyphen. Must consist of between 3 and 50 characters. */
	StepId string `json:"stepId"`
}

type WorkflowtemplateKerberosConfig struct {
	/* Immutable. Optional. The admin server (IP or hostname) for the remote trusted realm in a cross realm trust relationship. */
	// +optional
	CrossRealmTrustAdminServer *string `json:"crossRealmTrustAdminServer,omitempty"`

	/* Immutable. Optional. The KDC (IP or hostname) for the remote trusted realm in a cross realm trust relationship. */
	// +optional
	CrossRealmTrustKdc *string `json:"crossRealmTrustKdc,omitempty"`

	/* Immutable. Optional. The remote realm the Dataproc on-cluster KDC will trust, should the user enable cross realm trust. */
	// +optional
	CrossRealmTrustRealm *string `json:"crossRealmTrustRealm,omitempty"`

	/* Immutable. Optional. The Cloud Storage URI of a KMS encrypted file containing the shared password between the on-cluster Kerberos realm and the remote trusted realm, in a cross realm trust relationship. */
	// +optional
	CrossRealmTrustSharedPassword *string `json:"crossRealmTrustSharedPassword,omitempty"`

	/* Immutable. Optional. Flag to indicate whether to Kerberize the cluster (default: false). Set this field to true to enable Kerberos on a cluster. */
	// +optional
	EnableKerberos *bool `json:"enableKerberos,omitempty"`

	/* Immutable. Optional. The Cloud Storage URI of a KMS encrypted file containing the master key of the KDC database. */
	// +optional
	KdcDbKey *string `json:"kdcDbKey,omitempty"`

	/* Immutable. Optional. The Cloud Storage URI of a KMS encrypted file containing the password to the user provided key. For the self-signed certificate, this password is generated by Dataproc. */
	// +optional
	KeyPassword *string `json:"keyPassword,omitempty"`

	/* Immutable. Optional. The Cloud Storage URI of the keystore file used for SSL encryption. If not provided, Dataproc will provide a self-signed certificate. */
	// +optional
	Keystore *string `json:"keystore,omitempty"`

	/* Immutable. Optional. The Cloud Storage URI of a KMS encrypted file containing the password to the user provided keystore. For the self-signed certificate, this password is generated by Dataproc. */
	// +optional
	KeystorePassword *string `json:"keystorePassword,omitempty"`

	/* Immutable. */
	// +optional
	KmsKeyRef *v1alpha1.ResourceRef `json:"kmsKeyRef,omitempty"`

	/* Immutable. Optional. The name of the on-cluster Kerberos realm. If not specified, the uppercased domain of hostnames will be the realm. */
	// +optional
	Realm *string `json:"realm,omitempty"`

	/* Immutable. Optional. The Cloud Storage URI of a KMS encrypted file containing the root principal password. */
	// +optional
	RootPrincipalPassword *string `json:"rootPrincipalPassword,omitempty"`

	/* Immutable. Optional. The lifetime of the ticket granting ticket, in hours. If not specified, or user specifies 0, then default value 10 will be used. */
	// +optional
	TgtLifetimeHours *int64 `json:"tgtLifetimeHours,omitempty"`

	/* Immutable. Optional. The Cloud Storage URI of the truststore file used for SSL encryption. If not provided, Dataproc will provide a self-signed certificate. */
	// +optional
	Truststore *string `json:"truststore,omitempty"`

	/* Immutable. Optional. The Cloud Storage URI of a KMS encrypted file containing the password to the user provided truststore. For the self-signed certificate, this password is generated by Dataproc. */
	// +optional
	TruststorePassword *string `json:"truststorePassword,omitempty"`
}

type WorkflowtemplateLifecycleConfig struct {
	/* Immutable. Optional. The time when cluster will be auto-deleted (see JSON representation of [Timestamp](https://developers.google.com/protocol-buffers/docs/proto3#json)). */
	// +optional
	AutoDeleteTime *string `json:"autoDeleteTime,omitempty"`

	/* Immutable. Optional. The lifetime duration of cluster. The cluster will be auto-deleted at the end of this period. Minimum value is 10 minutes; maximum value is 14 days (see JSON representation of [Duration](https://developers.google.com/protocol-buffers/docs/proto3#json)). */
	// +optional
	AutoDeleteTtl *string `json:"autoDeleteTtl,omitempty"`

	/* Immutable. Optional. The duration to keep the cluster alive while idling (when no jobs are running). Passing this threshold will cause the cluster to be deleted. Minimum value is 5 minutes; maximum value is 14 days (see JSON representation of [Duration](https://developers.google.com/protocol-buffers/docs/proto3#json)). */
	// +optional
	IdleDeleteTtl *string `json:"idleDeleteTtl,omitempty"`
}

type WorkflowtemplateLoggingConfig struct {
	/* Immutable. The per-package log levels for the driver. This may include "root" package name to configure rootLogger. Examples: 'com.google = FATAL', 'root = INFO', 'org.apache = DEBUG' */
	// +optional
	DriverLogLevels map[string]string `json:"driverLogLevels,omitempty"`
}

type WorkflowtemplateManagedCluster struct {
	/* Immutable. Required. The cluster name prefix. A unique cluster name will be formed by appending a random suffix. The name must contain only lower-case letters (a-z), numbers (0-9), and hyphens (-). Must begin with a letter. Cannot begin or end with hyphen. Must consist of between 2 and 35 characters. */
	ClusterName string `json:"clusterName"`

	/* Immutable. Required. The cluster configuration. */
	Config WorkflowtemplateConfig `json:"config"`

	/* Immutable. Optional. The labels to associate with this cluster. Label keys must be between 1 and 63 characters long, and must conform to the following PCRE regular expression: p{Ll}p{Lo}{0,62} Label values must be between 1 and 63 characters long, and must conform to the following PCRE regular expression: [p{Ll}p{Lo}p{N}_-]{0,63} No more than 32 labels can be associated with a given cluster. */
	// +optional
	Labels map[string]string `json:"labels,omitempty"`
}

type WorkflowtemplateMasterConfig struct {
	/* Immutable. Optional. The Compute Engine accelerator configuration for these instances. */
	// +optional
	Accelerators []WorkflowtemplateAccelerators `json:"accelerators,omitempty"`

	/* Immutable. Optional. Disk option config settings. */
	// +optional
	DiskConfig *WorkflowtemplateDiskConfig `json:"diskConfig,omitempty"`

	/* Immutable. */
	// +optional
	ImageRef *v1alpha1.ResourceRef `json:"imageRef,omitempty"`

	/* Immutable. Optional. The Compute Engine machine type used for cluster instances. A full URL, partial URI, or short name are valid. Examples: * `https://www.googleapis.com/compute/v1/projects/[project_id]/zones/us-east1-a/machineTypes/n1-standard-2` * `projects/[project_id]/zones/us-east1-a/machineTypes/n1-standard-2` * `n1-standard-2` **Auto Zone Exception**: If you are using the Dataproc [Auto Zone Placement](https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the machine type resource, for example, `n1-standard-2`. */
	// +optional
	MachineType *string `json:"machineType,omitempty"`

	/* Immutable. Optional. Specifies the minimum cpu platform for the Instance Group. See [Dataproc -> Minimum CPU Platform](https://cloud.google.com/dataproc/docs/concepts/compute/dataproc-min-cpu). */
	// +optional
	MinCpuPlatform *string `json:"minCpuPlatform,omitempty"`

	/* Immutable. Optional. The number of VM instances in the instance group. For [HA cluster](/dataproc/docs/concepts/configuring-clusters/high-availability) [master_config](#FIELDS.master_config) groups, **must be set to 3**. For standard cluster [master_config](#FIELDS.master_config) groups, **must be set to 1**. */
	// +optional
	NumInstances *int64 `json:"numInstances,omitempty"`

	/* Immutable. Optional. Specifies the preemptibility of the instance group. The default value for master and worker groups is `NON_PREEMPTIBLE`. This default cannot be changed. The default value for secondary instances is `PREEMPTIBLE`. Possible values: PREEMPTIBILITY_UNSPECIFIED, NON_PREEMPTIBLE, PREEMPTIBLE */
	// +optional
	Preemptibility *string `json:"preemptibility,omitempty"`
}

type WorkflowtemplateNodeGroupAffinity struct {
	/* Immutable. */
	NodeGroupRef v1alpha1.ResourceRef `json:"nodeGroupRef"`
}

type WorkflowtemplateParameters struct {
	/* Immutable. Optional. Brief description of the parameter. Must not exceed 1024 characters. */
	// +optional
	Description *string `json:"description,omitempty"`

	/* Immutable. Required. Paths to all fields that the parameter replaces. A field is allowed to appear in at most one parameter's list of field paths. A field path is similar in syntax to a google.protobuf.FieldMask. For example, a field path that references the zone field of a workflow template's cluster selector would be specified as `placement.clusterSelector.zone`. Also, field paths can reference fields using the following syntax: * Values in maps can be referenced by key: * labels['key'] * placement.clusterSelector.clusterLabels['key'] * placement.managedCluster.labels['key'] * placement.clusterSelector.clusterLabels['key'] * jobs['step-id'].labels['key'] * Jobs in the jobs list can be referenced by step-id: * jobs['step-id'].hadoopJob.mainJarFileUri * jobs['step-id'].hiveJob.queryFileUri * jobs['step-id'].pySparkJob.mainPythonFileUri * jobs['step-id'].hadoopJob.jarFileUris[0] * jobs['step-id'].hadoopJob.archiveUris[0] * jobs['step-id'].hadoopJob.fileUris[0] * jobs['step-id'].pySparkJob.pythonFileUris[0] * Items in repeated fields can be referenced by a zero-based index: * jobs['step-id'].sparkJob.args[0] * Other examples: * jobs['step-id'].hadoopJob.properties['key'] * jobs['step-id'].hadoopJob.args[0] * jobs['step-id'].hiveJob.scriptVariables['key'] * jobs['step-id'].hadoopJob.mainJarFileUri * placement.clusterSelector.zone It may not be possible to parameterize maps and repeated fields in their entirety since only individual map values and individual items in repeated fields can be referenced. For example, the following field paths are invalid: - placement.clusterSelector.clusterLabels - jobs['step-id'].sparkJob.args */
	Fields []string `json:"fields"`

	/* Immutable. Required. Parameter name. The parameter name is used as the key, and paired with the parameter value, which are passed to the template when the template is instantiated. The name must contain only capital letters (A-Z), numbers (0-9), and underscores (_), and must not start with a number. The maximum length is 40 characters. */
	Name string `json:"name"`

	/* Immutable. Optional. Validation rules to be applied to this parameter's value. */
	// +optional
	Validation *WorkflowtemplateValidation `json:"validation,omitempty"`
}

type WorkflowtemplatePigJob struct {
	/* Immutable. Optional. Whether to continue executing queries if a query fails. The default value is `false`. Setting to `true` can be useful when executing independent parallel queries. */
	// +optional
	ContinueOnFailure *bool `json:"continueOnFailure,omitempty"`

	/* Immutable. Optional. HCFS URIs of jar files to add to the CLASSPATH of the Pig Client and Hadoop MapReduce (MR) tasks. Can contain Pig UDFs. */
	// +optional
	JarFileUris []string `json:"jarFileUris,omitempty"`

	/* Immutable. Optional. The runtime log config for job execution. */
	// +optional
	LoggingConfig *WorkflowtemplateLoggingConfig `json:"loggingConfig,omitempty"`

	/* Immutable. Optional. A mapping of property names to values, used to configure Pig. Properties that conflict with values set by the Dataproc API may be overwritten. Can include properties set in /etc/hadoop/conf/*-site.xml, /etc/pig/conf/pig.properties, and classes in user code. */
	// +optional
	Properties map[string]string `json:"properties,omitempty"`

	/* Immutable. The HCFS URI of the script that contains the Pig queries. */
	// +optional
	QueryFileUri *string `json:"queryFileUri,omitempty"`

	/* Immutable. A list of queries. */
	// +optional
	QueryList *WorkflowtemplateQueryList `json:"queryList,omitempty"`

	/* Immutable. Optional. Mapping of query variable names to values (equivalent to the Pig command: `name=[value]`). */
	// +optional
	ScriptVariables map[string]string `json:"scriptVariables,omitempty"`
}

type WorkflowtemplatePlacement struct {
	/* Immutable. Optional. A selector that chooses target cluster for jobs based on metadata. The selector is evaluated at the time each job is submitted. */
	// +optional
	ClusterSelector *WorkflowtemplateClusterSelector `json:"clusterSelector,omitempty"`

	/* Immutable. A cluster that is managed by the workflow. */
	// +optional
	ManagedCluster *WorkflowtemplateManagedCluster `json:"managedCluster,omitempty"`
}

type WorkflowtemplatePrestoJob struct {
	/* Immutable. Optional. Presto client tags to attach to this query */
	// +optional
	ClientTags []string `json:"clientTags,omitempty"`

	/* Immutable. Optional. Whether to continue executing queries if a query fails. The default value is `false`. Setting to `true` can be useful when executing independent parallel queries. */
	// +optional
	ContinueOnFailure *bool `json:"continueOnFailure,omitempty"`

	/* Immutable. Optional. The runtime log config for job execution. */
	// +optional
	LoggingConfig *WorkflowtemplateLoggingConfig `json:"loggingConfig,omitempty"`

	/* Immutable. Optional. The format in which query output will be displayed. See the Presto documentation for supported output formats */
	// +optional
	OutputFormat *string `json:"outputFormat,omitempty"`

	/* Immutable. Optional. A mapping of property names to values. Used to set Presto [session properties](https://prestodb.io/docs/current/sql/set-session.html) Equivalent to using the --session flag in the Presto CLI */
	// +optional
	Properties map[string]string `json:"properties,omitempty"`

	/* Immutable. The HCFS URI of the script that contains SQL queries. */
	// +optional
	QueryFileUri *string `json:"queryFileUri,omitempty"`

	/* Immutable. A list of queries. */
	// +optional
	QueryList *WorkflowtemplateQueryList `json:"queryList,omitempty"`
}

type WorkflowtemplatePysparkJob struct {
	/* Immutable. Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip. */
	// +optional
	ArchiveUris []string `json:"archiveUris,omitempty"`

	/* Immutable. Optional. The arguments to pass to the driver. Do not include arguments, such as `--conf`, that can be set as job properties, since a collision may occur that causes an incorrect job submission. */
	// +optional
	Args []string `json:"args,omitempty"`

	/* Immutable. Optional. HCFS URIs of files to be placed in the working directory of each executor. Useful for naively parallel tasks. */
	// +optional
	FileUris []string `json:"fileUris,omitempty"`

	/* Immutable. Optional. HCFS URIs of jar files to add to the CLASSPATHs of the Python driver and tasks. */
	// +optional
	JarFileUris []string `json:"jarFileUris,omitempty"`

	/* Immutable. Optional. The runtime log config for job execution. */
	// +optional
	LoggingConfig *WorkflowtemplateLoggingConfig `json:"loggingConfig,omitempty"`

	/* Immutable. Required. The HCFS URI of the main Python file to use as the driver. Must be a .py file. */
	MainPythonFileUri string `json:"mainPythonFileUri"`

	/* Immutable. Optional. A mapping of property names to values, used to configure PySpark. Properties that conflict with values set by the Dataproc API may be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code. */
	// +optional
	Properties map[string]string `json:"properties,omitempty"`

	/* Immutable. Optional. HCFS file URIs of Python files to pass to the PySpark framework. Supported file types: .py, .egg, and .zip. */
	// +optional
	PythonFileUris []string `json:"pythonFileUris,omitempty"`
}

type WorkflowtemplateQueryList struct {
	/* Immutable. Required. The queries to execute. You do not need to end a query expression with a semicolon. Multiple queries can be specified in one string by separating each with a semicolon. Here is an example of a Dataproc API snippet that uses a QueryList to specify a HiveJob: "hiveJob": { "queryList": { "queries": [ "query1", "query2", "query3;query4", ] } } */
	Queries []string `json:"queries"`
}

type WorkflowtemplateRegex struct {
	/* Immutable. Required. RE2 regular expressions used to validate the parameter's value. The value must match the regex in its entirety (substring matches are not sufficient). */
	Regexes []string `json:"regexes"`
}

type WorkflowtemplateReservationAffinity struct {
	/* Immutable. Optional. Type of reservation to consume Possible values: TYPE_UNSPECIFIED, NO_RESERVATION, ANY_RESERVATION, SPECIFIC_RESERVATION */
	// +optional
	ConsumeReservationType *string `json:"consumeReservationType,omitempty"`

	/* Immutable. Optional. Corresponds to the label key of reservation resource. */
	// +optional
	Key *string `json:"key,omitempty"`

	/* Immutable. Optional. Corresponds to the label values of reservation resource. */
	// +optional
	Values []WorkflowtemplateValues `json:"values,omitempty"`
}

type WorkflowtemplateScheduling struct {
	/* Immutable. Optional. Maximum number of times per hour a driver may be restarted as a result of driver exiting with non-zero code before job is reported failed. A job may be reported as thrashing if driver exits with non-zero code 4 times within 10 minute window. Maximum value is 10. */
	// +optional
	MaxFailuresPerHour *int64 `json:"maxFailuresPerHour,omitempty"`

	/* Immutable. Optional. Maximum number of times in total a driver may be restarted as a result of driver exiting with non-zero code before job is reported failed. Maximum value is 240. */
	// +optional
	MaxFailuresTotal *int64 `json:"maxFailuresTotal,omitempty"`
}

type WorkflowtemplateSecondaryWorkerConfig struct {
	/* Immutable. Optional. The Compute Engine accelerator configuration for these instances. */
	// +optional
	Accelerators []WorkflowtemplateAccelerators `json:"accelerators,omitempty"`

	/* Immutable. Optional. Disk option config settings. */
	// +optional
	DiskConfig *WorkflowtemplateDiskConfig `json:"diskConfig,omitempty"`

	/* Immutable. */
	// +optional
	ImageRef *v1alpha1.ResourceRef `json:"imageRef,omitempty"`

	/* Immutable. Optional. The Compute Engine machine type used for cluster instances. A full URL, partial URI, or short name are valid. Examples: * `https://www.googleapis.com/compute/v1/projects/[project_id]/zones/us-east1-a/machineTypes/n1-standard-2` * `projects/[project_id]/zones/us-east1-a/machineTypes/n1-standard-2` * `n1-standard-2` **Auto Zone Exception**: If you are using the Dataproc [Auto Zone Placement](https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the machine type resource, for example, `n1-standard-2`. */
	// +optional
	MachineType *string `json:"machineType,omitempty"`

	/* Immutable. Optional. Specifies the minimum cpu platform for the Instance Group. See [Dataproc -> Minimum CPU Platform](https://cloud.google.com/dataproc/docs/concepts/compute/dataproc-min-cpu). */
	// +optional
	MinCpuPlatform *string `json:"minCpuPlatform,omitempty"`

	/* Immutable. Optional. The number of VM instances in the instance group. For [HA cluster](/dataproc/docs/concepts/configuring-clusters/high-availability) [master_config](#FIELDS.master_config) groups, **must be set to 3**. For standard cluster [master_config](#FIELDS.master_config) groups, **must be set to 1**. */
	// +optional
	NumInstances *int64 `json:"numInstances,omitempty"`

	/* Immutable. Optional. Specifies the preemptibility of the instance group. The default value for master and worker groups is `NON_PREEMPTIBLE`. This default cannot be changed. The default value for secondary instances is `PREEMPTIBLE`. Possible values: PREEMPTIBILITY_UNSPECIFIED, NON_PREEMPTIBLE, PREEMPTIBLE */
	// +optional
	Preemptibility *string `json:"preemptibility,omitempty"`
}

type WorkflowtemplateSecurityConfig struct {
	/* Immutable. Optional. Kerberos related configuration. */
	// +optional
	KerberosConfig *WorkflowtemplateKerberosConfig `json:"kerberosConfig,omitempty"`
}

type WorkflowtemplateShieldedInstanceConfig struct {
	/* Immutable. Optional. Defines whether instances have integrity monitoring enabled. Integrity monitoring compares the most recent boot measurements to the integrity policy baseline and returns a pair of pass/fail results depending on whether they match or not. */
	// +optional
	EnableIntegrityMonitoring *bool `json:"enableIntegrityMonitoring,omitempty"`

	/* Immutable. Optional. Defines whether the instances have Secure Boot enabled. Secure Boot helps ensure that the system only runs authentic software by verifying the digital signature of all boot components, and halting the boot process if signature verification fails. */
	// +optional
	EnableSecureBoot *bool `json:"enableSecureBoot,omitempty"`

	/* Immutable. Optional. Defines whether the instance have the vTPM enabled. Virtual Trusted Platform Module protects objects like keys, certificates and enables Measured Boot by performing the measurements needed to create a known good boot baseline, called the integrity policy baseline. */
	// +optional
	EnableVtpm *bool `json:"enableVtpm,omitempty"`
}

type WorkflowtemplateSoftwareConfig struct {
	/* Immutable. Optional. The version of software inside the cluster. It must be one of the supported [Dataproc Versions](https://cloud.google.com/dataproc/docs/concepts/versioning/dataproc-versions#supported_dataproc_versions), such as "1.2" (including a subminor version, such as "1.2.29"), or the ["preview" version](https://cloud.google.com/dataproc/docs/concepts/versioning/dataproc-versions#other_versions). If unspecified, it defaults to the latest Debian version. */
	// +optional
	ImageVersion *string `json:"imageVersion,omitempty"`

	/* Immutable. Optional. The set of components to activate on the cluster. */
	// +optional
	OptionalComponents []string `json:"optionalComponents,omitempty"`

	/* Immutable. Optional. The properties to set on daemon config files. Property keys are specified in `prefix:property` format, for example `core:hadoop.tmp.dir`. The following are supported prefixes and their mappings: * capacity-scheduler: `capacity-scheduler.xml` * core: `core-site.xml` * distcp: `distcp-default.xml` * hdfs: `hdfs-site.xml` * hive: `hive-site.xml` * mapred: `mapred-site.xml` * pig: `pig.properties` * spark: `spark-defaults.conf` * yarn: `yarn-site.xml` For more information, see [Cluster properties](https://cloud.google.com/dataproc/docs/concepts/cluster-properties). */
	// +optional
	Properties map[string]string `json:"properties,omitempty"`
}

type WorkflowtemplateSparkJob struct {
	/* Immutable. Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip. */
	// +optional
	ArchiveUris []string `json:"archiveUris,omitempty"`

	/* Immutable. Optional. The arguments to pass to the driver. Do not include arguments, such as `--conf`, that can be set as job properties, since a collision may occur that causes an incorrect job submission. */
	// +optional
	Args []string `json:"args,omitempty"`

	/* Immutable. Optional. HCFS URIs of files to be placed in the working directory of each executor. Useful for naively parallel tasks. */
	// +optional
	FileUris []string `json:"fileUris,omitempty"`

	/* Immutable. Optional. HCFS URIs of jar files to add to the CLASSPATHs of the Spark driver and tasks. */
	// +optional
	JarFileUris []string `json:"jarFileUris,omitempty"`

	/* Immutable. Optional. The runtime log config for job execution. */
	// +optional
	LoggingConfig *WorkflowtemplateLoggingConfig `json:"loggingConfig,omitempty"`

	/* Immutable. The name of the driver's main class. The jar file that contains the class must be in the default CLASSPATH or specified in `jar_file_uris`. */
	// +optional
	MainClass *string `json:"mainClass,omitempty"`

	/* Immutable. The HCFS URI of the jar file that contains the main class. */
	// +optional
	MainJarFileUri *string `json:"mainJarFileUri,omitempty"`

	/* Immutable. Optional. A mapping of property names to values, used to configure Spark. Properties that conflict with values set by the Dataproc API may be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code. */
	// +optional
	Properties map[string]string `json:"properties,omitempty"`
}

type WorkflowtemplateSparkRJob struct {
	/* Immutable. Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip. */
	// +optional
	ArchiveUris []string `json:"archiveUris,omitempty"`

	/* Immutable. Optional. The arguments to pass to the driver. Do not include arguments, such as `--conf`, that can be set as job properties, since a collision may occur that causes an incorrect job submission. */
	// +optional
	Args []string `json:"args,omitempty"`

	/* Immutable. Optional. HCFS URIs of files to be placed in the working directory of each executor. Useful for naively parallel tasks. */
	// +optional
	FileUris []string `json:"fileUris,omitempty"`

	/* Immutable. Optional. The runtime log config for job execution. */
	// +optional
	LoggingConfig *WorkflowtemplateLoggingConfig `json:"loggingConfig,omitempty"`

	/* Immutable. Required. The HCFS URI of the main R file to use as the driver. Must be a .R file. */
	MainRFileUri string `json:"mainRFileUri"`

	/* Immutable. Optional. A mapping of property names to values, used to configure SparkR. Properties that conflict with values set by the Dataproc API may be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code. */
	// +optional
	Properties map[string]string `json:"properties,omitempty"`
}

type WorkflowtemplateSparkSqlJob struct {
	/* Immutable. Optional. HCFS URIs of jar files to be added to the Spark CLASSPATH. */
	// +optional
	JarFileUris []string `json:"jarFileUris,omitempty"`

	/* Immutable. Optional. The runtime log config for job execution. */
	// +optional
	LoggingConfig *WorkflowtemplateLoggingConfig `json:"loggingConfig,omitempty"`

	/* Immutable. Optional. A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Dataproc API may be overwritten. */
	// +optional
	Properties map[string]string `json:"properties,omitempty"`

	/* Immutable. The HCFS URI of the script that contains SQL queries. */
	// +optional
	QueryFileUri *string `json:"queryFileUri,omitempty"`

	/* Immutable. A list of queries. */
	// +optional
	QueryList *WorkflowtemplateQueryList `json:"queryList,omitempty"`

	/* Immutable. Optional. Mapping of query variable names to values (equivalent to the Spark SQL command: SET `name="value";`). */
	// +optional
	ScriptVariables map[string]string `json:"scriptVariables,omitempty"`
}

type WorkflowtemplateValidation struct {
	/* Immutable. Validation based on regular expressions. */
	// +optional
	Regex *WorkflowtemplateRegex `json:"regex,omitempty"`

	/* Immutable. Validation based on a list of allowed values. */
	// +optional
	Values *WorkflowtemplateValues `json:"values,omitempty"`
}

type WorkflowtemplateValues struct {
	/* Immutable. Required. List of allowed values for the parameter. */
	Values []WorkflowtemplateValues `json:"values"`
}

type WorkflowtemplateWorkerConfig struct {
	/* Immutable. Optional. The Compute Engine accelerator configuration for these instances. */
	// +optional
	Accelerators []WorkflowtemplateAccelerators `json:"accelerators,omitempty"`

	/* Immutable. Optional. Disk option config settings. */
	// +optional
	DiskConfig *WorkflowtemplateDiskConfig `json:"diskConfig,omitempty"`

	/* Immutable. */
	// +optional
	ImageRef *v1alpha1.ResourceRef `json:"imageRef,omitempty"`

	/* Immutable. Optional. The Compute Engine machine type used for cluster instances. A full URL, partial URI, or short name are valid. Examples: * `https://www.googleapis.com/compute/v1/projects/[project_id]/zones/us-east1-a/machineTypes/n1-standard-2` * `projects/[project_id]/zones/us-east1-a/machineTypes/n1-standard-2` * `n1-standard-2` **Auto Zone Exception**: If you are using the Dataproc [Auto Zone Placement](https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the machine type resource, for example, `n1-standard-2`. */
	// +optional
	MachineType *string `json:"machineType,omitempty"`

	/* Immutable. Optional. Specifies the minimum cpu platform for the Instance Group. See [Dataproc -> Minimum CPU Platform](https://cloud.google.com/dataproc/docs/concepts/compute/dataproc-min-cpu). */
	// +optional
	MinCpuPlatform *string `json:"minCpuPlatform,omitempty"`

	/* Immutable. Optional. The number of VM instances in the instance group. For [HA cluster](/dataproc/docs/concepts/configuring-clusters/high-availability) [master_config](#FIELDS.master_config) groups, **must be set to 3**. For standard cluster [master_config](#FIELDS.master_config) groups, **must be set to 1**. */
	// +optional
	NumInstances *int64 `json:"numInstances,omitempty"`

	/* Immutable. Optional. Specifies the preemptibility of the instance group. The default value for master and worker groups is `NON_PREEMPTIBLE`. This default cannot be changed. The default value for secondary instances is `PREEMPTIBLE`. Possible values: PREEMPTIBILITY_UNSPECIFIED, NON_PREEMPTIBLE, PREEMPTIBLE */
	// +optional
	Preemptibility *string `json:"preemptibility,omitempty"`
}

type DataprocWorkflowTemplateSpec struct {
	/* Immutable. Optional. Timeout duration for the DAG of jobs, expressed in seconds (see [JSON representation of duration](https://developers.google.com/protocol-buffers/docs/proto3#json)). The timeout duration must be from 10 minutes ("600s") to 24 hours ("86400s"). The timer begins when the first job is submitted. If the workflow is running at the end of the timeout period, any remaining jobs are cancelled, the workflow is ended, and if the workflow was running on a [managed cluster](/dataproc/docs/concepts/workflows/using-workflows#configuring_or_selecting_a_cluster), the cluster is deleted. */
	// +optional
	DagTimeout *string `json:"dagTimeout,omitempty"`

	/* Immutable. Required. The Directed Acyclic Graph of Jobs to submit. */
	Jobs []WorkflowtemplateJobs `json:"jobs"`

	/* Immutable. The location for the resource */
	Location string `json:"location"`

	/* Immutable. Optional. Template parameters whose values are substituted into the template. Values for parameters must be provided when the template is instantiated. */
	// +optional
	Parameters []WorkflowtemplateParameters `json:"parameters,omitempty"`

	/* Immutable. Required. WorkflowTemplate scheduling information. */
	Placement WorkflowtemplatePlacement `json:"placement"`

	/* Immutable. The Project that this resource belongs to. */
	// +optional
	ProjectRef *v1alpha1.ResourceRef `json:"projectRef,omitempty"`

	/* Immutable. Optional. The name of the resource. Used for creation and acquisition. When unset, the value of `metadata.name` is used as the default. */
	// +optional
	ResourceID *string `json:"resourceID,omitempty"`
}

type WorkflowtemplateConfigStatus struct {
	// +optional
	EndpointConfig *WorkflowtemplateEndpointConfigStatus `json:"endpointConfig,omitempty"`

	// +optional
	LifecycleConfig *WorkflowtemplateLifecycleConfigStatus `json:"lifecycleConfig,omitempty"`

	// +optional
	MasterConfig *WorkflowtemplateMasterConfigStatus `json:"masterConfig,omitempty"`

	// +optional
	SecondaryWorkerConfig *WorkflowtemplateSecondaryWorkerConfigStatus `json:"secondaryWorkerConfig,omitempty"`

	// +optional
	WorkerConfig *WorkflowtemplateWorkerConfigStatus `json:"workerConfig,omitempty"`
}

type WorkflowtemplateEndpointConfigStatus struct {
	/* Output only. The map of port descriptions to URLs. Will only be populated if enable_http_port_access is true. */
	// +optional
	HttpPorts map[string]string `json:"httpPorts,omitempty"`
}

type WorkflowtemplateLifecycleConfigStatus struct {
	/* Output only. The time when cluster became idle (most recent job finished) and became eligible for deletion due to idleness (see JSON representation of [Timestamp](https://developers.google.com/protocol-buffers/docs/proto3#json)). */
	// +optional
	IdleStartTime *string `json:"idleStartTime,omitempty"`
}

type WorkflowtemplateManagedClusterStatus struct {
	// +optional
	Config *WorkflowtemplateConfigStatus `json:"config,omitempty"`
}

type WorkflowtemplateManagedGroupConfigStatus struct {
	/* Output only. The name of the Instance Group Manager for this group. */
	// +optional
	InstanceGroupManagerName *string `json:"instanceGroupManagerName,omitempty"`

	/* Output only. The name of the Instance Template used for the Managed Instance Group. */
	// +optional
	InstanceTemplateName *string `json:"instanceTemplateName,omitempty"`
}

type WorkflowtemplateMasterConfigStatus struct {
	/* Output only. The list of instance names. Dataproc derives the names from `cluster_name`, `num_instances`, and the instance group. */
	// +optional
	InstanceNames []string `json:"instanceNames,omitempty"`

	/* Output only. Specifies that this instance group contains preemptible instances. */
	// +optional
	IsPreemptible *bool `json:"isPreemptible,omitempty"`

	/* Output only. The config for Compute Engine Instance Group Manager that manages this group. This is only used for preemptible instance groups. */
	// +optional
	ManagedGroupConfig *WorkflowtemplateManagedGroupConfigStatus `json:"managedGroupConfig,omitempty"`
}

type WorkflowtemplatePlacementStatus struct {
	// +optional
	ManagedCluster *WorkflowtemplateManagedClusterStatus `json:"managedCluster,omitempty"`
}

type WorkflowtemplateSecondaryWorkerConfigStatus struct {
	/* Output only. The list of instance names. Dataproc derives the names from `cluster_name`, `num_instances`, and the instance group. */
	// +optional
	InstanceNames []string `json:"instanceNames,omitempty"`

	/* Output only. Specifies that this instance group contains preemptible instances. */
	// +optional
	IsPreemptible *bool `json:"isPreemptible,omitempty"`

	/* Output only. The config for Compute Engine Instance Group Manager that manages this group. This is only used for preemptible instance groups. */
	// +optional
	ManagedGroupConfig *WorkflowtemplateManagedGroupConfigStatus `json:"managedGroupConfig,omitempty"`
}

type WorkflowtemplateWorkerConfigStatus struct {
	/* Output only. The list of instance names. Dataproc derives the names from `cluster_name`, `num_instances`, and the instance group. */
	// +optional
	InstanceNames []string `json:"instanceNames,omitempty"`

	/* Output only. Specifies that this instance group contains preemptible instances. */
	// +optional
	IsPreemptible *bool `json:"isPreemptible,omitempty"`

	/* Output only. The config for Compute Engine Instance Group Manager that manages this group. This is only used for preemptible instance groups. */
	// +optional
	ManagedGroupConfig *WorkflowtemplateManagedGroupConfigStatus `json:"managedGroupConfig,omitempty"`
}

type DataprocWorkflowTemplateStatus struct {
	/* Conditions represent the latest available observations of the
	   DataprocWorkflowTemplate's current state. */
	Conditions []v1alpha1.Condition `json:"conditions,omitempty"`
	/* Output only. The time template was created. */
	// +optional
	CreateTime *string `json:"createTime,omitempty"`

	/* ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource. */
	// +optional
	ObservedGeneration *int64 `json:"observedGeneration,omitempty"`

	// +optional
	Placement *WorkflowtemplatePlacementStatus `json:"placement,omitempty"`

	/* Output only. The time template was last updated. */
	// +optional
	UpdateTime *string `json:"updateTime,omitempty"`

	/* Output only. The current version of this workflow template. */
	// +optional
	Version *int64 `json:"version,omitempty"`
}

// +genclient
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:resource:categories=gcp,shortName=gcpdataprocworkflowtemplate;gcpdataprocworkflowtemplates
// +kubebuilder:subresource:status
// +kubebuilder:metadata:labels="cnrm.cloud.google.com/dcl2crd=true";"cnrm.cloud.google.com/managed-by-kcc=true";"cnrm.cloud.google.com/stability-level=stable";"cnrm.cloud.google.com/system=true"
// +kubebuilder:printcolumn:name="Age",JSONPath=".metadata.creationTimestamp",type="date"
// +kubebuilder:printcolumn:name="Ready",JSONPath=".status.conditions[?(@.type=='Ready')].status",type="string",description="When 'True', the most recent reconcile of the resource succeeded"
// +kubebuilder:printcolumn:name="Status",JSONPath=".status.conditions[?(@.type=='Ready')].reason",type="string",description="The reason for the value in 'Ready'"
// +kubebuilder:printcolumn:name="Status Age",JSONPath=".status.conditions[?(@.type=='Ready')].lastTransitionTime",type="date",description="The last transition time for the value in 'Status'"

// DataprocWorkflowTemplate is the Schema for the dataproc API
// +k8s:openapi-gen=true
type DataprocWorkflowTemplate struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`

	Spec   DataprocWorkflowTemplateSpec   `json:"spec,omitempty"`
	Status DataprocWorkflowTemplateStatus `json:"status,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// DataprocWorkflowTemplateList contains a list of DataprocWorkflowTemplate
type DataprocWorkflowTemplateList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []DataprocWorkflowTemplate `json:"items"`
}

func init() {
	SchemeBuilder.Register(&DataprocWorkflowTemplate{}, &DataprocWorkflowTemplateList{})
}
