// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// ----------------------------------------------------------------------------
//
//     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
//
// ----------------------------------------------------------------------------
//
//     This file is automatically generated by Config Connector and manual
//     changes will be clobbered when the file is regenerated.
//
// ----------------------------------------------------------------------------

// *** DISCLAIMER ***
// Config Connector's go-client for CRDs is currently in ALPHA, which means
// that future versions of the go-client may include breaking changes.
// Please try it out and give us feedback!

package v1alpha1

import (
	"github.com/GoogleCloudPlatform/k8s-config-connector/pkg/clients/generated/apis/k8s/v1alpha1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

type ListingBigQueryDatasetSource struct {
	/* Resource name of the dataset source for this listing. e.g. `projects/myproject/datasets/123` */
	DatasetRef v1alpha1.ResourceRef `json:"datasetRef"`

	/* Optional. If set, restricted export policy will be propagated and enforced on the linked dataset. */
	// +optional
	RestrictedExportPolicy *ListingRestrictedExportPolicy `json:"restrictedExportPolicy,omitempty"`

	/* Optional. Resources in this dataset that are selectively shared. If this field is empty, then the entire dataset (all resources) are shared. This field is only valid for data clean room exchanges. */
	// +optional
	SelectedResources []ListingSelectedResources `json:"selectedResources,omitempty"`
}

type ListingDataProvider struct {
	/* Optional. Name of the data provider. */
	// +optional
	Name *string `json:"name,omitempty"`

	/* Optional. Email or URL of the data provider. Max Length: 1000 bytes. */
	// +optional
	PrimaryContact *string `json:"primaryContact,omitempty"`
}

type ListingEnabled struct {
	/* The bool value. */
	// +optional
	Value *bool `json:"value,omitempty"`
}

type ListingPublisher struct {
	/* Optional. Name of the listing publisher. */
	// +optional
	Name *string `json:"name,omitempty"`

	/* Optional. Email or URL of the listing publisher. Max Length: 1000 bytes. */
	// +optional
	PrimaryContact *string `json:"primaryContact,omitempty"`
}

type ListingRestrictDirectTableAccess struct {
	/* The bool value. */
	// +optional
	Value *bool `json:"value,omitempty"`
}

type ListingRestrictQueryResult struct {
	/* The bool value. */
	// +optional
	Value *bool `json:"value,omitempty"`
}

type ListingRestrictedExportPolicy struct {
	/* Optional. If true, enable restricted export. */
	// +optional
	Enabled *ListingEnabled `json:"enabled,omitempty"`

	/* Optional. If true, restrict direct table access (read api/tabledata.list) on linked table. */
	// +optional
	RestrictDirectTableAccess *ListingRestrictDirectTableAccess `json:"restrictDirectTableAccess,omitempty"`

	/* Optional. If true, restrict export of query result derived from restricted linked dataset table. */
	// +optional
	RestrictQueryResult *ListingRestrictQueryResult `json:"restrictQueryResult,omitempty"`
}

type ListingSelectedResources struct {
	/* Optional. Format: For table: `projects/{projectId}/datasets/{datasetId}/tables/{tableId}` Example:"projects/test_project/datasets/test_dataset/tables/test_table" */
	// +optional
	Table *string `json:"table,omitempty"`
}

type ListingSource struct {
	/* One of the following fields must be set. */
	// +optional
	BigQueryDatasetSource *ListingBigQueryDatasetSource `json:"bigQueryDatasetSource,omitempty"`
}

type BigQueryAnalyticsHubListingSpec struct {
	/* Optional. Categories of the listing. Up to two categories are allowed. */
	// +optional
	Categories []string `json:"categories,omitempty"`

	DataExchangeRef v1alpha1.ResourceRef `json:"dataExchangeRef"`

	/* Optional. Details of the data provider who owns the source data. */
	// +optional
	DataProvider *ListingDataProvider `json:"dataProvider,omitempty"`

	/* Optional. Short description of the listing. The description must contain only Unicode characters or tabs  (HT), new lines (LF), carriage returns (CR), and page breaks (FF). Default value is an empty string. Max length: 2000 bytes. */
	// +optional
	Description *string `json:"description,omitempty"`

	/* Optional. Type of discovery of the listing on the discovery page. */
	// +optional
	DiscoveryType *string `json:"discoveryType,omitempty"`

	/* Required. Human-readable display name of the listing. The display name must contain only Unicode letters, numbers (0-9), underscores (_), dashes (-), spaces ( ), ampersands (&) and can't start or end with spaces. Default value is an empty string. Max length: 63 bytes. */
	DisplayName string `json:"displayName"`

	/* Optional. Documentation describing the listing. */
	// +optional
	Documentation *string `json:"documentation,omitempty"`

	/* Immutable. The name of the location this data exchange. */
	Location string `json:"location"`

	/* Optional. Email or URL of the primary point of contact of the listing. Max Length: 1000 bytes. */
	// +optional
	PrimaryContact *string `json:"primaryContact,omitempty"`

	/* The Project that this resource belongs to. */
	ProjectRef v1alpha1.ResourceRef `json:"projectRef"`

	/* Optional. Details of the publisher who owns the listing and who can share the source data. */
	// +optional
	Publisher *ListingPublisher `json:"publisher,omitempty"`

	/* Optional. Email or URL of the request access of the listing. Subscribers can use this reference to request access. Max Length: 1000 bytes. */
	// +optional
	RequestAccess *string `json:"requestAccess,omitempty"`

	/* Immutable. The BigQueryAnalyticsHubDataExchangeListing name. If not given, the metadata.name will be used. */
	// +optional
	ResourceID *string `json:"resourceID,omitempty"`

	Source ListingSource `json:"source"`
}

type ListingObservedStateStatus struct {
	/* Output only. Current state of the listing. */
	// +optional
	State *string `json:"state,omitempty"`
}

type BigQueryAnalyticsHubListingStatus struct {
	/* Conditions represent the latest available observations of the
	   BigQueryAnalyticsHubListing's current state. */
	Conditions []v1alpha1.Condition `json:"conditions,omitempty"`
	/* A unique specifier for the BigQueryAnalyticsHubDataExchangeListing resource in GCP. */
	// +optional
	ExternalRef *string `json:"externalRef,omitempty"`

	/* ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource. */
	// +optional
	ObservedGeneration *int64 `json:"observedGeneration,omitempty"`

	/* ObservedState is the state of the resource as most recently observed in GCP. */
	// +optional
	ObservedState *ListingObservedStateStatus `json:"observedState,omitempty"`
}

// +genclient
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:resource:categories=gcp,shortName=
// +kubebuilder:subresource:status
// +kubebuilder:metadata:labels="cnrm.cloud.google.com/managed-by-kcc=true";"cnrm.cloud.google.com/system=true"
// +kubebuilder:printcolumn:name="Age",JSONPath=".metadata.creationTimestamp",type="date"
// +kubebuilder:printcolumn:name="Ready",JSONPath=".status.conditions[?(@.type=='Ready')].status",type="string",description="When 'True', the most recent reconcile of the resource succeeded"
// +kubebuilder:printcolumn:name="Status",JSONPath=".status.conditions[?(@.type=='Ready')].reason",type="string",description="The reason for the value in 'Ready'"
// +kubebuilder:printcolumn:name="Status Age",JSONPath=".status.conditions[?(@.type=='Ready')].lastTransitionTime",type="date",description="The last transition time for the value in 'Status'"

// BigQueryAnalyticsHubListing is the Schema for the bigqueryanalyticshub API
// +k8s:openapi-gen=true
type BigQueryAnalyticsHubListing struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`

	Spec   BigQueryAnalyticsHubListingSpec   `json:"spec,omitempty"`
	Status BigQueryAnalyticsHubListingStatus `json:"status,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// BigQueryAnalyticsHubListingList contains a list of BigQueryAnalyticsHubListing
type BigQueryAnalyticsHubListingList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []BigQueryAnalyticsHubListing `json:"items"`
}

func init() {
	SchemeBuilder.Register(&BigQueryAnalyticsHubListing{}, &BigQueryAnalyticsHubListingList{})
}
