// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// ----------------------------------------------------------------------------
//
//     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
//
// ----------------------------------------------------------------------------
//
//     This file is automatically generated by Config Connector and manual
//     changes will be clobbered when the file is regenerated.
//
// ----------------------------------------------------------------------------

// *** DISCLAIMER ***
// Config Connector's go-client for CRDs is currently in ALPHA, which means
// that future versions of the go-client may include breaking changes.
// Please try it out and give us feedback!

package v1beta1

import (
	"github.com/GoogleCloudPlatform/k8s-config-connector/pkg/clients/generated/apis/k8s/v1alpha1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

type DatasetAccess struct {
	/* Grants all resources of particular types in a particular dataset read access to the current dataset. */
	// +optional
	Dataset *DatasetDataset `json:"dataset,omitempty"`

	/* A domain to grant access to. Any users signed in with the
	domain specified will be granted the specified access. */
	// +optional
	Domain *string `json:"domain,omitempty"`

	/* An email address of a Google Group to grant access to. */
	// +optional
	GroupByEmail *string `json:"groupByEmail,omitempty"`

	/* Some other type of member that appears in the IAM Policy but isn't a user,
	group, domain, or special group. For example: 'allUsers'. */
	// +optional
	IamMember *string `json:"iamMember,omitempty"`

	/* Describes the rights granted to the user specified by the other
	member of the access object. Basic, predefined, and custom roles
	are supported. Predefined roles that have equivalent basic roles
	are swapped by the API to their basic counterparts. See
	[official docs](https://cloud.google.com/bigquery/docs/access-control). */
	// +optional
	Role *string `json:"role,omitempty"`

	/* A routine from a different dataset to grant access to. Queries
	executed against that routine will have read access to tables in
	this dataset. The role field is not required when this field is
	set. If that routine is updated by any user, access to the routine
	needs to be granted again via an update operation. */
	// +optional
	Routine *DatasetRoutine `json:"routine,omitempty"`

	/* A special group to grant access to. Possible values include:


	* 'projectOwners': Owners of the enclosing project.


	* 'projectReaders': Readers of the enclosing project.


	* 'projectWriters': Writers of the enclosing project.


	* 'allAuthenticatedUsers': All authenticated BigQuery users. */
	// +optional
	SpecialGroup *string `json:"specialGroup,omitempty"`

	/* An email address of a user to grant access to. For example:
	fred@example.com. */
	// +optional
	UserByEmail *string `json:"userByEmail,omitempty"`

	/* A view from a different dataset to grant access to. Queries
	executed against that view will have read access to tables in
	this dataset. The role field is not required when this field is
	set. If that view is updated by any user, access to the view
	needs to be granted again via an update operation. */
	// +optional
	View *DatasetView `json:"view,omitempty"`
}

type DatasetDataset struct {
	/* The ID of the dataset containing this table. */
	DatasetId string `json:"datasetId"`

	/* The ID of the project containing this table. */
	ProjectId string `json:"projectId"`
}

type DatasetDefaultEncryptionConfiguration struct {
	/* Describes the Cloud KMS encryption key that will be used to protect destination
	BigQuery table. The BigQuery Service Account associated with your project requires
	access to this encryption key. */
	KmsKeyRef v1alpha1.ResourceRef `json:"kmsKeyRef"`
}

type DatasetRoutine struct {
	/* The ID of the dataset containing this table. */
	DatasetId string `json:"datasetId"`

	/* The ID of the project containing this table. */
	ProjectId string `json:"projectId"`

	/* The ID of the routine. The ID must contain only letters (a-z,
	A-Z), numbers (0-9), or underscores (_). The maximum length
	is 256 characters. */
	RoutineId string `json:"routineId"`
}

type DatasetView struct {
	/* The ID of the dataset containing this table. */
	DatasetId string `json:"datasetId"`

	/* The ID of the project containing this table. */
	ProjectId string `json:"projectId"`

	/* The ID of the table. The ID must contain only letters (a-z,
	A-Z), numbers (0-9), or underscores (_). The maximum length
	is 1,024 characters. */
	TableId string `json:"tableId"`
}

type BigQueryDatasetSpec struct {
	/* An array of objects that define dataset access for one or more entities. */
	// +optional
	Access []DatasetAccess `json:"access,omitempty"`

	/* Defines the default collation specification of future tables created
	in the dataset. If a table is created in this dataset without table-level
	default collation, then the table inherits the dataset default collation,
	which is applied to the string fields that do not have explicit collation
	specified. A change to this field affects only tables created afterwards,
	and does not alter the existing tables.

	The following values are supported:
	- 'und:ci': undetermined locale, case insensitive.
	- '': empty string. Default to case-sensitive behavior. */
	// +optional
	DefaultCollation *string `json:"defaultCollation,omitempty"`

	/* The default encryption key for all tables in the dataset. Once this property is set,
	all newly-created partitioned tables in the dataset will have encryption key set to
	this value, unless table creation request (or query) overrides the key. */
	// +optional
	DefaultEncryptionConfiguration *DatasetDefaultEncryptionConfiguration `json:"defaultEncryptionConfiguration,omitempty"`

	/* The default partition expiration for all partitioned tables in
	the dataset, in milliseconds.


	Once this property is set, all newly-created partitioned tables in
	the dataset will have an 'expirationMs' property in the 'timePartitioning'
	settings set to this value, and changing the value will only
	affect new tables, not existing ones. The storage in a partition will
	have an expiration time of its partition time plus this value.
	Setting this property overrides the use of 'defaultTableExpirationMs'
	for partitioned tables: only one of 'defaultTableExpirationMs' and
	'defaultPartitionExpirationMs' will be used for any new partitioned
	table. If you provide an explicit 'timePartitioning.expirationMs' when
	creating or updating a partitioned table, that value takes precedence
	over the default partition expiration time indicated by this property. */
	// +optional
	DefaultPartitionExpirationMs *int64 `json:"defaultPartitionExpirationMs,omitempty"`

	/* The default lifetime of all tables in the dataset, in milliseconds.
	The minimum value is 3600000 milliseconds (one hour).


	Once this property is set, all newly-created tables in the dataset
	will have an 'expirationTime' property set to the creation time plus
	the value in this property, and changing the value will only affect
	new tables, not existing ones. When the 'expirationTime' for a given
	table is reached, that table will be deleted automatically.
	If a table's 'expirationTime' is modified or removed before the
	table expires, or if you provide an explicit 'expirationTime' when
	creating a table, that value takes precedence over the default
	expiration time indicated by this property. */
	// +optional
	DefaultTableExpirationMs *int64 `json:"defaultTableExpirationMs,omitempty"`

	/* A user-friendly description of the dataset. */
	// +optional
	Description *string `json:"description,omitempty"`

	/* A descriptive name for the dataset. */
	// +optional
	FriendlyName *string `json:"friendlyName,omitempty"`

	/* TRUE if the dataset and its table names are case-insensitive, otherwise FALSE.
	By default, this is FALSE, which means the dataset and its table names are
	case-sensitive. This field does not affect routine references. */
	// +optional
	IsCaseInsensitive *bool `json:"isCaseInsensitive,omitempty"`

	/* Immutable. The geographic location where the dataset should reside.
	See [official docs](https://cloud.google.com/bigquery/docs/dataset-locations).


	There are two types of locations, regional or multi-regional. A regional
	location is a specific geographic place, such as Tokyo, and a multi-regional
	location is a large geographic area, such as the United States, that
	contains at least two geographic places.


	The default value is multi-regional location 'US'.
	Changing this forces a new resource to be created. */
	// +optional
	Location *string `json:"location,omitempty"`

	/* Defines the time travel window in hours. The value can be from 48 to 168 hours (2 to 7 days). */
	// +optional
	MaxTimeTravelHours *string `json:"maxTimeTravelHours,omitempty"`

	/* The project that this resource belongs to. */
	// +optional
	ProjectRef *v1alpha1.ResourceRef `json:"projectRef,omitempty"`

	/* Immutable. Optional. The datasetId of the resource. Used for creation and acquisition. When unset, the value of `metadata.name` is used as the default. */
	// +optional
	ResourceID *string `json:"resourceID,omitempty"`

	/* Specifies the storage billing model for the dataset.
	Set this flag value to LOGICAL to use logical bytes for storage billing,
	or to PHYSICAL to use physical bytes instead.

	LOGICAL is the default if this flag isn't specified. */
	// +optional
	StorageBillingModel *string `json:"storageBillingModel,omitempty"`
}

type BigQueryDatasetStatus struct {
	/* Conditions represent the latest available observations of the
	   BigQueryDataset's current state. */
	Conditions []v1alpha1.Condition `json:"conditions,omitempty"`
	/* The time when this dataset was created, in milliseconds since the
	epoch. */
	// +optional
	CreationTime *int64 `json:"creationTime,omitempty"`

	/* A hash of the resource. */
	// +optional
	Etag *string `json:"etag,omitempty"`

	/* The date when this dataset or any of its tables was last modified, in
	milliseconds since the epoch. */
	// +optional
	LastModifiedTime *int64 `json:"lastModifiedTime,omitempty"`

	/* ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource. */
	// +optional
	ObservedGeneration *int64 `json:"observedGeneration,omitempty"`

	// +optional
	SelfLink *string `json:"selfLink,omitempty"`
}

// +genclient
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:resource:categories=gcp,shortName=gcpbigquerydataset;gcpbigquerydatasets
// +kubebuilder:subresource:status
// +kubebuilder:metadata:labels="cnrm.cloud.google.com/managed-by-kcc=true";"cnrm.cloud.google.com/stability-level=stable";"cnrm.cloud.google.com/system=true";"cnrm.cloud.google.com/tf2crd=true"
// +kubebuilder:printcolumn:name="Age",JSONPath=".metadata.creationTimestamp",type="date"
// +kubebuilder:printcolumn:name="Ready",JSONPath=".status.conditions[?(@.type=='Ready')].status",type="string",description="When 'True', the most recent reconcile of the resource succeeded"
// +kubebuilder:printcolumn:name="Status",JSONPath=".status.conditions[?(@.type=='Ready')].reason",type="string",description="The reason for the value in 'Ready'"
// +kubebuilder:printcolumn:name="Status Age",JSONPath=".status.conditions[?(@.type=='Ready')].lastTransitionTime",type="date",description="The last transition time for the value in 'Status'"

// BigQueryDataset is the Schema for the bigquery API
// +k8s:openapi-gen=true
type BigQueryDataset struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`

	Spec   BigQueryDatasetSpec   `json:"spec,omitempty"`
	Status BigQueryDatasetStatus `json:"status,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// BigQueryDatasetList contains a list of BigQueryDataset
type BigQueryDatasetList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []BigQueryDataset `json:"items"`
}

func init() {
	SchemeBuilder.Register(&BigQueryDataset{}, &BigQueryDatasetList{})
}
