//go:build !ignore_autogenerated
// +build !ignore_autogenerated

// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// *** DISCLAIMER ***
// Config Connector's go-client for CRDs is currently in ALPHA, which means
// that future versions of the go-client may include breaking changes.
// Please try it out and give us feedback!

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1beta1

import (
	v1alpha1 "github.com/GoogleCloudPlatform/k8s-config-connector/pkg/clients/generated/apis/k8s/v1alpha1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataflowFlexTemplateJob) DeepCopyInto(out *DataflowFlexTemplateJob) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataflowFlexTemplateJob.
func (in *DataflowFlexTemplateJob) DeepCopy() *DataflowFlexTemplateJob {
	if in == nil {
		return nil
	}
	out := new(DataflowFlexTemplateJob)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataflowFlexTemplateJob) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataflowFlexTemplateJobList) DeepCopyInto(out *DataflowFlexTemplateJobList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DataflowFlexTemplateJob, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataflowFlexTemplateJobList.
func (in *DataflowFlexTemplateJobList) DeepCopy() *DataflowFlexTemplateJobList {
	if in == nil {
		return nil
	}
	out := new(DataflowFlexTemplateJobList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataflowFlexTemplateJobList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataflowFlexTemplateJobSpec) DeepCopyInto(out *DataflowFlexTemplateJobSpec) {
	*out = *in
	if in.AdditionalExperiments != nil {
		in, out := &in.AdditionalExperiments, &out.AdditionalExperiments
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.AutoscalingAlgorithm != nil {
		in, out := &in.AutoscalingAlgorithm, &out.AutoscalingAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.EnableStreamingEngine != nil {
		in, out := &in.EnableStreamingEngine, &out.EnableStreamingEngine
		*out = new(bool)
		**out = **in
	}
	if in.IpConfiguration != nil {
		in, out := &in.IpConfiguration, &out.IpConfiguration
		*out = new(string)
		**out = **in
	}
	if in.KmsKeyNameRef != nil {
		in, out := &in.KmsKeyNameRef, &out.KmsKeyNameRef
		*out = new(v1alpha1.ResourceRef)
		**out = **in
	}
	if in.LauncherMachineType != nil {
		in, out := &in.LauncherMachineType, &out.LauncherMachineType
		*out = new(string)
		**out = **in
	}
	if in.MachineType != nil {
		in, out := &in.MachineType, &out.MachineType
		*out = new(string)
		**out = **in
	}
	if in.MaxWorkers != nil {
		in, out := &in.MaxWorkers, &out.MaxWorkers
		*out = new(int32)
		**out = **in
	}
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(v1alpha1.ResourceRef)
		**out = **in
	}
	if in.NumWorkers != nil {
		in, out := &in.NumWorkers, &out.NumWorkers
		*out = new(int32)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(FlextemplatejobParameters)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SdkContainerImage != nil {
		in, out := &in.SdkContainerImage, &out.SdkContainerImage
		*out = new(string)
		**out = **in
	}
	if in.ServiceAccountEmailRef != nil {
		in, out := &in.ServiceAccountEmailRef, &out.ServiceAccountEmailRef
		*out = new(v1alpha1.ResourceRef)
		**out = **in
	}
	if in.StagingLocation != nil {
		in, out := &in.StagingLocation, &out.StagingLocation
		*out = new(string)
		**out = **in
	}
	if in.SubnetworkRef != nil {
		in, out := &in.SubnetworkRef, &out.SubnetworkRef
		*out = new(v1alpha1.ResourceRef)
		**out = **in
	}
	if in.TempLocation != nil {
		in, out := &in.TempLocation, &out.TempLocation
		*out = new(string)
		**out = **in
	}
	if in.TransformNameMapping != nil {
		in, out := &in.TransformNameMapping, &out.TransformNameMapping
		*out = new(FlextemplatejobTransformNameMapping)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataflowFlexTemplateJobSpec.
func (in *DataflowFlexTemplateJobSpec) DeepCopy() *DataflowFlexTemplateJobSpec {
	if in == nil {
		return nil
	}
	out := new(DataflowFlexTemplateJobSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataflowFlexTemplateJobStatus) DeepCopyInto(out *DataflowFlexTemplateJobStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1alpha1.Condition, len(*in))
		copy(*out, *in)
	}
	if in.JobId != nil {
		in, out := &in.JobId, &out.JobId
		*out = new(string)
		**out = **in
	}
	if in.ObservedGeneration != nil {
		in, out := &in.ObservedGeneration, &out.ObservedGeneration
		*out = new(int64)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataflowFlexTemplateJobStatus.
func (in *DataflowFlexTemplateJobStatus) DeepCopy() *DataflowFlexTemplateJobStatus {
	if in == nil {
		return nil
	}
	out := new(DataflowFlexTemplateJobStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataflowJob) DeepCopyInto(out *DataflowJob) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataflowJob.
func (in *DataflowJob) DeepCopy() *DataflowJob {
	if in == nil {
		return nil
	}
	out := new(DataflowJob)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataflowJob) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataflowJobList) DeepCopyInto(out *DataflowJobList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DataflowJob, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataflowJobList.
func (in *DataflowJobList) DeepCopy() *DataflowJobList {
	if in == nil {
		return nil
	}
	out := new(DataflowJobList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataflowJobList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataflowJobSpec) DeepCopyInto(out *DataflowJobSpec) {
	*out = *in
	if in.AdditionalExperiments != nil {
		in, out := &in.AdditionalExperiments, &out.AdditionalExperiments
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.EnableStreamingEngine != nil {
		in, out := &in.EnableStreamingEngine, &out.EnableStreamingEngine
		*out = new(bool)
		**out = **in
	}
	if in.IpConfiguration != nil {
		in, out := &in.IpConfiguration, &out.IpConfiguration
		*out = new(string)
		**out = **in
	}
	if in.KmsKeyRef != nil {
		in, out := &in.KmsKeyRef, &out.KmsKeyRef
		*out = new(v1alpha1.ResourceRef)
		**out = **in
	}
	if in.MachineType != nil {
		in, out := &in.MachineType, &out.MachineType
		*out = new(string)
		**out = **in
	}
	if in.MaxWorkers != nil {
		in, out := &in.MaxWorkers, &out.MaxWorkers
		*out = new(int64)
		**out = **in
	}
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(v1alpha1.ResourceRef)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(JobParameters)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
	if in.ServiceAccountRef != nil {
		in, out := &in.ServiceAccountRef, &out.ServiceAccountRef
		*out = new(v1alpha1.ResourceRef)
		**out = **in
	}
	if in.SubnetworkRef != nil {
		in, out := &in.SubnetworkRef, &out.SubnetworkRef
		*out = new(v1alpha1.ResourceRef)
		**out = **in
	}
	if in.TransformNameMapping != nil {
		in, out := &in.TransformNameMapping, &out.TransformNameMapping
		*out = new(JobTransformNameMapping)
		**out = **in
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataflowJobSpec.
func (in *DataflowJobSpec) DeepCopy() *DataflowJobSpec {
	if in == nil {
		return nil
	}
	out := new(DataflowJobSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataflowJobStatus) DeepCopyInto(out *DataflowJobStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1alpha1.Condition, len(*in))
		copy(*out, *in)
	}
	if in.JobId != nil {
		in, out := &in.JobId, &out.JobId
		*out = new(string)
		**out = **in
	}
	if in.ObservedGeneration != nil {
		in, out := &in.ObservedGeneration, &out.ObservedGeneration
		*out = new(int64)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataflowJobStatus.
func (in *DataflowJobStatus) DeepCopy() *DataflowJobStatus {
	if in == nil {
		return nil
	}
	out := new(DataflowJobStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlextemplatejobParameters) DeepCopyInto(out *FlextemplatejobParameters) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlextemplatejobParameters.
func (in *FlextemplatejobParameters) DeepCopy() *FlextemplatejobParameters {
	if in == nil {
		return nil
	}
	out := new(FlextemplatejobParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlextemplatejobTransformNameMapping) DeepCopyInto(out *FlextemplatejobTransformNameMapping) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlextemplatejobTransformNameMapping.
func (in *FlextemplatejobTransformNameMapping) DeepCopy() *FlextemplatejobTransformNameMapping {
	if in == nil {
		return nil
	}
	out := new(FlextemplatejobTransformNameMapping)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobParameters) DeepCopyInto(out *JobParameters) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobParameters.
func (in *JobParameters) DeepCopy() *JobParameters {
	if in == nil {
		return nil
	}
	out := new(JobParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobTransformNameMapping) DeepCopyInto(out *JobTransformNameMapping) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobTransformNameMapping.
func (in *JobTransformNameMapping) DeepCopy() *JobTransformNameMapping {
	if in == nil {
		return nil
	}
	out := new(JobTransformNameMapping)
	in.DeepCopyInto(out)
	return out
}
