//go:build !ignore_autogenerated
// +build !ignore_autogenerated

// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// *** DISCLAIMER ***
// Config Connector's go-client for CRDs is currently in ALPHA, which means
// that future versions of the go-client may include breaking changes.
// Please try it out and give us feedback!

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1beta1

import (
	v1alpha1 "github.com/GoogleCloudPlatform/k8s-config-connector/pkg/clients/generated/apis/k8s/v1alpha1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataFusionInstance) DeepCopyInto(out *DataFusionInstance) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataFusionInstance.
func (in *DataFusionInstance) DeepCopy() *DataFusionInstance {
	if in == nil {
		return nil
	}
	out := new(DataFusionInstance)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataFusionInstance) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataFusionInstanceList) DeepCopyInto(out *DataFusionInstanceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DataFusionInstance, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataFusionInstanceList.
func (in *DataFusionInstanceList) DeepCopy() *DataFusionInstanceList {
	if in == nil {
		return nil
	}
	out := new(DataFusionInstanceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataFusionInstanceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataFusionInstanceSpec) DeepCopyInto(out *DataFusionInstanceSpec) {
	*out = *in
	if in.DataprocServiceAccountRef != nil {
		in, out := &in.DataprocServiceAccountRef, &out.DataprocServiceAccountRef
		*out = new(v1alpha1.ResourceRef)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.EnableStackdriverLogging != nil {
		in, out := &in.EnableStackdriverLogging, &out.EnableStackdriverLogging
		*out = new(bool)
		**out = **in
	}
	if in.EnableStackdriverMonitoring != nil {
		in, out := &in.EnableStackdriverMonitoring, &out.EnableStackdriverMonitoring
		*out = new(bool)
		**out = **in
	}
	if in.NetworkConfig != nil {
		in, out := &in.NetworkConfig, &out.NetworkConfig
		*out = new(InstanceNetworkConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.PrivateInstance != nil {
		in, out := &in.PrivateInstance, &out.PrivateInstance
		*out = new(bool)
		**out = **in
	}
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataFusionInstanceSpec.
func (in *DataFusionInstanceSpec) DeepCopy() *DataFusionInstanceSpec {
	if in == nil {
		return nil
	}
	out := new(DataFusionInstanceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataFusionInstanceStatus) DeepCopyInto(out *DataFusionInstanceStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1alpha1.Condition, len(*in))
		copy(*out, *in)
	}
	if in.ApiEndpoint != nil {
		in, out := &in.ApiEndpoint, &out.ApiEndpoint
		*out = new(string)
		**out = **in
	}
	if in.AvailableVersion != nil {
		in, out := &in.AvailableVersion, &out.AvailableVersion
		*out = make([]InstanceAvailableVersionStatus, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.GcsBucket != nil {
		in, out := &in.GcsBucket, &out.GcsBucket
		*out = new(string)
		**out = **in
	}
	if in.ObservedGeneration != nil {
		in, out := &in.ObservedGeneration, &out.ObservedGeneration
		*out = new(int64)
		**out = **in
	}
	if in.P4ServiceAccount != nil {
		in, out := &in.P4ServiceAccount, &out.P4ServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.ServiceEndpoint != nil {
		in, out := &in.ServiceEndpoint, &out.ServiceEndpoint
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.StateMessage != nil {
		in, out := &in.StateMessage, &out.StateMessage
		*out = new(string)
		**out = **in
	}
	if in.TenantProjectId != nil {
		in, out := &in.TenantProjectId, &out.TenantProjectId
		*out = new(string)
		**out = **in
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataFusionInstanceStatus.
func (in *DataFusionInstanceStatus) DeepCopy() *DataFusionInstanceStatus {
	if in == nil {
		return nil
	}
	out := new(DataFusionInstanceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceAvailableVersionStatus) DeepCopyInto(out *InstanceAvailableVersionStatus) {
	*out = *in
	if in.AvailableFeatures != nil {
		in, out := &in.AvailableFeatures, &out.AvailableFeatures
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.DefaultVersion != nil {
		in, out := &in.DefaultVersion, &out.DefaultVersion
		*out = new(bool)
		**out = **in
	}
	if in.VersionNumber != nil {
		in, out := &in.VersionNumber, &out.VersionNumber
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceAvailableVersionStatus.
func (in *InstanceAvailableVersionStatus) DeepCopy() *InstanceAvailableVersionStatus {
	if in == nil {
		return nil
	}
	out := new(InstanceAvailableVersionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceNetworkConfig) DeepCopyInto(out *InstanceNetworkConfig) {
	*out = *in
	if in.IpAllocation != nil {
		in, out := &in.IpAllocation, &out.IpAllocation
		*out = new(string)
		**out = **in
	}
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(v1alpha1.ResourceRef)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceNetworkConfig.
func (in *InstanceNetworkConfig) DeepCopy() *InstanceNetworkConfig {
	if in == nil {
		return nil
	}
	out := new(InstanceNetworkConfig)
	in.DeepCopyInto(out)
	return out
}
