// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// ----------------------------------------------------------------------------
//
//     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
//
// ----------------------------------------------------------------------------
//
//     This file is automatically generated by Config Connector and manual
//     changes will be clobbered when the file is regenerated.
//
// ----------------------------------------------------------------------------

// *** DISCLAIMER ***
// Config Connector's go-client for CRDs is currently in ALPHA, which means
// that future versions of the go-client may include breaking changes.
// Please try it out and give us feedback!

package v1alpha1

import (
	"github.com/GoogleCloudPlatform/k8s-config-connector/pkg/clients/generated/apis/k8s/v1alpha1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

type ServiceconnectionpolicyPscConfig struct {
	/* Optional. Max number of PSC connections for this policy. */
	// +optional
	Limit *int64 `json:"limit,omitempty"`

	/* Required. ProducerInstanceLocation is used to specify which authorization mechanism to use to determine which projects the Producer instance can be within. */
	// +optional
	ProducerInstanceLocation *string `json:"producerInstanceLocation,omitempty"`

	/* The resource paths of subnetworks to use for IP address management. Example: projects/{projectNumOrId}/regions/{region}/subnetworks/{resourceId}. */
	// +optional
	SubnetworkRefs []v1alpha1.ResourceRef `json:"subnetworkRefs,omitempty"`
}

type NetworkConnectivityServiceConnectionPolicySpec struct {
	/* A description of this resource. */
	// +optional
	Description *string `json:"description,omitempty"`

	/* Immutable. Location of the resource. */
	Location string `json:"location"`

	/* The resource path of the consumer network. Example: - projects/{projectNumOrId}/global/networks/{resourceId}. */
	// +optional
	NetworkRef *v1alpha1.ResourceRef `json:"networkRef,omitempty"`

	/* Immutable. The Project that this resource belongs to. */
	ProjectRef v1alpha1.ResourceRef `json:"projectRef"`

	/* Configuration used for Private Service Connect connections. Used when Infrastructure is PSC. */
	// +optional
	PscConfig *ServiceconnectionpolicyPscConfig `json:"pscConfig,omitempty"`

	/* The NetworkConnectivityServiceConnectionPolicy name. If not given, the metadata.name will be used. */
	// +optional
	ResourceID *string `json:"resourceID,omitempty"`

	/* The service class identifier for which this ServiceConnectionPolicy is for. The service class identifier is a unique, symbolic representation of a ServiceClass. It is provided by the Service Producer. Google services have a prefix of gcp. For example, gcp-cloud-sql. 3rd party services do not. For example, test-service-a3dfcx. */
	// +optional
	ServiceClass *string `json:"serviceClass,omitempty"`
}

type ServiceconnectionpolicyErrorInfoStatus struct {
	/* The logical grouping to which the "reason" belongs. The error domain is typically the registered service name of the tool or product that generates the error. Example: "pubsub.googleapis.com". If the error is generated by some common infrastructure, the error domain must be a globally unique value that identifies the infrastructure. For Google API infrastructure, the error domain is "googleapis.com". */
	// +optional
	Domain *string `json:"domain,omitempty"`

	/* Additional structured details about this error. Keys must match /a-z+/ but should ideally be lowerCamelCase. Also they must be limited to 64 characters in length. When identifying the current value of an exceeded limit, the units should be contained in the key, not the value. For example, rather than {"instanceLimit": "100/request"}, should be returned as, {"instanceLimitPerRequest": "100"}, if the client exceeds the number of instances that can be created in a single (batch) request. */
	// +optional
	Metadata map[string]string `json:"metadata,omitempty"`

	/* The reason of the error. This is a constant value that identifies the proximate cause of the error. Error reasons are unique within a particular domain of errors. This should be at most 63 characters and match a regular expression of `A-Z+[A-Z0-9]`, which represents UPPER_SNAKE_CASE. */
	// +optional
	Reason *string `json:"reason,omitempty"`
}

type ServiceconnectionpolicyErrorStatus struct {
	/* The status code, which should be an enum value of google.rpc.Code. */
	// +optional
	Code *int32 `json:"code,omitempty"`

	/* A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client. */
	// +optional
	Message *string `json:"message,omitempty"`
}

type ServiceconnectionpolicyObservedStateStatus struct {
	/* Output only. Time when the ServiceConnectionMap was created. */
	// +optional
	CreateTime *string `json:"createTime,omitempty"`

	/* Optional. The etag is computed by the server, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding. */
	// +optional
	Etag *string `json:"etag,omitempty"`

	/* Output only. The type of underlying resources used to create the connection. */
	// +optional
	Infrastructure *string `json:"infrastructure,omitempty"`

	/* Output only. [Output only] Information about each Private Service Connect connection. */
	// +optional
	PscConnections []ServiceconnectionpolicyPscConnectionsStatus `json:"pscConnections,omitempty"`

	/* Output only. Time when the ServiceConnectionMap was updated. */
	// +optional
	UpdateTime *string `json:"updateTime,omitempty"`
}

type ServiceconnectionpolicyPscConnectionsStatus struct {
	/* The resource reference of the consumer address. */
	// +optional
	ConsumerAddress *string `json:"consumerAddress,omitempty"`

	/* The resource reference of the PSC Forwarding Rule within the consumer VPC. */
	// +optional
	ConsumerForwardingRule *string `json:"consumerForwardingRule,omitempty"`

	/* The project where the PSC connection is created. */
	// +optional
	ConsumerTargetProject *string `json:"consumerTargetProject,omitempty"`

	/* The most recent error during operating this connection. */
	// +optional
	Error *ServiceconnectionpolicyErrorStatus `json:"error,omitempty"`

	/* Output only. The error info for the latest error during operating this connection. */
	// +optional
	ErrorInfo *ServiceconnectionpolicyErrorInfoStatus `json:"errorInfo,omitempty"`

	/* The error type indicates whether the error is consumer facing, producer facing or system internal. */
	// +optional
	ErrorType *string `json:"errorType,omitempty"`

	/* The last Compute Engine operation to setup PSC connection. */
	// +optional
	GceOperation *string `json:"gceOperation,omitempty"`

	/* Immutable. An immutable identifier for the producer instance. */
	// +optional
	ProducerInstanceID *string `json:"producerInstanceID,omitempty"`

	/* The PSC connection id of the PSC forwarding rule. */
	// +optional
	PscConnectionID *string `json:"pscConnectionID,omitempty"`

	/* Output only. The URI of the subnetwork selected to allocate IP address for this connection. */
	// +optional
	SelectedSubnetwork *string `json:"selectedSubnetwork,omitempty"`

	/* State of the PSC Connection */
	// +optional
	State *string `json:"state,omitempty"`
}

type NetworkConnectivityServiceConnectionPolicyStatus struct {
	/* Conditions represent the latest available observations of the
	   NetworkConnectivityServiceConnectionPolicy's current state. */
	Conditions []v1alpha1.Condition `json:"conditions,omitempty"`
	/* A unique specifier for the NetworkConnectivityServiceConnectionPolicy resource in GCP. */
	// +optional
	ExternalRef *string `json:"externalRef,omitempty"`

	/* ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource. */
	// +optional
	ObservedGeneration *int64 `json:"observedGeneration,omitempty"`

	/* ObservedState is the state of the resource as most recently observed in GCP. */
	// +optional
	ObservedState *ServiceconnectionpolicyObservedStateStatus `json:"observedState,omitempty"`
}

// +genclient
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:resource:categories=,shortName=
// +kubebuilder:subresource:status
// +kubebuilder:metadata:labels="cnrm.cloud.google.com/managed-by-kcc=true";"cnrm.cloud.google.com/system=true"
// +kubebuilder:printcolumn:name="Ready",JSONPath=".status.conditions[?(@.type=='Ready')].status",type="string",description="When 'True', the most recent reconcile of the resource succeeded"
// +kubebuilder:printcolumn:name="Status",JSONPath=".status.conditions[?(@.type=='Ready')].reason",type="string",description="The reason for the value in 'Ready'"
// +kubebuilder:printcolumn:name="Status Age",JSONPath=".status.conditions[?(@.type=='Ready')].lastTransitionTime",type="date",description="The last transition time for the value in 'Status'"

// NetworkConnectivityServiceConnectionPolicy is the Schema for the networkconnectivity API
// +k8s:openapi-gen=true
type NetworkConnectivityServiceConnectionPolicy struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`

	Spec   NetworkConnectivityServiceConnectionPolicySpec   `json:"spec,omitempty"`
	Status NetworkConnectivityServiceConnectionPolicyStatus `json:"status,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// NetworkConnectivityServiceConnectionPolicyList contains a list of NetworkConnectivityServiceConnectionPolicy
type NetworkConnectivityServiceConnectionPolicyList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []NetworkConnectivityServiceConnectionPolicy `json:"items"`
}

func init() {
	SchemeBuilder.Register(&NetworkConnectivityServiceConnectionPolicy{}, &NetworkConnectivityServiceConnectionPolicyList{})
}
