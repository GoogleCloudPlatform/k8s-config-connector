//go:build !ignore_autogenerated
// +build !ignore_autogenerated

// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// *** DISCLAIMER ***
// Config Connector's go-client for CRDs is currently in ALPHA, which means
// that future versions of the go-client may include breaking changes.
// Please try it out and give us feedback!

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1beta1

import (
	v1alpha1 "github.com/GoogleCloudPlatform/k8s-config-connector/pkg/clients/generated/apis/k8s/v1alpha1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArtifactRegistryRepository) DeepCopyInto(out *ArtifactRegistryRepository) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArtifactRegistryRepository.
func (in *ArtifactRegistryRepository) DeepCopy() *ArtifactRegistryRepository {
	if in == nil {
		return nil
	}
	out := new(ArtifactRegistryRepository)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ArtifactRegistryRepository) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArtifactRegistryRepositoryList) DeepCopyInto(out *ArtifactRegistryRepositoryList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ArtifactRegistryRepository, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArtifactRegistryRepositoryList.
func (in *ArtifactRegistryRepositoryList) DeepCopy() *ArtifactRegistryRepositoryList {
	if in == nil {
		return nil
	}
	out := new(ArtifactRegistryRepositoryList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ArtifactRegistryRepositoryList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArtifactRegistryRepositorySpec) DeepCopyInto(out *ArtifactRegistryRepositorySpec) {
	*out = *in
	if in.CleanupPolicies != nil {
		in, out := &in.CleanupPolicies, &out.CleanupPolicies
		*out = make([]RepositoryCleanupPolicies, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CleanupPolicyDryRun != nil {
		in, out := &in.CleanupPolicyDryRun, &out.CleanupPolicyDryRun
		*out = new(bool)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DockerConfig != nil {
		in, out := &in.DockerConfig, &out.DockerConfig
		*out = new(RepositoryDockerConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.KmsKeyRef != nil {
		in, out := &in.KmsKeyRef, &out.KmsKeyRef
		*out = new(v1alpha1.ResourceRef)
		**out = **in
	}
	if in.MavenConfig != nil {
		in, out := &in.MavenConfig, &out.MavenConfig
		*out = new(RepositoryMavenConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.RemoteRepositoryConfig != nil {
		in, out := &in.RemoteRepositoryConfig, &out.RemoteRepositoryConfig
		*out = new(RepositoryRemoteRepositoryConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
	if in.VirtualRepositoryConfig != nil {
		in, out := &in.VirtualRepositoryConfig, &out.VirtualRepositoryConfig
		*out = new(RepositoryVirtualRepositoryConfig)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArtifactRegistryRepositorySpec.
func (in *ArtifactRegistryRepositorySpec) DeepCopy() *ArtifactRegistryRepositorySpec {
	if in == nil {
		return nil
	}
	out := new(ArtifactRegistryRepositorySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArtifactRegistryRepositoryStatus) DeepCopyInto(out *ArtifactRegistryRepositoryStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1alpha1.Condition, len(*in))
		copy(*out, *in)
	}
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ObservedGeneration != nil {
		in, out := &in.ObservedGeneration, &out.ObservedGeneration
		*out = new(int64)
		**out = **in
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArtifactRegistryRepositoryStatus.
func (in *ArtifactRegistryRepositoryStatus) DeepCopy() *ArtifactRegistryRepositoryStatus {
	if in == nil {
		return nil
	}
	out := new(ArtifactRegistryRepositoryStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryCleanupPolicies) DeepCopyInto(out *RepositoryCleanupPolicies) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = new(RepositoryCondition)
		(*in).DeepCopyInto(*out)
	}
	if in.MostRecentVersions != nil {
		in, out := &in.MostRecentVersions, &out.MostRecentVersions
		*out = new(RepositoryMostRecentVersions)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryCleanupPolicies.
func (in *RepositoryCleanupPolicies) DeepCopy() *RepositoryCleanupPolicies {
	if in == nil {
		return nil
	}
	out := new(RepositoryCleanupPolicies)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryCondition) DeepCopyInto(out *RepositoryCondition) {
	*out = *in
	if in.NewerThan != nil {
		in, out := &in.NewerThan, &out.NewerThan
		*out = new(string)
		**out = **in
	}
	if in.OlderThan != nil {
		in, out := &in.OlderThan, &out.OlderThan
		*out = new(string)
		**out = **in
	}
	if in.PackageNamePrefixes != nil {
		in, out := &in.PackageNamePrefixes, &out.PackageNamePrefixes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.TagPrefixes != nil {
		in, out := &in.TagPrefixes, &out.TagPrefixes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.TagState != nil {
		in, out := &in.TagState, &out.TagState
		*out = new(string)
		**out = **in
	}
	if in.VersionNamePrefixes != nil {
		in, out := &in.VersionNamePrefixes, &out.VersionNamePrefixes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryCondition.
func (in *RepositoryCondition) DeepCopy() *RepositoryCondition {
	if in == nil {
		return nil
	}
	out := new(RepositoryCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryDockerConfig) DeepCopyInto(out *RepositoryDockerConfig) {
	*out = *in
	if in.ImmutableTags != nil {
		in, out := &in.ImmutableTags, &out.ImmutableTags
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryDockerConfig.
func (in *RepositoryDockerConfig) DeepCopy() *RepositoryDockerConfig {
	if in == nil {
		return nil
	}
	out := new(RepositoryDockerConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryDockerRepository) DeepCopyInto(out *RepositoryDockerRepository) {
	*out = *in
	if in.PublicRepository != nil {
		in, out := &in.PublicRepository, &out.PublicRepository
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryDockerRepository.
func (in *RepositoryDockerRepository) DeepCopy() *RepositoryDockerRepository {
	if in == nil {
		return nil
	}
	out := new(RepositoryDockerRepository)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryMavenConfig) DeepCopyInto(out *RepositoryMavenConfig) {
	*out = *in
	if in.AllowSnapshotOverwrites != nil {
		in, out := &in.AllowSnapshotOverwrites, &out.AllowSnapshotOverwrites
		*out = new(bool)
		**out = **in
	}
	if in.VersionPolicy != nil {
		in, out := &in.VersionPolicy, &out.VersionPolicy
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryMavenConfig.
func (in *RepositoryMavenConfig) DeepCopy() *RepositoryMavenConfig {
	if in == nil {
		return nil
	}
	out := new(RepositoryMavenConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryMavenRepository) DeepCopyInto(out *RepositoryMavenRepository) {
	*out = *in
	if in.PublicRepository != nil {
		in, out := &in.PublicRepository, &out.PublicRepository
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryMavenRepository.
func (in *RepositoryMavenRepository) DeepCopy() *RepositoryMavenRepository {
	if in == nil {
		return nil
	}
	out := new(RepositoryMavenRepository)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryMostRecentVersions) DeepCopyInto(out *RepositoryMostRecentVersions) {
	*out = *in
	if in.KeepCount != nil {
		in, out := &in.KeepCount, &out.KeepCount
		*out = new(int64)
		**out = **in
	}
	if in.PackageNamePrefixes != nil {
		in, out := &in.PackageNamePrefixes, &out.PackageNamePrefixes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryMostRecentVersions.
func (in *RepositoryMostRecentVersions) DeepCopy() *RepositoryMostRecentVersions {
	if in == nil {
		return nil
	}
	out := new(RepositoryMostRecentVersions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryNpmRepository) DeepCopyInto(out *RepositoryNpmRepository) {
	*out = *in
	if in.PublicRepository != nil {
		in, out := &in.PublicRepository, &out.PublicRepository
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryNpmRepository.
func (in *RepositoryNpmRepository) DeepCopy() *RepositoryNpmRepository {
	if in == nil {
		return nil
	}
	out := new(RepositoryNpmRepository)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryPythonRepository) DeepCopyInto(out *RepositoryPythonRepository) {
	*out = *in
	if in.PublicRepository != nil {
		in, out := &in.PublicRepository, &out.PublicRepository
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryPythonRepository.
func (in *RepositoryPythonRepository) DeepCopy() *RepositoryPythonRepository {
	if in == nil {
		return nil
	}
	out := new(RepositoryPythonRepository)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryRemoteRepositoryConfig) DeepCopyInto(out *RepositoryRemoteRepositoryConfig) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DockerRepository != nil {
		in, out := &in.DockerRepository, &out.DockerRepository
		*out = new(RepositoryDockerRepository)
		(*in).DeepCopyInto(*out)
	}
	if in.MavenRepository != nil {
		in, out := &in.MavenRepository, &out.MavenRepository
		*out = new(RepositoryMavenRepository)
		(*in).DeepCopyInto(*out)
	}
	if in.NpmRepository != nil {
		in, out := &in.NpmRepository, &out.NpmRepository
		*out = new(RepositoryNpmRepository)
		(*in).DeepCopyInto(*out)
	}
	if in.PythonRepository != nil {
		in, out := &in.PythonRepository, &out.PythonRepository
		*out = new(RepositoryPythonRepository)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryRemoteRepositoryConfig.
func (in *RepositoryRemoteRepositoryConfig) DeepCopy() *RepositoryRemoteRepositoryConfig {
	if in == nil {
		return nil
	}
	out := new(RepositoryRemoteRepositoryConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryUpstreamPolicies) DeepCopyInto(out *RepositoryUpstreamPolicies) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(int64)
		**out = **in
	}
	if in.RepositoryRef != nil {
		in, out := &in.RepositoryRef, &out.RepositoryRef
		*out = new(v1alpha1.ResourceRef)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryUpstreamPolicies.
func (in *RepositoryUpstreamPolicies) DeepCopy() *RepositoryUpstreamPolicies {
	if in == nil {
		return nil
	}
	out := new(RepositoryUpstreamPolicies)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryVirtualRepositoryConfig) DeepCopyInto(out *RepositoryVirtualRepositoryConfig) {
	*out = *in
	if in.UpstreamPolicies != nil {
		in, out := &in.UpstreamPolicies, &out.UpstreamPolicies
		*out = make([]RepositoryUpstreamPolicies, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryVirtualRepositoryConfig.
func (in *RepositoryVirtualRepositoryConfig) DeepCopy() *RepositoryVirtualRepositoryConfig {
	if in == nil {
		return nil
	}
	out := new(RepositoryVirtualRepositoryConfig)
	in.DeepCopyInto(out)
	return out
}
