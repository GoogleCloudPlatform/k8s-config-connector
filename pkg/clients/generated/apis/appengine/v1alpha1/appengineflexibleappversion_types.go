// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// ----------------------------------------------------------------------------
//
//     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
//
// ----------------------------------------------------------------------------
//
//     This file is automatically generated by Config Connector and manual
//     changes will be clobbered when the file is regenerated.
//
// ----------------------------------------------------------------------------

// *** DISCLAIMER ***
// Config Connector's go-client for CRDs is currently in ALPHA, which means
// that future versions of the go-client may include breaking changes.
// Please try it out and give us feedback!

package v1alpha1

import (
	"github.com/GoogleCloudPlatform/k8s-config-connector/pkg/clients/generated/apis/k8s/v1alpha1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

type FlexibleappversionApiConfig struct {
	/* Action to take when users access resources that require authentication. Default value: "AUTH_FAIL_ACTION_REDIRECT" Possible values: ["AUTH_FAIL_ACTION_REDIRECT", "AUTH_FAIL_ACTION_UNAUTHORIZED"]. */
	// +optional
	AuthFailAction *string `json:"authFailAction,omitempty"`

	/* Level of login required to access this resource. Default value: "LOGIN_OPTIONAL" Possible values: ["LOGIN_OPTIONAL", "LOGIN_ADMIN", "LOGIN_REQUIRED"]. */
	// +optional
	Login *string `json:"login,omitempty"`

	/* Path to the script from the application root directory. */
	Script string `json:"script"`

	/* Security (HTTPS) enforcement for this URL. Possible values: ["SECURE_DEFAULT", "SECURE_NEVER", "SECURE_OPTIONAL", "SECURE_ALWAYS"]. */
	// +optional
	SecurityLevel *string `json:"securityLevel,omitempty"`

	/* URL to serve the endpoint at. */
	// +optional
	Url *string `json:"url,omitempty"`
}

type FlexibleappversionAutomaticScaling struct {
	/* The time period that the Autoscaler should wait before it starts collecting information from a new instance.
	This prevents the autoscaler from collecting information when the instance is initializing,
	during which the collected usage would not be reliable. Default: 120s. */
	// +optional
	CoolDownPeriod *string `json:"coolDownPeriod,omitempty"`

	/* Target scaling by CPU usage. */
	CpuUtilization FlexibleappversionCpuUtilization `json:"cpuUtilization"`

	/* Target scaling by disk usage. */
	// +optional
	DiskUtilization *FlexibleappversionDiskUtilization `json:"diskUtilization,omitempty"`

	/* Number of concurrent requests an automatic scaling instance can accept before the scheduler spawns a new instance.

	Defaults to a runtime-specific value. */
	// +optional
	MaxConcurrentRequests *int64 `json:"maxConcurrentRequests,omitempty"`

	/* Maximum number of idle instances that should be maintained for this version. */
	// +optional
	MaxIdleInstances *int64 `json:"maxIdleInstances,omitempty"`

	/* Maximum amount of time that a request should wait in the pending queue before starting a new instance to handle it. */
	// +optional
	MaxPendingLatency *string `json:"maxPendingLatency,omitempty"`

	/* Maximum number of instances that should be started to handle requests for this version. Default: 20. */
	// +optional
	MaxTotalInstances *int64 `json:"maxTotalInstances,omitempty"`

	/* Minimum number of idle instances that should be maintained for this version. Only applicable for the default version of a service. */
	// +optional
	MinIdleInstances *int64 `json:"minIdleInstances,omitempty"`

	/* Minimum amount of time a request should wait in the pending queue before starting a new instance to handle it. */
	// +optional
	MinPendingLatency *string `json:"minPendingLatency,omitempty"`

	/* Minimum number of running instances that should be maintained for this version. Default: 2. */
	// +optional
	MinTotalInstances *int64 `json:"minTotalInstances,omitempty"`

	/* Target scaling by network usage. */
	// +optional
	NetworkUtilization *FlexibleappversionNetworkUtilization `json:"networkUtilization,omitempty"`

	/* Target scaling by request utilization. */
	// +optional
	RequestUtilization *FlexibleappversionRequestUtilization `json:"requestUtilization,omitempty"`
}

type FlexibleappversionCloudBuildOptions struct {
	/* Path to the yaml file used in deployment, used to determine runtime configuration details. */
	AppYamlPath string `json:"appYamlPath"`

	/* The Cloud Build timeout used as part of any dependent builds performed by version creation. Defaults to 10 minutes.

	A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s". */
	// +optional
	CloudBuildTimeout *string `json:"cloudBuildTimeout,omitempty"`
}

type FlexibleappversionContainer struct {
	/* URI to the hosted container image in Google Container Registry. The URI must be fully qualified and include a tag or digest.
	Examples: "gcr.io/my-project/image:tag" or "gcr.io/my-project/image@digest". */
	Image string `json:"image"`
}

type FlexibleappversionCpuUtilization struct {
	/* Period of time over which CPU utilization is calculated. */
	// +optional
	AggregationWindowLength *string `json:"aggregationWindowLength,omitempty"`

	/* Target CPU utilization ratio to maintain when scaling. Must be between 0 and 1. */
	TargetUtilization float64 `json:"targetUtilization"`
}

type FlexibleappversionDeployment struct {
	/* Options for the build operations performed as a part of the version deployment. Only applicable when creating a version using source code directly. */
	// +optional
	CloudBuildOptions *FlexibleappversionCloudBuildOptions `json:"cloudBuildOptions,omitempty"`

	/* The Docker image for the container that runs the version. */
	// +optional
	Container *FlexibleappversionContainer `json:"container,omitempty"`

	/* Manifest of the files stored in Google Cloud Storage that are included as part of this version.
	All files must be readable using the credentials supplied with this call. */
	// +optional
	Files []FlexibleappversionFiles `json:"files,omitempty"`

	/* Zip File. */
	// +optional
	Zip *FlexibleappversionZip `json:"zip,omitempty"`
}

type FlexibleappversionDiskUtilization struct {
	/* Target bytes read per second. */
	// +optional
	TargetReadBytesPerSecond *int64 `json:"targetReadBytesPerSecond,omitempty"`

	/* Target ops read per seconds. */
	// +optional
	TargetReadOpsPerSecond *int64 `json:"targetReadOpsPerSecond,omitempty"`

	/* Target bytes written per second. */
	// +optional
	TargetWriteBytesPerSecond *int64 `json:"targetWriteBytesPerSecond,omitempty"`

	/* Target ops written per second. */
	// +optional
	TargetWriteOpsPerSecond *int64 `json:"targetWriteOpsPerSecond,omitempty"`
}

type FlexibleappversionEndpointsApiService struct {
	/* Endpoints service configuration ID as specified by the Service Management API. For example "2016-09-19r1".

	By default, the rollout strategy for Endpoints is "FIXED". This means that Endpoints starts up with a particular configuration ID.
	When a new configuration is rolled out, Endpoints must be given the new configuration ID. The configId field is used to give the configuration ID
	and is required in this case.

	Endpoints also has a rollout strategy called "MANAGED". When using this, Endpoints fetches the latest configuration and does not need
	the configuration ID. In this case, configId must be omitted. */
	// +optional
	ConfigId *string `json:"configId,omitempty"`

	/* Enable or disable trace sampling. By default, this is set to false for enabled. */
	// +optional
	DisableTraceSampling *bool `json:"disableTraceSampling,omitempty"`

	/* Endpoints service name which is the name of the "service" resource in the Service Management API.
	For example "myapi.endpoints.myproject.cloud.goog". */
	Name string `json:"name"`

	/* Endpoints rollout strategy. If FIXED, configId must be specified. If MANAGED, configId must be omitted. Default value: "FIXED" Possible values: ["FIXED", "MANAGED"]. */
	// +optional
	RolloutStrategy *string `json:"rolloutStrategy,omitempty"`
}

type FlexibleappversionEntrypoint struct {
	/* The format should be a shell command that can be fed to bash -c. */
	Shell string `json:"shell"`
}

type FlexibleappversionFiles struct {
	Name string `json:"name"`

	/* SHA1 checksum of the file. */
	// +optional
	Sha1Sum *string `json:"sha1Sum,omitempty"`

	/* Source URL. */
	SourceUrl string `json:"sourceUrl"`
}

type FlexibleappversionHandlers struct {
	/* Actions to take when the user is not logged in. Possible values: ["AUTH_FAIL_ACTION_REDIRECT", "AUTH_FAIL_ACTION_UNAUTHORIZED"]. */
	// +optional
	AuthFailAction *string `json:"authFailAction,omitempty"`

	/* Methods to restrict access to a URL based on login status. Possible values: ["LOGIN_OPTIONAL", "LOGIN_ADMIN", "LOGIN_REQUIRED"]. */
	// +optional
	Login *string `json:"login,omitempty"`

	/* 30x code to use when performing redirects for the secure field. Possible values: ["REDIRECT_HTTP_RESPONSE_CODE_301", "REDIRECT_HTTP_RESPONSE_CODE_302", "REDIRECT_HTTP_RESPONSE_CODE_303", "REDIRECT_HTTP_RESPONSE_CODE_307"]. */
	// +optional
	RedirectHttpResponseCode *string `json:"redirectHttpResponseCode,omitempty"`

	/* Executes a script to handle the requests that match this URL pattern.
	Only the auto value is supported for Node.js in the App Engine standard environment, for example "script:" "auto". */
	// +optional
	Script *FlexibleappversionScript `json:"script,omitempty"`

	/* Security (HTTPS) enforcement for this URL. Possible values: ["SECURE_DEFAULT", "SECURE_NEVER", "SECURE_OPTIONAL", "SECURE_ALWAYS"]. */
	// +optional
	SecurityLevel *string `json:"securityLevel,omitempty"`

	/* Files served directly to the user for a given URL, such as images, CSS stylesheets, or JavaScript source files.
	Static file handlers describe which files in the application directory are static files, and which URLs serve them. */
	// +optional
	StaticFiles *FlexibleappversionStaticFiles `json:"staticFiles,omitempty"`

	/* URL prefix. Uses regular expression syntax, which means regexp special characters must be escaped, but should not contain groupings.
	All URLs that begin with this prefix are handled by this handler, using the portion of the URL after the prefix as part of the file path. */
	// +optional
	UrlRegex *string `json:"urlRegex,omitempty"`
}

type FlexibleappversionLivenessCheck struct {
	/* Interval between health checks. */
	// +optional
	CheckInterval *string `json:"checkInterval,omitempty"`

	/* Number of consecutive failed checks required before considering the VM unhealthy. Default: 4. */
	// +optional
	FailureThreshold *float64 `json:"failureThreshold,omitempty"`

	/* Host header to send when performing a HTTP Readiness check. Example: "myapp.appspot.com". */
	// +optional
	Host *string `json:"host,omitempty"`

	/* The initial delay before starting to execute the checks. Default: "300s". */
	// +optional
	InitialDelay *string `json:"initialDelay,omitempty"`

	/* The request path. */
	Path string `json:"path"`

	/* Number of consecutive successful checks required before considering the VM healthy. Default: 2. */
	// +optional
	SuccessThreshold *float64 `json:"successThreshold,omitempty"`

	/* Time before the check is considered failed. Default: "4s". */
	// +optional
	Timeout *string `json:"timeout,omitempty"`
}

type FlexibleappversionManualScaling struct {
	/* Number of instances to assign to the service at the start.

	**Note:** When managing the number of instances at runtime through the App Engine Admin API or the (now deprecated) Python 2
	Modules API set_num_instances() you must use 'lifecycle.ignore_changes = ["manual_scaling"[0].instances]' to prevent drift detection. */
	Instances int64 `json:"instances"`
}

type FlexibleappversionNetwork struct {
	/* List of ports, or port pairs, to forward from the virtual machine to the application container. */
	// +optional
	ForwardedPorts []string `json:"forwardedPorts,omitempty"`

	/* Tag to apply to the instance during creation. */
	// +optional
	InstanceTag *string `json:"instanceTag,omitempty"`

	/* Google Compute Engine network where the virtual machines are created. Specify the short name, not the resource path. */
	Name string `json:"name"`

	/* Enable session affinity. */
	// +optional
	SessionAffinity *bool `json:"sessionAffinity,omitempty"`

	/* Google Cloud Platform sub-network where the virtual machines are created. Specify the short name, not the resource path.

	If the network that the instance is being created in is a Legacy network, then the IP address is allocated from the IPv4Range.
	If the network that the instance is being created in is an auto Subnet Mode Network, then only network name should be specified (not the subnetworkName) and the IP address is created from the IPCidrRange of the subnetwork that exists in that zone for that network.
	If the network that the instance is being created in is a custom Subnet Mode Network, then the subnetworkName must be specified and the IP address is created from the IPCidrRange of the subnetwork.
	If specified, the subnetwork must exist in the same region as the App Engine flexible environment application. */
	// +optional
	Subnetwork *string `json:"subnetwork,omitempty"`
}

type FlexibleappversionNetworkUtilization struct {
	/* Target bytes received per second. */
	// +optional
	TargetReceivedBytesPerSecond *int64 `json:"targetReceivedBytesPerSecond,omitempty"`

	/* Target packets received per second. */
	// +optional
	TargetReceivedPacketsPerSecond *int64 `json:"targetReceivedPacketsPerSecond,omitempty"`

	/* Target bytes sent per second. */
	// +optional
	TargetSentBytesPerSecond *int64 `json:"targetSentBytesPerSecond,omitempty"`

	/* Target packets sent per second. */
	// +optional
	TargetSentPacketsPerSecond *int64 `json:"targetSentPacketsPerSecond,omitempty"`
}

type FlexibleappversionReadinessCheck struct {
	/* A maximum time limit on application initialization, measured from moment the application successfully
	replies to a healthcheck until it is ready to serve traffic. Default: "300s". */
	// +optional
	AppStartTimeout *string `json:"appStartTimeout,omitempty"`

	/* Interval between health checks.  Default: "5s". */
	// +optional
	CheckInterval *string `json:"checkInterval,omitempty"`

	/* Number of consecutive failed checks required before removing traffic. Default: 2. */
	// +optional
	FailureThreshold *float64 `json:"failureThreshold,omitempty"`

	/* Host header to send when performing a HTTP Readiness check. Example: "myapp.appspot.com". */
	// +optional
	Host *string `json:"host,omitempty"`

	/* The request path. */
	Path string `json:"path"`

	/* Number of consecutive successful checks required before receiving traffic. Default: 2. */
	// +optional
	SuccessThreshold *float64 `json:"successThreshold,omitempty"`

	/* Time before the check is considered failed. Default: "4s". */
	// +optional
	Timeout *string `json:"timeout,omitempty"`
}

type FlexibleappversionRequestUtilization struct {
	/* Target number of concurrent requests. */
	// +optional
	TargetConcurrentRequests *float64 `json:"targetConcurrentRequests,omitempty"`

	/* Target requests per second. */
	// +optional
	TargetRequestCountPerSecond *string `json:"targetRequestCountPerSecond,omitempty"`
}

type FlexibleappversionResources struct {
	/* Number of CPU cores needed. */
	// +optional
	Cpu *int64 `json:"cpu,omitempty"`

	/* Disk size (GB) needed. */
	// +optional
	DiskGb *int64 `json:"diskGb,omitempty"`

	/* Memory (GB) needed. */
	// +optional
	MemoryGb *float64 `json:"memoryGb,omitempty"`

	/* List of ports, or port pairs, to forward from the virtual machine to the application container. */
	// +optional
	Volumes []FlexibleappversionVolumes `json:"volumes,omitempty"`
}

type FlexibleappversionScript struct {
	/* Path to the script from the application root directory. */
	ScriptPath string `json:"scriptPath"`
}

type FlexibleappversionStaticFiles struct {
	/* Whether files should also be uploaded as code data. By default, files declared in static file handlers are
	uploaded as static data and are only served to end users; they cannot be read by the application. If enabled,
	uploads are charged against both your code and static data storage resource quotas. */
	// +optional
	ApplicationReadable *bool `json:"applicationReadable,omitempty"`

	/* Time a static file served by this handler should be cached by web proxies and browsers.
	A duration in seconds with up to nine fractional digits, terminated by 's'. Example "3.5s".
	Default is '0s'. */
	// +optional
	Expiration *string `json:"expiration,omitempty"`

	/* HTTP headers to use for all responses from these URLs.
	An object containing a list of "key:value" value pairs.". */
	// +optional
	HttpHeaders map[string]string `json:"httpHeaders,omitempty"`

	/* MIME type used to serve all files served by this handler.
	Defaults to file-specific MIME types, which are derived from each file's filename extension. */
	// +optional
	MimeType *string `json:"mimeType,omitempty"`

	/* Path to the static files matched by the URL pattern, from the application root directory.
	The path can refer to text matched in groupings in the URL pattern. */
	// +optional
	Path *string `json:"path,omitempty"`

	/* Whether this handler should match the request if the file referenced by the handler does not exist. */
	// +optional
	RequireMatchingFile *bool `json:"requireMatchingFile,omitempty"`

	/* Regular expression that matches the file paths for all files that should be referenced by this handler. */
	// +optional
	UploadPathRegex *string `json:"uploadPathRegex,omitempty"`
}

type FlexibleappversionVolumes struct {
	/* Unique name for the volume. */
	Name string `json:"name"`

	/* Volume size in gigabytes. */
	SizeGb int64 `json:"sizeGb"`

	/* Underlying volume type, e.g. 'tmpfs'. */
	VolumeType string `json:"volumeType"`
}

type FlexibleappversionVpcAccessConnector struct {
	/* Full Serverless VPC Access Connector name e.g. /projects/my-project/locations/us-central1/connectors/c1. */
	Name string `json:"name"`
}

type FlexibleappversionZip struct {
	/* files count. */
	// +optional
	FilesCount *int64 `json:"filesCount,omitempty"`

	/* Source URL. */
	SourceUrl string `json:"sourceUrl"`
}

type AppEngineFlexibleAppVersionSpec struct {
	/* Serving configuration for Google Cloud Endpoints. */
	// +optional
	ApiConfig *FlexibleappversionApiConfig `json:"apiConfig,omitempty"`

	/* Automatic scaling is based on request rate, response latencies, and other application metrics. */
	// +optional
	AutomaticScaling *FlexibleappversionAutomaticScaling `json:"automaticScaling,omitempty"`

	/* Metadata settings that are supplied to this version to enable beta runtime features. */
	// +optional
	BetaSettings map[string]string `json:"betaSettings,omitempty"`

	/* Duration that static files should be cached by web proxies and browsers.
	Only applicable if the corresponding StaticFilesHandler does not specify its own expiration time. */
	// +optional
	DefaultExpiration *string `json:"defaultExpiration,omitempty"`

	/* If set to 'true', the service will be deleted if it is the last version. */
	// +optional
	DeleteServiceOnDestroy *bool `json:"deleteServiceOnDestroy,omitempty"`

	/* Code and application artifacts that make up this version. */
	// +optional
	Deployment *FlexibleappversionDeployment `json:"deployment,omitempty"`

	/* Code and application artifacts that make up this version. */
	// +optional
	EndpointsApiService *FlexibleappversionEndpointsApiService `json:"endpointsApiService,omitempty"`

	/* The entrypoint for the application. */
	// +optional
	Entrypoint *FlexibleappversionEntrypoint `json:"entrypoint,omitempty"`

	// +optional
	EnvVariables map[string]string `json:"envVariables,omitempty"`

	/* An ordered list of URL-matching patterns that should be applied to incoming requests.
	The first matching URL handles the request and other request handlers are not attempted. */
	// +optional
	Handlers []FlexibleappversionHandlers `json:"handlers,omitempty"`

	/* A list of the types of messages that this application is able to receive. Possible values: ["INBOUND_SERVICE_MAIL", "INBOUND_SERVICE_MAIL_BOUNCE", "INBOUND_SERVICE_XMPP_ERROR", "INBOUND_SERVICE_XMPP_MESSAGE", "INBOUND_SERVICE_XMPP_SUBSCRIBE", "INBOUND_SERVICE_XMPP_PRESENCE", "INBOUND_SERVICE_CHANNEL_PRESENCE", "INBOUND_SERVICE_WARMUP"]. */
	// +optional
	InboundServices []string `json:"inboundServices,omitempty"`

	/* Instance class that is used to run this version. Valid values are
	AutomaticScaling: F1, F2, F4, F4_1G
	ManualScaling: B1, B2, B4, B8, B4_1G
	Defaults to F1 for AutomaticScaling and B1 for ManualScaling. */
	// +optional
	InstanceClass *string `json:"instanceClass,omitempty"`

	/* Health checking configuration for VM instances. Unhealthy instances are killed and replaced with new instances. */
	LivenessCheck FlexibleappversionLivenessCheck `json:"livenessCheck"`

	/* A service with manual scaling runs continuously, allowing you to perform complex initialization and rely on the state of its memory over time. */
	// +optional
	ManualScaling *FlexibleappversionManualScaling `json:"manualScaling,omitempty"`

	/* Extra network settings. */
	// +optional
	Network *FlexibleappversionNetwork `json:"network,omitempty"`

	/* Files that match this pattern will not be built into this version. Only applicable for Go runtimes. */
	// +optional
	NobuildFilesRegex *string `json:"nobuildFilesRegex,omitempty"`

	/* If set to 'true', the application version will not be deleted. */
	// +optional
	NoopOnDestroy *bool `json:"noopOnDestroy,omitempty"`

	/* Immutable. */
	// +optional
	Project *string `json:"project,omitempty"`

	/* Configures readiness health checking for instances. Unhealthy instances are not put into the backend traffic rotation. */
	ReadinessCheck FlexibleappversionReadinessCheck `json:"readinessCheck"`

	/* Immutable. Optional. The versionId of the resource. Used for creation and acquisition. When unset, the value of `metadata.name` is used as the default. */
	// +optional
	ResourceID *string `json:"resourceID,omitempty"`

	/* Machine resources for a version. */
	// +optional
	Resources *FlexibleappversionResources `json:"resources,omitempty"`

	/* Desired runtime. Example python27. */
	Runtime string `json:"runtime"`

	/* The version of the API in the given runtime environment.
	Please see the app.yaml reference for valid values at 'https://cloud.google.com/appengine/docs/standard/<language>/config/appref'\
	Substitute '<language>' with 'python', 'java', 'php', 'ruby', 'go' or 'nodejs'. */
	// +optional
	RuntimeApiVersion *string `json:"runtimeApiVersion,omitempty"`

	/* The channel of the runtime to use. Only available for some runtimes. */
	// +optional
	RuntimeChannel *string `json:"runtimeChannel,omitempty"`

	/* The path or name of the app's main executable. */
	// +optional
	RuntimeMainExecutablePath *string `json:"runtimeMainExecutablePath,omitempty"`

	/* The identity that the deployed version will run as. Admin API will use the App Engine Appspot service account as
	default if this field is neither provided in app.yaml file nor through CLI flag. */
	// +optional
	ServiceAccount *string `json:"serviceAccount,omitempty"`

	ServiceRef v1alpha1.ResourceRef `json:"serviceRef"`

	/* Current serving status of this version. Only the versions with a SERVING status create instances and can be billed. Default value: "SERVING" Possible values: ["SERVING", "STOPPED"]. */
	// +optional
	ServingStatus *string `json:"servingStatus,omitempty"`

	/* Enables VPC connectivity for standard apps. */
	// +optional
	VpcAccessConnector *FlexibleappversionVpcAccessConnector `json:"vpcAccessConnector,omitempty"`
}

type AppEngineFlexibleAppVersionStatus struct {
	/* Conditions represent the latest available observations of the
	   AppEngineFlexibleAppVersion's current state. */
	Conditions []v1alpha1.Condition `json:"conditions,omitempty"`
	/* Full path to the Version resource in the API. Example, "v1". */
	// +optional
	Name *string `json:"name,omitempty"`

	/* ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource. */
	// +optional
	ObservedGeneration *int64 `json:"observedGeneration,omitempty"`
}

// +genclient
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:resource:categories=gcp,shortName=gcpappengineflexibleappversion;gcpappengineflexibleappversions
// +kubebuilder:subresource:status
// +kubebuilder:metadata:labels="cnrm.cloud.google.com/managed-by-kcc=true";"cnrm.cloud.google.com/stability-level=alpha";"cnrm.cloud.google.com/system=true";"cnrm.cloud.google.com/tf2crd=true"
// +kubebuilder:printcolumn:name="Age",JSONPath=".metadata.creationTimestamp",type="date"
// +kubebuilder:printcolumn:name="Ready",JSONPath=".status.conditions[?(@.type=='Ready')].status",type="string",description="When 'True', the most recent reconcile of the resource succeeded"
// +kubebuilder:printcolumn:name="Status",JSONPath=".status.conditions[?(@.type=='Ready')].reason",type="string",description="The reason for the value in 'Ready'"
// +kubebuilder:printcolumn:name="Status Age",JSONPath=".status.conditions[?(@.type=='Ready')].lastTransitionTime",type="date",description="The last transition time for the value in 'Status'"

// AppEngineFlexibleAppVersion is the Schema for the appengine API
// +k8s:openapi-gen=true
type AppEngineFlexibleAppVersion struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`

	Spec   AppEngineFlexibleAppVersionSpec   `json:"spec,omitempty"`
	Status AppEngineFlexibleAppVersionStatus `json:"status,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// AppEngineFlexibleAppVersionList contains a list of AppEngineFlexibleAppVersion
type AppEngineFlexibleAppVersionList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []AppEngineFlexibleAppVersion `json:"items"`
}

func init() {
	SchemeBuilder.Register(&AppEngineFlexibleAppVersion{}, &AppEngineFlexibleAppVersionList{})
}
