# Copyright 2024 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeNetwork
metadata:
  name: computenetwork-${uniqueId}
spec:
  routingMode: GLOBAL
  autoCreateSubnetworks: false
---
apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeSubnetwork
metadata:
  name: computesubnetwork-${uniqueId}
spec:
  ipCidrRange: 10.0.0.0/24
  region: us-west4
  networkRef:
    name: computenetwork-${uniqueId}
---
apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeAddress
metadata:
  name: computeaddress-${uniqueId}
spec:
  addressType: INTERNAL
  location: global
  purpose: VPC_PEERING
  address: 192.168.0.0
  prefixLength: 24
  networkRef:
    name: computenetwork-${uniqueId}
---
apiVersion: servicenetworking.cnrm.cloud.google.com/v1beta1
kind: ServiceNetworkingConnection
metadata:
  name: servicenetworkingconnection-${uniqueId}
spec:
  networkRef:
    name: computenetwork-${uniqueId}
  reservedPeeringRanges:
    - name: computeaddress-${uniqueId}
  service: "servicenetworking.googleapis.com"
---
apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeNetwork
metadata:
  name: computenetwork2-${uniqueId}
spec:
  routingMode: GLOBAL
  autoCreateSubnetworks: false
---
apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeSubnetwork
metadata:
  name: computesubnetwork2-${uniqueId}
spec:
  ipCidrRange: 10.0.1.0/24
  region: us-west4
  networkRef:
    name: computenetwork2-${uniqueId}
---
apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeAddress
metadata:
  name: computeaddress2-${uniqueId}
spec:
  addressType: INTERNAL
  location: global
  purpose: VPC_PEERING
  address: 192.168.1.0
  prefixLength: 24
  networkRef:
    name: computenetwork2-${uniqueId}
---
apiVersion: servicenetworking.cnrm.cloud.google.com/v1beta1
kind: ServiceNetworkingConnection
metadata:
  name: servicenetworkingconnection2-${uniqueId}
spec:
  networkRef:
    name: computenetwork2-${uniqueId}
  reservedPeeringRanges:
    - name: computeaddress2-${uniqueId}
  service: "servicenetworking.googleapis.com"