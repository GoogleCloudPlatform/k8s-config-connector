# Copyright 2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
apiVersion: bigquery.cnrm.cloud.google.com/v1beta1
kind: BigQueryTable
metadata:
  name: bigquerytable-${uniqueId}
spec:
  resourceID: bigquerytable-${uniqueId}
  datasetRef:
    name: bigquerydataset-${uniqueId}
  friendlyName: BigQuery Table
  description: A BigQuery table.
  # Error: This table is an external, hive-partitioned table.  None of TimePartitioning, RangePartitioning or Clustering may be supplied for external tables; they only apply to managed tables.
  #  timePartitioning:
  #    type: DAY
  #    expirationMs: 2592000000 # 30 days
  #    field: dateField
  #  rangePartitioning:
  #    field: intField
  #    range:
  #      start: 0
  #      end: 1000
  #      interval: 100
  #  clustering:
  #    - stringField1
  #    - stringField2
# Schema is not used when externalDataConfiguration is set but somehow the API
# still takes the value and updates it.
#  schema: >
#    [
#      {"name": "dateField", "type": "DATE", "mode": "REQUIRED"},
#      {"name": "intField", "type": "INTEGER", "mode": "REQUIRED"},
#      {"name": "stringField1", "type": "STRING", "mode": "NULLABLE"},
#      {"name": "stringField2", "type": "STRING", "mode": "NULLABLE"}
#    ]
  expirationTime: 2064441632000 # Some time in 2035
  # Error: require_partition_filter has been set for a hive-partitioned table without using the HivePartitioningOptions.
  #  requirePartitionFilter: true
  # Error: Cloud KMS based encryption is not supported for views or BigQuery Omni external tables.
  # Error: Access Denied: BigQuery BigQuery: Cloud KMS Error: Permission 'cloudkms.cryptoKeyVersions.useToEncrypt' denied on resource 'projects/[projectID]/locations/us-central1/keyRings/kmskeyring-pyvirqtmyhr7p3y/cryptoKeys/kmscryptokey-1-pyvirqtmyhr7p3y' (or it may not exist).
  #  encryptionConfiguration:
  #    kmsKeyRef:
  #      name: kmscryptokey-${uniqueId}
  externalDataConfiguration:
    autodetect: true
    sourceUris:
      - gs://cloud-samples-data/bigquery/us-states/us-states-by-date.csv
    sourceFormat: CSV
    compression: NONE
    # Error while reading table: bigquerytable-6j7xj3t3p4fd7oq, error message: Decompression failed: Invalid gzip file: unrecognized format.
    #    compression: GZIP
    ignoreUnknownValues: true
    maxBadRecords: 10
    csvOptions:
      quote: '"'
      allowJaggedRows: true
      allowQuotedNewlines: true
      encoding: UTF-8
      fieldDelimiter: ","
      skipLeadingRows: 1
    # Table bigquerytable-e4qdhzyk7vn37qy requested hive partitioning, but no partition keys were detected.  This is a sign of misconfiguration.
    #    hivePartitioningOptions:
    #      mode: AUTO
    #      sourceUriPrefix: gs://cloud-samples-data/bigquery/us-states/
    #      requirePartitionFilter: true
    # Error: GoogleSheetsOptions can only be specified if storage format is GOOGLE_SHEETS.
    #    googleSheetsOptions:
    #      skipLeadingRows: 1
    #      range: "Sheet1!A1:B20"
# The avroOptions and parquetOptions will not be used when the source file is csv. But the API doesn't return any errors.
#    avroOptions:
#      useAvroLogicalTypes: true
#    parquetOptions:
#      enumAsString: true
#      enableListInference: true
    # Error during update with no change: Update call failed: cannot make changes to immutable field(s):
    # [Field Name: externalDataConfiguration.0.Schema,
    # Got: [{\"mode\":\"REQUIRED\",\"name\":\"dateField\",\"type\":\"DATE\"},{\"mode\":\"REQUIRED\",\"name\":\"intField\",\"type\":\"INTEGER\"},{\"mode\":\"NULLABLE\",\"name\":\"stringField1\",\"type\":\"STRING\"},{\"mode\":\"NULLABLE\",\"name\":\"stringField2\",\"type\":\"STRING\"}],
    # Wanted: [\n  {\"name\": \"dateField\", \"type\": \"DATE\", \"mode\": \"REQUIRED\"},\n  {\"name\": \"intField\", \"type\": \"INTEGER\", \"mode\": \"REQUIRED\"},\n  {\"name\": \"stringField1\", \"type\": \"STRING\", \"mode\": \"NULLABLE\"},\n  {\"name\": \"stringField2\", \"type\": \"STRING\", \"mode\": \"NULLABLE\"}\n]\n];
    # please refer to our troubleshooting doc: https://cloud.google.com/config-connector/docs/troubleshooting"}
    #    schema: >
    #      [
    #        {"name": "dateField", "type": "DATE", "mode": "REQUIRED"},
    #        {"name": "intField", "type": "INTEGER", "mode": "REQUIRED"},
    #        {"name": "stringField1", "type": "STRING", "mode": "NULLABLE"},
    #        {"name": "stringField2", "type": "STRING", "mode": "NULLABLE"}
    #      ]
    # Error: metadataCacheMode provided for non BigLake external table.
    #    metadataCacheMode: AUTOMATIC
    # Error: Request invalidated by conflicting fields. Fields 'source_format' and 'object_metadata' can not be used at the same time.
    #    objectMetadata: OBJECT_METADATA_UNSPECIFIED
    # Field not returned by API so it'll always trigger a diff in nochange test.
    #    fileSetSpecType: FILE_SET_SPEC_TYPE_FILE_SYSTEM_MATCH
#  view:
#    query: SELECT * FROM `my-project.my_dataset.my_other_table`
#    useLegacySql: false
# Error: Schema field shouldn't be used as input with a materialized view
#  materializedView:
#    query: SELECT COUNT(*) FROM my-project.my_dataset.my_source_table
#    enableRefresh: true
#    refreshIntervalMs: 1800000 # 30 minutes
