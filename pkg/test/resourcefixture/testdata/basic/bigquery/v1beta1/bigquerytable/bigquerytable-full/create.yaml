# Copyright 2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: bigquery.cnrm.cloud.google.com/v1beta1
kind: BigQueryTable
metadata:
  name: bigquerytable-${uniqueId}
  labels:
    label-key: "label-value"
spec:
  # Using resourceID instead of metadata.name for the table ID
  resourceID: bigquerytable-full-${uniqueId}
  friendlyName: "BigQuery Table Full Example"
  description: "A full example of a BigQuery table"
  datasetRef:
    name: bigquerydataset-${uniqueId}
  schema: |
    [
      {"name": "name", "type": "STRING", "mode": "REQUIRED"},
      {"name": "post_abbr", "type": "STRING"},
      {"name": "date", "type": "DATE"}
    ]
  timePartitioning:
    type: DAY
    expirationMs: 7776000000 # 90 days
    field: date
    # 'requirePartitionFilter' is deprecated in timePartitioning, use top-level field instead.
  rangePartitioning:
    field: "name" # Should be an INT64 column, but using STRING for schema simplicity in test
    range:
      start: 0
      end: 100
      interval: 10
  clustering:
    - name
    - post_abbr
  requirePartitionFilter: true
  expirationTime: 1600000000000 # Example epoch time in milliseconds
  # labels are set via metadata.labels now. This field is only for direct reconciler annotation.
  # labels:
  #   kcc-direct-label: "kcc-direct-value"
  encryptionConfiguration:
    kmsKeyRef:
       name: kmscryptokey-${uniqueId}
  # Example using externalDataConfiguration for a CSV file in GCS
  # externalDataConfiguration:
  #   autodetect: true
  #   sourceFormat: CSV
  #   sourceUris:
  #     - gs://${projectId}-kcc-test-bucket/external_data.csv
  #   csvOptions:
  #     quote: """
  #     allowJaggedRows: false
  #     allowQuotedNewlines: false
  #     skipLeadingRows: 1
  #     fieldDelimiter: ","
  #     encoding: "UTF-8"
  #   ignoreUnknownValues: true
  #   maxBadRecords: 0
  #   schema: |
  #     [
  #       {"name": "col1", "type": "STRING"},
  #       {"name": "col2", "type": "INTEGER"}
  #     ]
  # Example using view
  # view:
  #   query: SELECT name, post_abbr FROM `${projectId}.${bigquerydataset-${uniqueId}}.bigquerytable-${uniqueId}` WHERE name = 'test'
  #   useLegacySql: false
  # Example using materializedView
  # materializedView:
  #   query: SELECT COUNT(*) as cnt FROM `${projectId}.${bigquerydataset-${uniqueId}}.base_table_for_mv-${uniqueId}`
  #   enableRefresh: true
  #   refreshIntervalMs: 1800000 # 30 minutes
  #   allowNonIncrementalDefinition: false # default value
  maxStaleness: "INTERVAL 1 HOUR"
  tableConstraints:
    primaryKey:
      columns:
      - name
    foreignKeys:
    - name: fk_constraint_name-${uniqueId}
      columnReferences:
        referencingColumn: post_abbr
        referencedColumn: state_abbr # Assuming this column exists in referenced table
      referencedTable:
        projectId: ${projectId}
        datasetId: referenced_dataset-${uniqueId}
        tableId: referenced_table-${uniqueId}
