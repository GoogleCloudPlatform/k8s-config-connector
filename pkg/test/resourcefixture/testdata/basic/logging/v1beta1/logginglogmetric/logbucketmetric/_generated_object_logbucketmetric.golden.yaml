apiVersion: logging.cnrm.cloud.google.com/v1beta1
kind: LoggingLogMetric
metadata:
  annotations:
    cnrm.cloud.google.com/management-conflict-prevention-policy: none
  finalizers:
  - cnrm.cloud.google.com/finalizer
  - cnrm.cloud.google.com/deletion-defender
  generation: 2
  labels:
    cnrm-test: "true"
  name: logginglogmetric-${uniqueId}
  namespace: ${uniqueId}
spec:
  bucketOptions:
    linearBuckets:
      numFiniteBuckets: 3
      offset: 1.5
      width: 3.5
  description: A sample log metric
  disabled: false
  filter: resource.type=gae_app AND severity<=ERROR
  labelExtractors:
    mass: EXTRACT(jsonPayload.request)
    sku: EXTRACT(jsonPayload.id)
  loggingLogBucketRef:
    external: projects/${projectId}/locations/global/buckets/logginglogbucket-dep-${uniqueId}
  metricDescriptor:
    displayName: sample-descriptor
    labels:
    - description: amount of matter
      key: mass
      valueType: STRING
    - description: identifying number for item
      key: sku
      valueType: INT64
    launchStage: UNIMPLEMENTED
    metadata:
      ingestDelay: 2s
      samplePeriod: 5s
    metricKind: DELTA
    unit: bit
    valueType: DISTRIBUTION
  projectRef:
    external: projects/${projectId}
  resourceID: logginglogmetric-${uniqueId}
  valueExtractor: EXTRACT(jsonPayload.request)
status:
  conditions:
  - lastTransitionTime: "1970-01-01T00:00:00Z"
    message: The resource is up to date
    reason: UpToDate
    status: "True"
    type: Ready
  createTime: "1970-01-01T00:00:00Z"
  metricDescriptor:
    description: A sample log metric
    name: projects/${projectId}/metricDescriptors/logging.googleapis.com/user/logginglogmetric-${uniqueId}
    type: logging.googleapis.com/user/logginglogmetric-${uniqueId}
  observedGeneration: 2
  updateTime: "1970-01-01T00:00:00Z"
