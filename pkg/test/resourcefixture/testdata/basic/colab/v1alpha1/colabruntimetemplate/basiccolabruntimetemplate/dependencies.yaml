apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeNetwork
metadata:
  annotations:
    cnrm.cloud.google.com/project-id: ${projectId}
    cnrm.cloud.google.com/management-conflict-prevention-policy: "none"
    cnrm.cloud.google.com/deletion-policy: "abandon"
  name: computenetwork-${uniqueId}
spec:
  resourceID: default
  description: Default network for the project
---
apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeSubnetwork
metadata:
  annotations:
    cnrm.cloud.google.com/project-id: ${projectId}
    cnrm.cloud.google.com/management-conflict-prevention-policy: "none"
    cnrm.cloud.google.com/deletion-policy: "abandon"
  name: computesubnetwork-${uniqueId}
spec:
  resourceID: default
  ipCidrRange: 10.128.0.0/20
  region: us-central1
  networkRef:
    name: computenetwork-${uniqueId}
#---
#apiVersion: iam.cnrm.cloud.google.com/v1beta1
#kind: IAMPolicyMember
#metadata:
#  name: iampolicymember-${uniqueId}
#spec:
#  member: serviceAccount:service-${projectNumber}@gcp-sa-aiplatform.iam.gserviceaccount.com
#  role: roles/cloudkms.cryptoKeyEncrypterDecrypter # required by cloud run service agent to access KMS keys
#  resourceRef:
#    apiVersion: resourcemanager.cnrm.cloud.google.com/v1beta1
#    kind: Project
#    external: projects/${projectId}
#---
#apiVersion: kms.cnrm.cloud.google.com/v1beta1
#kind: KMSKeyRing
#metadata:
#  annotations:
#    cnrm.cloud.google.com/project-id: ${projectId}
#  name: kmskeyring-${uniqueId}
#spec:
#  location: us-central1
#---
#apiVersion: kms.cnrm.cloud.google.com/v1beta1
#kind: KMSCryptoKey
#metadata:
#  annotations:
#    cnrm.cloud.google.com/project-id: ${projectId}
#  name: kmscryptokey-1-${uniqueId}
#spec:
#  keyRingRef:
#    name: kmskeyring-${uniqueId}
#  purpose: ENCRYPT_DECRYPT
