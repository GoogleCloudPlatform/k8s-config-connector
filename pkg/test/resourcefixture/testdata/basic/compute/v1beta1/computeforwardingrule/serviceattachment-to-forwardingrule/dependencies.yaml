# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# apiVersion: compute.cnrm.cloud.google.com/v1beta1
# kind: ComputeAddress
# metadata:
#   name: computeaddress-${uniqueId}
#   labels:
#     label-one: "value-one"
# spec:
#   location: us-central1
# ---
# apiVersion: compute.cnrm.cloud.google.com/v1beta1
# kind: ComputeNetwork
# metadata:
#   annotations:
#     cnrm.cloud.google.com/management-conflict-prevention-policy: "none"
#     cnrm.cloud.google.com/deletion-policy: "abandon"
#   name: default
# spec:
#   description: Default network for the project
# ---
# apiVersion: compute.cnrm.cloud.google.com/v1beta1
# kind: ComputeTargetVPNGateway
# metadata:
#   name: computetargetvpngateway-${uniqueId}
# spec:
#   description: a regional target vpn gateway
#   region: us-central1
#   networkRef:
#     name: default

---
# Producer

apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeNetwork
metadata:
  name: producer-${uniqueId}
spec:
  autoCreateSubnetworks: false
  #resourceID: producer-${uniqueId}
  routingMode: REGIONAL

---

apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeServiceAttachment
metadata:
  name: myservice-${uniqueId}
#  namespace: config-control
spec:
  location: "us-west2"
  description: "A sample service attachment"
  targetServiceRef:
    name: "myservice-${uniqueId}"
  connectionPreference: "ACCEPT_AUTOMATIC"
  #projectRef:
  #  external: b252796353-20221012
  natSubnets:
  - name: producer-psc-us-west2-${uniqueId}

---

apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeBackendService
metadata:
  name: myservice-${uniqueId}
spec:
  location: "us-west2"
  networkRef:
    name: "producer-${uniqueId}"
  loadBalancingScheme: "INTERNAL"

---

apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeSubnetwork
metadata:
  name: producer-psc-us-west2-${uniqueId}
spec:
  region: "us-west2"
  ipCidrRange: "10.2.0.0/16"
  networkRef:
    name: producer-${uniqueId}
  purpose: "PRIVATE_SERVICE_CONNECT"
---

apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeSubnetwork
metadata:
  name: producer-us-west2-${uniqueId}
spec:
  region: "us-west2"
  ipCidrRange: "10.4.0.0/16"
  networkRef:
    name: producer-${uniqueId}
  purpose: "PRIVATE"

---

apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeForwardingRule
metadata:
  name: myservice-${uniqueId}
spec:
  location: "us-west2"
  networkRef:
    name: "producer-${uniqueId}"
  subnetworkRef:
    name: "producer-us-west2-${uniqueId}"
  description: "A test forwarding rule with internal load balancing scheme"
  loadBalancingScheme: "INTERNAL"
  backendServiceRef:
    name: "myservice-${uniqueId}"
  networkTier: "PREMIUM"
  allPorts: true

---

#Consumer


apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeNetwork
metadata:
  name: consumer-${uniqueId}
spec:
  autoCreateSubnetworks: false
  #resourceID: consumer-vpc
  routingMode: REGIONAL
---

apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeSubnetwork
metadata:
  name: consumer-psc-us-west2-${uniqueId}
spec:
  region: "us-west2"
  ipCidrRange: "10.0.60.0/24"
  networkRef:
    name: consumer-${uniqueId}

---

apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeAddress
metadata:
  name: myservice-consumer-${uniqueId}
spec:
  #address: 10.0.60.100 # optional, will be drawn from subnetwork CIDR
  ipVersion: IPV4
  addressType: INTERNAL
  subnetworkRef:
    name: consumer-psc-us-west2-${uniqueId}
  location: us-west2
