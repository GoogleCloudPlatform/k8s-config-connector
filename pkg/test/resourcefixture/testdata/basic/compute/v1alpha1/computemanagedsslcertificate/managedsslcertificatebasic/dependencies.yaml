# Copyright 2023 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeBackendService
metadata:
  name: computebackendservice-${uniqueId}
spec:
  healthChecks:
  - ${google_compute_http_health_check.default.id}
  portName: http
  protocol: HTTP
  resourceID: computebackendservice${uniqueId}
  timeoutSec: 10
---
apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeURLMap
metadata:
  labels:
    name: computebackendservice-${uniqueId}
  name: computeurlmap-${uniqueId}
spec:
  description: a description
  hostRule:
  - hosts:
    - sslcert.tf-test.club
    pathMatcher: allpaths
  pathMatcher:
  - defaultService: ${google_compute_backend_service.default.id}
    name: allpaths
    pathRule:
    - paths:
      - /*
      service: ${google_compute_backend_service.default.id}
  resourceID: computeurlmap${uniqueId}
---
apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeTargetHTTPSProxy
metadata:
  name: computetargethttpsproxy-${uniqueId}
spec:
  resourceID: computetargethttpsproxy${uniqueId}
  sslCertificates:
  - ${google_compute_managed_ssl_certificate.default.id}
  urlMapRef:
    name: computeurlmap-${uniqueId}
---
apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeForwardingRule
metadata:
  name: computeforwardingrule-${uniqueId}
spec:
  "":
    name: computetargethttpsproxy-${uniqueId}
  portRange: 443
  resourceID: computeforwardingrule${uniqueId}
---
apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeHTTPHealthCheck
metadata:
  name: computehttphealthcheck-${uniqueId}
spec:
  checkIntervalSec: 1
  requestPath: /
  resourceID: computehttphealthcheck${uniqueId}
  timeoutSec: 1
