# Copyright 2024 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
version: 2
interactions:
    - id: 0
      request:
        proto: HTTP/1.1
        proto_major: 1
        proto_minor: 1
        content_length: 196
        transfer_encoding: []
        trailer: {}
        host: monitoring.googleapis.com
        remote_addr: ""
        request_uri: ""
        body: |
            {"displayName":"monitoringnotificationchannel3-41w3iydhydd0","enabled":true,"labels":{"email_address":"dev@example.com"},"type":"email","userLabels":{"cnrm-test":"true","managed-by-cnrm":"true"}}
        form: {}
        headers:
            Content-Type:
                - application/json
        url: https://monitoring.googleapis.com/v3/projects/example-project/notificationChannels?alt=json
        method: POST
      response:
        proto: HTTP/2.0
        proto_major: 2
        proto_minor: 0
        transfer_encoding: []
        trailer: {}
        content_length: -1
        uncompressed: true
        body: |
            {
              "type": "email",
              "displayName": "monitoringnotificationchannel3-41w3iydhydd0",
              "labels": {
                "email_address": "dev@example.com"
              },
              "name": "projects/example-project/notificationChannels/7726733045005565233",
              "userLabels": {
                "managed-by-cnrm": "true",
                "cnrm-test": "true"
              },
              "enabled": true,
              "creationRecord": {
                "mutateTime": "2024-06-24T17:53:10.350354958Z"
              },
              "mutationRecords": [
                {
                  "mutateTime": "2024-06-24T17:53:10.350354958Z"
                }
              ]
            }
        headers:
            Content-Type:
                - application/json; charset=UTF-8
        status: 200 OK
        code: 200
        duration: 1.326530731s
    - id: 1
      request:
        proto: HTTP/1.1
        proto_major: 1
        proto_minor: 1
        content_length: 0
        transfer_encoding: []
        trailer: {}
        host: monitoring.googleapis.com
        remote_addr: ""
        request_uri: ""
        body: ""
        form: {}
        headers:
            Content-Type:
                - application/json
        url: https://monitoring.googleapis.com/v3/projects/example-project/notificationChannels/7726733045005565233?alt=json
        method: GET
      response:
        proto: HTTP/2.0
        proto_major: 2
        proto_minor: 0
        transfer_encoding: []
        trailer: {}
        content_length: -1
        uncompressed: true
        body: |
            {
              "type": "email",
              "displayName": "monitoringnotificationchannel3-41w3iydhydd0",
              "labels": {
                "email_address": "dev@example.com"
              },
              "name": "projects/example-project/notificationChannels/7726733045005565233",
              "userLabels": {
                "cnrm-test": "true",
                "managed-by-cnrm": "true"
              },
              "enabled": true,
              "creationRecord": {
                "mutateTime": "2024-06-24T17:53:10.350354958Z"
              },
              "mutationRecords": [
                {
                  "mutateTime": "2024-06-24T17:53:10.350354958Z"
                }
              ]
            }
        headers:
            Content-Type:
                - application/json; charset=UTF-8
        status: 200 OK
        code: 200
        duration: 151.437665ms
    - id: 2
      request:
        proto: HTTP/1.1
        proto_major: 1
        proto_minor: 1
        content_length: 0
        transfer_encoding: []
        trailer: {}
        host: monitoring.googleapis.com
        remote_addr: ""
        request_uri: ""
        body: ""
        form: {}
        headers:
            Content-Type:
                - application/json
        url: https://monitoring.googleapis.com/v3/projects/example-project/notificationChannels/7726733045005565233?alt=json
        method: GET
      response:
        proto: HTTP/2.0
        proto_major: 2
        proto_minor: 0
        transfer_encoding: []
        trailer: {}
        content_length: -1
        uncompressed: true
        body: |
            {
              "type": "email",
              "displayName": "monitoringnotificationchannel3-41w3iydhydd0",
              "labels": {
                "email_address": "dev@example.com"
              },
              "name": "projects/example-project/notificationChannels/7726733045005565233",
              "userLabels": {
                "managed-by-cnrm": "true",
                "cnrm-test": "true"
              },
              "enabled": true,
              "creationRecord": {
                "mutateTime": "2024-06-24T17:53:10.350354958Z"
              },
              "mutationRecords": [
                {
                  "mutateTime": "2024-06-24T17:53:10.350354958Z"
                }
              ]
            }
        headers:
            Content-Type:
                - application/json; charset=UTF-8
        status: 200 OK
        code: 200
        duration: 159.082224ms
    - id: 3
      request:
        proto: HTTP/1.1
        proto_major: 1
        proto_minor: 1
        content_length: 196
        transfer_encoding: []
        trailer: {}
        host: monitoring.googleapis.com
        remote_addr: ""
        request_uri: ""
        body: |
            {"displayName":"monitoringnotificationchannel2-41w3iydhydd0","enabled":true,"labels":{"email_address":"dev@example.com"},"type":"email","userLabels":{"cnrm-test":"true","managed-by-cnrm":"true"}}
        form: {}
        headers:
            Content-Type:
                - application/json
        url: https://monitoring.googleapis.com/v3/projects/example-project/notificationChannels?alt=json
        method: POST
      response:
        proto: HTTP/2.0
        proto_major: 2
        proto_minor: 0
        transfer_encoding: []
        trailer: {}
        content_length: -1
        uncompressed: true
        body: |
            {
              "type": "email",
              "displayName": "monitoringnotificationchannel2-41w3iydhydd0",
              "labels": {
                "email_address": "dev@example.com"
              },
              "name": "projects/example-project/notificationChannels/2866813153676774169",
              "userLabels": {
                "managed-by-cnrm": "true",
                "cnrm-test": "true"
              },
              "enabled": true,
              "creationRecord": {
                "mutateTime": "2024-06-24T17:53:13.229632439Z"
              },
              "mutationRecords": [
                {
                  "mutateTime": "2024-06-24T17:53:13.229632439Z"
                }
              ]
            }
        headers:
            Content-Type:
                - application/json; charset=UTF-8
        status: 200 OK
        code: 200
        duration: 1.372780394s
    - id: 4
      request:
        proto: HTTP/1.1
        proto_major: 1
        proto_minor: 1
        content_length: 0
        transfer_encoding: []
        trailer: {}
        host: monitoring.googleapis.com
        remote_addr: ""
        request_uri: ""
        body: ""
        form: {}
        headers:
            Content-Type:
                - application/json
        url: https://monitoring.googleapis.com/v3/projects/example-project/notificationChannels/2866813153676774169?alt=json
        method: GET
      response:
        proto: HTTP/2.0
        proto_major: 2
        proto_minor: 0
        transfer_encoding: []
        trailer: {}
        content_length: -1
        uncompressed: true
        body: |
            {
              "type": "email",
              "displayName": "monitoringnotificationchannel2-41w3iydhydd0",
              "labels": {
                "email_address": "dev@example.com"
              },
              "name": "projects/example-project/notificationChannels/2866813153676774169",
              "userLabels": {
                "cnrm-test": "true",
                "managed-by-cnrm": "true"
              },
              "enabled": true,
              "creationRecord": {
                "mutateTime": "2024-06-24T17:53:13.229632439Z"
              },
              "mutationRecords": [
                {
                  "mutateTime": "2024-06-24T17:53:13.229632439Z"
                }
              ]
            }
        headers:
            Content-Type:
                - application/json; charset=UTF-8
        status: 200 OK
        code: 200
        duration: 155.296135ms
    - id: 5
      request:
        proto: HTTP/1.1
        proto_major: 1
        proto_minor: 1
        content_length: 0
        transfer_encoding: []
        trailer: {}
        host: monitoring.googleapis.com
        remote_addr: ""
        request_uri: ""
        body: ""
        form: {}
        headers:
            Content-Type:
                - application/json
        url: https://monitoring.googleapis.com/v3/projects/example-project/notificationChannels/2866813153676774169?alt=json
        method: GET
      response:
        proto: HTTP/2.0
        proto_major: 2
        proto_minor: 0
        transfer_encoding: []
        trailer: {}
        content_length: -1
        uncompressed: true
        body: |
            {
              "type": "email",
              "displayName": "monitoringnotificationchannel2-41w3iydhydd0",
              "labels": {
                "email_address": "dev@example.com"
              },
              "name": "projects/example-project/notificationChannels/2866813153676774169",
              "userLabels": {
                "cnrm-test": "true",
                "managed-by-cnrm": "true"
              },
              "enabled": true,
              "creationRecord": {
                "mutateTime": "2024-06-24T17:53:13.229632439Z"
              },
              "mutationRecords": [
                {
                  "mutateTime": "2024-06-24T17:53:13.229632439Z"
                }
              ]
            }
        headers:
            Content-Type:
                - application/json; charset=UTF-8
        status: 200 OK
        code: 200
        duration: 164.254463ms
    - id: 6
      request:
        proto: HTTP/1.1
        proto_major: 1
        proto_minor: 1
        content_length: 196
        transfer_encoding: []
        trailer: {}
        host: monitoring.googleapis.com
        remote_addr: ""
        request_uri: ""
        body: |
            {"displayName":"monitoringnotificationchannel1-41w3iydhydd0","enabled":true,"labels":{"email_address":"dev@example.com"},"type":"email","userLabels":{"cnrm-test":"true","managed-by-cnrm":"true"}}
        form: {}
        headers:
            Content-Type:
                - application/json
        url: https://monitoring.googleapis.com/v3/projects/example-project/notificationChannels?alt=json
        method: POST
      response:
        proto: HTTP/2.0
        proto_major: 2
        proto_minor: 0
        transfer_encoding: []
        trailer: {}
        content_length: -1
        uncompressed: true
        body: |
            {
              "type": "email",
              "displayName": "monitoringnotificationchannel1-41w3iydhydd0",
              "labels": {
                "email_address": "dev@example.com"
              },
              "name": "projects/example-project/notificationChannels/2866813153676774505",
              "userLabels": {
                "managed-by-cnrm": "true",
                "cnrm-test": "true"
              },
              "enabled": true,
              "creationRecord": {
                "mutateTime": "2024-06-24T17:53:16.282199812Z"
              },
              "mutationRecords": [
                {
                  "mutateTime": "2024-06-24T17:53:16.282199812Z"
                }
              ]
            }
        headers:
            Content-Type:
                - application/json; charset=UTF-8
        status: 200 OK
        code: 200
        duration: 1.354518258s
    - id: 7
      request:
        proto: HTTP/1.1
        proto_major: 1
        proto_minor: 1
        content_length: 0
        transfer_encoding: []
        trailer: {}
        host: monitoring.googleapis.com
        remote_addr: ""
        request_uri: ""
        body: ""
        form: {}
        headers:
            Content-Type:
                - application/json
        url: https://monitoring.googleapis.com/v3/projects/example-project/notificationChannels/2866813153676774505?alt=json
        method: GET
      response:
        proto: HTTP/2.0
        proto_major: 2
        proto_minor: 0
        transfer_encoding: []
        trailer: {}
        content_length: -1
        uncompressed: true
        body: |
            {
              "type": "email",
              "displayName": "monitoringnotificationchannel1-41w3iydhydd0",
              "labels": {
                "email_address": "dev@example.com"
              },
              "name": "projects/example-project/notificationChannels/2866813153676774505",
              "userLabels": {
                "cnrm-test": "true",
                "managed-by-cnrm": "true"
              },
              "enabled": true,
              "creationRecord": {
                "mutateTime": "2024-06-24T17:53:16.282199812Z"
              },
              "mutationRecords": [
                {
                  "mutateTime": "2024-06-24T17:53:16.282199812Z"
                }
              ]
            }
        headers:
            Content-Type:
                - application/json; charset=UTF-8
        status: 200 OK
        code: 200
        duration: 161.134144ms
    - id: 8
      request:
        proto: HTTP/1.1
        proto_major: 1
        proto_minor: 1
        content_length: 0
        transfer_encoding: []
        trailer: {}
        host: monitoring.googleapis.com
        remote_addr: ""
        request_uri: ""
        body: ""
        form: {}
        headers:
            Content-Type:
                - application/json
        url: https://monitoring.googleapis.com/v3/projects/example-project/notificationChannels/2866813153676774505?alt=json
        method: GET
      response:
        proto: HTTP/2.0
        proto_major: 2
        proto_minor: 0
        transfer_encoding: []
        trailer: {}
        content_length: -1
        uncompressed: true
        body: |
            {
              "type": "email",
              "displayName": "monitoringnotificationchannel1-41w3iydhydd0",
              "labels": {
                "email_address": "dev@example.com"
              },
              "name": "projects/example-project/notificationChannels/2866813153676774505",
              "userLabels": {
                "managed-by-cnrm": "true",
                "cnrm-test": "true"
              },
              "enabled": true,
              "creationRecord": {
                "mutateTime": "2024-06-24T17:53:16.282199812Z"
              },
              "mutationRecords": [
                {
                  "mutateTime": "2024-06-24T17:53:16.282199812Z"
                }
              ]
            }
        headers:
            Content-Type:
                - application/json; charset=UTF-8
        status: 200 OK
        code: 200
        duration: 162.055084ms
    - id: 9
      request:
        proto: HTTP/1.1
        proto_major: 1
        proto_minor: 1
        content_length: 2917
        transfer_encoding: []
        trailer: {}
        host: monitoring.googleapis.com
        remote_addr: ""
        request_uri: ""
        body: |
            {"combiner":"AND_WITH_MATCHING_RESOURCE","conditions":[{"conditionThreshold":{"aggregations":[{"alignmentPeriod":"60s","crossSeriesReducer":"REDUCE_MEAN","groupByFields":["project","resource.label.instance_id","resource.label.zone"],"perSeriesAligner":"ALIGN_MAX"}],"comparison":"COMPARISON_GT","duration":"900s","filter":"metric.type=\"compute.googleapis.com/instance/cpu/utilization\" AND resource.type=\"gce_instance\"","thresholdValue":0.9,"trigger":{"count":1}},"displayName":"Very high CPU usage"}],"displayName":"Test Alert Policy","documentation":{"content":"Introduction to alerting\nAlerting gives timely awareness to problems in your cloud applications so you can resolve the problems quickly.\n\nTo create an alerting policy, you must describe the circumstances under which you want to be alerted and how you want to be notified. This page provides an overview of alerting policies and the concepts behind them.\n\nFor a practical introduction to alerting, try one of these quickstarts:\n\nQuickstart for GCP\nQuickstart for AWS\nFor an alerting policy that monitors usage and alerts you when you approach the threshold for billing, see Alerting on monthly log ingestion and Alerting on monthly trace span ingestion.\n\nHow does alerting work?\nYou can create and manage alerting policies with the Google Cloud Console, the Cloud Monitoring API, and Cloud SDK.\n\nEach alerting policy specifies the following:\n\nConditions that identify when a resource or a group of resources is in a state that requires you to take action. The conditions for an alerting policy are continuously monitored. You cannot configure the conditions to be monitored only for certain time periods.\n\nNotifications that are sent through email, SMS, or other channels to let your support team know when the conditions have been met. Configuring notifications is optional. For information on the available notification channels, see Notification options.\n\nDocumentation that can be included in some types of notifications to help your support team resolve the issue. Configuring documentation is optional.\n\nWhen the conditions of an alerting policy are met, Cloud Monitoring creates and displays an incident in the Google Cloud Console. If you set up notifications, Cloud Monitoring also sends notifications to people or third-party notification services. Responders can acknowledge receipt of the notification, but the incident remains open until the conditions that triggered the incident are no longer true.\n\nFor information and viewing and managing incidents by using the Google Cloud Console, see Incidents and events.","mimeType":"text/markdown"},"enabled":true,"notificationChannels":["projects/example-project/notificationChannels/2866813153676774505","projects/example-project/notificationChannels/2866813153676774169"],"severity":"WARNING","userLabels":{"cnrm-test":"true","managed-by-cnrm":"true"}}
        form: {}
        headers:
            Content-Type:
                - application/json
        url: https://monitoring.googleapis.com/v3/projects/example-project/alertPolicies?alt=json
        method: POST
      response:
        proto: HTTP/2.0
        proto_major: 2
        proto_minor: 0
        transfer_encoding: []
        trailer: {}
        content_length: -1
        uncompressed: true
        body: |
            {
              "name": "projects/example-project/alertPolicies/17971456350742769146",
              "displayName": "Test Alert Policy",
              "combiner": "AND_WITH_MATCHING_RESOURCE",
              "creationRecord": {
                "mutateTime": "2024-06-24T17:53:19.490308857Z",
                "mutatedBy": "justinsb@google.com"
              },
              "mutationRecord": {
                "mutateTime": "2024-06-24T17:53:19.490308857Z",
                "mutatedBy": "justinsb@google.com"
              },
              "conditions": [
                {
                  "conditionThreshold": {
                    "filter": "metric.type=\"compute.googleapis.com/instance/cpu/utilization\" AND resource.type=\"gce_instance\"",
                    "comparison": "COMPARISON_GT",
                    "thresholdValue": 0.9,
                    "duration": "900s",
                    "trigger": {
                      "count": 1
                    },
                    "aggregations": [
                      {
                        "alignmentPeriod": "60s",
                        "perSeriesAligner": "ALIGN_MAX",
                        "crossSeriesReducer": "REDUCE_MEAN",
                        "groupByFields": [
                          "project",
                          "resource.label.instance_id",
                          "resource.label.zone"
                        ]
                      }
                    ]
                  },
                  "displayName": "Very high CPU usage",
                  "name": "projects/example-project/alertPolicies/17971456350742769146/conditions/17971456350742768623"
                }
              ],
              "documentation": {
                "content": "Introduction to alerting\nAlerting gives timely awareness to problems in your cloud applications so you can resolve the problems quickly.\n\nTo create an alerting policy, you must describe the circumstances under which you want to be alerted and how you want to be notified. This page provides an overview of alerting policies and the concepts behind them.\n\nFor a practical introduction to alerting, try one of these quickstarts:\n\nQuickstart for GCP\nQuickstart for AWS\nFor an alerting policy that monitors usage and alerts you when you approach the threshold for billing, see Alerting on monthly log ingestion and Alerting on monthly trace span ingestion.\n\nHow does alerting work?\nYou can create and manage alerting policies with the Google Cloud Console, the Cloud Monitoring API, and Cloud SDK.\n\nEach alerting policy specifies the following:\n\nConditions that identify when a resource or a group of resources is in a state that requires you to take action. The conditions for an alerting policy are continuously monitored. You cannot configure the conditions to be monitored only for certain time periods.\n\nNotifications that are sent through email, SMS, or other channels to let your support team know when the conditions have been met. Configuring notifications is optional. For information on the available notification channels, see Notification options.\n\nDocumentation that can be included in some types of notifications to help your support team resolve the issue. Configuring documentation is optional.\n\nWhen the conditions of an alerting policy are met, Cloud Monitoring creates and displays an incident in the Google Cloud Console. If you set up notifications, Cloud Monitoring also sends notifications to people or third-party notification services. Responders can acknowledge receipt of the notification, but the incident remains open until the conditions that triggered the incident are no longer true.\n\nFor information and viewing and managing incidents by using the Google Cloud Console, see Incidents and events.",
                "mimeType": "text/markdown"
              },
              "notificationChannels": [
                "projects/example-project/notificationChannels/2866813153676774505",
                "projects/example-project/notificationChannels/2866813153676774169"
              ],
              "userLabels": {
                "managed-by-cnrm": "true",
                "cnrm-test": "true"
              },
              "enabled": true,
              "severity": "WARNING"
            }
        headers:
            Content-Type:
                - application/json; charset=UTF-8
        status: 200 OK
        code: 200
        duration: 2.470854938s
    - id: 10
      request:
        proto: HTTP/1.1
        proto_major: 1
        proto_minor: 1
        content_length: 0
        transfer_encoding: []
        trailer: {}
        host: monitoring.googleapis.com
        remote_addr: ""
        request_uri: ""
        body: ""
        form: {}
        headers:
            Content-Type:
                - application/json
        url: https://monitoring.googleapis.com/v3/projects/example-project/alertPolicies/17971456350742769146?alt=json
        method: GET
      response:
        proto: HTTP/2.0
        proto_major: 2
        proto_minor: 0
        transfer_encoding: []
        trailer: {}
        content_length: -1
        uncompressed: true
        body: |
            {
              "name": "projects/example-project/alertPolicies/17971456350742769146",
              "displayName": "Test Alert Policy",
              "combiner": "AND_WITH_MATCHING_RESOURCE",
              "creationRecord": {
                "mutateTime": "2024-06-24T17:53:19.490308857Z",
                "mutatedBy": "justinsb@google.com"
              },
              "mutationRecord": {
                "mutateTime": "2024-06-24T17:53:19.490308857Z",
                "mutatedBy": "justinsb@google.com"
              },
              "conditions": [
                {
                  "conditionThreshold": {
                    "filter": "metric.type=\"compute.googleapis.com/instance/cpu/utilization\" AND resource.type=\"gce_instance\"",
                    "comparison": "COMPARISON_GT",
                    "thresholdValue": 0.9,
                    "duration": "900s",
                    "trigger": {
                      "count": 1
                    },
                    "aggregations": [
                      {
                        "alignmentPeriod": "60s",
                        "perSeriesAligner": "ALIGN_MAX",
                        "crossSeriesReducer": "REDUCE_MEAN",
                        "groupByFields": [
                          "project",
                          "resource.label.instance_id",
                          "resource.label.zone"
                        ]
                      }
                    ]
                  },
                  "displayName": "Very high CPU usage",
                  "name": "projects/example-project/alertPolicies/17971456350742769146/conditions/17971456350742768623"
                }
              ],
              "documentation": {
                "content": "Introduction to alerting\nAlerting gives timely awareness to problems in your cloud applications so you can resolve the problems quickly.\n\nTo create an alerting policy, you must describe the circumstances under which you want to be alerted and how you want to be notified. This page provides an overview of alerting policies and the concepts behind them.\n\nFor a practical introduction to alerting, try one of these quickstarts:\n\nQuickstart for GCP\nQuickstart for AWS\nFor an alerting policy that monitors usage and alerts you when you approach the threshold for billing, see Alerting on monthly log ingestion and Alerting on monthly trace span ingestion.\n\nHow does alerting work?\nYou can create and manage alerting policies with the Google Cloud Console, the Cloud Monitoring API, and Cloud SDK.\n\nEach alerting policy specifies the following:\n\nConditions that identify when a resource or a group of resources is in a state that requires you to take action. The conditions for an alerting policy are continuously monitored. You cannot configure the conditions to be monitored only for certain time periods.\n\nNotifications that are sent through email, SMS, or other channels to let your support team know when the conditions have been met. Configuring notifications is optional. For information on the available notification channels, see Notification options.\n\nDocumentation that can be included in some types of notifications to help your support team resolve the issue. Configuring documentation is optional.\n\nWhen the conditions of an alerting policy are met, Cloud Monitoring creates and displays an incident in the Google Cloud Console. If you set up notifications, Cloud Monitoring also sends notifications to people or third-party notification services. Responders can acknowledge receipt of the notification, but the incident remains open until the conditions that triggered the incident are no longer true.\n\nFor information and viewing and managing incidents by using the Google Cloud Console, see Incidents and events.",
                "mimeType": "text/markdown"
              },
              "notificationChannels": [
                "projects/example-project/notificationChannels/2866813153676774505",
                "projects/example-project/notificationChannels/2866813153676774169"
              ],
              "userLabels": {
                "cnrm-test": "true",
                "managed-by-cnrm": "true"
              },
              "enabled": true,
              "severity": "WARNING"
            }
        headers:
            Content-Type:
                - application/json; charset=UTF-8
        status: 200 OK
        code: 200
        duration: 163.358924ms
    - id: 11
      request:
        proto: HTTP/1.1
        proto_major: 1
        proto_minor: 1
        content_length: 0
        transfer_encoding: []
        trailer: {}
        host: monitoring.googleapis.com
        remote_addr: ""
        request_uri: ""
        body: ""
        form: {}
        headers:
            Content-Type:
                - application/json
        url: https://monitoring.googleapis.com/v3/projects/example-project/alertPolicies/17971456350742769146?alt=json
        method: GET
      response:
        proto: HTTP/2.0
        proto_major: 2
        proto_minor: 0
        transfer_encoding: []
        trailer: {}
        content_length: -1
        uncompressed: true
        body: |
            {
              "name": "projects/example-project/alertPolicies/17971456350742769146",
              "displayName": "Test Alert Policy",
              "combiner": "AND_WITH_MATCHING_RESOURCE",
              "creationRecord": {
                "mutateTime": "2024-06-24T17:53:19.490308857Z",
                "mutatedBy": "justinsb@google.com"
              },
              "mutationRecord": {
                "mutateTime": "2024-06-24T17:53:19.490308857Z",
                "mutatedBy": "justinsb@google.com"
              },
              "conditions": [
                {
                  "conditionThreshold": {
                    "filter": "metric.type=\"compute.googleapis.com/instance/cpu/utilization\" AND resource.type=\"gce_instance\"",
                    "comparison": "COMPARISON_GT",
                    "thresholdValue": 0.9,
                    "duration": "900s",
                    "trigger": {
                      "count": 1
                    },
                    "aggregations": [
                      {
                        "alignmentPeriod": "60s",
                        "perSeriesAligner": "ALIGN_MAX",
                        "crossSeriesReducer": "REDUCE_MEAN",
                        "groupByFields": [
                          "project",
                          "resource.label.instance_id",
                          "resource.label.zone"
                        ]
                      }
                    ]
                  },
                  "displayName": "Very high CPU usage",
                  "name": "projects/example-project/alertPolicies/17971456350742769146/conditions/17971456350742768623"
                }
              ],
              "documentation": {
                "content": "Introduction to alerting\nAlerting gives timely awareness to problems in your cloud applications so you can resolve the problems quickly.\n\nTo create an alerting policy, you must describe the circumstances under which you want to be alerted and how you want to be notified. This page provides an overview of alerting policies and the concepts behind them.\n\nFor a practical introduction to alerting, try one of these quickstarts:\n\nQuickstart for GCP\nQuickstart for AWS\nFor an alerting policy that monitors usage and alerts you when you approach the threshold for billing, see Alerting on monthly log ingestion and Alerting on monthly trace span ingestion.\n\nHow does alerting work?\nYou can create and manage alerting policies with the Google Cloud Console, the Cloud Monitoring API, and Cloud SDK.\n\nEach alerting policy specifies the following:\n\nConditions that identify when a resource or a group of resources is in a state that requires you to take action. The conditions for an alerting policy are continuously monitored. You cannot configure the conditions to be monitored only for certain time periods.\n\nNotifications that are sent through email, SMS, or other channels to let your support team know when the conditions have been met. Configuring notifications is optional. For information on the available notification channels, see Notification options.\n\nDocumentation that can be included in some types of notifications to help your support team resolve the issue. Configuring documentation is optional.\n\nWhen the conditions of an alerting policy are met, Cloud Monitoring creates and displays an incident in the Google Cloud Console. If you set up notifications, Cloud Monitoring also sends notifications to people or third-party notification services. Responders can acknowledge receipt of the notification, but the incident remains open until the conditions that triggered the incident are no longer true.\n\nFor information and viewing and managing incidents by using the Google Cloud Console, see Incidents and events.",
                "mimeType": "text/markdown"
              },
              "notificationChannels": [
                "projects/example-project/notificationChannels/2866813153676774505",
                "projects/example-project/notificationChannels/2866813153676774169"
              ],
              "userLabels": {
                "cnrm-test": "true",
                "managed-by-cnrm": "true"
              },
              "enabled": true,
              "severity": "WARNING"
            }
        headers:
            Content-Type:
                - application/json; charset=UTF-8
        status: 200 OK
        code: 200
        duration: 161.647634ms
    - id: 12
      request:
        proto: HTTP/1.1
        proto_major: 1
        proto_minor: 1
        content_length: 0
        transfer_encoding: []
        trailer: {}
        host: monitoring.googleapis.com
        remote_addr: ""
        request_uri: ""
        body: ""
        form: {}
        headers:
            Content-Type:
                - application/json
        url: https://monitoring.googleapis.com/v3/projects/example-project/alertPolicies/17971456350742769146?alt=json
        method: GET
      response:
        proto: HTTP/2.0
        proto_major: 2
        proto_minor: 0
        transfer_encoding: []
        trailer: {}
        content_length: -1
        uncompressed: true
        body: |
            {
              "name": "projects/example-project/alertPolicies/17971456350742769146",
              "displayName": "Test Alert Policy",
              "combiner": "AND_WITH_MATCHING_RESOURCE",
              "creationRecord": {
                "mutateTime": "2024-06-24T17:53:19.490308857Z",
                "mutatedBy": "justinsb@google.com"
              },
              "mutationRecord": {
                "mutateTime": "2024-06-24T17:53:19.490308857Z",
                "mutatedBy": "justinsb@google.com"
              },
              "conditions": [
                {
                  "conditionThreshold": {
                    "filter": "metric.type=\"compute.googleapis.com/instance/cpu/utilization\" AND resource.type=\"gce_instance\"",
                    "comparison": "COMPARISON_GT",
                    "thresholdValue": 0.9,
                    "duration": "900s",
                    "trigger": {
                      "count": 1
                    },
                    "aggregations": [
                      {
                        "alignmentPeriod": "60s",
                        "perSeriesAligner": "ALIGN_MAX",
                        "crossSeriesReducer": "REDUCE_MEAN",
                        "groupByFields": [
                          "project",
                          "resource.label.instance_id",
                          "resource.label.zone"
                        ]
                      }
                    ]
                  },
                  "displayName": "Very high CPU usage",
                  "name": "projects/example-project/alertPolicies/17971456350742769146/conditions/17971456350742768623"
                }
              ],
              "documentation": {
                "content": "Introduction to alerting\nAlerting gives timely awareness to problems in your cloud applications so you can resolve the problems quickly.\n\nTo create an alerting policy, you must describe the circumstances under which you want to be alerted and how you want to be notified. This page provides an overview of alerting policies and the concepts behind them.\n\nFor a practical introduction to alerting, try one of these quickstarts:\n\nQuickstart for GCP\nQuickstart for AWS\nFor an alerting policy that monitors usage and alerts you when you approach the threshold for billing, see Alerting on monthly log ingestion and Alerting on monthly trace span ingestion.\n\nHow does alerting work?\nYou can create and manage alerting policies with the Google Cloud Console, the Cloud Monitoring API, and Cloud SDK.\n\nEach alerting policy specifies the following:\n\nConditions that identify when a resource or a group of resources is in a state that requires you to take action. The conditions for an alerting policy are continuously monitored. You cannot configure the conditions to be monitored only for certain time periods.\n\nNotifications that are sent through email, SMS, or other channels to let your support team know when the conditions have been met. Configuring notifications is optional. For information on the available notification channels, see Notification options.\n\nDocumentation that can be included in some types of notifications to help your support team resolve the issue. Configuring documentation is optional.\n\nWhen the conditions of an alerting policy are met, Cloud Monitoring creates and displays an incident in the Google Cloud Console. If you set up notifications, Cloud Monitoring also sends notifications to people or third-party notification services. Responders can acknowledge receipt of the notification, but the incident remains open until the conditions that triggered the incident are no longer true.\n\nFor information and viewing and managing incidents by using the Google Cloud Console, see Incidents and events.",
                "mimeType": "text/markdown"
              },
              "notificationChannels": [
                "projects/example-project/notificationChannels/2866813153676774505",
                "projects/example-project/notificationChannels/2866813153676774169"
              ],
              "userLabels": {
                "managed-by-cnrm": "true",
                "cnrm-test": "true"
              },
              "enabled": true,
              "severity": "WARNING"
            }
        headers:
            Content-Type:
                - application/json; charset=UTF-8
        status: 200 OK
        code: 200
        duration: 451.439217ms
    - id: 13
      request:
        proto: HTTP/1.1
        proto_major: 1
        proto_minor: 1
        content_length: 1330
        transfer_encoding: []
        trailer: {}
        host: monitoring.googleapis.com
        remote_addr: ""
        request_uri: ""
        body: |
            {"combiner":"OR","conditions":[{"conditionThreshold":{"aggregations":[{"alignmentPeriod":"60s","crossSeriesReducer":"REDUCE_MEAN","groupByFields":["project","resource.label.instance_id","resource.label.zone"],"perSeriesAligner":"ALIGN_MAX"}],"comparison":"COMPARISON_LT","duration":"900s","filter":"metric.type=\"compute.googleapis.com/instance/cpu/utilization\" AND resource.type=\"gce_instance\"","thresholdValue":0.1,"trigger":{"count":3}},"displayName":"Very low CPU usage","name":"projects/example-project/alertPolicies/17971456350742769146/conditions/17971456350742768623"}],"displayName":"Updated Test Alert Policy","documentation":{"content":"“Just the place for a Snark!” the Bellman cried,\nAs he monitored his resources with care;\nSupporting each metric on the top of the tide\nBy a finger entwined in his hair.\n\n“Just the place for a Snark! I have measured it twice:\nThat alone should discourage the crew.\nJust the place for a Snark! I have measured it thrice:\nWhat I measure three times is true.”","mimeType":"text/markdown"},"enabled":false,"notificationChannels":["projects/example-project/notificationChannels/7726733045005565233","projects/example-project/notificationChannels/2866813153676774505"],"severity":"ERROR","userLabels":{"cnrm-test":"true","managed-by-cnrm":"true"}}
        form: {}
        headers:
            Content-Type:
                - application/json
        url: https://monitoring.googleapis.com/v3/projects/example-project/alertPolicies/17971456350742769146?alt=json&updateMask=displayName%2Ccombiner%2Cenabled%2Cconditions%2CnotificationChannels%2Cdocumentation%2Cseverity
        method: PATCH
      response:
        proto: HTTP/2.0
        proto_major: 2
        proto_minor: 0
        transfer_encoding: []
        trailer: {}
        content_length: -1
        uncompressed: true
        body: |
            {
              "name": "projects/example-project/alertPolicies/17971456350742769146",
              "displayName": "Updated Test Alert Policy",
              "combiner": "OR",
              "creationRecord": {
                "mutateTime": "2024-06-24T17:53:19.490308857Z",
                "mutatedBy": "justinsb@google.com"
              },
              "mutationRecord": {
                "mutateTime": "2024-06-24T17:53:26.035023344Z",
                "mutatedBy": "justinsb@google.com"
              },
              "conditions": [
                {
                  "conditionThreshold": {
                    "filter": "metric.type=\"compute.googleapis.com/instance/cpu/utilization\" AND resource.type=\"gce_instance\"",
                    "comparison": "COMPARISON_LT",
                    "thresholdValue": 0.1,
                    "duration": "900s",
                    "trigger": {
                      "count": 3
                    },
                    "aggregations": [
                      {
                        "alignmentPeriod": "60s",
                        "perSeriesAligner": "ALIGN_MAX",
                        "crossSeriesReducer": "REDUCE_MEAN",
                        "groupByFields": [
                          "project",
                          "resource.label.instance_id",
                          "resource.label.zone"
                        ]
                      }
                    ]
                  },
                  "displayName": "Very low CPU usage",
                  "name": "projects/example-project/alertPolicies/17971456350742769146/conditions/17971456350742768623"
                }
              ],
              "documentation": {
                "content": "“Just the place for a Snark!” the Bellman cried,\nAs he monitored his resources with care;\nSupporting each metric on the top of the tide\nBy a finger entwined in his hair.\n\n“Just the place for a Snark! I have measured it twice:\nThat alone should discourage the crew.\nJust the place for a Snark! I have measured it thrice:\nWhat I measure three times is true.”",
                "mimeType": "text/markdown"
              },
              "notificationChannels": [
                "projects/example-project/notificationChannels/7726733045005565233",
                "projects/example-project/notificationChannels/2866813153676774505"
              ],
              "userLabels": {
                "cnrm-test": "true",
                "managed-by-cnrm": "true"
              },
              "enabled": false,
              "severity": "ERROR"
            }
        headers:
            Content-Type:
                - application/json; charset=UTF-8
        status: 200 OK
        code: 200
        duration: 5.533515959s
    - id: 14
      request:
        proto: HTTP/1.1
        proto_major: 1
        proto_minor: 1
        content_length: 0
        transfer_encoding: []
        trailer: {}
        host: monitoring.googleapis.com
        remote_addr: ""
        request_uri: ""
        body: ""
        form: {}
        headers:
            Content-Type:
                - application/json
        url: https://monitoring.googleapis.com/v3/projects/example-project/alertPolicies/17971456350742769146?alt=json
        method: GET
      response:
        proto: HTTP/2.0
        proto_major: 2
        proto_minor: 0
        transfer_encoding: []
        trailer: {}
        content_length: -1
        uncompressed: true
        body: |
            {
              "name": "projects/example-project/alertPolicies/17971456350742769146",
              "displayName": "Updated Test Alert Policy",
              "combiner": "OR",
              "creationRecord": {
                "mutateTime": "2024-06-24T17:53:19.490308857Z",
                "mutatedBy": "justinsb@google.com"
              },
              "mutationRecord": {
                "mutateTime": "2024-06-24T17:53:26.035023344Z",
                "mutatedBy": "justinsb@google.com"
              },
              "conditions": [
                {
                  "conditionThreshold": {
                    "filter": "metric.type=\"compute.googleapis.com/instance/cpu/utilization\" AND resource.type=\"gce_instance\"",
                    "comparison": "COMPARISON_LT",
                    "thresholdValue": 0.1,
                    "duration": "900s",
                    "trigger": {
                      "count": 3
                    },
                    "aggregations": [
                      {
                        "alignmentPeriod": "60s",
                        "perSeriesAligner": "ALIGN_MAX",
                        "crossSeriesReducer": "REDUCE_MEAN",
                        "groupByFields": [
                          "project",
                          "resource.label.instance_id",
                          "resource.label.zone"
                        ]
                      }
                    ]
                  },
                  "displayName": "Very low CPU usage",
                  "name": "projects/example-project/alertPolicies/17971456350742769146/conditions/17971456350742768623"
                }
              ],
              "documentation": {
                "content": "“Just the place for a Snark!” the Bellman cried,\nAs he monitored his resources with care;\nSupporting each metric on the top of the tide\nBy a finger entwined in his hair.\n\n“Just the place for a Snark! I have measured it twice:\nThat alone should discourage the crew.\nJust the place for a Snark! I have measured it thrice:\nWhat I measure three times is true.”",
                "mimeType": "text/markdown"
              },
              "notificationChannels": [
                "projects/example-project/notificationChannels/7726733045005565233",
                "projects/example-project/notificationChannels/2866813153676774505"
              ],
              "userLabels": {
                "managed-by-cnrm": "true",
                "cnrm-test": "true"
              },
              "enabled": false,
              "severity": "ERROR"
            }
        headers:
            Content-Type:
                - application/json; charset=UTF-8
        status: 200 OK
        code: 200
        duration: 458.882267ms
    - id: 15
      request:
        proto: HTTP/1.1
        proto_major: 1
        proto_minor: 1
        content_length: 0
        transfer_encoding: []
        trailer: {}
        host: monitoring.googleapis.com
        remote_addr: ""
        request_uri: ""
        body: ""
        form: {}
        headers:
            Content-Type:
                - application/json
        url: https://monitoring.googleapis.com/v3/projects/example-project/alertPolicies/17971456350742769146?alt=json
        method: GET
      response:
        proto: HTTP/2.0
        proto_major: 2
        proto_minor: 0
        transfer_encoding: []
        trailer: {}
        content_length: -1
        uncompressed: true
        body: |
            {
              "name": "projects/example-project/alertPolicies/17971456350742769146",
              "displayName": "Updated Test Alert Policy",
              "combiner": "OR",
              "creationRecord": {
                "mutateTime": "2024-06-24T17:53:19.490308857Z",
                "mutatedBy": "justinsb@google.com"
              },
              "mutationRecord": {
                "mutateTime": "2024-06-24T17:53:26.035023344Z",
                "mutatedBy": "justinsb@google.com"
              },
              "conditions": [
                {
                  "conditionThreshold": {
                    "filter": "metric.type=\"compute.googleapis.com/instance/cpu/utilization\" AND resource.type=\"gce_instance\"",
                    "comparison": "COMPARISON_LT",
                    "thresholdValue": 0.1,
                    "duration": "900s",
                    "trigger": {
                      "count": 3
                    },
                    "aggregations": [
                      {
                        "alignmentPeriod": "60s",
                        "perSeriesAligner": "ALIGN_MAX",
                        "crossSeriesReducer": "REDUCE_MEAN",
                        "groupByFields": [
                          "project",
                          "resource.label.instance_id",
                          "resource.label.zone"
                        ]
                      }
                    ]
                  },
                  "displayName": "Very low CPU usage",
                  "name": "projects/example-project/alertPolicies/17971456350742769146/conditions/17971456350742768623"
                }
              ],
              "documentation": {
                "content": "“Just the place for a Snark!” the Bellman cried,\nAs he monitored his resources with care;\nSupporting each metric on the top of the tide\nBy a finger entwined in his hair.\n\n“Just the place for a Snark! I have measured it twice:\nThat alone should discourage the crew.\nJust the place for a Snark! I have measured it thrice:\nWhat I measure three times is true.”",
                "mimeType": "text/markdown"
              },
              "notificationChannels": [
                "projects/example-project/notificationChannels/7726733045005565233",
                "projects/example-project/notificationChannels/2866813153676774505"
              ],
              "userLabels": {
                "cnrm-test": "true",
                "managed-by-cnrm": "true"
              },
              "enabled": false,
              "severity": "ERROR"
            }
        headers:
            Content-Type:
                - application/json; charset=UTF-8
        status: 200 OK
        code: 200
        duration: 439.56287ms
    - id: 16
      request:
        proto: HTTP/1.1
        proto_major: 1
        proto_minor: 1
        content_length: 0
        transfer_encoding: []
        trailer: {}
        host: monitoring.googleapis.com
        remote_addr: ""
        request_uri: ""
        body: ""
        form: {}
        headers:
            Content-Type:
                - application/json
        url: https://monitoring.googleapis.com/v3/projects/example-project/notificationChannels/7726733045005565233?alt=json
        method: GET
      response:
        proto: HTTP/2.0
        proto_major: 2
        proto_minor: 0
        transfer_encoding: []
        trailer: {}
        content_length: -1
        uncompressed: true
        body: |
            {
              "type": "email",
              "displayName": "monitoringnotificationchannel3-41w3iydhydd0",
              "labels": {
                "email_address": "dev@example.com"
              },
              "name": "projects/example-project/notificationChannels/7726733045005565233",
              "userLabels": {
                "managed-by-cnrm": "true",
                "cnrm-test": "true"
              },
              "enabled": true,
              "creationRecord": {
                "mutateTime": "2024-06-24T17:53:10.350354958Z"
              },
              "mutationRecords": [
                {
                  "mutateTime": "2024-06-24T17:53:10.350354958Z"
                }
              ]
            }
        headers:
            Content-Type:
                - application/json; charset=UTF-8
        status: 200 OK
        code: 200
        duration: 157.198155ms
    - id: 17
      request:
        proto: HTTP/1.1
        proto_major: 1
        proto_minor: 1
        content_length: 0
        transfer_encoding: []
        trailer: {}
        host: monitoring.googleapis.com
        remote_addr: ""
        request_uri: ""
        body: ""
        form: {}
        headers:
            Content-Type:
                - application/json
        url: https://monitoring.googleapis.com/v3/projects/example-project/notificationChannels/2866813153676774169?alt=json
        method: GET
      response:
        proto: HTTP/2.0
        proto_major: 2
        proto_minor: 0
        transfer_encoding: []
        trailer: {}
        content_length: -1
        uncompressed: true
        body: |
            {
              "type": "email",
              "displayName": "monitoringnotificationchannel2-41w3iydhydd0",
              "labels": {
                "email_address": "dev@example.com"
              },
              "name": "projects/example-project/notificationChannels/2866813153676774169",
              "userLabels": {
                "managed-by-cnrm": "true",
                "cnrm-test": "true"
              },
              "enabled": true,
              "creationRecord": {
                "mutateTime": "2024-06-24T17:53:13.229632439Z"
              },
              "mutationRecords": [
                {
                  "mutateTime": "2024-06-24T17:53:13.229632439Z"
                }
              ]
            }
        headers:
            Content-Type:
                - application/json; charset=UTF-8
        status: 200 OK
        code: 200
        duration: 163.554454ms
    - id: 18
      request:
        proto: HTTP/1.1
        proto_major: 1
        proto_minor: 1
        content_length: 0
        transfer_encoding: []
        trailer: {}
        host: monitoring.googleapis.com
        remote_addr: ""
        request_uri: ""
        body: ""
        form: {}
        headers:
            Content-Type:
                - application/json
        url: https://monitoring.googleapis.com/v3/projects/example-project/notificationChannels/2866813153676774505?alt=json
        method: GET
      response:
        proto: HTTP/2.0
        proto_major: 2
        proto_minor: 0
        transfer_encoding: []
        trailer: {}
        content_length: -1
        uncompressed: true
        body: |
            {
              "type": "email",
              "displayName": "monitoringnotificationchannel1-41w3iydhydd0",
              "labels": {
                "email_address": "dev@example.com"
              },
              "name": "projects/example-project/notificationChannels/2866813153676774505",
              "userLabels": {
                "managed-by-cnrm": "true",
                "cnrm-test": "true"
              },
              "enabled": true,
              "creationRecord": {
                "mutateTime": "2024-06-24T17:53:16.282199812Z"
              },
              "mutationRecords": [
                {
                  "mutateTime": "2024-06-24T17:53:16.282199812Z"
                }
              ]
            }
        headers:
            Content-Type:
                - application/json; charset=UTF-8
        status: 200 OK
        code: 200
        duration: 162.912864ms
    - id: 19
      request:
        proto: HTTP/1.1
        proto_major: 1
        proto_minor: 1
        content_length: 0
        transfer_encoding: []
        trailer: {}
        host: monitoring.googleapis.com
        remote_addr: ""
        request_uri: ""
        body: ""
        form: {}
        headers:
            Content-Type:
                - application/json
        url: https://monitoring.googleapis.com/v3/projects/example-project/alertPolicies/17971456350742769146?alt=json
        method: GET
      response:
        proto: HTTP/2.0
        proto_major: 2
        proto_minor: 0
        transfer_encoding: []
        trailer: {}
        content_length: -1
        uncompressed: true
        body: |
            {
              "name": "projects/example-project/alertPolicies/17971456350742769146",
              "displayName": "Updated Test Alert Policy",
              "combiner": "OR",
              "creationRecord": {
                "mutateTime": "2024-06-24T17:53:19.490308857Z",
                "mutatedBy": "justinsb@google.com"
              },
              "mutationRecord": {
                "mutateTime": "2024-06-24T17:53:26.035023344Z",
                "mutatedBy": "justinsb@google.com"
              },
              "conditions": [
                {
                  "conditionThreshold": {
                    "filter": "metric.type=\"compute.googleapis.com/instance/cpu/utilization\" AND resource.type=\"gce_instance\"",
                    "comparison": "COMPARISON_LT",
                    "thresholdValue": 0.1,
                    "duration": "900s",
                    "trigger": {
                      "count": 3
                    },
                    "aggregations": [
                      {
                        "alignmentPeriod": "60s",
                        "perSeriesAligner": "ALIGN_MAX",
                        "crossSeriesReducer": "REDUCE_MEAN",
                        "groupByFields": [
                          "project",
                          "resource.label.instance_id",
                          "resource.label.zone"
                        ]
                      }
                    ]
                  },
                  "displayName": "Very low CPU usage",
                  "name": "projects/example-project/alertPolicies/17971456350742769146/conditions/17971456350742768623"
                }
              ],
              "documentation": {
                "content": "“Just the place for a Snark!” the Bellman cried,\nAs he monitored his resources with care;\nSupporting each metric on the top of the tide\nBy a finger entwined in his hair.\n\n“Just the place for a Snark! I have measured it twice:\nThat alone should discourage the crew.\nJust the place for a Snark! I have measured it thrice:\nWhat I measure three times is true.”",
                "mimeType": "text/markdown"
              },
              "notificationChannels": [
                "projects/example-project/notificationChannels/7726733045005565233",
                "projects/example-project/notificationChannels/2866813153676774505"
              ],
              "userLabels": {
                "managed-by-cnrm": "true",
                "cnrm-test": "true"
              },
              "enabled": false,
              "severity": "ERROR"
            }
        headers:
            Content-Type:
                - application/json; charset=UTF-8
        status: 200 OK
        code: 200
        duration: 365.609732ms
    - id: 20
      request:
        proto: HTTP/1.1
        proto_major: 1
        proto_minor: 1
        content_length: 0
        transfer_encoding: []
        trailer: {}
        host: monitoring.googleapis.com
        remote_addr: ""
        request_uri: ""
        body: ""
        form: {}
        headers:
            Content-Type:
                - application/json
        url: https://monitoring.googleapis.com/v3/projects/example-project/notificationChannels/7726733045005565233?alt=json&force=false
        method: DELETE
      response:
        proto: HTTP/2.0
        proto_major: 2
        proto_minor: 0
        transfer_encoding: []
        trailer: {}
        content_length: 0
        uncompressed: true
        body: fake error message
        headers:
            Content-Type:
                - application/json; charset=UTF-8
        status: 400 Bad Request
        code: 400
        duration: 162.254884ms
    - id: 21
      request:
        proto: HTTP/1.1
        proto_major: 1
        proto_minor: 1
        content_length: 0
        transfer_encoding: []
        trailer: {}
        host: monitoring.googleapis.com
        remote_addr: ""
        request_uri: ""
        body: ""
        form: {}
        headers:
            Content-Type:
                - application/json
        url: https://monitoring.googleapis.com/v3/projects/example-project/notificationChannels/2866813153676774505?alt=json&force=false
        method: DELETE
      response:
        proto: HTTP/2.0
        proto_major: 2
        proto_minor: 0
        transfer_encoding: []
        trailer: {}
        content_length: 0
        uncompressed: true
        body: fake error message
        headers:
            Content-Type:
                - application/json; charset=UTF-8
        status: 400 Bad Request
        code: 400
        duration: 169.564414ms
    - id: 22
      request:
        proto: HTTP/1.1
        proto_major: 1
        proto_minor: 1
        content_length: 0
        transfer_encoding: []
        trailer: {}
        host: monitoring.googleapis.com
        remote_addr: ""
        request_uri: ""
        body: ""
        form: {}
        headers:
            Content-Type:
                - application/json
        url: https://monitoring.googleapis.com/v3/projects/example-project/notificationChannels/2866813153676774505?alt=json
        method: GET
      response:
        proto: HTTP/2.0
        proto_major: 2
        proto_minor: 0
        transfer_encoding: []
        trailer: {}
        content_length: -1
        uncompressed: true
        body: |
            {
              "type": "email",
              "displayName": "monitoringnotificationchannel1-41w3iydhydd0",
              "labels": {
                "email_address": "dev@example.com"
              },
              "name": "projects/example-project/notificationChannels/2866813153676774505",
              "userLabels": {
                "cnrm-test": "true",
                "managed-by-cnrm": "true"
              },
              "enabled": true,
              "creationRecord": {
                "mutateTime": "2024-06-24T17:53:16.282199812Z"
              },
              "mutationRecords": [
                {
                  "mutateTime": "2024-06-24T17:53:16.282199812Z"
                }
              ]
            }
        headers:
            Content-Type:
                - application/json; charset=UTF-8
        status: 200 OK
        code: 200
        duration: 138.324898ms
    - id: 23
      request:
        proto: HTTP/1.1
        proto_major: 1
        proto_minor: 1
        content_length: 0
        transfer_encoding: []
        trailer: {}
        host: monitoring.googleapis.com
        remote_addr: ""
        request_uri: ""
        body: ""
        form: {}
        headers:
            Content-Type:
                - application/json
        url: https://monitoring.googleapis.com/v3/projects/example-project/notificationChannels/7726733045005565233?alt=json
        method: GET
      response:
        proto: HTTP/2.0
        proto_major: 2
        proto_minor: 0
        transfer_encoding: []
        trailer: {}
        content_length: -1
        uncompressed: true
        body: |
            {
              "type": "email",
              "displayName": "monitoringnotificationchannel3-41w3iydhydd0",
              "labels": {
                "email_address": "dev@example.com"
              },
              "name": "projects/example-project/notificationChannels/7726733045005565233",
              "userLabels": {
                "cnrm-test": "true",
                "managed-by-cnrm": "true"
              },
              "enabled": true,
              "creationRecord": {
                "mutateTime": "2024-06-24T17:53:10.350354958Z"
              },
              "mutationRecords": [
                {
                  "mutateTime": "2024-06-24T17:53:10.350354958Z"
                }
              ]
            }
        headers:
            Content-Type:
                - application/json; charset=UTF-8
        status: 200 OK
        code: 200
        duration: 149.983056ms
    - id: 24
      request:
        proto: HTTP/1.1
        proto_major: 1
        proto_minor: 1
        content_length: 0
        transfer_encoding: []
        trailer: {}
        host: monitoring.googleapis.com
        remote_addr: ""
        request_uri: ""
        body: ""
        form: {}
        headers:
            Content-Type:
                - application/json
        url: https://monitoring.googleapis.com/v3/projects/example-project/alertPolicies/17971456350742769146?alt=json
        method: DELETE
      response:
        proto: HTTP/2.0
        proto_major: 2
        proto_minor: 0
        transfer_encoding: []
        trailer: {}
        content_length: -1
        uncompressed: true
        body: |
            {}
        headers:
            Content-Type:
                - application/json; charset=UTF-8
        status: 200 OK
        code: 200
        duration: 2.446479002s
    - id: 25
      request:
        proto: HTTP/1.1
        proto_major: 1
        proto_minor: 1
        content_length: 0
        transfer_encoding: []
        trailer: {}
        host: monitoring.googleapis.com
        remote_addr: ""
        request_uri: ""
        body: ""
        form: {}
        headers:
            Content-Type:
                - application/json
        url: https://monitoring.googleapis.com/v3/projects/example-project/notificationChannels/2866813153676774169?alt=json&force=false
        method: DELETE
      response:
        proto: HTTP/2.0
        proto_major: 2
        proto_minor: 0
        transfer_encoding: []
        trailer: {}
        content_length: -1
        uncompressed: true
        body: |
            {}
        headers:
            Content-Type:
                - application/json; charset=UTF-8
        status: 200 OK
        code: 200
        duration: 3.253806355s
    - id: 26
      request:
        proto: HTTP/1.1
        proto_major: 1
        proto_minor: 1
        content_length: 0
        transfer_encoding: []
        trailer: {}
        host: monitoring.googleapis.com
        remote_addr: ""
        request_uri: ""
        body: ""
        form: {}
        headers:
            Content-Type:
                - application/json
        url: https://monitoring.googleapis.com/v3/projects/example-project/notificationChannels/2866813153676774505?alt=json&force=false
        method: DELETE
      response:
        proto: HTTP/2.0
        proto_major: 2
        proto_minor: 0
        transfer_encoding: []
        trailer: {}
        content_length: -1
        uncompressed: true
        body: |
            {}
        headers:
            Content-Type:
                - application/json; charset=UTF-8
        status: 200 OK
        code: 200
        duration: 1.34112753s
    - id: 27
      request:
        proto: HTTP/1.1
        proto_major: 1
        proto_minor: 1
        content_length: 0
        transfer_encoding: []
        trailer: {}
        host: monitoring.googleapis.com
        remote_addr: ""
        request_uri: ""
        body: ""
        form: {}
        headers:
            Content-Type:
                - application/json
        url: https://monitoring.googleapis.com/v3/projects/example-project/notificationChannels/7726733045005565233?alt=json&force=false
        method: DELETE
      response:
        proto: HTTP/2.0
        proto_major: 2
        proto_minor: 0
        transfer_encoding: []
        trailer: {}
        content_length: -1
        uncompressed: true
        body: |
            {}
        headers:
            Content-Type:
                - application/json; charset=UTF-8
        status: 200 OK
        code: 200
        duration: 1.384605963s
