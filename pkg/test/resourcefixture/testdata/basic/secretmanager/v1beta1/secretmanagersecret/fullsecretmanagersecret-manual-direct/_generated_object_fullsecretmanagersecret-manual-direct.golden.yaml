apiVersion: secretmanager.cnrm.cloud.google.com/v1beta1
kind: SecretManagerSecret
metadata:
  annotations:
    alpha.cnrm.cloud.google.com/reconciler: direct
    alpha.cnrm.cloud.google.com/remove-this-annotation-2: "true"
    cnrm.cloud.google.com/management-conflict-prevention-policy: none
    cnrm.cloud.google.com/project-id: ${projectId}
    cnrm.cloud.google.com/remove-this-annotation: "true"
    configsync.gke.io: "true"
    kubectl.kubernetes.io/last-applied-configuration: '{}'
  finalizers:
  - cnrm.cloud.google.com/finalizer
  - cnrm.cloud.google.com/deletion-defender
  generation: 2
  labels:
    cnrm-test: "true"
    configsync.gke.io: "true"
    metadata-label-one: value-one
    metadata-label-two: value-two
  name: secretmanagersecret-${uniqueId}
  namespace: ${uniqueId}
spec:
  annotations:
    bar: secretmanagersecret-bar
    foo: secretmanagersecret
  labels:
    spec-label-one: value-one
    spec-label-two: value-two
  replication:
    userManaged:
      replicas:
      - customerManagedEncryption:
          kmsKeyRef:
            name: kmscryptokey-${uniqueId}
        location: us-central1
  rotation:
    nextRotationTime: "2025-10-03T15:01:23Z"
    rotationPeriod: 7200s
  topics:
  - topicRef:
      name: topic-2-${uniqueId}
  ttl: 110s
status:
  conditions:
  - lastTransitionTime: "1970-01-01T00:00:00Z"
    message: The resource is up to date
    reason: UpToDate
    status: "True"
    type: Ready
  externalRef: projects/${projectId}/secrets/secretmanagersecret-${uniqueId}
  name: projects/${projectNumber}/secrets/secretmanagersecret-${uniqueId}
  observedGeneration: 2
  observedState: {}
