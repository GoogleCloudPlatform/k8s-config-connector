--- a/v1alpha1
+++ b/v1beta1
  &v1.JSONSchemaProps{
  	... // 26 identical fields
  	AnyOf: nil,
  	Not:   nil,
  	Properties: map[string]v1.JSONSchemaProps{
  		... // 2 identical entries
  		"metadata": {Type: "object"},
  		"spec":     {Description: "NotebookInstanceSpec defines the desired state of NotebookInstance", Type: "object", Required: {"projectRef", "zone"}, Properties: {"acceleratorConfig": {Description: "The hardware accelerator used on this instance. If you use accel"..., Type: "object", Properties: {"coreCount": {Description: "Count of cores of this accelerator.", Type: "integer", Format: "int64"}, "type": {Description: "Type of this accelerator.", Type: "string"}}}, "bootDiskSizeGB": {Description: "Input only. The size of the boot disk in GB attached to this ins"..., Type: "integer", Format: "int64"}, "bootDiskType": {Description: "Input only. The type of the boot disk attached to this instance,"..., Type: "string"}, "canIPForward": {Description: "Optional. Flag to enable ip forwarding or not, default false/off"..., Type: "boolean"}, ...}, ...},
  		"status": {
  			... // 26 identical fields
  			AnyOf: nil,
  			Not:   nil,
  			Properties: map[string]v1.JSONSchemaProps{
  				"conditions":         {Description: "Conditions represent the latest available observations of the ob"..., Type: "array", Items: &{Schema: &{Type: "object", Properties: {"lastTransitionTime": {Description: "Last time the condition transitioned from one status to another.", Type: "string"}, "message": {Description: "Human-readable message indicating details about last transition.", Type: "string"}, "reason": {Description: "Unique, one-word, CamelCase reason for the condition's last tran"..., Type: "string"}, "status": {Description: "Status is the status of the condition. Can be True, False, Unknown.", Type: "string"}, ...}}}},
  				"externalRef":        {Description: "A unique specifier for the NotebookInstance resource in GCP.", Type: "string"},
  				"observedGeneration": {Description: "ObservedGeneration is the generation of the resource that was mo"..., Type: "integer", Format: "int64"},
  				"observedState": {
  					... // 26 identical fields
  					AnyOf: nil,
  					Not:   nil,
  					Properties: map[string]v1.JSONSchemaProps{
  						"createTime": {Description: "Output only. Instance creation time.", Type: "string"},
  						"creator":    {Description: "Output only. Email address of entity that sent original CreateIn"..., Type: "string"},
  						"disks":      {Description: "Output only. Attached disks to notebook instance.", Type: "array", Items: &{Schema: &{Type: "object", Properties: {"autoDelete": {Description: "Indicates whether the disk will be auto-deleted when the instanc"..., Type: "boolean"}, "boot": {Description: "Indicates that this is a boot disk. The virtual machine will use"..., Type: "boolean"}, "deviceName": {Description: "Indicates a unique device name of your choice that is reflected "..., Type: "string"}, "diskSizeGB": {Description: "Indicates the size of the disk in base-2 GB.", Type: "integer", Format: "int64"}, ...}}}},
- 						"name": {
- 							Description: "Output only. The name of this notebook instance. Format: `projects/{project_id}/locations/{location}/instances/{instance_id}`",
- 							Type:        "string",
- 						},
  						"proxyURI":   {Description: "Output only. The proxy endpoint that is used to access the Jupyt"..., Type: "string"},
  						"state":      {Description: "Output only. The state of this instance.", Type: "string"},
  						"updateTime": {Description: "Output only. Instance update time.", Type: "string"},
  					},
  					AdditionalProperties: nil,
  					PatternProperties:    nil,
  					... // 13 identical fields
  				},
  			},
  			AdditionalProperties: nil,
  			PatternProperties:    nil,
  			... // 13 identical fields
  		},
  	},
  	AdditionalProperties: nil,
  	PatternProperties:    nil,
  	... // 13 identical fields
  }

