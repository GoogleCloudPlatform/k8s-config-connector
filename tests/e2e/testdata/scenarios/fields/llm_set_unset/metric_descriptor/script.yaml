# Copyright 2024 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: logging.cnrm.cloud.google.com/v1beta1
kind: LoggingLogMetric
metadata:
  name: logginglogmetric-${uniqueId}
  annotations:
    cnrm.cloud.google.com/state-into-spec: absent
spec:
  filter: "resource.type=gae_app AND severity<=ERROR"
  metricDescriptor:
    metricKind: "DELTA"
    valueType: "DISTRIBUTION"
  valueExtractor: "EXTRACT(jsonPayload.response)"
  bucketOptions:
    explicitBuckets:
      bounds:
      - 1.5
      - 4.5
  projectRef:
    external: "projects/${projectId}"
---
apiVersion: logging.cnrm.cloud.google.com/v1beta1
kind: LoggingLogMetric
metadata:
  name: logginglogmetric-${uniqueId}
  annotations:
    cnrm.cloud.google.com/state-into-spec: absent
spec:
  filter: "resource.type=gae_app AND severity<=ERROR"
  metricDescriptor:
    displayName: "a concise name"
    launchStage: "EARLY_ACCESS"
    metadata:
      ingestDelay: "1s"
      samplePeriod: "1s"
    labels:
    - description: "a label description"
      key: "testkey"
      valueType: "STRING"
    metricKind: "DELTA"
    valueType: "DISTRIBUTION"
  valueExtractor: "EXTRACT(jsonPayload.response)"
  labelExtractors:
    testkey: "EXTRACT(jsonPayload.request)"
  bucketOptions:
    explicitBuckets:
      bounds:
      - 1.5
      - 4.5
  projectRef:
    external: "projects/${projectId}"
---
apiVersion: logging.cnrm.cloud.google.com/v1beta1
kind: LoggingLogMetric
metadata:
  name: logginglogmetric-${uniqueId}
  annotations:
    cnrm.cloud.google.com/state-into-spec: absent
spec:
  filter: "resource.type=gae_app AND severity<=ERROR"
  metricDescriptor:
    metricKind: "DELTA"
    valueType: "DISTRIBUTION"
  valueExtractor: "EXTRACT(jsonPayload.response)"
  bucketOptions:
    explicitBuckets:
      bounds:
      - 1.5
      - 4.5
  projectRef:
    external: "projects/${projectId}"
