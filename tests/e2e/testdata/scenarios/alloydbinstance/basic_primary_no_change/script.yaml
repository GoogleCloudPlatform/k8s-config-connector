# Copyright 2024 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Adding this scenario test to cover the nochange behavior in presubmit tests.
# This is because TestAllInSeries function doesn't cover the nochange test step.
#
# During the re-reconciliation / drift-correction every 5-15 minutes, commonly
# there shouldn't be any change (i.e. the "nochange") in both the KRM object and
# the underlying GCP resource, so NO PATCH/POST API call should be made to the
# underlying GCP resource. If there is a PATCH/POST call made when both the KRM
# object and the underlying GCP resource are unchanged, it means something is
# wrong in the Update logic.

# 00
apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeNetwork
metadata:
  name: computenetwork-${uniqueId}
spec:
  autoCreateSubnetworks: false
---
# 01
apiVersion: alloydb.cnrm.cloud.google.com/v1beta1
kind: AlloyDBCluster
metadata:
  name: alloydbcluster-${uniqueId}
spec:
  initialUser:
    password:
      value: alloydb-pg
  location: europe-west1
  networkConfig:
    networkRef:
      name: computenetwork-${uniqueId}
  projectRef:
    external: ${projectId}
---
# 02
apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeAddress
metadata:
  name: computeaddress-${uniqueId}
spec:
  location: global
  addressType: INTERNAL
  networkRef:
    name: computenetwork-${uniqueId}
  prefixLength: 16
  purpose: VPC_PEERING
---
# 03
apiVersion: servicenetworking.cnrm.cloud.google.com/v1beta1
kind: ServiceNetworkingConnection
metadata:
  name: servicenetworkingconnection-${uniqueId}
spec:
  networkRef:
    name: computenetwork-${uniqueId}
  reservedPeeringRanges:
    - name: computeaddress-${uniqueId}
  service: servicenetworking.googleapis.com
---
# 04
apiVersion: alloydb.cnrm.cloud.google.com/v1beta1
kind: AlloyDBInstance
metadata:
  annotations:
    alpha.cnrm.cloud.google.com/reconciler: "direct"
  name: alloydbinstance-${uniqueId}
spec:
  clusterRef:
    name: alloydbcluster-${uniqueId}
  instanceTypeRef:
    name: alloydbcluster-${uniqueId}
---
# 05: Trigger the reconciliation with no change because this step just sets
# `spec.resourceID`.
# _http05.log should not contain a PATCH request.
apiVersion: alloydb.cnrm.cloud.google.com/v1beta1
kind: AlloyDBInstance
metadata:
  annotations:
    alpha.cnrm.cloud.google.com/reconciler: "direct"
  name: alloydbinstance-${uniqueId}
spec:
  clusterRef:
    name: alloydbcluster-${uniqueId}
  instanceTypeRef:
    name: alloydbcluster-${uniqueId}
  resourceID: alloydbinstance-${uniqueId}
