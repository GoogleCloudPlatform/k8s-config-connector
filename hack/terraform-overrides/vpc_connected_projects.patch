diff --git a/third_party/github.com/hashicorp/terraform-provider-google-beta/google-beta/services/vpcaccess/resource_vpc_access_connector.go b/third_party/github.com/hashicorp/terraform-provider-google-beta/google-beta/services/vpcaccess/resource_vpc_access_connector.go
index 415c9ff13..da6837d62 100644
--- a/third_party/github.com/hashicorp/terraform-provider-google-beta/google-beta/services/vpcaccess/resource_vpc_access_connector.go
+++ b/third_party/github.com/hashicorp/terraform-provider-google-beta/google-beta/services/vpcaccess/resource_vpc_access_connector.go
@@ -135,6 +135,14 @@ https://compute.googleapis.com/compute/v1/projects/{project}/regions/{region}/su
 					},
 				},
 			},
+			"connected_projects": {
+				Type:        schema.TypeList,
+				Computed:    true,
+				Description: `List of projects using the connector.`,
+				Elem: &schema.Schema{
+					Type: schema.TypeString,
+				},
+			},
 			"self_link": {
 				Type:        schema.TypeString,
 				Computed:    true,
@@ -370,6 +378,9 @@ func resourceVPCAccessConnectorRead(d *schema.ResourceData, meta interface{}) er
 	if err := d.Set("max_throughput", flattenVPCAccessConnectorMaxThroughput(res["maxThroughput"], d, config)); err != nil {
 		return fmt.Errorf("Error reading Connector: %s", err)
 	}
+	if err := d.Set("connected_projects", flattenVPCAccessConnectorConnectedProjects(res["connectedProjects"], d, config)); err != nil {
+		return fmt.Errorf("Error reading Connector: %s", err)
+	}
 	if err := d.Set("subnet", flattenVPCAccessConnectorSubnet(res["subnet"], d, config)); err != nil {
 		return fmt.Errorf("Error reading Connector: %s", err)
 	}
@@ -537,6 +548,10 @@ func flattenVPCAccessConnectorMaxThroughput(v interface{}, d *schema.ResourceDat
 	return v // let terraform core handle it otherwise
 }
 
+func flattenVPCAccessConnectorConnectedProjects(v interface{}, d *schema.ResourceData, config *transport_tpg.Config) interface{} {
+	return v
+}
+
 func flattenVPCAccessConnectorSubnet(v interface{}, d *schema.ResourceData, config *transport_tpg.Config) interface{} {
 	if v == nil {
 		return nil
