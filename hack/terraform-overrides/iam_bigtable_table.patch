diff --git a/third_party/github.com/hashicorp/terraform-provider-google-beta/google-beta/services/bigtable/iam_bigtable_table.go b/third_party/github.com/hashicorp/terraform-provider-google-beta/google-beta/services/bigtable/iam_bigtable_table.go
index 7bbaa70eb..6ac97ba40 100644
--- a/third_party/github.com/hashicorp/terraform-provider-google-beta/google-beta/services/bigtable/iam_bigtable_table.go
+++ b/third_party/github.com/hashicorp/terraform-provider-google-beta/google-beta/services/bigtable/iam_bigtable_table.go
@@ -13,7 +13,7 @@ import (
 )
 
 var IamBigtableTableSchema = map[string]*schema.Schema{
-	"instance": {
+	"instance_name": {
 		Type:     schema.TypeString,
 		Required: true,
 		ForceNew: true,
@@ -51,7 +51,7 @@ func NewBigtableTableUpdater(d tpgresource.TerraformResourceData, config *transp
 
 	return &BigtableTableIamUpdater{
 		project:  project,
-		instance: d.Get("instance").(string),
+		instance: d.Get("instance_name").(string),
 		table:    d.Get("table").(string),
 		d:        d,
 		Config:   config,
@@ -61,7 +61,7 @@ func NewBigtableTableUpdater(d tpgresource.TerraformResourceData, config *transp
 func BigtableTableIdParseFunc(d *schema.ResourceData, config *transport_tpg.Config) error {
 	values := make(map[string]string)
 
-	m, err := tpgresource.GetImportIdQualifiers([]string{"projects/(?P<project>[^/]+)/instances/(?P<instance>[^/]+)/tables/(?P<table>[^/]+)"}, d, config, d.Id())
+	m, err := tpgresource.GetImportIdQualifiers([]string{"projects/(?P<project>[^/]+)/instances/(?P<instance_name>[^/]+)/tables/(?P<table>[^/]+)"}, d, config, d.Id())
 	if err != nil {
 		return err
 	}
@@ -76,7 +76,7 @@ func BigtableTableIdParseFunc(d *schema.ResourceData, config *transport_tpg.Conf
 		return fmt.Errorf("Error setting project: %s", err)
 	}
 
-	if err := d.Set("instance", values["instance"]); err != nil {
+	if err := d.Set("instance_name", values["instance_name"]); err != nil {
 		return fmt.Errorf("Error setting instance: %s", err)
 	}
 
@@ -85,7 +85,7 @@ func BigtableTableIdParseFunc(d *schema.ResourceData, config *transport_tpg.Conf
 	}
 
 	// Explicitly set the id so imported resources have the same ID format as non-imported ones.
-	d.SetId(fmt.Sprintf("projects/%s/instances/%s/tables/%s", project, values["instance"], values["table"]))
+	d.SetId(fmt.Sprintf("projects/%s/instances/%s/tables/%s", project, values["instance_name"], values["table"]))
 	return nil
 }
 
