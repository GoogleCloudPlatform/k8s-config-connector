diff --git a/third_party/github.com/hashicorp/terraform-provider-google-beta/google-beta/services/bigtable/resource_bigtable_instance.go b/third_party/github.com/hashicorp/terraform-provider-google-beta/google-beta/services/bigtable/resource_bigtable_instance.go
index 7aeb23e6a..a1f152fa0 100644
--- a/third_party/github.com/hashicorp/terraform-provider-google-beta/google-beta/services/bigtable/resource_bigtable_instance.go
+++ b/third_party/github.com/hashicorp/terraform-provider-google-beta/google-beta/services/bigtable/resource_bigtable_instance.go
@@ -62,6 +62,7 @@ func ResourceBigtableInstance() *schema.Resource {
 						},
 						"zone": {
 							Type:        schema.TypeString,
+							Required:    true,
 							Computed:    true,
 							Optional:    true,
 							Description: `The zone to create the Cloud Bigtable cluster in. Each cluster must have a different zone in the same region. Zones that support Bigtable instances are noted on the Cloud Bigtable locations page.`,
@@ -139,10 +140,11 @@ func ResourceBigtableInstance() *schema.Resource {
 			},
 
 			"deletion_protection": {
-				Type:        schema.TypeBool,
-				Optional:    true,
-				Default:     true,
-				Description: `Whether or not to allow Terraform to destroy the instance. Unless this field is set to false in Terraform state, a terraform destroy or terraform apply that would delete the instance will fail.`,
+				Type:             schema.TypeBool,
+				Optional:         true,
+				Default:          false,
+				DiffSuppressFunc: bigtableInstanceDeletionProtectionDiffSuppress,
+				Deprecated:       "This field no longer serves any function and is intended to be dropped in a later version of the resource.",
 			},
 
 			"labels": {
@@ -261,6 +263,16 @@ func resourceBigtableInstanceRead(d *schema.ResourceData, meta interface{}) erro
 		return fmt.Errorf("Error setting project: %s", err)
 	}
 
+	var instanceType string
+	if instance.InstanceType == bigtable.DEVELOPMENT {
+		instanceType = "DEVELOPMENT"
+	} else {
+		instanceType = "PRODUCTION"
+	}
+	if err := d.Set("instance_type", instanceType); err != nil {
+		return fmt.Errorf("Error setting instance_type: %s", err)
+	}
+
 	clusters, err := c.Clusters(ctx, instance.Name)
 	if err != nil {
 		partiallyUnavailableErr, ok := err.(bigtable.ErrPartiallyUnavailable)
@@ -296,8 +308,6 @@ func resourceBigtableInstanceRead(d *schema.ResourceData, meta interface{}) erro
 	if err := d.Set("labels", instance.Labels); err != nil {
 		return fmt.Errorf("Error setting labels: %s", err)
 	}
-	// Don't set instance_type: we don't want to detect drift on it because it can
-	// change under-the-hood.
 
 	return nil
 }
@@ -356,9 +366,6 @@ func resourceBigtableInstanceUpdate(d *schema.ResourceData, meta interface{}) er
 }
 
 func resourceBigtableInstanceDestroy(d *schema.ResourceData, meta interface{}) error {
-	if d.Get("deletion_protection").(bool) {
-		return fmt.Errorf("cannot destroy instance without setting deletion_protection=false and running `terraform apply`")
-	}
 	config := meta.(*transport_tpg.Config)
 	userAgent, err := tpgresource.GenerateUserAgentString(d, config.UserAgent)
 	if err != nil {
@@ -625,3 +632,10 @@ func resourceBigtableInstanceImport(d *schema.ResourceData, meta interface{}) ([
 
 	return []*schema.ResourceData{d}, nil
 }
+
+func bigtableInstanceDeletionProtectionDiffSuppress(_, _, _ string, _ *schema.ResourceData) bool {
+	// Always suppress diffs for "deletion_protection" since the field no
+	// longer serves any purpose, and the intention is to remove it from the
+	// resource in the future.
+	return true
+}
