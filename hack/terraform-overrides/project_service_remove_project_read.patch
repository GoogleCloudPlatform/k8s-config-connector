diff --git a/third_party/github.com/hashicorp/terraform-provider-google-beta/google-beta/services/resourcemanager/resource_google_project_service.go b/third_party/github.com/hashicorp/terraform-provider-google-beta/google-beta/services/resourcemanager/resource_google_project_service.go
index 3b20ff852..59adfbf26 100644
--- a/third_party/github.com/hashicorp/terraform-provider-google-beta/google-beta/services/resourcemanager/resource_google_project_service.go
+++ b/third_party/github.com/hashicorp/terraform-provider-google-beta/google-beta/services/resourcemanager/resource_google_project_service.go
@@ -12,7 +12,6 @@ import (
 	transport_tpg "github.com/hashicorp/terraform-provider-google-beta/google-beta/transport"
 	"github.com/hashicorp/terraform-provider-google-beta/google-beta/verify"
 
-	"google.golang.org/api/googleapi"
 	"google.golang.org/api/serviceusage/v1"
 )
 
@@ -181,10 +180,6 @@ func resourceGoogleProjectServiceCreate(d *schema.ResourceData, meta interface{}
 
 func resourceGoogleProjectServiceRead(d *schema.ResourceData, meta interface{}) error {
 	config := meta.(*transport_tpg.Config)
-	userAgent, err := tpgresource.GenerateUserAgentString(d, config.UserAgent)
-	if err != nil {
-		return err
-	}
 
 	project, err := tpgresource.GetProject(d, config)
 	if err != nil {
@@ -192,30 +187,6 @@ func resourceGoogleProjectServiceRead(d *schema.ResourceData, meta interface{})
 	}
 	project = tpgresource.GetResourceNameFromSelfLink(project)
 
-	// Verify project for services still exists
-	projectGetCall := config.NewResourceManagerClient(userAgent).Projects.Get(project)
-	if config.UserProjectOverride {
-		billingProject := project
-
-		// err == nil indicates that the billing_project value was found
-		if bp, err := tpgresource.GetBillingProject(d, config); err == nil {
-			billingProject = bp
-		}
-		projectGetCall.Header().Add("X-Goog-User-Project", billingProject)
-	}
-	p, err := projectGetCall.Do()
-
-	if err == nil && p.LifecycleState == "DELETE_REQUESTED" {
-		// Construct a 404 error for transport_tpg.HandleNotFoundError
-		err = &googleapi.Error{
-			Code:    404,
-			Message: "Project deletion was requested",
-		}
-	}
-	if err != nil {
-		return transport_tpg.HandleNotFoundError(err, d, fmt.Sprintf("Project Service %s", d.Id()))
-	}
-
 	servicesRaw, err := BatchRequestReadServices(project, d, config)
 	if err != nil {
 		return transport_tpg.HandleNotFoundError(err, d, fmt.Sprintf("Project Service %s", d.Id()))
