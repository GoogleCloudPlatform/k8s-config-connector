# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

diff --git a/third_party/github.com/hashicorp/terraform-provider-google-beta/google-beta/services/kms/resource_kms_crypto_key.go b/third_party/github.com/hashicorp/terraform-provider-google-beta/google-beta/services/kms/resource_kms_crypto_key.go
index f622b452b..7240692a8 100644
--- a/third_party/github.com/hashicorp/terraform-provider-google-beta/google-beta/services/kms/resource_kms_crypto_key.go
+++ b/third_party/github.com/hashicorp/terraform-provider-google-beta/google-beta/services/kms/resource_kms_crypto_key.go
@@ -139,6 +139,13 @@ See the [algorithm reference](https://cloud.google.com/kms/docs/reference/rest/v
 					},
 				},
 			},
+			// Preserve the output-only field 'self_link' since both terraform and DCL based resources are relying on the 'self_link' field for resource reference resolution.
+			// TODO(b/200559394): we can remove this patch once KCC supports canonical 'status.id'.
+			"self_link": {
+				Type:        schema.TypeString,
+				Computed:    true,
+				Description: "The self link of the created key in the format projects/{project}/locations/{location}/keyRings/{keyRingName}/cryptoKeys/{name}.",
+			},
 		},
 		UseJSONNumber: true,
 	}
@@ -571,6 +578,10 @@ func resourceKMSCryptoKeyUpdateEncoder(d *schema.ResourceData, meta interface{},
 }

 func resourceKMSCryptoKeyDecoder(d *schema.ResourceData, meta interface{}, res map[string]interface{}) (map[string]interface{}, error) {
+	// Take the returned long form of the name and use it as `self_link`.
+	if err := d.Set("self_link", res["name"].(string)); err != nil {
+		return nil, fmt.Errorf("Error setting self_link: %s", err)
+	}
 	// Modify the name to be the user specified form.
 	// We can't just ignore_read on `name` as the linter will
 	// complain that the returned `res` is never used afterwards.
