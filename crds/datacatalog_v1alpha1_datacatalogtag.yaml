# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cnrm.cloud.google.com/version: 1.124.0
  creationTimestamp: null
  labels:
    cnrm.cloud.google.com/managed-by-kcc: "true"
    cnrm.cloud.google.com/stability-level: alpha
    cnrm.cloud.google.com/system: "true"
    cnrm.cloud.google.com/tf2crd: "true"
  name: datacatalogtags.datacatalog.cnrm.cloud.google.com
spec:
  group: datacatalog.cnrm.cloud.google.com
  names:
    categories:
    - gcp
    kind: DataCatalogTag
    plural: datacatalogtags
    shortNames:
    - gcpdatacatalogtag
    - gcpdatacatalogtags
    singular: datacatalogtag
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: When 'True', the most recent reconcile of the resource succeeded
      jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - description: The reason for the value in 'Ready'
      jsonPath: .status.conditions[?(@.type=='Ready')].reason
      name: Status
      type: string
    - description: The last transition time for the value in 'Status'
      jsonPath: .status.conditions[?(@.type=='Ready')].lastTransitionTime
      name: Status Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'apiVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
            type: string
          kind:
            description: 'kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              column:
                description: |-
                  Resources like Entry can have schemas associated with them. This scope allows users to attach tags to an
                  individual column based on that schema.

                  For attaching a tag to a nested column, use '.' to separate the column names. Example:
                  'outer_column.inner_column'.
                type: string
              fields:
                description: |-
                  This maps the ID of a tag field to the value of and additional information about that field.
                  Valid field IDs are defined by the tag's template. A tag must have at least 1 field and at most 500 fields.
                items:
                  properties:
                    boolValue:
                      description: Holds the value for a tag field with boolean type.
                      type: boolean
                    displayName:
                      description: The display name of this field.
                      type: string
                    doubleValue:
                      description: Holds the value for a tag field with double type.
                      type: number
                    enumValue:
                      description: The display name of the enum value.
                      type: string
                    fieldName:
                      type: string
                    order:
                      description: |-
                        The order of this field with respect to other fields in this tag. For example, a higher value can indicate
                        a more important field. The value can be negative. Multiple fields can have the same order, and field orders
                        within a tag do not have to be sequential.
                      type: integer
                    stringValue:
                      description: Holds the value for a tag field with string type.
                      type: string
                    timestampValue:
                      description: Holds the value for a tag field with timestamp
                        type.
                      type: string
                  required:
                  - fieldName
                  type: object
                type: array
              parent:
                description: |-
                  Immutable. The name of the parent this tag is attached to. This can be the name of an entry or an entry group. If an entry group, the tag will be attached to
                  all entries in that group.
                type: string
              resourceID:
                description: Immutable. Optional. The service-generated name of the
                  resource. Used for acquisition only. Leave unset to create a new
                  resource.
                type: string
              template:
                description: |-
                  Immutable. The resource name of the tag template that this tag uses. Example:
                  projects/{project_id}/locations/{location}/tagTemplates/{tagTemplateId}
                  This field cannot be modified after creation.
                type: string
            required:
            - fields
            - template
            type: object
          status:
            properties:
              conditions:
                description: Conditions represent the latest available observation
                  of the resource's current state.
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's
                        last transition.
                      type: string
                    status:
                      description: Status is the status of the condition. Can be True,
                        False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  type: object
                type: array
              name:
                description: |-
                  The resource name of the tag in URL format. Example:
                  projects/{project_id}/locations/{location}/entrygroups/{entryGroupId}/entries/{entryId}/tags/{tag_id} or
                  projects/{project_id}/locations/{location}/entrygroups/{entryGroupId}/tags/{tag_id}
                  where tag_id is a system-generated identifier. Note that this Tag may not actually be stored in the location in this name.
                type: string
              observedGeneration:
                description: ObservedGeneration is the generation of the resource
                  that was most recently observed by the Config Connector controller.
                  If this is equal to metadata.generation, then that means that the
                  current reported status reflects the most recent desired state of
                  the resource.
                type: integer
              templateDisplayname:
                description: The display name of the tag template.
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
