# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cnrm.cloud.google.com/version: 1.124.0
  creationTimestamp: null
  labels:
    cnrm.cloud.google.com/managed-by-kcc: "true"
    cnrm.cloud.google.com/stability-level: alpha
    cnrm.cloud.google.com/system: "true"
    cnrm.cloud.google.com/tf2crd: "true"
  name: dialogflowcxintents.dialogflowcx.cnrm.cloud.google.com
spec:
  group: dialogflowcx.cnrm.cloud.google.com
  names:
    categories:
    - gcp
    kind: DialogflowCXIntent
    plural: dialogflowcxintents
    shortNames:
    - gcpdialogflowcxintent
    - gcpdialogflowcxintents
    singular: dialogflowcxintent
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: When 'True', the most recent reconcile of the resource succeeded
      jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - description: The reason for the value in 'Ready'
      jsonPath: .status.conditions[?(@.type=='Ready')].reason
      name: Status
      type: string
    - description: The last transition time for the value in 'Status'
      jsonPath: .status.conditions[?(@.type=='Ready')].lastTransitionTime
      name: Status Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'apiVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
            type: string
          kind:
            description: 'kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              description:
                description: 'Human readable description for better understanding
                  an intent like its scope, content, result etc. Maximum character
                  limit: 140 characters.'
                type: string
              displayName:
                description: The human-readable name of the intent, unique within
                  the agent.
                type: string
              isFallback:
                description: |-
                  Indicates whether this is a fallback intent. Currently only default fallback intent is allowed in the agent, which is added upon agent creation.
                  Adding training phrases to fallback intent is useful in the case of requests that are mistakenly matched, since training phrases assigned to fallback intents act as negative examples that triggers no-match event.
                type: boolean
              languageCode:
                description: |-
                  Immutable. The language of the following fields in intent:
                  Intent.training_phrases.parts.text
                  If not specified, the agent's default language is used. Many languages are supported. Note: languages must be enabled in the agent before they can be used.
                type: string
              parameters:
                description: The collection of parameters associated with the intent.
                items:
                  properties:
                    entityType:
                      description: |-
                        The entity type of the parameter.
                        Format: projects/-/locations/-/agents/-/entityTypes/<System Entity Type ID> for system entity types (for example, projects/-/locations/-/agents/-/entityTypes/sys.date), or projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/entityTypes/<Entity Type ID> for developer entity types.
                      type: string
                    id:
                      description: The unique identifier of the parameter. This field
                        is used by training phrases to annotate their parts.
                      type: string
                    isList:
                      description: Indicates whether the parameter represents a list
                        of values.
                      type: boolean
                    redact:
                      description: |-
                        Indicates whether the parameter content should be redacted in log. If redaction is enabled, the parameter content will be replaced by parameter name during logging.
                        Note: the parameter content is subject to redaction if either parameter level redaction or entity type level redaction is enabled.
                      type: boolean
                  required:
                  - entityType
                  - id
                  type: object
                type: array
              parent:
                description: |-
                  Immutable. The agent to create an intent for.
                  Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>.
                type: string
              priority:
                description: |-
                  The priority of this intent. Higher numbers represent higher priorities.
                  If the supplied value is unspecified or 0, the service translates the value to 500,000, which corresponds to the Normal priority in the console.
                  If the supplied value is negative, the intent is ignored in runtime detect intent requests.
                type: integer
              resourceID:
                description: Immutable. Optional. The service-generated name of the
                  resource. Used for acquisition only. Leave unset to create a new
                  resource.
                type: string
              trainingPhrases:
                description: The collection of training phrases the agent is trained
                  on to identify the intent.
                items:
                  properties:
                    id:
                      description: The unique identifier of the training phrase.
                      type: string
                    parts:
                      description: |-
                        The ordered list of training phrase parts. The parts are concatenated in order to form the training phrase.
                        Note: The API does not automatically annotate training phrases like the Dialogflow Console does.
                        Note: Do not forget to include whitespace at part boundaries, so the training phrase is well formatted when the parts are concatenated.
                        If the training phrase does not need to be annotated with parameters, you just need a single part with only the Part.text field set.
                        If you want to annotate the training phrase, you must create multiple parts, where the fields of each part are populated in one of two ways:
                        Part.text is set to a part of the phrase that has no parameters.
                        Part.text is set to a part of the phrase that you want to annotate, and the parameterId field is set.
                      items:
                        properties:
                          parameterId:
                            description: The parameter used to annotate this part
                              of the training phrase. This field is required for annotated
                              parts of the training phrase.
                            type: string
                          text:
                            description: The text for this part.
                            type: string
                        required:
                        - text
                        type: object
                      type: array
                    repeatCount:
                      description: Indicates how many times this example was added
                        to the intent.
                      type: integer
                  required:
                  - parts
                  type: object
                type: array
            required:
            - displayName
            type: object
          status:
            properties:
              conditions:
                description: Conditions represent the latest available observation
                  of the resource's current state.
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's
                        last transition.
                      type: string
                    status:
                      description: Status is the status of the condition. Can be True,
                        False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  type: object
                type: array
              name:
                description: |-
                  The unique identifier of the intent.
                  Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/intents/<Intent ID>.
                type: string
              observedGeneration:
                description: ObservedGeneration is the generation of the resource
                  that was most recently observed by the Config Connector controller.
                  If this is equal to metadata.generation, then that means that the
                  current reported status reflects the most recent desired state of
                  the resource.
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
