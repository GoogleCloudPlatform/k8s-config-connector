# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cnrm.cloud.google.com/version: 1.125.0
  creationTimestamp: null
  labels:
    cnrm.cloud.google.com/dcl2crd: "true"
    cnrm.cloud.google.com/managed-by-kcc: "true"
    cnrm.cloud.google.com/stability-level: stable
    cnrm.cloud.google.com/system: "true"
  name: monitoringuptimecheckconfigs.monitoring.cnrm.cloud.google.com
spec:
  group: monitoring.cnrm.cloud.google.com
  names:
    categories:
    - gcp
    kind: MonitoringUptimeCheckConfig
    plural: monitoringuptimecheckconfigs
    shortNames:
    - gcpmonitoringuptimecheckconfig
    - gcpmonitoringuptimecheckconfigs
    singular: monitoringuptimecheckconfig
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: When 'True', the most recent reconcile of the resource succeeded
      jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - description: The reason for the value in 'Ready'
      jsonPath: .status.conditions[?(@.type=='Ready')].reason
      name: Status
      type: string
    - description: The last transition time for the value in 'Status'
      jsonPath: .status.conditions[?(@.type=='Ready')].lastTransitionTime
      name: Status Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'apiVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
            type: string
          kind:
            description: 'kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              contentMatchers:
                description: The content that is expected to appear in the data returned
                  by the target server against which the check is run.  Currently,
                  only the first entry in the `content_matchers` list is supported,
                  and additional entries will be ignored. This field is optional and
                  should only be specified if a content match is required as part
                  of the/ Uptime check.
                items:
                  properties:
                    content:
                      type: string
                    matcher:
                      description: ' Possible values: CONTENT_MATCHER_OPTION_UNSPECIFIED,
                        CONTAINS_STRING, NOT_CONTAINS_STRING, MATCHES_REGEX, NOT_MATCHES_REGEX'
                      type: string
                  required:
                  - content
                  type: object
                type: array
              displayName:
                description: A human-friendly name for the Uptime check configuration.
                  The display name should be unique within a Stackdriver Workspace
                  in order to make it easier to identify; however, uniqueness is not
                  enforced. Required.
                type: string
              httpCheck:
                description: Contains information needed to make an HTTP or HTTPS
                  check.
                properties:
                  authInfo:
                    description: The authentication information. Optional when creating
                      an HTTP check; defaults to empty.
                    properties:
                      password:
                        oneOf:
                        - not:
                            required:
                            - valueFrom
                          required:
                          - value
                        - not:
                            required:
                            - value
                          required:
                          - valueFrom
                        properties:
                          value:
                            description: Value of the field. Cannot be used if 'valueFrom'
                              is specified.
                            type: string
                          valueFrom:
                            description: Source for the field's value. Cannot be used
                              if 'value' is specified.
                            properties:
                              secretKeyRef:
                                description: Reference to a value with the given key
                                  in the given Secret in the resource's namespace.
                                properties:
                                  key:
                                    description: Key that identifies the value to
                                      be extracted.
                                    type: string
                                  name:
                                    description: Name of the Secret to extract a value
                                      from.
                                    type: string
                                required:
                                - name
                                - key
                                type: object
                            type: object
                        type: object
                      username:
                        type: string
                    required:
                    - password
                    - username
                    type: object
                  body:
                    description: 'The request body associated with the HTTP POST request.
                      If `content_type` is `URL_ENCODED`, the body passed in must
                      be URL-encoded. Users can provide a `Content-Length` header
                      via the `headers` field or the API will do so. If the `request_method`
                      is `GET` and `body` is not empty, the API will return an error.
                      The maximum byte size is 1 megabyte. Note: As with all `bytes`
                      fields JSON representations are base64 encoded. e.g.: "foo=bar"
                      in URL-encoded form is "foo%3Dbar" and in base64 encoding is
                      "Zm9vJTI1M0RiYXI=".'
                    type: string
                  contentType:
                    description: 'Immutable. The content type to use for the check.  Possible
                      values: TYPE_UNSPECIFIED, URL_ENCODED'
                    type: string
                  headers:
                    additionalProperties:
                      type: string
                    description: The list of headers to send as part of the Uptime
                      check request. If two headers have the same key and different
                      values, they should be entered as a single header, with the
                      value being a comma-separated list of all the desired values
                      as described at https://www.w3.org/Protocols/rfc2616/rfc2616.txt
                      (page 31). Entering two separate headers with the same key in
                      a Create call will cause the first to be overwritten by the
                      second. The maximum number of headers allowed is 100.
                    type: object
                  maskHeaders:
                    description: Immutable. Boolean specifying whether to encrypt
                      the header information. Encryption should be specified for any
                      headers related to authentication that you do not wish to be
                      seen when retrieving the configuration. The server will be responsible
                      for encrypting the headers. On Get/List calls, if `mask_headers`
                      is set to `true` then the headers will be obscured with `******.`
                    type: boolean
                  path:
                    description: Optional (defaults to "/"). The path to the page
                      against which to run the check. Will be combined with the `host`
                      (specified within the `monitored_resource`) and `port` to construct
                      the full URL. If the provided path does not begin with "/",
                      a "/" will be prepended automatically.
                    type: string
                  port:
                    description: Optional (defaults to 80 when `use_ssl` is `false`,
                      and 443 when `use_ssl` is `true`). The TCP port on the HTTP
                      server against which to run the check. Will be combined with
                      host (specified within the `monitored_resource`) and `path`
                      to construct the full URL.
                    format: int64
                    type: integer
                  requestMethod:
                    description: Immutable. The HTTP request method to use for the
                      check. If set to `METHOD_UNSPECIFIED` then `request_method`
                      defaults to `GET`.
                    type: string
                  useSsl:
                    description: If `true`, use HTTPS instead of HTTP to run the check.
                    type: boolean
                  validateSsl:
                    description: Boolean specifying whether to include SSL certificate
                      validation as a part of the Uptime check. Only applies to checks
                      where `monitored_resource` is set to `uptime_url`. If `use_ssl`
                      is `false`, setting `validate_ssl` to `true` has no effect.
                    type: boolean
                type: object
              monitoredResource:
                description: 'Immutable. The [monitored resource](https://cloud.google.com/monitoring/api/resources)
                  associated with the configuration. The following monitored resource
                  types are supported for Uptime checks:   `uptime_url`,   `gce_instance`,   `gae_app`,   `aws_ec2_instance`,   `aws_elb_load_balancer`'
                properties:
                  filterLabels:
                    additionalProperties:
                      type: string
                    description: Immutable.
                    type: object
                  type:
                    description: Immutable.
                    type: string
                required:
                - filterLabels
                - type
                type: object
              period:
                description: How often, in seconds, the Uptime check is performed.
                  Currently, the only supported values are `60s` (1 minute), `300s`
                  (5 minutes), `600s` (10 minutes), and `900s` (15 minutes). Optional,
                  defaults to `60s`.
                type: string
              projectRef:
                description: Immutable. The Project that this resource belongs to.
                oneOf:
                - not:
                    required:
                    - external
                  required:
                  - name
                - not:
                    anyOf:
                    - required:
                      - name
                    - required:
                      - namespace
                  required:
                  - external
                properties:
                  external:
                    description: |-
                      The project for this uptime check config.

                      Allowed value: The Google Cloud resource name of a `Project` resource (format: `projects/{{name}}`).
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                type: object
              resourceGroup:
                description: Immutable. The group resource associated with the configuration.
                properties:
                  groupRef:
                    description: Immutable.
                    oneOf:
                    - not:
                        required:
                        - external
                      required:
                      - name
                    - not:
                        anyOf:
                        - required:
                          - name
                        - required:
                          - namespace
                      required:
                      - external
                    properties:
                      external:
                        description: |-
                          The group of resources being monitored. Should be only the `[GROUP_ID]`, and not the full-path `projects/[PROJECT_ID_OR_NUMBER]/groups/[GROUP_ID]`.

                          Allowed value: The Google Cloud resource name of a `MonitoringGroup` resource (format: `projects/{{project}}/groups/{{name}}`).
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                    type: object
                  resourceType:
                    description: 'Immutable. The resource type of the group members.
                      Possible values: RESOURCE_TYPE_UNSPECIFIED, INSTANCE, AWS_ELB_LOAD_BALANCER'
                    type: string
                type: object
              resourceID:
                description: Immutable. Optional. The service-generated name of the
                  resource. Used for acquisition only. Leave unset to create a new
                  resource.
                type: string
              selectedRegions:
                description: The list of regions from which the check will be run.
                  Some regions contain one location, and others contain more than
                  one. If this field is specified, enough regions must be provided
                  to include a minimum of 3 locations.  Not specifying this field
                  will result in Uptime checks running from all available regions.
                items:
                  type: string
                type: array
              tcpCheck:
                description: Contains information needed to make a TCP check.
                properties:
                  port:
                    description: The TCP port on the server against which to run the
                      check. Will be combined with host (specified within the `monitored_resource`)
                      to construct the full URL. Required.
                    format: int64
                    type: integer
                required:
                - port
                type: object
              timeout:
                description: The maximum amount of time to wait for the request to
                  complete (must be between 1 and 60 seconds). Required.
                type: string
            required:
            - displayName
            - projectRef
            - timeout
            type: object
          status:
            properties:
              conditions:
                description: Conditions represent the latest available observation
                  of the resource's current state.
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's
                        last transition.
                      type: string
                    status:
                      description: Status is the status of the condition. Can be True,
                        False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  type: object
                type: array
              observedGeneration:
                description: ObservedGeneration is the generation of the resource
                  that was most recently observed by the Config Connector controller.
                  If this is equal to metadata.generation, then that means that the
                  current reported status reflects the most recent desired state of
                  the resource.
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
