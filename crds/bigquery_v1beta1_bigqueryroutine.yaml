# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cnrm.cloud.google.com/version: 1.124.0
  creationTimestamp: null
  labels:
    cnrm.cloud.google.com/managed-by-kcc: "true"
    cnrm.cloud.google.com/stability-level: alpha
    cnrm.cloud.google.com/system: "true"
    cnrm.cloud.google.com/tf2crd: "true"
  name: bigqueryroutines.bigquery.cnrm.cloud.google.com
spec:
  group: bigquery.cnrm.cloud.google.com
  names:
    categories:
    - gcp
    kind: BigQueryRoutine
    plural: bigqueryroutines
    shortNames:
    - gcpbigqueryroutine
    - gcpbigqueryroutines
    singular: bigqueryroutine
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: When 'True', the most recent reconcile of the resource succeeded
      jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - description: The reason for the value in 'Ready'
      jsonPath: .status.conditions[?(@.type=='Ready')].reason
      name: Status
      type: string
    - description: The last transition time for the value in 'Status'
      jsonPath: .status.conditions[?(@.type=='Ready')].lastTransitionTime
      name: Status Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'apiVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
            type: string
          kind:
            description: 'kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              arguments:
                description: Input/output argument of a function or a stored procedure.
                items:
                  properties:
                    argumentKind:
                      description: 'Defaults to FIXED_TYPE. Default value: "FIXED_TYPE"
                        Possible values: ["FIXED_TYPE", "ANY_TYPE"].'
                      type: string
                    dataType:
                      description: |-
                        A JSON schema for the data type. Required unless argumentKind = ANY_TYPE.
                        ~>**NOTE**: Because this field expects a JSON string, any changes to the string
                        will create a diff, even if the JSON itself hasn't changed. If the API returns
                        a different value for the same schema, e.g. it switched the order of values
                        or replaced STRUCT field type with RECORD field type, we currently cannot
                        suppress the recurring diff this causes. As a workaround, we recommend using
                        the schema as returned by the API.
                      type: string
                    mode:
                      description: 'Specifies whether the argument is input or output.
                        Can be set for procedures only. Possible values: ["IN", "OUT",
                        "INOUT"].'
                      type: string
                    name:
                      description: The name of this argument. Can be absent for function
                        return argument.
                      type: string
                  type: object
                type: array
              datasetRef:
                description: The ID of the dataset containing this routine.
                oneOf:
                - not:
                    required:
                    - external
                  required:
                  - name
                - not:
                    anyOf:
                    - required:
                      - name
                    - required:
                      - namespace
                  required:
                  - external
                properties:
                  external:
                    description: 'Allowed value: The `name` field of a `BigQueryDataset`
                      resource.'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                type: object
              definitionBody:
                description: |-
                  The body of the routine. For functions, this is the expression in the AS clause.
                  If language=SQL, it is the substring inside (but excluding) the parentheses.
                type: string
              description:
                description: The description of the routine if defined.
                type: string
              determinismLevel:
                description: 'The determinism level of the JavaScript UDF if defined.
                  Possible values: ["DETERMINISM_LEVEL_UNSPECIFIED", "DETERMINISTIC",
                  "NOT_DETERMINISTIC"].'
                type: string
              importedLibraries:
                description: |-
                  Optional. If language = "JAVASCRIPT", this field stores the path of the
                  imported JAVASCRIPT libraries.
                items:
                  type: string
                type: array
              language:
                description: 'The language of the routine. Possible values: ["SQL",
                  "JAVASCRIPT"].'
                type: string
              projectRef:
                description: The project that this resource belongs to.
                oneOf:
                - not:
                    required:
                    - external
                  required:
                  - name
                - not:
                    anyOf:
                    - required:
                      - name
                    - required:
                      - namespace
                  required:
                  - external
                properties:
                  external:
                    description: 'Allowed value: The `name` field of a `Project` resource.'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                type: object
              resourceID:
                description: Immutable. Optional. The routineId of the resource. Used
                  for creation and acquisition. When unset, the value of `metadata.name`
                  is used as the default.
                type: string
              returnTableType:
                description: |-
                  Optional. Can be set only if routineType = "TABLE_VALUED_FUNCTION".

                  If absent, the return table type is inferred from definitionBody at query time in each query
                  that references this routine. If present, then the columns in the evaluated table result will
                  be cast to match the column types specificed in return table type, at query time.
                type: string
              returnType:
                description: |-
                  A JSON schema for the return type. Optional if language = "SQL"; required otherwise.
                  If absent, the return type is inferred from definitionBody at query time in each query
                  that references this routine. If present, then the evaluated result will be cast to
                  the specified returned type at query time. ~>**NOTE**: Because this field expects a JSON
                  string, any changes to the string will create a diff, even if the JSON itself hasn't
                  changed. If the API returns a different value for the same schema, e.g. it switche
                  d the order of values or replaced STRUCT field type with RECORD field type, we currently
                  cannot suppress the recurring diff this causes. As a workaround, we recommend using
                  the schema as returned by the API.
                type: string
              routineType:
                description: 'Immutable. The type of routine. Possible values: ["SCALAR_FUNCTION",
                  "PROCEDURE", "TABLE_VALUED_FUNCTION"].'
                type: string
            required:
            - datasetRef
            - definitionBody
            - projectRef
            type: object
          status:
            properties:
              conditions:
                description: Conditions represent the latest available observation
                  of the resource's current state.
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's
                        last transition.
                      type: string
                    status:
                      description: Status is the status of the condition. Can be True,
                        False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  type: object
                type: array
              creationTime:
                description: |-
                  The time when this routine was created, in milliseconds since the
                  epoch.
                type: integer
              lastModifiedTime:
                description: |-
                  The time when this routine was modified, in milliseconds since the
                  epoch.
                type: integer
              observedGeneration:
                description: ObservedGeneration is the generation of the resource
                  that was most recently observed by the Config Connector controller.
                  If this is equal to metadata.generation, then that means that the
                  current reported status reflects the most recent desired state of
                  the resource.
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
