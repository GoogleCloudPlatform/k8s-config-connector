# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cnrm.cloud.google.com/version: 1.124.0
  creationTimestamp: null
  labels:
    cnrm.cloud.google.com/dcl2crd: "true"
    cnrm.cloud.google.com/managed-by-kcc: "true"
    cnrm.cloud.google.com/stability-level: stable
    cnrm.cloud.google.com/system: "true"
  name: gkehubmemberships.gkehub.cnrm.cloud.google.com
spec:
  group: gkehub.cnrm.cloud.google.com
  names:
    categories:
    - gcp
    kind: GKEHubMembership
    plural: gkehubmemberships
    shortNames:
    - gcpgkehubmembership
    - gcpgkehubmemberships
    singular: gkehubmembership
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: When 'True', the most recent reconcile of the resource succeeded
      jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - description: The reason for the value in 'Ready'
      jsonPath: .status.conditions[?(@.type=='Ready')].reason
      name: Status
      type: string
    - description: The last transition time for the value in 'Status'
      jsonPath: .status.conditions[?(@.type=='Ready')].lastTransitionTime
      name: Status Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'apiVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
            type: string
          kind:
            description: 'kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              authority:
                description: 'Optional. How to identify workloads from this Membership.
                  See the documentation on Workload Identity for more details: https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity'
                properties:
                  issuer:
                    description: Optional. A JSON Web Token (JWT) issuer URI. `issuer`
                      must start with `https://` and be a valid URL with length <2000
                      characters. If set, then Google will allow valid OIDC tokens
                      from this issuer to authenticate within the workload_identity_pool.
                      OIDC discovery will be performed on this URI to validate tokens
                      from the issuer. Clearing `issuer` disables Workload Identity.
                      `issuer` cannot be directly modified; it must be cleared (and
                      Workload Identity disabled) before using a new issuer (and re-enabling
                      Workload Identity).
                    type: string
                type: object
              description:
                description: 'Description of this membership, limited to 63 characters.
                  Must match the regex: `*` This field is present for legacy purposes.'
                type: string
              endpoint:
                description: Optional. Endpoint information to reach this member.
                properties:
                  gkeCluster:
                    description: Optional. GKE-specific information. Only present
                      if this Membership is a GKE cluster.
                    properties:
                      resourceRef:
                        oneOf:
                        - not:
                            required:
                            - external
                          required:
                          - name
                        - not:
                            anyOf:
                            - required:
                              - name
                            - required:
                              - namespace
                          required:
                          - external
                        properties:
                          external:
                            description: |-
                              Immutable. Self-link of the GCP resource for the GKE cluster. For example: //container.googleapis.com/projects/my-project/locations/us-west1-a/clusters/my-cluster Zonal clusters are also supported.

                              Allowed value: The `selfLink` field of a `ContainerCluster` resource.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                        type: object
                    type: object
                  kubernetesResource:
                    description: 'Optional. The in-cluster Kubernetes Resources that
                      should be applied for a correctly registered cluster, in the
                      steady state. These resources: * Ensure that the cluster is
                      exclusively registered to one and only one Hub Membership. *
                      Propagate Workload Pool Information available in the Membership
                      Authority field. * Ensure proper initial configuration of default
                      Hub Features.'
                    properties:
                      membershipCrManifest:
                        description: Input only. The YAML representation of the Membership
                          CR. This field is ignored for GKE clusters where Hub can
                          read the CR directly. Callers should provide the CR that
                          is currently present in the cluster during CreateMembership
                          or UpdateMembership, or leave this field empty if none exists.
                          The CR manifest is used to validate the cluster has not
                          been registered with another Membership.
                        type: string
                      resourceOptions:
                        description: Optional. Options for Kubernetes resource generation.
                        properties:
                          connectVersion:
                            description: Optional. The Connect agent version to use
                              for connect_resources. Defaults to the latest GKE Connect
                              version. The version must be a currently supported version,
                              obsolete versions will be rejected.
                            type: string
                          v1beta1Crd:
                            description: Optional. Use `apiextensions/v1beta1` instead
                              of `apiextensions/v1` for CustomResourceDefinition resources.
                              This option should be set for clusters with Kubernetes
                              apiserver versions <1.16.
                            type: boolean
                        type: object
                    type: object
                type: object
              externalId:
                description: 'Optional. An externally-generated and managed ID for
                  this Membership. This ID may be modified after creation, but this
                  is not recommended. The ID must match the regex: `*` If this Membership
                  represents a Kubernetes cluster, this value should be set to the
                  UID of the `kube-system` namespace object.'
                type: string
              infrastructureType:
                description: 'Optional. The infrastructure type this Membership is
                  running on. Possible values: INFRASTRUCTURE_TYPE_UNSPECIFIED, ON_PREM,
                  MULTI_CLOUD'
                type: string
              location:
                description: Immutable. The location for the resource
                type: string
              resourceID:
                description: Immutable. Optional. The name of the resource. Used for
                  creation and acquisition. When unset, the value of `metadata.name`
                  is used as the default.
                type: string
            required:
            - location
            type: object
          status:
            properties:
              authority:
                properties:
                  identityProvider:
                    description: Output only. An identity provider that reflects the
                      `issuer` in the workload identity pool.
                    type: string
                  workloadIdentityPool:
                    description: 'Output only. The name of the workload identity pool
                      in which `issuer` will be recognized. There is a single Workload
                      Identity Pool per Hub that is shared between all Memberships
                      that belong to that Hub. For a Hub hosted in: {PROJECT_ID},
                      the workload pool format is `{PROJECT_ID}.hub.id.goog`, although
                      this is subject to change in newer versions of this API.'
                    type: string
                type: object
              conditions:
                description: Conditions represent the latest available observation
                  of the resource's current state.
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's
                        last transition.
                      type: string
                    status:
                      description: Status is the status of the condition. Can be True,
                        False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  type: object
                type: array
              createTime:
                description: Output only. When the Membership was created.
                format: date-time
                type: string
              deleteTime:
                description: Output only. When the Membership was deleted.
                format: date-time
                type: string
              endpoint:
                properties:
                  kubernetesMetadata:
                    description: Output only. Useful Kubernetes-specific metadata.
                    properties:
                      kubernetesApiServerVersion:
                        description: Output only. Kubernetes API server version string
                          as reported by `/version`.
                        type: string
                      memoryMb:
                        description: Output only. The total memory capacity as reported
                          by the sum of all Kubernetes nodes resources, defined in
                          MB.
                        format: int64
                        type: integer
                      nodeCount:
                        description: Output only. Node count as reported by Kubernetes
                          nodes resources.
                        format: int64
                        type: integer
                      nodeProviderId:
                        description: Output only. Node providerID as reported by the
                          first node in the list of nodes on the Kubernetes endpoint.
                          On Kubernetes platforms that support zero-node clusters
                          (like GKE-on-GCP), the node_count will be zero and the node_provider_id
                          will be empty.
                        type: string
                      updateTime:
                        description: Output only. The time at which these details
                          were last updated. This update_time is different from the
                          Membership-level update_time since EndpointDetails are updated
                          internally for API consumers.
                        format: date-time
                        type: string
                      vcpuCount:
                        description: Output only. vCPU count as reported by Kubernetes
                          nodes resources.
                        format: int64
                        type: integer
                    type: object
                  kubernetesResource:
                    properties:
                      connectResources:
                        description: Output only. The Kubernetes resources for installing
                          the GKE Connect agent This field is only populated in the
                          Membership returned from a successful long-running operation
                          from CreateMembership or UpdateMembership. It is not populated
                          during normal GetMembership or ListMemberships requests.
                          To get the resource manifest after the initial registration,
                          the caller should make a UpdateMembership call with an empty
                          field mask.
                        items:
                          properties:
                            clusterScoped:
                              description: Whether the resource provided in the manifest
                                is `cluster_scoped`. If unset, the manifest is assumed
                                to be namespace scoped. This field is used for REST
                                mapping when applying the resource in a cluster.
                              type: boolean
                            manifest:
                              description: YAML manifest of the resource.
                              type: string
                          type: object
                        type: array
                      membershipResources:
                        description: Output only. Additional Kubernetes resources
                          that need to be applied to the cluster after Membership
                          creation, and after every update. This field is only populated
                          in the Membership returned from a successful long-running
                          operation from CreateMembership or UpdateMembership. It
                          is not populated during normal GetMembership or ListMemberships
                          requests. To get the resource manifest after the initial
                          registration, the caller should make a UpdateMembership
                          call with an empty field mask.
                        items:
                          properties:
                            clusterScoped:
                              description: Whether the resource provided in the manifest
                                is `cluster_scoped`. If unset, the manifest is assumed
                                to be namespace scoped. This field is used for REST
                                mapping when applying the resource in a cluster.
                              type: boolean
                            manifest:
                              description: YAML manifest of the resource.
                              type: string
                          type: object
                        type: array
                    type: object
                type: object
              lastConnectionTime:
                description: Output only. For clusters using Connect, the timestamp
                  of the most recent connection established with Google Cloud. This
                  time is updated every several minutes, not continuously. For clusters
                  that do not use GKE Connect, or that have never connected successfully,
                  this field will be unset.
                format: date-time
                type: string
              observedGeneration:
                description: ObservedGeneration is the generation of the resource
                  that was most recently observed by the Config Connector controller.
                  If this is equal to metadata.generation, then that means that the
                  current reported status reflects the most recent desired state of
                  the resource.
                type: integer
              state:
                description: Output only. State of the Membership resource.
                properties:
                  code:
                    description: 'Output only. The current state of the Membership
                      resource. Possible values: CODE_UNSPECIFIED, CREATING, READY,
                      DELETING, UPDATING, SERVICE_UPDATING'
                    type: string
                type: object
              uniqueId:
                description: Output only. Google-generated UUID for this resource.
                  This is unique across all Membership resources. If a Membership
                  resource is deleted and another resource with the same name is created,
                  it gets a different unique_id.
                type: string
              updateTime:
                description: Output only. When the Membership was last updated.
                format: date-time
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
