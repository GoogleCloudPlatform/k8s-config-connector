# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cnrm.cloud.google.com/version: 1.124.0
  creationTimestamp: null
  labels:
    cnrm.cloud.google.com/managed-by-kcc: "true"
    cnrm.cloud.google.com/stability-level: alpha
    cnrm.cloud.google.com/system: "true"
    cnrm.cloud.google.com/tf2crd: "true"
  name: vertexaifeaturestores.vertexai.cnrm.cloud.google.com
spec:
  group: vertexai.cnrm.cloud.google.com
  names:
    categories:
    - gcp
    kind: VertexAIFeaturestore
    plural: vertexaifeaturestores
    shortNames:
    - gcpvertexaifeaturestore
    - gcpvertexaifeaturestores
    singular: vertexaifeaturestore
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: When 'True', the most recent reconcile of the resource succeeded
      jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - description: The reason for the value in 'Ready'
      jsonPath: .status.conditions[?(@.type=='Ready')].reason
      name: Status
      type: string
    - description: The last transition time for the value in 'Status'
      jsonPath: .status.conditions[?(@.type=='Ready')].lastTransitionTime
      name: Status Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'apiVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
            type: string
          kind:
            description: 'kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              encryptionSpec:
                description: If set, both of the online and offline data storage will
                  be secured by this key.
                properties:
                  kmsKeyName:
                    description: 'The Cloud KMS resource identifier of the customer
                      managed encryption key used to protect a resource. Has the form:
                      projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key.
                      The key needs to be in the same region as where the compute
                      resource is created.'
                    type: string
                required:
                - kmsKeyName
                type: object
              forceDestroy:
                description: If set to true, any EntityTypes and Features for this
                  Featurestore will also be deleted.
                type: boolean
              onlineServingConfig:
                description: Config for online serving resources.
                properties:
                  fixedNodeCount:
                    description: The number of nodes for each cluster. The number
                      of nodes will not scale automatically but can be scaled manually
                      by providing different values when updating.
                    type: integer
                  scaling:
                    description: Online serving scaling configuration. Only one of
                      fixedNodeCount and scaling can be set. Setting one will reset
                      the other.
                    properties:
                      maxNodeCount:
                        description: The maximum number of nodes to scale up to. Must
                          be greater than minNodeCount, and less than or equal to
                          10 times of 'minNodeCount'.
                        type: integer
                      minNodeCount:
                        description: The minimum number of nodes to scale down to.
                          Must be greater than or equal to 1.
                        type: integer
                    required:
                    - maxNodeCount
                    - minNodeCount
                    type: object
                type: object
              onlineStorageTtlDays:
                description: TTL in days for feature values that will be stored in
                  online serving storage. The Feature Store online storage periodically
                  removes obsolete feature values older than onlineStorageTtlDays
                  since the feature generation time. Note that onlineStorageTtlDays
                  should be less than or equal to offlineStorageTtlDays for each EntityType
                  under a featurestore. If not set, default to 4000 days.
                type: integer
              projectRef:
                description: The project that this resource belongs to.
                oneOf:
                - not:
                    required:
                    - external
                  required:
                  - name
                - not:
                    anyOf:
                    - required:
                      - name
                    - required:
                      - namespace
                  required:
                  - external
                properties:
                  external:
                    description: 'Allowed value: The `name` field of a `Project` resource.'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                type: object
              region:
                description: Immutable. The region of the dataset. eg us-central1.
                type: string
              resourceID:
                description: Immutable. Optional. The name of the resource. Used for
                  creation and acquisition. When unset, the value of `metadata.name`
                  is used as the default.
                type: string
            required:
            - projectRef
            - region
            type: object
          status:
            properties:
              conditions:
                description: Conditions represent the latest available observation
                  of the resource's current state.
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's
                        last transition.
                      type: string
                    status:
                      description: Status is the status of the condition. Can be True,
                        False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  type: object
                type: array
              createTime:
                description: The timestamp of when the featurestore was created in
                  RFC3339 UTC "Zulu" format, with nanosecond resolution and up to
                  nine fractional digits.
                type: string
              etag:
                description: Used to perform consistent read-modify-write updates.
                type: string
              observedGeneration:
                description: ObservedGeneration is the generation of the resource
                  that was most recently observed by the Config Connector controller.
                  If this is equal to metadata.generation, then that means that the
                  current reported status reflects the most recent desired state of
                  the resource.
                type: integer
              updateTime:
                description: The timestamp of when the featurestore was last updated
                  in RFC3339 UTC "Zulu" format, with nanosecond resolution and up
                  to nine fractional digits.
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
