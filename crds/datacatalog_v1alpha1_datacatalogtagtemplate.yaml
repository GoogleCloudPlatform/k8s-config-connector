# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cnrm.cloud.google.com/version: 1.124.0
  creationTimestamp: null
  labels:
    cnrm.cloud.google.com/managed-by-kcc: "true"
    cnrm.cloud.google.com/stability-level: alpha
    cnrm.cloud.google.com/system: "true"
    cnrm.cloud.google.com/tf2crd: "true"
  name: datacatalogtagtemplates.datacatalog.cnrm.cloud.google.com
spec:
  group: datacatalog.cnrm.cloud.google.com
  names:
    categories:
    - gcp
    kind: DataCatalogTagTemplate
    plural: datacatalogtagtemplates
    shortNames:
    - gcpdatacatalogtagtemplate
    - gcpdatacatalogtagtemplates
    singular: datacatalogtagtemplate
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: When 'True', the most recent reconcile of the resource succeeded
      jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - description: The reason for the value in 'Ready'
      jsonPath: .status.conditions[?(@.type=='Ready')].reason
      name: Status
      type: string
    - description: The last transition time for the value in 'Status'
      jsonPath: .status.conditions[?(@.type=='Ready')].lastTransitionTime
      name: Status Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'apiVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
            type: string
          kind:
            description: 'kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              displayName:
                description: The display name for this template.
                type: string
              fields:
                description: Set of tag template field IDs and the settings for the
                  field. This set is an exhaustive list of the allowed fields. This
                  set must contain at least one field and at most 500 fields. The
                  change of field_id will be resulting in re-creating of field. The
                  change of primitive_type will be resulting in re-creating of field,
                  however if the field is a required, you cannot update it.
                items:
                  properties:
                    description:
                      description: A description for this field.
                      type: string
                    displayName:
                      description: The display name for this field.
                      type: string
                    fieldId:
                      type: string
                    isRequired:
                      description: Whether this is a required field. Defaults to false.
                      type: boolean
                    name:
                      description: 'The resource name of the tag template field in
                        URL format. Example: projects/{project_id}/locations/{location}/tagTemplates/{tagTemplateId}/fields/{field}.'
                      type: string
                    order:
                      description: |-
                        The order of this field with respect to other fields in this tag template.
                        A higher value indicates a more important field. The value can be negative.
                        Multiple fields can have the same order, and field orders within a tag do not have to be sequential.
                      type: integer
                    type:
                      description: The type of value this tag field can contain.
                      properties:
                        enumType:
                          description: |-
                            Represents an enum type.
                             Exactly one of 'primitive_type' or 'enum_type' must be set.
                          properties:
                            allowedValues:
                              description: |-
                                The set of allowed values for this enum. The display names of the
                                values must be case-insensitively unique within this set. Currently,
                                enum values can only be added to the list of allowed values. Deletion
                                and renaming of enum values are not supported.
                                Can have up to 500 allowed values.
                              items:
                                properties:
                                  displayName:
                                    description: The display name of the enum value.
                                    type: string
                                required:
                                - displayName
                                type: object
                              type: array
                          required:
                          - allowedValues
                          type: object
                        primitiveType:
                          description: |-
                            Represents primitive types - string, bool etc.
                             Exactly one of 'primitive_type' or 'enum_type' must be set Possible values: ["DOUBLE", "STRING", "BOOL", "TIMESTAMP"].
                          type: string
                      type: object
                  required:
                  - fieldId
                  - type
                  type: object
                type: array
              forceDelete:
                description: This confirms the deletion of any possible tags using
                  this template. Must be set to true in order to delete the tag template.
                type: boolean
              projectRef:
                description: The project that this resource belongs to.
                oneOf:
                - not:
                    required:
                    - external
                  required:
                  - name
                - not:
                    anyOf:
                    - required:
                      - name
                    - required:
                      - namespace
                  required:
                  - external
                properties:
                  external:
                    description: 'Allowed value: The `name` field of a `Project` resource.'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                type: object
              region:
                description: Immutable. Template location region.
                type: string
              resourceID:
                description: Immutable. Optional. The service-generated name of the
                  resource. Used for acquisition only. Leave unset to create a new
                  resource.
                type: string
              tagTemplateId:
                description: Immutable. The id of the tag template to create.
                type: string
            required:
            - fields
            - projectRef
            - tagTemplateId
            type: object
          status:
            properties:
              conditions:
                description: Conditions represent the latest available observation
                  of the resource's current state.
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's
                        last transition.
                      type: string
                    status:
                      description: Status is the status of the condition. Can be True,
                        False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  type: object
                type: array
              name:
                description: 'The resource name of the tag template in URL format.
                  Example: projects/{project_id}/locations/{location}/tagTemplates/{tagTemplateId}.'
                type: string
              observedGeneration:
                description: ObservedGeneration is the generation of the resource
                  that was most recently observed by the Config Connector controller.
                  If this is equal to metadata.generation, then that means that the
                  current reported status reflects the most recent desired state of
                  the resource.
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
