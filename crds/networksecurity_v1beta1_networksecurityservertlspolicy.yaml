# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cnrm.cloud.google.com/version: 1.124.0
  creationTimestamp: null
  labels:
    cnrm.cloud.google.com/dcl2crd: "true"
    cnrm.cloud.google.com/managed-by-kcc: "true"
    cnrm.cloud.google.com/stability-level: stable
    cnrm.cloud.google.com/system: "true"
  name: networksecurityservertlspolicies.networksecurity.cnrm.cloud.google.com
spec:
  group: networksecurity.cnrm.cloud.google.com
  names:
    categories:
    - gcp
    kind: NetworkSecurityServerTLSPolicy
    plural: networksecurityservertlspolicies
    shortNames:
    - gcpnetworksecurityservertlspolicy
    - gcpnetworksecurityservertlspolicies
    singular: networksecurityservertlspolicy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: When 'True', the most recent reconcile of the resource succeeded
      jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - description: The reason for the value in 'Ready'
      jsonPath: .status.conditions[?(@.type=='Ready')].reason
      name: Status
      type: string
    - description: The last transition time for the value in 'Status'
      jsonPath: .status.conditions[?(@.type=='Ready')].lastTransitionTime
      name: Status Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'apiVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
            type: string
          kind:
            description: 'kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              allowOpen:
                description: Optional. Determines if server allows plaintext connections.
                  If set to true, server allows plain text connections. By default,
                  it is set to false. This setting is not exclusive of other encryption
                  modes. For example, if allow_open and mtls_policy are set, server
                  allows both plain text and mTLS connections. See documentation of
                  other encryption modes to confirm compatibility.
                type: boolean
              description:
                description: Optional. Free-text description of the resource.
                type: string
              location:
                description: Immutable. The location for the resource
                type: string
              mtlsPolicy:
                description: Optional. Defines a mechanism to provision peer validation
                  certificates for peer to peer authentication (Mutual TLS - mTLS).
                  If not specified, client certificate will not be requested. The
                  connection is treated as TLS and not mTLS. If allow_open and mtls_policy
                  are set, server allows both plain text and mTLS connections.
                properties:
                  clientValidationCa:
                    description: Required. Defines the mechanism to obtain the Certificate
                      Authority certificate to validate the client certificate.
                    items:
                      properties:
                        certificateProviderInstance:
                          description: The certificate provider instance specification
                            that will be passed to the data plane, which will be used
                            to load necessary credential information.
                          properties:
                            pluginInstance:
                              description: Required. Plugin instance name, used to
                                locate and load CertificateProvider instance configuration.
                                Set to "google_cloud_private_spiffe" to use Certificate
                                Authority Service certificate provider instance.
                              type: string
                          required:
                          - pluginInstance
                          type: object
                        grpcEndpoint:
                          description: gRPC specific configuration to access the gRPC
                            server to obtain the CA certificate.
                          properties:
                            targetUri:
                              description: Required. The target URI of the gRPC endpoint.
                                Only UDS path is supported, and should start with
                                “unix:”.
                              type: string
                          required:
                          - targetUri
                          type: object
                      type: object
                    type: array
                required:
                - clientValidationCa
                type: object
              projectRef:
                description: Immutable. The Project that this resource belongs to.
                oneOf:
                - not:
                    required:
                    - external
                  required:
                  - name
                - not:
                    anyOf:
                    - required:
                      - name
                    - required:
                      - namespace
                  required:
                  - external
                properties:
                  external:
                    description: |-
                      The project for the resource

                      Allowed value: The Google Cloud resource name of a `Project` resource (format: `projects/{{name}}`).
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                type: object
              resourceID:
                description: Immutable. Optional. The name of the resource. Used for
                  creation and acquisition. When unset, the value of `metadata.name`
                  is used as the default.
                type: string
              serverCertificate:
                description: Optional. Defines a mechanism to provision server identity
                  (public and private keys). Cannot be combined with allow_open as
                  a permissive mode that allows both plain text and TLS is not supported.
                properties:
                  certificateProviderInstance:
                    description: The certificate provider instance specification that
                      will be passed to the data plane, which will be used to load
                      necessary credential information.
                    properties:
                      pluginInstance:
                        description: Required. Plugin instance name, used to locate
                          and load CertificateProvider instance configuration. Set
                          to "google_cloud_private_spiffe" to use Certificate Authority
                          Service certificate provider instance.
                        type: string
                    required:
                    - pluginInstance
                    type: object
                  grpcEndpoint:
                    description: gRPC specific configuration to access the gRPC server
                      to obtain the cert and private key.
                    properties:
                      targetUri:
                        description: Required. The target URI of the gRPC endpoint.
                          Only UDS path is supported, and should start with “unix:”.
                        type: string
                    required:
                    - targetUri
                    type: object
                type: object
            required:
            - location
            type: object
          status:
            properties:
              conditions:
                description: Conditions represent the latest available observation
                  of the resource's current state.
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's
                        last transition.
                      type: string
                    status:
                      description: Status is the status of the condition. Can be True,
                        False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  type: object
                type: array
              createTime:
                description: Output only. The timestamp when the resource was created.
                format: date-time
                type: string
              observedGeneration:
                description: ObservedGeneration is the generation of the resource
                  that was most recently observed by the Config Connector controller.
                  If this is equal to metadata.generation, then that means that the
                  current reported status reflects the most recent desired state of
                  the resource.
                type: integer
              updateTime:
                description: Output only. The timestamp when the resource was updated.
                format: date-time
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
