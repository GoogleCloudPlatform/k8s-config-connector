# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cnrm.cloud.google.com/version: 1.124.0
  creationTimestamp: null
  labels:
    cnrm.cloud.google.com/managed-by-kcc: "true"
    cnrm.cloud.google.com/stability-level: alpha
    cnrm.cloud.google.com/system: "true"
    cnrm.cloud.google.com/tf2crd: "true"
  name: appengineservicesplittraffics.appengine.cnrm.cloud.google.com
spec:
  group: appengine.cnrm.cloud.google.com
  names:
    categories:
    - gcp
    kind: AppEngineServiceSplitTraffic
    plural: appengineservicesplittraffics
    shortNames:
    - gcpappengineservicesplittraffic
    - gcpappengineservicesplittraffics
    singular: appengineservicesplittraffic
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: When 'True', the most recent reconcile of the resource succeeded
      jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - description: The reason for the value in 'Ready'
      jsonPath: .status.conditions[?(@.type=='Ready')].reason
      name: Status
      type: string
    - description: The last transition time for the value in 'Status'
      jsonPath: .status.conditions[?(@.type=='Ready')].lastTransitionTime
      name: Status Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'apiVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
            type: string
          kind:
            description: 'kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              migrateTraffic:
                description: If set to true traffic will be migrated to this version.
                type: boolean
              project:
                description: Immutable.
                type: string
              resourceID:
                description: Immutable. Optional. The service of the resource. Used
                  for creation and acquisition. When unset, the value of `metadata.name`
                  is used as the default.
                type: string
              split:
                description: Mapping that defines fractional HTTP traffic diversion
                  to different versions within the service.
                properties:
                  allocations:
                    additionalProperties:
                      type: string
                    description: Mapping from version IDs within the service to fractional
                      (0.000, 1] allocations of traffic for that version. Each version
                      can be specified only once, but some versions in the service
                      may not have any traffic allocation. Services that have traffic
                      allocated cannot be deleted until either the service is deleted
                      or their traffic allocation is removed. Allocations must sum
                      to 1. Up to two decimal place precision is supported for IP-based
                      splits and up to three decimal places is supported for cookie-based
                      splits.
                    type: object
                  shardBy:
                    description: 'Mechanism used to determine which version a request
                      is sent to. The traffic selection algorithm will be stable for
                      either type until allocations are changed. Possible values:
                      ["UNSPECIFIED", "COOKIE", "IP", "RANDOM"].'
                    type: string
                required:
                - allocations
                type: object
            required:
            - split
            type: object
          status:
            properties:
              conditions:
                description: Conditions represent the latest available observation
                  of the resource's current state.
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's
                        last transition.
                      type: string
                    status:
                      description: Status is the status of the condition. Can be True,
                        False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  type: object
                type: array
              observedGeneration:
                description: ObservedGeneration is the generation of the resource
                  that was most recently observed by the Config Connector controller.
                  If this is equal to metadata.generation, then that means that the
                  current reported status reflects the most recent desired state of
                  the resource.
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
