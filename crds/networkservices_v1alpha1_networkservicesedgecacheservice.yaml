# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cnrm.cloud.google.com/version: 1.124.0
  creationTimestamp: null
  labels:
    cnrm.cloud.google.com/managed-by-kcc: "true"
    cnrm.cloud.google.com/stability-level: alpha
    cnrm.cloud.google.com/system: "true"
    cnrm.cloud.google.com/tf2crd: "true"
  name: networkservicesedgecacheservices.networkservices.cnrm.cloud.google.com
spec:
  group: networkservices.cnrm.cloud.google.com
  names:
    categories:
    - gcp
    kind: NetworkServicesEdgeCacheService
    plural: networkservicesedgecacheservices
    shortNames:
    - gcpnetworkservicesedgecacheservice
    - gcpnetworkservicesedgecacheservices
    singular: networkservicesedgecacheservice
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: When 'True', the most recent reconcile of the resource succeeded
      jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - description: The reason for the value in 'Ready'
      jsonPath: .status.conditions[?(@.type=='Ready')].reason
      name: Status
      type: string
    - description: The last transition time for the value in 'Status'
      jsonPath: .status.conditions[?(@.type=='Ready')].lastTransitionTime
      name: Status Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'apiVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
            type: string
          kind:
            description: 'kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              description:
                description: A human-readable description of the resource.
                type: string
              disableHttp2:
                description: |-
                  Disables HTTP/2.

                  HTTP/2 (h2) is enabled by default and recommended for performance. HTTP/2 improves connection re-use and reduces connection setup overhead by sending multiple streams over the same connection.

                  Some legacy HTTP clients may have issues with HTTP/2 connections due to broken HTTP/2 implementations. Setting this to true will prevent HTTP/2 from being advertised and negotiated.
                type: boolean
              disableQuic:
                description: HTTP/3 (IETF QUIC) and Google QUIC are enabled by default.
                type: boolean
              edgeSecurityPolicy:
                description: Resource URL that points at the Cloud Armor edge security
                  policy that is applied on each request against the EdgeCacheService.
                type: string
              edgeSslCertificates:
                description: |-
                  URLs to sslCertificate resources that are used to authenticate connections between users and the EdgeCacheService.

                  Note that only "global" certificates with a "scope" of "EDGE_CACHE" can be attached to an EdgeCacheService.
                items:
                  type: string
                type: array
              logConfig:
                description: Specifies the logging options for the traffic served
                  by this service. If logging is enabled, logs will be exported to
                  Cloud Logging.
                properties:
                  enable:
                    description: Specifies whether to enable logging for traffic served
                      by this service.
                    type: boolean
                  sampleRate:
                    description: |-
                      Configures the sampling rate of requests, where 1.0 means all logged requests are reported and 0.0 means no logged requests are reported. The default value is 1.0, and the value of the field must be in [0, 1].

                      This field can only be specified if logging is enabled for this service.
                    type: number
                type: object
              projectRef:
                description: The project that this resource belongs to.
                oneOf:
                - not:
                    required:
                    - external
                  required:
                  - name
                - not:
                    anyOf:
                    - required:
                      - name
                    - required:
                      - namespace
                  required:
                  - external
                properties:
                  external:
                    description: 'Allowed value: The `name` field of a `Project` resource.'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                type: object
              requireTls:
                description: |-
                  Require TLS (HTTPS) for all clients connecting to this service.

                  Clients who connect over HTTP (port 80) will receive a HTTP 301 to the same URL over HTTPS (port 443).
                  You must have at least one (1) edgeSslCertificate specified to enable this.
                type: boolean
              resourceID:
                description: Immutable. Optional. The name of the resource. Used for
                  creation and acquisition. When unset, the value of `metadata.name`
                  is used as the default.
                type: string
              routing:
                description: Defines how requests are routed, modified, cached and/or
                  which origin content is filled from.
                properties:
                  hostRule:
                    description: The list of hostRules to match against. These rules
                      define which hostnames the EdgeCacheService will match against,
                      and which route configurations apply.
                    items:
                      properties:
                        description:
                          description: A human-readable description of the hostRule.
                          type: string
                        hosts:
                          description: |-
                            The list of host patterns to match.

                            Host patterns must be valid hostnames. Ports are not allowed. Wildcard hosts are supported in the suffix or prefix form. * matches any string of ([a-z0-9-.]*). It does not match the empty string.

                            When multiple hosts are specified, hosts are matched in the following priority:

                              1. Exact domain names: ''www.foo.com''.
                              2. Suffix domain wildcards: ''*.foo.com'' or ''*-bar.foo.com''.
                              3. Prefix domain wildcards: ''foo.*'' or ''foo-*''.
                              4. Special wildcard ''*'' matching any domain.

                              Notes:

                                The wildcard will not match the empty string. e.g. ''*-bar.foo.com'' will match ''baz-bar.foo.com'' but not ''-bar.foo.com''. The longest wildcards match first. Only a single host in the entire service can match on ''*''. A domain must be unique across all configured hosts within a service.

                                Hosts are matched against the HTTP Host header, or for HTTP/2 and HTTP/3, the ":authority" header, from the incoming request.

                                You may specify up to 10 hosts.
                          items:
                            type: string
                          type: array
                        pathMatcher:
                          description: The name of the pathMatcher associated with
                            this hostRule.
                          type: string
                      required:
                      - hosts
                      - pathMatcher
                      type: object
                    type: array
                  pathMatcher:
                    description: The list of pathMatchers referenced via name by hostRules.
                      PathMatcher is used to match the path portion of the URL when
                      a HostRule matches the URL's host portion.
                    items:
                      properties:
                        description:
                          description: A human-readable description of the resource.
                          type: string
                        name:
                          description: The name to which this PathMatcher is referred
                            by the HostRule.
                          type: string
                        routeRule:
                          description: The routeRules to match against. routeRules
                            support advanced routing behaviour, and can match on paths,
                            headers and query parameters, as well as status codes
                            and HTTP methods.
                          items:
                            properties:
                              description:
                                description: A human-readable description of the routeRule.
                                type: string
                              headerAction:
                                description: The header actions, including adding
                                  & removing headers, for requests that match this
                                  route.
                                properties:
                                  requestHeaderToAdd:
                                    description: Describes a header to add.
                                    items:
                                      properties:
                                        headerName:
                                          description: The name of the header to add.
                                          type: string
                                        headerValue:
                                          description: The value of the header to
                                            add.
                                          type: string
                                        replace:
                                          description: Whether to replace all existing
                                            headers with the same name.
                                          type: boolean
                                      required:
                                      - headerName
                                      - headerValue
                                      type: object
                                    type: array
                                  requestHeaderToRemove:
                                    description: A list of header names for headers
                                      that need to be removed from the request prior
                                      to forwarding the request to the origin.
                                    items:
                                      properties:
                                        headerName:
                                          description: The name of the header to remove.
                                          type: string
                                      required:
                                      - headerName
                                      type: object
                                    type: array
                                  responseHeaderToAdd:
                                    description: |-
                                      Headers to add to the response prior to sending it back to the client.

                                      Response headers are only sent to the client, and do not have an effect on the cache serving the response.
                                    items:
                                      properties:
                                        headerName:
                                          description: The name of the header to add.
                                          type: string
                                        headerValue:
                                          description: The value of the header to
                                            add.
                                          type: string
                                        replace:
                                          description: Whether to replace all existing
                                            headers with the same name.
                                          type: boolean
                                      required:
                                      - headerName
                                      - headerValue
                                      type: object
                                    type: array
                                  responseHeaderToRemove:
                                    description: A list of header names for headers
                                      that need to be removed from the request prior
                                      to forwarding the request to the origin.
                                    items:
                                      properties:
                                        headerName:
                                          description: |-
                                            Headers to remove from the response prior to sending it back to the client.

                                            Response headers are only sent to the client, and do not have an effect on the cache serving the response.
                                          type: string
                                      required:
                                      - headerName
                                      type: object
                                    type: array
                                type: object
                              matchRule:
                                description: |-
                                  The list of criteria for matching attributes of a request to this routeRule. This list has OR semantics: the request matches this routeRule when any of the matchRules are satisfied. However predicates
                                  within a given matchRule have AND semantics. All predicates within a matchRule must match for the request to match the rule.
                                items:
                                  properties:
                                    fullPathMatch:
                                      description: For satisfying the matchRule condition,
                                        the path of the request must exactly match
                                        the value specified in fullPathMatch after
                                        removing any query parameters and anchor that
                                        may be part of the original URL.
                                      type: string
                                    headerMatch:
                                      description: Specifies a list of header match
                                        criteria, all of which must match corresponding
                                        headers in the request.
                                      items:
                                        properties:
                                          exactMatch:
                                            description: The value of the header should
                                              exactly match contents of exactMatch.
                                            type: string
                                          headerName:
                                            description: The header name to match
                                              on.
                                            type: string
                                          invertMatch:
                                            description: |-
                                              If set to false (default), the headerMatch is considered a match if the match criteria above are met.
                                              If set to true, the headerMatch is considered a match if the match criteria above are NOT met.
                                            type: boolean
                                          prefixMatch:
                                            description: The value of the header must
                                              start with the contents of prefixMatch.
                                            type: string
                                          presentMatch:
                                            description: A header with the contents
                                              of headerName must exist. The match
                                              takes place whether or not the request's
                                              header has a value.
                                            type: boolean
                                          suffixMatch:
                                            description: The value of the header must
                                              end with the contents of suffixMatch.
                                            type: string
                                        required:
                                        - headerName
                                        type: object
                                      type: array
                                    ignoreCase:
                                      description: Specifies that prefixMatch and
                                        fullPathMatch matches are case sensitive.
                                      type: boolean
                                    pathTemplateMatch:
                                      description: |-
                                        For satisfying the matchRule condition, the path of the request
                                        must match the wildcard pattern specified in pathTemplateMatch
                                        after removing any query parameters and anchor that may be part
                                        of the original URL.

                                        pathTemplateMatch must be between 1 and 255 characters
                                        (inclusive).  The pattern specified by pathTemplateMatch may
                                        have at most 5 wildcard operators and at most 5 variable
                                        captures in total.
                                      type: string
                                    prefixMatch:
                                      description: For satisfying the matchRule condition,
                                        the request's path must begin with the specified
                                        prefixMatch. prefixMatch must begin with a
                                        /.
                                      type: string
                                    queryParameterMatch:
                                      description: Specifies a list of query parameter
                                        match criteria, all of which must match corresponding
                                        query parameters in the request.
                                      items:
                                        properties:
                                          exactMatch:
                                            description: The queryParameterMatch matches
                                              if the value of the parameter exactly
                                              matches the contents of exactMatch.
                                            type: string
                                          name:
                                            description: The name of the query parameter
                                              to match. The query parameter must exist
                                              in the request, in the absence of which
                                              the request match fails.
                                            type: string
                                          presentMatch:
                                            description: Specifies that the queryParameterMatch
                                              matches if the request contains the
                                              query parameter, irrespective of whether
                                              the parameter has a value or not.
                                            type: boolean
                                        required:
                                        - name
                                        type: object
                                      type: array
                                  type: object
                                type: array
                              origin:
                                description: |-
                                  The Origin resource that requests to this route should fetch from when a matching response is not in cache. Origins can be defined as short names ("my-origin") or fully-qualified resource URLs - e.g. "networkservices.googleapis.com/projects/my-project/global/edgecacheorigins/my-origin"

                                  Only one of origin or urlRedirect can be set.
                                type: string
                              priority:
                                description: |-
                                  The priority of this route rule, where 1 is the highest priority.

                                  You cannot configure two or more routeRules with the same priority. Priority for each rule must be set to a number between 1 and 999 inclusive.

                                  Priority numbers can have gaps, which enable you to add or remove rules in the future without affecting the rest of the rules. For example, 1, 2, 3, 4, 5, 9, 12, 16 is a valid series of priority numbers
                                  to which you could add rules numbered from 6 to 8, 10 to 11, and 13 to 15 in the future without any impact on existing rules.
                                type: string
                              routeAction:
                                description: In response to a matching path, the routeAction
                                  performs advanced routing actions like URL rewrites,
                                  header transformations, etc. prior to forwarding
                                  the request to the selected origin.
                                properties:
                                  cdnPolicy:
                                    description: The policy to use for defining caching
                                      and signed request behaviour for requests that
                                      match this route.
                                    properties:
                                      addSignatures:
                                        description: |-
                                          Enable signature generation or propagation on this route.

                                          This field may only be specified when signedRequestMode is set to REQUIRE_TOKENS.
                                        properties:
                                          actions:
                                            description: 'The actions to take to add
                                              signatures to responses. Possible values:
                                              ["GENERATE_COOKIE", "GENERATE_TOKEN_HLS_COOKIELESS",
                                              "PROPAGATE_TOKEN_HLS_COOKIELESS"].'
                                            items:
                                              type: string
                                            type: array
                                          copiedParameters:
                                            description: |-
                                              The parameters to copy from the verified token to the generated token.

                                              Only the following parameters may be copied:

                                                * 'PathGlobs'
                                                * 'paths'
                                                * 'acl'
                                                * 'URLPrefix'
                                                * 'IPRanges'
                                                * 'SessionID'
                                                * 'id'
                                                * 'Data'
                                                * 'data'
                                                * 'payload'
                                                * 'Headers'

                                              You may specify up to 6 parameters to copy.  A given parameter is be copied only if the parameter exists in the verified token.  Parameter names are matched exactly as specified.  The order of the parameters does not matter.  Duplicates are not allowed.

                                              This field may only be specified when the GENERATE_COOKIE or GENERATE_TOKEN_HLS_COOKIELESS actions are specified.
                                            items:
                                              type: string
                                            type: array
                                          keyset:
                                            description: |-
                                              The keyset to use for signature generation.

                                              The following are both valid paths to an EdgeCacheKeyset resource:

                                                * 'projects/project/locations/global/edgeCacheKeysets/yourKeyset'
                                                * 'yourKeyset'

                                              This must be specified when the GENERATE_COOKIE or GENERATE_TOKEN_HLS_COOKIELESS actions are specified.  This field may not be specified otherwise.
                                            type: string
                                          tokenQueryParameter:
                                            description: |-
                                              The query parameter in which to put the generated token.

                                              If not specified, defaults to 'edge-cache-token'.

                                              If specified, the name must be 1-64 characters long and match the regular expression '[a-zA-Z]([a-zA-Z0-9_-])*' which means the first character must be a letter, and all following characters must be a dash, underscore, letter or digit.

                                              This field may only be set when the GENERATE_TOKEN_HLS_COOKIELESS or PROPAGATE_TOKEN_HLS_COOKIELESS actions are specified.
                                            type: string
                                          tokenTtl:
                                            description: |-
                                              The duration the token is valid starting from the moment the token is first generated.

                                              Defaults to '86400s' (1 day).

                                              The TTL must be >= 0 and <= 604,800 seconds (1 week).

                                              This field may only be specified when the GENERATE_COOKIE or GENERATE_TOKEN_HLS_COOKIELESS actions are specified.

                                              A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
                                            type: string
                                        required:
                                        - actions
                                        type: object
                                      cacheKeyPolicy:
                                        description: Defines the request parameters
                                          that contribute to the cache key.
                                        properties:
                                          excludeHost:
                                            description: |-
                                              If true, requests to different hosts will be cached separately.

                                              Note: this should only be enabled if hosts share the same origin and content. Removing the host from the cache key may inadvertently result in different objects being cached than intended, depending on which route the first user matched.
                                            type: boolean
                                          excludeQueryString:
                                            description: |-
                                              If true, exclude query string parameters from the cache key

                                              If false (the default), include the query string parameters in
                                              the cache key according to includeQueryParameters and
                                              excludeQueryParameters. If neither includeQueryParameters nor
                                              excludeQueryParameters is set, the entire query string will be
                                              included.
                                            type: boolean
                                          excludedQueryParameters:
                                            description: |-
                                              Names of query string parameters to exclude from cache keys. All other parameters will be included.

                                              Either specify includedQueryParameters or excludedQueryParameters, not both. '&' and '=' will be percent encoded and not treated as delimiters.
                                            items:
                                              type: string
                                            type: array
                                          includeProtocol:
                                            description: If true, http and https requests
                                              will be cached separately.
                                            type: boolean
                                          includedCookieNames:
                                            description: |-
                                              Names of Cookies to include in cache keys.  The cookie name and cookie value of each cookie named will be used as part of the cache key.

                                              Cookie names:
                                                - must be valid RFC 6265 "cookie-name" tokens
                                                - are case sensitive
                                                - cannot start with "Edge-Cache-" (case insensitive)

                                                Note that specifying several cookies, and/or cookies that have a large range of values (e.g., per-user) will dramatically impact the cache hit rate, and may result in a higher eviction rate and reduced performance.

                                                You may specify up to three cookie names.
                                            items:
                                              type: string
                                            type: array
                                          includedHeaderNames:
                                            description: |-
                                              Names of HTTP request headers to include in cache keys. The value of the header field will be used as part of the cache key.

                                              - Header names must be valid HTTP RFC 7230 header field values.
                                              - Header field names are case insensitive
                                              - To include the HTTP method, use ":method"

                                              Note that specifying several headers, and/or headers that have a large range of values (e.g. per-user) will dramatically impact the cache hit rate, and may result in a higher eviction rate and reduced performance.
                                            items:
                                              type: string
                                            type: array
                                          includedQueryParameters:
                                            description: |-
                                              Names of query string parameters to include in cache keys. All other parameters will be excluded.

                                              Either specify includedQueryParameters or excludedQueryParameters, not both. '&' and '=' will be percent encoded and not treated as delimiters.
                                            items:
                                              type: string
                                            type: array
                                        type: object
                                      cacheMode:
                                        description: |-
                                          Cache modes allow users to control the behaviour of the cache, what content it should cache automatically, whether to respect origin headers, or whether to unconditionally cache all responses.

                                          For all cache modes, Cache-Control headers will be passed to the client. Use clientTtl to override what is sent to the client. Possible values: ["CACHE_ALL_STATIC", "USE_ORIGIN_HEADERS", "FORCE_CACHE_ALL", "BYPASS_CACHE"].
                                        type: string
                                      clientTtl:
                                        description: |-
                                          Specifies a separate client (e.g. browser client) TTL, separate from the TTL used by the edge caches. Leaving this empty will use the same cache TTL for both the CDN and the client-facing response.

                                          - The TTL must be > 0 and <= 86400s (1 day)
                                          - The clientTtl cannot be larger than the defaultTtl (if set)
                                          - Fractions of a second are not allowed.

                                          Omit this field to use the defaultTtl, or the max-age set by the origin, as the client-facing TTL.

                                          When the cache mode is set to "USE_ORIGIN_HEADERS" or "BYPASS_CACHE", you must omit this field.
                                          A duration in seconds terminated by 's'. Example: "3s".
                                        type: string
                                      defaultTtl:
                                        description: |-
                                          Specifies the default TTL for cached content served by this origin for responses that do not have an existing valid TTL (max-age or s-max-age).

                                          Defaults to 3600s (1 hour).

                                          - The TTL must be >= 0 and <= 31,536,000 seconds (1 year)
                                          - Setting a TTL of "0" means "always revalidate" (equivalent to must-revalidate)
                                          - The value of defaultTTL cannot be set to a value greater than that of maxTTL.
                                          - Fractions of a second are not allowed.
                                          - When the cacheMode is set to FORCE_CACHE_ALL, the defaultTTL will overwrite the TTL set in all responses.

                                          Note that infrequently accessed objects may be evicted from the cache before the defined TTL. Objects that expire will be revalidated with the origin.

                                          When the cache mode is set to "USE_ORIGIN_HEADERS" or "BYPASS_CACHE", you must omit this field.

                                          A duration in seconds terminated by 's'. Example: "3s".
                                        type: string
                                      maxTtl:
                                        description: |-
                                          Specifies the maximum allowed TTL for cached content served by this origin.

                                          Defaults to 86400s (1 day).

                                          Cache directives that attempt to set a max-age or s-maxage higher than this, or an Expires header more than maxTtl seconds in the future will be capped at the value of maxTTL, as if it were the value of an s-maxage Cache-Control directive.

                                          - The TTL must be >= 0 and <= 31,536,000 seconds (1 year)
                                          - Setting a TTL of "0" means "always revalidate"
                                          - The value of maxTtl must be equal to or greater than defaultTtl.
                                          - Fractions of a second are not allowed.

                                          When the cache mode is set to "USE_ORIGIN_HEADERS", "FORCE_CACHE_ALL", or "BYPASS_CACHE", you must omit this field.

                                          A duration in seconds terminated by 's'. Example: "3s".
                                        type: string
                                      negativeCaching:
                                        description: |-
                                          Negative caching allows per-status code TTLs to be set, in order to apply fine-grained caching for common errors or redirects. This can reduce the load on your origin and improve end-user experience by reducing response latency.

                                          By default, the CDNPolicy will apply the following default TTLs to these status codes:

                                          - HTTP 300 (Multiple Choice), 301, 308 (Permanent Redirects): 10m
                                          - HTTP 404 (Not Found), 410 (Gone), 451 (Unavailable For Legal Reasons): 120s
                                          - HTTP 405 (Method Not Found), 414 (URI Too Long), 501 (Not Implemented): 60s

                                          These defaults can be overridden in negativeCachingPolicy.
                                        type: boolean
                                      negativeCachingPolicy:
                                        additionalProperties:
                                          type: string
                                        description: |-
                                          Sets a cache TTL for the specified HTTP status code. negativeCaching must be enabled to configure negativeCachingPolicy.

                                          - Omitting the policy and leaving negativeCaching enabled will use the default TTLs for each status code, defined in negativeCaching.
                                          - TTLs must be >= 0 (where 0 is "always revalidate") and <= 86400s (1 day)

                                          Note that when specifying an explicit negativeCachingPolicy, you should take care to specify a cache TTL for all response codes that you wish to cache. The CDNPolicy will not apply any default negative caching when a policy exists.
                                        type: object
                                      signedRequestKeyset:
                                        description: The EdgeCacheKeyset containing
                                          the set of public keys used to validate
                                          signed requests at the edge.
                                        type: string
                                      signedRequestMaximumExpirationTtl:
                                        description: |-
                                          Limit how far into the future the expiration time of a signed request may be.

                                          When set, a signed request is rejected if its expiration time is later than now + signedRequestMaximumExpirationTtl, where now is the time at which the signed request is first handled by the CDN.

                                          - The TTL must be > 0.
                                          - Fractions of a second are not allowed.

                                          By default, signedRequestMaximumExpirationTtl is not set and the expiration time of a signed request may be arbitrarily far into future.
                                        type: string
                                      signedRequestMode:
                                        description: |-
                                          Whether to enforce signed requests. The default value is DISABLED, which means all content is public, and does not authorize access.

                                          You must also set a signedRequestKeyset to enable signed requests.

                                          When set to REQUIRE_SIGNATURES, all matching requests will have their signature validated. Requests that were not signed with the corresponding private key, or that are otherwise invalid (expired, do not match the signature, IP address, or header) will be rejected with a HTTP 403 and (if enabled) logged. Possible values: ["DISABLED", "REQUIRE_SIGNATURES", "REQUIRE_TOKENS"].
                                        type: string
                                      signedTokenOptions:
                                        description: |-
                                          Additional options for signed tokens.

                                          signedTokenOptions may only be specified when signedRequestMode is REQUIRE_TOKENS.
                                        properties:
                                          allowedSignatureAlgorithms:
                                            description: |-
                                              The allowed signature algorithms to use.

                                              Defaults to using only ED25519.

                                              You may specify up to 3 signature algorithms to use. Possible values: ["ED25519", "HMAC_SHA_256", "HMAC_SHA1"].
                                            items:
                                              type: string
                                            type: array
                                          tokenQueryParameter:
                                            description: |-
                                              The query parameter in which to find the token.

                                              The name must be 1-64 characters long and match the regular expression '[a-zA-Z]([a-zA-Z0-9_-])*' which means the first character must be a letter, and all following characters must be a dash, underscore, letter or digit.

                                              Defaults to 'edge-cache-token'.
                                            type: string
                                        type: object
                                    type: object
                                  corsPolicy:
                                    description: CORSPolicy defines Cross-Origin-Resource-Sharing
                                      configuration, including which CORS response
                                      headers will be set.
                                    properties:
                                      allowCredentials:
                                        description: |-
                                          In response to a preflight request, setting this to true indicates that the actual request can include user credentials.

                                          This translates to the Access-Control-Allow-Credentials response header.
                                        type: boolean
                                      allowHeaders:
                                        description: Specifies the content for the
                                          Access-Control-Allow-Headers response header.
                                        items:
                                          type: string
                                        type: array
                                      allowMethods:
                                        description: Specifies the content for the
                                          Access-Control-Allow-Methods response header.
                                        items:
                                          type: string
                                        type: array
                                      allowOrigins:
                                        description: |-
                                          Specifies the list of origins that will be allowed to do CORS requests.

                                          This translates to the Access-Control-Allow-Origin response header.
                                        items:
                                          type: string
                                        type: array
                                      disabled:
                                        description: If true, specifies the CORS policy
                                          is disabled. The default value is false,
                                          which indicates that the CORS policy is
                                          in effect.
                                        type: boolean
                                      exposeHeaders:
                                        description: Specifies the content for the
                                          Access-Control-Allow-Headers response header.
                                        items:
                                          type: string
                                        type: array
                                      maxAge:
                                        description: |-
                                          Specifies how long results of a preflight request can be cached by a client in seconds. Note that many browser clients enforce a maximum TTL of 600s (10 minutes).

                                          - Setting the value to -1 forces a pre-flight check for all requests (not recommended)
                                          - A maximum TTL of 86400s can be set, but note that (as above) some clients may force pre-flight checks at a more regular interval.
                                          - This translates to the Access-Control-Max-Age header.

                                          A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
                                        type: string
                                    required:
                                    - maxAge
                                    type: object
                                  urlRewrite:
                                    description: The URL rewrite configuration for
                                      requests that match this route.
                                    properties:
                                      hostRewrite:
                                        description: Prior to forwarding the request
                                          to the selected origin, the request's host
                                          header is replaced with contents of hostRewrite.
                                        type: string
                                      pathPrefixRewrite:
                                        description: Prior to forwarding the request
                                          to the selected origin, the matching portion
                                          of the request's path is replaced by pathPrefixRewrite.
                                        type: string
                                      pathTemplateRewrite:
                                        description: |-
                                          Prior to forwarding the request to the selected origin, if the
                                          request matched a pathTemplateMatch, the matching portion of the
                                          request's path is replaced re-written using the pattern specified
                                          by pathTemplateRewrite.

                                          pathTemplateRewrite must be between 1 and 255 characters
                                          (inclusive), must start with a '/', and must only use variables
                                          captured by the route's pathTemplate matchers.

                                          pathTemplateRewrite may only be used when all of a route's
                                          MatchRules specify pathTemplate.

                                          Only one of pathPrefixRewrite and pathTemplateRewrite may be
                                          specified.
                                        type: string
                                    type: object
                                type: object
                              urlRedirect:
                                description: The URL redirect configuration for requests
                                  that match this route.
                                properties:
                                  hostRedirect:
                                    description: The host that will be used in the
                                      redirect response instead of the one that was
                                      supplied in the request.
                                    type: string
                                  httpsRedirect:
                                    description: |-
                                      If set to true, the URL scheme in the redirected request is set to https. If set to false, the URL scheme of the redirected request will remain the same as that of the request.

                                      This can only be set if there is at least one (1) edgeSslCertificate set on the service.
                                    type: boolean
                                  pathRedirect:
                                    description: |-
                                      The path that will be used in the redirect response instead of the one that was supplied in the request.

                                      pathRedirect cannot be supplied together with prefixRedirect. Supply one alone or neither. If neither is supplied, the path of the original request will be used for the redirect.

                                      The path value must be between 1 and 1024 characters.
                                    type: string
                                  prefixRedirect:
                                    description: |-
                                      The prefix that replaces the prefixMatch specified in the routeRule, retaining the remaining portion of the URL before redirecting the request.

                                      prefixRedirect cannot be supplied together with pathRedirect. Supply one alone or neither. If neither is supplied, the path of the original request will be used for the redirect.
                                    type: string
                                  redirectResponseCode:
                                    description: |-
                                      The HTTP Status code to use for this RedirectAction.

                                      The supported values are:

                                      - 'MOVED_PERMANENTLY_DEFAULT', which is the default value and corresponds to 301.
                                      - 'FOUND', which corresponds to 302.
                                      - 'SEE_OTHER' which corresponds to 303.
                                      - 'TEMPORARY_REDIRECT', which corresponds to 307. in this case, the request method will be retained.
                                      - 'PERMANENT_REDIRECT', which corresponds to 308. in this case, the request method will be retained. Possible values: ["MOVED_PERMANENTLY_DEFAULT", "FOUND", "SEE_OTHER", "TEMPORARY_REDIRECT", "PERMANENT_REDIRECT"].
                                    type: string
                                  stripQuery:
                                    description: If set to true, any accompanying
                                      query portion of the original URL is removed
                                      prior to redirecting the request. If set to
                                      false, the query portion of the original URL
                                      is retained.
                                    type: boolean
                                type: object
                            required:
                            - matchRule
                            - priority
                            type: object
                          type: array
                      required:
                      - name
                      - routeRule
                      type: object
                    type: array
                required:
                - hostRule
                - pathMatcher
                type: object
              sslPolicy:
                description: |-
                  URL of the SslPolicy resource that will be associated with the EdgeCacheService.

                  If not set, the EdgeCacheService has no SSL policy configured, and will default to the "COMPATIBLE" policy.
                type: string
            required:
            - projectRef
            - routing
            type: object
          status:
            properties:
              conditions:
                description: Conditions represent the latest available observation
                  of the resource's current state.
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's
                        last transition.
                      type: string
                    status:
                      description: Status is the status of the condition. Can be True,
                        False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  type: object
                type: array
              ipv4Addresses:
                description: The IPv4 addresses associated with this service. Addresses
                  are static for the lifetime of the service.
                items:
                  type: string
                type: array
              ipv6Addresses:
                description: The IPv6 addresses associated with this service. Addresses
                  are static for the lifetime of the service.
                items:
                  type: string
                type: array
              observedGeneration:
                description: ObservedGeneration is the generation of the resource
                  that was most recently observed by the Config Connector controller.
                  If this is equal to metadata.generation, then that means that the
                  current reported status reflects the most recent desired state of
                  the resource.
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
