# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cnrm.cloud.google.com/version: 1.107.0
  creationTimestamp: null
  labels:
    cnrm.cloud.google.com/dcl2crd: "true"
    cnrm.cloud.google.com/managed-by-kcc: "true"
    cnrm.cloud.google.com/stability-level: alpha
    cnrm.cloud.google.com/system: "true"
  name: runservices.run.cnrm.cloud.google.com
spec:
  group: run.cnrm.cloud.google.com
  names:
    categories:
    - gcp
    kind: RunService
    plural: runservices
    shortNames:
    - gcprunservice
    - gcprunservices
    singular: runservice
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: When 'True', the most recent reconcile of the resource succeeded
      jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - description: The reason for the value in 'Ready'
      jsonPath: .status.conditions[?(@.type=='Ready')].reason
      name: Status
      type: string
    - description: The last transition time for the value in 'Status'
      jsonPath: .status.conditions[?(@.type=='Ready')].lastTransitionTime
      name: Status Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'apiVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
            type: string
          kind:
            description: 'kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              annotations:
                additionalProperties:
                  type: string
                description: 'Unstructured key value map that may be set by external
                  tools to store and arbitrary metadata. They are not queryable and
                  should be preserved when modifying objects. Cloud Run will populate
                  some annotations using ''run.googleapis.com'' or ''serving.knative.dev''
                  namespaces. This field follows Kubernetes annotations'' namespacing,
                  limits, and rules. More info: http://kubernetes.io/docs/user-guide/annotations'
                type: object
              binaryAuthorization:
                description: Settings for the Binary Authorization feature.
                properties:
                  breakglassJustification:
                    description: If present, indicates to use Breakglass using this
                      justification. For more information on breakglass, see https://cloud.google.com/binary-authorization/docs/using-breakglass
                    type: string
                  useDefault:
                    description: If True, indicates to use the default project's binary
                      authorization policy. If False, binary authorization will be
                      disabled
                    type: boolean
                type: object
              client:
                description: Arbitrary identifier for the API client.
                type: string
              clientVersion:
                description: Arbitrary version identifier for the API client.
                type: string
              description:
                description: User-provided description of the Service.
                type: string
              ingress:
                description: Provides the ingress settings for this Service. On output,
                  returns the currently observed ingress settings, or INGRESS_TRAFFIC_UNSPECIFIED
                  if no revision is active.
                type: string
              launchStage:
                description: 'The launch stage as defined by [Google Cloud Platform
                  Launch Stages](http://cloud.google.com/terms/launch-stages). Cloud
                  Run supports `ALPHA`, `BETA`, and `GA`. If no value is specified,
                  GA is assumed. Possible values: LAUNCH_STAGE_UNSPECIFIED, UNIMPLEMENTED,
                  PRELAUNCH, EARLY_ACCESS, ALPHA, BETA, GA, DEPRECATED'
                type: string
              location:
                description: Immutable. The location for the resource
                type: string
              projectRef:
                description: Immutable. The Project that this resource belongs to.
                oneOf:
                - not:
                    required:
                    - external
                  required:
                  - name
                - not:
                    anyOf:
                    - required:
                      - name
                    - required:
                      - namespace
                  required:
                  - external
                properties:
                  external:
                    description: |-
                      The project for the resource

                      Allowed value: The Google Cloud resource name of a `Project` resource (format: `projects/{{name}}`).
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                type: object
              resourceID:
                description: Immutable. Optional. The name of the resource. Used for
                  creation and acquisition. When unset, the value of `metadata.name`
                  is used as the default.
                type: string
              template:
                description: Required. The template used to create revisions for this
                  Service.
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: KRM-style annotations for the resource.
                    type: object
                  containerConcurrency:
                    description: Sets the maximum number of requests that each serving
                      instance can receive.
                    format: int64
                    type: integer
                  containers:
                    description: Holds the single container that defines the unit
                      of execution for this Revision.
                    items:
                      properties:
                        args:
                          description: 'Arguments to the entrypoint. The docker image''s
                            CMD is used if this is not provided. Variable references
                            $(VAR_NAME) are expanded using the container''s environment.
                            If a variable cannot be resolved, the reference in the
                            input string will be unchanged. The $(VAR_NAME) syntax
                            can be escaped with a double $$, ie: $$(VAR_NAME). Escaped
                            references will never be expanded, regardless of whether
                            the variable exists or not. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                          items:
                            type: string
                          type: array
                        command:
                          description: 'Entrypoint array. Not executed within a shell.
                            The docker image''s ENTRYPOINT is used if this is not
                            provided. Variable references $(VAR_NAME) are expanded
                            using the container''s environment. If a variable cannot
                            be resolved, the reference in the input string will be
                            unchanged. The $(VAR_NAME) syntax can be escaped with
                            a double $$, ie: $$(VAR_NAME). Escaped references will
                            never be expanded, regardless of whether the variable
                            exists or not. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                          items:
                            type: string
                          type: array
                        env:
                          description: List of environment variables to set in the
                            container.
                          items:
                            properties:
                              name:
                                description: Required. Name of the environment variable.
                                  Must be a C_IDENTIFIER, and mnay not exceed 32768
                                  characters.
                                type: string
                              value:
                                description: 'Variable references $(VAR_NAME) are
                                  expanded using the previous defined environment
                                  variables in the container and any route environment
                                  variables. If a variable cannot be resolved, the
                                  reference in the input string will be unchanged.
                                  The $(VAR_NAME) syntax can be escaped with a double
                                  $$, ie: $$(VAR_NAME). Escaped references will never
                                  be expanded, regardless of whether the variable
                                  exists or not. Defaults to "", and the maximum length
                                  is 32768 bytes.'
                                type: string
                              valueSource:
                                description: Source for the environment variable's
                                  value.
                                properties:
                                  secretKeyRef:
                                    description: Selects a secret and a specific version
                                      from Cloud Secret Manager.
                                    properties:
                                      secretRef:
                                        oneOf:
                                        - not:
                                            required:
                                            - external
                                          required:
                                          - name
                                        - not:
                                            anyOf:
                                            - required:
                                              - name
                                            - required:
                                              - namespace
                                          required:
                                          - external
                                        properties:
                                          external:
                                            description: |-
                                              Required. The name of the secret in Cloud Secret Manager. Format: {secret_name} if the secret is in the same project. projects/{project}/secrets/{secret_name} if the secret is in a different project.

                                              Allowed value: The Google Cloud resource name of a `SecretManagerSecret` resource (format: `projects/{{project}}/secrets/{{name}}`).
                                            type: string
                                          name:
                                            description: 'Name of the referent. More
                                              info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                            type: string
                                          namespace:
                                            description: 'Namespace of the referent.
                                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                            type: string
                                        type: object
                                      versionRef:
                                        oneOf:
                                        - not:
                                            required:
                                            - external
                                          required:
                                          - name
                                        - not:
                                            anyOf:
                                            - required:
                                              - name
                                            - required:
                                              - namespace
                                          required:
                                          - external
                                        properties:
                                          external:
                                            description: |-
                                              The Cloud Secret Manager secret version. Can be 'latest' for the latest value or an integer for a specific version.

                                              Allowed value: The Google Cloud resource name of a `SecretManagerSecretVersion` resource (format: `{{name}}`).
                                            type: string
                                          name:
                                            description: 'Name of the referent. More
                                              info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                            type: string
                                          namespace:
                                            description: 'Namespace of the referent.
                                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                            type: string
                                        type: object
                                    required:
                                    - secretRef
                                    type: object
                                type: object
                            required:
                            - name
                            type: object
                          type: array
                        image:
                          description: 'Required. URL of the Container image in Google
                            Container Registry or Docker More info: https://kubernetes.io/docs/concepts/containers/images'
                          type: string
                        name:
                          description: Name of the container specified as a DNS_LABEL.
                          type: string
                        ports:
                          description: List of ports to expose from the container.
                            Only a single port can be specified. The specified ports
                            must be listening on all interfaces (0.0.0.0) within the
                            container to be accessible. If omitted, a port number
                            will be chosen and passed to the container through the
                            PORT environment variable for the container to listen
                            on.
                          items:
                            properties:
                              containerPort:
                                description: Port number the container listens on.
                                  This must be a valid TCP port number, 0 < container_port
                                  < 65536.
                                format: int64
                                type: integer
                              name:
                                description: If specified, used to specify which protocol
                                  to use. Allowed values are "http1" and "h2c".
                                type: string
                            type: object
                          type: array
                        resources:
                          description: 'Compute Resource requirements by this container.
                            More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                          properties:
                            cpuIdle:
                              description: Determines whether CPU should be throttled
                                or not outside of requests.
                              type: boolean
                            limits:
                              additionalProperties:
                                type: string
                              description: 'Only memory and CPU are supported. Note:
                                The only supported values for CPU are ''1'', ''2'',
                                and ''4''. Setting 4 CPU requires at least 2Gi of
                                memory. The values of the map is string form of the
                                ''quantity'' k8s type: https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go'
                              type: object
                          type: object
                        volumeMounts:
                          description: Volume to mount into the container's filesystem.
                          items:
                            properties:
                              mountPath:
                                description: Required. Path within the container at
                                  which the volume should be mounted. Must not contain
                                  ':'. For Cloud SQL volumes, it can be left empty,
                                  or must otherwise be `/cloudsql`. All instances
                                  defined in the Volume will be available as `/cloudsql/[instance]`.
                                  For more information on Cloud SQL volumes, visit
                                  https://cloud.google.com/sql/docs/mysql/connect-run
                                type: string
                              name:
                                description: Required. This must match the Name of
                                  a Volume.
                                type: string
                            required:
                            - mountPath
                            - name
                            type: object
                          type: array
                      required:
                      - image
                      type: object
                    type: array
                  executionEnvironment:
                    description: 'The sandbox environment to host this Revision. Possible
                      values: EXECUTION_ENVIRONMENT_UNSPECIFIED, EXECUTION_ENVIRONMENT_GEN1,
                      EXECUTION_ENVIRONMENT_GEN2'
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: KRM-style labels for the resource.
                    type: object
                  revision:
                    description: The unique name for the revision. If this field is
                      omitted, it will be automatically generated based on the Service
                      name.
                    type: string
                  scaling:
                    description: Scaling settings for this Revision.
                    properties:
                      maxInstanceCount:
                        description: Maximum number of serving instances that this
                          resource should have.
                        format: int64
                        type: integer
                      minInstanceCount:
                        description: Minimum number of serving instances that this
                          resource should have.
                        format: int64
                        type: integer
                    type: object
                  serviceAccountRef:
                    oneOf:
                    - not:
                        required:
                        - external
                      required:
                      - name
                    - not:
                        anyOf:
                        - required:
                          - name
                        - required:
                          - namespace
                      required:
                      - external
                    properties:
                      external:
                        description: |-
                          Email address of the IAM service account associated with the revision of the service. The service account represents the identity of the running revision, and determines what permissions the revision has. If not provided, the revision will use the project's default service account.

                          Allowed value: The `email` field of an `IAMServiceAccount` resource.
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                    type: object
                  timeout:
                    description: Max allowed time for an instance to respond to a
                      request.
                    type: string
                  volumes:
                    description: A list of Volumes to make available to containers.
                    items:
                      properties:
                        cloudSqlInstance:
                          description: For Cloud SQL volumes, contains the specific
                            instances that should be mounted. Visit https://cloud.google.com/sql/docs/mysql/connect-run
                            for more information on how to connect Cloud SQL and Cloud
                            Run.
                          properties:
                            instances:
                              items:
                                oneOf:
                                - not:
                                    required:
                                    - external
                                  required:
                                  - name
                                - not:
                                    anyOf:
                                    - required:
                                      - name
                                    - required:
                                      - namespace
                                  required:
                                  - external
                                properties:
                                  external:
                                    description: 'Allowed value: The `instanceName`
                                      field of a `SQLInstance` resource.'
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                    type: string
                                  namespace:
                                    description: 'Namespace of the referent. More
                                      info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                    type: string
                                type: object
                              type: array
                          type: object
                        name:
                          description: Required. Volume's name.
                          type: string
                        secret:
                          description: 'Secret represents a secret that should populate
                            this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                          properties:
                            defaultMode:
                              description: 'Integer representation of mode bits to
                                use on created files by default. Must be a value between
                                0000 and 0777 (octal), defaulting to 0644. Directories
                                within the path are not affected by this setting.
                                Notes * Internally, a umask of 0222 will be applied
                                to any non-zero value. * This is an integer representation
                                of the mode bits. So, the octal integer value should
                                look exactly as the chmod numeric notation with a
                                leading zero. Some examples: for chmod 777 (a=rwx),
                                set to 0777 (octal) or 511 (base-10). For chmod 640
                                (u=rw,g=r), set to 0640 (octal) or 416 (base-10).
                                For chmod 755 (u=rwx,g=rx,o=rx), set to 0755 (octal)
                                or 493 (base-10). * This might be in conflict with
                                other options that affect the file mode, like fsGroup,
                                and the result can be other mode bits set. This might
                                be in conflict with other options that affect the
                                file mode, like fsGroup, and as a result, other mode
                                bits could be set.'
                              format: int64
                              type: integer
                            items:
                              description: If unspecified, the volume will expose
                                a file whose name is the secret, relative to VolumeMount.mount_path.
                                If specified, the key will be used as the version
                                to fetch from Cloud Secret Manager and the path will
                                be the name of the file exposed in the volume. When
                                items are defined, they must specify a path and a
                                version.
                              items:
                                properties:
                                  mode:
                                    description: 'Integer octal mode bits to use on
                                      this file, must be a value between 01 and 0777
                                      (octal). If 0 or not set, the Volume''s default
                                      mode will be used. Notes * Internally, a umask
                                      of 0222 will be applied to any non-zero value.
                                      * This is an integer representation of the mode
                                      bits. So, the octal integer value should look
                                      exactly as the chmod numeric notation with a
                                      leading zero. Some examples: for chmod 777 (a=rwx),
                                      set to 0777 (octal) or 511 (base-10). For chmod
                                      640 (u=rw,g=r), set to 0640 (octal) or 416 (base-10).
                                      For chmod 755 (u=rwx,g=rx,o=rx), set to 0755
                                      (octal) or 493 (base-10). * This might be in
                                      conflict with other options that affect the
                                      file mode, like fsGroup, and the result can
                                      be other mode bits set.'
                                    format: int64
                                    type: integer
                                  path:
                                    description: Required. The relative path of the
                                      secret in the container.
                                    type: string
                                  versionRef:
                                    oneOf:
                                    - not:
                                        required:
                                        - external
                                      required:
                                      - name
                                    - not:
                                        anyOf:
                                        - required:
                                          - name
                                        - required:
                                          - namespace
                                      required:
                                      - external
                                    properties:
                                      external:
                                        description: |-
                                          The Cloud Secret Manager secret version. Can be 'latest' for the latest value or an integer for a specific version.

                                          Allowed value: The Google Cloud resource name of a `SecretManagerSecretVersion` resource (format: `{{name}}`).
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                      namespace:
                                        description: 'Namespace of the referent. More
                                          info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                        type: string
                                    type: object
                                required:
                                - path
                                type: object
                              type: array
                            secretRef:
                              oneOf:
                              - not:
                                  required:
                                  - external
                                required:
                                - name
                              - not:
                                  anyOf:
                                  - required:
                                    - name
                                  - required:
                                    - namespace
                                required:
                                - external
                              properties:
                                external:
                                  description: |-
                                    Required. The name of the secret in Cloud Secret Manager. Format: {secret} if the secret is in the same project. projects/{project}/secrets/{secret} if the secret is in a different project.

                                    Allowed value: The Google Cloud resource name of a `SecretManagerSecret` resource (format: `projects/{{project}}/secrets/{{name}}`).
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                                namespace:
                                  description: 'Namespace of the referent. More info:
                                    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                  type: string
                              type: object
                          required:
                          - secretRef
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                  vpcAccess:
                    description: VPC Access configuration to use for this Revision.
                      For more information, visit https://cloud.google.com/run/docs/configuring/connecting-vpc.
                    properties:
                      connectorRef:
                        oneOf:
                        - not:
                            required:
                            - external
                          required:
                          - name
                        - not:
                            anyOf:
                            - required:
                              - name
                            - required:
                              - namespace
                          required:
                          - external
                        properties:
                          external:
                            description: |-
                              VPC Access connector name. Format: projects/{project}/locations/{location}/connectors/{connector}

                              Allowed value: The Google Cloud resource name of a `VPCAccessConnector` resource (format: `projects/{{project}}/locations/{{location}}/connectors/{{name}}`).
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                        type: object
                      egress:
                        description: 'Traffic VPC egress settings. Possible values:
                          VPC_EGRESS_UNSPECIFIED, ALL_TRAFFIC, PRIVATE_RANGES_ONLY'
                        type: string
                    type: object
                type: object
              traffic:
                description: Specifies how to distribute traffic over a collection
                  of Revisions belonging to the Service. If traffic is empty or not
                  provided, defaults to 100% traffic to the latest `Ready` Revision.
                items:
                  properties:
                    percent:
                      description: Specifies percent of the traffic to this Revision.
                        This defaults to zero if unspecified. Cloud Run currently
                        requires 100 percent for a single TrafficTarget entry.
                      format: int64
                      type: integer
                    revision:
                      description: Revision to which to send this portion of traffic,
                        if traffic allocation is by revision.
                      type: string
                    tag:
                      description: Indicates a string to be part of the URI to exclusively
                        reference this target.
                      type: string
                    type:
                      description: 'The allocation type for this traffic target. Possible
                        values: TRAFFIC_TARGET_ALLOCATION_TYPE_UNSPECIFIED, TRAFFIC_TARGET_ALLOCATION_TYPE_LATEST,
                        TRAFFIC_TARGET_ALLOCATION_TYPE_REVISION'
                      type: string
                  type: object
                type: array
            required:
            - location
            - projectRef
            - template
            type: object
          status:
            properties:
              conditions:
                description: Conditions represent the latest available observation
                  of the resource's current state.
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's
                        last transition.
                      type: string
                    status:
                      description: Status is the status of the condition. Can be True,
                        False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  type: object
                type: array
              createTime:
                description: Output only. The creation time.
                format: date-time
                type: string
              creator:
                description: Output only. Email address of the authenticated creator.
                type: string
              deleteTime:
                description: Output only. The deletion time.
                format: date-time
                type: string
              etag:
                description: Output only. A system-generated fingerprint for this
                  version of the resource. May be used to detect modification conflict
                  during updates.
                type: string
              expireTime:
                description: Output only. For a deleted resource, the time after which
                  it will be permamently deleted.
                format: date-time
                type: string
              labels:
                additionalProperties:
                  type: string
                description: Map of string keys and values that can be used to organize
                  and categorize objects. User-provided labels are shared with Google's
                  billing system, so they can be used to filter, or break down billing
                  charges by team, component, environment, state, etc. For more information,
                  visit https://cloud.google.com/resource-manager/docs/creating-managing-labels
                  or https://cloud.google.com/run/docs/configuring/labels Cloud Run
                  will populate some labels with 'run.googleapis.com' or 'serving.knative.dev'
                  namespaces. Those labels are read-only, and user changes will not
                  be preserved.
                type: object
              lastModifier:
                description: Output only. Email address of the last authenticated
                  modifier.
                type: string
              latestCreatedRevision:
                description: Output only. Name of the last created revision. See comments
                  in `reconciling` for additional information on reconciliation process
                  in Cloud Run.
                type: string
              latestReadyRevision:
                description: Output only. Name of the latest revision that is serving
                  traffic. See comments in `reconciling` for additional information
                  on reconciliation process in Cloud Run.
                type: string
              observedGeneration:
                description: ObservedGeneration is the generation of the resource
                  that was most recently observed by the Config Connector controller.
                  If this is equal to metadata.generation, then that means that the
                  current reported status reflects the most recent desired state of
                  the resource.
                type: integer
              reconciling:
                description: 'Output only. Returns true if the Service is currently
                  being acted upon by the system to bring it into the desired state.
                  When a new Service is created, or an existing one is updated, Cloud
                  Run will asynchronously perform all necessary steps to bring the
                  Service to the desired serving state. This process is called reconciliation.
                  While reconciliation is in process, `observed_generation`, `latest_ready_revison`,
                  `traffic_statuses`, and `uri` will have transient values that might
                  mismatch the intended state: Once reconciliation is over (and this
                  field is false), there are two possible outcomes: reconciliation
                  succeeded and the serving state matches the Service, or there was
                  an error, and reconciliation failed. This state can be found in
                  `terminal_condition.state`. If reconciliation succeeded, the following
                  fields will match: `traffic` and `traffic_statuses`, `observed_generation`
                  and `generation`, `latest_ready_revision` and `latest_created_revision`.
                  If reconciliation failed, `traffic_statuses`, `observed_generation`,
                  and `latest_ready_revision` will have the state of the last serving
                  revision, or empty for newly created Services. Additional information
                  on the failure can be found in `terminal_condition` and `conditions`.'
                type: boolean
              resourceGeneration:
                description: Output only. A number that monotonically increases every
                  time the user modifies the desired state.
                format: int64
                type: integer
              terminalCondition:
                description: Output only. The Condition of this Service, containing
                  its readiness status, and detailed error information in case it
                  did not reach a serving state. See comments in `reconciling` for
                  additional information on reconciliation process in Cloud Run.
                properties:
                  jobReason:
                    description: 'A reason for the job condition. Possible values:
                      JOB_REASON_UNDEFINED, JOB_STATUS_SERVICE_POLLING_ERROR'
                    type: string
                  lastTransitionTime:
                    description: Last time the condition transitioned from one status
                      to another.
                    format: date-time
                    type: string
                  message:
                    description: Human readable message indicating details about the
                      current status.
                    type: string
                  reason:
                    description: 'A common (service-level) reason for this condition.
                      Possible values: COMMON_REASON_UNDEFINED, UNKNOWN, REVISION_FAILED,
                      PROGRESS_DEADLINE_EXCEEDED, CONTAINER_MISSING, CONTAINER_PERMISSION_DENIED,
                      CONTAINER_IMAGE_UNAUTHORIZED, CONTAINER_IMAGE_AUTHORIZATION_CHECK_FAILED,
                      ENCRYPTION_KEY_PERMISSION_DENIED, ENCRYPTION_KEY_CHECK_FAILED,
                      SECRETS_ACCESS_CHECK_FAILED, WAITING_FOR_OPERATION, IMMEDIATE_RETRY,
                      POSTPONED_RETRY, INTERNAL'
                    type: string
                  revisionReason:
                    description: 'A reason for the revision condition. Possible values:
                      REVISION_REASON_UNDEFINED, PENDING, RESERVE, RETIRED, RETIRING,
                      RECREATING, HEALTH_CHECK_CONTAINER_ERROR, CUSTOMIZED_PATH_RESPONSE_PENDING,
                      MIN_INSTANCES_NOT_PROVISIONED, ACTIVE_REVISION_LIMIT_REACHED,
                      NO_DEPLOYMENT'
                    type: string
                  severity:
                    description: 'How to interpret failures of this condition, one
                      of Error, Warning, Info Possible values: SEVERITY_UNSPECIFIED,
                      ERROR, WARNING, INFO'
                    type: string
                  state:
                    description: 'State of the condition. Possible values: STATE_UNSPECIFIED,
                      CONDITION_PENDING, CONDITION_RECONCILING, CONDITION_FAILED,
                      CONDITION_SUCCEEDED'
                    type: string
                  type:
                    description: 'type is used to communicate the status of the reconciliation
                      process. See also: https://github.com/knative/serving/blob/main/docs/spec/errors.md#error-conditions-and-reporting
                      Types common to all resources include: * "Ready": True when
                      the Resource is ready.'
                    type: string
                type: object
              trafficStatuses:
                description: Output only. Detailed status information for corresponding
                  traffic targets. See comments in `reconciling` for additional information
                  on reconciliation process in Cloud Run.
                items:
                  properties:
                    percent:
                      description: Specifies percent of the traffic to this Revision.
                      format: int64
                      type: integer
                    revision:
                      description: Revision to which this traffic is sent.
                      type: string
                    tag:
                      description: Indicates the string used in the URI to exclusively
                        reference this target.
                      type: string
                    type:
                      description: 'The allocation type for this traffic target. Possible
                        values: TRAFFIC_TARGET_ALLOCATION_TYPE_UNSPECIFIED, TRAFFIC_TARGET_ALLOCATION_TYPE_LATEST,
                        TRAFFIC_TARGET_ALLOCATION_TYPE_REVISION'
                      type: string
                    uri:
                      description: Displays the target URI.
                      type: string
                  type: object
                type: array
              uid:
                description: Output only. Server assigned unique identifier for the
                  trigger. The value is a UUID4 string and guaranteed to remain unchanged
                  until the resource is deleted.
                type: string
              updateTime:
                description: Output only. The last-modified time.
                format: date-time
                type: string
              uri:
                description: Output only. The main URI in which this Service is serving
                  traffic.
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
