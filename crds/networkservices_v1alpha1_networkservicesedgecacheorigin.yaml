# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cnrm.cloud.google.com/version: 1.124.0
  creationTimestamp: null
  labels:
    cnrm.cloud.google.com/managed-by-kcc: "true"
    cnrm.cloud.google.com/stability-level: alpha
    cnrm.cloud.google.com/system: "true"
    cnrm.cloud.google.com/tf2crd: "true"
  name: networkservicesedgecacheorigins.networkservices.cnrm.cloud.google.com
spec:
  group: networkservices.cnrm.cloud.google.com
  names:
    categories:
    - gcp
    kind: NetworkServicesEdgeCacheOrigin
    plural: networkservicesedgecacheorigins
    shortNames:
    - gcpnetworkservicesedgecacheorigin
    - gcpnetworkservicesedgecacheorigins
    singular: networkservicesedgecacheorigin
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: When 'True', the most recent reconcile of the resource succeeded
      jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - description: The reason for the value in 'Ready'
      jsonPath: .status.conditions[?(@.type=='Ready')].reason
      name: Status
      type: string
    - description: The last transition time for the value in 'Status'
      jsonPath: .status.conditions[?(@.type=='Ready')].lastTransitionTime
      name: Status Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'apiVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
            type: string
          kind:
            description: 'kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              awsV4Authentication:
                description: Enable AWS Signature Version 4 origin authentication.
                properties:
                  accessKeyId:
                    description: The access key ID your origin uses to identify the
                      key.
                    type: string
                  originRegion:
                    description: The name of the AWS region that your origin is in.
                    type: string
                  secretAccessKeyVersion:
                    description: |-
                      The Secret Manager secret version of the secret access key used by your origin.

                      This is the resource name of the secret version in the format 'projects/*/secrets/*/versions/*' where the '*' values are replaced by the project, secret, and version you require.
                    type: string
                required:
                - accessKeyId
                - originRegion
                - secretAccessKeyVersion
                type: object
              description:
                description: A human-readable description of the resource.
                type: string
              failoverOrigin:
                description: |-
                  The Origin resource to try when the current origin cannot be reached.
                  After maxAttempts is reached, the configured failoverOrigin will be used to fulfil the request.

                  The value of timeout.maxAttemptsTimeout dictates the timeout across all origins.
                  A reference to a Topic resource.
                type: string
              maxAttempts:
                description: |-
                  The maximum number of attempts to cache fill from this origin. Another attempt is made when a cache fill fails with one of the retryConditions.

                  Once maxAttempts to this origin have failed the failoverOrigin will be used, if one is specified. That failoverOrigin may specify its own maxAttempts,
                  retryConditions and failoverOrigin to control its own cache fill failures.

                  The total number of allowed attempts to cache fill across this and failover origins is limited to four.
                  The total time allowed for cache fill attempts across this and failover origins can be controlled with maxAttemptsTimeout.

                  The last valid, non-retried response from all origins will be returned to the client.
                  If no origin returns a valid response, an HTTP 502 will be returned to the client.

                  Defaults to 1. Must be a value greater than 0 and less than 4.
                type: integer
              originAddress:
                description: |-
                  A fully qualified domain name (FQDN) or IP address reachable over the public Internet, or the address of a Google Cloud Storage bucket.

                  This address will be used as the origin for cache requests - e.g. FQDN: media-backend.example.com, IPv4: 35.218.1.1, IPv6: 2607:f8b0:4012:809::200e, Cloud Storage: gs://bucketname

                  When providing an FQDN (hostname), it must be publicly resolvable (e.g. via Google public DNS) and IP addresses must be publicly routable.  It must not contain a protocol (e.g., https://) and it must not contain any slashes.
                  If a Cloud Storage bucket is provided, it must be in the canonical "gs://bucketname" format. Other forms, such as "storage.googleapis.com", will be rejected.
                type: string
              originOverrideAction:
                description: |-
                  The override actions, including url rewrites and header
                  additions, for requests that use this origin.
                properties:
                  headerAction:
                    description: |-
                      The header actions, including adding and removing
                      headers, for request handled by this origin.
                    properties:
                      requestHeadersToAdd:
                        description: |-
                          Describes a header to add.

                          You may add a maximum of 25 request headers.
                        items:
                          properties:
                            headerName:
                              description: The name of the header to add.
                              type: string
                            headerValue:
                              description: The value of the header to add.
                              type: string
                            replace:
                              description: |-
                                Whether to replace all existing headers with the same name.

                                By default, added header values are appended
                                to the response or request headers with the
                                same field names. The added values are
                                separated by commas.

                                To overwrite existing values, set 'replace' to 'true'.
                              type: boolean
                          required:
                          - headerName
                          - headerValue
                          type: object
                        type: array
                    type: object
                  urlRewrite:
                    description: |-
                      The URL rewrite configuration for request that are
                      handled by this origin.
                    properties:
                      hostRewrite:
                        description: |-
                          Prior to forwarding the request to the selected
                          origin, the request's host header is replaced with
                          contents of the hostRewrite.

                          This value must be between 1 and 255 characters.
                        type: string
                    type: object
                type: object
              originRedirect:
                description: Follow redirects from this origin.
                properties:
                  redirectConditions:
                    description: |-
                      The set of redirect response codes that the CDN
                      follows. Values of
                      [RedirectConditions](https://cloud.google.com/media-cdn/docs/reference/rest/v1/projects.locations.edgeCacheOrigins#redirectconditions)
                      are accepted.
                    items:
                      type: string
                    type: array
                type: object
              port:
                description: |-
                  The port to connect to the origin on.
                  Defaults to port 443 for HTTP2 and HTTPS protocols, and port 80 for HTTP.
                type: integer
              projectRef:
                description: The project that this resource belongs to.
                oneOf:
                - not:
                    required:
                    - external
                  required:
                  - name
                - not:
                    anyOf:
                    - required:
                      - name
                    - required:
                      - namespace
                  required:
                  - external
                properties:
                  external:
                    description: 'Allowed value: The `name` field of a `Project` resource.'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                type: object
              protocol:
                description: |-
                  The protocol to use to connect to the configured origin. Defaults to HTTP2, and it is strongly recommended that users use HTTP2 for both security & performance.

                  When using HTTP2 or HTTPS as the protocol, a valid, publicly-signed, unexpired TLS (SSL) certificate must be presented by the origin server. Possible values: ["HTTP2", "HTTPS", "HTTP"].
                type: string
              resourceID:
                description: Immutable. Optional. The name of the resource. Used for
                  creation and acquisition. When unset, the value of `metadata.name`
                  is used as the default.
                type: string
              retryConditions:
                description: |-
                  Specifies one or more retry conditions for the configured origin.

                  If the failure mode during a connection attempt to the origin matches the configured retryCondition(s),
                  the origin request will be retried up to maxAttempts times. The failoverOrigin, if configured, will then be used to satisfy the request.

                  The default retryCondition is "CONNECT_FAILURE".

                  retryConditions apply to this origin, and not subsequent failoverOrigin(s),
                  which may specify their own retryConditions and maxAttempts.

                  Valid values are:

                  - CONNECT_FAILURE: Retry on failures connecting to origins, for example due to connection timeouts.
                  - HTTP_5XX: Retry if the origin responds with any 5xx response code, or if the origin does not respond at all, example: disconnects, reset, read timeout, connection failure, and refused streams.
                  - GATEWAY_ERROR: Similar to 5xx, but only applies to response codes 502, 503 or 504.
                  - RETRIABLE_4XX: Retry for retriable 4xx response codes, which include HTTP 409 (Conflict) and HTTP 429 (Too Many Requests)
                  - NOT_FOUND: Retry if the origin returns a HTTP 404 (Not Found). This can be useful when generating video content, and the segment is not available yet.
                  - FORBIDDEN: Retry if the origin returns a HTTP 403 (Forbidden). Possible values: ["CONNECT_FAILURE", "HTTP_5XX", "GATEWAY_ERROR", "RETRIABLE_4XX", "NOT_FOUND", "FORBIDDEN"].
                items:
                  type: string
                type: array
              timeout:
                description: The connection and HTTP timeout configuration for this
                  origin.
                properties:
                  connectTimeout:
                    description: |-
                      The maximum duration to wait for a single origin connection to be established, including DNS lookup, TLS handshake and TCP/QUIC connection establishment.

                      Defaults to 5 seconds. The timeout must be a value between 1s and 15s.

                      The connectTimeout capped by the deadline set by the request's maxAttemptsTimeout.  The last connection attempt may have a smaller connectTimeout in order to adhere to the overall maxAttemptsTimeout.
                    type: string
                  maxAttemptsTimeout:
                    description: |-
                      The maximum time across all connection attempts to the origin, including failover origins, before returning an error to the client. A HTTP 504 will be returned if the timeout is reached before a response is returned.

                      Defaults to 15 seconds. The timeout must be a value between 1s and 30s.

                      If a failoverOrigin is specified, the maxAttemptsTimeout of the first configured origin sets the deadline for all connection attempts across all failoverOrigins.
                    type: string
                  readTimeout:
                    description: |-
                      The maximum duration to wait between reads of a single HTTP connection/stream.

                      Defaults to 15 seconds.  The timeout must be a value between 1s and 30s.

                      The readTimeout is capped by the responseTimeout.  All reads of the HTTP connection/stream must be completed by the deadline set by the responseTimeout.

                      If the response headers have already been written to the connection, the response will be truncated and logged.
                    type: string
                  responseTimeout:
                    description: |-
                      The maximum duration to wait for the last byte of a response to arrive when reading from the HTTP connection/stream.

                      Defaults to 30 seconds. The timeout must be a value between 1s and 120s.

                      The responseTimeout starts after the connection has been established.

                      This also applies to HTTP Chunked Transfer Encoding responses, and/or when an open-ended Range request is made to the origin. Origins that take longer to write additional bytes to the response than the configured responseTimeout will result in an error being returned to the client.

                      If the response headers have already been written to the connection, the response will be truncated and logged.
                    type: string
                type: object
            required:
            - originAddress
            - projectRef
            type: object
          status:
            properties:
              conditions:
                description: Conditions represent the latest available observation
                  of the resource's current state.
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's
                        last transition.
                      type: string
                    status:
                      description: Status is the status of the condition. Can be True,
                        False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  type: object
                type: array
              observedGeneration:
                description: ObservedGeneration is the generation of the resource
                  that was most recently observed by the Config Connector controller.
                  If this is equal to metadata.generation, then that means that the
                  current reported status reflects the most recent desired state of
                  the resource.
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
