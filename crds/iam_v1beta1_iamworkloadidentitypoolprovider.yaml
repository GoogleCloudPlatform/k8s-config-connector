# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cnrm.cloud.google.com/version: 1.124.0
  creationTimestamp: null
  labels:
    cnrm.cloud.google.com/dcl2crd: "true"
    cnrm.cloud.google.com/managed-by-kcc: "true"
    cnrm.cloud.google.com/stability-level: stable
    cnrm.cloud.google.com/system: "true"
  name: iamworkloadidentitypoolproviders.iam.cnrm.cloud.google.com
spec:
  group: iam.cnrm.cloud.google.com
  names:
    categories:
    - gcp
    kind: IAMWorkloadIdentityPoolProvider
    plural: iamworkloadidentitypoolproviders
    shortNames:
    - gcpiamworkloadidentitypoolprovider
    - gcpiamworkloadidentitypoolproviders
    singular: iamworkloadidentitypoolprovider
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: When 'True', the most recent reconcile of the resource succeeded
      jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - description: The reason for the value in 'Ready'
      jsonPath: .status.conditions[?(@.type=='Ready')].reason
      name: Status
      type: string
    - description: The last transition time for the value in 'Status'
      jsonPath: .status.conditions[?(@.type=='Ready')].lastTransitionTime
      name: Status Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'apiVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
            type: string
          kind:
            description: 'kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              attributeCondition:
                description: '[A Common Expression Language](https://opensource.google/projects/cel)
                  expression, in plain text, to restrict what otherwise valid authentication
                  credentials issued by the provider should not be accepted. The expression
                  must output a boolean representing whether to allow the federation.
                  The following keywords may be referenced in the expressions: * `assertion`:
                  JSON representing the authentication credential issued by the provider.
                  * `google`: The Google attributes mapped from the assertion in the
                  `attribute_mappings`. * `attribute`: The custom attributes mapped
                  from the assertion in the `attribute_mappings`. The maximum length
                  of the attribute condition expression is 4096 characters. If unspecified,
                  all valid authentication credential are accepted. The following
                  example shows how to only allow credentials with a mapped `google.groups`
                  value of `admins`: ``` "''admins'' in google.groups" ```'
                type: string
              attributeMapping:
                additionalProperties:
                  type: string
                description: 'Maps attributes from authentication credentials issued
                  by an external identity provider to Google Cloud attributes, such
                  as `subject` and `segment`. Each key must be a string specifying
                  the Google Cloud IAM attribute to map to. The following keys are
                  supported: * `google.subject`: The principal IAM is authenticating.
                  You can reference this value in IAM bindings. This is also the subject
                  that appears in Cloud Logging logs. Cannot exceed 127 characters.
                  * `google.groups`: Groups the external identity belongs to. You
                  can grant groups access to resources using an IAM `principalSet`
                  binding; access applies to all members of the group. You can also
                  provide custom attributes by specifying `attribute.{custom_attribute}`,
                  where `{custom_attribute}` is the name of the custom attribute to
                  be mapped. You can define a maximum of 50 custom attributes. The
                  maximum length of a mapped attribute key is 100 characters, and
                  the key may only contain the characters [a-z0-9_]. You can reference
                  these attributes in IAM policies to define fine-grained access for
                  a workload to Google Cloud resources. For example: * `google.subject`:
                  `principal://iam.googleapis.com/projects/{project}/locations/{location}/workloadIdentityPools/{pool}/subject/{value}`
                  * `google.groups`: `principalSet://iam.googleapis.com/projects/{project}/locations/{location}/workloadIdentityPools/{pool}/group/{value}`
                  * `attribute.{custom_attribute}`: `principalSet://iam.googleapis.com/projects/{project}/locations/{location}/workloadIdentityPools/{pool}/attribute.{custom_attribute}/{value}`
                  Each value must be a [Common Expression Language] (https://opensource.google/projects/cel)
                  function that maps an identity provider credential to the normalized
                  attribute specified by the corresponding map key. You can use the
                  `assertion` keyword in the expression to access a JSON representation
                  of the authentication credential issued by the provider. The maximum
                  length of an attribute mapping expression is 2048 characters. When
                  evaluated, the total size of all mapped attributes must not exceed
                  8KB. For AWS providers, if no attribute mapping is defined, the
                  following default mapping applies: ``` { "google.subject":"assertion.arn",
                  "attribute.aws_role": "assertion.arn.contains(''assumed-role'')"
                  " ? assertion.arn.extract(''{account_arn}assumed-role/'')" " + ''assumed-role/''"
                  " + assertion.arn.extract(''assumed-role/{role_name}/'')" " : assertion.arn",
                  } ``` If any custom attribute mappings are defined, they must include
                  a mapping to the `google.subject` attribute. For OIDC providers,
                  you must supply a custom mapping, which must include the `google.subject`
                  attribute. For example, the following maps the `sub` claim of the
                  incoming credential to the `subject` attribute on a Google token:
                  ``` {"google.subject": "assertion.sub"} ```'
                type: object
              aws:
                description: An Amazon Web Services identity provider.
                properties:
                  accountId:
                    description: Required. The AWS account ID.
                    type: string
                  stsUri:
                    description: A list of AWS STS URIs that can be used when exchanging
                      credentials. If not provided, any valid AWS STS URI is allowed.
                      URIs must use the form `https://sts.amazonaws.com` or `https://sts.{region}.amazonaws.com`,
                      where {region} is a valid AWS region. You can specify a maximum
                      of 25 URIs.
                    items:
                      type: string
                    type: array
                required:
                - accountId
                type: object
              description:
                description: A description for the provider. Cannot exceed 256 characters.
                type: string
              disabled:
                description: Whether the provider is disabled. You cannot use a disabled
                  provider to exchange tokens. However, existing tokens still grant
                  access.
                type: boolean
              displayName:
                description: A display name for the provider. Cannot exceed 32 characters.
                type: string
              location:
                description: Immutable. The location for the resource
                type: string
              oidc:
                description: An OpenId Connect 1.0 identity provider.
                properties:
                  allowedAudiences:
                    description: 'Acceptable values for the `aud` field (audience)
                      in the OIDC token. Token exchange requests are rejected if the
                      token audience does not match one of the configured values.
                      Each audience may be at most 256 characters. A maximum of 10
                      audiences may be configured. If this list is empty, the OIDC
                      token audience must be equal to the full canonical resource
                      name of the WorkloadIdentityPoolProvider, with or without the
                      HTTPS prefix. For example: ``` //iam.googleapis.com/projects//locations//workloadIdentityPools//providers/
                      https://iam.googleapis.com/projects//locations//workloadIdentityPools//providers/
                      ```'
                    items:
                      type: string
                    type: array
                  issuerUri:
                    description: Required. The OIDC issuer URL. Must be an HTTPS endpoint.
                    type: string
                required:
                - issuerUri
                type: object
              projectRef:
                description: Immutable. The Project that this resource belongs to.
                oneOf:
                - not:
                    required:
                    - external
                  required:
                  - name
                - not:
                    anyOf:
                    - required:
                      - name
                    - required:
                      - namespace
                  required:
                  - external
                properties:
                  external:
                    description: |-
                      The project for the resource

                      Allowed value: The Google Cloud resource name of a `Project` resource (format: `projects/{{name}}`).
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                type: object
              resourceID:
                description: Immutable. Optional. The name of the resource. Used for
                  creation and acquisition. When unset, the value of `metadata.name`
                  is used as the default.
                type: string
              workloadIdentityPoolRef:
                description: Immutable.
                oneOf:
                - not:
                    required:
                    - external
                  required:
                  - name
                - not:
                    anyOf:
                    - required:
                      - name
                    - required:
                      - namespace
                  required:
                  - external
                properties:
                  external:
                    description: |-
                      The workloadIdentityPool for the resource

                      Allowed value: The Google Cloud resource name of an `IAMWorkloadIdentityPool` resource (format: `projects/{{project}}/locations/{{location}}/workloadIdentityPools/{{name}}`).
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                type: object
            required:
            - location
            - projectRef
            - workloadIdentityPoolRef
            type: object
          status:
            properties:
              conditions:
                description: Conditions represent the latest available observation
                  of the resource's current state.
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's
                        last transition.
                      type: string
                    status:
                      description: Status is the status of the condition. Can be True,
                        False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  type: object
                type: array
              observedGeneration:
                description: ObservedGeneration is the generation of the resource
                  that was most recently observed by the Config Connector controller.
                  If this is equal to metadata.generation, then that means that the
                  current reported status reflects the most recent desired state of
                  the resource.
                type: integer
              state:
                description: 'Output only. The state of the provider. Possible values:
                  STATE_UNSPECIFIED, ACTIVE, DELETED'
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
