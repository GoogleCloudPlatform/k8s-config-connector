// Copyright 2024 Google LLC. All Rights Reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//     http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";
// All generated protos should be opaque, with "xxx_hidden_" prepended to their field names.


package dcl;

import "proto/connector/sdk.proto";
import "proto/empty.proto";


enum ContainerawsNodePoolConfigRootVolumeVolumeTypeEnum {
  ContainerawsNodePoolConfigRootVolumeVolumeTypeEnumNO_VALUE_DO_NOT_USE = 0;
  ContainerawsNodePoolConfigRootVolumeVolumeTypeEnumVOLUME_TYPE_UNSPECIFIED = 1;
  ContainerawsNodePoolConfigRootVolumeVolumeTypeEnumGP2 = 2;
  ContainerawsNodePoolConfigRootVolumeVolumeTypeEnumGP3 = 3;
}

enum ContainerawsNodePoolConfigTaintsEffectEnum {
  ContainerawsNodePoolConfigTaintsEffectEnumNO_VALUE_DO_NOT_USE = 0;
  ContainerawsNodePoolConfigTaintsEffectEnumEFFECT_UNSPECIFIED = 1;
  ContainerawsNodePoolConfigTaintsEffectEnumNO_SCHEDULE = 2;
  ContainerawsNodePoolConfigTaintsEffectEnumPREFER_NO_SCHEDULE = 3;
  ContainerawsNodePoolConfigTaintsEffectEnumNO_EXECUTE = 4;
}

enum ContainerawsNodePoolStateEnum {
  ContainerawsNodePoolStateEnumNO_VALUE_DO_NOT_USE = 0;
  ContainerawsNodePoolStateEnumSTATE_UNSPECIFIED = 1;
  ContainerawsNodePoolStateEnumPROVISIONING = 2;
  ContainerawsNodePoolStateEnumRUNNING = 3;
  ContainerawsNodePoolStateEnumRECONCILING = 4;
  ContainerawsNodePoolStateEnumSTOPPING = 5;
  ContainerawsNodePoolStateEnumERROR = 6;
  ContainerawsNodePoolStateEnumDEGRADED = 7;
}

message ContainerawsNodePool {
  string name = 1;
  string version = 2;
  ContainerawsNodePoolConfig config = 3;
  ContainerawsNodePoolAutoscaling autoscaling = 4;
  string subnet_id = 5;
  ContainerawsNodePoolStateEnum state = 6;
  string uid = 7;
  bool reconciling = 8;
  string create_time = 9;
  string update_time = 10;
  string etag = 11;
  map<string, string> annotations = 12;
  ContainerawsNodePoolMaxPodsConstraint max_pods_constraint = 13;
  ContainerawsNodePoolManagement management = 14;
  ContainerawsNodePoolUpdateSettings update_settings = 15;
  string project = 16;
  string location = 17;
  string cluster = 18;
}

message ContainerawsNodePoolConfig {
  string instance_type = 1;
  ContainerawsNodePoolConfigRootVolume root_volume = 2;
  repeated ContainerawsNodePoolConfigTaints taints = 3;
  map<string, string> labels = 4;
  map<string, string> tags = 5;
  string iam_instance_profile = 6;
  ContainerawsNodePoolConfigConfigEncryption config_encryption = 7;
  ContainerawsNodePoolConfigSshConfig ssh_config = 8;
  repeated string security_group_ids = 9;
  ContainerawsNodePoolConfigProxyConfig proxy_config = 10;
  ContainerawsNodePoolConfigAutoscalingMetricsCollection autoscaling_metrics_collection = 11;
}

message ContainerawsNodePoolConfigRootVolume {
  int64 size_gib = 1;
  ContainerawsNodePoolConfigRootVolumeVolumeTypeEnum volume_type = 2;
  int64 iops = 3;
  int64 throughput = 4;
  string kms_key_arn = 5;
}

message ContainerawsNodePoolConfigTaints {
  string key = 1;
  string value = 2;
  ContainerawsNodePoolConfigTaintsEffectEnum effect = 3;
}

message ContainerawsNodePoolConfigConfigEncryption {
  string kms_key_arn = 1;
}

message ContainerawsNodePoolConfigSshConfig {
  string ec2_key_pair = 1;
}

message ContainerawsNodePoolConfigProxyConfig {
  string secret_arn = 1;
  string secret_version = 2;
}

message ContainerawsNodePoolConfigAutoscalingMetricsCollection {
  string granularity = 1;
  repeated string metrics = 2;
}

message ContainerawsNodePoolAutoscaling {
  int64 min_node_count = 1;
  int64 max_node_count = 2;
}

message ContainerawsNodePoolMaxPodsConstraint {
  int64 max_pods_per_node = 1;
}

message ContainerawsNodePoolManagement {
  bool auto_repair = 1;
}

message ContainerawsNodePoolUpdateSettings {
  ContainerawsNodePoolUpdateSettingsSurgeSettings surge_settings = 1;
}

message ContainerawsNodePoolUpdateSettingsSurgeSettings {
  int64 max_surge = 1;
  int64 max_unavailable = 2;
}

message ApplyContainerawsNodePoolRequest {
  ContainerawsNodePool resource = 1;
  repeated LifecycleDirective lifecycle_directives = 2;
  string service_account_file = 3;
}

message DeleteContainerawsNodePoolRequest {
  string service_account_file = 1;
  ContainerawsNodePool resource = 2;
}

message ListContainerawsNodePoolRequest {
  string service_account_file = 1;
  string Project = 2;
  string Location = 3;
  string Cluster = 4;
}

message ListContainerawsNodePoolResponse {
  repeated ContainerawsNodePool items = 1;
}

service ContainerawsNodePoolService {
  rpc ApplyContainerawsNodePool(ApplyContainerawsNodePoolRequest) returns (ContainerawsNodePool);
  rpc DeleteContainerawsNodePool(DeleteContainerawsNodePoolRequest) returns (google.protobuf.Empty);
  rpc ListContainerawsNodePool(ListContainerawsNodePoolRequest) returns (ListContainerawsNodePoolResponse);
}
