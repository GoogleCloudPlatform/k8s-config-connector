// Copyright 2024 Google LLC. All Rights Reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//     http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";
// All generated protos should be opaque, with "xxx_hidden_" prepended to their field names.


package dcl;

import "proto/connector/sdk.proto";
import "proto/empty.proto";


enum LoggingAlphaLogMetricMetricDescriptorLabelsValueTypeEnum {
  LoggingAlphaLogMetricMetricDescriptorLabelsValueTypeEnumNO_VALUE_DO_NOT_USE = 0;
  LoggingAlphaLogMetricMetricDescriptorLabelsValueTypeEnumSTRING = 1;
  LoggingAlphaLogMetricMetricDescriptorLabelsValueTypeEnumBOOL = 2;
  LoggingAlphaLogMetricMetricDescriptorLabelsValueTypeEnumINT64 = 3;
  LoggingAlphaLogMetricMetricDescriptorLabelsValueTypeEnumDOUBLE = 4;
  LoggingAlphaLogMetricMetricDescriptorLabelsValueTypeEnumDISTRIBUTION = 5;
  LoggingAlphaLogMetricMetricDescriptorLabelsValueTypeEnumMONEY = 6;
}

enum LoggingAlphaLogMetricMetricDescriptorMetricKindEnum {
  LoggingAlphaLogMetricMetricDescriptorMetricKindEnumNO_VALUE_DO_NOT_USE = 0;
  LoggingAlphaLogMetricMetricDescriptorMetricKindEnumGAUGE = 1;
  LoggingAlphaLogMetricMetricDescriptorMetricKindEnumDELTA = 2;
  LoggingAlphaLogMetricMetricDescriptorMetricKindEnumCUMULATIVE = 3;
}

enum LoggingAlphaLogMetricMetricDescriptorValueTypeEnum {
  LoggingAlphaLogMetricMetricDescriptorValueTypeEnumNO_VALUE_DO_NOT_USE = 0;
  LoggingAlphaLogMetricMetricDescriptorValueTypeEnumSTRING = 1;
  LoggingAlphaLogMetricMetricDescriptorValueTypeEnumBOOL = 2;
  LoggingAlphaLogMetricMetricDescriptorValueTypeEnumINT64 = 3;
  LoggingAlphaLogMetricMetricDescriptorValueTypeEnumDOUBLE = 4;
  LoggingAlphaLogMetricMetricDescriptorValueTypeEnumDISTRIBUTION = 5;
  LoggingAlphaLogMetricMetricDescriptorValueTypeEnumMONEY = 6;
}

enum LoggingAlphaLogMetricMetricDescriptorLaunchStageEnum {
  LoggingAlphaLogMetricMetricDescriptorLaunchStageEnumNO_VALUE_DO_NOT_USE = 0;
  LoggingAlphaLogMetricMetricDescriptorLaunchStageEnumUNIMPLEMENTED = 1;
  LoggingAlphaLogMetricMetricDescriptorLaunchStageEnumPRELAUNCH = 2;
  LoggingAlphaLogMetricMetricDescriptorLaunchStageEnumEARLY_ACCESS = 3;
  LoggingAlphaLogMetricMetricDescriptorLaunchStageEnumALPHA = 4;
  LoggingAlphaLogMetricMetricDescriptorLaunchStageEnumBETA = 5;
  LoggingAlphaLogMetricMetricDescriptorLaunchStageEnumGA = 6;
  LoggingAlphaLogMetricMetricDescriptorLaunchStageEnumDEPRECATED = 7;
}

message LoggingAlphaLogMetric {
  string name = 1;
  string description = 2;
  string filter = 3;
  bool disabled = 4;
  LoggingAlphaLogMetricMetricDescriptor metric_descriptor = 5;
  string value_extractor = 6;
  map<string, string> label_extractors = 7;
  LoggingAlphaLogMetricBucketOptions bucket_options = 8;
  string create_time = 9;
  string update_time = 10;
  string project = 11;
}

message LoggingAlphaLogMetricMetricDescriptor {
  string name = 1;
  string type = 2;
  repeated LoggingAlphaLogMetricMetricDescriptorLabels labels = 3;
  LoggingAlphaLogMetricMetricDescriptorMetricKindEnum metric_kind = 4;
  LoggingAlphaLogMetricMetricDescriptorValueTypeEnum value_type = 5;
  string unit = 6;
  string description = 7;
  string display_name = 8;
  LoggingAlphaLogMetricMetricDescriptorMetadata metadata = 9;
  LoggingAlphaLogMetricMetricDescriptorLaunchStageEnum launch_stage = 10;
  repeated string monitored_resource_types = 11;
}

message LoggingAlphaLogMetricMetricDescriptorLabels {
  string key = 1;
  LoggingAlphaLogMetricMetricDescriptorLabelsValueTypeEnum value_type = 2;
  string description = 3;
}

message LoggingAlphaLogMetricMetricDescriptorMetadata {
  string sample_period = 1;
  string ingest_delay = 2;
}

message LoggingAlphaLogMetricBucketOptions {
  LoggingAlphaLogMetricBucketOptionsLinearBuckets linear_buckets = 1;
  LoggingAlphaLogMetricBucketOptionsExponentialBuckets exponential_buckets = 2;
  LoggingAlphaLogMetricBucketOptionsExplicitBuckets explicit_buckets = 3;
}

message LoggingAlphaLogMetricBucketOptionsLinearBuckets {
  int64 num_finite_buckets = 1;
  double width = 2;
  double offset = 3;
}

message LoggingAlphaLogMetricBucketOptionsExponentialBuckets {
  int64 num_finite_buckets = 1;
  double growth_factor = 2;
  double scale = 3;
}

message LoggingAlphaLogMetricBucketOptionsExplicitBuckets {
  repeated double bounds = 1;
}

message ApplyLoggingAlphaLogMetricRequest {
  LoggingAlphaLogMetric resource = 1;
  repeated LifecycleDirective lifecycle_directives = 2;
  string service_account_file = 3;
}

message DeleteLoggingAlphaLogMetricRequest {
  string service_account_file = 1;
  LoggingAlphaLogMetric resource = 2;
}

message ListLoggingAlphaLogMetricRequest {
  string service_account_file = 1;
  string Project = 2;
}

message ListLoggingAlphaLogMetricResponse {
  repeated LoggingAlphaLogMetric items = 1;
}

service LoggingAlphaLogMetricService {
  rpc ApplyLoggingAlphaLogMetric(ApplyLoggingAlphaLogMetricRequest) returns (LoggingAlphaLogMetric);
  rpc DeleteLoggingAlphaLogMetric(DeleteLoggingAlphaLogMetricRequest) returns (google.protobuf.Empty);
  rpc ListLoggingAlphaLogMetric(ListLoggingAlphaLogMetricRequest) returns (ListLoggingAlphaLogMetricResponse);
}
