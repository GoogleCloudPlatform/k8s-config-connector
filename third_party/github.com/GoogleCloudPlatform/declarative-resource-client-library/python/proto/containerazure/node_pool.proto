// Copyright 2024 Google LLC. All Rights Reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//     http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";
// All generated protos should be opaque, with "xxx_hidden_" prepended to their field names.


package dcl;

import "proto/connector/sdk.proto";
import "proto/empty.proto";


enum ContainerazureNodePoolStateEnum {
  ContainerazureNodePoolStateEnumNO_VALUE_DO_NOT_USE = 0;
  ContainerazureNodePoolStateEnumSTATE_UNSPECIFIED = 1;
  ContainerazureNodePoolStateEnumPROVISIONING = 2;
  ContainerazureNodePoolStateEnumRUNNING = 3;
  ContainerazureNodePoolStateEnumRECONCILING = 4;
  ContainerazureNodePoolStateEnumSTOPPING = 5;
  ContainerazureNodePoolStateEnumERROR = 6;
  ContainerazureNodePoolStateEnumDEGRADED = 7;
}

message ContainerazureNodePool {
  string name = 1;
  string version = 2;
  ContainerazureNodePoolConfig config = 3;
  string subnet_id = 4;
  ContainerazureNodePoolAutoscaling autoscaling = 5;
  ContainerazureNodePoolStateEnum state = 6;
  string uid = 7;
  bool reconciling = 8;
  string create_time = 9;
  string update_time = 10;
  string etag = 11;
  map<string, string> annotations = 12;
  ContainerazureNodePoolMaxPodsConstraint max_pods_constraint = 13;
  ContainerazureNodePoolManagement management = 14;
  string azure_availability_zone = 15;
  string project = 16;
  string location = 17;
  string cluster = 18;
}

message ContainerazureNodePoolConfig {
  string vm_size = 1;
  ContainerazureNodePoolConfigRootVolume root_volume = 2;
  map<string, string> tags = 3;
  map<string, string> labels = 4;
  ContainerazureNodePoolConfigSshConfig ssh_config = 5;
  ContainerazureNodePoolConfigProxyConfig proxy_config = 6;
}

message ContainerazureNodePoolConfigRootVolume {
  int64 size_gib = 1;
}

message ContainerazureNodePoolConfigSshConfig {
  string authorized_key = 1;
}

message ContainerazureNodePoolConfigProxyConfig {
  string resource_group_id = 1;
  string secret_id = 2;
}

message ContainerazureNodePoolAutoscaling {
  int64 min_node_count = 1;
  int64 max_node_count = 2;
}

message ContainerazureNodePoolMaxPodsConstraint {
  int64 max_pods_per_node = 1;
}

message ContainerazureNodePoolManagement {
  bool auto_repair = 1;
}

message ApplyContainerazureNodePoolRequest {
  ContainerazureNodePool resource = 1;
  repeated LifecycleDirective lifecycle_directives = 2;
  string service_account_file = 3;
}

message DeleteContainerazureNodePoolRequest {
  string service_account_file = 1;
  ContainerazureNodePool resource = 2;
}

message ListContainerazureNodePoolRequest {
  string service_account_file = 1;
  string Project = 2;
  string Location = 3;
  string Cluster = 4;
}

message ListContainerazureNodePoolResponse {
  repeated ContainerazureNodePool items = 1;
}

service ContainerazureNodePoolService {
  rpc ApplyContainerazureNodePool(ApplyContainerazureNodePoolRequest) returns (ContainerazureNodePool);
  rpc DeleteContainerazureNodePool(DeleteContainerazureNodePoolRequest) returns (google.protobuf.Empty);
  rpc ListContainerazureNodePool(ListContainerazureNodePoolRequest) returns (ListContainerazureNodePoolResponse);
}
