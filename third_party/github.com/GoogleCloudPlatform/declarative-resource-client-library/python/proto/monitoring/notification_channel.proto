// Copyright 2024 Google LLC. All Rights Reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//     http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";
// All generated protos should be opaque, with "xxx_hidden_" prepended to their field names.


package dcl;

import "proto/connector/sdk.proto";
import "proto/empty.proto";


enum MonitoringNotificationChannelVerificationStatusEnum {
  MonitoringNotificationChannelVerificationStatusEnumNO_VALUE_DO_NOT_USE = 0;
  MonitoringNotificationChannelVerificationStatusEnumVERIFICATION_STATUS_UNSPECIFIED = 1;
  MonitoringNotificationChannelVerificationStatusEnumUNVERIFIED = 2;
  MonitoringNotificationChannelVerificationStatusEnumVERIFIED = 3;
}

message MonitoringNotificationChannel {
  string description = 1;
  string display_name = 2;
  bool enabled = 3;
  map<string, string> labels = 4;
  string name = 5;
  string type = 6;
  map<string, string> user_labels = 7;
  MonitoringNotificationChannelVerificationStatusEnum verification_status = 8;
  string project = 9;
}

message ApplyMonitoringNotificationChannelRequest {
  MonitoringNotificationChannel resource = 1;
  repeated LifecycleDirective lifecycle_directives = 2;
  string service_account_file = 3;
}

message DeleteMonitoringNotificationChannelRequest {
  string service_account_file = 1;
  MonitoringNotificationChannel resource = 2;
}

message ListMonitoringNotificationChannelRequest {
  string service_account_file = 1;
  string Project = 2;
}

message ListMonitoringNotificationChannelResponse {
  repeated MonitoringNotificationChannel items = 1;
}

service MonitoringNotificationChannelService {
  rpc ApplyMonitoringNotificationChannel(ApplyMonitoringNotificationChannelRequest) returns (MonitoringNotificationChannel);
  rpc DeleteMonitoringNotificationChannel(DeleteMonitoringNotificationChannelRequest) returns (google.protobuf.Empty);
  rpc ListMonitoringNotificationChannel(ListMonitoringNotificationChannelRequest) returns (ListMonitoringNotificationChannelResponse);
}
