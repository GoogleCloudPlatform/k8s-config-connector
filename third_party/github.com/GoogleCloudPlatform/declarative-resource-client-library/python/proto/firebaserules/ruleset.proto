// Copyright 2024 Google LLC. All Rights Reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//     http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";
// All generated protos should be opaque, with "xxx_hidden_" prepended to their field names.


package dcl;

import "proto/connector/sdk.proto";
import "proto/empty.proto";


enum FirebaserulesRulesetSourceLanguageEnum {
  FirebaserulesRulesetSourceLanguageEnumNO_VALUE_DO_NOT_USE = 0;
  FirebaserulesRulesetSourceLanguageEnumLANGUAGE_UNSPECIFIED = 1;
  FirebaserulesRulesetSourceLanguageEnumFIREBASE_RULES = 2;
  FirebaserulesRulesetSourceLanguageEnumEVENT_FLOW_TRIGGERS = 3;
}

message FirebaserulesRuleset {
  string name = 1;
  FirebaserulesRulesetSource source = 2;
  string create_time = 3;
  FirebaserulesRulesetMetadata metadata = 4;
  string project = 5;
}

message FirebaserulesRulesetSource {
  repeated FirebaserulesRulesetSourceFiles files = 1;
  FirebaserulesRulesetSourceLanguageEnum language = 2;
}

message FirebaserulesRulesetSourceFiles {
  string content = 1;
  string name = 2;
  string fingerprint = 3;
}

message FirebaserulesRulesetMetadata {
  repeated string services = 1;
}

message ApplyFirebaserulesRulesetRequest {
  FirebaserulesRuleset resource = 1;
  repeated LifecycleDirective lifecycle_directives = 2;
  string service_account_file = 3;
}

message DeleteFirebaserulesRulesetRequest {
  string service_account_file = 1;
  FirebaserulesRuleset resource = 2;
}

message ListFirebaserulesRulesetRequest {
  string service_account_file = 1;
  string Project = 2;
}

message ListFirebaserulesRulesetResponse {
  repeated FirebaserulesRuleset items = 1;
}

service FirebaserulesRulesetService {
  rpc ApplyFirebaserulesRuleset(ApplyFirebaserulesRulesetRequest) returns (FirebaserulesRuleset);
  rpc DeleteFirebaserulesRuleset(DeleteFirebaserulesRulesetRequest) returns (google.protobuf.Empty);
  rpc ListFirebaserulesRuleset(ListFirebaserulesRulesetRequest) returns (ListFirebaserulesRulesetResponse);
}
