// Copyright 2024 Google LLC. All Rights Reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//     http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";
// All generated protos should be opaque, with "xxx_hidden_" prepended to their field names.


package dcl;

import "proto/connector/sdk.proto";
import "proto/empty.proto";


enum NetworkservicesGatewayTypeEnum {
  NetworkservicesGatewayTypeEnumNO_VALUE_DO_NOT_USE = 0;
  NetworkservicesGatewayTypeEnumTYPE_UNSPECIFIED = 1;
  NetworkservicesGatewayTypeEnumOPEN_MESH = 2;
  NetworkservicesGatewayTypeEnumSECURE_WEB_GATEWAY = 3;
}

message NetworkservicesGateway {
  string name = 1;
  string create_time = 2;
  string update_time = 3;
  map<string, string> labels = 4;
  string description = 5;
  NetworkservicesGatewayTypeEnum type = 6;
  repeated string addresses = 7;
  repeated int64 ports = 8;
  string scope = 9;
  string server_tls_policy = 10;
  string project = 11;
  string location = 12;
  string self_link = 13;
}

message ApplyNetworkservicesGatewayRequest {
  NetworkservicesGateway resource = 1;
  repeated LifecycleDirective lifecycle_directives = 2;
  string service_account_file = 3;
}

message DeleteNetworkservicesGatewayRequest {
  string service_account_file = 1;
  NetworkservicesGateway resource = 2;
}

message ListNetworkservicesGatewayRequest {
  string service_account_file = 1;
  string Project = 2;
  string Location = 3;
}

message ListNetworkservicesGatewayResponse {
  repeated NetworkservicesGateway items = 1;
}

service NetworkservicesGatewayService {
  rpc ApplyNetworkservicesGateway(ApplyNetworkservicesGatewayRequest) returns (NetworkservicesGateway);
  rpc DeleteNetworkservicesGateway(DeleteNetworkservicesGatewayRequest) returns (google.protobuf.Empty);
  rpc ListNetworkservicesGateway(ListNetworkservicesGatewayRequest) returns (ListNetworkservicesGatewayResponse);
}
