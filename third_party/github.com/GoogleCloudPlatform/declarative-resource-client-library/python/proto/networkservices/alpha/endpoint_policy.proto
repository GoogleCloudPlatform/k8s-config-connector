// Copyright 2024 Google LLC. All Rights Reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//     http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";
// All generated protos should be opaque, with "xxx_hidden_" prepended to their field names.


package dcl;

import "proto/connector/sdk.proto";
import "proto/empty.proto";


enum NetworkservicesAlphaEndpointPolicyTypeEnum {
  NetworkservicesAlphaEndpointPolicyTypeEnumNO_VALUE_DO_NOT_USE = 0;
  NetworkservicesAlphaEndpointPolicyTypeEnumENDPOINT_CONFIG_SELECTOR_TYPE_UNSPECIFIED = 1;
  NetworkservicesAlphaEndpointPolicyTypeEnumSIDECAR_PROXY = 2;
  NetworkservicesAlphaEndpointPolicyTypeEnumGRPC_SERVER = 3;
}

enum NetworkservicesAlphaEndpointPolicyEndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaEnum {
  NetworkservicesAlphaEndpointPolicyEndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaEnumNO_VALUE_DO_NOT_USE = 0;
  NetworkservicesAlphaEndpointPolicyEndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaEnumMETADATA_LABEL_MATCH_CRITERIA_UNSPECIFIED = 1;
  NetworkservicesAlphaEndpointPolicyEndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaEnumMATCH_ANY = 2;
  NetworkservicesAlphaEndpointPolicyEndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaEnumMATCH_ALL = 3;
}

message NetworkservicesAlphaEndpointPolicy {
  string name = 1;
  string create_time = 2;
  string update_time = 3;
  map<string, string> labels = 4;
  NetworkservicesAlphaEndpointPolicyTypeEnum type = 5;
  string authorization_policy = 6;
  NetworkservicesAlphaEndpointPolicyEndpointMatcher endpoint_matcher = 7;
  NetworkservicesAlphaEndpointPolicyTrafficPortSelector traffic_port_selector = 8;
  string description = 9;
  string server_tls_policy = 10;
  string client_tls_policy = 11;
  string project = 12;
  string location = 13;
}

message NetworkservicesAlphaEndpointPolicyEndpointMatcher {
  NetworkservicesAlphaEndpointPolicyEndpointMatcherMetadataLabelMatcher metadata_label_matcher = 1;
}

message NetworkservicesAlphaEndpointPolicyEndpointMatcherMetadataLabelMatcher {
  NetworkservicesAlphaEndpointPolicyEndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaEnum metadata_label_match_criteria = 1;
  repeated NetworkservicesAlphaEndpointPolicyEndpointMatcherMetadataLabelMatcherMetadataLabels metadata_labels = 2;
}

message NetworkservicesAlphaEndpointPolicyEndpointMatcherMetadataLabelMatcherMetadataLabels {
  string label_name = 1;
  string label_value = 2;
}

message NetworkservicesAlphaEndpointPolicyTrafficPortSelector {
  repeated string ports = 1;
}

message ApplyNetworkservicesAlphaEndpointPolicyRequest {
  NetworkservicesAlphaEndpointPolicy resource = 1;
  repeated LifecycleDirective lifecycle_directives = 2;
  string service_account_file = 3;
}

message DeleteNetworkservicesAlphaEndpointPolicyRequest {
  string service_account_file = 1;
  NetworkservicesAlphaEndpointPolicy resource = 2;
}

message ListNetworkservicesAlphaEndpointPolicyRequest {
  string service_account_file = 1;
  string Project = 2;
  string Location = 3;
}

message ListNetworkservicesAlphaEndpointPolicyResponse {
  repeated NetworkservicesAlphaEndpointPolicy items = 1;
}

service NetworkservicesAlphaEndpointPolicyService {
  rpc ApplyNetworkservicesAlphaEndpointPolicy(ApplyNetworkservicesAlphaEndpointPolicyRequest) returns (NetworkservicesAlphaEndpointPolicy);
  rpc DeleteNetworkservicesAlphaEndpointPolicy(DeleteNetworkservicesAlphaEndpointPolicyRequest) returns (google.protobuf.Empty);
  rpc ListNetworkservicesAlphaEndpointPolicy(ListNetworkservicesAlphaEndpointPolicyRequest) returns (ListNetworkservicesAlphaEndpointPolicyResponse);
}
