// Copyright 2022 Google LLC. All Rights Reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//     http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";
// All generated protos should be opaque, with "xxx_hidden_" prepended to their field names.


package dcl;

import "proto/connector/sdk.proto";
import "proto/empty.proto";


message VertexModelDeployment {
  string model = 1;
  string id = 2;
  VertexModelDeploymentDedicatedResources dedicated_resources = 3;
  string endpoint = 4;
  string location = 5;
  string project = 6;
}

message VertexModelDeploymentDedicatedResources {
  VertexModelDeploymentDedicatedResourcesMachineSpec machine_spec = 1;
  int64 min_replica_count = 2;
  int64 max_replica_count = 3;
}

message VertexModelDeploymentDedicatedResourcesMachineSpec {
  string machine_type = 1;
}

message ApplyVertexModelDeploymentRequest {
  VertexModelDeployment resource = 1;
  repeated LifecycleDirective lifecycle_directives = 2;
  string service_account_file = 3;
}

message DeleteVertexModelDeploymentRequest {
  string service_account_file = 1;
  VertexModelDeployment resource = 2;
}

message ListVertexModelDeploymentRequest {
  string service_account_file = 1;
  string Project = 2;
  string Location = 3;
  string Endpoint = 4;
}

message ListVertexModelDeploymentResponse {
  repeated VertexModelDeployment items = 1;
}

service VertexModelDeploymentService {
  rpc ApplyVertexModelDeployment(ApplyVertexModelDeploymentRequest) returns (VertexModelDeployment);
  rpc DeleteVertexModelDeployment(DeleteVertexModelDeploymentRequest) returns (google.protobuf.Empty);
  rpc ListVertexModelDeployment(ListVertexModelDeploymentRequest) returns (ListVertexModelDeploymentResponse);
}
