// Copyright 2021 Google LLC. All Rights Reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//     http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";

package dcl;

import "proto/connector/sdk.proto";
import "proto/empty.proto";

enum GkemulticloudAzureClusterStateEnum {
  GkemulticloudAzureClusterStateEnumNO_VALUE_DO_NOT_USE = 0;
  GkemulticloudAzureClusterStateEnumSTATE_UNSPECIFIED = 1;
  GkemulticloudAzureClusterStateEnumPROVISIONING = 2;
  GkemulticloudAzureClusterStateEnumRUNNING = 3;
  GkemulticloudAzureClusterStateEnumRECONCILING = 4;
  GkemulticloudAzureClusterStateEnumSTOPPING = 5;
  GkemulticloudAzureClusterStateEnumERROR = 6;
  GkemulticloudAzureClusterStateEnumDEGRADED = 7;
}

message GkemulticloudAzureCluster {
  string name = 1;
  string description = 2;
  string azure_region = 3;
  string resource_group_id = 4;
  string azure_client = 5;
  GkemulticloudAzureClusterNetworking networking = 6;
  GkemulticloudAzureClusterControlPlane control_plane = 7;
  GkemulticloudAzureClusterAuthorization authorization = 8;
  GkemulticloudAzureClusterStateEnum state = 9;
  string endpoint = 10;
  string uid = 11;
  bool reconciling = 12;
  string create_time = 13;
  string update_time = 14;
  string etag = 15;
  map<string, string> annotations = 16;
  GkemulticloudAzureClusterWorkloadIdentityConfig workload_identity_config = 17;
  string project = 18;
  string location = 19;
}

message GkemulticloudAzureClusterNetworking {
  string virtual_network_id = 1;
  repeated string pod_address_cidr_blocks = 2;
  repeated string service_address_cidr_blocks = 3;
}

message GkemulticloudAzureClusterControlPlane {
  string version = 1;
  string subnet_id = 2;
  string vm_size = 3;
  GkemulticloudAzureClusterControlPlaneSshConfig ssh_config = 4;
  GkemulticloudAzureClusterControlPlaneRootVolume root_volume = 5;
  GkemulticloudAzureClusterControlPlaneMainVolume main_volume = 6;
  GkemulticloudAzureClusterControlPlaneDatabaseEncryption database_encryption = 7;
  map<string, string> tags = 8;
}

message GkemulticloudAzureClusterControlPlaneSshConfig {
  string authorized_key = 1;
}

message GkemulticloudAzureClusterControlPlaneRootVolume {
  int64 size_gib = 1;
}

message GkemulticloudAzureClusterControlPlaneMainVolume {
  int64 size_gib = 1;
}

message GkemulticloudAzureClusterControlPlaneDatabaseEncryption {
  string resource_group_id = 1;
  string kms_key_identifier = 2;
}

message GkemulticloudAzureClusterAuthorization {
  repeated GkemulticloudAzureClusterAuthorizationAdminUsers admin_users = 1;
}

message GkemulticloudAzureClusterAuthorizationAdminUsers {
  string username = 1;
}

message GkemulticloudAzureClusterWorkloadIdentityConfig {
  string issuer_uri = 1;
  string workload_pool = 2;
  string identity_provider = 3;
}

message ApplyGkemulticloudAzureClusterRequest {
  GkemulticloudAzureCluster resource = 1;
  repeated LifecycleDirective lifecycle_directives = 2;
  string service_account_file = 3;
}

message DeleteGkemulticloudAzureClusterRequest {
  string service_account_file = 1;
  GkemulticloudAzureCluster resource = 2;
}

message ListGkemulticloudAzureClusterRequest {
  string service_account_file = 1;
	GkemulticloudAzureCluster resource = 2;
}

message ListGkemulticloudAzureClusterResponse {
  repeated GkemulticloudAzureCluster items = 1;
}

service GkemulticloudAzureClusterService {
  rpc ApplyGkemulticloudAzureCluster(ApplyGkemulticloudAzureClusterRequest) returns (GkemulticloudAzureCluster);
  rpc DeleteGkemulticloudAzureCluster(DeleteGkemulticloudAzureClusterRequest) returns (google.protobuf.Empty);
  rpc ListGkemulticloudAzureCluster(ListGkemulticloudAzureClusterRequest) returns (ListGkemulticloudAzureClusterResponse);
}
