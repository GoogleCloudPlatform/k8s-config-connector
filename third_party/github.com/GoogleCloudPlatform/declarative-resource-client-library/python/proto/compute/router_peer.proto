// Copyright 2021 Google LLC. All Rights Reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//     http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";

package dcl;

import "proto/connector/sdk.proto";
import "proto/empty.proto";

message ComputeRouterPeer {
  string creation_timestamp = 1;
  string router = 2;
  string name = 3;
  string interface_name = 4;
  string ip_address = 5;
  string peer_ip_address = 6;
  int64 peer_asn = 7;
  int64 advertised_route_priority = 8;
  string advertise_mode = 9;
  string management_type = 10;
  repeated string advertised_groups = 11;
  repeated ComputeRouterPeerAdvertisedIPRanges advertised_ip_ranges = 12;
  string region = 13;
  string project = 14;
}

message ComputeRouterPeerAdvertisedIPRanges {
  string range = 1;
  string description = 2;
}

message ApplyComputeRouterPeerRequest {
  ComputeRouterPeer resource = 1;
  repeated LifecycleDirective lifecycle_directives = 2;
  string service_account_file = 3;
}

message DeleteComputeRouterPeerRequest {
  string service_account_file = 1;
  ComputeRouterPeer resource = 2;
}

message ListComputeRouterPeerRequest {
  string service_account_file = 1;
  string Project = 2;
  string Region = 3;
}

message ListComputeRouterPeerResponse {
  repeated ComputeRouterPeer items = 1;
}

service ComputeRouterPeerService {
  rpc ApplyComputeRouterPeer(ApplyComputeRouterPeerRequest) returns (ComputeRouterPeer);
  rpc DeleteComputeRouterPeer(DeleteComputeRouterPeerRequest) returns (google.protobuf.Empty);
  rpc ListComputeRouterPeer(ListComputeRouterPeerRequest) returns (ListComputeRouterPeerResponse);
}
