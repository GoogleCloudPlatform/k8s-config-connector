// Copyright 2024 Google LLC. All Rights Reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//     http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";
// All generated protos should be opaque, with "xxx_hidden_" prepended to their field names.


package dcl;

import "proto/connector/sdk.proto";
import "proto/empty.proto";


enum ComputePacketMirroringFilterDirectionEnum {
  ComputePacketMirroringFilterDirectionEnumNO_VALUE_DO_NOT_USE = 0;
  ComputePacketMirroringFilterDirectionEnumINGRESS = 1;
  ComputePacketMirroringFilterDirectionEnumEGRESS = 2;
}

enum ComputePacketMirroringEnableEnum {
  ComputePacketMirroringEnableEnumNO_VALUE_DO_NOT_USE = 0;
  ComputePacketMirroringEnableEnumTRUE = 1;
  ComputePacketMirroringEnableEnumFALSE = 2;
}

message ComputePacketMirroring {
  int64 id = 1;
  string self_link = 2;
  string name = 3;
  string description = 4;
  string region = 5;
  ComputePacketMirroringNetwork network = 6;
  int64 priority = 7;
  ComputePacketMirroringCollectorIlb collector_ilb = 8;
  ComputePacketMirroringMirroredResources mirrored_resources = 9;
  ComputePacketMirroringFilter filter = 10;
  ComputePacketMirroringEnableEnum enable = 11;
  string project = 12;
  string location = 13;
}

message ComputePacketMirroringNetwork {
  string url = 1;
  string canonical_url = 2;
}

message ComputePacketMirroringCollectorIlb {
  string url = 1;
  string canonical_url = 2;
}

message ComputePacketMirroringMirroredResources {
  repeated ComputePacketMirroringMirroredResourcesSubnetworks subnetworks = 1;
  repeated ComputePacketMirroringMirroredResourcesInstances instances = 2;
  repeated string tags = 3;
}

message ComputePacketMirroringMirroredResourcesSubnetworks {
  string url = 1;
  string canonical_url = 2;
}

message ComputePacketMirroringMirroredResourcesInstances {
  string url = 1;
  string canonical_url = 2;
}

message ComputePacketMirroringFilter {
  repeated string cidr_ranges = 1;
  repeated string ip_protocols = 2;
  ComputePacketMirroringFilterDirectionEnum direction = 3;
}

message ApplyComputePacketMirroringRequest {
  ComputePacketMirroring resource = 1;
  repeated LifecycleDirective lifecycle_directives = 2;
  string service_account_file = 3;
}

message DeleteComputePacketMirroringRequest {
  string service_account_file = 1;
  ComputePacketMirroring resource = 2;
}

message ListComputePacketMirroringRequest {
  string service_account_file = 1;
  string Project = 2;
  string Location = 3;
}

message ListComputePacketMirroringResponse {
  repeated ComputePacketMirroring items = 1;
}

service ComputePacketMirroringService {
  rpc ApplyComputePacketMirroring(ApplyComputePacketMirroringRequest) returns (ComputePacketMirroring);
  rpc DeleteComputePacketMirroring(DeleteComputePacketMirroringRequest) returns (google.protobuf.Empty);
  rpc ListComputePacketMirroring(ListComputePacketMirroringRequest) returns (ListComputePacketMirroringResponse);
}
