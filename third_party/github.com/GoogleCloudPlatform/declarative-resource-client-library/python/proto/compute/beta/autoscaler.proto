// Copyright 2021 Google LLC. All Rights Reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//     http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";

package dcl;

import "proto/connector/sdk.proto";
import "proto/empty.proto";

enum ComputeBetaAutoscalerAutoscalingPolicyCustomMetricUtilizationsUtilizationTargetTypeEnum {
  ComputeBetaAutoscalerAutoscalingPolicyCustomMetricUtilizationsUtilizationTargetTypeEnumNO_VALUE_DO_NOT_USE = 0;
  ComputeBetaAutoscalerAutoscalingPolicyCustomMetricUtilizationsUtilizationTargetTypeEnumGAUGE = 1;
  ComputeBetaAutoscalerAutoscalingPolicyCustomMetricUtilizationsUtilizationTargetTypeEnumDELTA_PER_SECOND = 2;
  ComputeBetaAutoscalerAutoscalingPolicyCustomMetricUtilizationsUtilizationTargetTypeEnumDELTA_PER_MINUTE = 3;
}

enum ComputeBetaAutoscalerAutoscalingPolicyModeEnum {
  ComputeBetaAutoscalerAutoscalingPolicyModeEnumNO_VALUE_DO_NOT_USE = 0;
  ComputeBetaAutoscalerAutoscalingPolicyModeEnumOFF = 1;
  ComputeBetaAutoscalerAutoscalingPolicyModeEnumON = 2;
  ComputeBetaAutoscalerAutoscalingPolicyModeEnumONLY_SCALE_OUT = 3;
  ComputeBetaAutoscalerAutoscalingPolicyModeEnumONLY_UP = 4;
}

enum ComputeBetaAutoscalerStatusEnum {
  ComputeBetaAutoscalerStatusEnumNO_VALUE_DO_NOT_USE = 0;
  ComputeBetaAutoscalerStatusEnumPENDING = 1;
  ComputeBetaAutoscalerStatusEnumRUNNING = 2;
  ComputeBetaAutoscalerStatusEnumDONE = 3;
}

enum ComputeBetaAutoscalerStatusDetailsTypeEnum {
  ComputeBetaAutoscalerStatusDetailsTypeEnumNO_VALUE_DO_NOT_USE = 0;
  ComputeBetaAutoscalerStatusDetailsTypeEnumPATH = 1;
  ComputeBetaAutoscalerStatusDetailsTypeEnumOTHER = 2;
  ComputeBetaAutoscalerStatusDetailsTypeEnumPARAMETER = 3;
}

message ComputeBetaAutoscaler {
  int64 id = 1;
  string name = 2;
  string description = 3;
  string target = 4;
  ComputeBetaAutoscalerAutoscalingPolicy autoscaling_policy = 5;
  string zone = 6;
  string region = 7;
  string self_link = 8;
  ComputeBetaAutoscalerStatusEnum status = 9;
  repeated ComputeBetaAutoscalerStatusDetails status_details = 10;
  int64 recommended_size = 11;
  string self_link_with_id = 12;
  map<string, string> scaling_schedule_status = 13;
  string project = 14;
  string creation_timestamp = 15;
  string location = 16;
}

message ComputeBetaAutoscalerAutoscalingPolicy {
  int64 min_num_replicas = 1;
  int64 max_num_replicas = 2;
  ComputeBetaAutoscalerAutoscalingPolicyScaleInControl scale_in_control = 3;
  int64 cool_down_period_sec = 4;
  ComputeBetaAutoscalerAutoscalingPolicyCpuUtilization cpu_utilization = 5;
  repeated ComputeBetaAutoscalerAutoscalingPolicyCustomMetricUtilizations custom_metric_utilizations = 6;
  ComputeBetaAutoscalerAutoscalingPolicyLoadBalancingUtilization load_balancing_utilization = 7;
  ComputeBetaAutoscalerAutoscalingPolicyModeEnum mode = 8;
}

message ComputeBetaAutoscalerAutoscalingPolicyScaleInControl {
  ComputeBetaAutoscalerAutoscalingPolicyScaleInControlMaxScaledInReplicas max_scaled_in_replicas = 1;
  int64 time_window_sec = 2;
}

message ComputeBetaAutoscalerAutoscalingPolicyScaleInControlMaxScaledInReplicas {
  int64 fixed = 1;
  int64 percent = 2;
  int64 calculated = 3;
}

message ComputeBetaAutoscalerAutoscalingPolicyCpuUtilization {
  double utilization_target = 1;
}

message ComputeBetaAutoscalerAutoscalingPolicyCustomMetricUtilizations {
  string metric = 1;
  double utilization_target = 2;
  ComputeBetaAutoscalerAutoscalingPolicyCustomMetricUtilizationsUtilizationTargetTypeEnum utilization_target_type = 3;
  string filter = 4;
  double single_instance_assignment = 5;
}

message ComputeBetaAutoscalerAutoscalingPolicyLoadBalancingUtilization {
  double utilization_target = 1;
}

message ComputeBetaAutoscalerStatusDetails {
  string message = 1;
  ComputeBetaAutoscalerStatusDetailsTypeEnum type = 2;
}

message ApplyComputeBetaAutoscalerRequest {
  ComputeBetaAutoscaler resource = 1;
  repeated LifecycleDirective lifecycle_directives = 2;
  string service_account_file = 3;
}

message DeleteComputeBetaAutoscalerRequest {
  string service_account_file = 1;
  ComputeBetaAutoscaler resource = 2;
}

message ListComputeBetaAutoscalerRequest {
  string service_account_file = 1;
  string Project = 2;
  string Location = 3;
}

message ListComputeBetaAutoscalerResponse {
  repeated ComputeBetaAutoscaler items = 1;
}

service ComputeBetaAutoscalerService {
  rpc ApplyComputeBetaAutoscaler(ApplyComputeBetaAutoscalerRequest) returns (ComputeBetaAutoscaler);
  rpc DeleteComputeBetaAutoscaler(DeleteComputeBetaAutoscalerRequest) returns (google.protobuf.Empty);
  rpc ListComputeBetaAutoscaler(ListComputeBetaAutoscalerRequest) returns (ListComputeBetaAutoscalerResponse);
}
