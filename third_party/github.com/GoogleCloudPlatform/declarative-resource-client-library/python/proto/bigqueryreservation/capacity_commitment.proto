// Copyright 2022 Google LLC. All Rights Reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//     http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";
// All generated protos should be opaque, with "xxx_hidden_" prepended to their field names.


package dcl;

import "proto/connector/sdk.proto";
import "proto/empty.proto";


enum BigqueryreservationCapacityCommitmentPlanEnum {
  BigqueryreservationCapacityCommitmentPlanEnumNO_VALUE_DO_NOT_USE = 0;
  BigqueryreservationCapacityCommitmentPlanEnumCOMMITMENT_PLAN_UNSPECIFIED = 1;
  BigqueryreservationCapacityCommitmentPlanEnumFLEX = 2;
  BigqueryreservationCapacityCommitmentPlanEnumTRIAL = 3;
  BigqueryreservationCapacityCommitmentPlanEnumMONTHLY = 4;
  BigqueryreservationCapacityCommitmentPlanEnumANNUAL = 5;
}

enum BigqueryreservationCapacityCommitmentStateEnum {
  BigqueryreservationCapacityCommitmentStateEnumNO_VALUE_DO_NOT_USE = 0;
  BigqueryreservationCapacityCommitmentStateEnumSTATE_UNSPECIFIED = 1;
  BigqueryreservationCapacityCommitmentStateEnumPENDING = 2;
  BigqueryreservationCapacityCommitmentStateEnumACTIVE = 3;
  BigqueryreservationCapacityCommitmentStateEnumFAILED = 4;
}

enum BigqueryreservationCapacityCommitmentRenewalPlanEnum {
  BigqueryreservationCapacityCommitmentRenewalPlanEnumNO_VALUE_DO_NOT_USE = 0;
  BigqueryreservationCapacityCommitmentRenewalPlanEnumCOMMITMENT_PLAN_UNSPECIFIED = 1;
  BigqueryreservationCapacityCommitmentRenewalPlanEnumFLEX = 2;
  BigqueryreservationCapacityCommitmentRenewalPlanEnumTRIAL = 3;
  BigqueryreservationCapacityCommitmentRenewalPlanEnumMONTHLY = 4;
  BigqueryreservationCapacityCommitmentRenewalPlanEnumANNUAL = 5;
}

message BigqueryreservationCapacityCommitment {
  string name = 1;
  int64 slot_count = 2;
  BigqueryreservationCapacityCommitmentPlanEnum plan = 3;
  BigqueryreservationCapacityCommitmentStateEnum state = 4;
  string commitment_start_time = 5;
  string commitment_end_time = 6;
  BigqueryreservationCapacityCommitmentFailureStatus failure_status = 7;
  BigqueryreservationCapacityCommitmentRenewalPlanEnum renewal_plan = 8;
  string project = 9;
  string location = 10;
}

message BigqueryreservationCapacityCommitmentFailureStatus {
  int64 code = 1;
  string message = 2;
  repeated BigqueryreservationCapacityCommitmentFailureStatusDetails details = 3;
}

message BigqueryreservationCapacityCommitmentFailureStatusDetails {
  string type_url = 1;
  string value = 2;
}

message ApplyBigqueryreservationCapacityCommitmentRequest {
  BigqueryreservationCapacityCommitment resource = 1;
  repeated LifecycleDirective lifecycle_directives = 2;
  string service_account_file = 3;
}

message DeleteBigqueryreservationCapacityCommitmentRequest {
  string service_account_file = 1;
  BigqueryreservationCapacityCommitment resource = 2;
}

message ListBigqueryreservationCapacityCommitmentRequest {
  string service_account_file = 1;
  string Project = 2;
  string Location = 3;
}

message ListBigqueryreservationCapacityCommitmentResponse {
  repeated BigqueryreservationCapacityCommitment items = 1;
}

service BigqueryreservationCapacityCommitmentService {
  rpc ApplyBigqueryreservationCapacityCommitment(ApplyBigqueryreservationCapacityCommitmentRequest) returns (BigqueryreservationCapacityCommitment);
  rpc DeleteBigqueryreservationCapacityCommitment(DeleteBigqueryreservationCapacityCommitmentRequest) returns (google.protobuf.Empty);
  rpc ListBigqueryreservationCapacityCommitment(ListBigqueryreservationCapacityCommitmentRequest) returns (ListBigqueryreservationCapacityCommitmentResponse);
}
