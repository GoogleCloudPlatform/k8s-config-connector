// Copyright 2024 Google LLC. All Rights Reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//     http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";
// All generated protos should be opaque, with "xxx_hidden_" prepended to their field names.


package dcl;

import "proto/connector/sdk.proto";
import "proto/empty.proto";


enum IamBetaWorkforcePoolProviderStateEnum {
  IamBetaWorkforcePoolProviderStateEnumNO_VALUE_DO_NOT_USE = 0;
  IamBetaWorkforcePoolProviderStateEnumSTATE_UNSPECIFIED = 1;
  IamBetaWorkforcePoolProviderStateEnumACTIVE = 2;
  IamBetaWorkforcePoolProviderStateEnumDELETED = 3;
}

enum IamBetaWorkforcePoolProviderOidcWebSsoConfigResponseTypeEnum {
  IamBetaWorkforcePoolProviderOidcWebSsoConfigResponseTypeEnumNO_VALUE_DO_NOT_USE = 0;
  IamBetaWorkforcePoolProviderOidcWebSsoConfigResponseTypeEnumRESPONSE_TYPE_UNSPECIFIED = 1;
  IamBetaWorkforcePoolProviderOidcWebSsoConfigResponseTypeEnumCODE = 2;
  IamBetaWorkforcePoolProviderOidcWebSsoConfigResponseTypeEnumID_TOKEN = 3;
}

enum IamBetaWorkforcePoolProviderOidcWebSsoConfigAssertionClaimsBehaviorEnum {
  IamBetaWorkforcePoolProviderOidcWebSsoConfigAssertionClaimsBehaviorEnumNO_VALUE_DO_NOT_USE = 0;
  IamBetaWorkforcePoolProviderOidcWebSsoConfigAssertionClaimsBehaviorEnumASSERTION_CLAIMS_BEHAVIOR_UNSPECIFIED = 1;
  IamBetaWorkforcePoolProviderOidcWebSsoConfigAssertionClaimsBehaviorEnumMERGE_USER_INFO_OVER_ID_TOKEN_CLAIMS = 2;
  IamBetaWorkforcePoolProviderOidcWebSsoConfigAssertionClaimsBehaviorEnumONLY_ID_TOKEN_CLAIMS = 3;
}

message IamBetaWorkforcePoolProvider {
  string name = 1;
  string display_name = 2;
  string description = 3;
  IamBetaWorkforcePoolProviderStateEnum state = 4;
  bool disabled = 5;
  map<string, string> attribute_mapping = 6;
  string attribute_condition = 7;
  IamBetaWorkforcePoolProviderSaml saml = 8;
  IamBetaWorkforcePoolProviderOidc oidc = 9;
  string location = 10;
  string workforce_pool = 11;
}

message IamBetaWorkforcePoolProviderSaml {
  string idp_metadata_xml = 1;
}

message IamBetaWorkforcePoolProviderOidc {
  string issuer_uri = 1;
  string client_id = 2;
  string jwks_json = 3;
  IamBetaWorkforcePoolProviderOidcWebSsoConfig web_sso_config = 4;
  IamBetaWorkforcePoolProviderOidcClientSecret client_secret = 5;
}

message IamBetaWorkforcePoolProviderOidcWebSsoConfig {
  IamBetaWorkforcePoolProviderOidcWebSsoConfigResponseTypeEnum response_type = 1;
  IamBetaWorkforcePoolProviderOidcWebSsoConfigAssertionClaimsBehaviorEnum assertion_claims_behavior = 2;
  repeated string additional_scopes = 3;
}

message IamBetaWorkforcePoolProviderOidcClientSecret {
  IamBetaWorkforcePoolProviderOidcClientSecretValue value = 1;
}

message IamBetaWorkforcePoolProviderOidcClientSecretValue {
  string plain_text = 1;
  string thumbprint = 2;
}

message ApplyIamBetaWorkforcePoolProviderRequest {
  IamBetaWorkforcePoolProvider resource = 1;
  repeated LifecycleDirective lifecycle_directives = 2;
  string service_account_file = 3;
}

message DeleteIamBetaWorkforcePoolProviderRequest {
  string service_account_file = 1;
  IamBetaWorkforcePoolProvider resource = 2;
}

message ListIamBetaWorkforcePoolProviderRequest {
  string service_account_file = 1;
  string Location = 2;
  string WorkforcePool = 3;
}

message ListIamBetaWorkforcePoolProviderResponse {
  repeated IamBetaWorkforcePoolProvider items = 1;
}

service IamBetaWorkforcePoolProviderService {
  rpc ApplyIamBetaWorkforcePoolProvider(ApplyIamBetaWorkforcePoolProviderRequest) returns (IamBetaWorkforcePoolProvider);
  rpc DeleteIamBetaWorkforcePoolProvider(DeleteIamBetaWorkforcePoolProviderRequest) returns (google.protobuf.Empty);
  rpc ListIamBetaWorkforcePoolProvider(ListIamBetaWorkforcePoolProviderRequest) returns (ListIamBetaWorkforcePoolProviderResponse);
}
