---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: multiclusterleases.multicluster.core.cnrm.cloud.google.com
spec:
  group: multicluster.core.cnrm.cloud.google.com
  names:
    kind: MultiClusterLease
    listKind: MultiClusterLeaseList
    plural: multiclusterleases
    singular: multiclusterlease
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: MultiClusterLease is the Schema for the multiclusterleases API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MultiClusterLeaseSpec defines the desired state of MultiClusterLease
            properties:
              bucket:
                description: The Google Cloud storage bucket to hold the lease.
                type: string
              identity:
                description: Identity is the unique string identifying a lease holder
                  across all cluters in a multicluster election.
                type: string
              leaseDurationSeconds:
                description: LeaseDurationSeconds is the duration that non-leader
                  candidates will wait to force acquire leadership. This is measured
                  against time of last observed ack.
                format: int32
                type: integer
              multiClusterUID:
                description: MultiClusterUID is a unique string identifying a multicluster
                  election.
                type: string
              renewDeadlineSeconds:
                description: RenewDeadlineSeconds is the duration that the acting
                  master will retry refreshing leadership before giving up.
                format: int32
                type: integer
              retryPeriodSeconds:
                description: RetryPeriodSeconds is the duration the LeaderElector
                  clients should wait between tries of actions.
                format: int32
                type: integer
            type: object
          status:
            description: MultiClusterLeaseStatus defines the observed state of MultiClusterLease
            properties:
              isLeader:
                description: 'TODO: add "IsLeader bool". Make sure the value is NOT
                  stale when the cluster is disconnected. Potentially KCC resource
                  controllers could fetch this field to determine reconciliation mode.'
                type: boolean
              lastObservedTime:
                type: string
            required:
            - isLeader
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
