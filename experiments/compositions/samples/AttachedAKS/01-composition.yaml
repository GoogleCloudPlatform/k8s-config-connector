# Copyright 2024 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: composition.google.com/v1alpha1
kind: Facade
metadata:
  name: attachedaks
  namespace: default
spec:
  facadeKind: AttachedAKS
  openAPIV3Schema:
    description: AttachedAKS defines the parameters for attaching ASK cluster to GCP.
    properties:
      adminUsers:
        items:
          type: string
        type: array
      attachedPlatformVersion:
        type: string
      azureRegion:
        type: string
      gcpProjectNumber:
        type: string
      gcpRegion:
        type: string
      kubernetesVersion:
        type: string
    type: object
---
apiVersion: composition.google.com/v1alpha1
kind: Composition
metadata:
  name: compo-2
spec:
  inputAPIGroup: attachedakses.facade.compositions.google.com
  expanders:
  - type: jinja2
    version: v0.0.1.alpha
    name: create-resource-group
    template: |
      apiVersion: resources.azure.com/v1api20200601
      kind: ResourceGroup
      metadata:
        name: {{ attachedakses.metadata.name }}-rg
        namespace: {{ attachedakses.metadata.namespace }}
      spec:
        location: {{ attachedakses.spec.azureRegion }}
  - type: jinja2
    version: v0.0.1.alpha
    name: create-aks-cluster
    template: |
      apiVersion: containerservice.azure.com/v1api20230201
      kind: ManagedCluster
      metadata:
        name: {{ attachedakses.metadata.name }}-aks
        namespace: {{ attachedakses.metadata.namespace }}
      spec:
        location: westcentralus
        owner:
          name: {{ attachedakses.metadata.name }}-rg
        dnsPrefix: aso
        oidcIssuerProfile:
          enabled: true
        agentPoolProfiles:
          - name: pool1
            count: 1
            vmSize: Standard_DS2_v2
            osType: Linux
            mode: System
        identity:
          type: SystemAssigned
        # kubernetesVersion: {{ attachedakses.spec.kubernetesVersion }}
        kubernetesVersion: "1.28"
        operatorSpec:
          configMaps:
            oidcIssuerProfile:
              name: {{ attachedakses.metadata.name }}-issuer
              key: oidc
          secrets:
            adminCredentials:
              name: {{ attachedakses.metadata.name }}-admin 
              key: adminCredentials
            userCredentials:
              name: {{ attachedakses.metadata.name }}-user 
              key: userCredentials
  - type: jinja2
    version: v0.0.1.alpha
    name: attach
    valuesFrom:
    - name: issuer
      resourceRef:
        group: ""
        version: v1
        kind: ConfigMap
        nameSuffix: "-issuer"
      fieldRef:
      - path: ".data.oidc"
        as: url
    template: |
      apiVersion: containerattached.cnrm.cloud.google.com/v1beta1
      kind: ContainerAttachedCluster
      metadata:
        name: {{ attachedakses.metadata.name }}-attached
        namespace: {{ attachedakses.metadata.namespace }}
      spec:
        resourceID: {{ attachedakses.metadata.name }}
        location: {{ attachedakses.spec.gcpRegion }}
        projectRef:
          external: {{ context.spec.project }}
        description: "Test composition with aks"
        distribution: aks
        oidcConfig:
          issuerUrl: {{ values.issuer.url }}
        platformVersion: {{ attachedakses.spec.attachedPlatformVersion }}
        fleet:
          projectRef:
            external: "projects/{{ attachedakses.spec.gcpProjectNumber }}"
        authorization:
          adminUsers: {{ attachedakses.spec.adminUsers }}

