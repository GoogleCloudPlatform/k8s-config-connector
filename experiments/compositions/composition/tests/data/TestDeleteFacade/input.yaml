# Copyright 2024 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: dconfigs.facade.foocorp.com
spec:
  group: facade.foocorp.com
  names:
    kind: DConfig
    listKind: DConfigList
    plural: dconfigs
    singular: dconfig
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DConfig is the Schema for the dconfigs API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: DConfigSpec defines the desired state of DConfig
            properties:
              namespace:
                type: string
              projects:
                items:
                  type: string
                type: array
            required:
            - namespace
            - projects
            type: object
          status:
            description: DConfigStatus defines the observed state of DConfig
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: composition.google.com/v1alpha1
kind: Composition
metadata:
  name: dprojectconfigmap
  namespace: default
spec:
  inputAPIGroup: dconfigs.facade.foocorp.com
  namespaceMode: explicit
  expanders:
  - type: jinja2
    name: createnamespace
    template: |
      apiVersion: v1
      kind: Namespace
      metadata:
        name: {{ dconfigs.spec.namespace }}
  - type: jinja2
    name: project
    template: |
      {% for project in dconfigs.spec.projects %}
      apiVersion: composition.google.com/v1alpha1
      kind: Context
      metadata:
        name: context-{{ project }}
        namespace: {{ dconfigs.spec.namespace }}
      spec:
        project: {{ project }}
      ---
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: d-{{ project }}
        namespace: {{ dconfigs.spec.namespace }}
        labels:
          createdby: "composition-namespaceconfigmap"
      data:
        name: {{ project }}
        billingAccountRef: "010101-ABABCD-BCAB11"
        folderRef: "000000111100"
      ---
      {% endfor %}
---
apiVersion: v1
kind: Namespace
metadata:
  name: configs
---
apiVersion: facade.foocorp.com/v1alpha1
kind: DConfig
metadata:
  name: config-team-a
  namespace: configs
spec:
  projects:
  - proj-a
  - proj-b
  namespace: team-a-ns
---
apiVersion: facade.foocorp.com/v1alpha1
kind: DConfig
metadata:
  name: config-team-b
  namespace: configs
spec:
  projects:
  - proj-a
  - proj-b
  namespace: team-b-ns