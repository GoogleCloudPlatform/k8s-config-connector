// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// The definition of a Expander service.

syntax = "proto3";

package expander_grpc;

option go_package = "google.com/composition/proto/expander";


enum Status {
  SUCCESS = 0;

  VALIDATE_FAILED = 1;
  EVALUATE_FAILED = 2;
  EVALUATE_WAIT = 3;
  UNEXPECTED_ERROR = 4;
}

enum ResultType {
  UNKNOWN = 0;
  MANIFESTS = 1;
  VALUES = 2;
}

message Error {
  string message = 1;
}

message ValidateResult {
  Status status = 1;
  Error error = 2;
}

message EvaluateResult {
  Status status = 1;
  Error error = 2;
  ResultType type = 3;
  bytes manifests = 4;
  bytes values = 5;
}

message EvaluateRequest {
  bytes config = 1;
  bytes context = 2;
  bytes facade = 3;
  bytes value = 4;
  string resource = 5;
}

message ValidateRequest {
  bytes config = 1;
  bytes context = 2;
  bytes facade = 3;
  bytes value = 4;
  string resource = 5;
}

service Expander {
  // Verify the expander config/template
  rpc Validate(ValidateRequest) returns (ValidateResult) {
  }

  // Evaluate the expander config in context of inputs and return manifests
  rpc Evaluate(EvaluateRequest) returns (EvaluateResult) {
  }
}