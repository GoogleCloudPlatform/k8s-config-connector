//go:build !ignore_autogenerated
// +build !ignore_autogenerated

// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/apis/meta/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MultiClusterLease) DeepCopyInto(out *MultiClusterLease) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MultiClusterLease.
func (in *MultiClusterLease) DeepCopy() *MultiClusterLease {
	if in == nil {
		return nil
	}
	out := new(MultiClusterLease)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MultiClusterLease) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MultiClusterLeaseList) DeepCopyInto(out *MultiClusterLeaseList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MultiClusterLease, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MultiClusterLeaseList.
func (in *MultiClusterLeaseList) DeepCopy() *MultiClusterLeaseList {
	if in == nil {
		return nil
	}
	out := new(MultiClusterLeaseList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MultiClusterLeaseList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MultiClusterLeaseSpec) DeepCopyInto(out *MultiClusterLeaseSpec) {
	*out = *in
	if in.HolderIdentity != nil {
		in, out := &in.HolderIdentity, &out.HolderIdentity
		*out = new(string)
		**out = **in
	}
	if in.RenewTime != nil {
		in, out := &in.RenewTime, &out.RenewTime
		*out = (*in).DeepCopy()
	}
	if in.LeaseDurationSeconds != nil {
		in, out := &in.LeaseDurationSeconds, &out.LeaseDurationSeconds
		*out = new(int32)
		**out = **in
	}
	if in.RenewDeadlineSeconds != nil {
		in, out := &in.RenewDeadlineSeconds, &out.RenewDeadlineSeconds
		*out = new(int32)
		**out = **in
	}
	if in.RetryPeriodSeconds != nil {
		in, out := &in.RetryPeriodSeconds, &out.RetryPeriodSeconds
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MultiClusterLeaseSpec.
func (in *MultiClusterLeaseSpec) DeepCopy() *MultiClusterLeaseSpec {
	if in == nil {
		return nil
	}
	out := new(MultiClusterLeaseSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MultiClusterLeaseStatus) DeepCopyInto(out *MultiClusterLeaseStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ObservedGeneration != nil {
		in, out := &in.ObservedGeneration, &out.ObservedGeneration
		*out = new(int64)
		**out = **in
	}
	if in.GlobalHolderIdentity != nil {
		in, out := &in.GlobalHolderIdentity, &out.GlobalHolderIdentity
		*out = new(string)
		**out = **in
	}
	if in.GlobalRenewTime != nil {
		in, out := &in.GlobalRenewTime, &out.GlobalRenewTime
		*out = new(string)
		**out = **in
	}
	if in.GlobalLeaseDurationSeconds != nil {
		in, out := &in.GlobalLeaseDurationSeconds, &out.GlobalLeaseDurationSeconds
		*out = new(int32)
		**out = **in
	}
	if in.GlobalLeaseTransitions != nil {
		in, out := &in.GlobalLeaseTransitions, &out.GlobalLeaseTransitions
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MultiClusterLeaseStatus.
func (in *MultiClusterLeaseStatus) DeepCopy() *MultiClusterLeaseStatus {
	if in == nil {
		return nil
	}
	out := new(MultiClusterLeaseStatus)
	in.DeepCopyInto(out)
	return out
}
