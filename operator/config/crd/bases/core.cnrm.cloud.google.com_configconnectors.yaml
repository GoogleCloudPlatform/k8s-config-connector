---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: configconnectors.core.cnrm.cloud.google.com
spec:
  group: core.cnrm.cloud.google.com
  names:
    kind: ConfigConnector
    listKind: ConfigConnectorList
    plural: configconnectors
    singular: configconnector
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: When 'true' the most recent reconcile of the ConfigConnector object
        succeeded
      jsonPath: .status.healthy
      name: Healthy
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: ConfigConnector is the Schema for the configconnectors API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ConfigConnectorSpec defines the desired state of ConfigConnector
            properties:
              actuationMode:
                description: |-
                  The actuation mode of Config Connector controls how resources are actuated onto the cloud provider.
                  This can be either 'Reconciling' or 'Paused'.
                  In 'Paused', k8s resources are still reconciled with the api server but not actuated onto the cloud provider.
                  If Config Connector is running in 'namespaced' mode, then the value in ConfigConnectorContext (CCC) takes precedence.
                  If CCC doesn't define a value but ConfigConnector (CC) does, we defer to that value. Otherwise,
                  the default is 'Reconciling' where resources get actuated.
                enum:
                - Reconciling
                - Paused
                type: string
              credentialSecretName:
                description: |-
                  The Kubernetes secret that contains the Google Service Account Key's credentials to be used by ConfigConnector to authenticate with Google Cloud APIs. This field is used only when in cluster mode.
                  It's recommended to use `googleServiceAccount` when running ConfigConnector in Google Kubernetes Engine (GKE) clusters with Workload Identity enabled.
                  This field cannot be specified together with `googleServiceAccount`.
                type: string
              googleServiceAccount:
                description: |-
                  The Google Service Account to be used by Config Connector to authenticate with Google Cloud APIs. This field is used only when running in cluster mode with Workload Identity enabled.
                  See Google Kubernetes Engine (GKE) workload-identity (https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity) for details. This field cannot be specified together with `credentialSecretName`.
                  For namespaced mode, use `googleServiceAccount` in ConfigConnectorContext CRD to specify the Google Service Account to be used to authenticate with Google Cloud APIs per namespace.
                type: string
              mode:
                description: |-
                  The mode that Config Connector will run in. This can be either 'cluster' or 'namespaced'. The default is 'namespaced'.
                  Cluster mode uses a single Google Service Account to create and manage resources, even if you are using Config Connector to manage multiple Projects.
                  You must specify either `credentialSecretName` or `googleServiceAccount` when in cluster mode, but not both.
                  Namespaced mode allows you to use different Google service accounts for different Projects.
                  When in namespaced mode, you must create a ConfigConnectorContext object per namespace that you want to enable Config Connector in, and each must set `googleServiceAccount` to specify the Google Service Account to be used to authenticate with Google Cloud APIs for the namespace.
                enum:
                - cluster
                - namespaced
                type: string
              stateIntoSpec:
                description: |-
                  StateIntoSpec is the user override of the default value for the
                  'cnrm.cloud.google.com/state-into-spec' annotation if the annotation is
                  unset for a resource.
                  If the field is set in both the ConfigConnector object and the
                  ConfigConnectorContext object is in the namespaced mode, then the value
                  in the ConfigConnectorContext object will be used.
                  'Absent' means that unspecified fields in the resource spec stay
                  unspecified after successful reconciliation.
                  'Merge' means that unspecified fields in the resource spec are populated
                  after a successful reconciliation if those unspecified fields are
                  computed/defaulted by the API. It is only applicable to resources
                  supporting the 'Merge' option.
                enum:
                - Absent
                - Merge
                type: string
            type: object
          status:
            description: ConfigConnectorStatus defines the observed state of ConfigConnector
            properties:
              errors:
                items:
                  type: string
                type: array
              healthy:
                type: boolean
              phase:
                type: string
            required:
            - healthy
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
