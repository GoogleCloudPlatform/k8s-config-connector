// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: google/apps/cloudidentity/groups/v1beta1/service.proto

package groupspb

import (
	longrunningpb "cloud.google.com/go/longrunning/autogen/longrunningpb"
	any1 "github.com/golang/protobuf/ptypes/any"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// LRO response metadata for InboundSamlSsoProfilesService.AddIdpCredential.
type AddIdpCredentialOperationMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// State of this Operation Will be "awaiting-multi-party-approval" when the operation is deferred due to the target customer having enabled [Multi-party approval for sensitive actions](https://support.google.com/a/answer/13790448).
	State *string `protobuf:"bytes,1,opt,name=state" json:"state,omitempty"`
}

func (x *AddIdpCredentialOperationMetadata) Reset() {
	*x = AddIdpCredentialOperationMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddIdpCredentialOperationMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddIdpCredentialOperationMetadata) ProtoMessage() {}

func (x *AddIdpCredentialOperationMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddIdpCredentialOperationMetadata.ProtoReflect.Descriptor instead.
func (*AddIdpCredentialOperationMetadata) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{0}
}

func (x *AddIdpCredentialOperationMetadata) GetState() string {
	if x != nil && x.State != nil {
		return *x.State
	}
	return ""
}

// The request for creating an IdpCredential with its associated payload. An InboundSamlSsoProfile can own up to 2 credentials.
type AddIdpCredentialRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// PEM encoded x509 certificate containing the public key for verifying IdP signatures.
	PemData *string `protobuf:"bytes,1,opt,name=pem_data,json=pemData" json:"pem_data,omitempty"`
}

func (x *AddIdpCredentialRequest) Reset() {
	*x = AddIdpCredentialRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddIdpCredentialRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddIdpCredentialRequest) ProtoMessage() {}

func (x *AddIdpCredentialRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddIdpCredentialRequest.ProtoReflect.Descriptor instead.
func (*AddIdpCredentialRequest) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{1}
}

func (x *AddIdpCredentialRequest) GetPemData() string {
	if x != nil && x.PemData != nil {
		return *x.PemData
	}
	return ""
}

// Resource representing the Android specific attributes of a Device.
type AndroidAttributes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Whether the device passes Android CTS compliance.
	CtsProfileMatch *bool `protobuf:"varint,1,opt,name=cts_profile_match,json=ctsProfileMatch" json:"cts_profile_match,omitempty"`
	// Whether applications from unknown sources can be installed on device.
	EnabledUnknownSources *bool `protobuf:"varint,2,opt,name=enabled_unknown_sources,json=enabledUnknownSources" json:"enabled_unknown_sources,omitempty"`
	// Whether any potentially harmful apps were detected on the device.
	HasPotentiallyHarmfulApps *bool `protobuf:"varint,3,opt,name=has_potentially_harmful_apps,json=hasPotentiallyHarmfulApps" json:"has_potentially_harmful_apps,omitempty"`
	// Whether this account is on an owner/primary profile. For phones, only true for owner profiles. Android 4+ devices can have secondary or restricted user profiles.
	OwnerProfileAccount *bool `protobuf:"varint,4,opt,name=owner_profile_account,json=ownerProfileAccount" json:"owner_profile_account,omitempty"`
	// Ownership privileges on device.
	OwnershipPrivilege *string `protobuf:"bytes,5,opt,name=ownership_privilege,json=ownershipPrivilege" json:"ownership_privilege,omitempty"`
	// Whether device supports Android work profiles. If false, this service will not block access to corp data even if an administrator turns on the "Enforce Work Profile" policy.
	SupportsWorkProfile *bool `protobuf:"varint,6,opt,name=supports_work_profile,json=supportsWorkProfile" json:"supports_work_profile,omitempty"`
	// Whether Android verified boot status is GREEN.
	VerifiedBoot *bool `protobuf:"varint,7,opt,name=verified_boot,json=verifiedBoot" json:"verified_boot,omitempty"`
	// Whether Google Play Protect Verify Apps is enabled.
	VerifyAppsEnabled *bool `protobuf:"varint,8,opt,name=verify_apps_enabled,json=verifyAppsEnabled" json:"verify_apps_enabled,omitempty"`
}

func (x *AndroidAttributes) Reset() {
	*x = AndroidAttributes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AndroidAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AndroidAttributes) ProtoMessage() {}

func (x *AndroidAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AndroidAttributes.ProtoReflect.Descriptor instead.
func (*AndroidAttributes) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{2}
}

func (x *AndroidAttributes) GetCtsProfileMatch() bool {
	if x != nil && x.CtsProfileMatch != nil {
		return *x.CtsProfileMatch
	}
	return false
}

func (x *AndroidAttributes) GetEnabledUnknownSources() bool {
	if x != nil && x.EnabledUnknownSources != nil {
		return *x.EnabledUnknownSources
	}
	return false
}

func (x *AndroidAttributes) GetHasPotentiallyHarmfulApps() bool {
	if x != nil && x.HasPotentiallyHarmfulApps != nil {
		return *x.HasPotentiallyHarmfulApps
	}
	return false
}

func (x *AndroidAttributes) GetOwnerProfileAccount() bool {
	if x != nil && x.OwnerProfileAccount != nil {
		return *x.OwnerProfileAccount
	}
	return false
}

func (x *AndroidAttributes) GetOwnershipPrivilege() string {
	if x != nil && x.OwnershipPrivilege != nil {
		return *x.OwnershipPrivilege
	}
	return ""
}

func (x *AndroidAttributes) GetSupportsWorkProfile() bool {
	if x != nil && x.SupportsWorkProfile != nil {
		return *x.SupportsWorkProfile
	}
	return false
}

func (x *AndroidAttributes) GetVerifiedBoot() bool {
	if x != nil && x.VerifiedBoot != nil {
		return *x.VerifiedBoot
	}
	return false
}

func (x *AndroidAttributes) GetVerifyAppsEnabled() bool {
	if x != nil && x.VerifyAppsEnabled != nil {
		return *x.VerifyAppsEnabled
	}
	return false
}

// Request message for approving the device to access user data.
type ApproveDeviceUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional. [Resource name](https://cloud.google.com/apis/design/resource_names) of the customer. If you're using this API for your own organization, use `customers/my_customer` If you're using this API to manage another organization, use `customers/{customer_id}`, where customer_id is the customer to whom the device belongs.
	Customer *string `protobuf:"bytes,1,opt,name=customer" json:"customer,omitempty"`
}

func (x *ApproveDeviceUserRequest) Reset() {
	*x = ApproveDeviceUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApproveDeviceUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveDeviceUserRequest) ProtoMessage() {}

func (x *ApproveDeviceUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApproveDeviceUserRequest.ProtoReflect.Descriptor instead.
func (*ApproveDeviceUserRequest) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{3}
}

func (x *ApproveDeviceUserRequest) GetCustomer() string {
	if x != nil && x.Customer != nil {
		return *x.Customer
	}
	return ""
}

// Response message for approving the device to access user data.
type ApproveDeviceUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Resultant DeviceUser object for the action.
	DeviceUser *DeviceUser `protobuf:"bytes,1,opt,name=device_user,json=deviceUser" json:"device_user,omitempty"`
}

func (x *ApproveDeviceUserResponse) Reset() {
	*x = ApproveDeviceUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApproveDeviceUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveDeviceUserResponse) ProtoMessage() {}

func (x *ApproveDeviceUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApproveDeviceUserResponse.ProtoReflect.Descriptor instead.
func (*ApproveDeviceUserResponse) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{4}
}

func (x *ApproveDeviceUserResponse) GetDeviceUser() *DeviceUser {
	if x != nil {
		return x.DeviceUser
	}
	return nil
}

// Request message for blocking account on device.
type BlockDeviceUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional. [Resource name](https://cloud.google.com/apis/design/resource_names) of the customer. If you're using this API for your own organization, use `customers/my_customer` If you're using this API to manage another organization, use `customers/{customer_id}`, where customer_id is the customer to whom the device belongs.
	Customer *string `protobuf:"bytes,1,opt,name=customer" json:"customer,omitempty"`
}

func (x *BlockDeviceUserRequest) Reset() {
	*x = BlockDeviceUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockDeviceUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockDeviceUserRequest) ProtoMessage() {}

func (x *BlockDeviceUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockDeviceUserRequest.ProtoReflect.Descriptor instead.
func (*BlockDeviceUserRequest) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{5}
}

func (x *BlockDeviceUserRequest) GetCustomer() string {
	if x != nil && x.Customer != nil {
		return *x.Customer
	}
	return ""
}

// Response message for blocking the device from accessing user data.
type BlockDeviceUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Resultant DeviceUser object for the action.
	DeviceUser *DeviceUser `protobuf:"bytes,1,opt,name=device_user,json=deviceUser" json:"device_user,omitempty"`
}

func (x *BlockDeviceUserResponse) Reset() {
	*x = BlockDeviceUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockDeviceUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockDeviceUserResponse) ProtoMessage() {}

func (x *BlockDeviceUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockDeviceUserResponse.ProtoReflect.Descriptor instead.
func (*BlockDeviceUserResponse) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{6}
}

func (x *BlockDeviceUserResponse) GetDeviceUser() *DeviceUser {
	if x != nil {
		return x.DeviceUser
	}
	return nil
}

// Contains information about browser profiles reported by the [Endpoint Verification extension](https://chromewebstore.google.com/detail/endpoint-verification/callobklhcbilhphinckomhgkigmfocg?pli=1).
type BrowserAttributes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Represents the current state of the [Chrome browser attributes](https://cloud.google.com/access-context-manager/docs/browser-attributes) sent by the [Endpoint Verification extension](https://chromewebstore.google.com/detail/endpoint-verification/callobklhcbilhphinckomhgkigmfocg?pli=1).
	ChromeBrowserInfo *BrowserInfo `protobuf:"bytes,1,opt,name=chrome_browser_info,json=chromeBrowserInfo" json:"chrome_browser_info,omitempty"`
	// Chrome profile ID that is exposed by the Chrome API. It is unique for each device.
	ChromeProfileId *string `protobuf:"bytes,2,opt,name=chrome_profile_id,json=chromeProfileId" json:"chrome_profile_id,omitempty"`
	// Timestamp in milliseconds since the Unix epoch when the profile/gcm id was last synced.
	LastProfileSyncTime *timestamp.Timestamp `protobuf:"bytes,3,opt,name=last_profile_sync_time,json=lastProfileSyncTime" json:"last_profile_sync_time,omitempty"`
}

func (x *BrowserAttributes) Reset() {
	*x = BrowserAttributes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrowserAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrowserAttributes) ProtoMessage() {}

func (x *BrowserAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrowserAttributes.ProtoReflect.Descriptor instead.
func (*BrowserAttributes) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{7}
}

func (x *BrowserAttributes) GetChromeBrowserInfo() *BrowserInfo {
	if x != nil {
		return x.ChromeBrowserInfo
	}
	return nil
}

func (x *BrowserAttributes) GetChromeProfileId() string {
	if x != nil && x.ChromeProfileId != nil {
		return *x.ChromeProfileId
	}
	return ""
}

func (x *BrowserAttributes) GetLastProfileSyncTime() *timestamp.Timestamp {
	if x != nil {
		return x.LastProfileSyncTime
	}
	return nil
}

// Browser-specific fields reported by the [Endpoint Verification extension](https://chromewebstore.google.com/detail/endpoint-verification/callobklhcbilhphinckomhgkigmfocg?pli=1).
type BrowserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Output only. Browser's management state.
	BrowserManagementState *string `protobuf:"bytes,1,opt,name=browser_management_state,json=browserManagementState" json:"browser_management_state,omitempty"`
	// Version of the request initiating browser. E.g. `91.0.4442.4`.
	BrowserVersion *string `protobuf:"bytes,2,opt,name=browser_version,json=browserVersion" json:"browser_version,omitempty"`
	// Current state of [built-in DNS client](https://chromeenterprise.google/policies/#BuiltInDnsClientEnabled).
	IsBuiltInDnsClientEnabled *bool `protobuf:"varint,3,opt,name=is_built_in_dns_client_enabled,json=isBuiltInDnsClientEnabled" json:"is_built_in_dns_client_enabled,omitempty"`
	// Current state of [bulk data analysis](https://chromeenterprise.google/policies/#OnBulkDataEntryEnterpriseConnector). Set to true if provider list from Chrome is non-empty.
	IsBulkDataEntryAnalysisEnabled *bool `protobuf:"varint,4,opt,name=is_bulk_data_entry_analysis_enabled,json=isBulkDataEntryAnalysisEnabled" json:"is_bulk_data_entry_analysis_enabled,omitempty"`
	// Current state of [Chrome Cleanup](https://chromeenterprise.google/policies/#ChromeCleanupEnabled).
	IsChromeCleanupEnabled *bool `protobuf:"varint,5,opt,name=is_chrome_cleanup_enabled,json=isChromeCleanupEnabled" json:"is_chrome_cleanup_enabled,omitempty"`
	// Current state of [Chrome Remote Desktop app](https://chromeenterprise.google/policies/#URLBlocklist).
	IsChromeRemoteDesktopAppBlocked *bool `protobuf:"varint,6,opt,name=is_chrome_remote_desktop_app_blocked,json=isChromeRemoteDesktopAppBlocked" json:"is_chrome_remote_desktop_app_blocked,omitempty"`
	// Current state of [file download analysis](https://chromeenterprise.google/policies/#OnFileDownloadedEnterpriseConnector). Set to true if provider list from Chrome is non-empty.
	IsFileDownloadAnalysisEnabled *bool `protobuf:"varint,7,opt,name=is_file_download_analysis_enabled,json=isFileDownloadAnalysisEnabled" json:"is_file_download_analysis_enabled,omitempty"`
	// Current state of [file upload analysis](https://chromeenterprise.google/policies/#OnFileAttachedEnterpriseConnector). Set to true if provider list from Chrome is non-empty.
	IsFileUploadAnalysisEnabled *bool `protobuf:"varint,8,opt,name=is_file_upload_analysis_enabled,json=isFileUploadAnalysisEnabled" json:"is_file_upload_analysis_enabled,omitempty"`
	// Current state of [real-time URL check](https://chromeenterprise.google/policies/#EnterpriseRealTimeUrlCheckMode). Set to true if provider list from Chrome is non-empty.
	IsRealtimeUrlCheckEnabled *bool `protobuf:"varint,9,opt,name=is_realtime_url_check_enabled,json=isRealtimeUrlCheckEnabled" json:"is_realtime_url_check_enabled,omitempty"`
	// Current state of [security event analysis](https://chromeenterprise.google/policies/#OnSecurityEventEnterpriseConnector). Set to true if provider list from Chrome is non-empty.
	IsSecurityEventAnalysisEnabled *bool `protobuf:"varint,10,opt,name=is_security_event_analysis_enabled,json=isSecurityEventAnalysisEnabled" json:"is_security_event_analysis_enabled,omitempty"`
	// Current state of [site isolation](https://chromeenterprise.google/policies/?policy=IsolateOrigins).
	IsSiteIsolationEnabled *bool `protobuf:"varint,11,opt,name=is_site_isolation_enabled,json=isSiteIsolationEnabled" json:"is_site_isolation_enabled,omitempty"`
	// Current state of [third-party blocking](https://chromeenterprise.google/policies/#ThirdPartyBlockingEnabled).
	IsThirdPartyBlockingEnabled *bool `protobuf:"varint,12,opt,name=is_third_party_blocking_enabled,json=isThirdPartyBlockingEnabled" json:"is_third_party_blocking_enabled,omitempty"`
	// Current state of [password protection trigger](https://chromeenterprise.google/policies/#PasswordProtectionWarningTrigger).
	PasswordProtectionWarningTrigger *string `protobuf:"bytes,13,opt,name=password_protection_warning_trigger,json=passwordProtectionWarningTrigger" json:"password_protection_warning_trigger,omitempty"`
	// Current state of [Safe Browsing protection level](https://chromeenterprise.google/policies/#SafeBrowsingProtectionLevel).
	SafeBrowsingProtectionLevel *string `protobuf:"bytes,14,opt,name=safe_browsing_protection_level,json=safeBrowsingProtectionLevel" json:"safe_browsing_protection_level,omitempty"`
}

func (x *BrowserInfo) Reset() {
	*x = BrowserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrowserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrowserInfo) ProtoMessage() {}

func (x *BrowserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrowserInfo.ProtoReflect.Descriptor instead.
func (*BrowserInfo) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{8}
}

func (x *BrowserInfo) GetBrowserManagementState() string {
	if x != nil && x.BrowserManagementState != nil {
		return *x.BrowserManagementState
	}
	return ""
}

func (x *BrowserInfo) GetBrowserVersion() string {
	if x != nil && x.BrowserVersion != nil {
		return *x.BrowserVersion
	}
	return ""
}

func (x *BrowserInfo) GetIsBuiltInDnsClientEnabled() bool {
	if x != nil && x.IsBuiltInDnsClientEnabled != nil {
		return *x.IsBuiltInDnsClientEnabled
	}
	return false
}

func (x *BrowserInfo) GetIsBulkDataEntryAnalysisEnabled() bool {
	if x != nil && x.IsBulkDataEntryAnalysisEnabled != nil {
		return *x.IsBulkDataEntryAnalysisEnabled
	}
	return false
}

func (x *BrowserInfo) GetIsChromeCleanupEnabled() bool {
	if x != nil && x.IsChromeCleanupEnabled != nil {
		return *x.IsChromeCleanupEnabled
	}
	return false
}

func (x *BrowserInfo) GetIsChromeRemoteDesktopAppBlocked() bool {
	if x != nil && x.IsChromeRemoteDesktopAppBlocked != nil {
		return *x.IsChromeRemoteDesktopAppBlocked
	}
	return false
}

func (x *BrowserInfo) GetIsFileDownloadAnalysisEnabled() bool {
	if x != nil && x.IsFileDownloadAnalysisEnabled != nil {
		return *x.IsFileDownloadAnalysisEnabled
	}
	return false
}

func (x *BrowserInfo) GetIsFileUploadAnalysisEnabled() bool {
	if x != nil && x.IsFileUploadAnalysisEnabled != nil {
		return *x.IsFileUploadAnalysisEnabled
	}
	return false
}

func (x *BrowserInfo) GetIsRealtimeUrlCheckEnabled() bool {
	if x != nil && x.IsRealtimeUrlCheckEnabled != nil {
		return *x.IsRealtimeUrlCheckEnabled
	}
	return false
}

func (x *BrowserInfo) GetIsSecurityEventAnalysisEnabled() bool {
	if x != nil && x.IsSecurityEventAnalysisEnabled != nil {
		return *x.IsSecurityEventAnalysisEnabled
	}
	return false
}

func (x *BrowserInfo) GetIsSiteIsolationEnabled() bool {
	if x != nil && x.IsSiteIsolationEnabled != nil {
		return *x.IsSiteIsolationEnabled
	}
	return false
}

func (x *BrowserInfo) GetIsThirdPartyBlockingEnabled() bool {
	if x != nil && x.IsThirdPartyBlockingEnabled != nil {
		return *x.IsThirdPartyBlockingEnabled
	}
	return false
}

func (x *BrowserInfo) GetPasswordProtectionWarningTrigger() string {
	if x != nil && x.PasswordProtectionWarningTrigger != nil {
		return *x.PasswordProtectionWarningTrigger
	}
	return ""
}

func (x *BrowserInfo) GetSafeBrowsingProtectionLevel() string {
	if x != nil && x.SafeBrowsingProtectionLevel != nil {
		return *x.SafeBrowsingProtectionLevel
	}
	return ""
}

// Request to cancel sent invitation for target email in UserInvitation.
type CancelUserInvitationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CancelUserInvitationRequest) Reset() {
	*x = CancelUserInvitationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelUserInvitationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelUserInvitationRequest) ProtoMessage() {}

func (x *CancelUserInvitationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelUserInvitationRequest.ProtoReflect.Descriptor instead.
func (*CancelUserInvitationRequest) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{9}
}

// Request message for cancelling an unfinished device wipe.
type CancelWipeDeviceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional. [Resource name](https://cloud.google.com/apis/design/resource_names) of the customer. If you're using this API for your own organization, use `customers/my_customer` If you're using this API to manage another organization, use `customers/{customer_id}`, where customer_id is the customer to whom the device belongs.
	Customer *string `protobuf:"bytes,1,opt,name=customer" json:"customer,omitempty"`
}

func (x *CancelWipeDeviceRequest) Reset() {
	*x = CancelWipeDeviceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelWipeDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelWipeDeviceRequest) ProtoMessage() {}

func (x *CancelWipeDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelWipeDeviceRequest.ProtoReflect.Descriptor instead.
func (*CancelWipeDeviceRequest) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{10}
}

func (x *CancelWipeDeviceRequest) GetCustomer() string {
	if x != nil && x.Customer != nil {
		return *x.Customer
	}
	return ""
}

// Response message for cancelling an unfinished device wipe.
type CancelWipeDeviceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Resultant Device object for the action. Note that asset tags will not be returned in the device object.
	Device *Device `protobuf:"bytes,1,opt,name=device" json:"device,omitempty"`
}

func (x *CancelWipeDeviceResponse) Reset() {
	*x = CancelWipeDeviceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelWipeDeviceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelWipeDeviceResponse) ProtoMessage() {}

func (x *CancelWipeDeviceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelWipeDeviceResponse.ProtoReflect.Descriptor instead.
func (*CancelWipeDeviceResponse) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{11}
}

func (x *CancelWipeDeviceResponse) GetDevice() *Device {
	if x != nil {
		return x.Device
	}
	return nil
}

// Request message for cancelling an unfinished user account wipe.
type CancelWipeDeviceUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional. [Resource name](https://cloud.google.com/apis/design/resource_names) of the customer. If you're using this API for your own organization, use `customers/my_customer` If you're using this API to manage another organization, use `customers/{customer_id}`, where customer_id is the customer to whom the device belongs.
	Customer *string `protobuf:"bytes,1,opt,name=customer" json:"customer,omitempty"`
}

func (x *CancelWipeDeviceUserRequest) Reset() {
	*x = CancelWipeDeviceUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelWipeDeviceUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelWipeDeviceUserRequest) ProtoMessage() {}

func (x *CancelWipeDeviceUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelWipeDeviceUserRequest.ProtoReflect.Descriptor instead.
func (*CancelWipeDeviceUserRequest) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{12}
}

func (x *CancelWipeDeviceUserRequest) GetCustomer() string {
	if x != nil && x.Customer != nil {
		return *x.Customer
	}
	return ""
}

// Response message for cancelling an unfinished user account wipe.
type CancelWipeDeviceUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Resultant DeviceUser object for the action.
	DeviceUser *DeviceUser `protobuf:"bytes,1,opt,name=device_user,json=deviceUser" json:"device_user,omitempty"`
}

func (x *CancelWipeDeviceUserResponse) Reset() {
	*x = CancelWipeDeviceUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelWipeDeviceUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelWipeDeviceUserResponse) ProtoMessage() {}

func (x *CancelWipeDeviceUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelWipeDeviceUserResponse.ProtoReflect.Descriptor instead.
func (*CancelWipeDeviceUserResponse) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{13}
}

func (x *CancelWipeDeviceUserResponse) GetDeviceUser() *DeviceUser {
	if x != nil {
		return x.DeviceUser
	}
	return nil
}

// Stores information about a certificate.
type CertificateAttributes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The X.509 extension for CertificateTemplate.
	CertificateTemplate *CertificateTemplate `protobuf:"bytes,1,opt,name=certificate_template,json=certificateTemplate" json:"certificate_template,omitempty"`
	// The encoded certificate fingerprint.
	Fingerprint *string `protobuf:"bytes,2,opt,name=fingerprint" json:"fingerprint,omitempty"`
	// The name of the issuer of this certificate.
	Issuer *string `protobuf:"bytes,3,opt,name=issuer" json:"issuer,omitempty"`
	// Serial number of the certificate, Example: "123456789".
	SerialNumber *string `protobuf:"bytes,4,opt,name=serial_number,json=serialNumber" json:"serial_number,omitempty"`
	// The subject name of this certificate.
	Subject *string `protobuf:"bytes,5,opt,name=subject" json:"subject,omitempty"`
	// The certificate thumbprint.
	Thumbprint *string `protobuf:"bytes,6,opt,name=thumbprint" json:"thumbprint,omitempty"`
	// Validation state of this certificate.
	ValidationState *string `protobuf:"bytes,7,opt,name=validation_state,json=validationState" json:"validation_state,omitempty"`
	// Certificate not valid at or after this timestamp.
	ValidityExpirationTime *timestamp.Timestamp `protobuf:"bytes,8,opt,name=validity_expiration_time,json=validityExpirationTime" json:"validity_expiration_time,omitempty"`
	// Certificate not valid before this timestamp.
	ValidityStartTime *timestamp.Timestamp `protobuf:"bytes,9,opt,name=validity_start_time,json=validityStartTime" json:"validity_start_time,omitempty"`
}

func (x *CertificateAttributes) Reset() {
	*x = CertificateAttributes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CertificateAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CertificateAttributes) ProtoMessage() {}

func (x *CertificateAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CertificateAttributes.ProtoReflect.Descriptor instead.
func (*CertificateAttributes) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{14}
}

func (x *CertificateAttributes) GetCertificateTemplate() *CertificateTemplate {
	if x != nil {
		return x.CertificateTemplate
	}
	return nil
}

func (x *CertificateAttributes) GetFingerprint() string {
	if x != nil && x.Fingerprint != nil {
		return *x.Fingerprint
	}
	return ""
}

func (x *CertificateAttributes) GetIssuer() string {
	if x != nil && x.Issuer != nil {
		return *x.Issuer
	}
	return ""
}

func (x *CertificateAttributes) GetSerialNumber() string {
	if x != nil && x.SerialNumber != nil {
		return *x.SerialNumber
	}
	return ""
}

func (x *CertificateAttributes) GetSubject() string {
	if x != nil && x.Subject != nil {
		return *x.Subject
	}
	return ""
}

func (x *CertificateAttributes) GetThumbprint() string {
	if x != nil && x.Thumbprint != nil {
		return *x.Thumbprint
	}
	return ""
}

func (x *CertificateAttributes) GetValidationState() string {
	if x != nil && x.ValidationState != nil {
		return *x.ValidationState
	}
	return ""
}

func (x *CertificateAttributes) GetValidityExpirationTime() *timestamp.Timestamp {
	if x != nil {
		return x.ValidityExpirationTime
	}
	return nil
}

func (x *CertificateAttributes) GetValidityStartTime() *timestamp.Timestamp {
	if x != nil {
		return x.ValidityStartTime
	}
	return nil
}

// CertificateTemplate (v3 Extension in X.509).
type CertificateTemplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The template id of the template. Example: "1.3.6.1.4.1.311.21.8.15608621.11768144.5720724.16068415.6889630.81.2472537.7784047".
	Id *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// The Major version of the template. Example: 100.
	MajorVersion *int32 `protobuf:"varint,2,opt,name=major_version,json=majorVersion" json:"major_version,omitempty"`
	// The minor version of the template. Example: 12.
	MinorVersion *int32 `protobuf:"varint,3,opt,name=minor_version,json=minorVersion" json:"minor_version,omitempty"`
}

func (x *CertificateTemplate) Reset() {
	*x = CertificateTemplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CertificateTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CertificateTemplate) ProtoMessage() {}

func (x *CertificateTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CertificateTemplate.ProtoReflect.Descriptor instead.
func (*CertificateTemplate) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{15}
}

func (x *CertificateTemplate) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *CertificateTemplate) GetMajorVersion() int32 {
	if x != nil && x.MajorVersion != nil {
		return *x.MajorVersion
	}
	return 0
}

func (x *CertificateTemplate) GetMinorVersion() int32 {
	if x != nil && x.MinorVersion != nil {
		return *x.MinorVersion
	}
	return 0
}

// The response message for MembershipsService.CheckTransitiveMembership.
type CheckTransitiveMembershipResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Response does not include the possible roles of a member since the behavior of this rpc is not all-or-nothing unlike the other rpcs. So, it may not be possible to list all the roles definitively, due to possible lack of authorization in some of the paths.
	HasMembership *bool `protobuf:"varint,1,opt,name=has_membership,json=hasMembership" json:"has_membership,omitempty"`
}

func (x *CheckTransitiveMembershipResponse) Reset() {
	*x = CheckTransitiveMembershipResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckTransitiveMembershipResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckTransitiveMembershipResponse) ProtoMessage() {}

func (x *CheckTransitiveMembershipResponse) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckTransitiveMembershipResponse.ProtoReflect.Descriptor instead.
func (*CheckTransitiveMembershipResponse) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{16}
}

func (x *CheckTransitiveMembershipResponse) GetHasMembership() bool {
	if x != nil && x.HasMembership != nil {
		return *x.HasMembership
	}
	return false
}

// Represents the state associated with an API client calling the Devices API. Resource representing ClientState and supports updates from API users
type ClientState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The caller can specify asset tags for this resource
	AssetTags []string `protobuf:"bytes,1,rep,name=asset_tags,json=assetTags" json:"asset_tags,omitempty"`
	// The compliance state of the resource as specified by the API client.
	ComplianceState *string `protobuf:"bytes,2,opt,name=compliance_state,json=complianceState" json:"compliance_state,omitempty"`
	// Output only. The time the client state data was created.
	CreateTime *timestamp.Timestamp `protobuf:"bytes,3,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	// This field may be used to store a unique identifier for the API resource within which these CustomAttributes are a field.
	CustomId *string `protobuf:"bytes,4,opt,name=custom_id,json=customId" json:"custom_id,omitempty"`
	// The token that needs to be passed back for concurrency control in updates. Token needs to be passed back in UpdateRequest
	Etag *string `protobuf:"bytes,5,opt,name=etag" json:"etag,omitempty"`
	// The Health score of the resource
	HealthScore *string `protobuf:"bytes,6,opt,name=health_score,json=healthScore" json:"health_score,omitempty"`
	// The map of key-value attributes stored by callers specific to a device. The total serialized length of this map may not exceed 10KB. No limit is placed on the number of attributes in a map.
	KeyValuePairs map[string]*CustomAttributeValue `protobuf:"bytes,7,rep,name=key_value_pairs,json=keyValuePairs" json:"key_value_pairs,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Output only. The time the client state data was last updated.
	LastUpdateTime *timestamp.Timestamp `protobuf:"bytes,8,opt,name=last_update_time,json=lastUpdateTime" json:"last_update_time,omitempty"`
	// The management state of the resource as specified by the API client.
	Managed *string `protobuf:"bytes,9,opt,name=managed" json:"managed,omitempty"`
	// Output only. [Resource name](https://cloud.google.com/apis/design/resource_names) of the ClientState in format: `devices/{device_id}/deviceUsers/{device_user_id}/clientState/{partner_id}`, where partner_id corresponds to the partner storing the data.
	Name *string `protobuf:"bytes,10,opt,name=name" json:"name,omitempty"`
	// Output only. The owner of the ClientState
	OwnerType *string `protobuf:"bytes,11,opt,name=owner_type,json=ownerType" json:"owner_type,omitempty"`
	// A descriptive cause of the health score.
	ScoreReason *string `protobuf:"bytes,12,opt,name=score_reason,json=scoreReason" json:"score_reason,omitempty"`
}

func (x *ClientState) Reset() {
	*x = ClientState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientState) ProtoMessage() {}

func (x *ClientState) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientState.ProtoReflect.Descriptor instead.
func (*ClientState) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{17}
}

func (x *ClientState) GetAssetTags() []string {
	if x != nil {
		return x.AssetTags
	}
	return nil
}

func (x *ClientState) GetComplianceState() string {
	if x != nil && x.ComplianceState != nil {
		return *x.ComplianceState
	}
	return ""
}

func (x *ClientState) GetCreateTime() *timestamp.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *ClientState) GetCustomId() string {
	if x != nil && x.CustomId != nil {
		return *x.CustomId
	}
	return ""
}

func (x *ClientState) GetEtag() string {
	if x != nil && x.Etag != nil {
		return *x.Etag
	}
	return ""
}

func (x *ClientState) GetHealthScore() string {
	if x != nil && x.HealthScore != nil {
		return *x.HealthScore
	}
	return ""
}

func (x *ClientState) GetKeyValuePairs() map[string]*CustomAttributeValue {
	if x != nil {
		return x.KeyValuePairs
	}
	return nil
}

func (x *ClientState) GetLastUpdateTime() *timestamp.Timestamp {
	if x != nil {
		return x.LastUpdateTime
	}
	return nil
}

func (x *ClientState) GetManaged() string {
	if x != nil && x.Managed != nil {
		return *x.Managed
	}
	return ""
}

func (x *ClientState) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ClientState) GetOwnerType() string {
	if x != nil && x.OwnerType != nil {
		return *x.OwnerType
	}
	return ""
}

func (x *ClientState) GetScoreReason() string {
	if x != nil && x.ScoreReason != nil {
		return *x.ScoreReason
	}
	return ""
}

// Request message for creating a Company Owned device.
type CreateDeviceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional. [Resource name](https://cloud.google.com/apis/design/resource_names) of the customer. If you're using this API for your own organization, use `customers/my_customer` If you're using this API to manage another organization, use `customers/{customer_id}`, where customer_id is the customer to whom the device belongs.
	Customer *string `protobuf:"bytes,1,opt,name=customer" json:"customer,omitempty"`
	// Required. The device to be created. The name field within this device is ignored in the create method. A new name is created by the method, and returned within the response. Only the fields `device_type`, `serial_number` and `asset_tag` (if present) are used to create the device. All other fields are ignored. The `device_type` and `serial_number` fields are required.
	Device *Device `protobuf:"bytes,2,opt,name=device" json:"device,omitempty"`
}

func (x *CreateDeviceRequest) Reset() {
	*x = CreateDeviceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDeviceRequest) ProtoMessage() {}

func (x *CreateDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDeviceRequest.ProtoReflect.Descriptor instead.
func (*CreateDeviceRequest) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{18}
}

func (x *CreateDeviceRequest) GetCustomer() string {
	if x != nil && x.Customer != nil {
		return *x.Customer
	}
	return ""
}

func (x *CreateDeviceRequest) GetDevice() *Device {
	if x != nil {
		return x.Device
	}
	return nil
}

// LRO response metadata for InboundSamlSsoProfilesService.CreateInboundSamlSsoProfile.
type CreateInboundSamlSsoProfileOperationMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// State of this Operation Will be "awaiting-multi-party-approval" when the operation is deferred due to the target customer having enabled [Multi-party approval for sensitive actions](https://support.google.com/a/answer/13790448).
	State *string `protobuf:"bytes,1,opt,name=state" json:"state,omitempty"`
}

func (x *CreateInboundSamlSsoProfileOperationMetadata) Reset() {
	*x = CreateInboundSamlSsoProfileOperationMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateInboundSamlSsoProfileOperationMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateInboundSamlSsoProfileOperationMetadata) ProtoMessage() {}

func (x *CreateInboundSamlSsoProfileOperationMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateInboundSamlSsoProfileOperationMetadata.ProtoReflect.Descriptor instead.
func (*CreateInboundSamlSsoProfileOperationMetadata) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{19}
}

func (x *CreateInboundSamlSsoProfileOperationMetadata) GetState() string {
	if x != nil && x.State != nil {
		return *x.State
	}
	return ""
}

// LRO response metadata for InboundSsoAssignmentsService.CreateInboundSsoAssignment.
type CreateInboundSsoAssignmentOperationMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateInboundSsoAssignmentOperationMetadata) Reset() {
	*x = CreateInboundSsoAssignmentOperationMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateInboundSsoAssignmentOperationMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateInboundSsoAssignmentOperationMetadata) ProtoMessage() {}

func (x *CreateInboundSsoAssignmentOperationMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateInboundSsoAssignmentOperationMetadata.ProtoReflect.Descriptor instead.
func (*CreateInboundSsoAssignmentOperationMetadata) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{20}
}

// Additional custom attribute values may be one of these types
type CustomAttributeValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Represents a boolean value.
	BoolValue *bool `protobuf:"varint,1,opt,name=bool_value,json=boolValue" json:"bool_value,omitempty"`
	// Represents a double value.
	NumberValue *float64 `protobuf:"fixed64,2,opt,name=number_value,json=numberValue" json:"number_value,omitempty"`
	// Represents a string value.
	StringValue *string `protobuf:"bytes,3,opt,name=string_value,json=stringValue" json:"string_value,omitempty"`
}

func (x *CustomAttributeValue) Reset() {
	*x = CustomAttributeValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomAttributeValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomAttributeValue) ProtoMessage() {}

func (x *CustomAttributeValue) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomAttributeValue.ProtoReflect.Descriptor instead.
func (*CustomAttributeValue) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{21}
}

func (x *CustomAttributeValue) GetBoolValue() bool {
	if x != nil && x.BoolValue != nil {
		return *x.BoolValue
	}
	return false
}

func (x *CustomAttributeValue) GetNumberValue() float64 {
	if x != nil && x.NumberValue != nil {
		return *x.NumberValue
	}
	return 0
}

func (x *CustomAttributeValue) GetStringValue() string {
	if x != nil && x.StringValue != nil {
		return *x.StringValue
	}
	return ""
}

// LRO response metadata for InboundSamlSsoProfilesService.DeleteIdpCredential.
type DeleteIdpCredentialOperationMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteIdpCredentialOperationMetadata) Reset() {
	*x = DeleteIdpCredentialOperationMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteIdpCredentialOperationMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteIdpCredentialOperationMetadata) ProtoMessage() {}

func (x *DeleteIdpCredentialOperationMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteIdpCredentialOperationMetadata.ProtoReflect.Descriptor instead.
func (*DeleteIdpCredentialOperationMetadata) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{22}
}

// LRO response metadata for InboundSamlSsoProfilesService.DeleteInboundSamlSsoProfile.
type DeleteInboundSamlSsoProfileOperationMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteInboundSamlSsoProfileOperationMetadata) Reset() {
	*x = DeleteInboundSamlSsoProfileOperationMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteInboundSamlSsoProfileOperationMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteInboundSamlSsoProfileOperationMetadata) ProtoMessage() {}

func (x *DeleteInboundSamlSsoProfileOperationMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteInboundSamlSsoProfileOperationMetadata.ProtoReflect.Descriptor instead.
func (*DeleteInboundSamlSsoProfileOperationMetadata) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{23}
}

// LRO response metadata for InboundSsoAssignmentsService.DeleteInboundSsoAssignment.
type DeleteInboundSsoAssignmentOperationMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteInboundSsoAssignmentOperationMetadata) Reset() {
	*x = DeleteInboundSsoAssignmentOperationMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteInboundSsoAssignmentOperationMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteInboundSsoAssignmentOperationMetadata) ProtoMessage() {}

func (x *DeleteInboundSsoAssignmentOperationMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteInboundSsoAssignmentOperationMetadata.ProtoReflect.Descriptor instead.
func (*DeleteInboundSsoAssignmentOperationMetadata) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{24}
}

// A Device within the Cloud Identity Devices API. Represents a Device known to Google Cloud, independent of the device ownership, type, and whether it is assigned or in use by a user. Important: Device API scopes require that you use domain-wide delegation to access the API. For more information, see [Set up the Devices API](https://cloud.google.com/identity/docs/how-to/setup-devices).
type Device struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Output only. Attributes specific to Android devices.
	AndroidSpecificAttributes *AndroidAttributes `protobuf:"bytes,1,opt,name=android_specific_attributes,json=androidSpecificAttributes" json:"android_specific_attributes,omitempty"`
	// Asset tag of the device.
	AssetTag *string `protobuf:"bytes,2,opt,name=asset_tag,json=assetTag" json:"asset_tag,omitempty"`
	// Output only. Baseband version of the device.
	BasebandVersion *string `protobuf:"bytes,3,opt,name=baseband_version,json=basebandVersion" json:"baseband_version,omitempty"`
	// Output only. Device bootloader version. Example: 0.6.7.
	BootloaderVersion *string `protobuf:"bytes,4,opt,name=bootloader_version,json=bootloaderVersion" json:"bootloader_version,omitempty"`
	// Output only. Device brand. Example: Samsung.
	Brand *string `protobuf:"bytes,5,opt,name=brand" json:"brand,omitempty"`
	// Output only. Build number of the device.
	BuildNumber *string `protobuf:"bytes,6,opt,name=build_number,json=buildNumber" json:"build_number,omitempty"`
	// List of the clients the device is reporting to.
	ClientTypes []string `protobuf:"bytes,7,rep,name=client_types,json=clientTypes" json:"client_types,omitempty"`
	// Output only. Represents whether the Device is compromised.
	CompromisedState *string `protobuf:"bytes,8,opt,name=compromised_state,json=compromisedState" json:"compromised_state,omitempty"`
	// Output only. When the Company-Owned device was imported. This field is empty for BYOD devices.
	CreateTime *timestamp.Timestamp `protobuf:"bytes,9,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	// Unique identifier for the device.
	DeviceId *string `protobuf:"bytes,10,opt,name=device_id,json=deviceId" json:"device_id,omitempty"`
	// Output only. Type of device.
	DeviceType *string `protobuf:"bytes,11,opt,name=device_type,json=deviceType" json:"device_type,omitempty"`
	// Output only. Whether developer options is enabled on device.
	EnabledDeveloperOptions *bool `protobuf:"varint,12,opt,name=enabled_developer_options,json=enabledDeveloperOptions" json:"enabled_developer_options,omitempty"`
	// Output only. Whether USB debugging is enabled on device.
	EnabledUsbDebugging *bool `protobuf:"varint,13,opt,name=enabled_usb_debugging,json=enabledUsbDebugging" json:"enabled_usb_debugging,omitempty"`
	// Output only. Device encryption state.
	EncryptionState *string `protobuf:"bytes,14,opt,name=encryption_state,json=encryptionState" json:"encryption_state,omitempty"`
	// Output only. Attributes specific to [Endpoint Verification](https://cloud.google.com/endpoint-verification/docs/overview) devices.
	EndpointVerificationSpecificAttributes *EndpointVerificationSpecificAttributes `protobuf:"bytes,15,opt,name=endpoint_verification_specific_attributes,json=endpointVerificationSpecificAttributes" json:"endpoint_verification_specific_attributes,omitempty"`
	// Host name of the device.
	Hostname *string `protobuf:"bytes,16,opt,name=hostname" json:"hostname,omitempty"`
	// Output only. IMEI number of device if GSM device; empty otherwise.
	Imei *string `protobuf:"bytes,17,opt,name=imei" json:"imei,omitempty"`
	// Output only. Kernel version of the device.
	KernelVersion *string `protobuf:"bytes,18,opt,name=kernel_version,json=kernelVersion" json:"kernel_version,omitempty"`
	// Most recent time when device synced with this service.
	LastSyncTime *timestamp.Timestamp `protobuf:"bytes,19,opt,name=last_sync_time,json=lastSyncTime" json:"last_sync_time,omitempty"`
	// Output only. Management state of the device
	ManagementState *string `protobuf:"bytes,20,opt,name=management_state,json=managementState" json:"management_state,omitempty"`
	// Output only. Device manufacturer. Example: Motorola.
	Manufacturer *string `protobuf:"bytes,21,opt,name=manufacturer" json:"manufacturer,omitempty"`
	// Output only. MEID number of device if CDMA device; empty otherwise.
	Meid *string `protobuf:"bytes,22,opt,name=meid" json:"meid,omitempty"`
	// Output only. Model name of device. Example: Pixel 3.
	Model *string `protobuf:"bytes,23,opt,name=model" json:"model,omitempty"`
	// Output only. [Resource name](https://cloud.google.com/apis/design/resource_names) of the Device in format: `devices/{device_id}`, where device_id is the unique id assigned to the Device.
	Name *string `protobuf:"bytes,24,opt,name=name" json:"name,omitempty"`
	// Output only. Mobile or network operator of device, if available.
	NetworkOperator *string `protobuf:"bytes,25,opt,name=network_operator,json=networkOperator" json:"network_operator,omitempty"`
	// Output only. OS version of the device. Example: Android 8.1.0.
	OsVersion *string `protobuf:"bytes,26,opt,name=os_version,json=osVersion" json:"os_version,omitempty"`
	// Output only. Domain name for Google accounts on device. Type for other accounts on device. On Android, will only be populated if |ownership_privilege| is |PROFILE_OWNER| or |DEVICE_OWNER|. Does not include the account signed in to the device policy app if that account's domain has only one account. Examples: "com.example", "xyz.com".
	OtherAccounts []string `protobuf:"bytes,27,rep,name=other_accounts,json=otherAccounts" json:"other_accounts,omitempty"`
	// Output only. Whether the device is owned by the company or an individual
	OwnerType *string `protobuf:"bytes,28,opt,name=owner_type,json=ownerType" json:"owner_type,omitempty"`
	// Output only. OS release version. Example: 6.0.
	ReleaseVersion *string `protobuf:"bytes,29,opt,name=release_version,json=releaseVersion" json:"release_version,omitempty"`
	// Output only. OS security patch update time on device.
	SecurityPatchTime *timestamp.Timestamp `protobuf:"bytes,30,opt,name=security_patch_time,json=securityPatchTime" json:"security_patch_time,omitempty"`
	// Serial Number of device. Example: HT82V1A01076.
	SerialNumber *string `protobuf:"bytes,31,opt,name=serial_number,json=serialNumber" json:"serial_number,omitempty"`
	// Output only. Unified device id of the device.
	UnifiedDeviceId *string `protobuf:"bytes,32,opt,name=unified_device_id,json=unifiedDeviceId" json:"unified_device_id,omitempty"`
	// WiFi MAC addresses of device.
	WifiMacAddresses []string `protobuf:"bytes,33,rep,name=wifi_mac_addresses,json=wifiMacAddresses" json:"wifi_mac_addresses,omitempty"`
}

func (x *Device) Reset() {
	*x = Device{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Device) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Device) ProtoMessage() {}

func (x *Device) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Device.ProtoReflect.Descriptor instead.
func (*Device) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{25}
}

func (x *Device) GetAndroidSpecificAttributes() *AndroidAttributes {
	if x != nil {
		return x.AndroidSpecificAttributes
	}
	return nil
}

func (x *Device) GetAssetTag() string {
	if x != nil && x.AssetTag != nil {
		return *x.AssetTag
	}
	return ""
}

func (x *Device) GetBasebandVersion() string {
	if x != nil && x.BasebandVersion != nil {
		return *x.BasebandVersion
	}
	return ""
}

func (x *Device) GetBootloaderVersion() string {
	if x != nil && x.BootloaderVersion != nil {
		return *x.BootloaderVersion
	}
	return ""
}

func (x *Device) GetBrand() string {
	if x != nil && x.Brand != nil {
		return *x.Brand
	}
	return ""
}

func (x *Device) GetBuildNumber() string {
	if x != nil && x.BuildNumber != nil {
		return *x.BuildNumber
	}
	return ""
}

func (x *Device) GetClientTypes() []string {
	if x != nil {
		return x.ClientTypes
	}
	return nil
}

func (x *Device) GetCompromisedState() string {
	if x != nil && x.CompromisedState != nil {
		return *x.CompromisedState
	}
	return ""
}

func (x *Device) GetCreateTime() *timestamp.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *Device) GetDeviceId() string {
	if x != nil && x.DeviceId != nil {
		return *x.DeviceId
	}
	return ""
}

func (x *Device) GetDeviceType() string {
	if x != nil && x.DeviceType != nil {
		return *x.DeviceType
	}
	return ""
}

func (x *Device) GetEnabledDeveloperOptions() bool {
	if x != nil && x.EnabledDeveloperOptions != nil {
		return *x.EnabledDeveloperOptions
	}
	return false
}

func (x *Device) GetEnabledUsbDebugging() bool {
	if x != nil && x.EnabledUsbDebugging != nil {
		return *x.EnabledUsbDebugging
	}
	return false
}

func (x *Device) GetEncryptionState() string {
	if x != nil && x.EncryptionState != nil {
		return *x.EncryptionState
	}
	return ""
}

func (x *Device) GetEndpointVerificationSpecificAttributes() *EndpointVerificationSpecificAttributes {
	if x != nil {
		return x.EndpointVerificationSpecificAttributes
	}
	return nil
}

func (x *Device) GetHostname() string {
	if x != nil && x.Hostname != nil {
		return *x.Hostname
	}
	return ""
}

func (x *Device) GetImei() string {
	if x != nil && x.Imei != nil {
		return *x.Imei
	}
	return ""
}

func (x *Device) GetKernelVersion() string {
	if x != nil && x.KernelVersion != nil {
		return *x.KernelVersion
	}
	return ""
}

func (x *Device) GetLastSyncTime() *timestamp.Timestamp {
	if x != nil {
		return x.LastSyncTime
	}
	return nil
}

func (x *Device) GetManagementState() string {
	if x != nil && x.ManagementState != nil {
		return *x.ManagementState
	}
	return ""
}

func (x *Device) GetManufacturer() string {
	if x != nil && x.Manufacturer != nil {
		return *x.Manufacturer
	}
	return ""
}

func (x *Device) GetMeid() string {
	if x != nil && x.Meid != nil {
		return *x.Meid
	}
	return ""
}

func (x *Device) GetModel() string {
	if x != nil && x.Model != nil {
		return *x.Model
	}
	return ""
}

func (x *Device) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Device) GetNetworkOperator() string {
	if x != nil && x.NetworkOperator != nil {
		return *x.NetworkOperator
	}
	return ""
}

func (x *Device) GetOsVersion() string {
	if x != nil && x.OsVersion != nil {
		return *x.OsVersion
	}
	return ""
}

func (x *Device) GetOtherAccounts() []string {
	if x != nil {
		return x.OtherAccounts
	}
	return nil
}

func (x *Device) GetOwnerType() string {
	if x != nil && x.OwnerType != nil {
		return *x.OwnerType
	}
	return ""
}

func (x *Device) GetReleaseVersion() string {
	if x != nil && x.ReleaseVersion != nil {
		return *x.ReleaseVersion
	}
	return ""
}

func (x *Device) GetSecurityPatchTime() *timestamp.Timestamp {
	if x != nil {
		return x.SecurityPatchTime
	}
	return nil
}

func (x *Device) GetSerialNumber() string {
	if x != nil && x.SerialNumber != nil {
		return *x.SerialNumber
	}
	return ""
}

func (x *Device) GetUnifiedDeviceId() string {
	if x != nil && x.UnifiedDeviceId != nil {
		return *x.UnifiedDeviceId
	}
	return ""
}

func (x *Device) GetWifiMacAddresses() []string {
	if x != nil {
		return x.WifiMacAddresses
	}
	return nil
}

// Represents a user's use of a Device in the Cloud Identity Devices API. A DeviceUser is a resource representing a user's use of a Device
type DeviceUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Compromised State of the DeviceUser object
	CompromisedState *string `protobuf:"bytes,1,opt,name=compromised_state,json=compromisedState" json:"compromised_state,omitempty"`
	// When the user first signed in to the device
	CreateTime *timestamp.Timestamp `protobuf:"bytes,2,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	// Output only. Most recent time when user registered with this service.
	FirstSyncTime *timestamp.Timestamp `protobuf:"bytes,3,opt,name=first_sync_time,json=firstSyncTime" json:"first_sync_time,omitempty"`
	// Output only. Default locale used on device, in IETF BCP-47 format.
	LanguageCode *string `protobuf:"bytes,4,opt,name=language_code,json=languageCode" json:"language_code,omitempty"`
	// Output only. Last time when user synced with policies.
	LastSyncTime *timestamp.Timestamp `protobuf:"bytes,5,opt,name=last_sync_time,json=lastSyncTime" json:"last_sync_time,omitempty"`
	// Output only. Management state of the user on the device.
	ManagementState *string `protobuf:"bytes,6,opt,name=management_state,json=managementState" json:"management_state,omitempty"`
	// Output only. [Resource name](https://cloud.google.com/apis/design/resource_names) of the DeviceUser in format: `devices/{device_id}/deviceUsers/{device_user_id}`, where `device_user_id` uniquely identifies a user's use of a device.
	Name *string `protobuf:"bytes,7,opt,name=name" json:"name,omitempty"`
	// Password state of the DeviceUser object
	PasswordState *string `protobuf:"bytes,8,opt,name=password_state,json=passwordState" json:"password_state,omitempty"`
	// Output only. User agent on the device for this specific user
	UserAgent *string `protobuf:"bytes,9,opt,name=user_agent,json=userAgent" json:"user_agent,omitempty"`
	// Email address of the user registered on the device.
	UserEmail *string `protobuf:"bytes,10,opt,name=user_email,json=userEmail" json:"user_email,omitempty"`
}

func (x *DeviceUser) Reset() {
	*x = DeviceUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceUser) ProtoMessage() {}

func (x *DeviceUser) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceUser.ProtoReflect.Descriptor instead.
func (*DeviceUser) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{26}
}

func (x *DeviceUser) GetCompromisedState() string {
	if x != nil && x.CompromisedState != nil {
		return *x.CompromisedState
	}
	return ""
}

func (x *DeviceUser) GetCreateTime() *timestamp.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *DeviceUser) GetFirstSyncTime() *timestamp.Timestamp {
	if x != nil {
		return x.FirstSyncTime
	}
	return nil
}

func (x *DeviceUser) GetLanguageCode() string {
	if x != nil && x.LanguageCode != nil {
		return *x.LanguageCode
	}
	return ""
}

func (x *DeviceUser) GetLastSyncTime() *timestamp.Timestamp {
	if x != nil {
		return x.LastSyncTime
	}
	return nil
}

func (x *DeviceUser) GetManagementState() string {
	if x != nil && x.ManagementState != nil {
		return *x.ManagementState
	}
	return ""
}

func (x *DeviceUser) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *DeviceUser) GetPasswordState() string {
	if x != nil && x.PasswordState != nil {
		return *x.PasswordState
	}
	return ""
}

func (x *DeviceUser) GetUserAgent() string {
	if x != nil && x.UserAgent != nil {
		return *x.UserAgent
	}
	return ""
}

func (x *DeviceUser) GetUserEmail() string {
	if x != nil && x.UserEmail != nil {
		return *x.UserEmail
	}
	return ""
}

// Information of a DSA public key.
type DsaPublicKeyInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Key size in bits (size of parameter P).
	KeySize *int32 `protobuf:"varint,1,opt,name=key_size,json=keySize" json:"key_size,omitempty"`
}

func (x *DsaPublicKeyInfo) Reset() {
	*x = DsaPublicKeyInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DsaPublicKeyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DsaPublicKeyInfo) ProtoMessage() {}

func (x *DsaPublicKeyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DsaPublicKeyInfo.ProtoReflect.Descriptor instead.
func (*DsaPublicKeyInfo) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{27}
}

func (x *DsaPublicKeyInfo) GetKeySize() int32 {
	if x != nil && x.KeySize != nil {
		return *x.KeySize
	}
	return 0
}

// Dynamic group metadata like queries and status.
type DynamicGroupMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Memberships will be the union of all queries. Only one entry with USER resource is currently supported. Customers can create up to 500 dynamic groups.
	Queries []*DynamicGroupQuery `protobuf:"bytes,1,rep,name=queries" json:"queries,omitempty"`
	// Output only. Status of the dynamic group.
	Status *DynamicGroupStatus `protobuf:"bytes,2,opt,name=status" json:"status,omitempty"`
}

func (x *DynamicGroupMetadata) Reset() {
	*x = DynamicGroupMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynamicGroupMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynamicGroupMetadata) ProtoMessage() {}

func (x *DynamicGroupMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynamicGroupMetadata.ProtoReflect.Descriptor instead.
func (*DynamicGroupMetadata) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{28}
}

func (x *DynamicGroupMetadata) GetQueries() []*DynamicGroupQuery {
	if x != nil {
		return x.Queries
	}
	return nil
}

func (x *DynamicGroupMetadata) GetStatus() *DynamicGroupStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

// Defines a query on a resource.
type DynamicGroupQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Query that determines the memberships of the dynamic group. Examples: All users with at least one `organizations.department` of engineering. `user.organizations.exists(org, org.department=='engineering')` All users with at least one location that has `area` of `foo` and `building_id` of `bar`. `user.locations.exists(loc, loc.area=='foo' && loc.building_id=='bar')` All users with any variation of the name John Doe (case-insensitive queries add `equalsIgnoreCase()` to the value being queried). `user.name.value.equalsIgnoreCase('jOhn DoE')`
	Query        *string `protobuf:"bytes,1,opt,name=query" json:"query,omitempty"`
	ResourceType *string `protobuf:"bytes,2,opt,name=resource_type,json=resourceType" json:"resource_type,omitempty"`
}

func (x *DynamicGroupQuery) Reset() {
	*x = DynamicGroupQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynamicGroupQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynamicGroupQuery) ProtoMessage() {}

func (x *DynamicGroupQuery) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynamicGroupQuery.ProtoReflect.Descriptor instead.
func (*DynamicGroupQuery) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{29}
}

func (x *DynamicGroupQuery) GetQuery() string {
	if x != nil && x.Query != nil {
		return *x.Query
	}
	return ""
}

func (x *DynamicGroupQuery) GetResourceType() string {
	if x != nil && x.ResourceType != nil {
		return *x.ResourceType
	}
	return ""
}

// The current status of a dynamic group along with timestamp.
type DynamicGroupStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Status of the dynamic group.
	Status *string `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	// The latest time at which the dynamic group is guaranteed to be in the given status. If status is `UP_TO_DATE`, the latest time at which the dynamic group was confirmed to be up-to-date. If status is `UPDATING_MEMBERSHIPS`, the time at which dynamic group was created.
	StatusTime *timestamp.Timestamp `protobuf:"bytes,2,opt,name=status_time,json=statusTime" json:"status_time,omitempty"`
}

func (x *DynamicGroupStatus) Reset() {
	*x = DynamicGroupStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynamicGroupStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynamicGroupStatus) ProtoMessage() {}

func (x *DynamicGroupStatus) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynamicGroupStatus.ProtoReflect.Descriptor instead.
func (*DynamicGroupStatus) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{30}
}

func (x *DynamicGroupStatus) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

func (x *DynamicGroupStatus) GetStatusTime() *timestamp.Timestamp {
	if x != nil {
		return x.StatusTime
	}
	return nil
}

// Resource representing the [Endpoint Verification-specific attributes](https://cloud.google.com/endpoint-verification/docs/device-information) of a device.
type EndpointVerificationSpecificAttributes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// [Additional signals](https://cloud.google.com/endpoint-verification/docs/device-information) reported by Endpoint Verification. It includes the following attributes: * Non-configurable attributes: hotfixes, av_installed, av_enabled, windows_domain_name, is_os_native_firewall_enabled, and is_secure_boot_enabled. * [Configurable attributes](https://cloud.google.com/endpoint-verification/docs/collect-config-attributes): file, folder, and binary attributes; registry entries; and properties in a plist.
	AdditionalSignals map[string]*any1.Any `protobuf:"bytes,1,rep,name=additional_signals,json=additionalSignals" json:"additional_signals,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Details of browser profiles reported by Endpoint Verification.
	BrowserAttributes []*BrowserAttributes `protobuf:"bytes,2,rep,name=browser_attributes,json=browserAttributes" json:"browser_attributes,omitempty"`
	// Details of certificates.
	CertificateAttributes []*CertificateAttributes `protobuf:"bytes,3,rep,name=certificate_attributes,json=certificateAttributes" json:"certificate_attributes,omitempty"`
}

func (x *EndpointVerificationSpecificAttributes) Reset() {
	*x = EndpointVerificationSpecificAttributes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EndpointVerificationSpecificAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndpointVerificationSpecificAttributes) ProtoMessage() {}

func (x *EndpointVerificationSpecificAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndpointVerificationSpecificAttributes.ProtoReflect.Descriptor instead.
func (*EndpointVerificationSpecificAttributes) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{31}
}

func (x *EndpointVerificationSpecificAttributes) GetAdditionalSignals() map[string]*any1.Any {
	if x != nil {
		return x.AdditionalSignals
	}
	return nil
}

func (x *EndpointVerificationSpecificAttributes) GetBrowserAttributes() []*BrowserAttributes {
	if x != nil {
		return x.BrowserAttributes
	}
	return nil
}

func (x *EndpointVerificationSpecificAttributes) GetCertificateAttributes() []*CertificateAttributes {
	if x != nil {
		return x.CertificateAttributes
	}
	return nil
}

// A unique identifier for an entity in the Cloud Identity Groups API. An entity can represent either a group with an optional `namespace` or a user without a `namespace`. The combination of `id` and `namespace` must be unique; however, the same `id` can be used with different `namespace`s.
type EntityKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The ID of the entity. For Google-managed entities, the `id` must be the email address of an existing group or user. For external-identity-mapped entities, the `id` must be a string conforming to the Identity Source's requirements. Must be unique within a `namespace`.
	Id *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// The namespace in which the entity exists. If not specified, the `EntityKey` represents a Google-managed entity such as a Google user or a Google Group. If specified, the `EntityKey` represents an external-identity-mapped group. The namespace must correspond to an identity source created in Admin Console and must be in the form of `identitysources/{identity_source_id}`.
	Namespace *string `protobuf:"bytes,2,opt,name=namespace" json:"namespace,omitempty"`
}

func (x *EntityKey) Reset() {
	*x = EntityKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityKey) ProtoMessage() {}

func (x *EntityKey) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityKey.ProtoReflect.Descriptor instead.
func (*EntityKey) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{32}
}

func (x *EntityKey) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *EntityKey) GetNamespace() string {
	if x != nil && x.Namespace != nil {
		return *x.Namespace
	}
	return ""
}

// The `MembershipRole` expiry details.
type ExpiryDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The time at which the `MembershipRole` will expire.
	ExpireTime *timestamp.Timestamp `protobuf:"bytes,1,opt,name=expire_time,json=expireTime" json:"expire_time,omitempty"`
}

func (x *ExpiryDetail) Reset() {
	*x = ExpiryDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExpiryDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpiryDetail) ProtoMessage() {}

func (x *ExpiryDetail) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpiryDetail.ProtoReflect.Descriptor instead.
func (*ExpiryDetail) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{33}
}

func (x *ExpiryDetail) GetExpireTime() *timestamp.Timestamp {
	if x != nil {
		return x.ExpireTime
	}
	return nil
}

// The response message for MembershipsService.GetMembershipGraph.
type GetMembershipGraphResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The membership graph's path information represented as an adjacency list.
	AdjacencyList []*MembershipAdjacencyList `protobuf:"bytes,1,rep,name=adjacency_list,json=adjacencyList" json:"adjacency_list,omitempty"`
	// The resources representing each group in the adjacency list. Each group in this list can be correlated to a 'group' of the MembershipAdjacencyList using the 'name' of the Group resource.
	Groups []*Group `protobuf:"bytes,2,rep,name=groups" json:"groups,omitempty"`
}

func (x *GetMembershipGraphResponse) Reset() {
	*x = GetMembershipGraphResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMembershipGraphResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMembershipGraphResponse) ProtoMessage() {}

func (x *GetMembershipGraphResponse) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMembershipGraphResponse.ProtoReflect.Descriptor instead.
func (*GetMembershipGraphResponse) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{34}
}

func (x *GetMembershipGraphResponse) GetAdjacencyList() []*MembershipAdjacencyList {
	if x != nil {
		return x.AdjacencyList
	}
	return nil
}

func (x *GetMembershipGraphResponse) GetGroups() []*Group {
	if x != nil {
		return x.Groups
	}
	return nil
}

// Resource representing the Android specific attributes of a Device.
type GoogleAppsCloudidentityDevicesV1AndroidAttributes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Whether the device passes Android CTS compliance.
	CtsProfileMatch *bool `protobuf:"varint,1,opt,name=cts_profile_match,json=ctsProfileMatch" json:"cts_profile_match,omitempty"`
	// Whether applications from unknown sources can be installed on device.
	EnabledUnknownSources *bool `protobuf:"varint,2,opt,name=enabled_unknown_sources,json=enabledUnknownSources" json:"enabled_unknown_sources,omitempty"`
	// Whether any potentially harmful apps were detected on the device.
	HasPotentiallyHarmfulApps *bool `protobuf:"varint,3,opt,name=has_potentially_harmful_apps,json=hasPotentiallyHarmfulApps" json:"has_potentially_harmful_apps,omitempty"`
	// Whether this account is on an owner/primary profile. For phones, only true for owner profiles. Android 4+ devices can have secondary or restricted user profiles.
	OwnerProfileAccount *bool `protobuf:"varint,4,opt,name=owner_profile_account,json=ownerProfileAccount" json:"owner_profile_account,omitempty"`
	// Ownership privileges on device.
	OwnershipPrivilege *string `protobuf:"bytes,5,opt,name=ownership_privilege,json=ownershipPrivilege" json:"ownership_privilege,omitempty"`
	// Whether device supports Android work profiles. If false, this service will not block access to corp data even if an administrator turns on the "Enforce Work Profile" policy.
	SupportsWorkProfile *bool `protobuf:"varint,6,opt,name=supports_work_profile,json=supportsWorkProfile" json:"supports_work_profile,omitempty"`
	// Whether Android verified boot status is GREEN.
	VerifiedBoot *bool `protobuf:"varint,7,opt,name=verified_boot,json=verifiedBoot" json:"verified_boot,omitempty"`
	// Whether Google Play Protect Verify Apps is enabled.
	VerifyAppsEnabled *bool `protobuf:"varint,8,opt,name=verify_apps_enabled,json=verifyAppsEnabled" json:"verify_apps_enabled,omitempty"`
}

func (x *GoogleAppsCloudidentityDevicesV1AndroidAttributes) Reset() {
	*x = GoogleAppsCloudidentityDevicesV1AndroidAttributes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleAppsCloudidentityDevicesV1AndroidAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleAppsCloudidentityDevicesV1AndroidAttributes) ProtoMessage() {}

func (x *GoogleAppsCloudidentityDevicesV1AndroidAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleAppsCloudidentityDevicesV1AndroidAttributes.ProtoReflect.Descriptor instead.
func (*GoogleAppsCloudidentityDevicesV1AndroidAttributes) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{35}
}

func (x *GoogleAppsCloudidentityDevicesV1AndroidAttributes) GetCtsProfileMatch() bool {
	if x != nil && x.CtsProfileMatch != nil {
		return *x.CtsProfileMatch
	}
	return false
}

func (x *GoogleAppsCloudidentityDevicesV1AndroidAttributes) GetEnabledUnknownSources() bool {
	if x != nil && x.EnabledUnknownSources != nil {
		return *x.EnabledUnknownSources
	}
	return false
}

func (x *GoogleAppsCloudidentityDevicesV1AndroidAttributes) GetHasPotentiallyHarmfulApps() bool {
	if x != nil && x.HasPotentiallyHarmfulApps != nil {
		return *x.HasPotentiallyHarmfulApps
	}
	return false
}

func (x *GoogleAppsCloudidentityDevicesV1AndroidAttributes) GetOwnerProfileAccount() bool {
	if x != nil && x.OwnerProfileAccount != nil {
		return *x.OwnerProfileAccount
	}
	return false
}

func (x *GoogleAppsCloudidentityDevicesV1AndroidAttributes) GetOwnershipPrivilege() string {
	if x != nil && x.OwnershipPrivilege != nil {
		return *x.OwnershipPrivilege
	}
	return ""
}

func (x *GoogleAppsCloudidentityDevicesV1AndroidAttributes) GetSupportsWorkProfile() bool {
	if x != nil && x.SupportsWorkProfile != nil {
		return *x.SupportsWorkProfile
	}
	return false
}

func (x *GoogleAppsCloudidentityDevicesV1AndroidAttributes) GetVerifiedBoot() bool {
	if x != nil && x.VerifiedBoot != nil {
		return *x.VerifiedBoot
	}
	return false
}

func (x *GoogleAppsCloudidentityDevicesV1AndroidAttributes) GetVerifyAppsEnabled() bool {
	if x != nil && x.VerifyAppsEnabled != nil {
		return *x.VerifyAppsEnabled
	}
	return false
}

// Metadata for ApproveDeviceUser LRO.
type GoogleAppsCloudidentityDevicesV1ApproveDeviceUserMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GoogleAppsCloudidentityDevicesV1ApproveDeviceUserMetadata) Reset() {
	*x = GoogleAppsCloudidentityDevicesV1ApproveDeviceUserMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleAppsCloudidentityDevicesV1ApproveDeviceUserMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleAppsCloudidentityDevicesV1ApproveDeviceUserMetadata) ProtoMessage() {}

func (x *GoogleAppsCloudidentityDevicesV1ApproveDeviceUserMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleAppsCloudidentityDevicesV1ApproveDeviceUserMetadata.ProtoReflect.Descriptor instead.
func (*GoogleAppsCloudidentityDevicesV1ApproveDeviceUserMetadata) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{36}
}

// Response message for approving the device to access user data.
type GoogleAppsCloudidentityDevicesV1ApproveDeviceUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Resultant DeviceUser object for the action.
	DeviceUser *GoogleAppsCloudidentityDevicesV1DeviceUser `protobuf:"bytes,1,opt,name=device_user,json=deviceUser" json:"device_user,omitempty"`
}

func (x *GoogleAppsCloudidentityDevicesV1ApproveDeviceUserResponse) Reset() {
	*x = GoogleAppsCloudidentityDevicesV1ApproveDeviceUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleAppsCloudidentityDevicesV1ApproveDeviceUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleAppsCloudidentityDevicesV1ApproveDeviceUserResponse) ProtoMessage() {}

func (x *GoogleAppsCloudidentityDevicesV1ApproveDeviceUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleAppsCloudidentityDevicesV1ApproveDeviceUserResponse.ProtoReflect.Descriptor instead.
func (*GoogleAppsCloudidentityDevicesV1ApproveDeviceUserResponse) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{37}
}

func (x *GoogleAppsCloudidentityDevicesV1ApproveDeviceUserResponse) GetDeviceUser() *GoogleAppsCloudidentityDevicesV1DeviceUser {
	if x != nil {
		return x.DeviceUser
	}
	return nil
}

// Metadata for BlockDeviceUser LRO.
type GoogleAppsCloudidentityDevicesV1BlockDeviceUserMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GoogleAppsCloudidentityDevicesV1BlockDeviceUserMetadata) Reset() {
	*x = GoogleAppsCloudidentityDevicesV1BlockDeviceUserMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleAppsCloudidentityDevicesV1BlockDeviceUserMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleAppsCloudidentityDevicesV1BlockDeviceUserMetadata) ProtoMessage() {}

func (x *GoogleAppsCloudidentityDevicesV1BlockDeviceUserMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleAppsCloudidentityDevicesV1BlockDeviceUserMetadata.ProtoReflect.Descriptor instead.
func (*GoogleAppsCloudidentityDevicesV1BlockDeviceUserMetadata) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{38}
}

// Response message for blocking the device from accessing user data.
type GoogleAppsCloudidentityDevicesV1BlockDeviceUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Resultant DeviceUser object for the action.
	DeviceUser *GoogleAppsCloudidentityDevicesV1DeviceUser `protobuf:"bytes,1,opt,name=device_user,json=deviceUser" json:"device_user,omitempty"`
}

func (x *GoogleAppsCloudidentityDevicesV1BlockDeviceUserResponse) Reset() {
	*x = GoogleAppsCloudidentityDevicesV1BlockDeviceUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleAppsCloudidentityDevicesV1BlockDeviceUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleAppsCloudidentityDevicesV1BlockDeviceUserResponse) ProtoMessage() {}

func (x *GoogleAppsCloudidentityDevicesV1BlockDeviceUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleAppsCloudidentityDevicesV1BlockDeviceUserResponse.ProtoReflect.Descriptor instead.
func (*GoogleAppsCloudidentityDevicesV1BlockDeviceUserResponse) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{39}
}

func (x *GoogleAppsCloudidentityDevicesV1BlockDeviceUserResponse) GetDeviceUser() *GoogleAppsCloudidentityDevicesV1DeviceUser {
	if x != nil {
		return x.DeviceUser
	}
	return nil
}

// Contains information about browser profiles reported by the [Endpoint Verification extension](https://chromewebstore.google.com/detail/endpoint-verification/callobklhcbilhphinckomhgkigmfocg?pli=1).
type GoogleAppsCloudidentityDevicesV1BrowserAttributes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Represents the current state of the [Chrome browser attributes](https://cloud.google.com/access-context-manager/docs/browser-attributes) sent by the [Endpoint Verification extension](https://chromewebstore.google.com/detail/endpoint-verification/callobklhcbilhphinckomhgkigmfocg?pli=1).
	ChromeBrowserInfo *GoogleAppsCloudidentityDevicesV1BrowserInfo `protobuf:"bytes,1,opt,name=chrome_browser_info,json=chromeBrowserInfo" json:"chrome_browser_info,omitempty"`
	// Chrome profile ID that is exposed by the Chrome API. It is unique for each device.
	ChromeProfileId *string `protobuf:"bytes,2,opt,name=chrome_profile_id,json=chromeProfileId" json:"chrome_profile_id,omitempty"`
	// Timestamp in milliseconds since the Unix epoch when the profile/gcm id was last synced.
	LastProfileSyncTime *timestamp.Timestamp `protobuf:"bytes,3,opt,name=last_profile_sync_time,json=lastProfileSyncTime" json:"last_profile_sync_time,omitempty"`
}

func (x *GoogleAppsCloudidentityDevicesV1BrowserAttributes) Reset() {
	*x = GoogleAppsCloudidentityDevicesV1BrowserAttributes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleAppsCloudidentityDevicesV1BrowserAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleAppsCloudidentityDevicesV1BrowserAttributes) ProtoMessage() {}

func (x *GoogleAppsCloudidentityDevicesV1BrowserAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleAppsCloudidentityDevicesV1BrowserAttributes.ProtoReflect.Descriptor instead.
func (*GoogleAppsCloudidentityDevicesV1BrowserAttributes) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{40}
}

func (x *GoogleAppsCloudidentityDevicesV1BrowserAttributes) GetChromeBrowserInfo() *GoogleAppsCloudidentityDevicesV1BrowserInfo {
	if x != nil {
		return x.ChromeBrowserInfo
	}
	return nil
}

func (x *GoogleAppsCloudidentityDevicesV1BrowserAttributes) GetChromeProfileId() string {
	if x != nil && x.ChromeProfileId != nil {
		return *x.ChromeProfileId
	}
	return ""
}

func (x *GoogleAppsCloudidentityDevicesV1BrowserAttributes) GetLastProfileSyncTime() *timestamp.Timestamp {
	if x != nil {
		return x.LastProfileSyncTime
	}
	return nil
}

// Browser-specific fields reported by the [Endpoint Verification extension](https://chromewebstore.google.com/detail/endpoint-verification/callobklhcbilhphinckomhgkigmfocg?pli=1).
type GoogleAppsCloudidentityDevicesV1BrowserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Output only. Browser's management state.
	BrowserManagementState *string `protobuf:"bytes,1,opt,name=browser_management_state,json=browserManagementState" json:"browser_management_state,omitempty"`
	// Version of the request initiating browser. E.g. `91.0.4442.4`.
	BrowserVersion *string `protobuf:"bytes,2,opt,name=browser_version,json=browserVersion" json:"browser_version,omitempty"`
	// Current state of [built-in DNS client](https://chromeenterprise.google/policies/#BuiltInDnsClientEnabled).
	IsBuiltInDnsClientEnabled *bool `protobuf:"varint,3,opt,name=is_built_in_dns_client_enabled,json=isBuiltInDnsClientEnabled" json:"is_built_in_dns_client_enabled,omitempty"`
	// Current state of [bulk data analysis](https://chromeenterprise.google/policies/#OnBulkDataEntryEnterpriseConnector). Set to true if provider list from Chrome is non-empty.
	IsBulkDataEntryAnalysisEnabled *bool `protobuf:"varint,4,opt,name=is_bulk_data_entry_analysis_enabled,json=isBulkDataEntryAnalysisEnabled" json:"is_bulk_data_entry_analysis_enabled,omitempty"`
	// Current state of [Chrome Cleanup](https://chromeenterprise.google/policies/#ChromeCleanupEnabled).
	IsChromeCleanupEnabled *bool `protobuf:"varint,5,opt,name=is_chrome_cleanup_enabled,json=isChromeCleanupEnabled" json:"is_chrome_cleanup_enabled,omitempty"`
	// Current state of [Chrome Remote Desktop app](https://chromeenterprise.google/policies/#URLBlocklist).
	IsChromeRemoteDesktopAppBlocked *bool `protobuf:"varint,6,opt,name=is_chrome_remote_desktop_app_blocked,json=isChromeRemoteDesktopAppBlocked" json:"is_chrome_remote_desktop_app_blocked,omitempty"`
	// Current state of [file download analysis](https://chromeenterprise.google/policies/#OnFileDownloadedEnterpriseConnector). Set to true if provider list from Chrome is non-empty.
	IsFileDownloadAnalysisEnabled *bool `protobuf:"varint,7,opt,name=is_file_download_analysis_enabled,json=isFileDownloadAnalysisEnabled" json:"is_file_download_analysis_enabled,omitempty"`
	// Current state of [file upload analysis](https://chromeenterprise.google/policies/#OnFileAttachedEnterpriseConnector). Set to true if provider list from Chrome is non-empty.
	IsFileUploadAnalysisEnabled *bool `protobuf:"varint,8,opt,name=is_file_upload_analysis_enabled,json=isFileUploadAnalysisEnabled" json:"is_file_upload_analysis_enabled,omitempty"`
	// Current state of [real-time URL check](https://chromeenterprise.google/policies/#EnterpriseRealTimeUrlCheckMode). Set to true if provider list from Chrome is non-empty.
	IsRealtimeUrlCheckEnabled *bool `protobuf:"varint,9,opt,name=is_realtime_url_check_enabled,json=isRealtimeUrlCheckEnabled" json:"is_realtime_url_check_enabled,omitempty"`
	// Current state of [security event analysis](https://chromeenterprise.google/policies/#OnSecurityEventEnterpriseConnector). Set to true if provider list from Chrome is non-empty.
	IsSecurityEventAnalysisEnabled *bool `protobuf:"varint,10,opt,name=is_security_event_analysis_enabled,json=isSecurityEventAnalysisEnabled" json:"is_security_event_analysis_enabled,omitempty"`
	// Current state of [site isolation](https://chromeenterprise.google/policies/?policy=IsolateOrigins).
	IsSiteIsolationEnabled *bool `protobuf:"varint,11,opt,name=is_site_isolation_enabled,json=isSiteIsolationEnabled" json:"is_site_isolation_enabled,omitempty"`
	// Current state of [third-party blocking](https://chromeenterprise.google/policies/#ThirdPartyBlockingEnabled).
	IsThirdPartyBlockingEnabled *bool `protobuf:"varint,12,opt,name=is_third_party_blocking_enabled,json=isThirdPartyBlockingEnabled" json:"is_third_party_blocking_enabled,omitempty"`
	// Current state of [password protection trigger](https://chromeenterprise.google/policies/#PasswordProtectionWarningTrigger).
	PasswordProtectionWarningTrigger *string `protobuf:"bytes,13,opt,name=password_protection_warning_trigger,json=passwordProtectionWarningTrigger" json:"password_protection_warning_trigger,omitempty"`
	// Current state of [Safe Browsing protection level](https://chromeenterprise.google/policies/#SafeBrowsingProtectionLevel).
	SafeBrowsingProtectionLevel *string `protobuf:"bytes,14,opt,name=safe_browsing_protection_level,json=safeBrowsingProtectionLevel" json:"safe_browsing_protection_level,omitempty"`
}

func (x *GoogleAppsCloudidentityDevicesV1BrowserInfo) Reset() {
	*x = GoogleAppsCloudidentityDevicesV1BrowserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleAppsCloudidentityDevicesV1BrowserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleAppsCloudidentityDevicesV1BrowserInfo) ProtoMessage() {}

func (x *GoogleAppsCloudidentityDevicesV1BrowserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleAppsCloudidentityDevicesV1BrowserInfo.ProtoReflect.Descriptor instead.
func (*GoogleAppsCloudidentityDevicesV1BrowserInfo) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{41}
}

func (x *GoogleAppsCloudidentityDevicesV1BrowserInfo) GetBrowserManagementState() string {
	if x != nil && x.BrowserManagementState != nil {
		return *x.BrowserManagementState
	}
	return ""
}

func (x *GoogleAppsCloudidentityDevicesV1BrowserInfo) GetBrowserVersion() string {
	if x != nil && x.BrowserVersion != nil {
		return *x.BrowserVersion
	}
	return ""
}

func (x *GoogleAppsCloudidentityDevicesV1BrowserInfo) GetIsBuiltInDnsClientEnabled() bool {
	if x != nil && x.IsBuiltInDnsClientEnabled != nil {
		return *x.IsBuiltInDnsClientEnabled
	}
	return false
}

func (x *GoogleAppsCloudidentityDevicesV1BrowserInfo) GetIsBulkDataEntryAnalysisEnabled() bool {
	if x != nil && x.IsBulkDataEntryAnalysisEnabled != nil {
		return *x.IsBulkDataEntryAnalysisEnabled
	}
	return false
}

func (x *GoogleAppsCloudidentityDevicesV1BrowserInfo) GetIsChromeCleanupEnabled() bool {
	if x != nil && x.IsChromeCleanupEnabled != nil {
		return *x.IsChromeCleanupEnabled
	}
	return false
}

func (x *GoogleAppsCloudidentityDevicesV1BrowserInfo) GetIsChromeRemoteDesktopAppBlocked() bool {
	if x != nil && x.IsChromeRemoteDesktopAppBlocked != nil {
		return *x.IsChromeRemoteDesktopAppBlocked
	}
	return false
}

func (x *GoogleAppsCloudidentityDevicesV1BrowserInfo) GetIsFileDownloadAnalysisEnabled() bool {
	if x != nil && x.IsFileDownloadAnalysisEnabled != nil {
		return *x.IsFileDownloadAnalysisEnabled
	}
	return false
}

func (x *GoogleAppsCloudidentityDevicesV1BrowserInfo) GetIsFileUploadAnalysisEnabled() bool {
	if x != nil && x.IsFileUploadAnalysisEnabled != nil {
		return *x.IsFileUploadAnalysisEnabled
	}
	return false
}

func (x *GoogleAppsCloudidentityDevicesV1BrowserInfo) GetIsRealtimeUrlCheckEnabled() bool {
	if x != nil && x.IsRealtimeUrlCheckEnabled != nil {
		return *x.IsRealtimeUrlCheckEnabled
	}
	return false
}

func (x *GoogleAppsCloudidentityDevicesV1BrowserInfo) GetIsSecurityEventAnalysisEnabled() bool {
	if x != nil && x.IsSecurityEventAnalysisEnabled != nil {
		return *x.IsSecurityEventAnalysisEnabled
	}
	return false
}

func (x *GoogleAppsCloudidentityDevicesV1BrowserInfo) GetIsSiteIsolationEnabled() bool {
	if x != nil && x.IsSiteIsolationEnabled != nil {
		return *x.IsSiteIsolationEnabled
	}
	return false
}

func (x *GoogleAppsCloudidentityDevicesV1BrowserInfo) GetIsThirdPartyBlockingEnabled() bool {
	if x != nil && x.IsThirdPartyBlockingEnabled != nil {
		return *x.IsThirdPartyBlockingEnabled
	}
	return false
}

func (x *GoogleAppsCloudidentityDevicesV1BrowserInfo) GetPasswordProtectionWarningTrigger() string {
	if x != nil && x.PasswordProtectionWarningTrigger != nil {
		return *x.PasswordProtectionWarningTrigger
	}
	return ""
}

func (x *GoogleAppsCloudidentityDevicesV1BrowserInfo) GetSafeBrowsingProtectionLevel() string {
	if x != nil && x.SafeBrowsingProtectionLevel != nil {
		return *x.SafeBrowsingProtectionLevel
	}
	return ""
}

// Metadata for CancelWipeDevice LRO.
type GoogleAppsCloudidentityDevicesV1CancelWipeDeviceMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GoogleAppsCloudidentityDevicesV1CancelWipeDeviceMetadata) Reset() {
	*x = GoogleAppsCloudidentityDevicesV1CancelWipeDeviceMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleAppsCloudidentityDevicesV1CancelWipeDeviceMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleAppsCloudidentityDevicesV1CancelWipeDeviceMetadata) ProtoMessage() {}

func (x *GoogleAppsCloudidentityDevicesV1CancelWipeDeviceMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleAppsCloudidentityDevicesV1CancelWipeDeviceMetadata.ProtoReflect.Descriptor instead.
func (*GoogleAppsCloudidentityDevicesV1CancelWipeDeviceMetadata) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{42}
}

// Response message for cancelling an unfinished device wipe.
type GoogleAppsCloudidentityDevicesV1CancelWipeDeviceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Resultant Device object for the action. Note that asset tags will not be returned in the device object.
	Device *GoogleAppsCloudidentityDevicesV1Device `protobuf:"bytes,1,opt,name=device" json:"device,omitempty"`
}

func (x *GoogleAppsCloudidentityDevicesV1CancelWipeDeviceResponse) Reset() {
	*x = GoogleAppsCloudidentityDevicesV1CancelWipeDeviceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleAppsCloudidentityDevicesV1CancelWipeDeviceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleAppsCloudidentityDevicesV1CancelWipeDeviceResponse) ProtoMessage() {}

func (x *GoogleAppsCloudidentityDevicesV1CancelWipeDeviceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleAppsCloudidentityDevicesV1CancelWipeDeviceResponse.ProtoReflect.Descriptor instead.
func (*GoogleAppsCloudidentityDevicesV1CancelWipeDeviceResponse) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{43}
}

func (x *GoogleAppsCloudidentityDevicesV1CancelWipeDeviceResponse) GetDevice() *GoogleAppsCloudidentityDevicesV1Device {
	if x != nil {
		return x.Device
	}
	return nil
}

// Metadata for CancelWipeDeviceUser LRO.
type GoogleAppsCloudidentityDevicesV1CancelWipeDeviceUserMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GoogleAppsCloudidentityDevicesV1CancelWipeDeviceUserMetadata) Reset() {
	*x = GoogleAppsCloudidentityDevicesV1CancelWipeDeviceUserMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleAppsCloudidentityDevicesV1CancelWipeDeviceUserMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleAppsCloudidentityDevicesV1CancelWipeDeviceUserMetadata) ProtoMessage() {}

func (x *GoogleAppsCloudidentityDevicesV1CancelWipeDeviceUserMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleAppsCloudidentityDevicesV1CancelWipeDeviceUserMetadata.ProtoReflect.Descriptor instead.
func (*GoogleAppsCloudidentityDevicesV1CancelWipeDeviceUserMetadata) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{44}
}

// Response message for cancelling an unfinished user account wipe.
type GoogleAppsCloudidentityDevicesV1CancelWipeDeviceUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Resultant DeviceUser object for the action.
	DeviceUser *GoogleAppsCloudidentityDevicesV1DeviceUser `protobuf:"bytes,1,opt,name=device_user,json=deviceUser" json:"device_user,omitempty"`
}

func (x *GoogleAppsCloudidentityDevicesV1CancelWipeDeviceUserResponse) Reset() {
	*x = GoogleAppsCloudidentityDevicesV1CancelWipeDeviceUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleAppsCloudidentityDevicesV1CancelWipeDeviceUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleAppsCloudidentityDevicesV1CancelWipeDeviceUserResponse) ProtoMessage() {}

func (x *GoogleAppsCloudidentityDevicesV1CancelWipeDeviceUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleAppsCloudidentityDevicesV1CancelWipeDeviceUserResponse.ProtoReflect.Descriptor instead.
func (*GoogleAppsCloudidentityDevicesV1CancelWipeDeviceUserResponse) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{45}
}

func (x *GoogleAppsCloudidentityDevicesV1CancelWipeDeviceUserResponse) GetDeviceUser() *GoogleAppsCloudidentityDevicesV1DeviceUser {
	if x != nil {
		return x.DeviceUser
	}
	return nil
}

// Stores information about a certificate.
type GoogleAppsCloudidentityDevicesV1CertificateAttributes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The X.509 extension for CertificateTemplate.
	CertificateTemplate *GoogleAppsCloudidentityDevicesV1CertificateTemplate `protobuf:"bytes,1,opt,name=certificate_template,json=certificateTemplate" json:"certificate_template,omitempty"`
	// The encoded certificate fingerprint.
	Fingerprint *string `protobuf:"bytes,2,opt,name=fingerprint" json:"fingerprint,omitempty"`
	// The name of the issuer of this certificate.
	Issuer *string `protobuf:"bytes,3,opt,name=issuer" json:"issuer,omitempty"`
	// Serial number of the certificate, Example: "123456789".
	SerialNumber *string `protobuf:"bytes,4,opt,name=serial_number,json=serialNumber" json:"serial_number,omitempty"`
	// The subject name of this certificate.
	Subject *string `protobuf:"bytes,5,opt,name=subject" json:"subject,omitempty"`
	// The certificate thumbprint.
	Thumbprint *string `protobuf:"bytes,6,opt,name=thumbprint" json:"thumbprint,omitempty"`
	// Output only. Validation state of this certificate.
	ValidationState *string `protobuf:"bytes,7,opt,name=validation_state,json=validationState" json:"validation_state,omitempty"`
	// Certificate not valid at or after this timestamp.
	ValidityExpirationTime *timestamp.Timestamp `protobuf:"bytes,8,opt,name=validity_expiration_time,json=validityExpirationTime" json:"validity_expiration_time,omitempty"`
	// Certificate not valid before this timestamp.
	ValidityStartTime *timestamp.Timestamp `protobuf:"bytes,9,opt,name=validity_start_time,json=validityStartTime" json:"validity_start_time,omitempty"`
}

func (x *GoogleAppsCloudidentityDevicesV1CertificateAttributes) Reset() {
	*x = GoogleAppsCloudidentityDevicesV1CertificateAttributes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleAppsCloudidentityDevicesV1CertificateAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleAppsCloudidentityDevicesV1CertificateAttributes) ProtoMessage() {}

func (x *GoogleAppsCloudidentityDevicesV1CertificateAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleAppsCloudidentityDevicesV1CertificateAttributes.ProtoReflect.Descriptor instead.
func (*GoogleAppsCloudidentityDevicesV1CertificateAttributes) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{46}
}

func (x *GoogleAppsCloudidentityDevicesV1CertificateAttributes) GetCertificateTemplate() *GoogleAppsCloudidentityDevicesV1CertificateTemplate {
	if x != nil {
		return x.CertificateTemplate
	}
	return nil
}

func (x *GoogleAppsCloudidentityDevicesV1CertificateAttributes) GetFingerprint() string {
	if x != nil && x.Fingerprint != nil {
		return *x.Fingerprint
	}
	return ""
}

func (x *GoogleAppsCloudidentityDevicesV1CertificateAttributes) GetIssuer() string {
	if x != nil && x.Issuer != nil {
		return *x.Issuer
	}
	return ""
}

func (x *GoogleAppsCloudidentityDevicesV1CertificateAttributes) GetSerialNumber() string {
	if x != nil && x.SerialNumber != nil {
		return *x.SerialNumber
	}
	return ""
}

func (x *GoogleAppsCloudidentityDevicesV1CertificateAttributes) GetSubject() string {
	if x != nil && x.Subject != nil {
		return *x.Subject
	}
	return ""
}

func (x *GoogleAppsCloudidentityDevicesV1CertificateAttributes) GetThumbprint() string {
	if x != nil && x.Thumbprint != nil {
		return *x.Thumbprint
	}
	return ""
}

func (x *GoogleAppsCloudidentityDevicesV1CertificateAttributes) GetValidationState() string {
	if x != nil && x.ValidationState != nil {
		return *x.ValidationState
	}
	return ""
}

func (x *GoogleAppsCloudidentityDevicesV1CertificateAttributes) GetValidityExpirationTime() *timestamp.Timestamp {
	if x != nil {
		return x.ValidityExpirationTime
	}
	return nil
}

func (x *GoogleAppsCloudidentityDevicesV1CertificateAttributes) GetValidityStartTime() *timestamp.Timestamp {
	if x != nil {
		return x.ValidityStartTime
	}
	return nil
}

// CertificateTemplate (v3 Extension in X.509).
type GoogleAppsCloudidentityDevicesV1CertificateTemplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The template id of the template. Example: "1.3.6.1.4.1.311.21.8.15608621.11768144.5720724.16068415.6889630.81.2472537.7784047".
	Id *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// The Major version of the template. Example: 100.
	MajorVersion *int32 `protobuf:"varint,2,opt,name=major_version,json=majorVersion" json:"major_version,omitempty"`
	// The minor version of the template. Example: 12.
	MinorVersion *int32 `protobuf:"varint,3,opt,name=minor_version,json=minorVersion" json:"minor_version,omitempty"`
}

func (x *GoogleAppsCloudidentityDevicesV1CertificateTemplate) Reset() {
	*x = GoogleAppsCloudidentityDevicesV1CertificateTemplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleAppsCloudidentityDevicesV1CertificateTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleAppsCloudidentityDevicesV1CertificateTemplate) ProtoMessage() {}

func (x *GoogleAppsCloudidentityDevicesV1CertificateTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleAppsCloudidentityDevicesV1CertificateTemplate.ProtoReflect.Descriptor instead.
func (*GoogleAppsCloudidentityDevicesV1CertificateTemplate) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{47}
}

func (x *GoogleAppsCloudidentityDevicesV1CertificateTemplate) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *GoogleAppsCloudidentityDevicesV1CertificateTemplate) GetMajorVersion() int32 {
	if x != nil && x.MajorVersion != nil {
		return *x.MajorVersion
	}
	return 0
}

func (x *GoogleAppsCloudidentityDevicesV1CertificateTemplate) GetMinorVersion() int32 {
	if x != nil && x.MinorVersion != nil {
		return *x.MinorVersion
	}
	return 0
}

// Represents the state associated with an API client calling the Devices API. Resource representing ClientState and supports updates from API users
type GoogleAppsCloudidentityDevicesV1ClientState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The caller can specify asset tags for this resource
	AssetTags []string `protobuf:"bytes,1,rep,name=asset_tags,json=assetTags" json:"asset_tags,omitempty"`
	// The compliance state of the resource as specified by the API client.
	ComplianceState *string `protobuf:"bytes,2,opt,name=compliance_state,json=complianceState" json:"compliance_state,omitempty"`
	// Output only. The time the client state data was created.
	CreateTime *timestamp.Timestamp `protobuf:"bytes,3,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	// This field may be used to store a unique identifier for the API resource within which these CustomAttributes are a field.
	CustomId *string `protobuf:"bytes,4,opt,name=custom_id,json=customId" json:"custom_id,omitempty"`
	// The token that needs to be passed back for concurrency control in updates. Token needs to be passed back in UpdateRequest
	Etag *string `protobuf:"bytes,5,opt,name=etag" json:"etag,omitempty"`
	// The Health score of the resource. The Health score is the callers specification of the condition of the device from a usability point of view. For example, a third-party device management provider may specify a health score based on its compliance with organizational policies.
	HealthScore *string `protobuf:"bytes,6,opt,name=health_score,json=healthScore" json:"health_score,omitempty"`
	// The map of key-value attributes stored by callers specific to a device. The total serialized length of this map may not exceed 10KB. No limit is placed on the number of attributes in a map.
	KeyValuePairs map[string]*GoogleAppsCloudidentityDevicesV1CustomAttributeValue `protobuf:"bytes,7,rep,name=key_value_pairs,json=keyValuePairs" json:"key_value_pairs,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Output only. The time the client state data was last updated.
	LastUpdateTime *timestamp.Timestamp `protobuf:"bytes,8,opt,name=last_update_time,json=lastUpdateTime" json:"last_update_time,omitempty"`
	// The management state of the resource as specified by the API client.
	Managed *string `protobuf:"bytes,9,opt,name=managed" json:"managed,omitempty"`
	// Output only. [Resource name](https://cloud.google.com/apis/design/resource_names) of the ClientState in format: `devices/{device}/deviceUsers/{device_user}/clientState/{partner}`, where partner corresponds to the partner storing the data. For partners belonging to the "BeyondCorp Alliance", this is the partner ID specified to you by Google. For all other callers, this is a string of the form: `{customer}-suffix`, where `customer` is your customer ID. The *suffix* is any string the caller specifies. This string will be displayed verbatim in the administration console. This suffix is used in setting up Custom Access Levels in Context-Aware Access. Your organization's customer ID can be obtained from the URL: `GET https://www.googleapis.com/admin/directory/v1/customers/my_customer` The `id` field in the response contains the customer ID starting with the letter 'C'. The customer ID to be used in this API is the string after the letter 'C' (not including 'C')
	Name *string `protobuf:"bytes,10,opt,name=name" json:"name,omitempty"`
	// Output only. The owner of the ClientState
	OwnerType *string `protobuf:"bytes,11,opt,name=owner_type,json=ownerType" json:"owner_type,omitempty"`
	// A descriptive cause of the health score.
	ScoreReason *string `protobuf:"bytes,12,opt,name=score_reason,json=scoreReason" json:"score_reason,omitempty"`
}

func (x *GoogleAppsCloudidentityDevicesV1ClientState) Reset() {
	*x = GoogleAppsCloudidentityDevicesV1ClientState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleAppsCloudidentityDevicesV1ClientState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleAppsCloudidentityDevicesV1ClientState) ProtoMessage() {}

func (x *GoogleAppsCloudidentityDevicesV1ClientState) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleAppsCloudidentityDevicesV1ClientState.ProtoReflect.Descriptor instead.
func (*GoogleAppsCloudidentityDevicesV1ClientState) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{48}
}

func (x *GoogleAppsCloudidentityDevicesV1ClientState) GetAssetTags() []string {
	if x != nil {
		return x.AssetTags
	}
	return nil
}

func (x *GoogleAppsCloudidentityDevicesV1ClientState) GetComplianceState() string {
	if x != nil && x.ComplianceState != nil {
		return *x.ComplianceState
	}
	return ""
}

func (x *GoogleAppsCloudidentityDevicesV1ClientState) GetCreateTime() *timestamp.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *GoogleAppsCloudidentityDevicesV1ClientState) GetCustomId() string {
	if x != nil && x.CustomId != nil {
		return *x.CustomId
	}
	return ""
}

func (x *GoogleAppsCloudidentityDevicesV1ClientState) GetEtag() string {
	if x != nil && x.Etag != nil {
		return *x.Etag
	}
	return ""
}

func (x *GoogleAppsCloudidentityDevicesV1ClientState) GetHealthScore() string {
	if x != nil && x.HealthScore != nil {
		return *x.HealthScore
	}
	return ""
}

func (x *GoogleAppsCloudidentityDevicesV1ClientState) GetKeyValuePairs() map[string]*GoogleAppsCloudidentityDevicesV1CustomAttributeValue {
	if x != nil {
		return x.KeyValuePairs
	}
	return nil
}

func (x *GoogleAppsCloudidentityDevicesV1ClientState) GetLastUpdateTime() *timestamp.Timestamp {
	if x != nil {
		return x.LastUpdateTime
	}
	return nil
}

func (x *GoogleAppsCloudidentityDevicesV1ClientState) GetManaged() string {
	if x != nil && x.Managed != nil {
		return *x.Managed
	}
	return ""
}

func (x *GoogleAppsCloudidentityDevicesV1ClientState) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GoogleAppsCloudidentityDevicesV1ClientState) GetOwnerType() string {
	if x != nil && x.OwnerType != nil {
		return *x.OwnerType
	}
	return ""
}

func (x *GoogleAppsCloudidentityDevicesV1ClientState) GetScoreReason() string {
	if x != nil && x.ScoreReason != nil {
		return *x.ScoreReason
	}
	return ""
}

// Metadata for CreateDevice LRO.
type GoogleAppsCloudidentityDevicesV1CreateDeviceMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GoogleAppsCloudidentityDevicesV1CreateDeviceMetadata) Reset() {
	*x = GoogleAppsCloudidentityDevicesV1CreateDeviceMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleAppsCloudidentityDevicesV1CreateDeviceMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleAppsCloudidentityDevicesV1CreateDeviceMetadata) ProtoMessage() {}

func (x *GoogleAppsCloudidentityDevicesV1CreateDeviceMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleAppsCloudidentityDevicesV1CreateDeviceMetadata.ProtoReflect.Descriptor instead.
func (*GoogleAppsCloudidentityDevicesV1CreateDeviceMetadata) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{49}
}

// Additional custom attribute values may be one of these types
type GoogleAppsCloudidentityDevicesV1CustomAttributeValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Represents a boolean value.
	BoolValue *bool `protobuf:"varint,1,opt,name=bool_value,json=boolValue" json:"bool_value,omitempty"`
	// Represents a double value.
	NumberValue *float64 `protobuf:"fixed64,2,opt,name=number_value,json=numberValue" json:"number_value,omitempty"`
	// Represents a string value.
	StringValue *string `protobuf:"bytes,3,opt,name=string_value,json=stringValue" json:"string_value,omitempty"`
}

func (x *GoogleAppsCloudidentityDevicesV1CustomAttributeValue) Reset() {
	*x = GoogleAppsCloudidentityDevicesV1CustomAttributeValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleAppsCloudidentityDevicesV1CustomAttributeValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleAppsCloudidentityDevicesV1CustomAttributeValue) ProtoMessage() {}

func (x *GoogleAppsCloudidentityDevicesV1CustomAttributeValue) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleAppsCloudidentityDevicesV1CustomAttributeValue.ProtoReflect.Descriptor instead.
func (*GoogleAppsCloudidentityDevicesV1CustomAttributeValue) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{50}
}

func (x *GoogleAppsCloudidentityDevicesV1CustomAttributeValue) GetBoolValue() bool {
	if x != nil && x.BoolValue != nil {
		return *x.BoolValue
	}
	return false
}

func (x *GoogleAppsCloudidentityDevicesV1CustomAttributeValue) GetNumberValue() float64 {
	if x != nil && x.NumberValue != nil {
		return *x.NumberValue
	}
	return 0
}

func (x *GoogleAppsCloudidentityDevicesV1CustomAttributeValue) GetStringValue() string {
	if x != nil && x.StringValue != nil {
		return *x.StringValue
	}
	return ""
}

// Metadata for DeleteDevice LRO.
type GoogleAppsCloudidentityDevicesV1DeleteDeviceMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GoogleAppsCloudidentityDevicesV1DeleteDeviceMetadata) Reset() {
	*x = GoogleAppsCloudidentityDevicesV1DeleteDeviceMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleAppsCloudidentityDevicesV1DeleteDeviceMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleAppsCloudidentityDevicesV1DeleteDeviceMetadata) ProtoMessage() {}

func (x *GoogleAppsCloudidentityDevicesV1DeleteDeviceMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleAppsCloudidentityDevicesV1DeleteDeviceMetadata.ProtoReflect.Descriptor instead.
func (*GoogleAppsCloudidentityDevicesV1DeleteDeviceMetadata) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{51}
}

// Metadata for DeleteDeviceUser LRO.
type GoogleAppsCloudidentityDevicesV1DeleteDeviceUserMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GoogleAppsCloudidentityDevicesV1DeleteDeviceUserMetadata) Reset() {
	*x = GoogleAppsCloudidentityDevicesV1DeleteDeviceUserMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleAppsCloudidentityDevicesV1DeleteDeviceUserMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleAppsCloudidentityDevicesV1DeleteDeviceUserMetadata) ProtoMessage() {}

func (x *GoogleAppsCloudidentityDevicesV1DeleteDeviceUserMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleAppsCloudidentityDevicesV1DeleteDeviceUserMetadata.ProtoReflect.Descriptor instead.
func (*GoogleAppsCloudidentityDevicesV1DeleteDeviceUserMetadata) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{52}
}

// A Device within the Cloud Identity Devices API. Represents a Device known to Google Cloud, independent of the device ownership, type, and whether it is assigned or in use by a user.
type GoogleAppsCloudidentityDevicesV1Device struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Output only. Attributes specific to Android devices.
	AndroidSpecificAttributes *GoogleAppsCloudidentityDevicesV1AndroidAttributes `protobuf:"bytes,1,opt,name=android_specific_attributes,json=androidSpecificAttributes" json:"android_specific_attributes,omitempty"`
	// Asset tag of the device.
	AssetTag *string `protobuf:"bytes,2,opt,name=asset_tag,json=assetTag" json:"asset_tag,omitempty"`
	// Output only. Baseband version of the device.
	BasebandVersion *string `protobuf:"bytes,3,opt,name=baseband_version,json=basebandVersion" json:"baseband_version,omitempty"`
	// Output only. Device bootloader version. Example: 0.6.7.
	BootloaderVersion *string `protobuf:"bytes,4,opt,name=bootloader_version,json=bootloaderVersion" json:"bootloader_version,omitempty"`
	// Output only. Device brand. Example: Samsung.
	Brand *string `protobuf:"bytes,5,opt,name=brand" json:"brand,omitempty"`
	// Output only. Build number of the device.
	BuildNumber *string `protobuf:"bytes,6,opt,name=build_number,json=buildNumber" json:"build_number,omitempty"`
	// Output only. Represents whether the Device is compromised.
	CompromisedState *string `protobuf:"bytes,7,opt,name=compromised_state,json=compromisedState" json:"compromised_state,omitempty"`
	// Output only. When the Company-Owned device was imported. This field is empty for BYOD devices.
	CreateTime *timestamp.Timestamp `protobuf:"bytes,8,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	// Unique identifier for the device.
	DeviceId *string `protobuf:"bytes,9,opt,name=device_id,json=deviceId" json:"device_id,omitempty"`
	// Output only. Type of device.
	DeviceType *string `protobuf:"bytes,10,opt,name=device_type,json=deviceType" json:"device_type,omitempty"`
	// Output only. Whether developer options is enabled on device.
	EnabledDeveloperOptions *bool `protobuf:"varint,11,opt,name=enabled_developer_options,json=enabledDeveloperOptions" json:"enabled_developer_options,omitempty"`
	// Output only. Whether USB debugging is enabled on device.
	EnabledUsbDebugging *bool `protobuf:"varint,12,opt,name=enabled_usb_debugging,json=enabledUsbDebugging" json:"enabled_usb_debugging,omitempty"`
	// Output only. Device encryption state.
	EncryptionState *string `protobuf:"bytes,13,opt,name=encryption_state,json=encryptionState" json:"encryption_state,omitempty"`
	// Output only. Attributes specific to [Endpoint Verification](https://cloud.google.com/endpoint-verification/docs/overview) devices.
	EndpointVerificationSpecificAttributes *GoogleAppsCloudidentityDevicesV1EndpointVerificationSpecificAttributes `protobuf:"bytes,14,opt,name=endpoint_verification_specific_attributes,json=endpointVerificationSpecificAttributes" json:"endpoint_verification_specific_attributes,omitempty"`
	// Host name of the device.
	Hostname *string `protobuf:"bytes,15,opt,name=hostname" json:"hostname,omitempty"`
	// Output only. IMEI number of device if GSM device; empty otherwise.
	Imei *string `protobuf:"bytes,16,opt,name=imei" json:"imei,omitempty"`
	// Output only. Kernel version of the device.
	KernelVersion *string `protobuf:"bytes,17,opt,name=kernel_version,json=kernelVersion" json:"kernel_version,omitempty"`
	// Most recent time when device synced with this service.
	LastSyncTime *timestamp.Timestamp `protobuf:"bytes,18,opt,name=last_sync_time,json=lastSyncTime" json:"last_sync_time,omitempty"`
	// Output only. Management state of the device
	ManagementState *string `protobuf:"bytes,19,opt,name=management_state,json=managementState" json:"management_state,omitempty"`
	// Output only. Device manufacturer. Example: Motorola.
	Manufacturer *string `protobuf:"bytes,20,opt,name=manufacturer" json:"manufacturer,omitempty"`
	// Output only. MEID number of device if CDMA device; empty otherwise.
	Meid *string `protobuf:"bytes,21,opt,name=meid" json:"meid,omitempty"`
	// Output only. Model name of device. Example: Pixel 3.
	Model *string `protobuf:"bytes,22,opt,name=model" json:"model,omitempty"`
	// Output only. [Resource name](https://cloud.google.com/apis/design/resource_names) of the Device in format: `devices/{device}`, where device is the unique id assigned to the Device. Important: Device API scopes require that you use domain-wide delegation to access the API. For more information, see [Set up the Devices API](https://cloud.google.com/identity/docs/how-to/setup-devices).
	Name *string `protobuf:"bytes,23,opt,name=name" json:"name,omitempty"`
	// Output only. Mobile or network operator of device, if available.
	NetworkOperator *string `protobuf:"bytes,24,opt,name=network_operator,json=networkOperator" json:"network_operator,omitempty"`
	// Output only. OS version of the device. Example: Android 8.1.0.
	OsVersion *string `protobuf:"bytes,25,opt,name=os_version,json=osVersion" json:"os_version,omitempty"`
	// Output only. Domain name for Google accounts on device. Type for other accounts on device. On Android, will only be populated if |ownership_privilege| is |PROFILE_OWNER| or |DEVICE_OWNER|. Does not include the account signed in to the device policy app if that account's domain has only one account. Examples: "com.example", "xyz.com".
	OtherAccounts []string `protobuf:"bytes,26,rep,name=other_accounts,json=otherAccounts" json:"other_accounts,omitempty"`
	// Output only. Whether the device is owned by the company or an individual
	OwnerType *string `protobuf:"bytes,27,opt,name=owner_type,json=ownerType" json:"owner_type,omitempty"`
	// Output only. OS release version. Example: 6.0.
	ReleaseVersion *string `protobuf:"bytes,28,opt,name=release_version,json=releaseVersion" json:"release_version,omitempty"`
	// Output only. OS security patch update time on device.
	SecurityPatchTime *timestamp.Timestamp `protobuf:"bytes,29,opt,name=security_patch_time,json=securityPatchTime" json:"security_patch_time,omitempty"`
	// Serial Number of device. Example: HT82V1A01076.
	SerialNumber *string `protobuf:"bytes,30,opt,name=serial_number,json=serialNumber" json:"serial_number,omitempty"`
	// Output only. Unified device id of the device.
	UnifiedDeviceId *string `protobuf:"bytes,31,opt,name=unified_device_id,json=unifiedDeviceId" json:"unified_device_id,omitempty"`
	// WiFi MAC addresses of device.
	WifiMacAddresses []string `protobuf:"bytes,32,rep,name=wifi_mac_addresses,json=wifiMacAddresses" json:"wifi_mac_addresses,omitempty"`
}

func (x *GoogleAppsCloudidentityDevicesV1Device) Reset() {
	*x = GoogleAppsCloudidentityDevicesV1Device{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleAppsCloudidentityDevicesV1Device) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleAppsCloudidentityDevicesV1Device) ProtoMessage() {}

func (x *GoogleAppsCloudidentityDevicesV1Device) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleAppsCloudidentityDevicesV1Device.ProtoReflect.Descriptor instead.
func (*GoogleAppsCloudidentityDevicesV1Device) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{53}
}

func (x *GoogleAppsCloudidentityDevicesV1Device) GetAndroidSpecificAttributes() *GoogleAppsCloudidentityDevicesV1AndroidAttributes {
	if x != nil {
		return x.AndroidSpecificAttributes
	}
	return nil
}

func (x *GoogleAppsCloudidentityDevicesV1Device) GetAssetTag() string {
	if x != nil && x.AssetTag != nil {
		return *x.AssetTag
	}
	return ""
}

func (x *GoogleAppsCloudidentityDevicesV1Device) GetBasebandVersion() string {
	if x != nil && x.BasebandVersion != nil {
		return *x.BasebandVersion
	}
	return ""
}

func (x *GoogleAppsCloudidentityDevicesV1Device) GetBootloaderVersion() string {
	if x != nil && x.BootloaderVersion != nil {
		return *x.BootloaderVersion
	}
	return ""
}

func (x *GoogleAppsCloudidentityDevicesV1Device) GetBrand() string {
	if x != nil && x.Brand != nil {
		return *x.Brand
	}
	return ""
}

func (x *GoogleAppsCloudidentityDevicesV1Device) GetBuildNumber() string {
	if x != nil && x.BuildNumber != nil {
		return *x.BuildNumber
	}
	return ""
}

func (x *GoogleAppsCloudidentityDevicesV1Device) GetCompromisedState() string {
	if x != nil && x.CompromisedState != nil {
		return *x.CompromisedState
	}
	return ""
}

func (x *GoogleAppsCloudidentityDevicesV1Device) GetCreateTime() *timestamp.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *GoogleAppsCloudidentityDevicesV1Device) GetDeviceId() string {
	if x != nil && x.DeviceId != nil {
		return *x.DeviceId
	}
	return ""
}

func (x *GoogleAppsCloudidentityDevicesV1Device) GetDeviceType() string {
	if x != nil && x.DeviceType != nil {
		return *x.DeviceType
	}
	return ""
}

func (x *GoogleAppsCloudidentityDevicesV1Device) GetEnabledDeveloperOptions() bool {
	if x != nil && x.EnabledDeveloperOptions != nil {
		return *x.EnabledDeveloperOptions
	}
	return false
}

func (x *GoogleAppsCloudidentityDevicesV1Device) GetEnabledUsbDebugging() bool {
	if x != nil && x.EnabledUsbDebugging != nil {
		return *x.EnabledUsbDebugging
	}
	return false
}

func (x *GoogleAppsCloudidentityDevicesV1Device) GetEncryptionState() string {
	if x != nil && x.EncryptionState != nil {
		return *x.EncryptionState
	}
	return ""
}

func (x *GoogleAppsCloudidentityDevicesV1Device) GetEndpointVerificationSpecificAttributes() *GoogleAppsCloudidentityDevicesV1EndpointVerificationSpecificAttributes {
	if x != nil {
		return x.EndpointVerificationSpecificAttributes
	}
	return nil
}

func (x *GoogleAppsCloudidentityDevicesV1Device) GetHostname() string {
	if x != nil && x.Hostname != nil {
		return *x.Hostname
	}
	return ""
}

func (x *GoogleAppsCloudidentityDevicesV1Device) GetImei() string {
	if x != nil && x.Imei != nil {
		return *x.Imei
	}
	return ""
}

func (x *GoogleAppsCloudidentityDevicesV1Device) GetKernelVersion() string {
	if x != nil && x.KernelVersion != nil {
		return *x.KernelVersion
	}
	return ""
}

func (x *GoogleAppsCloudidentityDevicesV1Device) GetLastSyncTime() *timestamp.Timestamp {
	if x != nil {
		return x.LastSyncTime
	}
	return nil
}

func (x *GoogleAppsCloudidentityDevicesV1Device) GetManagementState() string {
	if x != nil && x.ManagementState != nil {
		return *x.ManagementState
	}
	return ""
}

func (x *GoogleAppsCloudidentityDevicesV1Device) GetManufacturer() string {
	if x != nil && x.Manufacturer != nil {
		return *x.Manufacturer
	}
	return ""
}

func (x *GoogleAppsCloudidentityDevicesV1Device) GetMeid() string {
	if x != nil && x.Meid != nil {
		return *x.Meid
	}
	return ""
}

func (x *GoogleAppsCloudidentityDevicesV1Device) GetModel() string {
	if x != nil && x.Model != nil {
		return *x.Model
	}
	return ""
}

func (x *GoogleAppsCloudidentityDevicesV1Device) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GoogleAppsCloudidentityDevicesV1Device) GetNetworkOperator() string {
	if x != nil && x.NetworkOperator != nil {
		return *x.NetworkOperator
	}
	return ""
}

func (x *GoogleAppsCloudidentityDevicesV1Device) GetOsVersion() string {
	if x != nil && x.OsVersion != nil {
		return *x.OsVersion
	}
	return ""
}

func (x *GoogleAppsCloudidentityDevicesV1Device) GetOtherAccounts() []string {
	if x != nil {
		return x.OtherAccounts
	}
	return nil
}

func (x *GoogleAppsCloudidentityDevicesV1Device) GetOwnerType() string {
	if x != nil && x.OwnerType != nil {
		return *x.OwnerType
	}
	return ""
}

func (x *GoogleAppsCloudidentityDevicesV1Device) GetReleaseVersion() string {
	if x != nil && x.ReleaseVersion != nil {
		return *x.ReleaseVersion
	}
	return ""
}

func (x *GoogleAppsCloudidentityDevicesV1Device) GetSecurityPatchTime() *timestamp.Timestamp {
	if x != nil {
		return x.SecurityPatchTime
	}
	return nil
}

func (x *GoogleAppsCloudidentityDevicesV1Device) GetSerialNumber() string {
	if x != nil && x.SerialNumber != nil {
		return *x.SerialNumber
	}
	return ""
}

func (x *GoogleAppsCloudidentityDevicesV1Device) GetUnifiedDeviceId() string {
	if x != nil && x.UnifiedDeviceId != nil {
		return *x.UnifiedDeviceId
	}
	return ""
}

func (x *GoogleAppsCloudidentityDevicesV1Device) GetWifiMacAddresses() []string {
	if x != nil {
		return x.WifiMacAddresses
	}
	return nil
}

// Represents a user's use of a Device in the Cloud Identity Devices API. A DeviceUser is a resource representing a user's use of a Device
type GoogleAppsCloudidentityDevicesV1DeviceUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Compromised State of the DeviceUser object
	CompromisedState *string `protobuf:"bytes,1,opt,name=compromised_state,json=compromisedState" json:"compromised_state,omitempty"`
	// When the user first signed in to the device
	CreateTime *timestamp.Timestamp `protobuf:"bytes,2,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	// Output only. Most recent time when user registered with this service.
	FirstSyncTime *timestamp.Timestamp `protobuf:"bytes,3,opt,name=first_sync_time,json=firstSyncTime" json:"first_sync_time,omitempty"`
	// Output only. Default locale used on device, in IETF BCP-47 format.
	LanguageCode *string `protobuf:"bytes,4,opt,name=language_code,json=languageCode" json:"language_code,omitempty"`
	// Output only. Last time when user synced with policies.
	LastSyncTime *timestamp.Timestamp `protobuf:"bytes,5,opt,name=last_sync_time,json=lastSyncTime" json:"last_sync_time,omitempty"`
	// Output only. Management state of the user on the device.
	ManagementState *string `protobuf:"bytes,6,opt,name=management_state,json=managementState" json:"management_state,omitempty"`
	// Output only. [Resource name](https://cloud.google.com/apis/design/resource_names) of the DeviceUser in format: `devices/{device}/deviceUsers/{device_user}`, where `device_user` uniquely identifies a user's use of a device.
	Name *string `protobuf:"bytes,7,opt,name=name" json:"name,omitempty"`
	// Password state of the DeviceUser object
	PasswordState *string `protobuf:"bytes,8,opt,name=password_state,json=passwordState" json:"password_state,omitempty"`
	// Output only. User agent on the device for this specific user
	UserAgent *string `protobuf:"bytes,9,opt,name=user_agent,json=userAgent" json:"user_agent,omitempty"`
	// Email address of the user registered on the device.
	UserEmail *string `protobuf:"bytes,10,opt,name=user_email,json=userEmail" json:"user_email,omitempty"`
}

func (x *GoogleAppsCloudidentityDevicesV1DeviceUser) Reset() {
	*x = GoogleAppsCloudidentityDevicesV1DeviceUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleAppsCloudidentityDevicesV1DeviceUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleAppsCloudidentityDevicesV1DeviceUser) ProtoMessage() {}

func (x *GoogleAppsCloudidentityDevicesV1DeviceUser) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleAppsCloudidentityDevicesV1DeviceUser.ProtoReflect.Descriptor instead.
func (*GoogleAppsCloudidentityDevicesV1DeviceUser) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{54}
}

func (x *GoogleAppsCloudidentityDevicesV1DeviceUser) GetCompromisedState() string {
	if x != nil && x.CompromisedState != nil {
		return *x.CompromisedState
	}
	return ""
}

func (x *GoogleAppsCloudidentityDevicesV1DeviceUser) GetCreateTime() *timestamp.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *GoogleAppsCloudidentityDevicesV1DeviceUser) GetFirstSyncTime() *timestamp.Timestamp {
	if x != nil {
		return x.FirstSyncTime
	}
	return nil
}

func (x *GoogleAppsCloudidentityDevicesV1DeviceUser) GetLanguageCode() string {
	if x != nil && x.LanguageCode != nil {
		return *x.LanguageCode
	}
	return ""
}

func (x *GoogleAppsCloudidentityDevicesV1DeviceUser) GetLastSyncTime() *timestamp.Timestamp {
	if x != nil {
		return x.LastSyncTime
	}
	return nil
}

func (x *GoogleAppsCloudidentityDevicesV1DeviceUser) GetManagementState() string {
	if x != nil && x.ManagementState != nil {
		return *x.ManagementState
	}
	return ""
}

func (x *GoogleAppsCloudidentityDevicesV1DeviceUser) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GoogleAppsCloudidentityDevicesV1DeviceUser) GetPasswordState() string {
	if x != nil && x.PasswordState != nil {
		return *x.PasswordState
	}
	return ""
}

func (x *GoogleAppsCloudidentityDevicesV1DeviceUser) GetUserAgent() string {
	if x != nil && x.UserAgent != nil {
		return *x.UserAgent
	}
	return ""
}

func (x *GoogleAppsCloudidentityDevicesV1DeviceUser) GetUserEmail() string {
	if x != nil && x.UserEmail != nil {
		return *x.UserEmail
	}
	return ""
}

// Resource representing the [Endpoint Verification-specific attributes](https://cloud.google.com/endpoint-verification/docs/device-information) of a device.
type GoogleAppsCloudidentityDevicesV1EndpointVerificationSpecificAttributes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// [Additional signals](https://cloud.google.com/endpoint-verification/docs/device-information) reported by Endpoint Verification. It includes the following attributes: * Non-configurable attributes: hotfixes, av_installed, av_enabled, windows_domain_name, is_os_native_firewall_enabled, and is_secure_boot_enabled. * [Configurable attributes](https://cloud.google.com/endpoint-verification/docs/collect-config-attributes): file, folder, and binary attributes; registry entries; and properties in a plist.
	AdditionalSignals map[string]*any1.Any `protobuf:"bytes,1,rep,name=additional_signals,json=additionalSignals" json:"additional_signals,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Details of browser profiles reported by Endpoint Verification.
	BrowserAttributes []*GoogleAppsCloudidentityDevicesV1BrowserAttributes `protobuf:"bytes,2,rep,name=browser_attributes,json=browserAttributes" json:"browser_attributes,omitempty"`
	// Details of certificates.
	CertificateAttributes []*GoogleAppsCloudidentityDevicesV1CertificateAttributes `protobuf:"bytes,3,rep,name=certificate_attributes,json=certificateAttributes" json:"certificate_attributes,omitempty"`
}

func (x *GoogleAppsCloudidentityDevicesV1EndpointVerificationSpecificAttributes) Reset() {
	*x = GoogleAppsCloudidentityDevicesV1EndpointVerificationSpecificAttributes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleAppsCloudidentityDevicesV1EndpointVerificationSpecificAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleAppsCloudidentityDevicesV1EndpointVerificationSpecificAttributes) ProtoMessage() {}

func (x *GoogleAppsCloudidentityDevicesV1EndpointVerificationSpecificAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleAppsCloudidentityDevicesV1EndpointVerificationSpecificAttributes.ProtoReflect.Descriptor instead.
func (*GoogleAppsCloudidentityDevicesV1EndpointVerificationSpecificAttributes) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{55}
}

func (x *GoogleAppsCloudidentityDevicesV1EndpointVerificationSpecificAttributes) GetAdditionalSignals() map[string]*any1.Any {
	if x != nil {
		return x.AdditionalSignals
	}
	return nil
}

func (x *GoogleAppsCloudidentityDevicesV1EndpointVerificationSpecificAttributes) GetBrowserAttributes() []*GoogleAppsCloudidentityDevicesV1BrowserAttributes {
	if x != nil {
		return x.BrowserAttributes
	}
	return nil
}

func (x *GoogleAppsCloudidentityDevicesV1EndpointVerificationSpecificAttributes) GetCertificateAttributes() []*GoogleAppsCloudidentityDevicesV1CertificateAttributes {
	if x != nil {
		return x.CertificateAttributes
	}
	return nil
}

// Metadata for ListEndpointApps LRO.
type GoogleAppsCloudidentityDevicesV1ListEndpointAppsMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GoogleAppsCloudidentityDevicesV1ListEndpointAppsMetadata) Reset() {
	*x = GoogleAppsCloudidentityDevicesV1ListEndpointAppsMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleAppsCloudidentityDevicesV1ListEndpointAppsMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleAppsCloudidentityDevicesV1ListEndpointAppsMetadata) ProtoMessage() {}

func (x *GoogleAppsCloudidentityDevicesV1ListEndpointAppsMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleAppsCloudidentityDevicesV1ListEndpointAppsMetadata.ProtoReflect.Descriptor instead.
func (*GoogleAppsCloudidentityDevicesV1ListEndpointAppsMetadata) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{56}
}

// Metadata for SignoutDeviceUser LRO.
type GoogleAppsCloudidentityDevicesV1SignoutDeviceUserMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GoogleAppsCloudidentityDevicesV1SignoutDeviceUserMetadata) Reset() {
	*x = GoogleAppsCloudidentityDevicesV1SignoutDeviceUserMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleAppsCloudidentityDevicesV1SignoutDeviceUserMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleAppsCloudidentityDevicesV1SignoutDeviceUserMetadata) ProtoMessage() {}

func (x *GoogleAppsCloudidentityDevicesV1SignoutDeviceUserMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleAppsCloudidentityDevicesV1SignoutDeviceUserMetadata.ProtoReflect.Descriptor instead.
func (*GoogleAppsCloudidentityDevicesV1SignoutDeviceUserMetadata) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{57}
}

// Metadata for UpdateClientState LRO.
type GoogleAppsCloudidentityDevicesV1UpdateClientStateMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GoogleAppsCloudidentityDevicesV1UpdateClientStateMetadata) Reset() {
	*x = GoogleAppsCloudidentityDevicesV1UpdateClientStateMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleAppsCloudidentityDevicesV1UpdateClientStateMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleAppsCloudidentityDevicesV1UpdateClientStateMetadata) ProtoMessage() {}

func (x *GoogleAppsCloudidentityDevicesV1UpdateClientStateMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleAppsCloudidentityDevicesV1UpdateClientStateMetadata.ProtoReflect.Descriptor instead.
func (*GoogleAppsCloudidentityDevicesV1UpdateClientStateMetadata) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{58}
}

// Metadata for UpdateDevice LRO.
type GoogleAppsCloudidentityDevicesV1UpdateDeviceMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GoogleAppsCloudidentityDevicesV1UpdateDeviceMetadata) Reset() {
	*x = GoogleAppsCloudidentityDevicesV1UpdateDeviceMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleAppsCloudidentityDevicesV1UpdateDeviceMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleAppsCloudidentityDevicesV1UpdateDeviceMetadata) ProtoMessage() {}

func (x *GoogleAppsCloudidentityDevicesV1UpdateDeviceMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleAppsCloudidentityDevicesV1UpdateDeviceMetadata.ProtoReflect.Descriptor instead.
func (*GoogleAppsCloudidentityDevicesV1UpdateDeviceMetadata) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{59}
}

// Metadata for WipeDevice LRO.
type GoogleAppsCloudidentityDevicesV1WipeDeviceMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GoogleAppsCloudidentityDevicesV1WipeDeviceMetadata) Reset() {
	*x = GoogleAppsCloudidentityDevicesV1WipeDeviceMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleAppsCloudidentityDevicesV1WipeDeviceMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleAppsCloudidentityDevicesV1WipeDeviceMetadata) ProtoMessage() {}

func (x *GoogleAppsCloudidentityDevicesV1WipeDeviceMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleAppsCloudidentityDevicesV1WipeDeviceMetadata.ProtoReflect.Descriptor instead.
func (*GoogleAppsCloudidentityDevicesV1WipeDeviceMetadata) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{60}
}

// Response message for wiping all data on the device.
type GoogleAppsCloudidentityDevicesV1WipeDeviceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Resultant Device object for the action. Note that asset tags will not be returned in the device object.
	Device *GoogleAppsCloudidentityDevicesV1Device `protobuf:"bytes,1,opt,name=device" json:"device,omitempty"`
}

func (x *GoogleAppsCloudidentityDevicesV1WipeDeviceResponse) Reset() {
	*x = GoogleAppsCloudidentityDevicesV1WipeDeviceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleAppsCloudidentityDevicesV1WipeDeviceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleAppsCloudidentityDevicesV1WipeDeviceResponse) ProtoMessage() {}

func (x *GoogleAppsCloudidentityDevicesV1WipeDeviceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleAppsCloudidentityDevicesV1WipeDeviceResponse.ProtoReflect.Descriptor instead.
func (*GoogleAppsCloudidentityDevicesV1WipeDeviceResponse) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{61}
}

func (x *GoogleAppsCloudidentityDevicesV1WipeDeviceResponse) GetDevice() *GoogleAppsCloudidentityDevicesV1Device {
	if x != nil {
		return x.Device
	}
	return nil
}

// Metadata for WipeDeviceUser LRO.
type GoogleAppsCloudidentityDevicesV1WipeDeviceUserMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GoogleAppsCloudidentityDevicesV1WipeDeviceUserMetadata) Reset() {
	*x = GoogleAppsCloudidentityDevicesV1WipeDeviceUserMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleAppsCloudidentityDevicesV1WipeDeviceUserMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleAppsCloudidentityDevicesV1WipeDeviceUserMetadata) ProtoMessage() {}

func (x *GoogleAppsCloudidentityDevicesV1WipeDeviceUserMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleAppsCloudidentityDevicesV1WipeDeviceUserMetadata.ProtoReflect.Descriptor instead.
func (*GoogleAppsCloudidentityDevicesV1WipeDeviceUserMetadata) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{62}
}

// Response message for wiping the user's account from the device.
type GoogleAppsCloudidentityDevicesV1WipeDeviceUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Resultant DeviceUser object for the action.
	DeviceUser *GoogleAppsCloudidentityDevicesV1DeviceUser `protobuf:"bytes,1,opt,name=device_user,json=deviceUser" json:"device_user,omitempty"`
}

func (x *GoogleAppsCloudidentityDevicesV1WipeDeviceUserResponse) Reset() {
	*x = GoogleAppsCloudidentityDevicesV1WipeDeviceUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleAppsCloudidentityDevicesV1WipeDeviceUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleAppsCloudidentityDevicesV1WipeDeviceUserResponse) ProtoMessage() {}

func (x *GoogleAppsCloudidentityDevicesV1WipeDeviceUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleAppsCloudidentityDevicesV1WipeDeviceUserResponse.ProtoReflect.Descriptor instead.
func (*GoogleAppsCloudidentityDevicesV1WipeDeviceUserResponse) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{63}
}

func (x *GoogleAppsCloudidentityDevicesV1WipeDeviceUserResponse) GetDeviceUser() *GoogleAppsCloudidentityDevicesV1DeviceUser {
	if x != nil {
		return x.DeviceUser
	}
	return nil
}

// A group within the Cloud Identity Groups API. A `Group` is a collection of entities, where each entity is either a user, another group, or a service account.
type Group struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Output only. Additional group keys associated with the Group.
	AdditionalGroupKeys []*EntityKey `protobuf:"bytes,1,rep,name=additional_group_keys,json=additionalGroupKeys" json:"additional_group_keys,omitempty"`
	// Output only. The time when the `Group` was created.
	CreateTime *timestamp.Timestamp `protobuf:"bytes,2,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	// An extended description to help users determine the purpose of a `Group`. Must not be longer than 4,096 characters.
	Description *string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	// The display name of the `Group`.
	DisplayName *string `protobuf:"bytes,4,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	// Optional. Dynamic group metadata like queries and status.
	DynamicGroupMetadata *DynamicGroupMetadata `protobuf:"bytes,5,opt,name=dynamic_group_metadata,json=dynamicGroupMetadata" json:"dynamic_group_metadata,omitempty"`
	// Required. The `EntityKey` of the `Group`.
	GroupKey *EntityKey `protobuf:"bytes,6,opt,name=group_key,json=groupKey" json:"group_key,omitempty"`
	// Required. One or more label entries that apply to the Group. Labels contain a key with an empty value. Google Groups are the default type of group and have a label with a key of `cloudidentity.googleapis.com/groups.discussion_forum` and an empty value. Existing Google Groups can have an additional label with a key of `cloudidentity.googleapis.com/groups.security` and an empty value added to them. **This is an immutable change and the security label cannot be removed once added.** Dynamic groups have a label with a key of `cloudidentity.googleapis.com/groups.dynamic`. Identity-mapped groups for Cloud Search have a label with a key of `system/groups/external` and an empty value. (Beta) Google Groups can be [locked](https://support.google.com/a?p=locked-groups). To lock a group, add a label with a key of `cloudidentity.googleapis.com/groups.locked` and an empty value. Doing so locks the group. To unlock the group, remove this label.
	Labels map[string]string `protobuf:"bytes,7,rep,name=labels" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Output only. The [resource name](https://cloud.google.com/apis/design/resource_names) of the `Group`. Shall be of the form `groups/{group_id}`.
	Name *string `protobuf:"bytes,8,opt,name=name" json:"name,omitempty"`
	// Required. Immutable. The resource name of the entity under which this `Group` resides in the Cloud Identity resource hierarchy. Must be of the form `identitysources/{identity_source}` for external [identity-mapped groups](https://support.google.com/a/answer/9039510) or `customers/{customer_id}` for Google Groups. The `customer_id` must begin with "C" (for example, 'C046psxkn'). [Find your customer ID.] (https://support.google.com/cloudidentity/answer/10070793)
	Parent *string `protobuf:"bytes,9,opt,name=parent" json:"parent,omitempty"`
	// Optional. The POSIX groups associated with the `Group`.
	PosixGroups []*PosixGroup `protobuf:"bytes,10,rep,name=posix_groups,json=posixGroups" json:"posix_groups,omitempty"`
	// Output only. The time when the `Group` was last updated.
	UpdateTime *timestamp.Timestamp `protobuf:"bytes,11,opt,name=update_time,json=updateTime" json:"update_time,omitempty"`
}

func (x *Group) Reset() {
	*x = Group{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Group) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Group) ProtoMessage() {}

func (x *Group) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Group.ProtoReflect.Descriptor instead.
func (*Group) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{64}
}

func (x *Group) GetAdditionalGroupKeys() []*EntityKey {
	if x != nil {
		return x.AdditionalGroupKeys
	}
	return nil
}

func (x *Group) GetCreateTime() *timestamp.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *Group) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *Group) GetDisplayName() string {
	if x != nil && x.DisplayName != nil {
		return *x.DisplayName
	}
	return ""
}

func (x *Group) GetDynamicGroupMetadata() *DynamicGroupMetadata {
	if x != nil {
		return x.DynamicGroupMetadata
	}
	return nil
}

func (x *Group) GetGroupKey() *EntityKey {
	if x != nil {
		return x.GroupKey
	}
	return nil
}

func (x *Group) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *Group) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Group) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

func (x *Group) GetPosixGroups() []*PosixGroup {
	if x != nil {
		return x.PosixGroups
	}
	return nil
}

func (x *Group) GetUpdateTime() *timestamp.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

// Message representing a transitive group of a user or a group.
type GroupRelation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Display name for this group.
	DisplayName *string `protobuf:"bytes,1,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	// Resource name for this group.
	Group *string `protobuf:"bytes,2,opt,name=group" json:"group,omitempty"`
	// Entity key has an id and a namespace. In case of discussion forums, the id will be an email address without a namespace.
	GroupKey *EntityKey `protobuf:"bytes,3,opt,name=group_key,json=groupKey" json:"group_key,omitempty"`
	// Labels for Group resource.
	Labels map[string]string `protobuf:"bytes,4,rep,name=labels" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// The relation between the member and the transitive group.
	RelationType *string `protobuf:"bytes,5,opt,name=relation_type,json=relationType" json:"relation_type,omitempty"`
	// Membership roles of the member for the group.
	Roles []*TransitiveMembershipRole `protobuf:"bytes,6,rep,name=roles" json:"roles,omitempty"`
}

func (x *GroupRelation) Reset() {
	*x = GroupRelation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupRelation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupRelation) ProtoMessage() {}

func (x *GroupRelation) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupRelation.ProtoReflect.Descriptor instead.
func (*GroupRelation) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{65}
}

func (x *GroupRelation) GetDisplayName() string {
	if x != nil && x.DisplayName != nil {
		return *x.DisplayName
	}
	return ""
}

func (x *GroupRelation) GetGroup() string {
	if x != nil && x.Group != nil {
		return *x.Group
	}
	return ""
}

func (x *GroupRelation) GetGroupKey() *EntityKey {
	if x != nil {
		return x.GroupKey
	}
	return nil
}

func (x *GroupRelation) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *GroupRelation) GetRelationType() string {
	if x != nil && x.RelationType != nil {
		return *x.RelationType
	}
	return ""
}

func (x *GroupRelation) GetRoles() []*TransitiveMembershipRole {
	if x != nil {
		return x.Roles
	}
	return nil
}

// Credential for verifying signatures produced by the Identity Provider.
type IdpCredential struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Output only. Information of a DSA public key.
	DsaKeyInfo *DsaPublicKeyInfo `protobuf:"bytes,1,opt,name=dsa_key_info,json=dsaKeyInfo" json:"dsa_key_info,omitempty"`
	// Output only. [Resource name](https://cloud.google.com/apis/design/resource_names) of the credential.
	Name *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	// Output only. Information of a RSA public key.
	RsaKeyInfo *RsaPublicKeyInfo `protobuf:"bytes,3,opt,name=rsa_key_info,json=rsaKeyInfo" json:"rsa_key_info,omitempty"`
	// Output only. Time when the `IdpCredential` was last updated.
	UpdateTime *timestamp.Timestamp `protobuf:"bytes,4,opt,name=update_time,json=updateTime" json:"update_time,omitempty"`
}

func (x *IdpCredential) Reset() {
	*x = IdpCredential{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdpCredential) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdpCredential) ProtoMessage() {}

func (x *IdpCredential) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdpCredential.ProtoReflect.Descriptor instead.
func (*IdpCredential) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{66}
}

func (x *IdpCredential) GetDsaKeyInfo() *DsaPublicKeyInfo {
	if x != nil {
		return x.DsaKeyInfo
	}
	return nil
}

func (x *IdpCredential) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *IdpCredential) GetRsaKeyInfo() *RsaPublicKeyInfo {
	if x != nil {
		return x.RsaKeyInfo
	}
	return nil
}

func (x *IdpCredential) GetUpdateTime() *timestamp.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

// A [SAML 2.0](https://www.oasis-open.org/standards#samlv2.0) federation between a Google enterprise customer and a SAML identity provider.
type InboundSamlSsoProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Immutable. The customer. For example: `customers/C0123abc`.
	Customer *string `protobuf:"bytes,1,opt,name=customer" json:"customer,omitempty"`
	// Human-readable name of the SAML SSO profile.
	DisplayName *string `protobuf:"bytes,2,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	// SAML identity provider configuration.
	IdpConfig *SamlIdpConfig `protobuf:"bytes,3,opt,name=idp_config,json=idpConfig" json:"idp_config,omitempty"`
	// Output only. [Resource name](https://cloud.google.com/apis/design/resource_names) of the SAML SSO profile.
	Name *string `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	// SAML service provider configuration for this SAML SSO profile. These are the service provider details provided by Google that should be configured on the corresponding identity provider.
	SpConfig *SamlSpConfig `protobuf:"bytes,5,opt,name=sp_config,json=spConfig" json:"sp_config,omitempty"`
}

func (x *InboundSamlSsoProfile) Reset() {
	*x = InboundSamlSsoProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InboundSamlSsoProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InboundSamlSsoProfile) ProtoMessage() {}

func (x *InboundSamlSsoProfile) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InboundSamlSsoProfile.ProtoReflect.Descriptor instead.
func (*InboundSamlSsoProfile) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{67}
}

func (x *InboundSamlSsoProfile) GetCustomer() string {
	if x != nil && x.Customer != nil {
		return *x.Customer
	}
	return ""
}

func (x *InboundSamlSsoProfile) GetDisplayName() string {
	if x != nil && x.DisplayName != nil {
		return *x.DisplayName
	}
	return ""
}

func (x *InboundSamlSsoProfile) GetIdpConfig() *SamlIdpConfig {
	if x != nil {
		return x.IdpConfig
	}
	return nil
}

func (x *InboundSamlSsoProfile) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *InboundSamlSsoProfile) GetSpConfig() *SamlSpConfig {
	if x != nil {
		return x.SpConfig
	}
	return nil
}

// Targets with "set" SSO assignments and their respective assignments.
type InboundSsoAssignment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Immutable. The customer. For example: `customers/C0123abc`.
	Customer *string `protobuf:"bytes,1,opt,name=customer" json:"customer,omitempty"`
	// Output only. [Resource name](https://cloud.google.com/apis/design/resource_names) of the Inbound SSO Assignment.
	Name *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	// Must be zero (which is the default value so it can be omitted) for assignments with `target_org_unit` set and must be greater-than-or-equal-to one for assignments with `target_group` set.
	Rank *int32 `protobuf:"varint,3,opt,name=rank" json:"rank,omitempty"`
	// SAML SSO details. Must be set if and only if `sso_mode` is set to `SAML_SSO`.
	SamlSsoInfo *SamlSsoInfo `protobuf:"bytes,4,opt,name=saml_sso_info,json=samlSsoInfo" json:"saml_sso_info,omitempty"`
	// Assertions about users assigned to an IdP will always be accepted from that IdP. This controls whether/when Google should redirect a user to the IdP. Unset (defaults) is the recommended configuration.
	SignInBehavior *SignInBehavior `protobuf:"bytes,5,opt,name=sign_in_behavior,json=signInBehavior" json:"sign_in_behavior,omitempty"`
	// Inbound SSO behavior.
	SsoMode *string `protobuf:"bytes,6,opt,name=sso_mode,json=ssoMode" json:"sso_mode,omitempty"`
	// Immutable. Must be of the form `groups/{group}`.
	TargetGroup *string `protobuf:"bytes,7,opt,name=target_group,json=targetGroup" json:"target_group,omitempty"`
	// Immutable. Must be of the form `orgUnits/{org_unit}`.
	TargetOrgUnit *string `protobuf:"bytes,8,opt,name=target_org_unit,json=targetOrgUnit" json:"target_org_unit,omitempty"`
}

func (x *InboundSsoAssignment) Reset() {
	*x = InboundSsoAssignment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InboundSsoAssignment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InboundSsoAssignment) ProtoMessage() {}

func (x *InboundSsoAssignment) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InboundSsoAssignment.ProtoReflect.Descriptor instead.
func (*InboundSsoAssignment) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{68}
}

func (x *InboundSsoAssignment) GetCustomer() string {
	if x != nil && x.Customer != nil {
		return *x.Customer
	}
	return ""
}

func (x *InboundSsoAssignment) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *InboundSsoAssignment) GetRank() int32 {
	if x != nil && x.Rank != nil {
		return *x.Rank
	}
	return 0
}

func (x *InboundSsoAssignment) GetSamlSsoInfo() *SamlSsoInfo {
	if x != nil {
		return x.SamlSsoInfo
	}
	return nil
}

func (x *InboundSsoAssignment) GetSignInBehavior() *SignInBehavior {
	if x != nil {
		return x.SignInBehavior
	}
	return nil
}

func (x *InboundSsoAssignment) GetSsoMode() string {
	if x != nil && x.SsoMode != nil {
		return *x.SsoMode
	}
	return ""
}

func (x *InboundSsoAssignment) GetTargetGroup() string {
	if x != nil && x.TargetGroup != nil {
		return *x.TargetGroup
	}
	return ""
}

func (x *InboundSsoAssignment) GetTargetOrgUnit() string {
	if x != nil && x.TargetOrgUnit != nil {
		return *x.TargetOrgUnit
	}
	return ""
}

// Response for IsInvitableUser RPC.
type IsInvitableUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Returns true if the email address is invitable.
	IsInvitableUser *bool `protobuf:"varint,1,opt,name=is_invitable_user,json=isInvitableUser" json:"is_invitable_user,omitempty"`
}

func (x *IsInvitableUserResponse) Reset() {
	*x = IsInvitableUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsInvitableUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsInvitableUserResponse) ProtoMessage() {}

func (x *IsInvitableUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsInvitableUserResponse.ProtoReflect.Descriptor instead.
func (*IsInvitableUserResponse) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{69}
}

func (x *IsInvitableUserResponse) GetIsInvitableUser() bool {
	if x != nil && x.IsInvitableUser != nil {
		return *x.IsInvitableUser
	}
	return false
}

// Response message that is returned in LRO result of ListClientStates Operation.
type ListClientStatesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Client states meeting the list restrictions.
	ClientStates []*ClientState `protobuf:"bytes,1,rep,name=client_states,json=clientStates" json:"client_states,omitempty"`
	// Token to retrieve the next page of results. Empty if there are no more results.
	NextPageToken *string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken" json:"next_page_token,omitempty"`
}

func (x *ListClientStatesResponse) Reset() {
	*x = ListClientStatesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListClientStatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClientStatesResponse) ProtoMessage() {}

func (x *ListClientStatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClientStatesResponse.ProtoReflect.Descriptor instead.
func (*ListClientStatesResponse) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{70}
}

func (x *ListClientStatesResponse) GetClientStates() []*ClientState {
	if x != nil {
		return x.ClientStates
	}
	return nil
}

func (x *ListClientStatesResponse) GetNextPageToken() string {
	if x != nil && x.NextPageToken != nil {
		return *x.NextPageToken
	}
	return ""
}

// Response message that is returned from the ListDeviceUsers method.
type ListDeviceUsersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Devices meeting the list restrictions.
	DeviceUsers []*DeviceUser `protobuf:"bytes,1,rep,name=device_users,json=deviceUsers" json:"device_users,omitempty"`
	// Token to retrieve the next page of results. Empty if there are no more results.
	NextPageToken *string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken" json:"next_page_token,omitempty"`
}

func (x *ListDeviceUsersResponse) Reset() {
	*x = ListDeviceUsersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDeviceUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDeviceUsersResponse) ProtoMessage() {}

func (x *ListDeviceUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDeviceUsersResponse.ProtoReflect.Descriptor instead.
func (*ListDeviceUsersResponse) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{71}
}

func (x *ListDeviceUsersResponse) GetDeviceUsers() []*DeviceUser {
	if x != nil {
		return x.DeviceUsers
	}
	return nil
}

func (x *ListDeviceUsersResponse) GetNextPageToken() string {
	if x != nil && x.NextPageToken != nil {
		return *x.NextPageToken
	}
	return ""
}

// Response message that is returned from the ListDevices method.
type ListDevicesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Devices meeting the list restrictions.
	Devices []*Device `protobuf:"bytes,1,rep,name=devices" json:"devices,omitempty"`
	// Token to retrieve the next page of results. Empty if there are no more results.
	NextPageToken *string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken" json:"next_page_token,omitempty"`
}

func (x *ListDevicesResponse) Reset() {
	*x = ListDevicesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDevicesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDevicesResponse) ProtoMessage() {}

func (x *ListDevicesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDevicesResponse.ProtoReflect.Descriptor instead.
func (*ListDevicesResponse) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{72}
}

func (x *ListDevicesResponse) GetDevices() []*Device {
	if x != nil {
		return x.Devices
	}
	return nil
}

func (x *ListDevicesResponse) GetNextPageToken() string {
	if x != nil && x.NextPageToken != nil {
		return *x.NextPageToken
	}
	return ""
}

// The response message for GroupsService.ListGroups.
type ListGroupsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The `Group` resources under the specified `parent`.
	Groups []*Group `protobuf:"bytes,1,rep,name=groups" json:"groups,omitempty"`
	// A continuation token to retrieve the next page of results, or empty if there are no more results available.
	NextPageToken *string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken" json:"next_page_token,omitempty"`
}

func (x *ListGroupsResponse) Reset() {
	*x = ListGroupsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGroupsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGroupsResponse) ProtoMessage() {}

func (x *ListGroupsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGroupsResponse.ProtoReflect.Descriptor instead.
func (*ListGroupsResponse) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{73}
}

func (x *ListGroupsResponse) GetGroups() []*Group {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *ListGroupsResponse) GetNextPageToken() string {
	if x != nil && x.NextPageToken != nil {
		return *x.NextPageToken
	}
	return ""
}

// Response of the InboundSamlSsoProfilesService.ListIdpCredentials method.
type ListIdpCredentialsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The IdpCredentials from the specified InboundSamlSsoProfile.
	IdpCredentials []*IdpCredential `protobuf:"bytes,1,rep,name=idp_credentials,json=idpCredentials" json:"idp_credentials,omitempty"`
	// A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
	NextPageToken *string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken" json:"next_page_token,omitempty"`
}

func (x *ListIdpCredentialsResponse) Reset() {
	*x = ListIdpCredentialsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListIdpCredentialsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListIdpCredentialsResponse) ProtoMessage() {}

func (x *ListIdpCredentialsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListIdpCredentialsResponse.ProtoReflect.Descriptor instead.
func (*ListIdpCredentialsResponse) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{74}
}

func (x *ListIdpCredentialsResponse) GetIdpCredentials() []*IdpCredential {
	if x != nil {
		return x.IdpCredentials
	}
	return nil
}

func (x *ListIdpCredentialsResponse) GetNextPageToken() string {
	if x != nil && x.NextPageToken != nil {
		return *x.NextPageToken
	}
	return ""
}

// Response of the InboundSamlSsoProfilesService.ListInboundSamlSsoProfiles method.
type ListInboundSamlSsoProfilesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of InboundSamlSsoProfiles.
	InboundSamlSsoProfiles []*InboundSamlSsoProfile `protobuf:"bytes,1,rep,name=inbound_saml_sso_profiles,json=inboundSamlSsoProfiles" json:"inbound_saml_sso_profiles,omitempty"`
	// A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
	NextPageToken *string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken" json:"next_page_token,omitempty"`
}

func (x *ListInboundSamlSsoProfilesResponse) Reset() {
	*x = ListInboundSamlSsoProfilesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListInboundSamlSsoProfilesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInboundSamlSsoProfilesResponse) ProtoMessage() {}

func (x *ListInboundSamlSsoProfilesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInboundSamlSsoProfilesResponse.ProtoReflect.Descriptor instead.
func (*ListInboundSamlSsoProfilesResponse) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{75}
}

func (x *ListInboundSamlSsoProfilesResponse) GetInboundSamlSsoProfiles() []*InboundSamlSsoProfile {
	if x != nil {
		return x.InboundSamlSsoProfiles
	}
	return nil
}

func (x *ListInboundSamlSsoProfilesResponse) GetNextPageToken() string {
	if x != nil && x.NextPageToken != nil {
		return *x.NextPageToken
	}
	return ""
}

// Response of the InboundSsoAssignmentsService.ListInboundSsoAssignments method.
type ListInboundSsoAssignmentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The assignments.
	InboundSsoAssignments []*InboundSsoAssignment `protobuf:"bytes,1,rep,name=inbound_sso_assignments,json=inboundSsoAssignments" json:"inbound_sso_assignments,omitempty"`
	// A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
	NextPageToken *string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken" json:"next_page_token,omitempty"`
}

func (x *ListInboundSsoAssignmentsResponse) Reset() {
	*x = ListInboundSsoAssignmentsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListInboundSsoAssignmentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInboundSsoAssignmentsResponse) ProtoMessage() {}

func (x *ListInboundSsoAssignmentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInboundSsoAssignmentsResponse.ProtoReflect.Descriptor instead.
func (*ListInboundSsoAssignmentsResponse) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{76}
}

func (x *ListInboundSsoAssignmentsResponse) GetInboundSsoAssignments() []*InboundSsoAssignment {
	if x != nil {
		return x.InboundSsoAssignments
	}
	return nil
}

func (x *ListInboundSsoAssignmentsResponse) GetNextPageToken() string {
	if x != nil && x.NextPageToken != nil {
		return *x.NextPageToken
	}
	return ""
}

// The response message for MembershipsService.ListMemberships.
type ListMembershipsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The `Membership`s under the specified `parent`.
	Memberships []*Membership `protobuf:"bytes,1,rep,name=memberships" json:"memberships,omitempty"`
	// A continuation token to retrieve the next page of results, or empty if there are no more results available.
	NextPageToken *string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken" json:"next_page_token,omitempty"`
}

func (x *ListMembershipsResponse) Reset() {
	*x = ListMembershipsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMembershipsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMembershipsResponse) ProtoMessage() {}

func (x *ListMembershipsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMembershipsResponse.ProtoReflect.Descriptor instead.
func (*ListMembershipsResponse) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{77}
}

func (x *ListMembershipsResponse) GetMemberships() []*Membership {
	if x != nil {
		return x.Memberships
	}
	return nil
}

func (x *ListMembershipsResponse) GetNextPageToken() string {
	if x != nil && x.NextPageToken != nil {
		return *x.NextPageToken
	}
	return ""
}

// The response message for OrgMembershipsService.ListOrgMemberships.
type ListOrgMembershipsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A token, which can be sent as `page_token` to retrieve the next page. If this field is empty, there are no subsequent pages.
	NextPageToken *string `protobuf:"bytes,1,opt,name=next_page_token,json=nextPageToken" json:"next_page_token,omitempty"`
	// The non-vacuous membership in an orgUnit.
	OrgMemberships []*OrgMembership `protobuf:"bytes,2,rep,name=org_memberships,json=orgMemberships" json:"org_memberships,omitempty"`
}

func (x *ListOrgMembershipsResponse) Reset() {
	*x = ListOrgMembershipsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrgMembershipsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrgMembershipsResponse) ProtoMessage() {}

func (x *ListOrgMembershipsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrgMembershipsResponse.ProtoReflect.Descriptor instead.
func (*ListOrgMembershipsResponse) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{78}
}

func (x *ListOrgMembershipsResponse) GetNextPageToken() string {
	if x != nil && x.NextPageToken != nil {
		return *x.NextPageToken
	}
	return ""
}

func (x *ListOrgMembershipsResponse) GetOrgMemberships() []*OrgMembership {
	if x != nil {
		return x.OrgMemberships
	}
	return nil
}

// The response message for PoliciesService.ListPolicies.
type ListPoliciesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The pagination token to retrieve the next page of results. If this field is empty, there are no subsequent pages.
	NextPageToken *string `protobuf:"bytes,1,opt,name=next_page_token,json=nextPageToken" json:"next_page_token,omitempty"`
	// The results
	Policies []*Policy `protobuf:"bytes,2,rep,name=policies" json:"policies,omitempty"`
}

func (x *ListPoliciesResponse) Reset() {
	*x = ListPoliciesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPoliciesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPoliciesResponse) ProtoMessage() {}

func (x *ListPoliciesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPoliciesResponse.ProtoReflect.Descriptor instead.
func (*ListPoliciesResponse) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{79}
}

func (x *ListPoliciesResponse) GetNextPageToken() string {
	if x != nil && x.NextPageToken != nil {
		return *x.NextPageToken
	}
	return ""
}

func (x *ListPoliciesResponse) GetPolicies() []*Policy {
	if x != nil {
		return x.Policies
	}
	return nil
}

// Response message for UserInvitation listing request.
type ListUserInvitationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The token for the next page. If not empty, indicates that there may be more `UserInvitation` resources that match the listing request; this value can be used in a subsequent ListUserInvitationsRequest to get continued results with the current list call.
	NextPageToken *string `protobuf:"bytes,1,opt,name=next_page_token,json=nextPageToken" json:"next_page_token,omitempty"`
	// The list of UserInvitation resources.
	UserInvitations []*UserInvitation `protobuf:"bytes,2,rep,name=user_invitations,json=userInvitations" json:"user_invitations,omitempty"`
}

func (x *ListUserInvitationsResponse) Reset() {
	*x = ListUserInvitationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserInvitationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserInvitationsResponse) ProtoMessage() {}

func (x *ListUserInvitationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserInvitationsResponse.ProtoReflect.Descriptor instead.
func (*ListUserInvitationsResponse) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{80}
}

func (x *ListUserInvitationsResponse) GetNextPageToken() string {
	if x != nil && x.NextPageToken != nil {
		return *x.NextPageToken
	}
	return ""
}

func (x *ListUserInvitationsResponse) GetUserInvitations() []*UserInvitation {
	if x != nil {
		return x.UserInvitations
	}
	return nil
}

// The response message for GroupsService.LookupGroupName.
type LookupGroupNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Output only. The [resource name](https://cloud.google.com/apis/design/resource_names) of the looked-up `Group`.
	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *LookupGroupNameResponse) Reset() {
	*x = LookupGroupNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LookupGroupNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LookupGroupNameResponse) ProtoMessage() {}

func (x *LookupGroupNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LookupGroupNameResponse.ProtoReflect.Descriptor instead.
func (*LookupGroupNameResponse) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{81}
}

func (x *LookupGroupNameResponse) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

// The response message for MembershipsService.LookupMembershipName.
type LookupMembershipNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The [resource name](https://cloud.google.com/apis/design/resource_names) of the looked-up `Membership`. Must be of the form `groups/{group_id}/memberships/{membership_id}`.
	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *LookupMembershipNameResponse) Reset() {
	*x = LookupMembershipNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LookupMembershipNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LookupMembershipNameResponse) ProtoMessage() {}

func (x *LookupMembershipNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LookupMembershipNameResponse.ProtoReflect.Descriptor instead.
func (*LookupMembershipNameResponse) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{82}
}

func (x *LookupMembershipNameResponse) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

// Response containing resource names of the DeviceUsers associated with the caller's credentials.
type LookupSelfDeviceUsersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The customer Id that may be passed back to other Devices API methods such as List, Get, etc.
	Customer *string `protobuf:"bytes,1,opt,name=customer" json:"customer,omitempty"`
	// [Resource names](https://cloud.google.com/apis/design/resource_names) of the DeviceUsers in the format: `devices/{device_id}/deviceUsers/{user_resource_id}`, where device_id is the unique ID assigned to a Device and user_resource_id is the unique user ID
	Names []string `protobuf:"bytes,2,rep,name=names" json:"names,omitempty"`
	// Token to retrieve the next page of results. Empty if there are no more results.
	NextPageToken *string `protobuf:"bytes,3,opt,name=next_page_token,json=nextPageToken" json:"next_page_token,omitempty"`
}

func (x *LookupSelfDeviceUsersResponse) Reset() {
	*x = LookupSelfDeviceUsersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LookupSelfDeviceUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LookupSelfDeviceUsersResponse) ProtoMessage() {}

func (x *LookupSelfDeviceUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LookupSelfDeviceUsersResponse.ProtoReflect.Descriptor instead.
func (*LookupSelfDeviceUsersResponse) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{83}
}

func (x *LookupSelfDeviceUsersResponse) GetCustomer() string {
	if x != nil && x.Customer != nil {
		return *x.Customer
	}
	return ""
}

func (x *LookupSelfDeviceUsersResponse) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

func (x *LookupSelfDeviceUsersResponse) GetNextPageToken() string {
	if x != nil && x.NextPageToken != nil {
		return *x.NextPageToken
	}
	return ""
}

// Message representing a transitive membership of a group.
type MemberRelation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Resource name for this member.
	Member *string `protobuf:"bytes,1,opt,name=member" json:"member,omitempty"`
	// Entity key has an id and a namespace. In case of discussion forums, the id will be an email address without a namespace.
	PreferredMemberKey []*EntityKey `protobuf:"bytes,2,rep,name=preferred_member_key,json=preferredMemberKey" json:"preferred_member_key,omitempty"`
	// The relation between the group and the transitive membership.
	RelationType *string `protobuf:"bytes,3,opt,name=relation_type,json=relationType" json:"relation_type,omitempty"`
	// The membership role details (i.e name of role and expiry time).
	Roles []*TransitiveMembershipRole `protobuf:"bytes,4,rep,name=roles" json:"roles,omitempty"`
}

func (x *MemberRelation) Reset() {
	*x = MemberRelation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberRelation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberRelation) ProtoMessage() {}

func (x *MemberRelation) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberRelation.ProtoReflect.Descriptor instead.
func (*MemberRelation) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{84}
}

func (x *MemberRelation) GetMember() string {
	if x != nil && x.Member != nil {
		return *x.Member
	}
	return ""
}

func (x *MemberRelation) GetPreferredMemberKey() []*EntityKey {
	if x != nil {
		return x.PreferredMemberKey
	}
	return nil
}

func (x *MemberRelation) GetRelationType() string {
	if x != nil && x.RelationType != nil {
		return *x.RelationType
	}
	return ""
}

func (x *MemberRelation) GetRoles() []*TransitiveMembershipRole {
	if x != nil {
		return x.Roles
	}
	return nil
}

// The definition of MemberRestriction
type MemberRestriction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The evaluated state of this restriction on a group.
	Evaluation *RestrictionEvaluation `protobuf:"bytes,1,opt,name=evaluation" json:"evaluation,omitempty"`
	// Member Restriction as defined by CEL expression. Supported restrictions are: `member.customer_id` and `member.type`. Valid values for `member.type` are `1`, `2` and `3`. They correspond to USER, SERVICE_ACCOUNT, and GROUP respectively. The value for `member.customer_id` only supports `groupCustomerId()` currently which means the customer id of the group will be used for restriction. Supported operators are `&&`, `||` and `==`, corresponding to AND, OR, and EQUAL. Examples: Allow only service accounts of given customer to be members. `member.type == 2 && member.customer_id == groupCustomerId()` Allow only users or groups to be members. `member.type == 1 || member.type == 3`
	Query *string `protobuf:"bytes,2,opt,name=query" json:"query,omitempty"`
}

func (x *MemberRestriction) Reset() {
	*x = MemberRestriction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberRestriction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberRestriction) ProtoMessage() {}

func (x *MemberRestriction) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberRestriction.ProtoReflect.Descriptor instead.
func (*MemberRestriction) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{85}
}

func (x *MemberRestriction) GetEvaluation() *RestrictionEvaluation {
	if x != nil {
		return x.Evaluation
	}
	return nil
}

func (x *MemberRestriction) GetQuery() string {
	if x != nil && x.Query != nil {
		return *x.Query
	}
	return ""
}

// A membership within the Cloud Identity Groups API. A `Membership` defines a relationship between a `Group` and an entity belonging to that `Group`, referred to as a "member".
type Membership struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Output only. The time when the `Membership` was created.
	CreateTime *timestamp.Timestamp `protobuf:"bytes,1,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	// Output only. Delivery setting associated with the membership.
	DeliverySetting *string `protobuf:"bytes,2,opt,name=delivery_setting,json=deliverySetting" json:"delivery_setting,omitempty"`
	// Immutable. The `EntityKey` of the member. Either `member_key` or `preferred_member_key` must be set when calling MembershipsService.CreateMembership but not both; both shall be set when returned.
	MemberKey *EntityKey `protobuf:"bytes,3,opt,name=member_key,json=memberKey" json:"member_key,omitempty"`
	// Output only. The [resource name](https://cloud.google.com/apis/design/resource_names) of the `Membership`. Shall be of the form `groups/{group_id}/memberships/{membership_id}`.
	Name *string `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	// Required. Immutable. The `EntityKey` of the member. Either `member_key` or `preferred_member_key` must be set when calling MembershipsService.CreateMembership but not both; both shall be set when returned.
	PreferredMemberKey *EntityKey `protobuf:"bytes,5,opt,name=preferred_member_key,json=preferredMemberKey" json:"preferred_member_key,omitempty"`
	// The `MembershipRole`s that apply to the `Membership`. If unspecified, defaults to a single `MembershipRole` with `name` `MEMBER`. Must not contain duplicate `MembershipRole`s with the same `name`.
	Roles []*MembershipRole `protobuf:"bytes,6,rep,name=roles" json:"roles,omitempty"`
	// Output only. The type of the membership.
	Type *string `protobuf:"bytes,7,opt,name=type" json:"type,omitempty"`
	// Output only. The time when the `Membership` was last updated.
	UpdateTime *timestamp.Timestamp `protobuf:"bytes,8,opt,name=update_time,json=updateTime" json:"update_time,omitempty"`
}

func (x *Membership) Reset() {
	*x = Membership{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Membership) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Membership) ProtoMessage() {}

func (x *Membership) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Membership.ProtoReflect.Descriptor instead.
func (*Membership) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{86}
}

func (x *Membership) GetCreateTime() *timestamp.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *Membership) GetDeliverySetting() string {
	if x != nil && x.DeliverySetting != nil {
		return *x.DeliverySetting
	}
	return ""
}

func (x *Membership) GetMemberKey() *EntityKey {
	if x != nil {
		return x.MemberKey
	}
	return nil
}

func (x *Membership) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Membership) GetPreferredMemberKey() *EntityKey {
	if x != nil {
		return x.PreferredMemberKey
	}
	return nil
}

func (x *Membership) GetRoles() []*MembershipRole {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *Membership) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *Membership) GetUpdateTime() *timestamp.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

// Membership graph's path information as an adjacency list.
type MembershipAdjacencyList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Each edge contains information about the member that belongs to this group. Note: Fields returned here will help identify the specific Membership resource (e.g `name`, `preferred_member_key` and `role`), but may not be a comprehensive list of all fields.
	Edges []*Membership `protobuf:"bytes,1,rep,name=edges" json:"edges,omitempty"`
	// Resource name of the group that the members belong to.
	Group *string `protobuf:"bytes,2,opt,name=group" json:"group,omitempty"`
}

func (x *MembershipAdjacencyList) Reset() {
	*x = MembershipAdjacencyList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MembershipAdjacencyList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MembershipAdjacencyList) ProtoMessage() {}

func (x *MembershipAdjacencyList) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MembershipAdjacencyList.ProtoReflect.Descriptor instead.
func (*MembershipAdjacencyList) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{87}
}

func (x *MembershipAdjacencyList) GetEdges() []*Membership {
	if x != nil {
		return x.Edges
	}
	return nil
}

func (x *MembershipAdjacencyList) GetGroup() string {
	if x != nil && x.Group != nil {
		return *x.Group
	}
	return ""
}

// Message containing membership relation.
type MembershipRelation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// An extended description to help users determine the purpose of a `Group`.
	Description *string `protobuf:"bytes,1,opt,name=description" json:"description,omitempty"`
	// The display name of the `Group`.
	DisplayName *string `protobuf:"bytes,2,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	// The [resource name](https://cloud.google.com/apis/design/resource_names) of the `Group`. Shall be of the form `groups/{group_id}`.
	Group *string `protobuf:"bytes,3,opt,name=group" json:"group,omitempty"`
	// The `EntityKey` of the `Group`.
	GroupKey *EntityKey `protobuf:"bytes,4,opt,name=group_key,json=groupKey" json:"group_key,omitempty"`
	// One or more label entries that apply to the Group. Currently supported labels contain a key with an empty value.
	Labels map[string]string `protobuf:"bytes,5,rep,name=labels" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// The [resource name](https://cloud.google.com/apis/design/resource_names) of the `Membership`. Shall be of the form `groups/{group_id}/memberships/{membership_id}`.
	Membership *string `protobuf:"bytes,6,opt,name=membership" json:"membership,omitempty"`
	// The `MembershipRole`s that apply to the `Membership`.
	Roles []*MembershipRole `protobuf:"bytes,7,rep,name=roles" json:"roles,omitempty"`
}

func (x *MembershipRelation) Reset() {
	*x = MembershipRelation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MembershipRelation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MembershipRelation) ProtoMessage() {}

func (x *MembershipRelation) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MembershipRelation.ProtoReflect.Descriptor instead.
func (*MembershipRelation) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{88}
}

func (x *MembershipRelation) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *MembershipRelation) GetDisplayName() string {
	if x != nil && x.DisplayName != nil {
		return *x.DisplayName
	}
	return ""
}

func (x *MembershipRelation) GetGroup() string {
	if x != nil && x.Group != nil {
		return *x.Group
	}
	return ""
}

func (x *MembershipRelation) GetGroupKey() *EntityKey {
	if x != nil {
		return x.GroupKey
	}
	return nil
}

func (x *MembershipRelation) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *MembershipRelation) GetMembership() string {
	if x != nil && x.Membership != nil {
		return *x.Membership
	}
	return ""
}

func (x *MembershipRelation) GetRoles() []*MembershipRole {
	if x != nil {
		return x.Roles
	}
	return nil
}

// A membership role within the Cloud Identity Groups API. A `MembershipRole` defines the privileges granted to a `Membership`.
type MembershipRole struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The expiry details of the `MembershipRole`. Expiry details are only supported for `MEMBER` `MembershipRoles`. May be set if `name` is `MEMBER`. Must not be set if `name` is any other value.
	ExpiryDetail *ExpiryDetail `protobuf:"bytes,1,opt,name=expiry_detail,json=expiryDetail" json:"expiry_detail,omitempty"`
	// The name of the `MembershipRole`. Must be one of `OWNER`, `MANAGER`, `MEMBER`.
	Name *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	// Evaluations of restrictions applied to parent group on this membership.
	RestrictionEvaluations *RestrictionEvaluations `protobuf:"bytes,3,opt,name=restriction_evaluations,json=restrictionEvaluations" json:"restriction_evaluations,omitempty"`
}

func (x *MembershipRole) Reset() {
	*x = MembershipRole{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MembershipRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MembershipRole) ProtoMessage() {}

func (x *MembershipRole) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MembershipRole.ProtoReflect.Descriptor instead.
func (*MembershipRole) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{89}
}

func (x *MembershipRole) GetExpiryDetail() *ExpiryDetail {
	if x != nil {
		return x.ExpiryDetail
	}
	return nil
}

func (x *MembershipRole) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *MembershipRole) GetRestrictionEvaluations() *RestrictionEvaluations {
	if x != nil {
		return x.RestrictionEvaluations
	}
	return nil
}

// The evaluated state of this restriction.
type MembershipRoleRestrictionEvaluation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Output only. The current state of the restriction
	State *string `protobuf:"bytes,1,opt,name=state" json:"state,omitempty"`
}

func (x *MembershipRoleRestrictionEvaluation) Reset() {
	*x = MembershipRoleRestrictionEvaluation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MembershipRoleRestrictionEvaluation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MembershipRoleRestrictionEvaluation) ProtoMessage() {}

func (x *MembershipRoleRestrictionEvaluation) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MembershipRoleRestrictionEvaluation.ProtoReflect.Descriptor instead.
func (*MembershipRoleRestrictionEvaluation) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{90}
}

func (x *MembershipRoleRestrictionEvaluation) GetState() string {
	if x != nil && x.State != nil {
		return *x.State
	}
	return ""
}

// The request message for MembershipsService.ModifyMembershipRoles.
type ModifyMembershipRolesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The `MembershipRole`s to be added. Adding or removing roles in the same request as updating roles is not supported. Must not be set if `update_roles_params` is set.
	AddRoles []*MembershipRole `protobuf:"bytes,1,rep,name=add_roles,json=addRoles" json:"add_roles,omitempty"`
	// The `name`s of the `MembershipRole`s to be removed. Adding or removing roles in the same request as updating roles is not supported. It is not possible to remove the `MEMBER` `MembershipRole`. If you wish to delete a `Membership`, call MembershipsService.DeleteMembership instead. Must not contain `MEMBER`. Must not be set if `update_roles_params` is set.
	RemoveRoles []string `protobuf:"bytes,2,rep,name=remove_roles,json=removeRoles" json:"remove_roles,omitempty"`
	// The `MembershipRole`s to be updated. Updating roles in the same request as adding or removing roles is not supported. Must not be set if either `add_roles` or `remove_roles` is set.
	UpdateRolesParams []*UpdateMembershipRolesParams `protobuf:"bytes,3,rep,name=update_roles_params,json=updateRolesParams" json:"update_roles_params,omitempty"`
}

func (x *ModifyMembershipRolesRequest) Reset() {
	*x = ModifyMembershipRolesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyMembershipRolesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyMembershipRolesRequest) ProtoMessage() {}

func (x *ModifyMembershipRolesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyMembershipRolesRequest.ProtoReflect.Descriptor instead.
func (*ModifyMembershipRolesRequest) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{91}
}

func (x *ModifyMembershipRolesRequest) GetAddRoles() []*MembershipRole {
	if x != nil {
		return x.AddRoles
	}
	return nil
}

func (x *ModifyMembershipRolesRequest) GetRemoveRoles() []string {
	if x != nil {
		return x.RemoveRoles
	}
	return nil
}

func (x *ModifyMembershipRolesRequest) GetUpdateRolesParams() []*UpdateMembershipRolesParams {
	if x != nil {
		return x.UpdateRolesParams
	}
	return nil
}

// The response message for MembershipsService.ModifyMembershipRoles.
type ModifyMembershipRolesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The `Membership` resource after modifying its `MembershipRole`s.
	Membership *Membership `protobuf:"bytes,1,opt,name=membership" json:"membership,omitempty"`
}

func (x *ModifyMembershipRolesResponse) Reset() {
	*x = ModifyMembershipRolesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyMembershipRolesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyMembershipRolesResponse) ProtoMessage() {}

func (x *ModifyMembershipRolesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyMembershipRolesResponse.ProtoReflect.Descriptor instead.
func (*ModifyMembershipRolesResponse) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{92}
}

func (x *ModifyMembershipRolesResponse) GetMembership() *Membership {
	if x != nil {
		return x.Membership
	}
	return nil
}

// The request message for OrgMembershipsService.MoveOrgMembership.
type MoveOrgMembershipRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. Immutable. Customer on whose membership change is made. All authorization will happen on the role assignments of this customer. Format: customers/{$customerId} where `$customerId` is the `id` from the [Admin SDK `Customer` resource](https://developers.google.com/admin-sdk/directory/reference/rest/v1/customers). You may also use `customers/my_customer` to specify your own organization.
	Customer *string `protobuf:"bytes,1,opt,name=customer" json:"customer,omitempty"`
	// Required. Immutable. OrgUnit where the membership will be moved to. Format: orgUnits/{$orgUnitId} where `$orgUnitId` is the `orgUnitId` from the [Admin SDK `OrgUnit` resource](https://developers.google.com/admin-sdk/directory/reference/rest/v1/orgunits).
	DestinationOrgUnit *string `protobuf:"bytes,2,opt,name=destination_org_unit,json=destinationOrgUnit" json:"destination_org_unit,omitempty"`
}

func (x *MoveOrgMembershipRequest) Reset() {
	*x = MoveOrgMembershipRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoveOrgMembershipRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveOrgMembershipRequest) ProtoMessage() {}

func (x *MoveOrgMembershipRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveOrgMembershipRequest.ProtoReflect.Descriptor instead.
func (*MoveOrgMembershipRequest) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{93}
}

func (x *MoveOrgMembershipRequest) GetCustomer() string {
	if x != nil && x.Customer != nil {
		return *x.Customer
	}
	return ""
}

func (x *MoveOrgMembershipRequest) GetDestinationOrgUnit() string {
	if x != nil && x.DestinationOrgUnit != nil {
		return *x.DestinationOrgUnit
	}
	return ""
}

// A membership in an OrgUnit. An `OrgMembership` defines a relationship between an `OrgUnit` and an entity belonging to that `OrgUnit`, referred to as a "member".
type OrgMembership struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Immutable. Org member id as full resource name. Format for shared drive resource: //drive.googleapis.com/drives/{$memberId} where `$memberId` is the `id` from [Drive API (V3) `Drive` resource](https://developers.google.com/drive/api/v3/reference/drives#resource).
	Member *string `protobuf:"bytes,1,opt,name=member" json:"member,omitempty"`
	// Uri with which you can read the member. This follows https://aip.dev/122 Format for shared drive resource: https://drive.googleapis.com/drive/v3/drives/{$memberId} where `$memberId` is the `id` from [Drive API (V3) `Drive` resource](https://developers.google.com/drive/api/v3/reference/drives#resource).
	MemberUri *string `protobuf:"bytes,2,opt,name=member_uri,json=memberUri" json:"member_uri,omitempty"`
	// Required. Immutable. The [resource name](https://cloud.google.com/apis/design/resource_names) of the OrgMembership. Format: orgUnits/{$orgUnitId}/memberships/{$membership} The `$orgUnitId` is the `orgUnitId` from the [Admin SDK `OrgUnit` resource](https://developers.google.com/admin-sdk/directory/reference/rest/v1/orgunits). The `$membership` shall be of the form `{$entityType};{$memberId}`, where `$entityType` is the enum value of [OrgMembership.EntityType], and `memberId` is the `id` from [Drive API (V3) `Drive` resource](https://developers.google.com/drive/api/v3/reference/drives#resource) for OrgMembership.EntityType.SHARED_DRIVE.
	Name *string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	// Immutable. Entity type for the org member.
	Type *string `protobuf:"bytes,4,opt,name=type" json:"type,omitempty"`
}

func (x *OrgMembership) Reset() {
	*x = OrgMembership{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrgMembership) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrgMembership) ProtoMessage() {}

func (x *OrgMembership) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrgMembership.ProtoReflect.Descriptor instead.
func (*OrgMembership) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{94}
}

func (x *OrgMembership) GetMember() string {
	if x != nil && x.Member != nil {
		return *x.Member
	}
	return ""
}

func (x *OrgMembership) GetMemberUri() string {
	if x != nil && x.MemberUri != nil {
		return *x.MemberUri
	}
	return ""
}

func (x *OrgMembership) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *OrgMembership) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

// A Policy resource binds an instance of a single Setting with the scope of a PolicyQuery. The Setting instance will be applied to all entities that satisfy the query.
type Policy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Immutable. Customer that the Policy belongs to. The value is in the format 'customers/{customerId}'. The `customerId` must begin with "C" To find your customer ID in Admin Console see https://support.google.com/a/answer/10070793.
	Customer *string `protobuf:"bytes,1,opt,name=customer" json:"customer,omitempty"`
	// Output only. Identifier. The [resource name](https://cloud.google.com/apis/design/resource_names) of the Policy. Format: policies/{policy}.
	Name *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	// Required. The PolicyQuery the Setting applies to.
	PolicyQuery *PolicyQuery `protobuf:"bytes,3,opt,name=policy_query,json=policyQuery" json:"policy_query,omitempty"`
	// Required. The Setting configured by this Policy.
	Setting *Setting `protobuf:"bytes,4,opt,name=setting" json:"setting,omitempty"`
	// Output only. The type of the policy.
	Type *string `protobuf:"bytes,5,opt,name=type" json:"type,omitempty"`
}

func (x *Policy) Reset() {
	*x = Policy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Policy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Policy) ProtoMessage() {}

func (x *Policy) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Policy.ProtoReflect.Descriptor instead.
func (*Policy) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{95}
}

func (x *Policy) GetCustomer() string {
	if x != nil && x.Customer != nil {
		return *x.Customer
	}
	return ""
}

func (x *Policy) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Policy) GetPolicyQuery() *PolicyQuery {
	if x != nil {
		return x.PolicyQuery
	}
	return nil
}

func (x *Policy) GetSetting() *Setting {
	if x != nil {
		return x.Setting
	}
	return nil
}

func (x *Policy) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

// PolicyQuery
type PolicyQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Immutable. The group that the query applies to. This field is only set if there is a single value for group that satisfies all clauses of the query. If no group applies, this will be the empty string.
	Group *string `protobuf:"bytes,1,opt,name=group" json:"group,omitempty"`
	// Required. Immutable. Non-empty default. The OrgUnit the query applies to. This field is only set if there is a single value for org_unit that satisfies all clauses of the query.
	OrgUnit *string `protobuf:"bytes,2,opt,name=org_unit,json=orgUnit" json:"org_unit,omitempty"`
	// Immutable. The CEL query that defines which entities the Policy applies to (ex. a User entity). For details about CEL see https://opensource.google.com/projects/cel. The OrgUnits the Policy applies to are represented by a clause like so: entity.org_units.exists(org_unit, org_unit.org_unit_id == orgUnitId('{orgUnitId}')) The Group the Policy applies to are represented by a clause like so: entity.groups.exists(group, group.group_id == groupId('{groupId}')) The Licenses the Policy applies to are represented by a clause like so: entity.licenses.exists(license, license in ['/product/{productId}/sku/{skuId}']) The above clauses can be present in any combination, and used in conjunction with the &&, || and ! operators. The org_unit and group fields below are helper fields that contain the corresponding value(s) as the query to make the query easier to use.
	Query *string `protobuf:"bytes,3,opt,name=query" json:"query,omitempty"`
	// Output only. The decimal sort order of this PolicyQuery. The value is relative to all other policies with the same setting type for the customer. (There are no duplicates within this set).
	SortOrder *float64 `protobuf:"fixed64,4,opt,name=sort_order,json=sortOrder" json:"sort_order,omitempty"`
}

func (x *PolicyQuery) Reset() {
	*x = PolicyQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PolicyQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PolicyQuery) ProtoMessage() {}

func (x *PolicyQuery) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PolicyQuery.ProtoReflect.Descriptor instead.
func (*PolicyQuery) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{96}
}

func (x *PolicyQuery) GetGroup() string {
	if x != nil && x.Group != nil {
		return *x.Group
	}
	return ""
}

func (x *PolicyQuery) GetOrgUnit() string {
	if x != nil && x.OrgUnit != nil {
		return *x.OrgUnit
	}
	return ""
}

func (x *PolicyQuery) GetQuery() string {
	if x != nil && x.Query != nil {
		return *x.Query
	}
	return ""
}

func (x *PolicyQuery) GetSortOrder() float64 {
	if x != nil && x.SortOrder != nil {
		return *x.SortOrder
	}
	return 0
}

// POSIX Group definition to represent a group in a POSIX compliant system. Caution: POSIX groups are deprecated. As of September 26, 2024, you can no longer create new POSIX groups. For more information, see https://cloud.google.com/identity/docs/deprecations/posix-groups
type PosixGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// GID of the POSIX group.
	Gid *uint64 `protobuf:"varint,1,opt,name=gid" json:"gid,omitempty"`
	// Name of the POSIX group.
	Name *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	// System identifier for which group name and gid apply to. If not specified it will default to empty value.
	SystemId *string `protobuf:"bytes,3,opt,name=system_id,json=systemId" json:"system_id,omitempty"`
}

func (x *PosixGroup) Reset() {
	*x = PosixGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PosixGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PosixGroup) ProtoMessage() {}

func (x *PosixGroup) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PosixGroup.ProtoReflect.Descriptor instead.
func (*PosixGroup) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{97}
}

func (x *PosixGroup) GetGid() uint64 {
	if x != nil && x.Gid != nil {
		return *x.Gid
	}
	return 0
}

func (x *PosixGroup) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *PosixGroup) GetSystemId() string {
	if x != nil && x.SystemId != nil {
		return *x.SystemId
	}
	return ""
}

// The evaluated state of this restriction.
type RestrictionEvaluation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Output only. The current state of the restriction
	State *string `protobuf:"bytes,1,opt,name=state" json:"state,omitempty"`
}

func (x *RestrictionEvaluation) Reset() {
	*x = RestrictionEvaluation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestrictionEvaluation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestrictionEvaluation) ProtoMessage() {}

func (x *RestrictionEvaluation) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestrictionEvaluation.ProtoReflect.Descriptor instead.
func (*RestrictionEvaluation) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{98}
}

func (x *RestrictionEvaluation) GetState() string {
	if x != nil && x.State != nil {
		return *x.State
	}
	return ""
}

// Evaluations of restrictions applied to parent group on this membership.
type RestrictionEvaluations struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Evaluation of the member restriction applied to this membership. Empty if the user lacks permission to view the restriction evaluation.
	MemberRestrictionEvaluation *MembershipRoleRestrictionEvaluation `protobuf:"bytes,1,opt,name=member_restriction_evaluation,json=memberRestrictionEvaluation" json:"member_restriction_evaluation,omitempty"`
}

func (x *RestrictionEvaluations) Reset() {
	*x = RestrictionEvaluations{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestrictionEvaluations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestrictionEvaluations) ProtoMessage() {}

func (x *RestrictionEvaluations) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestrictionEvaluations.ProtoReflect.Descriptor instead.
func (*RestrictionEvaluations) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{99}
}

func (x *RestrictionEvaluations) GetMemberRestrictionEvaluation() *MembershipRoleRestrictionEvaluation {
	if x != nil {
		return x.MemberRestrictionEvaluation
	}
	return nil
}

// Information of a RSA public key.
type RsaPublicKeyInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Key size in bits (size of the modulus).
	KeySize *int32 `protobuf:"varint,1,opt,name=key_size,json=keySize" json:"key_size,omitempty"`
}

func (x *RsaPublicKeyInfo) Reset() {
	*x = RsaPublicKeyInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RsaPublicKeyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RsaPublicKeyInfo) ProtoMessage() {}

func (x *RsaPublicKeyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RsaPublicKeyInfo.ProtoReflect.Descriptor instead.
func (*RsaPublicKeyInfo) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{100}
}

func (x *RsaPublicKeyInfo) GetKeySize() int32 {
	if x != nil && x.KeySize != nil {
		return *x.KeySize
	}
	return 0
}

// SAML IDP (identity provider) configuration.
type SamlIdpConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The **Change Password URL** of the identity provider. Users will be sent to this URL when changing their passwords at `myaccount.google.com`. This takes precedence over the change password URL configured at customer-level. Must use `HTTPS`.
	ChangePasswordUri *string `protobuf:"bytes,1,opt,name=change_password_uri,json=changePasswordUri" json:"change_password_uri,omitempty"`
	// Required. The SAML **Entity ID** of the identity provider.
	EntityId *string `protobuf:"bytes,2,opt,name=entity_id,json=entityId" json:"entity_id,omitempty"`
	// The **Logout Redirect URL** (sign-out page URL) of the identity provider. When a user clicks the sign-out link on a Google page, they will be redirected to this URL. This is a pure redirect with no attached SAML `LogoutRequest` i.e. SAML single logout is not supported. Must use `HTTPS`.
	LogoutRedirectUri *string `protobuf:"bytes,3,opt,name=logout_redirect_uri,json=logoutRedirectUri" json:"logout_redirect_uri,omitempty"`
	// Required. The `SingleSignOnService` endpoint location (sign-in page URL) of the identity provider. This is the URL where the `AuthnRequest` will be sent. Must use `HTTPS`. Assumed to accept the `HTTP-Redirect` binding.
	SingleSignOnServiceUri *string `protobuf:"bytes,4,opt,name=single_sign_on_service_uri,json=singleSignOnServiceUri" json:"single_sign_on_service_uri,omitempty"`
}

func (x *SamlIdpConfig) Reset() {
	*x = SamlIdpConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SamlIdpConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SamlIdpConfig) ProtoMessage() {}

func (x *SamlIdpConfig) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SamlIdpConfig.ProtoReflect.Descriptor instead.
func (*SamlIdpConfig) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{101}
}

func (x *SamlIdpConfig) GetChangePasswordUri() string {
	if x != nil && x.ChangePasswordUri != nil {
		return *x.ChangePasswordUri
	}
	return ""
}

func (x *SamlIdpConfig) GetEntityId() string {
	if x != nil && x.EntityId != nil {
		return *x.EntityId
	}
	return ""
}

func (x *SamlIdpConfig) GetLogoutRedirectUri() string {
	if x != nil && x.LogoutRedirectUri != nil {
		return *x.LogoutRedirectUri
	}
	return ""
}

func (x *SamlIdpConfig) GetSingleSignOnServiceUri() string {
	if x != nil && x.SingleSignOnServiceUri != nil {
		return *x.SingleSignOnServiceUri
	}
	return ""
}

// SAML SP (service provider) configuration.
type SamlSpConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Output only. The SAML **Assertion Consumer Service (ACS) URL** to be used for the IDP-initiated login. Assumed to accept response messages via the `HTTP-POST` binding.
	AssertionConsumerServiceUri *string `protobuf:"bytes,1,opt,name=assertion_consumer_service_uri,json=assertionConsumerServiceUri" json:"assertion_consumer_service_uri,omitempty"`
	// Output only. The SAML **Entity ID** for this service provider.
	EntityId *string `protobuf:"bytes,2,opt,name=entity_id,json=entityId" json:"entity_id,omitempty"`
}

func (x *SamlSpConfig) Reset() {
	*x = SamlSpConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SamlSpConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SamlSpConfig) ProtoMessage() {}

func (x *SamlSpConfig) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SamlSpConfig.ProtoReflect.Descriptor instead.
func (*SamlSpConfig) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{102}
}

func (x *SamlSpConfig) GetAssertionConsumerServiceUri() string {
	if x != nil && x.AssertionConsumerServiceUri != nil {
		return *x.AssertionConsumerServiceUri
	}
	return ""
}

func (x *SamlSpConfig) GetEntityId() string {
	if x != nil && x.EntityId != nil {
		return *x.EntityId
	}
	return ""
}

// Details that are applicable when `sso_mode` == `SAML_SSO`.
type SamlSsoInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. Name of the `InboundSamlSsoProfile` to use. Must be of the form `inboundSamlSsoProfiles/{inbound_saml_sso_profile}`.
	InboundSamlSsoProfile *string `protobuf:"bytes,1,opt,name=inbound_saml_sso_profile,json=inboundSamlSsoProfile" json:"inbound_saml_sso_profile,omitempty"`
}

func (x *SamlSsoInfo) Reset() {
	*x = SamlSsoInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SamlSsoInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SamlSsoInfo) ProtoMessage() {}

func (x *SamlSsoInfo) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SamlSsoInfo.ProtoReflect.Descriptor instead.
func (*SamlSsoInfo) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{103}
}

func (x *SamlSsoInfo) GetInboundSamlSsoProfile() string {
	if x != nil && x.InboundSamlSsoProfile != nil {
		return *x.InboundSamlSsoProfile
	}
	return ""
}

// The response message for MembershipsService.SearchDirectGroups.
type SearchDirectGroupsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of direct groups satisfying the query.
	Memberships []*MembershipRelation `protobuf:"bytes,1,rep,name=memberships" json:"memberships,omitempty"`
	// Token to retrieve the next page of results, or empty if there are no more results available for listing.
	NextPageToken *string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken" json:"next_page_token,omitempty"`
}

func (x *SearchDirectGroupsResponse) Reset() {
	*x = SearchDirectGroupsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchDirectGroupsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchDirectGroupsResponse) ProtoMessage() {}

func (x *SearchDirectGroupsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchDirectGroupsResponse.ProtoReflect.Descriptor instead.
func (*SearchDirectGroupsResponse) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{104}
}

func (x *SearchDirectGroupsResponse) GetMemberships() []*MembershipRelation {
	if x != nil {
		return x.Memberships
	}
	return nil
}

func (x *SearchDirectGroupsResponse) GetNextPageToken() string {
	if x != nil && x.NextPageToken != nil {
		return *x.NextPageToken
	}
	return ""
}

// The response message for GroupsService.SearchGroups.
type SearchGroupsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The `Group` resources that match the search query.
	Groups []*Group `protobuf:"bytes,1,rep,name=groups" json:"groups,omitempty"`
	// A continuation token to retrieve the next page of results, or empty if there are no more results available.
	NextPageToken *string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken" json:"next_page_token,omitempty"`
}

func (x *SearchGroupsResponse) Reset() {
	*x = SearchGroupsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchGroupsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchGroupsResponse) ProtoMessage() {}

func (x *SearchGroupsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchGroupsResponse.ProtoReflect.Descriptor instead.
func (*SearchGroupsResponse) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{105}
}

func (x *SearchGroupsResponse) GetGroups() []*Group {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *SearchGroupsResponse) GetNextPageToken() string {
	if x != nil && x.NextPageToken != nil {
		return *x.NextPageToken
	}
	return ""
}

// The response message for MembershipsService.SearchTransitiveGroups.
type SearchTransitiveGroupsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of transitive groups satisfying the query.
	Memberships []*GroupRelation `protobuf:"bytes,1,rep,name=memberships" json:"memberships,omitempty"`
	// Token to retrieve the next page of results, or empty if there are no more results available for listing.
	NextPageToken *string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken" json:"next_page_token,omitempty"`
}

func (x *SearchTransitiveGroupsResponse) Reset() {
	*x = SearchTransitiveGroupsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchTransitiveGroupsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchTransitiveGroupsResponse) ProtoMessage() {}

func (x *SearchTransitiveGroupsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchTransitiveGroupsResponse.ProtoReflect.Descriptor instead.
func (*SearchTransitiveGroupsResponse) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{106}
}

func (x *SearchTransitiveGroupsResponse) GetMemberships() []*GroupRelation {
	if x != nil {
		return x.Memberships
	}
	return nil
}

func (x *SearchTransitiveGroupsResponse) GetNextPageToken() string {
	if x != nil && x.NextPageToken != nil {
		return *x.NextPageToken
	}
	return ""
}

// The response message for MembershipsService.SearchTransitiveMemberships.
type SearchTransitiveMembershipsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of transitive memberships satisfying the query.
	Memberships []*MemberRelation `protobuf:"bytes,1,rep,name=memberships" json:"memberships,omitempty"`
	// Token to retrieve the next page of results, or empty if there are no more results.
	NextPageToken *string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken" json:"next_page_token,omitempty"`
}

func (x *SearchTransitiveMembershipsResponse) Reset() {
	*x = SearchTransitiveMembershipsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchTransitiveMembershipsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchTransitiveMembershipsResponse) ProtoMessage() {}

func (x *SearchTransitiveMembershipsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchTransitiveMembershipsResponse.ProtoReflect.Descriptor instead.
func (*SearchTransitiveMembershipsResponse) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{107}
}

func (x *SearchTransitiveMembershipsResponse) GetMemberships() []*MemberRelation {
	if x != nil {
		return x.Memberships
	}
	return nil
}

func (x *SearchTransitiveMembershipsResponse) GetNextPageToken() string {
	if x != nil && x.NextPageToken != nil {
		return *x.NextPageToken
	}
	return ""
}

// The definiion of security settings.
type SecuritySettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The Member Restriction value
	MemberRestriction *MemberRestriction `protobuf:"bytes,1,opt,name=member_restriction,json=memberRestriction" json:"member_restriction,omitempty"`
	// Output only. The resource name of the security settings. Shall be of the form `groups/{group_id}/securitySettings`.
	Name *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (x *SecuritySettings) Reset() {
	*x = SecuritySettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecuritySettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecuritySettings) ProtoMessage() {}

func (x *SecuritySettings) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecuritySettings.ProtoReflect.Descriptor instead.
func (*SecuritySettings) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{108}
}

func (x *SecuritySettings) GetMemberRestriction() *MemberRestriction {
	if x != nil {
		return x.MemberRestriction
	}
	return nil
}

func (x *SecuritySettings) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

// A request to send email for inviting target user corresponding to the UserInvitation.
type SendUserInvitationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SendUserInvitationRequest) Reset() {
	*x = SendUserInvitationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendUserInvitationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendUserInvitationRequest) ProtoMessage() {}

func (x *SendUserInvitationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendUserInvitationRequest.ProtoReflect.Descriptor instead.
func (*SendUserInvitationRequest) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{109}
}

// Setting
type Setting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. Immutable. The type of the Setting. .
	Type *string `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	// Required. The value of the Setting.
	Value map[string]*any1.Any `protobuf:"bytes,2,rep,name=value" json:"value,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (x *Setting) Reset() {
	*x = Setting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Setting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Setting) ProtoMessage() {}

func (x *Setting) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Setting.ProtoReflect.Descriptor instead.
func (*Setting) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{110}
}

func (x *Setting) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *Setting) GetValue() map[string]*any1.Any {
	if x != nil {
		return x.Value
	}
	return nil
}

// Controls sign-in behavior.
type SignInBehavior struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// When to redirect sign-ins to the IdP.
	RedirectCondition *string `protobuf:"bytes,1,opt,name=redirect_condition,json=redirectCondition" json:"redirect_condition,omitempty"`
}

func (x *SignInBehavior) Reset() {
	*x = SignInBehavior{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignInBehavior) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignInBehavior) ProtoMessage() {}

func (x *SignInBehavior) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignInBehavior.ProtoReflect.Descriptor instead.
func (*SignInBehavior) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{111}
}

func (x *SignInBehavior) GetRedirectCondition() string {
	if x != nil && x.RedirectCondition != nil {
		return *x.RedirectCondition
	}
	return ""
}

// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
type Status struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The status code, which should be an enum value of google.rpc.Code.
	Code *int32 `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	// A list of messages that carry the error details. There is a common set of message types for APIs to use.
	Details []*any1.Any `protobuf:"bytes,2,rep,name=details" json:"details,omitempty"`
	// A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
	Message *string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (x *Status) Reset() {
	*x = Status{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Status) ProtoMessage() {}

func (x *Status) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Status.ProtoReflect.Descriptor instead.
func (*Status) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{112}
}

func (x *Status) GetCode() int32 {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return 0
}

func (x *Status) GetDetails() []*any1.Any {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *Status) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

// Message representing the role of a TransitiveMembership.
type TransitiveMembershipRole struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// TransitiveMembershipRole in string format. Currently supported TransitiveMembershipRoles: `"MEMBER"`, `"OWNER"`, and `"MANAGER"`.
	Role *string `protobuf:"bytes,1,opt,name=role" json:"role,omitempty"`
}

func (x *TransitiveMembershipRole) Reset() {
	*x = TransitiveMembershipRole{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransitiveMembershipRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransitiveMembershipRole) ProtoMessage() {}

func (x *TransitiveMembershipRole) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransitiveMembershipRole.ProtoReflect.Descriptor instead.
func (*TransitiveMembershipRole) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{113}
}

func (x *TransitiveMembershipRole) GetRole() string {
	if x != nil && x.Role != nil {
		return *x.Role
	}
	return ""
}

// LRO response metadata for InboundSamlSsoProfilesService.UpdateInboundSamlSsoProfile.
type UpdateInboundSamlSsoProfileOperationMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// State of this Operation Will be "awaiting-multi-party-approval" when the operation is deferred due to the target customer having enabled [Multi-party approval for sensitive actions](https://support.google.com/a/answer/13790448).
	State *string `protobuf:"bytes,1,opt,name=state" json:"state,omitempty"`
}

func (x *UpdateInboundSamlSsoProfileOperationMetadata) Reset() {
	*x = UpdateInboundSamlSsoProfileOperationMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateInboundSamlSsoProfileOperationMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateInboundSamlSsoProfileOperationMetadata) ProtoMessage() {}

func (x *UpdateInboundSamlSsoProfileOperationMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateInboundSamlSsoProfileOperationMetadata.ProtoReflect.Descriptor instead.
func (*UpdateInboundSamlSsoProfileOperationMetadata) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{114}
}

func (x *UpdateInboundSamlSsoProfileOperationMetadata) GetState() string {
	if x != nil && x.State != nil {
		return *x.State
	}
	return ""
}

// LRO response metadata for InboundSsoAssignmentsService.UpdateInboundSsoAssignment.
type UpdateInboundSsoAssignmentOperationMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateInboundSsoAssignmentOperationMetadata) Reset() {
	*x = UpdateInboundSsoAssignmentOperationMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateInboundSsoAssignmentOperationMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateInboundSsoAssignmentOperationMetadata) ProtoMessage() {}

func (x *UpdateInboundSsoAssignmentOperationMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateInboundSsoAssignmentOperationMetadata.ProtoReflect.Descriptor instead.
func (*UpdateInboundSsoAssignmentOperationMetadata) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{115}
}

// The details of an update to a `MembershipRole`.
type UpdateMembershipRolesParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The fully-qualified names of fields to update. May only contain the field `expiry_detail.expire_time`.
	FieldMask *string `protobuf:"bytes,1,opt,name=field_mask,json=fieldMask" json:"field_mask,omitempty"`
	// The `MembershipRole`s to be updated. Only `MEMBER` `MembershipRoles` can currently be updated. May only contain a `MembershipRole` with `name` `MEMBER`.
	MembershipRole *MembershipRole `protobuf:"bytes,2,opt,name=membership_role,json=membershipRole" json:"membership_role,omitempty"`
}

func (x *UpdateMembershipRolesParams) Reset() {
	*x = UpdateMembershipRolesParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMembershipRolesParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMembershipRolesParams) ProtoMessage() {}

func (x *UpdateMembershipRolesParams) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMembershipRolesParams.ProtoReflect.Descriptor instead.
func (*UpdateMembershipRolesParams) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{116}
}

func (x *UpdateMembershipRolesParams) GetFieldMask() string {
	if x != nil && x.FieldMask != nil {
		return *x.FieldMask
	}
	return ""
}

func (x *UpdateMembershipRolesParams) GetMembershipRole() *MembershipRole {
	if x != nil {
		return x.MembershipRole
	}
	return nil
}

// The `UserInvitation` resource represents an email that can be sent to an unmanaged user account inviting them to join the customer's Google Workspace or Cloud Identity account. An unmanaged account shares an email address domain with the Google Workspace or Cloud Identity account but is not managed by it yet. If the user accepts the `UserInvitation`, the user account will become managed.
type UserInvitation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Number of invitation emails sent to the user.
	MailsSentCount *int64 `protobuf:"varint,1,opt,name=mails_sent_count,json=mailsSentCount" json:"mails_sent_count,omitempty"`
	// Shall be of the form `customers/{customer}/userinvitations/{user_email_address}`.
	Name *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	// State of the `UserInvitation`.
	State *string `protobuf:"bytes,3,opt,name=state" json:"state,omitempty"`
	// Time when the `UserInvitation` was last updated.
	UpdateTime *timestamp.Timestamp `protobuf:"bytes,4,opt,name=update_time,json=updateTime" json:"update_time,omitempty"`
}

func (x *UserInvitation) Reset() {
	*x = UserInvitation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInvitation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInvitation) ProtoMessage() {}

func (x *UserInvitation) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInvitation.ProtoReflect.Descriptor instead.
func (*UserInvitation) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{117}
}

func (x *UserInvitation) GetMailsSentCount() int64 {
	if x != nil && x.MailsSentCount != nil {
		return *x.MailsSentCount
	}
	return 0
}

func (x *UserInvitation) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UserInvitation) GetState() string {
	if x != nil && x.State != nil {
		return *x.State
	}
	return ""
}

func (x *UserInvitation) GetUpdateTime() *timestamp.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

// Request message for wiping all data on the device.
type WipeDeviceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional. [Resource name](https://cloud.google.com/apis/design/resource_names) of the customer. If you're using this API for your own organization, use `customers/my_customer` If you're using this API to manage another organization, use `customers/{customer_id}`, where customer_id is the customer to whom the device belongs.
	Customer *string `protobuf:"bytes,1,opt,name=customer" json:"customer,omitempty"`
	// Optional. Specifies if a user is able to factory reset a device after a Device Wipe. On iOS, this is called "Activation Lock", while on Android, this is known as "Factory Reset Protection". If true, this protection will be removed from the device, so that a user can successfully factory reset. If false, the setting is untouched on the device.
	RemoveResetLock *bool `protobuf:"varint,2,opt,name=remove_reset_lock,json=removeResetLock" json:"remove_reset_lock,omitempty"`
}

func (x *WipeDeviceRequest) Reset() {
	*x = WipeDeviceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WipeDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WipeDeviceRequest) ProtoMessage() {}

func (x *WipeDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WipeDeviceRequest.ProtoReflect.Descriptor instead.
func (*WipeDeviceRequest) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{118}
}

func (x *WipeDeviceRequest) GetCustomer() string {
	if x != nil && x.Customer != nil {
		return *x.Customer
	}
	return ""
}

func (x *WipeDeviceRequest) GetRemoveResetLock() bool {
	if x != nil && x.RemoveResetLock != nil {
		return *x.RemoveResetLock
	}
	return false
}

// Response message for wiping all data on the device.
type WipeDeviceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Resultant Device object for the action. Note that asset tags will not be returned in the device object.
	Device *Device `protobuf:"bytes,1,opt,name=device" json:"device,omitempty"`
}

func (x *WipeDeviceResponse) Reset() {
	*x = WipeDeviceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WipeDeviceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WipeDeviceResponse) ProtoMessage() {}

func (x *WipeDeviceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WipeDeviceResponse.ProtoReflect.Descriptor instead.
func (*WipeDeviceResponse) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{119}
}

func (x *WipeDeviceResponse) GetDevice() *Device {
	if x != nil {
		return x.Device
	}
	return nil
}

// Request message for starting an account wipe on device.
type WipeDeviceUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional. [Resource name](https://cloud.google.com/apis/design/resource_names) of the customer. If you're using this API for your own organization, use `customers/my_customer` If you're using this API to manage another organization, use `customers/{customer_id}`, where customer_id is the customer to whom the device belongs.
	Customer *string `protobuf:"bytes,1,opt,name=customer" json:"customer,omitempty"`
}

func (x *WipeDeviceUserRequest) Reset() {
	*x = WipeDeviceUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WipeDeviceUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WipeDeviceUserRequest) ProtoMessage() {}

func (x *WipeDeviceUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WipeDeviceUserRequest.ProtoReflect.Descriptor instead.
func (*WipeDeviceUserRequest) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{120}
}

func (x *WipeDeviceUserRequest) GetCustomer() string {
	if x != nil && x.Customer != nil {
		return *x.Customer
	}
	return ""
}

// Response message for wiping the user's account from the device.
type WipeDeviceUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Resultant DeviceUser object for the action.
	DeviceUser *DeviceUser `protobuf:"bytes,1,opt,name=device_user,json=deviceUser" json:"device_user,omitempty"`
}

func (x *WipeDeviceUserResponse) Reset() {
	*x = WipeDeviceUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WipeDeviceUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WipeDeviceUserResponse) ProtoMessage() {}

func (x *WipeDeviceUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WipeDeviceUserResponse.ProtoReflect.Descriptor instead.
func (*WipeDeviceUserResponse) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{121}
}

func (x *WipeDeviceUserResponse) GetDeviceUser() *DeviceUser {
	if x != nil {
		return x.DeviceUser
	}
	return nil
}

type CancelCustomersUserinvitationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                    *string                      `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	CustomersUserinvitation *CancelUserInvitationRequest `protobuf:"bytes,2,opt,name=customers_userinvitation,json=customersUserinvitation" json:"customers_userinvitation,omitempty"`
}

func (x *CancelCustomersUserinvitationRequest) Reset() {
	*x = CancelCustomersUserinvitationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelCustomersUserinvitationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelCustomersUserinvitationRequest) ProtoMessage() {}

func (x *CancelCustomersUserinvitationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[122]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelCustomersUserinvitationRequest.ProtoReflect.Descriptor instead.
func (*CancelCustomersUserinvitationRequest) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{122}
}

func (x *CancelCustomersUserinvitationRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CancelCustomersUserinvitationRequest) GetCustomersUserinvitation() *CancelUserInvitationRequest {
	if x != nil {
		return x.CustomersUserinvitation
	}
	return nil
}

type GetCustomersUserinvitationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *GetCustomersUserinvitationRequest) Reset() {
	*x = GetCustomersUserinvitationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCustomersUserinvitationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCustomersUserinvitationRequest) ProtoMessage() {}

func (x *GetCustomersUserinvitationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[123]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCustomersUserinvitationRequest.ProtoReflect.Descriptor instead.
func (*GetCustomersUserinvitationRequest) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{123}
}

func (x *GetCustomersUserinvitationRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type IsInvitableUserCustomersUserinvitationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *IsInvitableUserCustomersUserinvitationRequest) Reset() {
	*x = IsInvitableUserCustomersUserinvitationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[124]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsInvitableUserCustomersUserinvitationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsInvitableUserCustomersUserinvitationRequest) ProtoMessage() {}

func (x *IsInvitableUserCustomersUserinvitationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[124]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsInvitableUserCustomersUserinvitationRequest.ProtoReflect.Descriptor instead.
func (*IsInvitableUserCustomersUserinvitationRequest) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{124}
}

func (x *IsInvitableUserCustomersUserinvitationRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type ListCustomersUserinvitationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filter    *string `protobuf:"bytes,1,opt,name=filter" json:"filter,omitempty"`
	OrderBy   *string `protobuf:"bytes,2,opt,name=order_by,json=orderBy" json:"order_by,omitempty"`
	PageSize  *int32  `protobuf:"varint,3,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	PageToken *string `protobuf:"bytes,4,opt,name=page_token,json=pageToken" json:"page_token,omitempty"`
	Parent    *string `protobuf:"bytes,5,opt,name=parent" json:"parent,omitempty"`
}

func (x *ListCustomersUserinvitationsRequest) Reset() {
	*x = ListCustomersUserinvitationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[125]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCustomersUserinvitationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCustomersUserinvitationsRequest) ProtoMessage() {}

func (x *ListCustomersUserinvitationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[125]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCustomersUserinvitationsRequest.ProtoReflect.Descriptor instead.
func (*ListCustomersUserinvitationsRequest) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{125}
}

func (x *ListCustomersUserinvitationsRequest) GetFilter() string {
	if x != nil && x.Filter != nil {
		return *x.Filter
	}
	return ""
}

func (x *ListCustomersUserinvitationsRequest) GetOrderBy() string {
	if x != nil && x.OrderBy != nil {
		return *x.OrderBy
	}
	return ""
}

func (x *ListCustomersUserinvitationsRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *ListCustomersUserinvitationsRequest) GetPageToken() string {
	if x != nil && x.PageToken != nil {
		return *x.PageToken
	}
	return ""
}

func (x *ListCustomersUserinvitationsRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

type SendCustomersUserinvitationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                    *string                    `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	CustomersUserinvitation *SendUserInvitationRequest `protobuf:"bytes,2,opt,name=customers_userinvitation,json=customersUserinvitation" json:"customers_userinvitation,omitempty"`
}

func (x *SendCustomersUserinvitationRequest) Reset() {
	*x = SendCustomersUserinvitationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[126]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendCustomersUserinvitationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendCustomersUserinvitationRequest) ProtoMessage() {}

func (x *SendCustomersUserinvitationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[126]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendCustomersUserinvitationRequest.ProtoReflect.Descriptor instead.
func (*SendCustomersUserinvitationRequest) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{126}
}

func (x *SendCustomersUserinvitationRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *SendCustomersUserinvitationRequest) GetCustomersUserinvitation() *SendUserInvitationRequest {
	if x != nil {
		return x.CustomersUserinvitation
	}
	return nil
}

type CancelWipeDeviceServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   *string                  `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Device *CancelWipeDeviceRequest `protobuf:"bytes,2,opt,name=device" json:"device,omitempty"`
}

func (x *CancelWipeDeviceServiceRequest) Reset() {
	*x = CancelWipeDeviceServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[127]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelWipeDeviceServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelWipeDeviceServiceRequest) ProtoMessage() {}

func (x *CancelWipeDeviceServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[127]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelWipeDeviceServiceRequest.ProtoReflect.Descriptor instead.
func (*CancelWipeDeviceServiceRequest) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{127}
}

func (x *CancelWipeDeviceServiceRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CancelWipeDeviceServiceRequest) GetDevice() *CancelWipeDeviceRequest {
	if x != nil {
		return x.Device
	}
	return nil
}

type CreateDeviceServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Device *CreateDeviceRequest `protobuf:"bytes,1,opt,name=device" json:"device,omitempty"`
}

func (x *CreateDeviceServiceRequest) Reset() {
	*x = CreateDeviceServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[128]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDeviceServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDeviceServiceRequest) ProtoMessage() {}

func (x *CreateDeviceServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[128]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDeviceServiceRequest.ProtoReflect.Descriptor instead.
func (*CreateDeviceServiceRequest) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{128}
}

func (x *CreateDeviceServiceRequest) GetDevice() *CreateDeviceRequest {
	if x != nil {
		return x.Device
	}
	return nil
}

type DeleteDeviceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Customer *string `protobuf:"bytes,1,opt,name=customer" json:"customer,omitempty"`
	Name     *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (x *DeleteDeviceRequest) Reset() {
	*x = DeleteDeviceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[129]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDeviceRequest) ProtoMessage() {}

func (x *DeleteDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[129]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDeviceRequest.ProtoReflect.Descriptor instead.
func (*DeleteDeviceRequest) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{129}
}

func (x *DeleteDeviceRequest) GetCustomer() string {
	if x != nil && x.Customer != nil {
		return *x.Customer
	}
	return ""
}

func (x *DeleteDeviceRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GetDeviceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Customer *string `protobuf:"bytes,1,opt,name=customer" json:"customer,omitempty"`
	Name     *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (x *GetDeviceRequest) Reset() {
	*x = GetDeviceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[130]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceRequest) ProtoMessage() {}

func (x *GetDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[130]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceRequest.ProtoReflect.Descriptor instead.
func (*GetDeviceRequest) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{130}
}

func (x *GetDeviceRequest) GetCustomer() string {
	if x != nil && x.Customer != nil {
		return *x.Customer
	}
	return ""
}

func (x *GetDeviceRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type ListDevicesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Customer  *string `protobuf:"bytes,1,opt,name=customer" json:"customer,omitempty"`
	Filter    *string `protobuf:"bytes,2,opt,name=filter" json:"filter,omitempty"`
	OrderBy   *string `protobuf:"bytes,3,opt,name=order_by,json=orderBy" json:"order_by,omitempty"`
	PageSize  *int32  `protobuf:"varint,4,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	PageToken *string `protobuf:"bytes,5,opt,name=page_token,json=pageToken" json:"page_token,omitempty"`
	View      *string `protobuf:"bytes,6,opt,name=view" json:"view,omitempty"`
}

func (x *ListDevicesRequest) Reset() {
	*x = ListDevicesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[131]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDevicesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDevicesRequest) ProtoMessage() {}

func (x *ListDevicesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[131]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDevicesRequest.ProtoReflect.Descriptor instead.
func (*ListDevicesRequest) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{131}
}

func (x *ListDevicesRequest) GetCustomer() string {
	if x != nil && x.Customer != nil {
		return *x.Customer
	}
	return ""
}

func (x *ListDevicesRequest) GetFilter() string {
	if x != nil && x.Filter != nil {
		return *x.Filter
	}
	return ""
}

func (x *ListDevicesRequest) GetOrderBy() string {
	if x != nil && x.OrderBy != nil {
		return *x.OrderBy
	}
	return ""
}

func (x *ListDevicesRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *ListDevicesRequest) GetPageToken() string {
	if x != nil && x.PageToken != nil {
		return *x.PageToken
	}
	return ""
}

func (x *ListDevicesRequest) GetView() string {
	if x != nil && x.View != nil {
		return *x.View
	}
	return ""
}

type WipeDeviceServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   *string            `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Device *WipeDeviceRequest `protobuf:"bytes,2,opt,name=device" json:"device,omitempty"`
}

func (x *WipeDeviceServiceRequest) Reset() {
	*x = WipeDeviceServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[132]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WipeDeviceServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WipeDeviceServiceRequest) ProtoMessage() {}

func (x *WipeDeviceServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[132]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WipeDeviceServiceRequest.ProtoReflect.Descriptor instead.
func (*WipeDeviceServiceRequest) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{132}
}

func (x *WipeDeviceServiceRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *WipeDeviceServiceRequest) GetDevice() *WipeDeviceRequest {
	if x != nil {
		return x.Device
	}
	return nil
}

type ApproveDevicesDeviceUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name              *string                   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	DevicesDeviceUser *ApproveDeviceUserRequest `protobuf:"bytes,2,opt,name=devices_device_user,json=devicesDeviceUser" json:"devices_device_user,omitempty"`
}

func (x *ApproveDevicesDeviceUserRequest) Reset() {
	*x = ApproveDevicesDeviceUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[133]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApproveDevicesDeviceUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveDevicesDeviceUserRequest) ProtoMessage() {}

func (x *ApproveDevicesDeviceUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[133]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApproveDevicesDeviceUserRequest.ProtoReflect.Descriptor instead.
func (*ApproveDevicesDeviceUserRequest) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{133}
}

func (x *ApproveDevicesDeviceUserRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ApproveDevicesDeviceUserRequest) GetDevicesDeviceUser() *ApproveDeviceUserRequest {
	if x != nil {
		return x.DevicesDeviceUser
	}
	return nil
}

type BlockDevicesDeviceUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name              *string                 `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	DevicesDeviceUser *BlockDeviceUserRequest `protobuf:"bytes,2,opt,name=devices_device_user,json=devicesDeviceUser" json:"devices_device_user,omitempty"`
}

func (x *BlockDevicesDeviceUserRequest) Reset() {
	*x = BlockDevicesDeviceUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[134]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockDevicesDeviceUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockDevicesDeviceUserRequest) ProtoMessage() {}

func (x *BlockDevicesDeviceUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[134]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockDevicesDeviceUserRequest.ProtoReflect.Descriptor instead.
func (*BlockDevicesDeviceUserRequest) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{134}
}

func (x *BlockDevicesDeviceUserRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *BlockDevicesDeviceUserRequest) GetDevicesDeviceUser() *BlockDeviceUserRequest {
	if x != nil {
		return x.DevicesDeviceUser
	}
	return nil
}

type CancelWipeDevicesDeviceUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name              *string                      `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	DevicesDeviceUser *CancelWipeDeviceUserRequest `protobuf:"bytes,2,opt,name=devices_device_user,json=devicesDeviceUser" json:"devices_device_user,omitempty"`
}

func (x *CancelWipeDevicesDeviceUserRequest) Reset() {
	*x = CancelWipeDevicesDeviceUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[135]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelWipeDevicesDeviceUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelWipeDevicesDeviceUserRequest) ProtoMessage() {}

func (x *CancelWipeDevicesDeviceUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[135]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelWipeDevicesDeviceUserRequest.ProtoReflect.Descriptor instead.
func (*CancelWipeDevicesDeviceUserRequest) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{135}
}

func (x *CancelWipeDevicesDeviceUserRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CancelWipeDevicesDeviceUserRequest) GetDevicesDeviceUser() *CancelWipeDeviceUserRequest {
	if x != nil {
		return x.DevicesDeviceUser
	}
	return nil
}

type DeleteDevicesDeviceUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Customer *string `protobuf:"bytes,1,opt,name=customer" json:"customer,omitempty"`
	Name     *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (x *DeleteDevicesDeviceUserRequest) Reset() {
	*x = DeleteDevicesDeviceUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[136]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDevicesDeviceUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDevicesDeviceUserRequest) ProtoMessage() {}

func (x *DeleteDevicesDeviceUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[136]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDevicesDeviceUserRequest.ProtoReflect.Descriptor instead.
func (*DeleteDevicesDeviceUserRequest) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{136}
}

func (x *DeleteDevicesDeviceUserRequest) GetCustomer() string {
	if x != nil && x.Customer != nil {
		return *x.Customer
	}
	return ""
}

func (x *DeleteDevicesDeviceUserRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GetDevicesDeviceUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Customer *string `protobuf:"bytes,1,opt,name=customer" json:"customer,omitempty"`
	Name     *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (x *GetDevicesDeviceUserRequest) Reset() {
	*x = GetDevicesDeviceUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[137]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDevicesDeviceUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDevicesDeviceUserRequest) ProtoMessage() {}

func (x *GetDevicesDeviceUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[137]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDevicesDeviceUserRequest.ProtoReflect.Descriptor instead.
func (*GetDevicesDeviceUserRequest) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{137}
}

func (x *GetDevicesDeviceUserRequest) GetCustomer() string {
	if x != nil && x.Customer != nil {
		return *x.Customer
	}
	return ""
}

func (x *GetDevicesDeviceUserRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type ListDevicesDeviceUsersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Customer  *string `protobuf:"bytes,1,opt,name=customer" json:"customer,omitempty"`
	Filter    *string `protobuf:"bytes,2,opt,name=filter" json:"filter,omitempty"`
	OrderBy   *string `protobuf:"bytes,3,opt,name=order_by,json=orderBy" json:"order_by,omitempty"`
	PageSize  *int32  `protobuf:"varint,4,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	PageToken *string `protobuf:"bytes,5,opt,name=page_token,json=pageToken" json:"page_token,omitempty"`
	Parent    *string `protobuf:"bytes,6,opt,name=parent" json:"parent,omitempty"`
}

func (x *ListDevicesDeviceUsersRequest) Reset() {
	*x = ListDevicesDeviceUsersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[138]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDevicesDeviceUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDevicesDeviceUsersRequest) ProtoMessage() {}

func (x *ListDevicesDeviceUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[138]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDevicesDeviceUsersRequest.ProtoReflect.Descriptor instead.
func (*ListDevicesDeviceUsersRequest) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{138}
}

func (x *ListDevicesDeviceUsersRequest) GetCustomer() string {
	if x != nil && x.Customer != nil {
		return *x.Customer
	}
	return ""
}

func (x *ListDevicesDeviceUsersRequest) GetFilter() string {
	if x != nil && x.Filter != nil {
		return *x.Filter
	}
	return ""
}

func (x *ListDevicesDeviceUsersRequest) GetOrderBy() string {
	if x != nil && x.OrderBy != nil {
		return *x.OrderBy
	}
	return ""
}

func (x *ListDevicesDeviceUsersRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *ListDevicesDeviceUsersRequest) GetPageToken() string {
	if x != nil && x.PageToken != nil {
		return *x.PageToken
	}
	return ""
}

func (x *ListDevicesDeviceUsersRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

type LookupDevicesDeviceUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AndroidId     *string `protobuf:"bytes,1,opt,name=android_id,json=androidId" json:"android_id,omitempty"`
	PageSize      *int32  `protobuf:"varint,2,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	PageToken     *string `protobuf:"bytes,3,opt,name=page_token,json=pageToken" json:"page_token,omitempty"`
	Parent        *string `protobuf:"bytes,4,opt,name=parent" json:"parent,omitempty"`
	RawResourceId *string `protobuf:"bytes,5,opt,name=raw_resource_id,json=rawResourceId" json:"raw_resource_id,omitempty"`
	UserId        *string `protobuf:"bytes,6,opt,name=user_id,json=userId" json:"user_id,omitempty"`
}

func (x *LookupDevicesDeviceUserRequest) Reset() {
	*x = LookupDevicesDeviceUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[139]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LookupDevicesDeviceUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LookupDevicesDeviceUserRequest) ProtoMessage() {}

func (x *LookupDevicesDeviceUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[139]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LookupDevicesDeviceUserRequest.ProtoReflect.Descriptor instead.
func (*LookupDevicesDeviceUserRequest) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{139}
}

func (x *LookupDevicesDeviceUserRequest) GetAndroidId() string {
	if x != nil && x.AndroidId != nil {
		return *x.AndroidId
	}
	return ""
}

func (x *LookupDevicesDeviceUserRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *LookupDevicesDeviceUserRequest) GetPageToken() string {
	if x != nil && x.PageToken != nil {
		return *x.PageToken
	}
	return ""
}

func (x *LookupDevicesDeviceUserRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

func (x *LookupDevicesDeviceUserRequest) GetRawResourceId() string {
	if x != nil && x.RawResourceId != nil {
		return *x.RawResourceId
	}
	return ""
}

func (x *LookupDevicesDeviceUserRequest) GetUserId() string {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return ""
}

type WipeDevicesDeviceUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name              *string                `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	DevicesDeviceUser *WipeDeviceUserRequest `protobuf:"bytes,2,opt,name=devices_device_user,json=devicesDeviceUser" json:"devices_device_user,omitempty"`
}

func (x *WipeDevicesDeviceUserRequest) Reset() {
	*x = WipeDevicesDeviceUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[140]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WipeDevicesDeviceUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WipeDevicesDeviceUserRequest) ProtoMessage() {}

func (x *WipeDevicesDeviceUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[140]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WipeDevicesDeviceUserRequest.ProtoReflect.Descriptor instead.
func (*WipeDevicesDeviceUserRequest) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{140}
}

func (x *WipeDevicesDeviceUserRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *WipeDevicesDeviceUserRequest) GetDevicesDeviceUser() *WipeDeviceUserRequest {
	if x != nil {
		return x.DevicesDeviceUser
	}
	return nil
}

type GetDevicesDeviceUsersClientStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Customer *string `protobuf:"bytes,1,opt,name=customer" json:"customer,omitempty"`
	Name     *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (x *GetDevicesDeviceUsersClientStateRequest) Reset() {
	*x = GetDevicesDeviceUsersClientStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[141]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDevicesDeviceUsersClientStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDevicesDeviceUsersClientStateRequest) ProtoMessage() {}

func (x *GetDevicesDeviceUsersClientStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[141]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDevicesDeviceUsersClientStateRequest.ProtoReflect.Descriptor instead.
func (*GetDevicesDeviceUsersClientStateRequest) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{141}
}

func (x *GetDevicesDeviceUsersClientStateRequest) GetCustomer() string {
	if x != nil && x.Customer != nil {
		return *x.Customer
	}
	return ""
}

func (x *GetDevicesDeviceUsersClientStateRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type PatchDevicesDeviceUsersClientStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Customer                      *string      `protobuf:"bytes,1,opt,name=customer" json:"customer,omitempty"`
	Name                          *string      `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	UpdateMask                    *string      `protobuf:"bytes,3,opt,name=update_mask,json=updateMask" json:"update_mask,omitempty"`
	DevicesDeviceUsersClientState *ClientState `protobuf:"bytes,4,opt,name=devices_device_users_client_state,json=devicesDeviceUsersClientState" json:"devices_device_users_client_state,omitempty"`
}

func (x *PatchDevicesDeviceUsersClientStateRequest) Reset() {
	*x = PatchDevicesDeviceUsersClientStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[142]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PatchDevicesDeviceUsersClientStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatchDevicesDeviceUsersClientStateRequest) ProtoMessage() {}

func (x *PatchDevicesDeviceUsersClientStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[142]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatchDevicesDeviceUsersClientStateRequest.ProtoReflect.Descriptor instead.
func (*PatchDevicesDeviceUsersClientStateRequest) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{142}
}

func (x *PatchDevicesDeviceUsersClientStateRequest) GetCustomer() string {
	if x != nil && x.Customer != nil {
		return *x.Customer
	}
	return ""
}

func (x *PatchDevicesDeviceUsersClientStateRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *PatchDevicesDeviceUsersClientStateRequest) GetUpdateMask() string {
	if x != nil && x.UpdateMask != nil {
		return *x.UpdateMask
	}
	return ""
}

func (x *PatchDevicesDeviceUsersClientStateRequest) GetDevicesDeviceUsersClientState() *ClientState {
	if x != nil {
		return x.DevicesDeviceUsersClientState
	}
	return nil
}

type CreateGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InitialGroupConfig *string `protobuf:"bytes,1,opt,name=initial_group_config,json=initialGroupConfig" json:"initial_group_config,omitempty"`
	Group              *Group  `protobuf:"bytes,2,opt,name=group" json:"group,omitempty"`
}

func (x *CreateGroupRequest) Reset() {
	*x = CreateGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[143]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupRequest) ProtoMessage() {}

func (x *CreateGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[143]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupRequest.ProtoReflect.Descriptor instead.
func (*CreateGroupRequest) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{143}
}

func (x *CreateGroupRequest) GetInitialGroupConfig() string {
	if x != nil && x.InitialGroupConfig != nil {
		return *x.InitialGroupConfig
	}
	return ""
}

func (x *CreateGroupRequest) GetGroup() *Group {
	if x != nil {
		return x.Group
	}
	return nil
}

type DeleteGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *DeleteGroupRequest) Reset() {
	*x = DeleteGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[144]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGroupRequest) ProtoMessage() {}

func (x *DeleteGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[144]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGroupRequest.ProtoReflect.Descriptor instead.
func (*DeleteGroupRequest) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{144}
}

func (x *DeleteGroupRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GetGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *GetGroupRequest) Reset() {
	*x = GetGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[145]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupRequest) ProtoMessage() {}

func (x *GetGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[145]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupRequest.ProtoReflect.Descriptor instead.
func (*GetGroupRequest) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{145}
}

func (x *GetGroupRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GetSecuritySettingsGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	ReadMask *string `protobuf:"bytes,2,opt,name=read_mask,json=readMask" json:"read_mask,omitempty"`
}

func (x *GetSecuritySettingsGroupRequest) Reset() {
	*x = GetSecuritySettingsGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[146]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSecuritySettingsGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSecuritySettingsGroupRequest) ProtoMessage() {}

func (x *GetSecuritySettingsGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[146]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSecuritySettingsGroupRequest.ProtoReflect.Descriptor instead.
func (*GetSecuritySettingsGroupRequest) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{146}
}

func (x *GetSecuritySettingsGroupRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GetSecuritySettingsGroupRequest) GetReadMask() string {
	if x != nil && x.ReadMask != nil {
		return *x.ReadMask
	}
	return ""
}

type ListGroupsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize  *int32  `protobuf:"varint,1,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	PageToken *string `protobuf:"bytes,2,opt,name=page_token,json=pageToken" json:"page_token,omitempty"`
	Parent    *string `protobuf:"bytes,3,opt,name=parent" json:"parent,omitempty"`
	View      *string `protobuf:"bytes,4,opt,name=view" json:"view,omitempty"`
}

func (x *ListGroupsRequest) Reset() {
	*x = ListGroupsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[147]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGroupsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGroupsRequest) ProtoMessage() {}

func (x *ListGroupsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[147]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGroupsRequest.ProtoReflect.Descriptor instead.
func (*ListGroupsRequest) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{147}
}

func (x *ListGroupsRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *ListGroupsRequest) GetPageToken() string {
	if x != nil && x.PageToken != nil {
		return *x.PageToken
	}
	return ""
}

func (x *ListGroupsRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

func (x *ListGroupsRequest) GetView() string {
	if x != nil && x.View != nil {
		return *x.View
	}
	return ""
}

type LookupGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupKeyId        *string `protobuf:"bytes,1,opt,name=group_key_id,json=groupKeyId" json:"group_key_id,omitempty"`
	GroupKeyNamespace *string `protobuf:"bytes,2,opt,name=group_key_namespace,json=groupKeyNamespace" json:"group_key_namespace,omitempty"`
}

func (x *LookupGroupRequest) Reset() {
	*x = LookupGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[148]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LookupGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LookupGroupRequest) ProtoMessage() {}

func (x *LookupGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[148]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LookupGroupRequest.ProtoReflect.Descriptor instead.
func (*LookupGroupRequest) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{148}
}

func (x *LookupGroupRequest) GetGroupKeyId() string {
	if x != nil && x.GroupKeyId != nil {
		return *x.GroupKeyId
	}
	return ""
}

func (x *LookupGroupRequest) GetGroupKeyNamespace() string {
	if x != nil && x.GroupKeyNamespace != nil {
		return *x.GroupKeyNamespace
	}
	return ""
}

type PatchGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	UpdateMask *string `protobuf:"bytes,2,opt,name=update_mask,json=updateMask" json:"update_mask,omitempty"`
	Group      *Group  `protobuf:"bytes,3,opt,name=group" json:"group,omitempty"`
}

func (x *PatchGroupRequest) Reset() {
	*x = PatchGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[149]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PatchGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatchGroupRequest) ProtoMessage() {}

func (x *PatchGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[149]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatchGroupRequest.ProtoReflect.Descriptor instead.
func (*PatchGroupRequest) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{149}
}

func (x *PatchGroupRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *PatchGroupRequest) GetUpdateMask() string {
	if x != nil && x.UpdateMask != nil {
		return *x.UpdateMask
	}
	return ""
}

func (x *PatchGroupRequest) GetGroup() *Group {
	if x != nil {
		return x.Group
	}
	return nil
}

type SearchGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderBy   *string `protobuf:"bytes,1,opt,name=order_by,json=orderBy" json:"order_by,omitempty"`
	PageSize  *int32  `protobuf:"varint,2,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	PageToken *string `protobuf:"bytes,3,opt,name=page_token,json=pageToken" json:"page_token,omitempty"`
	Query     *string `protobuf:"bytes,4,opt,name=query" json:"query,omitempty"`
	View      *string `protobuf:"bytes,5,opt,name=view" json:"view,omitempty"`
}

func (x *SearchGroupRequest) Reset() {
	*x = SearchGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[150]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchGroupRequest) ProtoMessage() {}

func (x *SearchGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[150]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchGroupRequest.ProtoReflect.Descriptor instead.
func (*SearchGroupRequest) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{150}
}

func (x *SearchGroupRequest) GetOrderBy() string {
	if x != nil && x.OrderBy != nil {
		return *x.OrderBy
	}
	return ""
}

func (x *SearchGroupRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *SearchGroupRequest) GetPageToken() string {
	if x != nil && x.PageToken != nil {
		return *x.PageToken
	}
	return ""
}

func (x *SearchGroupRequest) GetQuery() string {
	if x != nil && x.Query != nil {
		return *x.Query
	}
	return ""
}

func (x *SearchGroupRequest) GetView() string {
	if x != nil && x.View != nil {
		return *x.View
	}
	return ""
}

type UpdateSecuritySettingsGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       *string           `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	UpdateMask *string           `protobuf:"bytes,2,opt,name=update_mask,json=updateMask" json:"update_mask,omitempty"`
	Group      *SecuritySettings `protobuf:"bytes,3,opt,name=group" json:"group,omitempty"`
}

func (x *UpdateSecuritySettingsGroupRequest) Reset() {
	*x = UpdateSecuritySettingsGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[151]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSecuritySettingsGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSecuritySettingsGroupRequest) ProtoMessage() {}

func (x *UpdateSecuritySettingsGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[151]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSecuritySettingsGroupRequest.ProtoReflect.Descriptor instead.
func (*UpdateSecuritySettingsGroupRequest) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{151}
}

func (x *UpdateSecuritySettingsGroupRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UpdateSecuritySettingsGroupRequest) GetUpdateMask() string {
	if x != nil && x.UpdateMask != nil {
		return *x.UpdateMask
	}
	return ""
}

func (x *UpdateSecuritySettingsGroupRequest) GetGroup() *SecuritySettings {
	if x != nil {
		return x.Group
	}
	return nil
}

type CheckTransitiveMembershipGroupsMembershipRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent *string `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
	Query  *string `protobuf:"bytes,2,opt,name=query" json:"query,omitempty"`
}

func (x *CheckTransitiveMembershipGroupsMembershipRequest) Reset() {
	*x = CheckTransitiveMembershipGroupsMembershipRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[152]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckTransitiveMembershipGroupsMembershipRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckTransitiveMembershipGroupsMembershipRequest) ProtoMessage() {}

func (x *CheckTransitiveMembershipGroupsMembershipRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[152]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckTransitiveMembershipGroupsMembershipRequest.ProtoReflect.Descriptor instead.
func (*CheckTransitiveMembershipGroupsMembershipRequest) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{152}
}

func (x *CheckTransitiveMembershipGroupsMembershipRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

func (x *CheckTransitiveMembershipGroupsMembershipRequest) GetQuery() string {
	if x != nil && x.Query != nil {
		return *x.Query
	}
	return ""
}

type CreateGroupsMembershipRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent           *string     `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
	GroupsMembership *Membership `protobuf:"bytes,2,opt,name=groups_membership,json=groupsMembership" json:"groups_membership,omitempty"`
}

func (x *CreateGroupsMembershipRequest) Reset() {
	*x = CreateGroupsMembershipRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[153]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGroupsMembershipRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupsMembershipRequest) ProtoMessage() {}

func (x *CreateGroupsMembershipRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[153]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupsMembershipRequest.ProtoReflect.Descriptor instead.
func (*CreateGroupsMembershipRequest) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{153}
}

func (x *CreateGroupsMembershipRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

func (x *CreateGroupsMembershipRequest) GetGroupsMembership() *Membership {
	if x != nil {
		return x.GroupsMembership
	}
	return nil
}

type DeleteGroupsMembershipRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *DeleteGroupsMembershipRequest) Reset() {
	*x = DeleteGroupsMembershipRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[154]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteGroupsMembershipRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGroupsMembershipRequest) ProtoMessage() {}

func (x *DeleteGroupsMembershipRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[154]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGroupsMembershipRequest.ProtoReflect.Descriptor instead.
func (*DeleteGroupsMembershipRequest) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{154}
}

func (x *DeleteGroupsMembershipRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GetGroupsMembershipRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *GetGroupsMembershipRequest) Reset() {
	*x = GetGroupsMembershipRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[155]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupsMembershipRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupsMembershipRequest) ProtoMessage() {}

func (x *GetGroupsMembershipRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[155]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupsMembershipRequest.ProtoReflect.Descriptor instead.
func (*GetGroupsMembershipRequest) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{155}
}

func (x *GetGroupsMembershipRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GetMembershipGraphGroupsMembershipRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent *string `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
	Query  *string `protobuf:"bytes,2,opt,name=query" json:"query,omitempty"`
}

func (x *GetMembershipGraphGroupsMembershipRequest) Reset() {
	*x = GetMembershipGraphGroupsMembershipRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[156]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMembershipGraphGroupsMembershipRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMembershipGraphGroupsMembershipRequest) ProtoMessage() {}

func (x *GetMembershipGraphGroupsMembershipRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[156]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMembershipGraphGroupsMembershipRequest.ProtoReflect.Descriptor instead.
func (*GetMembershipGraphGroupsMembershipRequest) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{156}
}

func (x *GetMembershipGraphGroupsMembershipRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

func (x *GetMembershipGraphGroupsMembershipRequest) GetQuery() string {
	if x != nil && x.Query != nil {
		return *x.Query
	}
	return ""
}

type ListGroupsMembershipsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize  *int32  `protobuf:"varint,1,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	PageToken *string `protobuf:"bytes,2,opt,name=page_token,json=pageToken" json:"page_token,omitempty"`
	Parent    *string `protobuf:"bytes,3,opt,name=parent" json:"parent,omitempty"`
	View      *string `protobuf:"bytes,4,opt,name=view" json:"view,omitempty"`
}

func (x *ListGroupsMembershipsRequest) Reset() {
	*x = ListGroupsMembershipsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[157]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGroupsMembershipsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGroupsMembershipsRequest) ProtoMessage() {}

func (x *ListGroupsMembershipsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[157]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGroupsMembershipsRequest.ProtoReflect.Descriptor instead.
func (*ListGroupsMembershipsRequest) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{157}
}

func (x *ListGroupsMembershipsRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *ListGroupsMembershipsRequest) GetPageToken() string {
	if x != nil && x.PageToken != nil {
		return *x.PageToken
	}
	return ""
}

func (x *ListGroupsMembershipsRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

func (x *ListGroupsMembershipsRequest) GetView() string {
	if x != nil && x.View != nil {
		return *x.View
	}
	return ""
}

type LookupGroupsMembershipRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberKeyId        *string `protobuf:"bytes,1,opt,name=member_key_id,json=memberKeyId" json:"member_key_id,omitempty"`
	MemberKeyNamespace *string `protobuf:"bytes,2,opt,name=member_key_namespace,json=memberKeyNamespace" json:"member_key_namespace,omitempty"`
	Parent             *string `protobuf:"bytes,3,opt,name=parent" json:"parent,omitempty"`
}

func (x *LookupGroupsMembershipRequest) Reset() {
	*x = LookupGroupsMembershipRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[158]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LookupGroupsMembershipRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LookupGroupsMembershipRequest) ProtoMessage() {}

func (x *LookupGroupsMembershipRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[158]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LookupGroupsMembershipRequest.ProtoReflect.Descriptor instead.
func (*LookupGroupsMembershipRequest) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{158}
}

func (x *LookupGroupsMembershipRequest) GetMemberKeyId() string {
	if x != nil && x.MemberKeyId != nil {
		return *x.MemberKeyId
	}
	return ""
}

func (x *LookupGroupsMembershipRequest) GetMemberKeyNamespace() string {
	if x != nil && x.MemberKeyNamespace != nil {
		return *x.MemberKeyNamespace
	}
	return ""
}

func (x *LookupGroupsMembershipRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

type ModifyMembershipRolesGroupsMembershipRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name             *string                       `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	GroupsMembership *ModifyMembershipRolesRequest `protobuf:"bytes,2,opt,name=groups_membership,json=groupsMembership" json:"groups_membership,omitempty"`
}

func (x *ModifyMembershipRolesGroupsMembershipRequest) Reset() {
	*x = ModifyMembershipRolesGroupsMembershipRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[159]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyMembershipRolesGroupsMembershipRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyMembershipRolesGroupsMembershipRequest) ProtoMessage() {}

func (x *ModifyMembershipRolesGroupsMembershipRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[159]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyMembershipRolesGroupsMembershipRequest.ProtoReflect.Descriptor instead.
func (*ModifyMembershipRolesGroupsMembershipRequest) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{159}
}

func (x *ModifyMembershipRolesGroupsMembershipRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ModifyMembershipRolesGroupsMembershipRequest) GetGroupsMembership() *ModifyMembershipRolesRequest {
	if x != nil {
		return x.GroupsMembership
	}
	return nil
}

type SearchDirectGroupsGroupsMembershipRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderBy   *string `protobuf:"bytes,1,opt,name=order_by,json=orderBy" json:"order_by,omitempty"`
	PageSize  *int32  `protobuf:"varint,2,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	PageToken *string `protobuf:"bytes,3,opt,name=page_token,json=pageToken" json:"page_token,omitempty"`
	Parent    *string `protobuf:"bytes,4,opt,name=parent" json:"parent,omitempty"`
	Query     *string `protobuf:"bytes,5,opt,name=query" json:"query,omitempty"`
}

func (x *SearchDirectGroupsGroupsMembershipRequest) Reset() {
	*x = SearchDirectGroupsGroupsMembershipRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[160]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchDirectGroupsGroupsMembershipRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchDirectGroupsGroupsMembershipRequest) ProtoMessage() {}

func (x *SearchDirectGroupsGroupsMembershipRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[160]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchDirectGroupsGroupsMembershipRequest.ProtoReflect.Descriptor instead.
func (*SearchDirectGroupsGroupsMembershipRequest) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{160}
}

func (x *SearchDirectGroupsGroupsMembershipRequest) GetOrderBy() string {
	if x != nil && x.OrderBy != nil {
		return *x.OrderBy
	}
	return ""
}

func (x *SearchDirectGroupsGroupsMembershipRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *SearchDirectGroupsGroupsMembershipRequest) GetPageToken() string {
	if x != nil && x.PageToken != nil {
		return *x.PageToken
	}
	return ""
}

func (x *SearchDirectGroupsGroupsMembershipRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

func (x *SearchDirectGroupsGroupsMembershipRequest) GetQuery() string {
	if x != nil && x.Query != nil {
		return *x.Query
	}
	return ""
}

type SearchTransitiveGroupsGroupsMembershipRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize  *int32  `protobuf:"varint,1,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	PageToken *string `protobuf:"bytes,2,opt,name=page_token,json=pageToken" json:"page_token,omitempty"`
	Parent    *string `protobuf:"bytes,3,opt,name=parent" json:"parent,omitempty"`
	Query     *string `protobuf:"bytes,4,opt,name=query" json:"query,omitempty"`
}

func (x *SearchTransitiveGroupsGroupsMembershipRequest) Reset() {
	*x = SearchTransitiveGroupsGroupsMembershipRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[161]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchTransitiveGroupsGroupsMembershipRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchTransitiveGroupsGroupsMembershipRequest) ProtoMessage() {}

func (x *SearchTransitiveGroupsGroupsMembershipRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[161]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchTransitiveGroupsGroupsMembershipRequest.ProtoReflect.Descriptor instead.
func (*SearchTransitiveGroupsGroupsMembershipRequest) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{161}
}

func (x *SearchTransitiveGroupsGroupsMembershipRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *SearchTransitiveGroupsGroupsMembershipRequest) GetPageToken() string {
	if x != nil && x.PageToken != nil {
		return *x.PageToken
	}
	return ""
}

func (x *SearchTransitiveGroupsGroupsMembershipRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

func (x *SearchTransitiveGroupsGroupsMembershipRequest) GetQuery() string {
	if x != nil && x.Query != nil {
		return *x.Query
	}
	return ""
}

type SearchTransitiveMembershipsGroupsMembershipRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize  *int32  `protobuf:"varint,1,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	PageToken *string `protobuf:"bytes,2,opt,name=page_token,json=pageToken" json:"page_token,omitempty"`
	Parent    *string `protobuf:"bytes,3,opt,name=parent" json:"parent,omitempty"`
}

func (x *SearchTransitiveMembershipsGroupsMembershipRequest) Reset() {
	*x = SearchTransitiveMembershipsGroupsMembershipRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[162]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchTransitiveMembershipsGroupsMembershipRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchTransitiveMembershipsGroupsMembershipRequest) ProtoMessage() {}

func (x *SearchTransitiveMembershipsGroupsMembershipRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[162]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchTransitiveMembershipsGroupsMembershipRequest.ProtoReflect.Descriptor instead.
func (*SearchTransitiveMembershipsGroupsMembershipRequest) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{162}
}

func (x *SearchTransitiveMembershipsGroupsMembershipRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *SearchTransitiveMembershipsGroupsMembershipRequest) GetPageToken() string {
	if x != nil && x.PageToken != nil {
		return *x.PageToken
	}
	return ""
}

func (x *SearchTransitiveMembershipsGroupsMembershipRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

type CreateInboundSamlSsoProfileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InboundSamlSsoProfile *InboundSamlSsoProfile `protobuf:"bytes,1,opt,name=inbound_saml_sso_profile,json=inboundSamlSsoProfile" json:"inbound_saml_sso_profile,omitempty"`
}

func (x *CreateInboundSamlSsoProfileRequest) Reset() {
	*x = CreateInboundSamlSsoProfileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[163]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateInboundSamlSsoProfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateInboundSamlSsoProfileRequest) ProtoMessage() {}

func (x *CreateInboundSamlSsoProfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[163]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateInboundSamlSsoProfileRequest.ProtoReflect.Descriptor instead.
func (*CreateInboundSamlSsoProfileRequest) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{163}
}

func (x *CreateInboundSamlSsoProfileRequest) GetInboundSamlSsoProfile() *InboundSamlSsoProfile {
	if x != nil {
		return x.InboundSamlSsoProfile
	}
	return nil
}

type DeleteInboundSamlSsoProfileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *DeleteInboundSamlSsoProfileRequest) Reset() {
	*x = DeleteInboundSamlSsoProfileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[164]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteInboundSamlSsoProfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteInboundSamlSsoProfileRequest) ProtoMessage() {}

func (x *DeleteInboundSamlSsoProfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[164]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteInboundSamlSsoProfileRequest.ProtoReflect.Descriptor instead.
func (*DeleteInboundSamlSsoProfileRequest) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{164}
}

func (x *DeleteInboundSamlSsoProfileRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GetInboundSamlSsoProfileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *GetInboundSamlSsoProfileRequest) Reset() {
	*x = GetInboundSamlSsoProfileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[165]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInboundSamlSsoProfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInboundSamlSsoProfileRequest) ProtoMessage() {}

func (x *GetInboundSamlSsoProfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[165]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInboundSamlSsoProfileRequest.ProtoReflect.Descriptor instead.
func (*GetInboundSamlSsoProfileRequest) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{165}
}

func (x *GetInboundSamlSsoProfileRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type ListInboundSamlSsoProfilesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filter    *string `protobuf:"bytes,1,opt,name=filter" json:"filter,omitempty"`
	PageSize  *int32  `protobuf:"varint,2,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	PageToken *string `protobuf:"bytes,3,opt,name=page_token,json=pageToken" json:"page_token,omitempty"`
}

func (x *ListInboundSamlSsoProfilesRequest) Reset() {
	*x = ListInboundSamlSsoProfilesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[166]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListInboundSamlSsoProfilesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInboundSamlSsoProfilesRequest) ProtoMessage() {}

func (x *ListInboundSamlSsoProfilesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[166]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInboundSamlSsoProfilesRequest.ProtoReflect.Descriptor instead.
func (*ListInboundSamlSsoProfilesRequest) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{166}
}

func (x *ListInboundSamlSsoProfilesRequest) GetFilter() string {
	if x != nil && x.Filter != nil {
		return *x.Filter
	}
	return ""
}

func (x *ListInboundSamlSsoProfilesRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *ListInboundSamlSsoProfilesRequest) GetPageToken() string {
	if x != nil && x.PageToken != nil {
		return *x.PageToken
	}
	return ""
}

type PatchInboundSamlSsoProfileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                  *string                `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	UpdateMask            *string                `protobuf:"bytes,2,opt,name=update_mask,json=updateMask" json:"update_mask,omitempty"`
	InboundSamlSsoProfile *InboundSamlSsoProfile `protobuf:"bytes,3,opt,name=inbound_saml_sso_profile,json=inboundSamlSsoProfile" json:"inbound_saml_sso_profile,omitempty"`
}

func (x *PatchInboundSamlSsoProfileRequest) Reset() {
	*x = PatchInboundSamlSsoProfileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[167]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PatchInboundSamlSsoProfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatchInboundSamlSsoProfileRequest) ProtoMessage() {}

func (x *PatchInboundSamlSsoProfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[167]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatchInboundSamlSsoProfileRequest.ProtoReflect.Descriptor instead.
func (*PatchInboundSamlSsoProfileRequest) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{167}
}

func (x *PatchInboundSamlSsoProfileRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *PatchInboundSamlSsoProfileRequest) GetUpdateMask() string {
	if x != nil && x.UpdateMask != nil {
		return *x.UpdateMask
	}
	return ""
}

func (x *PatchInboundSamlSsoProfileRequest) GetInboundSamlSsoProfile() *InboundSamlSsoProfile {
	if x != nil {
		return x.InboundSamlSsoProfile
	}
	return nil
}

type AddInboundSamlSsoProfilesIdpCredentialRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent                              *string                  `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
	InboundSamlSsoProfilesIdpCredential *AddIdpCredentialRequest `protobuf:"bytes,2,opt,name=inbound_saml_sso_profiles_idp_credential,json=inboundSamlSsoProfilesIdpCredential" json:"inbound_saml_sso_profiles_idp_credential,omitempty"`
}

func (x *AddInboundSamlSsoProfilesIdpCredentialRequest) Reset() {
	*x = AddInboundSamlSsoProfilesIdpCredentialRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[168]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddInboundSamlSsoProfilesIdpCredentialRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddInboundSamlSsoProfilesIdpCredentialRequest) ProtoMessage() {}

func (x *AddInboundSamlSsoProfilesIdpCredentialRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[168]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddInboundSamlSsoProfilesIdpCredentialRequest.ProtoReflect.Descriptor instead.
func (*AddInboundSamlSsoProfilesIdpCredentialRequest) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{168}
}

func (x *AddInboundSamlSsoProfilesIdpCredentialRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

func (x *AddInboundSamlSsoProfilesIdpCredentialRequest) GetInboundSamlSsoProfilesIdpCredential() *AddIdpCredentialRequest {
	if x != nil {
		return x.InboundSamlSsoProfilesIdpCredential
	}
	return nil
}

type DeleteInboundSamlSsoProfilesIdpCredentialRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *DeleteInboundSamlSsoProfilesIdpCredentialRequest) Reset() {
	*x = DeleteInboundSamlSsoProfilesIdpCredentialRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[169]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteInboundSamlSsoProfilesIdpCredentialRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteInboundSamlSsoProfilesIdpCredentialRequest) ProtoMessage() {}

func (x *DeleteInboundSamlSsoProfilesIdpCredentialRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[169]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteInboundSamlSsoProfilesIdpCredentialRequest.ProtoReflect.Descriptor instead.
func (*DeleteInboundSamlSsoProfilesIdpCredentialRequest) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{169}
}

func (x *DeleteInboundSamlSsoProfilesIdpCredentialRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GetInboundSamlSsoProfilesIdpCredentialRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *GetInboundSamlSsoProfilesIdpCredentialRequest) Reset() {
	*x = GetInboundSamlSsoProfilesIdpCredentialRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[170]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInboundSamlSsoProfilesIdpCredentialRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInboundSamlSsoProfilesIdpCredentialRequest) ProtoMessage() {}

func (x *GetInboundSamlSsoProfilesIdpCredentialRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[170]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInboundSamlSsoProfilesIdpCredentialRequest.ProtoReflect.Descriptor instead.
func (*GetInboundSamlSsoProfilesIdpCredentialRequest) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{170}
}

func (x *GetInboundSamlSsoProfilesIdpCredentialRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type ListInboundSamlSsoProfilesIdpCredentialsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize  *int32  `protobuf:"varint,1,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	PageToken *string `protobuf:"bytes,2,opt,name=page_token,json=pageToken" json:"page_token,omitempty"`
	Parent    *string `protobuf:"bytes,3,opt,name=parent" json:"parent,omitempty"`
}

func (x *ListInboundSamlSsoProfilesIdpCredentialsRequest) Reset() {
	*x = ListInboundSamlSsoProfilesIdpCredentialsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[171]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListInboundSamlSsoProfilesIdpCredentialsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInboundSamlSsoProfilesIdpCredentialsRequest) ProtoMessage() {}

func (x *ListInboundSamlSsoProfilesIdpCredentialsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[171]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInboundSamlSsoProfilesIdpCredentialsRequest.ProtoReflect.Descriptor instead.
func (*ListInboundSamlSsoProfilesIdpCredentialsRequest) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{171}
}

func (x *ListInboundSamlSsoProfilesIdpCredentialsRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *ListInboundSamlSsoProfilesIdpCredentialsRequest) GetPageToken() string {
	if x != nil && x.PageToken != nil {
		return *x.PageToken
	}
	return ""
}

func (x *ListInboundSamlSsoProfilesIdpCredentialsRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

type CreateInboundSsoAssignmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InboundSsoAssignment *InboundSsoAssignment `protobuf:"bytes,1,opt,name=inbound_sso_assignment,json=inboundSsoAssignment" json:"inbound_sso_assignment,omitempty"`
}

func (x *CreateInboundSsoAssignmentRequest) Reset() {
	*x = CreateInboundSsoAssignmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[172]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateInboundSsoAssignmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateInboundSsoAssignmentRequest) ProtoMessage() {}

func (x *CreateInboundSsoAssignmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[172]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateInboundSsoAssignmentRequest.ProtoReflect.Descriptor instead.
func (*CreateInboundSsoAssignmentRequest) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{172}
}

func (x *CreateInboundSsoAssignmentRequest) GetInboundSsoAssignment() *InboundSsoAssignment {
	if x != nil {
		return x.InboundSsoAssignment
	}
	return nil
}

type DeleteInboundSsoAssignmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *DeleteInboundSsoAssignmentRequest) Reset() {
	*x = DeleteInboundSsoAssignmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[173]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteInboundSsoAssignmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteInboundSsoAssignmentRequest) ProtoMessage() {}

func (x *DeleteInboundSsoAssignmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[173]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteInboundSsoAssignmentRequest.ProtoReflect.Descriptor instead.
func (*DeleteInboundSsoAssignmentRequest) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{173}
}

func (x *DeleteInboundSsoAssignmentRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GetInboundSsoAssignmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *GetInboundSsoAssignmentRequest) Reset() {
	*x = GetInboundSsoAssignmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[174]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInboundSsoAssignmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInboundSsoAssignmentRequest) ProtoMessage() {}

func (x *GetInboundSsoAssignmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[174]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInboundSsoAssignmentRequest.ProtoReflect.Descriptor instead.
func (*GetInboundSsoAssignmentRequest) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{174}
}

func (x *GetInboundSsoAssignmentRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type ListInboundSsoAssignmentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filter    *string `protobuf:"bytes,1,opt,name=filter" json:"filter,omitempty"`
	PageSize  *int32  `protobuf:"varint,2,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	PageToken *string `protobuf:"bytes,3,opt,name=page_token,json=pageToken" json:"page_token,omitempty"`
}

func (x *ListInboundSsoAssignmentsRequest) Reset() {
	*x = ListInboundSsoAssignmentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[175]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListInboundSsoAssignmentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInboundSsoAssignmentsRequest) ProtoMessage() {}

func (x *ListInboundSsoAssignmentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[175]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInboundSsoAssignmentsRequest.ProtoReflect.Descriptor instead.
func (*ListInboundSsoAssignmentsRequest) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{175}
}

func (x *ListInboundSsoAssignmentsRequest) GetFilter() string {
	if x != nil && x.Filter != nil {
		return *x.Filter
	}
	return ""
}

func (x *ListInboundSsoAssignmentsRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *ListInboundSsoAssignmentsRequest) GetPageToken() string {
	if x != nil && x.PageToken != nil {
		return *x.PageToken
	}
	return ""
}

type PatchInboundSsoAssignmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                 *string               `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	UpdateMask           *string               `protobuf:"bytes,2,opt,name=update_mask,json=updateMask" json:"update_mask,omitempty"`
	InboundSsoAssignment *InboundSsoAssignment `protobuf:"bytes,3,opt,name=inbound_sso_assignment,json=inboundSsoAssignment" json:"inbound_sso_assignment,omitempty"`
}

func (x *PatchInboundSsoAssignmentRequest) Reset() {
	*x = PatchInboundSsoAssignmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[176]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PatchInboundSsoAssignmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatchInboundSsoAssignmentRequest) ProtoMessage() {}

func (x *PatchInboundSsoAssignmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[176]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatchInboundSsoAssignmentRequest.ProtoReflect.Descriptor instead.
func (*PatchInboundSsoAssignmentRequest) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{176}
}

func (x *PatchInboundSsoAssignmentRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *PatchInboundSsoAssignmentRequest) GetUpdateMask() string {
	if x != nil && x.UpdateMask != nil {
		return *x.UpdateMask
	}
	return ""
}

func (x *PatchInboundSsoAssignmentRequest) GetInboundSsoAssignment() *InboundSsoAssignment {
	if x != nil {
		return x.InboundSsoAssignment
	}
	return nil
}

type ListOrgUnitsMembershipsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Customer  *string `protobuf:"bytes,1,opt,name=customer" json:"customer,omitempty"`
	Filter    *string `protobuf:"bytes,2,opt,name=filter" json:"filter,omitempty"`
	PageSize  *int32  `protobuf:"varint,3,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	PageToken *string `protobuf:"bytes,4,opt,name=page_token,json=pageToken" json:"page_token,omitempty"`
	Parent    *string `protobuf:"bytes,5,opt,name=parent" json:"parent,omitempty"`
}

func (x *ListOrgUnitsMembershipsRequest) Reset() {
	*x = ListOrgUnitsMembershipsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[177]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrgUnitsMembershipsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrgUnitsMembershipsRequest) ProtoMessage() {}

func (x *ListOrgUnitsMembershipsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[177]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrgUnitsMembershipsRequest.ProtoReflect.Descriptor instead.
func (*ListOrgUnitsMembershipsRequest) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{177}
}

func (x *ListOrgUnitsMembershipsRequest) GetCustomer() string {
	if x != nil && x.Customer != nil {
		return *x.Customer
	}
	return ""
}

func (x *ListOrgUnitsMembershipsRequest) GetFilter() string {
	if x != nil && x.Filter != nil {
		return *x.Filter
	}
	return ""
}

func (x *ListOrgUnitsMembershipsRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *ListOrgUnitsMembershipsRequest) GetPageToken() string {
	if x != nil && x.PageToken != nil {
		return *x.PageToken
	}
	return ""
}

func (x *ListOrgUnitsMembershipsRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

type MoveOrgUnitsMembershipRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name               *string                   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	OrgUnitsMembership *MoveOrgMembershipRequest `protobuf:"bytes,2,opt,name=org_units_membership,json=orgUnitsMembership" json:"org_units_membership,omitempty"`
}

func (x *MoveOrgUnitsMembershipRequest) Reset() {
	*x = MoveOrgUnitsMembershipRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[178]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoveOrgUnitsMembershipRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveOrgUnitsMembershipRequest) ProtoMessage() {}

func (x *MoveOrgUnitsMembershipRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[178]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveOrgUnitsMembershipRequest.ProtoReflect.Descriptor instead.
func (*MoveOrgUnitsMembershipRequest) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{178}
}

func (x *MoveOrgUnitsMembershipRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *MoveOrgUnitsMembershipRequest) GetOrgUnitsMembership() *MoveOrgMembershipRequest {
	if x != nil {
		return x.OrgUnitsMembership
	}
	return nil
}

type GetPolicyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *GetPolicyRequest) Reset() {
	*x = GetPolicyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[179]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPolicyRequest) ProtoMessage() {}

func (x *GetPolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[179]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPolicyRequest.ProtoReflect.Descriptor instead.
func (*GetPolicyRequest) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{179}
}

func (x *GetPolicyRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type ListPoliciesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filter    *string `protobuf:"bytes,1,opt,name=filter" json:"filter,omitempty"`
	PageSize  *int32  `protobuf:"varint,2,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	PageToken *string `protobuf:"bytes,3,opt,name=page_token,json=pageToken" json:"page_token,omitempty"`
}

func (x *ListPoliciesRequest) Reset() {
	*x = ListPoliciesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[180]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPoliciesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPoliciesRequest) ProtoMessage() {}

func (x *ListPoliciesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[180]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPoliciesRequest.ProtoReflect.Descriptor instead.
func (*ListPoliciesRequest) Descriptor() ([]byte, []int) {
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP(), []int{180}
}

func (x *ListPoliciesRequest) GetFilter() string {
	if x != nil && x.Filter != nil {
		return *x.Filter
	}
	return ""
}

func (x *ListPoliciesRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *ListPoliciesRequest) GetPageToken() string {
	if x != nil && x.PageToken != nil {
		return *x.PageToken
	}
	return ""
}

var File_google_apps_cloudidentity_groups_v1beta1_service_proto protoreflect.FileDescriptor

var file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDesc = []byte{
	0x0a, 0x36, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x70, 0x73, 0x2f, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2f, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x28, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x23, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x6c, 0x6f, 0x6e, 0x67, 0x72, 0x75, 0x6e,
	0x6e, 0x69, 0x6e, 0x67, 0x2f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x39, 0x0a, 0x21, 0x41, 0x64, 0x64, 0x49, 0x64, 0x70, 0x43, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x34, 0x0a, 0x17,
	0x41, 0x64, 0x64, 0x49, 0x64, 0x70, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x65, 0x6d, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x65, 0x6d, 0x44, 0x61,
	0x74, 0x61, 0x22, 0xa6, 0x03, 0x0a, 0x11, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x74, 0x73, 0x5f,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0f, 0x63, 0x74, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x12, 0x36, 0x0a, 0x17, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x5f,
	0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x55, 0x6e,
	0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x3f, 0x0a, 0x1c,
	0x68, 0x61, 0x73, 0x5f, 0x70, 0x6f, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x6c, 0x79, 0x5f,
	0x68, 0x61, 0x72, 0x6d, 0x66, 0x75, 0x6c, 0x5f, 0x61, 0x70, 0x70, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x19, 0x68, 0x61, 0x73, 0x50, 0x6f, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x6c, 0x79, 0x48, 0x61, 0x72, 0x6d, 0x66, 0x75, 0x6c, 0x41, 0x70, 0x70, 0x73, 0x12, 0x32, 0x0a,
	0x15, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x2f, 0x0a, 0x13, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x5f, 0x70,
	0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x50, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65,
	0x67, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x5f, 0x77,
	0x6f, 0x72, 0x6b, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x13, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x57, 0x6f, 0x72, 0x6b, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x5f, 0x62, 0x6f, 0x6f, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x76,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x42, 0x6f, 0x6f, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x76,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x5f, 0x61, 0x70, 0x70, 0x73, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x41, 0x70, 0x70, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x36, 0x0a, 0x18, 0x41,
	0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x22, 0x72, 0x0a, 0x19, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x55, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61,
	0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x0a, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x22, 0x34, 0x0a, 0x16, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x22, 0x70, 0x0a,
	0x17, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x22,
	0xf7, 0x01, 0x0a, 0x11, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x65, 0x0a, 0x13, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x65, 0x5f,
	0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x35, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x42, 0x72,
	0x6f, 0x77, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x11, 0x63, 0x68, 0x72, 0x6f, 0x6d,
	0x65, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2a, 0x0a, 0x11,
	0x63, 0x68, 0x72, 0x6f, 0x6d, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x65, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x4f, 0x0a, 0x16, 0x6c, 0x61, 0x73, 0x74,
	0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x13, 0x6c, 0x61, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x53, 0x79, 0x6e, 0x63, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xbd, 0x07, 0x0a, 0x0b, 0x42, 0x72,
	0x6f, 0x77, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x38, 0x0a, 0x18, 0x62, 0x72, 0x6f,
	0x77, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x62, 0x72, 0x6f,
	0x77, 0x73, 0x65, 0x72, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x62, 0x72,
	0x6f, 0x77, 0x73, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x41, 0x0a, 0x1e,
	0x69, 0x73, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x74, 0x5f, 0x69, 0x6e, 0x5f, 0x64, 0x6e, 0x73, 0x5f,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x19, 0x69, 0x73, 0x42, 0x75, 0x69, 0x6c, 0x74, 0x49, 0x6e, 0x44,
	0x6e, 0x73, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12,
	0x4b, 0x0a, 0x23, 0x69, 0x73, 0x5f, 0x62, 0x75, 0x6c, 0x6b, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x5f, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1e, 0x69, 0x73,
	0x42, 0x75, 0x6c, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x41, 0x6e, 0x61,
	0x6c, 0x79, 0x73, 0x69, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x39, 0x0a, 0x19,
	0x69, 0x73, 0x5f, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x65, 0x5f, 0x63, 0x6c, 0x65, 0x61, 0x6e, 0x75,
	0x70, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x16, 0x69, 0x73, 0x43, 0x68, 0x72, 0x6f, 0x6d, 0x65, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x75, 0x70,
	0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x4d, 0x0a, 0x24, 0x69, 0x73, 0x5f, 0x63, 0x68,
	0x72, 0x6f, 0x6d, 0x65, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x6b,
	0x74, 0x6f, 0x70, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1f, 0x69, 0x73, 0x43, 0x68, 0x72, 0x6f, 0x6d, 0x65, 0x52,
	0x65, 0x6d, 0x6f, 0x74, 0x65, 0x44, 0x65, 0x73, 0x6b, 0x74, 0x6f, 0x70, 0x41, 0x70, 0x70, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x48, 0x0a, 0x21, 0x69, 0x73, 0x5f, 0x66, 0x69, 0x6c,
	0x65, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x61, 0x6e, 0x61, 0x6c, 0x79,
	0x73, 0x69, 0x73, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x1d, 0x69, 0x73, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x12, 0x44, 0x0a, 0x1f, 0x69, 0x73, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x75, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x5f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x5f, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1b, 0x69, 0x73, 0x46, 0x69, 0x6c,
	0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x40, 0x0a, 0x1d, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x61,
	0x6c, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x19, 0x69,
	0x73, 0x52, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x55, 0x72, 0x6c, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x4a, 0x0a, 0x22, 0x69, 0x73, 0x5f, 0x73,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x6e,
	0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x1e, 0x69, 0x73, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x12, 0x39, 0x0a, 0x19, 0x69, 0x73, 0x5f, 0x73, 0x69, 0x74, 0x65, 0x5f,
	0x69, 0x73, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x69, 0x73, 0x53, 0x69, 0x74, 0x65, 0x49,
	0x73, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12,
	0x44, 0x0a, 0x1f, 0x69, 0x73, 0x5f, 0x74, 0x68, 0x69, 0x72, 0x64, 0x5f, 0x70, 0x61, 0x72, 0x74,
	0x79, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1b, 0x69, 0x73, 0x54, 0x68, 0x69, 0x72,
	0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x45, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x4d, 0x0a, 0x23, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x61, 0x72,
	0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x20, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x50, 0x72, 0x6f, 0x74,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x54, 0x72, 0x69,
	0x67, 0x67, 0x65, 0x72, 0x12, 0x43, 0x0a, 0x1e, 0x73, 0x61, 0x66, 0x65, 0x5f, 0x62, 0x72, 0x6f,
	0x77, 0x73, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1b, 0x73, 0x61,
	0x66, 0x65, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x1d, 0x0a, 0x1b, 0x43, 0x61, 0x6e,
	0x63, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x35, 0x0a, 0x17, 0x43, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x57, 0x69, 0x70, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x22,
	0x64, 0x0a, 0x18, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x57, 0x69, 0x70, 0x65, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x06, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x06, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x22, 0x39, 0x0a, 0x1b, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x57,
	0x69, 0x70, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x22, 0x75, 0x0a, 0x1c, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x57, 0x69, 0x70, 0x65, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x55, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61,
	0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x0a, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x22, 0xef, 0x03, 0x0a, 0x15, 0x43, 0x65, 0x72, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x12, 0x70, 0x0a, 0x14, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65,
	0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x3d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x65, 0x72, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x13,
	0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x69, 0x6e, 0x67, 0x65, 0x72,
	0x70, 0x72, 0x69, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x12, 0x23, 0x0a,
	0x0d, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x74, 0x68, 0x75, 0x6d, 0x62, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x12, 0x29, 0x0a, 0x10,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x54, 0x0a, 0x18, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x69, 0x74, 0x79, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x16, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x45,
	0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x4a, 0x0a,
	0x13, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x11, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x69, 0x74, 0x79,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x6f, 0x0a, 0x13, 0x43, 0x65, 0x72,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6d, 0x69,
	0x6e, 0x6f, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x4a, 0x0a, 0x21, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x25, 0x0a, 0x0e, 0x68, 0x61, 0x73, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x68, 0x61, 0x73, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x22, 0x93, 0x05, 0x0a, 0x0b, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f,
	0x74, 0x61, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x54, 0x61, 0x67, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61,
	0x6e, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x65, 0x74,
	0x61, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x65, 0x74, 0x61, 0x67, 0x12, 0x21,
	0x0a, 0x0c, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x12, 0x70, 0x0a, 0x0f, 0x6b, 0x65, 0x79, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x70,
	0x61, 0x69, 0x72, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x48, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x50, 0x61, 0x69, 0x72, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x6b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x50, 0x61,
	0x69, 0x72, 0x73, 0x12, 0x44, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x1a, 0x80, 0x01, 0x0a, 0x12, 0x4b, 0x65,
	0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x50, 0x61, 0x69, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x54, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x3e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x7b, 0x0a, 0x13,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x12,
	0x48, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x30, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x22, 0x44, 0x0a, 0x2c, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x61, 0x6d, 0x6c, 0x53, 0x73,
	0x6f, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22,
	0x2d, 0x0a, 0x2b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64,
	0x53, 0x73, 0x6f, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x7b,
	0x0a, 0x14, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x62, 0x6f, 0x6f, 0x6c,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x26, 0x0a, 0x24, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x64, 0x70, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x2e, 0x0a, 0x2c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x62,
	0x6f, 0x75, 0x6e, 0x64, 0x53, 0x61, 0x6d, 0x6c, 0x53, 0x73, 0x6f, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x2d, 0x0a, 0x2b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x62,
	0x6f, 0x75, 0x6e, 0x64, 0x53, 0x73, 0x6f, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x22, 0xf3, 0x0b, 0x0a, 0x06, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x7b, 0x0a,
	0x1b, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69,
	0x63, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x41, 0x6e,
	0x64, 0x72, 0x6f, 0x69, 0x64, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52,
	0x19, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x54, 0x61, 0x67, 0x12, 0x29, 0x0a, 0x10, 0x62, 0x61, 0x73, 0x65, 0x62,
	0x61, 0x6e, 0x64, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x62, 0x61, 0x73, 0x65, 0x62, 0x61, 0x6e, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x12, 0x62, 0x6f, 0x6f, 0x74, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72,
	0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x62, 0x6f, 0x6f, 0x74, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x75, 0x69, 0x6c, 0x64,
	0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62,
	0x75, 0x69, 0x6c, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x2b, 0x0a,
	0x11, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x6f, 0x6d, 0x69, 0x73, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x6f,
	0x6d, 0x69, 0x73, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3a, 0x0a, 0x19, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x5f, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x32, 0x0a, 0x15, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x5f, 0x75, 0x73, 0x62,
	0x5f, 0x64, 0x65, 0x62, 0x75, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x13, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x55, 0x73, 0x62, 0x44, 0x65, 0x62, 0x75,
	0x67, 0x67, 0x69, 0x6e, 0x67, 0x12, 0x29, 0x0a, 0x10, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0xab, 0x01, 0x0a, 0x29, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x76, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x69,
	0x66, 0x69, 0x63, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x50, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70,
	0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e,
	0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x26, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x70, 0x65, 0x63,
	0x69, 0x66, 0x69, 0x63, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6d,
	0x65, 0x69, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6d, 0x65, 0x69, 0x12, 0x25,
	0x0a, 0x0e, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x40, 0x0a, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x73, 0x79,
	0x6e, 0x63, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x53,
	0x79, 0x6e, 0x63, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72,
	0x65, 0x72, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61,
	0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x65, 0x69, 0x64, 0x18, 0x16,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x65, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12,
	0x1d, 0x0a, 0x0a, 0x6f, 0x73, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x1a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x25,
	0x0a, 0x0e, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x18, 0x1b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72,
	0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x4a, 0x0a,
	0x13, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x61, 0x74, 0x63, 0x68, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x11, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x50, 0x61, 0x74, 0x63, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2a,
	0x0a, 0x11, 0x75, 0x6e, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x75, 0x6e, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x77, 0x69,
	0x66, 0x69, 0x5f, 0x6d, 0x61, 0x63, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73,
	0x18, 0x21, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x77, 0x69, 0x66, 0x69, 0x4d, 0x61, 0x63, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0xc5, 0x03, 0x0a, 0x0a, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x70, 0x72,
	0x6f, 0x6d, 0x69, 0x73, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x6f, 0x6d, 0x69, 0x73, 0x65, 0x64, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x42, 0x0a, 0x0f, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x66, 0x69, 0x72, 0x73, 0x74, 0x53, 0x79, 0x6e,
	0x63, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x40, 0x0a, 0x0e, 0x6c, 0x61,
	0x73, 0x74, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c,
	0x6c, 0x61, 0x73, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x10,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x22, 0x2d, 0x0a, 0x10, 0x44, 0x73, 0x61, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x53, 0x69, 0x7a, 0x65, 0x22,
	0xc3, 0x01, 0x0a, 0x14, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x55, 0x0a, 0x07, 0x71, 0x75, 0x65, 0x72,
	0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x07, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x12,
	0x54, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x3c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x4e, 0x0a, 0x11, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x69, 0x0a, 0x12, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x3b, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x69, 0x6d, 0x65,
	0x22, 0x81, 0x04, 0x0a, 0x26, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69,
	0x63, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x96, 0x01, 0x0a, 0x12,
	0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x67, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x11, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x6c, 0x73, 0x12, 0x6a, 0x0a, 0x12, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f,
	0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x3b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x42, 0x72, 0x6f, 0x77,
	0x73, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x11, 0x62,
	0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x12, 0x76, 0x0a, 0x16, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f,
	0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x3f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x65, 0x72, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x52, 0x15, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x1a, 0x5a, 0x0a, 0x16, 0x41, 0x64, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x39, 0x0a, 0x09, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4b, 0x65,
	0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22,
	0x4b, 0x0a, 0x0c, 0x45, 0x78, 0x70, 0x69, 0x72, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12,
	0x3b, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xcf, 0x01, 0x0a,
	0x1a, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x47, 0x72,
	0x61, 0x70, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x68, 0x0a, 0x0e, 0x61,
	0x64, 0x6a, 0x61, 0x63, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70,
	0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x41, 0x64, 0x6a, 0x61, 0x63, 0x65, 0x6e,
	0x63, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0d, 0x61, 0x64, 0x6a, 0x61, 0x63, 0x65, 0x6e, 0x63,
	0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x47, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61,
	0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x22, 0xc6,
	0x03, 0x0a, 0x31, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x73, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x56, 0x31, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x74, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x5f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0f, 0x63, 0x74, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x12, 0x36, 0x0a, 0x17, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x5f, 0x75, 0x6e, 0x6b, 0x6e,
	0x6f, 0x77, 0x6e, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x15, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77,
	0x6e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x3f, 0x0a, 0x1c, 0x68, 0x61, 0x73, 0x5f,
	0x70, 0x6f, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x6c, 0x79, 0x5f, 0x68, 0x61, 0x72, 0x6d,
	0x66, 0x75, 0x6c, 0x5f, 0x61, 0x70, 0x70, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x19,
	0x68, 0x61, 0x73, 0x50, 0x6f, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x6c, 0x79, 0x48, 0x61,
	0x72, 0x6d, 0x66, 0x75, 0x6c, 0x41, 0x70, 0x70, 0x73, 0x12, 0x32, 0x0a, 0x15, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2f, 0x0a,
	0x13, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x5f, 0x70, 0x72, 0x69, 0x76, 0x69,
	0x6c, 0x65, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x73, 0x68, 0x69, 0x70, 0x50, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x12, 0x32,
	0x0a, 0x15, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x5f,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x73,
	0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x57, 0x6f, 0x72, 0x6b, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x62,
	0x6f, 0x6f, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x76, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x65, 0x64, 0x42, 0x6f, 0x6f, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x76, 0x65, 0x72, 0x69, 0x66,
	0x79, 0x5f, 0x61, 0x70, 0x70, 0x73, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x41, 0x70, 0x70, 0x73,
	0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x3b, 0x0a, 0x39, 0x47, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x41, 0x70, 0x70, 0x73, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x56, 0x31, 0x41, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x22, 0xb2, 0x01, 0x0a, 0x39, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x41,
	0x70, 0x70, 0x73, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x56, 0x31, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x75, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x75, 0x73, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x54, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x73, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x56, 0x31, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x0a, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x22, 0x39, 0x0a, 0x37, 0x47, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x73, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x56, 0x31, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x22, 0xb0, 0x01, 0x0a, 0x37, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x41,
	0x70, 0x70, 0x73, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x56, 0x31, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x75, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x54, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61,
	0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x73, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x56,
	0x31, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x0a, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x22, 0xb8, 0x02, 0x0a, 0x31, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x41, 0x70, 0x70, 0x73, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x56, 0x31, 0x42, 0x72, 0x6f, 0x77,
	0x73, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x85, 0x01,
	0x0a, 0x13, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x65, 0x5f, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x55, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x41, 0x70, 0x70,
	0x73, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x56, 0x31, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x11, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x65, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x65, 0x5f,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49,
	0x64, 0x12, 0x4f, 0x0a, 0x16, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x13, 0x6c,
	0x61, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x79, 0x6e, 0x63, 0x54, 0x69,
	0x6d, 0x65, 0x22, 0xdd, 0x07, 0x0a, 0x2b, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x41, 0x70, 0x70,
	0x73, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x56, 0x31, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x38, 0x0a, 0x18, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x27, 0x0a, 0x0f,
	0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x41, 0x0a, 0x1e, 0x69, 0x73, 0x5f, 0x62, 0x75, 0x69, 0x6c,
	0x74, 0x5f, 0x69, 0x6e, 0x5f, 0x64, 0x6e, 0x73, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x19, 0x69,
	0x73, 0x42, 0x75, 0x69, 0x6c, 0x74, 0x49, 0x6e, 0x44, 0x6e, 0x73, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x4b, 0x0a, 0x23, 0x69, 0x73, 0x5f, 0x62,
	0x75, 0x6c, 0x6b, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x61,
	0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1e, 0x69, 0x73, 0x42, 0x75, 0x6c, 0x6b, 0x44, 0x61, 0x74,
	0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x45, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x39, 0x0a, 0x19, 0x69, 0x73, 0x5f, 0x63, 0x68, 0x72, 0x6f,
	0x6d, 0x65, 0x5f, 0x63, 0x6c, 0x65, 0x61, 0x6e, 0x75, 0x70, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x69, 0x73, 0x43, 0x68, 0x72, 0x6f,
	0x6d, 0x65, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x75, 0x70, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x12, 0x4d, 0x0a, 0x24, 0x69, 0x73, 0x5f, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x65, 0x5f, 0x72, 0x65,
	0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x6b, 0x74, 0x6f, 0x70, 0x5f, 0x61, 0x70, 0x70,
	0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1f,
	0x69, 0x73, 0x43, 0x68, 0x72, 0x6f, 0x6d, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x44, 0x65,
	0x73, 0x6b, 0x74, 0x6f, 0x70, 0x41, 0x70, 0x70, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x12,
	0x48, 0x0a, 0x21, 0x69, 0x73, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x6c,
	0x6f, 0x61, 0x64, 0x5f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x5f, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1d, 0x69, 0x73, 0x46, 0x69,
	0x6c, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73,
	0x69, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x44, 0x0a, 0x1f, 0x69, 0x73, 0x5f,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x61, 0x6e, 0x61, 0x6c,
	0x79, 0x73, 0x69, 0x73, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x1b, 0x69, 0x73, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12,
	0x40, 0x0a, 0x1d, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x75,
	0x72, 0x6c, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x19, 0x69, 0x73, 0x52, 0x65, 0x61, 0x6c, 0x74, 0x69,
	0x6d, 0x65, 0x55, 0x72, 0x6c, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x12, 0x4a, 0x0a, 0x22, 0x69, 0x73, 0x5f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x5f,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1e, 0x69,
	0x73, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x41, 0x6e,
	0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x39, 0x0a,
	0x19, 0x69, 0x73, 0x5f, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x69, 0x73, 0x6f, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x16, 0x69, 0x73, 0x53, 0x69, 0x74, 0x65, 0x49, 0x73, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x44, 0x0a, 0x1f, 0x69, 0x73, 0x5f, 0x74,
	0x68, 0x69, 0x72, 0x64, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x69, 0x6e, 0x67, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x1b, 0x69, 0x73, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x4d,
	0x0a, 0x23, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x20, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x57,
	0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x12, 0x43, 0x0a,
	0x1e, 0x73, 0x61, 0x66, 0x65, 0x5f, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x69, 0x6e, 0x67, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1b, 0x73, 0x61, 0x66, 0x65, 0x42, 0x72, 0x6f, 0x77, 0x73,
	0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x22, 0x3a, 0x0a, 0x38, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x73,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x56, 0x31, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x57, 0x69, 0x70, 0x65,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0xa4,
	0x01, 0x0a, 0x38, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x73, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x56, 0x31, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x57, 0x69, 0x70, 0x65, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x68, 0x0a, 0x06, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x50, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x41, 0x70, 0x70,
	0x73, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x56, 0x31, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x06, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x22, 0x3e, 0x0a, 0x3c, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x41,
	0x70, 0x70, 0x73, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x56, 0x31, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x57,
	0x69, 0x70, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0xb5, 0x01, 0x0a, 0x3c, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x41, 0x70, 0x70, 0x73, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x56, 0x31, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x57, 0x69, 0x70, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x75, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x54, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x41, 0x70, 0x70,
	0x73, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x56, 0x31, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x22, 0xb0, 0x04,
	0x0a, 0x35, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x73, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x56, 0x31, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x90, 0x01, 0x0a, 0x14, 0x63, 0x65, 0x72, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x5d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x73, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x56, 0x31, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x13, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x69,
	0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x66, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x73,
	0x73, 0x75, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x70, 0x72, 0x69, 0x6e,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x70, 0x72,
	0x69, 0x6e, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x54,
	0x0a, 0x18, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x16, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x45, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x4a, 0x0a, 0x13, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x69, 0x74, 0x79,
	0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x11, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x22, 0x8f, 0x01, 0x0a, 0x33, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x73, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x56, 0x31, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x61, 0x6a, 0x6f,
	0x72, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a,
	0x0d, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x22, 0xf4, 0x05, 0x0a, 0x2b, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x41, 0x70, 0x70,
	0x73, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x56, 0x31, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x74, 0x61, 0x67, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x61, 0x73, 0x73, 0x65, 0x74, 0x54, 0x61, 0x67,
	0x73, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6d,
	0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x3b, 0x0a, 0x0b,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x65, 0x74, 0x61, 0x67, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x65, 0x74, 0x61, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x68, 0x65,
	0x61, 0x6c, 0x74, 0x68, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x90, 0x01,
	0x0a, 0x0f, 0x6b, 0x65, 0x79, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x70, 0x61, 0x69, 0x72,
	0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x68, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x73, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x56, 0x31, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x4b,
	0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x50, 0x61, 0x69, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x0d, 0x6b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x50, 0x61, 0x69, 0x72, 0x73,
	0x12, 0x44, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x63, 0x6f, 0x72, 0x65,
	0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x1a, 0xa0, 0x01, 0x0a, 0x12, 0x4b, 0x65, 0x79, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x50, 0x61, 0x69, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x74, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x5e,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x41, 0x70, 0x70, 0x73, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x56, 0x31, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x36, 0x0a, 0x34, 0x47, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x73, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x56, 0x31, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x9b, 0x01, 0x0a, 0x34, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x73,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x56, 0x31, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6f,
	0x6f, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x62, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0b, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x36, 0x0a, 0x34, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x73, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x56, 0x31, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x3a, 0x0a, 0x38, 0x47, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x41, 0x70, 0x70, 0x73, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x56, 0x31, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x22, 0xb1, 0x0c, 0x0a, 0x26, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x41, 0x70,
	0x70, 0x73, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x56, 0x31, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x9b,
	0x01, 0x0a, 0x1b, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x69,
	0x66, 0x69, 0x63, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x5b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70,
	0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e,
	0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x73, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x56, 0x31,
	0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x52, 0x19, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66,
	0x69, 0x63, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x61, 0x73, 0x73, 0x65, 0x74, 0x54, 0x61, 0x67, 0x12, 0x29, 0x0a, 0x10, 0x62, 0x61, 0x73,
	0x65, 0x62, 0x61, 0x6e, 0x64, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x62, 0x61, 0x73, 0x65, 0x62, 0x61, 0x6e, 0x64, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x12, 0x62, 0x6f, 0x6f, 0x74, 0x6c, 0x6f, 0x61, 0x64,
	0x65, 0x72, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x62, 0x6f, 0x6f, 0x74, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x11,
	0x63, 0x6f, 0x6d, 0x70, 0x72, 0x6f, 0x6d, 0x69, 0x73, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x6f, 0x6d,
	0x69, 0x73, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x3a, 0x0a, 0x19, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x5f,
	0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x32, 0x0a, 0x15, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x5f, 0x75, 0x73, 0x62, 0x5f,
	0x64, 0x65, 0x62, 0x75, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x13, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x55, 0x73, 0x62, 0x44, 0x65, 0x62, 0x75, 0x67,
	0x67, 0x69, 0x6e, 0x67, 0x12, 0x29, 0x0a, 0x10, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0xcb, 0x01, 0x0a, 0x29, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66,
	0x69, 0x63, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x70, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70,
	0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x47,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x73, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x56, 0x31, 0x45,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x26, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x70, 0x65, 0x63, 0x69,
	0x66, 0x69, 0x63, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6d, 0x65,
	0x69, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6d, 0x65, 0x69, 0x12, 0x25, 0x0a,
	0x0e, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x40, 0x0a, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x73, 0x79, 0x6e,
	0x63, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x79,
	0x6e, 0x63, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x72, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63,
	0x74, 0x75, 0x72, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x65, 0x69, 0x64, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x65, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1d,
	0x0a, 0x0a, 0x6f, 0x73, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x19, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6f, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a,
	0x0e, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18,
	0x1a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65,
	0x6c, 0x65, 0x61, 0x73, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x4a, 0x0a, 0x13,
	0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x11, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x50,
	0x61, 0x74, 0x63, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2a, 0x0a,
	0x11, 0x75, 0x6e, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x75, 0x6e, 0x69, 0x66, 0x69, 0x65,
	0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x77, 0x69, 0x66,
	0x69, 0x5f, 0x6d, 0x61, 0x63, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18,
	0x20, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x77, 0x69, 0x66, 0x69, 0x4d, 0x61, 0x63, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0xe5, 0x03, 0x0a, 0x2a, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x41, 0x70, 0x70, 0x73, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x56, 0x31, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x6f,
	0x6d, 0x69, 0x73, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x6f, 0x6d, 0x69, 0x73, 0x65, 0x64, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x42, 0x0a, 0x0f, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x66, 0x69, 0x72, 0x73, 0x74, 0x53, 0x79, 0x6e, 0x63,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x40, 0x0a, 0x0e, 0x6c, 0x61, 0x73,
	0x74, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x6c,
	0x61, 0x73, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x22,
	0x84, 0x05, 0x0a, 0x46, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x73, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x56, 0x31, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0xb7, 0x01, 0x0a, 0x12, 0x61,
	0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x87, 0x01, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x73, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x56, 0x31, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x11, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x6c, 0x73, 0x12, 0x8a, 0x01, 0x0a, 0x12, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72,
	0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x5b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x47, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x73, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x56, 0x31, 0x42, 0x72, 0x6f,
	0x77, 0x73, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x11,
	0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x12, 0x96, 0x01, 0x0a, 0x16, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x5f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x47, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x73, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x56, 0x31, 0x43, 0x65,
	0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x52, 0x15, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x1a, 0x5a, 0x0a, 0x16, 0x41, 0x64,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x3a, 0x0a, 0x38, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x41, 0x70, 0x70, 0x73, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x56, 0x31, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e,
	0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x73, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x3b, 0x0a, 0x39, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x73,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x56, 0x31, 0x53, 0x69, 0x67, 0x6e, 0x6f, 0x75, 0x74, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x3b, 0x0a, 0x39, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x73, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x56, 0x31, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x36, 0x0a, 0x34,
	0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x73, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x56, 0x31,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x34, 0x0a, 0x32, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x41, 0x70,
	0x70, 0x73, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x56, 0x31, 0x57, 0x69, 0x70, 0x65, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x9e, 0x01, 0x0a, 0x32, 0x47,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x73, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x56, 0x31, 0x57,
	0x69, 0x70, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x68, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x50, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x47, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x73, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x56, 0x31, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x22, 0x38, 0x0a, 0x36, 0x47,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x73, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x56, 0x31, 0x57,
	0x69, 0x70, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0xaf, 0x01, 0x0a, 0x36, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x41, 0x70, 0x70, 0x73, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x56, 0x31, 0x57, 0x69, 0x70, 0x65, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x75, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x54, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61,
	0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x73, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x56,
	0x31, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x0a, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x22, 0x8c, 0x06, 0x0a, 0x05, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x12, 0x67, 0x0a, 0x15, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x33, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x4b, 0x65, 0x79, 0x52, 0x13, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x74, 0x0a, 0x16,
	0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x14, 0x64, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x50, 0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61,
	0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4b, 0x65, 0x79, 0x52, 0x08, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x4b, 0x65, 0x79, 0x12, 0x53, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70,
	0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x57, 0x0a, 0x0c, 0x70, 0x6f, 0x73, 0x69, 0x78, 0x5f, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x78, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x0b, 0x70, 0x6f, 0x73, 0x69, 0x78, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x3b,
	0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x1a, 0x39, 0x0a, 0x0b, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xb1, 0x03, 0x0a, 0x0d, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x12, 0x50, 0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70,
	0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4b, 0x65, 0x79, 0x52, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x4b, 0x65, 0x79, 0x12, 0x5b, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70,
	0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x58, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70,
	0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x68, 0x69, 0x70, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x1a,
	0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x9c, 0x02, 0x0a, 0x0d, 0x49,
	0x64, 0x70, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x5c, 0x0a, 0x0c,
	0x64, 0x73, 0x61, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x44, 0x73,
	0x61, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a,
	0x64, 0x73, 0x61, 0x4b, 0x65, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x5c,
	0x0a, 0x0c, 0x72, 0x73, 0x61, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70,
	0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e,
	0x52, 0x73, 0x61, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x0a, 0x72, 0x73, 0x61, 0x4b, 0x65, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3b, 0x0a, 0x0b,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x97, 0x02, 0x0a, 0x15, 0x49, 0x6e,
	0x62, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x61, 0x6d, 0x6c, 0x53, 0x73, 0x6f, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x12,
	0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x56, 0x0a, 0x0a, 0x69, 0x64, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x2e, 0x53, 0x61, 0x6d, 0x6c, 0x49, 0x64, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x09, 0x69, 0x64, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x53,
	0x0a, 0x09, 0x73, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x36, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x53, 0x61, 0x6d,
	0x6c, 0x53, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x08, 0x73, 0x70, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x22, 0xff, 0x02, 0x0a, 0x14, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x53,
	0x73, 0x6f, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x72, 0x61, 0x6e, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b,
	0x12, 0x59, 0x0a, 0x0d, 0x73, 0x61, 0x6d, 0x6c, 0x5f, 0x73, 0x73, 0x6f, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x31, 0x2e, 0x53, 0x61, 0x6d, 0x6c, 0x53, 0x73, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b,
	0x73, 0x61, 0x6d, 0x6c, 0x53, 0x73, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x62, 0x0a, 0x10, 0x73,
	0x69, 0x67, 0x6e, 0x5f, 0x69, 0x6e, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61,
	0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2e, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x52,
	0x0e, 0x73, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x12,
	0x19, 0x0a, 0x08, 0x73, 0x73, 0x6f, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x73, 0x73, 0x6f, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x26, 0x0a,
	0x0f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x6f, 0x72, 0x67, 0x5f, 0x75, 0x6e, 0x69, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4f, 0x72,
	0x67, 0x55, 0x6e, 0x69, 0x74, 0x22, 0x45, 0x0a, 0x17, 0x49, 0x73, 0x49, 0x6e, 0x76, 0x69, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2a, 0x0a, 0x11, 0x69, 0x73, 0x5f, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x73, 0x49,
	0x6e, 0x76, 0x69, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x22, 0x9e, 0x01, 0x0a,
	0x18, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x0d, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x35, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x9a, 0x01,
	0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x0c, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x34, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78,
	0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x89, 0x01, 0x0a, 0x13, 0x4c,
	0x69, 0x73, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4a, 0x0a, 0x07, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70,
	0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x07, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x26,
	0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67,
	0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x85, 0x01, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a,
	0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x06,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xa6,
	0x01, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x70, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x60, 0x0a,
	0x0f, 0x69, 0x64, 0x70, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x2e, 0x49, 0x64, 0x70, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52,
	0x0e, 0x69, 0x64, 0x70, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x12,
	0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61,
	0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xc8, 0x01, 0x0a, 0x22, 0x4c, 0x69, 0x73, 0x74,
	0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x61, 0x6d, 0x6c, 0x53, 0x73, 0x6f, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7a,
	0x0a, 0x19, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x73, 0x61, 0x6d, 0x6c, 0x5f, 0x73,
	0x73, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x3f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x49, 0x6e, 0x62,
	0x6f, 0x75, 0x6e, 0x64, 0x53, 0x61, 0x6d, 0x6c, 0x53, 0x73, 0x6f, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x52, 0x16, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x61, 0x6d, 0x6c, 0x53,
	0x73, 0x6f, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65,
	0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x22, 0xc3, 0x01, 0x0a, 0x21, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x62, 0x6f, 0x75,
	0x6e, 0x64, 0x53, 0x73, 0x6f, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x76, 0x0a, 0x17, 0x69, 0x6e, 0x62, 0x6f,
	0x75, 0x6e, 0x64, 0x5f, 0x73, 0x73, 0x6f, 0x5f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x73, 0x6f, 0x41,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x15, 0x69, 0x6e, 0x62, 0x6f, 0x75,
	0x6e, 0x64, 0x53, 0x73, 0x6f, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50,
	0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x99, 0x01, 0x0a, 0x17, 0x4c, 0x69, 0x73,
	0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68,
	0x69, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52,
	0x0b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x73, 0x12, 0x26, 0x0a, 0x0f,
	0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xa6, 0x01, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65,
	0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x60, 0x0a, 0x0f, 0x6f,
	0x72, 0x67, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70,
	0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e,
	0x4f, 0x72, 0x67, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x0e, 0x6f,
	0x72, 0x67, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x73, 0x22, 0x8c, 0x01,
	0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x4c,
	0x0a, 0x08, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x30, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x52, 0x08, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x22, 0xaa, 0x01, 0x0a,
	0x1b, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x0f,
	0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x63, 0x0a, 0x10, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x76,
	0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x2d, 0x0a, 0x17, 0x4c, 0x6f, 0x6f,
	0x6b, 0x75, 0x70, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x32, 0x0a, 0x1c, 0x4c, 0x6f, 0x6f, 0x6b,
	0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x4e, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x79, 0x0a, 0x1d,
	0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x53, 0x65, 0x6c, 0x66, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12,
	0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61,
	0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x8e, 0x02, 0x0a, 0x0e, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x65, 0x0a, 0x14, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x5f,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x33, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x4b, 0x65, 0x79, 0x52, 0x12, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x58,
	0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x42, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74,
	0x69, 0x76, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x6f, 0x6c,
	0x65, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x22, 0x8a, 0x01, 0x0a, 0x11, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5f,
	0x0a, 0x0a, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x52, 0x65,
	0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0xe4, 0x03, 0x0a, 0x0a, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x68, 0x69, 0x70, 0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x52, 0x0a, 0x0a,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x33, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x4b, 0x65, 0x79, 0x52, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4b, 0x65, 0x79,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x65, 0x0a, 0x14, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65,
	0x64, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x33, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x4b, 0x65, 0x79, 0x52, 0x12, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72,
	0x65, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x12, 0x4e, 0x0a, 0x05, 0x72,
	0x6f, 0x6c, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70,
	0x52, 0x6f, 0x6c, 0x65, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x3b, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x7b, 0x0a, 0x17,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x41, 0x64, 0x6a, 0x61, 0x63, 0x65,
	0x6e, 0x63, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x05, 0x65, 0x64, 0x67, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x05, 0x65, 0x64,
	0x67, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x22, 0xce, 0x03, 0x0a, 0x12, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x50, 0x0a, 0x09, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x4b, 0x65, 0x79, 0x52, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4b, 0x65, 0x79, 0x12, 0x60, 0x0a,
	0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x48, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x68, 0x69, 0x70, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12,
	0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x12,
	0x4e, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x68, 0x69, 0x70, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x1a,
	0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xfc, 0x01, 0x0a, 0x0e, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x5b, 0x0a,
	0x0d, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70,
	0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e,
	0x45, 0x78, 0x70, 0x69, 0x72, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x0c, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x79,
	0x0a, 0x17, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x76,
	0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x40, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x72,
	0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x16, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76,
	0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x3b, 0x0a, 0x23, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x74, 0x72,
	0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x8f, 0x02, 0x0a, 0x1c, 0x4d, 0x6f, 0x64, 0x69, 0x66,
	0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x6f, 0x6c, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x55, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x5f, 0x72,
	0x6f, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70,
	0x52, 0x6f, 0x6c, 0x65, 0x52, 0x08, 0x61, 0x64, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x21,
	0x0a, 0x0c, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x6f, 0x6c, 0x65,
	0x73, 0x12, 0x75, 0x0a, 0x13, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x6f, 0x6c, 0x65,
	0x73, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x45,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x11, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c,
	0x65, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x75, 0x0a, 0x1d, 0x4d, 0x6f, 0x64, 0x69,
	0x66, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x6f, 0x6c, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x0a, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x68, 0x69, 0x70, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x22,
	0x68, 0x0a, 0x18, 0x4d, 0x6f, 0x76, 0x65, 0x4f, 0x72, 0x67, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x68, 0x69, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x14, 0x64, 0x65, 0x73, 0x74, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x72, 0x67, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4f, 0x72, 0x67, 0x55, 0x6e, 0x69, 0x74, 0x22, 0x6e, 0x0a, 0x0d, 0x4f, 0x72, 0x67,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x75, 0x72, 0x69,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x55, 0x72,
	0x69, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xf3, 0x01, 0x0a, 0x06, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x58, 0x0a, 0x0c, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x52, 0x0b, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x4b,
	0x0a, 0x07, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x31, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x52, 0x07, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22,
	0x73, 0x0a, 0x0b, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x67, 0x5f, 0x75, 0x6e, 0x69, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x6e, 0x69, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x22, 0x4f, 0x0a, 0x0a, 0x50, 0x6f, 0x73, 0x69, 0x78, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x67, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x03, 0x67, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x2d, 0x0a, 0x15, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x22, 0xac, 0x01, 0x0a, 0x16, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x91, 0x01, 0x0a, 0x1d, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x72,
	0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x6f, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x61, 0x6c,
	0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x1b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x2d, 0x0a, 0x10, 0x52, 0x73, 0x61, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x4b, 0x65, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x5f, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x53, 0x69,
	0x7a, 0x65, 0x22, 0xc8, 0x01, 0x0a, 0x0d, 0x53, 0x61, 0x6d, 0x6c, 0x49, 0x64, 0x70, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x11, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x55, 0x72, 0x69, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49,
	0x64, 0x12, 0x2e, 0x0a, 0x13, 0x6c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x5f, 0x72, 0x65, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x6c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72,
	0x69, 0x12, 0x3a, 0x0a, 0x1a, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x67, 0x6e,
	0x5f, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x75, 0x72, 0x69, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x53, 0x69, 0x67,
	0x6e, 0x4f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x72, 0x69, 0x22, 0x70, 0x0a,
	0x0c, 0x53, 0x61, 0x6d, 0x6c, 0x53, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x43, 0x0a,
	0x1e, 0x61, 0x73, 0x73, 0x65, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x75,
	0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x75, 0x72, 0x69, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1b, 0x61, 0x73, 0x73, 0x65, 0x72, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55,
	0x72, 0x69, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22,
	0x46, 0x0a, 0x0b, 0x53, 0x61, 0x6d, 0x6c, 0x53, 0x73, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x37,
	0x0a, 0x18, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x73, 0x61, 0x6d, 0x6c, 0x5f, 0x73,
	0x73, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x15, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x61, 0x6d, 0x6c, 0x53, 0x73, 0x6f,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x22, 0xa4, 0x01, 0x0a, 0x1a, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x68, 0x69, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69,
	0x70, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x73, 0x68, 0x69, 0x70, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x87,
	0x01, 0x0a, 0x14, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x31, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50,
	0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xa3, 0x01, 0x0a, 0x1e, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x0b, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x37, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x73, 0x68, 0x69, 0x70, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xa9,
	0x01, 0x0a, 0x23, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74,
	0x69, 0x76, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x68, 0x69, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69,
	0x70, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78,
	0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x92, 0x01, 0x0a, 0x10, 0x53,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12,
	0x6a, 0x0a, 0x12, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x1b, 0x0a, 0x19, 0x53, 0x65, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x69, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xc1, 0x01, 0x0a,
	0x07, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x52, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x1a, 0x4e, 0x0a, 0x0a, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x3f, 0x0a, 0x0e, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69,
	0x6f, 0x72, 0x12, 0x2d, 0x0a, 0x12, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x63,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x66, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x2e, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x2e, 0x0a, 0x18, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69,
	0x70, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0x44, 0x0a, 0x2c, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x61, 0x6d, 0x6c, 0x53, 0x73,
	0x6f, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22,
	0x2d, 0x0a, 0x2b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64,
	0x53, 0x73, 0x6f, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x9f,
	0x01, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x68, 0x69, 0x70, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1d,
	0x0a, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x12, 0x61, 0x0a,
	0x0f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x5f, 0x72, 0x6f, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x6f, 0x6c, 0x65,
	0x52, 0x0e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x6f, 0x6c, 0x65,
	0x22, 0xa1, 0x01, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x10, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x5f, 0x73, 0x65, 0x6e,
	0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6d,
	0x61, 0x69, 0x6c, 0x73, 0x53, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x22, 0x5b, 0x0a, 0x11, 0x57, 0x69, 0x70, 0x65, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x11, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f,
	0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x65, 0x74, 0x4c, 0x6f, 0x63,
	0x6b, 0x22, 0x5e, 0x0a, 0x12, 0x57, 0x69, 0x70, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x31, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x22, 0x33, 0x0a, 0x15, 0x57, 0x69, 0x70, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x22, 0x6f, 0x0a, 0x16, 0x57, 0x69, 0x70, 0x65, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x55, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61,
	0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x0a, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x22, 0xbd, 0x01, 0x0a, 0x24, 0x43, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x73, 0x55, 0x73, 0x65, 0x72, 0x69,
	0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x80, 0x01, 0x0a, 0x18, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x31, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x76,
	0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x17,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x73, 0x55, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x76,
	0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x37, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x73, 0x55, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x76, 0x69, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x43, 0x0a, 0x2d, 0x49, 0x73, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x73, 0x55, 0x73, 0x65, 0x72,
	0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xac, 0x01, 0x0a, 0x23, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x73, 0x55, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x76, 0x69, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79,
	0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x22, 0xb8, 0x01, 0x0a, 0x22, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x73, 0x55, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x7e, 0x0a, 0x18, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x73, 0x5f, 0x75, 0x73, 0x65,
	0x72, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x43, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x53, 0x65, 0x6e,
	0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x17, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x73, 0x55, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x8f, 0x01, 0x0a, 0x1e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x57, 0x69, 0x70, 0x65, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x59, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x57, 0x69, 0x70, 0x65, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x22, 0x73, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x55, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x3d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x06,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x22, 0x45, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x42, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0xb3, 0x01, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x22, 0x83, 0x01, 0x0a, 0x18, 0x57, 0x69, 0x70, 0x65,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x53, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x57, 0x69, 0x70, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x22, 0xa9, 0x01,
	0x0a, 0x1f, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x72, 0x0a, 0x13, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x42, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x41, 0x70,
	0x70, 0x72, 0x6f, 0x76, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x11, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x22, 0xa5, 0x01, 0x0a, 0x1d, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x70, 0x0a, 0x13, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x11,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x22, 0xaf, 0x01, 0x0a, 0x22, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x57, 0x69, 0x70, 0x65,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x75, 0x0a, 0x13,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x57, 0x69, 0x70, 0x65, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x11, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x22, 0x50, 0x0a, 0x1e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x4d, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0xc2, 0x01, 0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x42, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x22, 0xd4, 0x01, 0x0a, 0x1e, 0x4c, 0x6f,
	0x6f, 0x6b, 0x75, 0x70, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61,
	0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12,
	0x26, 0x0a, 0x0f, 0x72, 0x61, 0x77, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x61, 0x77, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x22, 0xa3, 0x01, 0x0a, 0x1c, 0x57, 0x69, 0x70, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x6f, 0x0a, 0x13, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x57, 0x69,
	0x70, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x11, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x22, 0x59, 0x0a, 0x27, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0xfd, 0x01, 0x0a, 0x29, 0x50, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x73, 0x6b,
	0x12, 0x7f, 0x0a, 0x21, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x1d, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x22, 0x8d, 0x01, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x61, 0x6c, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x45, 0x0a, 0x05, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x22, 0x28, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x25, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0x52, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74,
	0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x61,
	0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65,
	0x61, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x22, 0x7b, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61,
	0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x76,
	0x69, 0x65, 0x77, 0x22, 0x66, 0x0a, 0x12, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0c, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4b,
	0x65, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x8f, 0x01, 0x0a, 0x11,
	0x50, 0x61, 0x74, 0x63, 0x68, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x6d, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4d, 0x61, 0x73, 0x6b, 0x12, 0x45, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61,
	0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x95, 0x01,
	0x0a, 0x12, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x76, 0x69, 0x65, 0x77, 0x22, 0xab, 0x01, 0x0a, 0x22, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x73,
	0x6b, 0x12, 0x50, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x3a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x53, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x05, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x22, 0x60, 0x0a, 0x30, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x9a, 0x01, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12,
	0x61, 0x0a, 0x11, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x68, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70,
	0x52, 0x10, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68,
	0x69, 0x70, 0x22, 0x33, 0x0a, 0x1d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x30, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x59, 0x0a, 0x29, 0x47, 0x65, 0x74,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x47, 0x72, 0x61, 0x70, 0x68, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x22, 0x86, 0x01, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x69, 0x65,
	0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x22, 0x8d, 0x01,
	0x0a, 0x1d, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x22, 0x0a, 0x0d, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4b, 0x65,
	0x79, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6b, 0x65,
	0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x12, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x22, 0xb7, 0x01,
	0x0a, 0x2c, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68,
	0x69, 0x70, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x73, 0x0a, 0x11, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x5f, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x46, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x10, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x22, 0xb0, 0x01, 0x0a, 0x29, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79,
	0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x99, 0x01, 0x0a, 0x2d, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x88, 0x01, 0x0a, 0x32, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x73, 0x68, 0x69, 0x70, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x22, 0x9e, 0x01, 0x0a, 0x22, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x62, 0x6f,
	0x75, 0x6e, 0x64, 0x53, 0x61, 0x6d, 0x6c, 0x53, 0x73, 0x6f, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x78, 0x0a, 0x18, 0x69, 0x6e, 0x62, 0x6f,
	0x75, 0x6e, 0x64, 0x5f, 0x73, 0x61, 0x6d, 0x6c, 0x5f, 0x73, 0x73, 0x6f, 0x5f, 0x70, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x61, 0x6d,
	0x6c, 0x53, 0x73, 0x6f, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x15, 0x69, 0x6e, 0x62,
	0x6f, 0x75, 0x6e, 0x64, 0x53, 0x61, 0x6d, 0x6c, 0x53, 0x73, 0x6f, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x22, 0x38, 0x0a, 0x22, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x62, 0x6f,
	0x75, 0x6e, 0x64, 0x53, 0x61, 0x6d, 0x6c, 0x53, 0x73, 0x6f, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x35, 0x0a, 0x1f,
	0x47, 0x65, 0x74, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x61, 0x6d, 0x6c, 0x53, 0x73,
	0x6f, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x77, 0x0a, 0x21, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x62, 0x6f, 0x75,
	0x6e, 0x64, 0x53, 0x61, 0x6d, 0x6c, 0x53, 0x73, 0x6f, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xd2, 0x01, 0x0a,
	0x21, 0x50, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x61, 0x6d,
	0x6c, 0x53, 0x73, 0x6f, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4d, 0x61, 0x73, 0x6b, 0x12, 0x78, 0x0a, 0x18, 0x69, 0x6e, 0x62, 0x6f, 0x75,
	0x6e, 0x64, 0x5f, 0x73, 0x61, 0x6d, 0x6c, 0x5f, 0x73, 0x73, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x61, 0x6d, 0x6c,
	0x53, 0x73, 0x6f, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x15, 0x69, 0x6e, 0x62, 0x6f,
	0x75, 0x6e, 0x64, 0x53, 0x61, 0x6d, 0x6c, 0x53, 0x73, 0x6f, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x22, 0xe2, 0x01, 0x0a, 0x2d, 0x41, 0x64, 0x64, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64,
	0x53, 0x61, 0x6d, 0x6c, 0x53, 0x73, 0x6f, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x49,
	0x64, 0x70, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x98, 0x01, 0x0a, 0x28,
	0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x73, 0x61, 0x6d, 0x6c, 0x5f, 0x73, 0x73, 0x6f,
	0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x5f, 0x69, 0x64, 0x70, 0x5f, 0x63, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x41,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x49, 0x64, 0x70,
	0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x23, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x61, 0x6d, 0x6c, 0x53, 0x73,
	0x6f, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x49, 0x64, 0x70, 0x43, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x22, 0x46, 0x0a, 0x30, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x61, 0x6d, 0x6c, 0x53, 0x73, 0x6f, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x49, 0x64, 0x70, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x43,
	0x0a, 0x2d, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x61, 0x6d, 0x6c,
	0x53, 0x73, 0x6f, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x49, 0x64, 0x70, 0x43, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x85, 0x01, 0x0a, 0x2f, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x62, 0x6f,
	0x75, 0x6e, 0x64, 0x53, 0x61, 0x6d, 0x6c, 0x53, 0x73, 0x6f, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x73, 0x49, 0x64, 0x70, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x22, 0x99, 0x01, 0x0a, 0x21,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x73, 0x6f,
	0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x74, 0x0a, 0x16, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x73, 0x73, 0x6f,
	0x5f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x3e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x49, 0x6e, 0x62,
	0x6f, 0x75, 0x6e, 0x64, 0x53, 0x73, 0x6f, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x14, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x73, 0x6f, 0x41, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x37, 0x0a, 0x21, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x73, 0x6f, 0x41, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x34, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x73,
	0x6f, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x76, 0x0a, 0x20, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e,
	0x62, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x73, 0x6f, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xcd,
	0x01, 0x0a, 0x20, 0x50, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x53,
	0x73, 0x6f, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x73, 0x6b, 0x12, 0x74, 0x0a, 0x16, 0x69, 0x6e, 0x62, 0x6f,
	0x75, 0x6e, 0x64, 0x5f, 0x73, 0x73, 0x6f, 0x5f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x73, 0x6f, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x14, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e,
	0x64, 0x53, 0x73, 0x6f, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0xa8,
	0x01, 0x0a, 0x1e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x12, 0x16, 0x0a,
	0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x22, 0xa9, 0x01, 0x0a, 0x1d, 0x4d, 0x6f,
	0x76, 0x65, 0x4f, 0x72, 0x67, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x68, 0x69, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x74, 0x0a, 0x14, 0x6f, 0x72, 0x67, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x5f, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4d, 0x6f, 0x76, 0x65, 0x4f, 0x72, 0x67,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x12, 0x6f, 0x72, 0x67, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x73, 0x68, 0x69, 0x70, 0x22, 0x26, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x69, 0x0a,
	0x13, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x32, 0x11, 0x0a, 0x0f, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x32, 0xc5, 0x09, 0x0a, 0x1e,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x73, 0x55, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x76,
	0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0xe6,
	0x01, 0x0a, 0x1d, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x73, 0x55, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x4e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x73, 0x55, 0x73, 0x65, 0x72, 0x69,
	0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x6c, 0x6f, 0x6e, 0x67, 0x72, 0x75,
	0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x56, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x50, 0x22, 0x34, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x73, 0x2f, 0x2a, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x7d, 0x3a, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x3a, 0x18, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x76,
	0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0xda, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x73, 0x55, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x76, 0x69,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x73, 0x55, 0x73,
	0x65, 0x72, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70,
	0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x35, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x2f, 0x12, 0x2d, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f,
	0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x73, 0x2f,
	0x2a, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x2a, 0x7d, 0x12, 0x8b, 0x02, 0x0a, 0x26, 0x49, 0x73, 0x49, 0x6e, 0x76, 0x69, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x73, 0x55, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x57, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x49, 0x73, 0x49, 0x6e, 0x76,
	0x69, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x73, 0x55, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x41, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x49, 0x73, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x45, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x3f, 0x12, 0x3d, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x7b, 0x6e,
	0x61, 0x6d, 0x65, 0x3d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x73, 0x2f, 0x2a, 0x2f,
	0x75, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f,
	0x2a, 0x7d, 0x3a, 0x69, 0x73, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x12, 0xeb, 0x01, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x73, 0x55, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x4d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70,
	0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x73, 0x55, 0x73, 0x65, 0x72,
	0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x45, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x35, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x2f, 0x12, 0x2d, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x3d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x73, 0x2f, 0x2a, 0x7d,
	0x2f, 0x75, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0xe0, 0x01, 0x0a, 0x1b, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x73, 0x55, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x4c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x73, 0x55, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x76,
	0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x6c, 0x6f, 0x6e, 0x67, 0x72, 0x75, 0x6e, 0x6e,
	0x69, 0x6e, 0x67, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x54, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x4e, 0x22, 0x32, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f,
	0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x73, 0x2f,
	0x2a, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x2a, 0x7d, 0x3a, 0x73, 0x65, 0x6e, 0x64, 0x3a, 0x18, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x32, 0xd5, 0x07, 0x0a, 0x0d, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0xb1, 0x01, 0x0a, 0x10, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x57, 0x69, 0x70, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x48, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x57, 0x69, 0x70, 0x65,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x6c, 0x6f,
	0x6e, 0x67, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x34, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2e, 0x22, 0x24, 0x2f, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2f, 0x2a, 0x7d, 0x3a, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x57, 0x69, 0x70,
	0x65, 0x3a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x95, 0x01, 0x0a, 0x0c, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x44, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x6c, 0x6f, 0x6e, 0x67, 0x72, 0x75,
	0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x22, 0x10, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x3a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x8f, 0x01, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x3d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x6c, 0x6f, 0x6e, 0x67, 0x72,
	0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x2a, 0x19, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2f, 0x2a, 0x7d, 0x12, 0x9c, 0x01, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x3a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x22,
	0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x12, 0x19, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f,
	0x2a, 0x7d, 0x12, 0xa4, 0x01, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x12, 0x3c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x3d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x12, 0x10, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x9f, 0x01, 0x0a, 0x0a, 0x57, 0x69,
	0x70, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x42, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x57, 0x69, 0x70, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x6c, 0x6f, 0x6e, 0x67, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e,
	0x67, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2e, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x28, 0x22, 0x1e, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x7b, 0x6e,
	0x61, 0x6d, 0x65, 0x3d, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x2a, 0x7d, 0x3a, 0x77,
	0x69, 0x70, 0x65, 0x3a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x32, 0xa4, 0x0d, 0x0a, 0x18,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0xd2, 0x01, 0x0a, 0x18, 0x41, 0x70, 0x70,
	0x72, 0x6f, 0x76, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x49, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61,
	0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x6c, 0x6f, 0x6e, 0x67, 0x72, 0x75,
	0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x4c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x46, 0x22, 0x2f, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f,
	0x2a, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x2a, 0x7d,
	0x3a, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x3a, 0x13, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x12, 0xcc, 0x01,
	0x0a, 0x16, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x47, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x6c, 0x6f, 0x6e, 0x67, 0x72,
	0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x4a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x44, 0x22, 0x2d, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2f, 0x2a, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x2a,
	0x7d, 0x3a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x3a, 0x13, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x12, 0xdb, 0x01, 0x0a,
	0x1b, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x57, 0x69, 0x70, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x4c, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x57, 0x69,
	0x70, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x6c, 0x6f, 0x6e, 0x67, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x4f, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x49, 0x22, 0x32, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d,
	0x65, 0x3d, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x2a, 0x2f, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x2a, 0x7d, 0x3a, 0x63, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x57, 0x69, 0x70, 0x65, 0x3a, 0x13, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x5f, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x12, 0xb3, 0x01, 0x0a, 0x17, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x48, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x6c, 0x6f, 0x6e, 0x67, 0x72, 0x75,
	0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x2f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x2a, 0x27, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f,
	0x2a, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x2a, 0x7d,
	0x12, 0xc4, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x45, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x34, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x22, 0x2f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x12, 0x27,
	0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x2a, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x2f, 0x2a, 0x7d, 0x12, 0xd5, 0x01, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x12, 0x47, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x41, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2f,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x12, 0x27, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2f, 0x2a, 0x7d, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12,
	0xe4, 0x01, 0x0a, 0x17, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x48, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x47, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61,
	0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x53, 0x65, 0x6c, 0x66, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x36,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x30, 0x12, 0x2e, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2f, 0x2a, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x7d, 0x3a,
	0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x12, 0xc9, 0x01, 0x0a, 0x15, 0x57, 0x69, 0x70, 0x65, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x46, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x57, 0x69, 0x70, 0x65,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x6c, 0x6f, 0x6e, 0x67, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x49, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x43, 0x22,
	0x2c, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x2a, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x2a, 0x7d, 0x3a, 0x77, 0x69, 0x70, 0x65, 0x3a, 0x13, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x75, 0x73,
	0x65, 0x72, 0x32, 0x93, 0x04, 0x0a, 0x24, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0xec, 0x01, 0x0a, 0x20,
	0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x73, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x51, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70,
	0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x3e, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x38, 0x12, 0x36, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x7b, 0x6e, 0x61,
	0x6d, 0x65, 0x3d, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x2a, 0x2f, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x2a, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x2f, 0x2a, 0x7d, 0x12, 0xfb, 0x01, 0x0a, 0x22, 0x50,
	0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x53, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x61, 0x74,
	0x63, 0x68, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x6c, 0x6f, 0x6e, 0x67, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x61, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x5b, 0x32, 0x36, 0x2f,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x2a, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x2f, 0x2a, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x73, 0x2f, 0x2a, 0x7d, 0x3a, 0x21, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x5f, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x5f, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x32, 0xf9, 0x0b, 0x0a, 0x0c, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x8a, 0x01, 0x0a, 0x0b, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x3c, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x6c, 0x6f, 0x6e, 0x67, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x22, 0x0f,
	0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x3a,
	0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x8c, 0x01, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x3c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x6c, 0x6f,
	0x6e, 0x67, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x2a, 0x18, 0x2f, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x2f, 0x2a, 0x7d, 0x12, 0x98, 0x01, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x12, 0x39, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x20,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x12, 0x18, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2f, 0x2a, 0x7d,
	0x12, 0xd4, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x49, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x22, 0x31, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x12, 0x29, 0x2f, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x2f, 0x2a, 0x2f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x7d, 0x12, 0xa0, 0x01, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x3b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x3c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70,
	0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x12, 0x0f, 0x2f, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0xae, 0x01, 0x0a, 0x0b, 0x4c,
	0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x3c, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x41, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e,
	0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x18, 0x12, 0x16, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x3a, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x12, 0x91, 0x01, 0x0a, 0x0a,
	0x50, 0x61, 0x74, 0x63, 0x68, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x3b, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x61, 0x74, 0x63, 0x68, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x6c, 0x6f, 0x6e, 0x67, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x32, 0x18,
	0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x2f, 0x2a, 0x7d, 0x3a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12,
	0xab, 0x01, 0x0a, 0x0b, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12,
	0x3c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3e, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12, 0x16, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x3a, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0xc4, 0x01,
	0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x4c, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x6c, 0x6f, 0x6e, 0x67, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67,
	0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x38, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x32, 0x32, 0x29, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x7b, 0x6e, 0x61,
	0x6d, 0x65, 0x3d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2f, 0x2a, 0x2f, 0x73, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x7d, 0x3a, 0x05, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x32, 0xf4, 0x14, 0x0a, 0x17, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x12, 0x9e, 0x02, 0x0a, 0x29, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69,
	0x74, 0x69, 0x76, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x12, 0x5a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x68, 0x69, 0x70, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x68, 0x69, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4b, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x69, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x48, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x42, 0x12,
	0x40, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x3d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x73, 0x3a, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69,
	0x70, 0x12, 0xc3, 0x01, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x12, 0x47, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x6c,
	0x6f, 0x6e, 0x67, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x41, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3b, 0x22, 0x26, 0x2f, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x68, 0x69, 0x70, 0x73, 0x3a, 0x11, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x5f, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x12, 0xb0, 0x01, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68,
	0x69, 0x70, 0x12, 0x47, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x68, 0x69, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x6c, 0x6f, 0x6e, 0x67, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67,
	0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2e, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x28, 0x2a, 0x26, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x7b, 0x6e, 0x61,
	0x6d, 0x65, 0x3d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2f, 0x2a, 0x2f, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x73, 0x2f, 0x2a, 0x7d, 0x12, 0xc1, 0x01, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68,
	0x69, 0x70, 0x12, 0x44, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69,
	0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x22, 0x2e,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28, 0x12, 0x26, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2f, 0x2a, 0x2f,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x73, 0x2f, 0x2a, 0x7d, 0x12, 0xdb,
	0x01, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70,
	0x47, 0x72, 0x61, 0x70, 0x68, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x73, 0x68, 0x69, 0x70, 0x12, 0x53, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61,
	0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x47, 0x72,
	0x61, 0x70, 0x68, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x68, 0x69, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x6c, 0x6f, 0x6e, 0x67, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x41, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x3b, 0x12, 0x39, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x3d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x73, 0x3a, 0x67, 0x65, 0x74, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x47, 0x72, 0x61, 0x70, 0x68, 0x12, 0xd2, 0x01, 0x0a,
	0x15, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x73, 0x68, 0x69, 0x70, 0x73, 0x12, 0x46, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x41,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28, 0x12, 0x26, 0x2f, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70,
	0x73, 0x12, 0xe0, 0x01, 0x0a, 0x16, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x12, 0x47, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x46, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61,
	0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69,
	0x70, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x35, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x2f, 0x12, 0x2d, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f,
	0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2f, 0x2a,
	0x7d, 0x2f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x73, 0x3a, 0x6c, 0x6f,
	0x6f, 0x6b, 0x75, 0x70, 0x12, 0xa1, 0x02, 0x0a, 0x25, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x12, 0x56,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x47, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68,
	0x69, 0x70, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x57, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x51, 0x22, 0x3c, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2f, 0x2a,
	0x2f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x73, 0x2f, 0x2a, 0x7d, 0x3a,
	0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70,
	0x52, 0x6f, 0x6c, 0x65, 0x73, 0x3a, 0x11, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x5f, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x12, 0x82, 0x02, 0x0a, 0x22, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x12,
	0x53, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x44, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70,
	0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x41, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x3b, 0x12, 0x39, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x7b, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x3d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x73, 0x3a, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x92, 0x02,
	0x0a, 0x26, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69,
	0x76, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x12, 0x57, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69,
	0x74, 0x69, 0x76, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x48, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x45, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x3f, 0x12, 0x3d, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x7b, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2f, 0x2a, 0x7d, 0x2f,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x73, 0x3a, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x12, 0xa6, 0x02, 0x0a, 0x2b, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69,
	0x70, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68,
	0x69, 0x70, 0x12, 0x5c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x4d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x4a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x44, 0x12, 0x42, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x2f, 0x2a, 0x7d, 0x2f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x73, 0x3a,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x73, 0x32, 0xc2, 0x08, 0x0a, 0x1c,
	0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x61, 0x6d, 0x6c, 0x53, 0x73, 0x6f, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0xcd, 0x01, 0x0a,
	0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x61,
	0x6d, 0x6c, 0x53, 0x73, 0x6f, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x4c, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e,
	0x62, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x61, 0x6d, 0x6c, 0x53, 0x73, 0x6f, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x6c, 0x6f, 0x6e, 0x67, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x41, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x3b, 0x22, 0x1f, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x69, 0x6e, 0x62, 0x6f,
	0x75, 0x6e, 0x64, 0x53, 0x61, 0x6d, 0x6c, 0x53, 0x73, 0x6f, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x73, 0x3a, 0x18, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x73, 0x61, 0x6d, 0x6c,
	0x5f, 0x73, 0x73, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0xbc, 0x01, 0x0a,
	0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x61,
	0x6d, 0x6c, 0x53, 0x73, 0x6f, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x4c, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e,
	0x62, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x61, 0x6d, 0x6c, 0x53, 0x73, 0x6f, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x6c, 0x6f, 0x6e, 0x67, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x30, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x2a, 0x2a, 0x28, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d,
	0x65, 0x3d, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x61, 0x6d, 0x6c, 0x53, 0x73, 0x6f,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2f, 0x2a, 0x7d, 0x12, 0xd8, 0x01, 0x0a, 0x18,
	0x47, 0x65, 0x74, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x61, 0x6d, 0x6c, 0x53, 0x73,
	0x6f, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x49, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x61,
	0x6d, 0x6c, 0x53, 0x73, 0x6f, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x3f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70,
	0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x49,
	0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x61, 0x6d, 0x6c, 0x53, 0x73, 0x6f, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x22, 0x30, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x12, 0x28, 0x2f, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x69, 0x6e, 0x62,
	0x6f, 0x75, 0x6e, 0x64, 0x53, 0x61, 0x6d, 0x6c, 0x53, 0x73, 0x6f, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x73, 0x2f, 0x2a, 0x7d, 0x12, 0xe0, 0x01, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x49,
	0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x61, 0x6d, 0x6c, 0x53, 0x73, 0x6f, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x4b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61,
	0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x61, 0x6d, 0x6c,
	0x53, 0x73, 0x6f, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x4c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x61, 0x6d, 0x6c, 0x53, 0x73, 0x6f,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x12, 0x1f, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x31, 0x2f, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x61, 0x6d, 0x6c, 0x53, 0x73,
	0x6f, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x12, 0xd4, 0x01, 0x0a, 0x1a, 0x50, 0x61,
	0x74, 0x63, 0x68, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x61, 0x6d, 0x6c, 0x53, 0x73,
	0x6f, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x4b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x50, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64,
	0x53, 0x61, 0x6d, 0x6c, 0x53, 0x73, 0x6f, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x6c,
	0x6f, 0x6e, 0x67, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x4a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x44, 0x32, 0x28, 0x2f, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x69, 0x6e, 0x62,
	0x6f, 0x75, 0x6e, 0x64, 0x53, 0x61, 0x6d, 0x6c, 0x53, 0x73, 0x6f, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x73, 0x2f, 0x2a, 0x7d, 0x3a, 0x18, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f,
	0x73, 0x61, 0x6d, 0x6c, 0x5f, 0x73, 0x73, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x32, 0xbd, 0x08, 0x0a, 0x2a, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x61, 0x6d, 0x6c,
	0x53, 0x73, 0x6f, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x49, 0x64, 0x70, 0x43, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12,
	0x91, 0x02, 0x0a, 0x26, 0x41, 0x64, 0x64, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x61,
	0x6d, 0x6c, 0x53, 0x73, 0x6f, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x49, 0x64, 0x70,
	0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x57, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64,
	0x53, 0x61, 0x6d, 0x6c, 0x53, 0x73, 0x6f, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x49,
	0x64, 0x70, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x6c, 0x6f, 0x6e,
	0x67, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x6f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x69, 0x22, 0x3d, 0x2f, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x69, 0x6e, 0x62,
	0x6f, 0x75, 0x6e, 0x64, 0x53, 0x61, 0x6d, 0x6c, 0x53, 0x73, 0x6f, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x69, 0x64, 0x70, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x73, 0x3a, 0x61, 0x64, 0x64, 0x3a, 0x28, 0x69, 0x6e, 0x62, 0x6f, 0x75,
	0x6e, 0x64, 0x5f, 0x73, 0x61, 0x6d, 0x6c, 0x5f, 0x73, 0x73, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x73, 0x5f, 0x69, 0x64, 0x70, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x12, 0xe9, 0x01, 0x0a, 0x29, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e,
	0x62, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x61, 0x6d, 0x6c, 0x53, 0x73, 0x6f, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x73, 0x49, 0x64, 0x70, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x12, 0x5a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x61, 0x6d, 0x6c, 0x53, 0x73,
	0x6f, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x49, 0x64, 0x70, 0x43, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x6c, 0x6f, 0x6e, 0x67, 0x72, 0x75, 0x6e, 0x6e, 0x69,
	0x6e, 0x67, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x41, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x3b, 0x2a, 0x39, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x7b,
	0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x61, 0x6d, 0x6c,
	0x53, 0x73, 0x6f, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2f, 0x2a, 0x2f, 0x69, 0x64,
	0x70, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x2f, 0x2a, 0x7d, 0x12,
	0xfd, 0x01, 0x0a, 0x26, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x61,
	0x6d, 0x6c, 0x53, 0x73, 0x6f, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x49, 0x64, 0x70,
	0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x57, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64,
	0x53, 0x61, 0x6d, 0x6c, 0x53, 0x73, 0x6f, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x49,
	0x64, 0x70, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70,
	0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x49,
	0x64, 0x70, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x22, 0x41, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x3b, 0x12, 0x39, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x7b,
	0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x61, 0x6d, 0x6c,
	0x53, 0x73, 0x6f, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2f, 0x2a, 0x2f, 0x69, 0x64,
	0x70, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x2f, 0x2a, 0x7d, 0x12,
	0x8e, 0x02, 0x0a, 0x28, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x53,
	0x61, 0x6d, 0x6c, 0x53, 0x73, 0x6f, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x49, 0x64,
	0x70, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x12, 0x59, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x62, 0x6f,
	0x75, 0x6e, 0x64, 0x53, 0x61, 0x6d, 0x6c, 0x53, 0x73, 0x6f, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x73, 0x49, 0x64, 0x70, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x44, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x70, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x41, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x3b, 0x12, 0x39, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f,
	0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x53,
	0x61, 0x6d, 0x6c, 0x53, 0x73, 0x6f, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2f, 0x2a,
	0x7d, 0x2f, 0x69, 0x64, 0x70, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73,
	0x32, 0xac, 0x08, 0x0a, 0x1b, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x73, 0x6f, 0x41,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x12, 0xc8, 0x01, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x62, 0x6f, 0x75,
	0x6e, 0x64, 0x53, 0x73, 0x6f, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x4b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x73, 0x6f, 0x41, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x6c, 0x6f, 0x6e, 0x67, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e,
	0x67, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3e, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x38, 0x22, 0x1e, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x69, 0x6e,
	0x62, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x73, 0x6f, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x3a, 0x16, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x73, 0x73, 0x6f,
	0x5f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0xb9, 0x01, 0x0a, 0x1a,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x73, 0x6f,
	0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x4b, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x62, 0x6f,
	0x75, 0x6e, 0x64, 0x53, 0x73, 0x6f, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x6c, 0x6f, 0x6e, 0x67, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x2a, 0x27,
	0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x69,
	0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x73, 0x6f, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x7d, 0x12, 0xd4, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x49,
	0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x73, 0x6f, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x48, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70,
	0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x73, 0x6f, 0x41, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3e, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64,
	0x53, 0x73, 0x6f, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x2f, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x29, 0x12, 0x27, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f,
	0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x73, 0x6f,
	0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x7d, 0x12, 0xdc,
	0x01, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x73,
	0x6f, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x4a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x62, 0x6f,
	0x75, 0x6e, 0x64, 0x53, 0x73, 0x6f, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x53,
	0x73, 0x6f, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x12, 0x1e, 0x2f,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x53,
	0x73, 0x6f, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0xcf, 0x01,
	0x0a, 0x19, 0x50, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x73,
	0x6f, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x4a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x62, 0x6f,
	0x75, 0x6e, 0x64, 0x53, 0x73, 0x6f, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x6c, 0x6f, 0x6e, 0x67, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x47, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x41, 0x32, 0x27,
	0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x69,
	0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x73, 0x6f, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x7d, 0x3a, 0x16, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64,
	0x5f, 0x73, 0x73, 0x6f, 0x5f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x32,
	0x10, 0x0a, 0x0e, 0x4f, 0x72, 0x67, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x32, 0xc9, 0x03, 0x0a, 0x19, 0x4f, 0x72, 0x67, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12,
	0xdb, 0x01, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x55, 0x6e, 0x69, 0x74, 0x73,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x73, 0x12, 0x48, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x55, 0x6e,
	0x69, 0x74, 0x73, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x44, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61,
	0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68,
	0x69, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x30, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x2a, 0x12, 0x28, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x7b, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x6f, 0x72, 0x67, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x2f, 0x2a,
	0x7d, 0x2f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x73, 0x12, 0xcd, 0x01,
	0x0a, 0x16, 0x4d, 0x6f, 0x76, 0x65, 0x4f, 0x72, 0x67, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x12, 0x47, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x4d, 0x6f, 0x76, 0x65, 0x4f, 0x72, 0x67, 0x55, 0x6e, 0x69, 0x74, 0x73,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x6c, 0x6f, 0x6e, 0x67, 0x72,
	0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x4b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x45, 0x22, 0x2d, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x55, 0x6e, 0x69, 0x74,
	0x73, 0x2f, 0x2a, 0x2f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x73, 0x2f,
	0x2a, 0x7d, 0x3a, 0x6d, 0x6f, 0x76, 0x65, 0x3a, 0x14, 0x6f, 0x72, 0x67, 0x5f, 0x75, 0x6e, 0x69,
	0x74, 0x73, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x32, 0xdb, 0x02,
	0x0a, 0x0e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x12, 0x9d, 0x01, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x3a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x22, 0x22, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1c, 0x12, 0x1a, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x7b,
	0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2f, 0x2a, 0x7d,
	0x12, 0xa8, 0x01, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65,
	0x73, 0x12, 0x3d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x3e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x12, 0x11, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x31, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x42, 0x39, 0x5a, 0x37, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x67, 0x6f, 0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x70, 0x62, 0x3b, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x70, 0x62,
}

var (
	file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescOnce sync.Once
	file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescData = file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDesc
)

func file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescGZIP() []byte {
	file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescOnce.Do(func() {
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescData)
	})
	return file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDescData
}

var file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes = make([]protoimpl.MessageInfo, 189)
var file_google_apps_cloudidentity_groups_v1beta1_service_proto_goTypes = []interface{}{
	(*AddIdpCredentialOperationMetadata)(nil),                                      // 0: google.apps.cloudidentity.groups.v1beta1.AddIdpCredentialOperationMetadata
	(*AddIdpCredentialRequest)(nil),                                                // 1: google.apps.cloudidentity.groups.v1beta1.AddIdpCredentialRequest
	(*AndroidAttributes)(nil),                                                      // 2: google.apps.cloudidentity.groups.v1beta1.AndroidAttributes
	(*ApproveDeviceUserRequest)(nil),                                               // 3: google.apps.cloudidentity.groups.v1beta1.ApproveDeviceUserRequest
	(*ApproveDeviceUserResponse)(nil),                                              // 4: google.apps.cloudidentity.groups.v1beta1.ApproveDeviceUserResponse
	(*BlockDeviceUserRequest)(nil),                                                 // 5: google.apps.cloudidentity.groups.v1beta1.BlockDeviceUserRequest
	(*BlockDeviceUserResponse)(nil),                                                // 6: google.apps.cloudidentity.groups.v1beta1.BlockDeviceUserResponse
	(*BrowserAttributes)(nil),                                                      // 7: google.apps.cloudidentity.groups.v1beta1.BrowserAttributes
	(*BrowserInfo)(nil),                                                            // 8: google.apps.cloudidentity.groups.v1beta1.BrowserInfo
	(*CancelUserInvitationRequest)(nil),                                            // 9: google.apps.cloudidentity.groups.v1beta1.CancelUserInvitationRequest
	(*CancelWipeDeviceRequest)(nil),                                                // 10: google.apps.cloudidentity.groups.v1beta1.CancelWipeDeviceRequest
	(*CancelWipeDeviceResponse)(nil),                                               // 11: google.apps.cloudidentity.groups.v1beta1.CancelWipeDeviceResponse
	(*CancelWipeDeviceUserRequest)(nil),                                            // 12: google.apps.cloudidentity.groups.v1beta1.CancelWipeDeviceUserRequest
	(*CancelWipeDeviceUserResponse)(nil),                                           // 13: google.apps.cloudidentity.groups.v1beta1.CancelWipeDeviceUserResponse
	(*CertificateAttributes)(nil),                                                  // 14: google.apps.cloudidentity.groups.v1beta1.CertificateAttributes
	(*CertificateTemplate)(nil),                                                    // 15: google.apps.cloudidentity.groups.v1beta1.CertificateTemplate
	(*CheckTransitiveMembershipResponse)(nil),                                      // 16: google.apps.cloudidentity.groups.v1beta1.CheckTransitiveMembershipResponse
	(*ClientState)(nil),                                                            // 17: google.apps.cloudidentity.groups.v1beta1.ClientState
	(*CreateDeviceRequest)(nil),                                                    // 18: google.apps.cloudidentity.groups.v1beta1.CreateDeviceRequest
	(*CreateInboundSamlSsoProfileOperationMetadata)(nil),                           // 19: google.apps.cloudidentity.groups.v1beta1.CreateInboundSamlSsoProfileOperationMetadata
	(*CreateInboundSsoAssignmentOperationMetadata)(nil),                            // 20: google.apps.cloudidentity.groups.v1beta1.CreateInboundSsoAssignmentOperationMetadata
	(*CustomAttributeValue)(nil),                                                   // 21: google.apps.cloudidentity.groups.v1beta1.CustomAttributeValue
	(*DeleteIdpCredentialOperationMetadata)(nil),                                   // 22: google.apps.cloudidentity.groups.v1beta1.DeleteIdpCredentialOperationMetadata
	(*DeleteInboundSamlSsoProfileOperationMetadata)(nil),                           // 23: google.apps.cloudidentity.groups.v1beta1.DeleteInboundSamlSsoProfileOperationMetadata
	(*DeleteInboundSsoAssignmentOperationMetadata)(nil),                            // 24: google.apps.cloudidentity.groups.v1beta1.DeleteInboundSsoAssignmentOperationMetadata
	(*Device)(nil),                                                                 // 25: google.apps.cloudidentity.groups.v1beta1.Device
	(*DeviceUser)(nil),                                                             // 26: google.apps.cloudidentity.groups.v1beta1.DeviceUser
	(*DsaPublicKeyInfo)(nil),                                                       // 27: google.apps.cloudidentity.groups.v1beta1.DsaPublicKeyInfo
	(*DynamicGroupMetadata)(nil),                                                   // 28: google.apps.cloudidentity.groups.v1beta1.DynamicGroupMetadata
	(*DynamicGroupQuery)(nil),                                                      // 29: google.apps.cloudidentity.groups.v1beta1.DynamicGroupQuery
	(*DynamicGroupStatus)(nil),                                                     // 30: google.apps.cloudidentity.groups.v1beta1.DynamicGroupStatus
	(*EndpointVerificationSpecificAttributes)(nil),                                 // 31: google.apps.cloudidentity.groups.v1beta1.EndpointVerificationSpecificAttributes
	(*EntityKey)(nil),                                                              // 32: google.apps.cloudidentity.groups.v1beta1.EntityKey
	(*ExpiryDetail)(nil),                                                           // 33: google.apps.cloudidentity.groups.v1beta1.ExpiryDetail
	(*GetMembershipGraphResponse)(nil),                                             // 34: google.apps.cloudidentity.groups.v1beta1.GetMembershipGraphResponse
	(*GoogleAppsCloudidentityDevicesV1AndroidAttributes)(nil),                      // 35: google.apps.cloudidentity.groups.v1beta1.GoogleAppsCloudidentityDevicesV1AndroidAttributes
	(*GoogleAppsCloudidentityDevicesV1ApproveDeviceUserMetadata)(nil),              // 36: google.apps.cloudidentity.groups.v1beta1.GoogleAppsCloudidentityDevicesV1ApproveDeviceUserMetadata
	(*GoogleAppsCloudidentityDevicesV1ApproveDeviceUserResponse)(nil),              // 37: google.apps.cloudidentity.groups.v1beta1.GoogleAppsCloudidentityDevicesV1ApproveDeviceUserResponse
	(*GoogleAppsCloudidentityDevicesV1BlockDeviceUserMetadata)(nil),                // 38: google.apps.cloudidentity.groups.v1beta1.GoogleAppsCloudidentityDevicesV1BlockDeviceUserMetadata
	(*GoogleAppsCloudidentityDevicesV1BlockDeviceUserResponse)(nil),                // 39: google.apps.cloudidentity.groups.v1beta1.GoogleAppsCloudidentityDevicesV1BlockDeviceUserResponse
	(*GoogleAppsCloudidentityDevicesV1BrowserAttributes)(nil),                      // 40: google.apps.cloudidentity.groups.v1beta1.GoogleAppsCloudidentityDevicesV1BrowserAttributes
	(*GoogleAppsCloudidentityDevicesV1BrowserInfo)(nil),                            // 41: google.apps.cloudidentity.groups.v1beta1.GoogleAppsCloudidentityDevicesV1BrowserInfo
	(*GoogleAppsCloudidentityDevicesV1CancelWipeDeviceMetadata)(nil),               // 42: google.apps.cloudidentity.groups.v1beta1.GoogleAppsCloudidentityDevicesV1CancelWipeDeviceMetadata
	(*GoogleAppsCloudidentityDevicesV1CancelWipeDeviceResponse)(nil),               // 43: google.apps.cloudidentity.groups.v1beta1.GoogleAppsCloudidentityDevicesV1CancelWipeDeviceResponse
	(*GoogleAppsCloudidentityDevicesV1CancelWipeDeviceUserMetadata)(nil),           // 44: google.apps.cloudidentity.groups.v1beta1.GoogleAppsCloudidentityDevicesV1CancelWipeDeviceUserMetadata
	(*GoogleAppsCloudidentityDevicesV1CancelWipeDeviceUserResponse)(nil),           // 45: google.apps.cloudidentity.groups.v1beta1.GoogleAppsCloudidentityDevicesV1CancelWipeDeviceUserResponse
	(*GoogleAppsCloudidentityDevicesV1CertificateAttributes)(nil),                  // 46: google.apps.cloudidentity.groups.v1beta1.GoogleAppsCloudidentityDevicesV1CertificateAttributes
	(*GoogleAppsCloudidentityDevicesV1CertificateTemplate)(nil),                    // 47: google.apps.cloudidentity.groups.v1beta1.GoogleAppsCloudidentityDevicesV1CertificateTemplate
	(*GoogleAppsCloudidentityDevicesV1ClientState)(nil),                            // 48: google.apps.cloudidentity.groups.v1beta1.GoogleAppsCloudidentityDevicesV1ClientState
	(*GoogleAppsCloudidentityDevicesV1CreateDeviceMetadata)(nil),                   // 49: google.apps.cloudidentity.groups.v1beta1.GoogleAppsCloudidentityDevicesV1CreateDeviceMetadata
	(*GoogleAppsCloudidentityDevicesV1CustomAttributeValue)(nil),                   // 50: google.apps.cloudidentity.groups.v1beta1.GoogleAppsCloudidentityDevicesV1CustomAttributeValue
	(*GoogleAppsCloudidentityDevicesV1DeleteDeviceMetadata)(nil),                   // 51: google.apps.cloudidentity.groups.v1beta1.GoogleAppsCloudidentityDevicesV1DeleteDeviceMetadata
	(*GoogleAppsCloudidentityDevicesV1DeleteDeviceUserMetadata)(nil),               // 52: google.apps.cloudidentity.groups.v1beta1.GoogleAppsCloudidentityDevicesV1DeleteDeviceUserMetadata
	(*GoogleAppsCloudidentityDevicesV1Device)(nil),                                 // 53: google.apps.cloudidentity.groups.v1beta1.GoogleAppsCloudidentityDevicesV1Device
	(*GoogleAppsCloudidentityDevicesV1DeviceUser)(nil),                             // 54: google.apps.cloudidentity.groups.v1beta1.GoogleAppsCloudidentityDevicesV1DeviceUser
	(*GoogleAppsCloudidentityDevicesV1EndpointVerificationSpecificAttributes)(nil), // 55: google.apps.cloudidentity.groups.v1beta1.GoogleAppsCloudidentityDevicesV1EndpointVerificationSpecificAttributes
	(*GoogleAppsCloudidentityDevicesV1ListEndpointAppsMetadata)(nil),               // 56: google.apps.cloudidentity.groups.v1beta1.GoogleAppsCloudidentityDevicesV1ListEndpointAppsMetadata
	(*GoogleAppsCloudidentityDevicesV1SignoutDeviceUserMetadata)(nil),              // 57: google.apps.cloudidentity.groups.v1beta1.GoogleAppsCloudidentityDevicesV1SignoutDeviceUserMetadata
	(*GoogleAppsCloudidentityDevicesV1UpdateClientStateMetadata)(nil),              // 58: google.apps.cloudidentity.groups.v1beta1.GoogleAppsCloudidentityDevicesV1UpdateClientStateMetadata
	(*GoogleAppsCloudidentityDevicesV1UpdateDeviceMetadata)(nil),                   // 59: google.apps.cloudidentity.groups.v1beta1.GoogleAppsCloudidentityDevicesV1UpdateDeviceMetadata
	(*GoogleAppsCloudidentityDevicesV1WipeDeviceMetadata)(nil),                     // 60: google.apps.cloudidentity.groups.v1beta1.GoogleAppsCloudidentityDevicesV1WipeDeviceMetadata
	(*GoogleAppsCloudidentityDevicesV1WipeDeviceResponse)(nil),                     // 61: google.apps.cloudidentity.groups.v1beta1.GoogleAppsCloudidentityDevicesV1WipeDeviceResponse
	(*GoogleAppsCloudidentityDevicesV1WipeDeviceUserMetadata)(nil),                 // 62: google.apps.cloudidentity.groups.v1beta1.GoogleAppsCloudidentityDevicesV1WipeDeviceUserMetadata
	(*GoogleAppsCloudidentityDevicesV1WipeDeviceUserResponse)(nil),                 // 63: google.apps.cloudidentity.groups.v1beta1.GoogleAppsCloudidentityDevicesV1WipeDeviceUserResponse
	(*Group)(nil),                                              // 64: google.apps.cloudidentity.groups.v1beta1.Group
	(*GroupRelation)(nil),                                      // 65: google.apps.cloudidentity.groups.v1beta1.GroupRelation
	(*IdpCredential)(nil),                                      // 66: google.apps.cloudidentity.groups.v1beta1.IdpCredential
	(*InboundSamlSsoProfile)(nil),                              // 67: google.apps.cloudidentity.groups.v1beta1.InboundSamlSsoProfile
	(*InboundSsoAssignment)(nil),                               // 68: google.apps.cloudidentity.groups.v1beta1.InboundSsoAssignment
	(*IsInvitableUserResponse)(nil),                            // 69: google.apps.cloudidentity.groups.v1beta1.IsInvitableUserResponse
	(*ListClientStatesResponse)(nil),                           // 70: google.apps.cloudidentity.groups.v1beta1.ListClientStatesResponse
	(*ListDeviceUsersResponse)(nil),                            // 71: google.apps.cloudidentity.groups.v1beta1.ListDeviceUsersResponse
	(*ListDevicesResponse)(nil),                                // 72: google.apps.cloudidentity.groups.v1beta1.ListDevicesResponse
	(*ListGroupsResponse)(nil),                                 // 73: google.apps.cloudidentity.groups.v1beta1.ListGroupsResponse
	(*ListIdpCredentialsResponse)(nil),                         // 74: google.apps.cloudidentity.groups.v1beta1.ListIdpCredentialsResponse
	(*ListInboundSamlSsoProfilesResponse)(nil),                 // 75: google.apps.cloudidentity.groups.v1beta1.ListInboundSamlSsoProfilesResponse
	(*ListInboundSsoAssignmentsResponse)(nil),                  // 76: google.apps.cloudidentity.groups.v1beta1.ListInboundSsoAssignmentsResponse
	(*ListMembershipsResponse)(nil),                            // 77: google.apps.cloudidentity.groups.v1beta1.ListMembershipsResponse
	(*ListOrgMembershipsResponse)(nil),                         // 78: google.apps.cloudidentity.groups.v1beta1.ListOrgMembershipsResponse
	(*ListPoliciesResponse)(nil),                               // 79: google.apps.cloudidentity.groups.v1beta1.ListPoliciesResponse
	(*ListUserInvitationsResponse)(nil),                        // 80: google.apps.cloudidentity.groups.v1beta1.ListUserInvitationsResponse
	(*LookupGroupNameResponse)(nil),                            // 81: google.apps.cloudidentity.groups.v1beta1.LookupGroupNameResponse
	(*LookupMembershipNameResponse)(nil),                       // 82: google.apps.cloudidentity.groups.v1beta1.LookupMembershipNameResponse
	(*LookupSelfDeviceUsersResponse)(nil),                      // 83: google.apps.cloudidentity.groups.v1beta1.LookupSelfDeviceUsersResponse
	(*MemberRelation)(nil),                                     // 84: google.apps.cloudidentity.groups.v1beta1.MemberRelation
	(*MemberRestriction)(nil),                                  // 85: google.apps.cloudidentity.groups.v1beta1.MemberRestriction
	(*Membership)(nil),                                         // 86: google.apps.cloudidentity.groups.v1beta1.Membership
	(*MembershipAdjacencyList)(nil),                            // 87: google.apps.cloudidentity.groups.v1beta1.MembershipAdjacencyList
	(*MembershipRelation)(nil),                                 // 88: google.apps.cloudidentity.groups.v1beta1.MembershipRelation
	(*MembershipRole)(nil),                                     // 89: google.apps.cloudidentity.groups.v1beta1.MembershipRole
	(*MembershipRoleRestrictionEvaluation)(nil),                // 90: google.apps.cloudidentity.groups.v1beta1.MembershipRoleRestrictionEvaluation
	(*ModifyMembershipRolesRequest)(nil),                       // 91: google.apps.cloudidentity.groups.v1beta1.ModifyMembershipRolesRequest
	(*ModifyMembershipRolesResponse)(nil),                      // 92: google.apps.cloudidentity.groups.v1beta1.ModifyMembershipRolesResponse
	(*MoveOrgMembershipRequest)(nil),                           // 93: google.apps.cloudidentity.groups.v1beta1.MoveOrgMembershipRequest
	(*OrgMembership)(nil),                                      // 94: google.apps.cloudidentity.groups.v1beta1.OrgMembership
	(*Policy)(nil),                                             // 95: google.apps.cloudidentity.groups.v1beta1.Policy
	(*PolicyQuery)(nil),                                        // 96: google.apps.cloudidentity.groups.v1beta1.PolicyQuery
	(*PosixGroup)(nil),                                         // 97: google.apps.cloudidentity.groups.v1beta1.PosixGroup
	(*RestrictionEvaluation)(nil),                              // 98: google.apps.cloudidentity.groups.v1beta1.RestrictionEvaluation
	(*RestrictionEvaluations)(nil),                             // 99: google.apps.cloudidentity.groups.v1beta1.RestrictionEvaluations
	(*RsaPublicKeyInfo)(nil),                                   // 100: google.apps.cloudidentity.groups.v1beta1.RsaPublicKeyInfo
	(*SamlIdpConfig)(nil),                                      // 101: google.apps.cloudidentity.groups.v1beta1.SamlIdpConfig
	(*SamlSpConfig)(nil),                                       // 102: google.apps.cloudidentity.groups.v1beta1.SamlSpConfig
	(*SamlSsoInfo)(nil),                                        // 103: google.apps.cloudidentity.groups.v1beta1.SamlSsoInfo
	(*SearchDirectGroupsResponse)(nil),                         // 104: google.apps.cloudidentity.groups.v1beta1.SearchDirectGroupsResponse
	(*SearchGroupsResponse)(nil),                               // 105: google.apps.cloudidentity.groups.v1beta1.SearchGroupsResponse
	(*SearchTransitiveGroupsResponse)(nil),                     // 106: google.apps.cloudidentity.groups.v1beta1.SearchTransitiveGroupsResponse
	(*SearchTransitiveMembershipsResponse)(nil),                // 107: google.apps.cloudidentity.groups.v1beta1.SearchTransitiveMembershipsResponse
	(*SecuritySettings)(nil),                                   // 108: google.apps.cloudidentity.groups.v1beta1.SecuritySettings
	(*SendUserInvitationRequest)(nil),                          // 109: google.apps.cloudidentity.groups.v1beta1.SendUserInvitationRequest
	(*Setting)(nil),                                            // 110: google.apps.cloudidentity.groups.v1beta1.Setting
	(*SignInBehavior)(nil),                                     // 111: google.apps.cloudidentity.groups.v1beta1.SignInBehavior
	(*Status)(nil),                                             // 112: google.apps.cloudidentity.groups.v1beta1.Status
	(*TransitiveMembershipRole)(nil),                           // 113: google.apps.cloudidentity.groups.v1beta1.TransitiveMembershipRole
	(*UpdateInboundSamlSsoProfileOperationMetadata)(nil),       // 114: google.apps.cloudidentity.groups.v1beta1.UpdateInboundSamlSsoProfileOperationMetadata
	(*UpdateInboundSsoAssignmentOperationMetadata)(nil),        // 115: google.apps.cloudidentity.groups.v1beta1.UpdateInboundSsoAssignmentOperationMetadata
	(*UpdateMembershipRolesParams)(nil),                        // 116: google.apps.cloudidentity.groups.v1beta1.UpdateMembershipRolesParams
	(*UserInvitation)(nil),                                     // 117: google.apps.cloudidentity.groups.v1beta1.UserInvitation
	(*WipeDeviceRequest)(nil),                                  // 118: google.apps.cloudidentity.groups.v1beta1.WipeDeviceRequest
	(*WipeDeviceResponse)(nil),                                 // 119: google.apps.cloudidentity.groups.v1beta1.WipeDeviceResponse
	(*WipeDeviceUserRequest)(nil),                              // 120: google.apps.cloudidentity.groups.v1beta1.WipeDeviceUserRequest
	(*WipeDeviceUserResponse)(nil),                             // 121: google.apps.cloudidentity.groups.v1beta1.WipeDeviceUserResponse
	(*CancelCustomersUserinvitationRequest)(nil),               // 122: google.apps.cloudidentity.groups.v1beta1.CancelCustomersUserinvitationRequest
	(*GetCustomersUserinvitationRequest)(nil),                  // 123: google.apps.cloudidentity.groups.v1beta1.GetCustomersUserinvitationRequest
	(*IsInvitableUserCustomersUserinvitationRequest)(nil),      // 124: google.apps.cloudidentity.groups.v1beta1.IsInvitableUserCustomersUserinvitationRequest
	(*ListCustomersUserinvitationsRequest)(nil),                // 125: google.apps.cloudidentity.groups.v1beta1.ListCustomersUserinvitationsRequest
	(*SendCustomersUserinvitationRequest)(nil),                 // 126: google.apps.cloudidentity.groups.v1beta1.SendCustomersUserinvitationRequest
	(*CancelWipeDeviceServiceRequest)(nil),                     // 127: google.apps.cloudidentity.groups.v1beta1.CancelWipeDeviceServiceRequest
	(*CreateDeviceServiceRequest)(nil),                         // 128: google.apps.cloudidentity.groups.v1beta1.CreateDeviceServiceRequest
	(*DeleteDeviceRequest)(nil),                                // 129: google.apps.cloudidentity.groups.v1beta1.DeleteDeviceRequest
	(*GetDeviceRequest)(nil),                                   // 130: google.apps.cloudidentity.groups.v1beta1.GetDeviceRequest
	(*ListDevicesRequest)(nil),                                 // 131: google.apps.cloudidentity.groups.v1beta1.ListDevicesRequest
	(*WipeDeviceServiceRequest)(nil),                           // 132: google.apps.cloudidentity.groups.v1beta1.WipeDeviceServiceRequest
	(*ApproveDevicesDeviceUserRequest)(nil),                    // 133: google.apps.cloudidentity.groups.v1beta1.ApproveDevicesDeviceUserRequest
	(*BlockDevicesDeviceUserRequest)(nil),                      // 134: google.apps.cloudidentity.groups.v1beta1.BlockDevicesDeviceUserRequest
	(*CancelWipeDevicesDeviceUserRequest)(nil),                 // 135: google.apps.cloudidentity.groups.v1beta1.CancelWipeDevicesDeviceUserRequest
	(*DeleteDevicesDeviceUserRequest)(nil),                     // 136: google.apps.cloudidentity.groups.v1beta1.DeleteDevicesDeviceUserRequest
	(*GetDevicesDeviceUserRequest)(nil),                        // 137: google.apps.cloudidentity.groups.v1beta1.GetDevicesDeviceUserRequest
	(*ListDevicesDeviceUsersRequest)(nil),                      // 138: google.apps.cloudidentity.groups.v1beta1.ListDevicesDeviceUsersRequest
	(*LookupDevicesDeviceUserRequest)(nil),                     // 139: google.apps.cloudidentity.groups.v1beta1.LookupDevicesDeviceUserRequest
	(*WipeDevicesDeviceUserRequest)(nil),                       // 140: google.apps.cloudidentity.groups.v1beta1.WipeDevicesDeviceUserRequest
	(*GetDevicesDeviceUsersClientStateRequest)(nil),            // 141: google.apps.cloudidentity.groups.v1beta1.GetDevicesDeviceUsersClientStateRequest
	(*PatchDevicesDeviceUsersClientStateRequest)(nil),          // 142: google.apps.cloudidentity.groups.v1beta1.PatchDevicesDeviceUsersClientStateRequest
	(*CreateGroupRequest)(nil),                                 // 143: google.apps.cloudidentity.groups.v1beta1.CreateGroupRequest
	(*DeleteGroupRequest)(nil),                                 // 144: google.apps.cloudidentity.groups.v1beta1.DeleteGroupRequest
	(*GetGroupRequest)(nil),                                    // 145: google.apps.cloudidentity.groups.v1beta1.GetGroupRequest
	(*GetSecuritySettingsGroupRequest)(nil),                    // 146: google.apps.cloudidentity.groups.v1beta1.GetSecuritySettingsGroupRequest
	(*ListGroupsRequest)(nil),                                  // 147: google.apps.cloudidentity.groups.v1beta1.ListGroupsRequest
	(*LookupGroupRequest)(nil),                                 // 148: google.apps.cloudidentity.groups.v1beta1.LookupGroupRequest
	(*PatchGroupRequest)(nil),                                  // 149: google.apps.cloudidentity.groups.v1beta1.PatchGroupRequest
	(*SearchGroupRequest)(nil),                                 // 150: google.apps.cloudidentity.groups.v1beta1.SearchGroupRequest
	(*UpdateSecuritySettingsGroupRequest)(nil),                 // 151: google.apps.cloudidentity.groups.v1beta1.UpdateSecuritySettingsGroupRequest
	(*CheckTransitiveMembershipGroupsMembershipRequest)(nil),   // 152: google.apps.cloudidentity.groups.v1beta1.CheckTransitiveMembershipGroupsMembershipRequest
	(*CreateGroupsMembershipRequest)(nil),                      // 153: google.apps.cloudidentity.groups.v1beta1.CreateGroupsMembershipRequest
	(*DeleteGroupsMembershipRequest)(nil),                      // 154: google.apps.cloudidentity.groups.v1beta1.DeleteGroupsMembershipRequest
	(*GetGroupsMembershipRequest)(nil),                         // 155: google.apps.cloudidentity.groups.v1beta1.GetGroupsMembershipRequest
	(*GetMembershipGraphGroupsMembershipRequest)(nil),          // 156: google.apps.cloudidentity.groups.v1beta1.GetMembershipGraphGroupsMembershipRequest
	(*ListGroupsMembershipsRequest)(nil),                       // 157: google.apps.cloudidentity.groups.v1beta1.ListGroupsMembershipsRequest
	(*LookupGroupsMembershipRequest)(nil),                      // 158: google.apps.cloudidentity.groups.v1beta1.LookupGroupsMembershipRequest
	(*ModifyMembershipRolesGroupsMembershipRequest)(nil),       // 159: google.apps.cloudidentity.groups.v1beta1.ModifyMembershipRolesGroupsMembershipRequest
	(*SearchDirectGroupsGroupsMembershipRequest)(nil),          // 160: google.apps.cloudidentity.groups.v1beta1.SearchDirectGroupsGroupsMembershipRequest
	(*SearchTransitiveGroupsGroupsMembershipRequest)(nil),      // 161: google.apps.cloudidentity.groups.v1beta1.SearchTransitiveGroupsGroupsMembershipRequest
	(*SearchTransitiveMembershipsGroupsMembershipRequest)(nil), // 162: google.apps.cloudidentity.groups.v1beta1.SearchTransitiveMembershipsGroupsMembershipRequest
	(*CreateInboundSamlSsoProfileRequest)(nil),                 // 163: google.apps.cloudidentity.groups.v1beta1.CreateInboundSamlSsoProfileRequest
	(*DeleteInboundSamlSsoProfileRequest)(nil),                 // 164: google.apps.cloudidentity.groups.v1beta1.DeleteInboundSamlSsoProfileRequest
	(*GetInboundSamlSsoProfileRequest)(nil),                    // 165: google.apps.cloudidentity.groups.v1beta1.GetInboundSamlSsoProfileRequest
	(*ListInboundSamlSsoProfilesRequest)(nil),                  // 166: google.apps.cloudidentity.groups.v1beta1.ListInboundSamlSsoProfilesRequest
	(*PatchInboundSamlSsoProfileRequest)(nil),                  // 167: google.apps.cloudidentity.groups.v1beta1.PatchInboundSamlSsoProfileRequest
	(*AddInboundSamlSsoProfilesIdpCredentialRequest)(nil),      // 168: google.apps.cloudidentity.groups.v1beta1.AddInboundSamlSsoProfilesIdpCredentialRequest
	(*DeleteInboundSamlSsoProfilesIdpCredentialRequest)(nil),   // 169: google.apps.cloudidentity.groups.v1beta1.DeleteInboundSamlSsoProfilesIdpCredentialRequest
	(*GetInboundSamlSsoProfilesIdpCredentialRequest)(nil),      // 170: google.apps.cloudidentity.groups.v1beta1.GetInboundSamlSsoProfilesIdpCredentialRequest
	(*ListInboundSamlSsoProfilesIdpCredentialsRequest)(nil),    // 171: google.apps.cloudidentity.groups.v1beta1.ListInboundSamlSsoProfilesIdpCredentialsRequest
	(*CreateInboundSsoAssignmentRequest)(nil),                  // 172: google.apps.cloudidentity.groups.v1beta1.CreateInboundSsoAssignmentRequest
	(*DeleteInboundSsoAssignmentRequest)(nil),                  // 173: google.apps.cloudidentity.groups.v1beta1.DeleteInboundSsoAssignmentRequest
	(*GetInboundSsoAssignmentRequest)(nil),                     // 174: google.apps.cloudidentity.groups.v1beta1.GetInboundSsoAssignmentRequest
	(*ListInboundSsoAssignmentsRequest)(nil),                   // 175: google.apps.cloudidentity.groups.v1beta1.ListInboundSsoAssignmentsRequest
	(*PatchInboundSsoAssignmentRequest)(nil),                   // 176: google.apps.cloudidentity.groups.v1beta1.PatchInboundSsoAssignmentRequest
	(*ListOrgUnitsMembershipsRequest)(nil),                     // 177: google.apps.cloudidentity.groups.v1beta1.ListOrgUnitsMembershipsRequest
	(*MoveOrgUnitsMembershipRequest)(nil),                      // 178: google.apps.cloudidentity.groups.v1beta1.MoveOrgUnitsMembershipRequest
	(*GetPolicyRequest)(nil),                                   // 179: google.apps.cloudidentity.groups.v1beta1.GetPolicyRequest
	(*ListPoliciesRequest)(nil),                                // 180: google.apps.cloudidentity.groups.v1beta1.ListPoliciesRequest
	nil,                                                        // 181: google.apps.cloudidentity.groups.v1beta1.ClientState.KeyValuePairsEntry
	nil,                                                        // 182: google.apps.cloudidentity.groups.v1beta1.EndpointVerificationSpecificAttributes.AdditionalSignalsEntry
	nil,                                                        // 183: google.apps.cloudidentity.groups.v1beta1.GoogleAppsCloudidentityDevicesV1ClientState.KeyValuePairsEntry
	nil,                                                        // 184: google.apps.cloudidentity.groups.v1beta1.GoogleAppsCloudidentityDevicesV1EndpointVerificationSpecificAttributes.AdditionalSignalsEntry
	nil,                                                        // 185: google.apps.cloudidentity.groups.v1beta1.Group.LabelsEntry
	nil,                                                        // 186: google.apps.cloudidentity.groups.v1beta1.GroupRelation.LabelsEntry
	nil,                                                        // 187: google.apps.cloudidentity.groups.v1beta1.MembershipRelation.LabelsEntry
	nil,                                                        // 188: google.apps.cloudidentity.groups.v1beta1.Setting.ValueEntry
	(*timestamp.Timestamp)(nil),                                // 189: google.protobuf.Timestamp
	(*any1.Any)(nil),                                           // 190: google.protobuf.Any
	(*longrunningpb.Operation)(nil),                            // 191: google.longrunning.Operation
}
var file_google_apps_cloudidentity_groups_v1beta1_service_proto_depIdxs = []int32{
	26,  // 0: google.apps.cloudidentity.groups.v1beta1.ApproveDeviceUserResponse.device_user:type_name -> google.apps.cloudidentity.groups.v1beta1.DeviceUser
	26,  // 1: google.apps.cloudidentity.groups.v1beta1.BlockDeviceUserResponse.device_user:type_name -> google.apps.cloudidentity.groups.v1beta1.DeviceUser
	8,   // 2: google.apps.cloudidentity.groups.v1beta1.BrowserAttributes.chrome_browser_info:type_name -> google.apps.cloudidentity.groups.v1beta1.BrowserInfo
	189, // 3: google.apps.cloudidentity.groups.v1beta1.BrowserAttributes.last_profile_sync_time:type_name -> google.protobuf.Timestamp
	25,  // 4: google.apps.cloudidentity.groups.v1beta1.CancelWipeDeviceResponse.device:type_name -> google.apps.cloudidentity.groups.v1beta1.Device
	26,  // 5: google.apps.cloudidentity.groups.v1beta1.CancelWipeDeviceUserResponse.device_user:type_name -> google.apps.cloudidentity.groups.v1beta1.DeviceUser
	15,  // 6: google.apps.cloudidentity.groups.v1beta1.CertificateAttributes.certificate_template:type_name -> google.apps.cloudidentity.groups.v1beta1.CertificateTemplate
	189, // 7: google.apps.cloudidentity.groups.v1beta1.CertificateAttributes.validity_expiration_time:type_name -> google.protobuf.Timestamp
	189, // 8: google.apps.cloudidentity.groups.v1beta1.CertificateAttributes.validity_start_time:type_name -> google.protobuf.Timestamp
	189, // 9: google.apps.cloudidentity.groups.v1beta1.ClientState.create_time:type_name -> google.protobuf.Timestamp
	181, // 10: google.apps.cloudidentity.groups.v1beta1.ClientState.key_value_pairs:type_name -> google.apps.cloudidentity.groups.v1beta1.ClientState.KeyValuePairsEntry
	189, // 11: google.apps.cloudidentity.groups.v1beta1.ClientState.last_update_time:type_name -> google.protobuf.Timestamp
	25,  // 12: google.apps.cloudidentity.groups.v1beta1.CreateDeviceRequest.device:type_name -> google.apps.cloudidentity.groups.v1beta1.Device
	2,   // 13: google.apps.cloudidentity.groups.v1beta1.Device.android_specific_attributes:type_name -> google.apps.cloudidentity.groups.v1beta1.AndroidAttributes
	189, // 14: google.apps.cloudidentity.groups.v1beta1.Device.create_time:type_name -> google.protobuf.Timestamp
	31,  // 15: google.apps.cloudidentity.groups.v1beta1.Device.endpoint_verification_specific_attributes:type_name -> google.apps.cloudidentity.groups.v1beta1.EndpointVerificationSpecificAttributes
	189, // 16: google.apps.cloudidentity.groups.v1beta1.Device.last_sync_time:type_name -> google.protobuf.Timestamp
	189, // 17: google.apps.cloudidentity.groups.v1beta1.Device.security_patch_time:type_name -> google.protobuf.Timestamp
	189, // 18: google.apps.cloudidentity.groups.v1beta1.DeviceUser.create_time:type_name -> google.protobuf.Timestamp
	189, // 19: google.apps.cloudidentity.groups.v1beta1.DeviceUser.first_sync_time:type_name -> google.protobuf.Timestamp
	189, // 20: google.apps.cloudidentity.groups.v1beta1.DeviceUser.last_sync_time:type_name -> google.protobuf.Timestamp
	29,  // 21: google.apps.cloudidentity.groups.v1beta1.DynamicGroupMetadata.queries:type_name -> google.apps.cloudidentity.groups.v1beta1.DynamicGroupQuery
	30,  // 22: google.apps.cloudidentity.groups.v1beta1.DynamicGroupMetadata.status:type_name -> google.apps.cloudidentity.groups.v1beta1.DynamicGroupStatus
	189, // 23: google.apps.cloudidentity.groups.v1beta1.DynamicGroupStatus.status_time:type_name -> google.protobuf.Timestamp
	182, // 24: google.apps.cloudidentity.groups.v1beta1.EndpointVerificationSpecificAttributes.additional_signals:type_name -> google.apps.cloudidentity.groups.v1beta1.EndpointVerificationSpecificAttributes.AdditionalSignalsEntry
	7,   // 25: google.apps.cloudidentity.groups.v1beta1.EndpointVerificationSpecificAttributes.browser_attributes:type_name -> google.apps.cloudidentity.groups.v1beta1.BrowserAttributes
	14,  // 26: google.apps.cloudidentity.groups.v1beta1.EndpointVerificationSpecificAttributes.certificate_attributes:type_name -> google.apps.cloudidentity.groups.v1beta1.CertificateAttributes
	189, // 27: google.apps.cloudidentity.groups.v1beta1.ExpiryDetail.expire_time:type_name -> google.protobuf.Timestamp
	87,  // 28: google.apps.cloudidentity.groups.v1beta1.GetMembershipGraphResponse.adjacency_list:type_name -> google.apps.cloudidentity.groups.v1beta1.MembershipAdjacencyList
	64,  // 29: google.apps.cloudidentity.groups.v1beta1.GetMembershipGraphResponse.groups:type_name -> google.apps.cloudidentity.groups.v1beta1.Group
	54,  // 30: google.apps.cloudidentity.groups.v1beta1.GoogleAppsCloudidentityDevicesV1ApproveDeviceUserResponse.device_user:type_name -> google.apps.cloudidentity.groups.v1beta1.GoogleAppsCloudidentityDevicesV1DeviceUser
	54,  // 31: google.apps.cloudidentity.groups.v1beta1.GoogleAppsCloudidentityDevicesV1BlockDeviceUserResponse.device_user:type_name -> google.apps.cloudidentity.groups.v1beta1.GoogleAppsCloudidentityDevicesV1DeviceUser
	41,  // 32: google.apps.cloudidentity.groups.v1beta1.GoogleAppsCloudidentityDevicesV1BrowserAttributes.chrome_browser_info:type_name -> google.apps.cloudidentity.groups.v1beta1.GoogleAppsCloudidentityDevicesV1BrowserInfo
	189, // 33: google.apps.cloudidentity.groups.v1beta1.GoogleAppsCloudidentityDevicesV1BrowserAttributes.last_profile_sync_time:type_name -> google.protobuf.Timestamp
	53,  // 34: google.apps.cloudidentity.groups.v1beta1.GoogleAppsCloudidentityDevicesV1CancelWipeDeviceResponse.device:type_name -> google.apps.cloudidentity.groups.v1beta1.GoogleAppsCloudidentityDevicesV1Device
	54,  // 35: google.apps.cloudidentity.groups.v1beta1.GoogleAppsCloudidentityDevicesV1CancelWipeDeviceUserResponse.device_user:type_name -> google.apps.cloudidentity.groups.v1beta1.GoogleAppsCloudidentityDevicesV1DeviceUser
	47,  // 36: google.apps.cloudidentity.groups.v1beta1.GoogleAppsCloudidentityDevicesV1CertificateAttributes.certificate_template:type_name -> google.apps.cloudidentity.groups.v1beta1.GoogleAppsCloudidentityDevicesV1CertificateTemplate
	189, // 37: google.apps.cloudidentity.groups.v1beta1.GoogleAppsCloudidentityDevicesV1CertificateAttributes.validity_expiration_time:type_name -> google.protobuf.Timestamp
	189, // 38: google.apps.cloudidentity.groups.v1beta1.GoogleAppsCloudidentityDevicesV1CertificateAttributes.validity_start_time:type_name -> google.protobuf.Timestamp
	189, // 39: google.apps.cloudidentity.groups.v1beta1.GoogleAppsCloudidentityDevicesV1ClientState.create_time:type_name -> google.protobuf.Timestamp
	183, // 40: google.apps.cloudidentity.groups.v1beta1.GoogleAppsCloudidentityDevicesV1ClientState.key_value_pairs:type_name -> google.apps.cloudidentity.groups.v1beta1.GoogleAppsCloudidentityDevicesV1ClientState.KeyValuePairsEntry
	189, // 41: google.apps.cloudidentity.groups.v1beta1.GoogleAppsCloudidentityDevicesV1ClientState.last_update_time:type_name -> google.protobuf.Timestamp
	35,  // 42: google.apps.cloudidentity.groups.v1beta1.GoogleAppsCloudidentityDevicesV1Device.android_specific_attributes:type_name -> google.apps.cloudidentity.groups.v1beta1.GoogleAppsCloudidentityDevicesV1AndroidAttributes
	189, // 43: google.apps.cloudidentity.groups.v1beta1.GoogleAppsCloudidentityDevicesV1Device.create_time:type_name -> google.protobuf.Timestamp
	55,  // 44: google.apps.cloudidentity.groups.v1beta1.GoogleAppsCloudidentityDevicesV1Device.endpoint_verification_specific_attributes:type_name -> google.apps.cloudidentity.groups.v1beta1.GoogleAppsCloudidentityDevicesV1EndpointVerificationSpecificAttributes
	189, // 45: google.apps.cloudidentity.groups.v1beta1.GoogleAppsCloudidentityDevicesV1Device.last_sync_time:type_name -> google.protobuf.Timestamp
	189, // 46: google.apps.cloudidentity.groups.v1beta1.GoogleAppsCloudidentityDevicesV1Device.security_patch_time:type_name -> google.protobuf.Timestamp
	189, // 47: google.apps.cloudidentity.groups.v1beta1.GoogleAppsCloudidentityDevicesV1DeviceUser.create_time:type_name -> google.protobuf.Timestamp
	189, // 48: google.apps.cloudidentity.groups.v1beta1.GoogleAppsCloudidentityDevicesV1DeviceUser.first_sync_time:type_name -> google.protobuf.Timestamp
	189, // 49: google.apps.cloudidentity.groups.v1beta1.GoogleAppsCloudidentityDevicesV1DeviceUser.last_sync_time:type_name -> google.protobuf.Timestamp
	184, // 50: google.apps.cloudidentity.groups.v1beta1.GoogleAppsCloudidentityDevicesV1EndpointVerificationSpecificAttributes.additional_signals:type_name -> google.apps.cloudidentity.groups.v1beta1.GoogleAppsCloudidentityDevicesV1EndpointVerificationSpecificAttributes.AdditionalSignalsEntry
	40,  // 51: google.apps.cloudidentity.groups.v1beta1.GoogleAppsCloudidentityDevicesV1EndpointVerificationSpecificAttributes.browser_attributes:type_name -> google.apps.cloudidentity.groups.v1beta1.GoogleAppsCloudidentityDevicesV1BrowserAttributes
	46,  // 52: google.apps.cloudidentity.groups.v1beta1.GoogleAppsCloudidentityDevicesV1EndpointVerificationSpecificAttributes.certificate_attributes:type_name -> google.apps.cloudidentity.groups.v1beta1.GoogleAppsCloudidentityDevicesV1CertificateAttributes
	53,  // 53: google.apps.cloudidentity.groups.v1beta1.GoogleAppsCloudidentityDevicesV1WipeDeviceResponse.device:type_name -> google.apps.cloudidentity.groups.v1beta1.GoogleAppsCloudidentityDevicesV1Device
	54,  // 54: google.apps.cloudidentity.groups.v1beta1.GoogleAppsCloudidentityDevicesV1WipeDeviceUserResponse.device_user:type_name -> google.apps.cloudidentity.groups.v1beta1.GoogleAppsCloudidentityDevicesV1DeviceUser
	32,  // 55: google.apps.cloudidentity.groups.v1beta1.Group.additional_group_keys:type_name -> google.apps.cloudidentity.groups.v1beta1.EntityKey
	189, // 56: google.apps.cloudidentity.groups.v1beta1.Group.create_time:type_name -> google.protobuf.Timestamp
	28,  // 57: google.apps.cloudidentity.groups.v1beta1.Group.dynamic_group_metadata:type_name -> google.apps.cloudidentity.groups.v1beta1.DynamicGroupMetadata
	32,  // 58: google.apps.cloudidentity.groups.v1beta1.Group.group_key:type_name -> google.apps.cloudidentity.groups.v1beta1.EntityKey
	185, // 59: google.apps.cloudidentity.groups.v1beta1.Group.labels:type_name -> google.apps.cloudidentity.groups.v1beta1.Group.LabelsEntry
	97,  // 60: google.apps.cloudidentity.groups.v1beta1.Group.posix_groups:type_name -> google.apps.cloudidentity.groups.v1beta1.PosixGroup
	189, // 61: google.apps.cloudidentity.groups.v1beta1.Group.update_time:type_name -> google.protobuf.Timestamp
	32,  // 62: google.apps.cloudidentity.groups.v1beta1.GroupRelation.group_key:type_name -> google.apps.cloudidentity.groups.v1beta1.EntityKey
	186, // 63: google.apps.cloudidentity.groups.v1beta1.GroupRelation.labels:type_name -> google.apps.cloudidentity.groups.v1beta1.GroupRelation.LabelsEntry
	113, // 64: google.apps.cloudidentity.groups.v1beta1.GroupRelation.roles:type_name -> google.apps.cloudidentity.groups.v1beta1.TransitiveMembershipRole
	27,  // 65: google.apps.cloudidentity.groups.v1beta1.IdpCredential.dsa_key_info:type_name -> google.apps.cloudidentity.groups.v1beta1.DsaPublicKeyInfo
	100, // 66: google.apps.cloudidentity.groups.v1beta1.IdpCredential.rsa_key_info:type_name -> google.apps.cloudidentity.groups.v1beta1.RsaPublicKeyInfo
	189, // 67: google.apps.cloudidentity.groups.v1beta1.IdpCredential.update_time:type_name -> google.protobuf.Timestamp
	101, // 68: google.apps.cloudidentity.groups.v1beta1.InboundSamlSsoProfile.idp_config:type_name -> google.apps.cloudidentity.groups.v1beta1.SamlIdpConfig
	102, // 69: google.apps.cloudidentity.groups.v1beta1.InboundSamlSsoProfile.sp_config:type_name -> google.apps.cloudidentity.groups.v1beta1.SamlSpConfig
	103, // 70: google.apps.cloudidentity.groups.v1beta1.InboundSsoAssignment.saml_sso_info:type_name -> google.apps.cloudidentity.groups.v1beta1.SamlSsoInfo
	111, // 71: google.apps.cloudidentity.groups.v1beta1.InboundSsoAssignment.sign_in_behavior:type_name -> google.apps.cloudidentity.groups.v1beta1.SignInBehavior
	17,  // 72: google.apps.cloudidentity.groups.v1beta1.ListClientStatesResponse.client_states:type_name -> google.apps.cloudidentity.groups.v1beta1.ClientState
	26,  // 73: google.apps.cloudidentity.groups.v1beta1.ListDeviceUsersResponse.device_users:type_name -> google.apps.cloudidentity.groups.v1beta1.DeviceUser
	25,  // 74: google.apps.cloudidentity.groups.v1beta1.ListDevicesResponse.devices:type_name -> google.apps.cloudidentity.groups.v1beta1.Device
	64,  // 75: google.apps.cloudidentity.groups.v1beta1.ListGroupsResponse.groups:type_name -> google.apps.cloudidentity.groups.v1beta1.Group
	66,  // 76: google.apps.cloudidentity.groups.v1beta1.ListIdpCredentialsResponse.idp_credentials:type_name -> google.apps.cloudidentity.groups.v1beta1.IdpCredential
	67,  // 77: google.apps.cloudidentity.groups.v1beta1.ListInboundSamlSsoProfilesResponse.inbound_saml_sso_profiles:type_name -> google.apps.cloudidentity.groups.v1beta1.InboundSamlSsoProfile
	68,  // 78: google.apps.cloudidentity.groups.v1beta1.ListInboundSsoAssignmentsResponse.inbound_sso_assignments:type_name -> google.apps.cloudidentity.groups.v1beta1.InboundSsoAssignment
	86,  // 79: google.apps.cloudidentity.groups.v1beta1.ListMembershipsResponse.memberships:type_name -> google.apps.cloudidentity.groups.v1beta1.Membership
	94,  // 80: google.apps.cloudidentity.groups.v1beta1.ListOrgMembershipsResponse.org_memberships:type_name -> google.apps.cloudidentity.groups.v1beta1.OrgMembership
	95,  // 81: google.apps.cloudidentity.groups.v1beta1.ListPoliciesResponse.policies:type_name -> google.apps.cloudidentity.groups.v1beta1.Policy
	117, // 82: google.apps.cloudidentity.groups.v1beta1.ListUserInvitationsResponse.user_invitations:type_name -> google.apps.cloudidentity.groups.v1beta1.UserInvitation
	32,  // 83: google.apps.cloudidentity.groups.v1beta1.MemberRelation.preferred_member_key:type_name -> google.apps.cloudidentity.groups.v1beta1.EntityKey
	113, // 84: google.apps.cloudidentity.groups.v1beta1.MemberRelation.roles:type_name -> google.apps.cloudidentity.groups.v1beta1.TransitiveMembershipRole
	98,  // 85: google.apps.cloudidentity.groups.v1beta1.MemberRestriction.evaluation:type_name -> google.apps.cloudidentity.groups.v1beta1.RestrictionEvaluation
	189, // 86: google.apps.cloudidentity.groups.v1beta1.Membership.create_time:type_name -> google.protobuf.Timestamp
	32,  // 87: google.apps.cloudidentity.groups.v1beta1.Membership.member_key:type_name -> google.apps.cloudidentity.groups.v1beta1.EntityKey
	32,  // 88: google.apps.cloudidentity.groups.v1beta1.Membership.preferred_member_key:type_name -> google.apps.cloudidentity.groups.v1beta1.EntityKey
	89,  // 89: google.apps.cloudidentity.groups.v1beta1.Membership.roles:type_name -> google.apps.cloudidentity.groups.v1beta1.MembershipRole
	189, // 90: google.apps.cloudidentity.groups.v1beta1.Membership.update_time:type_name -> google.protobuf.Timestamp
	86,  // 91: google.apps.cloudidentity.groups.v1beta1.MembershipAdjacencyList.edges:type_name -> google.apps.cloudidentity.groups.v1beta1.Membership
	32,  // 92: google.apps.cloudidentity.groups.v1beta1.MembershipRelation.group_key:type_name -> google.apps.cloudidentity.groups.v1beta1.EntityKey
	187, // 93: google.apps.cloudidentity.groups.v1beta1.MembershipRelation.labels:type_name -> google.apps.cloudidentity.groups.v1beta1.MembershipRelation.LabelsEntry
	89,  // 94: google.apps.cloudidentity.groups.v1beta1.MembershipRelation.roles:type_name -> google.apps.cloudidentity.groups.v1beta1.MembershipRole
	33,  // 95: google.apps.cloudidentity.groups.v1beta1.MembershipRole.expiry_detail:type_name -> google.apps.cloudidentity.groups.v1beta1.ExpiryDetail
	99,  // 96: google.apps.cloudidentity.groups.v1beta1.MembershipRole.restriction_evaluations:type_name -> google.apps.cloudidentity.groups.v1beta1.RestrictionEvaluations
	89,  // 97: google.apps.cloudidentity.groups.v1beta1.ModifyMembershipRolesRequest.add_roles:type_name -> google.apps.cloudidentity.groups.v1beta1.MembershipRole
	116, // 98: google.apps.cloudidentity.groups.v1beta1.ModifyMembershipRolesRequest.update_roles_params:type_name -> google.apps.cloudidentity.groups.v1beta1.UpdateMembershipRolesParams
	86,  // 99: google.apps.cloudidentity.groups.v1beta1.ModifyMembershipRolesResponse.membership:type_name -> google.apps.cloudidentity.groups.v1beta1.Membership
	96,  // 100: google.apps.cloudidentity.groups.v1beta1.Policy.policy_query:type_name -> google.apps.cloudidentity.groups.v1beta1.PolicyQuery
	110, // 101: google.apps.cloudidentity.groups.v1beta1.Policy.setting:type_name -> google.apps.cloudidentity.groups.v1beta1.Setting
	90,  // 102: google.apps.cloudidentity.groups.v1beta1.RestrictionEvaluations.member_restriction_evaluation:type_name -> google.apps.cloudidentity.groups.v1beta1.MembershipRoleRestrictionEvaluation
	88,  // 103: google.apps.cloudidentity.groups.v1beta1.SearchDirectGroupsResponse.memberships:type_name -> google.apps.cloudidentity.groups.v1beta1.MembershipRelation
	64,  // 104: google.apps.cloudidentity.groups.v1beta1.SearchGroupsResponse.groups:type_name -> google.apps.cloudidentity.groups.v1beta1.Group
	65,  // 105: google.apps.cloudidentity.groups.v1beta1.SearchTransitiveGroupsResponse.memberships:type_name -> google.apps.cloudidentity.groups.v1beta1.GroupRelation
	84,  // 106: google.apps.cloudidentity.groups.v1beta1.SearchTransitiveMembershipsResponse.memberships:type_name -> google.apps.cloudidentity.groups.v1beta1.MemberRelation
	85,  // 107: google.apps.cloudidentity.groups.v1beta1.SecuritySettings.member_restriction:type_name -> google.apps.cloudidentity.groups.v1beta1.MemberRestriction
	188, // 108: google.apps.cloudidentity.groups.v1beta1.Setting.value:type_name -> google.apps.cloudidentity.groups.v1beta1.Setting.ValueEntry
	190, // 109: google.apps.cloudidentity.groups.v1beta1.Status.details:type_name -> google.protobuf.Any
	89,  // 110: google.apps.cloudidentity.groups.v1beta1.UpdateMembershipRolesParams.membership_role:type_name -> google.apps.cloudidentity.groups.v1beta1.MembershipRole
	189, // 111: google.apps.cloudidentity.groups.v1beta1.UserInvitation.update_time:type_name -> google.protobuf.Timestamp
	25,  // 112: google.apps.cloudidentity.groups.v1beta1.WipeDeviceResponse.device:type_name -> google.apps.cloudidentity.groups.v1beta1.Device
	26,  // 113: google.apps.cloudidentity.groups.v1beta1.WipeDeviceUserResponse.device_user:type_name -> google.apps.cloudidentity.groups.v1beta1.DeviceUser
	9,   // 114: google.apps.cloudidentity.groups.v1beta1.CancelCustomersUserinvitationRequest.customers_userinvitation:type_name -> google.apps.cloudidentity.groups.v1beta1.CancelUserInvitationRequest
	109, // 115: google.apps.cloudidentity.groups.v1beta1.SendCustomersUserinvitationRequest.customers_userinvitation:type_name -> google.apps.cloudidentity.groups.v1beta1.SendUserInvitationRequest
	10,  // 116: google.apps.cloudidentity.groups.v1beta1.CancelWipeDeviceServiceRequest.device:type_name -> google.apps.cloudidentity.groups.v1beta1.CancelWipeDeviceRequest
	18,  // 117: google.apps.cloudidentity.groups.v1beta1.CreateDeviceServiceRequest.device:type_name -> google.apps.cloudidentity.groups.v1beta1.CreateDeviceRequest
	118, // 118: google.apps.cloudidentity.groups.v1beta1.WipeDeviceServiceRequest.device:type_name -> google.apps.cloudidentity.groups.v1beta1.WipeDeviceRequest
	3,   // 119: google.apps.cloudidentity.groups.v1beta1.ApproveDevicesDeviceUserRequest.devices_device_user:type_name -> google.apps.cloudidentity.groups.v1beta1.ApproveDeviceUserRequest
	5,   // 120: google.apps.cloudidentity.groups.v1beta1.BlockDevicesDeviceUserRequest.devices_device_user:type_name -> google.apps.cloudidentity.groups.v1beta1.BlockDeviceUserRequest
	12,  // 121: google.apps.cloudidentity.groups.v1beta1.CancelWipeDevicesDeviceUserRequest.devices_device_user:type_name -> google.apps.cloudidentity.groups.v1beta1.CancelWipeDeviceUserRequest
	120, // 122: google.apps.cloudidentity.groups.v1beta1.WipeDevicesDeviceUserRequest.devices_device_user:type_name -> google.apps.cloudidentity.groups.v1beta1.WipeDeviceUserRequest
	17,  // 123: google.apps.cloudidentity.groups.v1beta1.PatchDevicesDeviceUsersClientStateRequest.devices_device_users_client_state:type_name -> google.apps.cloudidentity.groups.v1beta1.ClientState
	64,  // 124: google.apps.cloudidentity.groups.v1beta1.CreateGroupRequest.group:type_name -> google.apps.cloudidentity.groups.v1beta1.Group
	64,  // 125: google.apps.cloudidentity.groups.v1beta1.PatchGroupRequest.group:type_name -> google.apps.cloudidentity.groups.v1beta1.Group
	108, // 126: google.apps.cloudidentity.groups.v1beta1.UpdateSecuritySettingsGroupRequest.group:type_name -> google.apps.cloudidentity.groups.v1beta1.SecuritySettings
	86,  // 127: google.apps.cloudidentity.groups.v1beta1.CreateGroupsMembershipRequest.groups_membership:type_name -> google.apps.cloudidentity.groups.v1beta1.Membership
	91,  // 128: google.apps.cloudidentity.groups.v1beta1.ModifyMembershipRolesGroupsMembershipRequest.groups_membership:type_name -> google.apps.cloudidentity.groups.v1beta1.ModifyMembershipRolesRequest
	67,  // 129: google.apps.cloudidentity.groups.v1beta1.CreateInboundSamlSsoProfileRequest.inbound_saml_sso_profile:type_name -> google.apps.cloudidentity.groups.v1beta1.InboundSamlSsoProfile
	67,  // 130: google.apps.cloudidentity.groups.v1beta1.PatchInboundSamlSsoProfileRequest.inbound_saml_sso_profile:type_name -> google.apps.cloudidentity.groups.v1beta1.InboundSamlSsoProfile
	1,   // 131: google.apps.cloudidentity.groups.v1beta1.AddInboundSamlSsoProfilesIdpCredentialRequest.inbound_saml_sso_profiles_idp_credential:type_name -> google.apps.cloudidentity.groups.v1beta1.AddIdpCredentialRequest
	68,  // 132: google.apps.cloudidentity.groups.v1beta1.CreateInboundSsoAssignmentRequest.inbound_sso_assignment:type_name -> google.apps.cloudidentity.groups.v1beta1.InboundSsoAssignment
	68,  // 133: google.apps.cloudidentity.groups.v1beta1.PatchInboundSsoAssignmentRequest.inbound_sso_assignment:type_name -> google.apps.cloudidentity.groups.v1beta1.InboundSsoAssignment
	93,  // 134: google.apps.cloudidentity.groups.v1beta1.MoveOrgUnitsMembershipRequest.org_units_membership:type_name -> google.apps.cloudidentity.groups.v1beta1.MoveOrgMembershipRequest
	21,  // 135: google.apps.cloudidentity.groups.v1beta1.ClientState.KeyValuePairsEntry.value:type_name -> google.apps.cloudidentity.groups.v1beta1.CustomAttributeValue
	190, // 136: google.apps.cloudidentity.groups.v1beta1.EndpointVerificationSpecificAttributes.AdditionalSignalsEntry.value:type_name -> google.protobuf.Any
	50,  // 137: google.apps.cloudidentity.groups.v1beta1.GoogleAppsCloudidentityDevicesV1ClientState.KeyValuePairsEntry.value:type_name -> google.apps.cloudidentity.groups.v1beta1.GoogleAppsCloudidentityDevicesV1CustomAttributeValue
	190, // 138: google.apps.cloudidentity.groups.v1beta1.GoogleAppsCloudidentityDevicesV1EndpointVerificationSpecificAttributes.AdditionalSignalsEntry.value:type_name -> google.protobuf.Any
	190, // 139: google.apps.cloudidentity.groups.v1beta1.Setting.ValueEntry.value:type_name -> google.protobuf.Any
	122, // 140: google.apps.cloudidentity.groups.v1beta1.CustomersUserinvitationsServer.CancelCustomersUserinvitation:input_type -> google.apps.cloudidentity.groups.v1beta1.CancelCustomersUserinvitationRequest
	123, // 141: google.apps.cloudidentity.groups.v1beta1.CustomersUserinvitationsServer.GetCustomersUserinvitation:input_type -> google.apps.cloudidentity.groups.v1beta1.GetCustomersUserinvitationRequest
	124, // 142: google.apps.cloudidentity.groups.v1beta1.CustomersUserinvitationsServer.IsInvitableUserCustomersUserinvitation:input_type -> google.apps.cloudidentity.groups.v1beta1.IsInvitableUserCustomersUserinvitationRequest
	125, // 143: google.apps.cloudidentity.groups.v1beta1.CustomersUserinvitationsServer.ListCustomersUserinvitations:input_type -> google.apps.cloudidentity.groups.v1beta1.ListCustomersUserinvitationsRequest
	126, // 144: google.apps.cloudidentity.groups.v1beta1.CustomersUserinvitationsServer.SendCustomersUserinvitation:input_type -> google.apps.cloudidentity.groups.v1beta1.SendCustomersUserinvitationRequest
	127, // 145: google.apps.cloudidentity.groups.v1beta1.DevicesServer.CancelWipeDevice:input_type -> google.apps.cloudidentity.groups.v1beta1.CancelWipeDeviceServiceRequest
	128, // 146: google.apps.cloudidentity.groups.v1beta1.DevicesServer.CreateDevice:input_type -> google.apps.cloudidentity.groups.v1beta1.CreateDeviceServiceRequest
	129, // 147: google.apps.cloudidentity.groups.v1beta1.DevicesServer.DeleteDevice:input_type -> google.apps.cloudidentity.groups.v1beta1.DeleteDeviceRequest
	130, // 148: google.apps.cloudidentity.groups.v1beta1.DevicesServer.GetDevice:input_type -> google.apps.cloudidentity.groups.v1beta1.GetDeviceRequest
	131, // 149: google.apps.cloudidentity.groups.v1beta1.DevicesServer.ListDevices:input_type -> google.apps.cloudidentity.groups.v1beta1.ListDevicesRequest
	132, // 150: google.apps.cloudidentity.groups.v1beta1.DevicesServer.WipeDevice:input_type -> google.apps.cloudidentity.groups.v1beta1.WipeDeviceServiceRequest
	133, // 151: google.apps.cloudidentity.groups.v1beta1.DevicesDeviceUsersServer.ApproveDevicesDeviceUser:input_type -> google.apps.cloudidentity.groups.v1beta1.ApproveDevicesDeviceUserRequest
	134, // 152: google.apps.cloudidentity.groups.v1beta1.DevicesDeviceUsersServer.BlockDevicesDeviceUser:input_type -> google.apps.cloudidentity.groups.v1beta1.BlockDevicesDeviceUserRequest
	135, // 153: google.apps.cloudidentity.groups.v1beta1.DevicesDeviceUsersServer.CancelWipeDevicesDeviceUser:input_type -> google.apps.cloudidentity.groups.v1beta1.CancelWipeDevicesDeviceUserRequest
	136, // 154: google.apps.cloudidentity.groups.v1beta1.DevicesDeviceUsersServer.DeleteDevicesDeviceUser:input_type -> google.apps.cloudidentity.groups.v1beta1.DeleteDevicesDeviceUserRequest
	137, // 155: google.apps.cloudidentity.groups.v1beta1.DevicesDeviceUsersServer.GetDevicesDeviceUser:input_type -> google.apps.cloudidentity.groups.v1beta1.GetDevicesDeviceUserRequest
	138, // 156: google.apps.cloudidentity.groups.v1beta1.DevicesDeviceUsersServer.ListDevicesDeviceUsers:input_type -> google.apps.cloudidentity.groups.v1beta1.ListDevicesDeviceUsersRequest
	139, // 157: google.apps.cloudidentity.groups.v1beta1.DevicesDeviceUsersServer.LookupDevicesDeviceUser:input_type -> google.apps.cloudidentity.groups.v1beta1.LookupDevicesDeviceUserRequest
	140, // 158: google.apps.cloudidentity.groups.v1beta1.DevicesDeviceUsersServer.WipeDevicesDeviceUser:input_type -> google.apps.cloudidentity.groups.v1beta1.WipeDevicesDeviceUserRequest
	141, // 159: google.apps.cloudidentity.groups.v1beta1.DevicesDeviceUsersClientStatesServer.GetDevicesDeviceUsersClientState:input_type -> google.apps.cloudidentity.groups.v1beta1.GetDevicesDeviceUsersClientStateRequest
	142, // 160: google.apps.cloudidentity.groups.v1beta1.DevicesDeviceUsersClientStatesServer.PatchDevicesDeviceUsersClientState:input_type -> google.apps.cloudidentity.groups.v1beta1.PatchDevicesDeviceUsersClientStateRequest
	143, // 161: google.apps.cloudidentity.groups.v1beta1.GroupsServer.CreateGroup:input_type -> google.apps.cloudidentity.groups.v1beta1.CreateGroupRequest
	144, // 162: google.apps.cloudidentity.groups.v1beta1.GroupsServer.DeleteGroup:input_type -> google.apps.cloudidentity.groups.v1beta1.DeleteGroupRequest
	145, // 163: google.apps.cloudidentity.groups.v1beta1.GroupsServer.GetGroup:input_type -> google.apps.cloudidentity.groups.v1beta1.GetGroupRequest
	146, // 164: google.apps.cloudidentity.groups.v1beta1.GroupsServer.GetSecuritySettingsGroup:input_type -> google.apps.cloudidentity.groups.v1beta1.GetSecuritySettingsGroupRequest
	147, // 165: google.apps.cloudidentity.groups.v1beta1.GroupsServer.ListGroups:input_type -> google.apps.cloudidentity.groups.v1beta1.ListGroupsRequest
	148, // 166: google.apps.cloudidentity.groups.v1beta1.GroupsServer.LookupGroup:input_type -> google.apps.cloudidentity.groups.v1beta1.LookupGroupRequest
	149, // 167: google.apps.cloudidentity.groups.v1beta1.GroupsServer.PatchGroup:input_type -> google.apps.cloudidentity.groups.v1beta1.PatchGroupRequest
	150, // 168: google.apps.cloudidentity.groups.v1beta1.GroupsServer.SearchGroup:input_type -> google.apps.cloudidentity.groups.v1beta1.SearchGroupRequest
	151, // 169: google.apps.cloudidentity.groups.v1beta1.GroupsServer.UpdateSecuritySettingsGroup:input_type -> google.apps.cloudidentity.groups.v1beta1.UpdateSecuritySettingsGroupRequest
	152, // 170: google.apps.cloudidentity.groups.v1beta1.GroupsMembershipsServer.CheckTransitiveMembershipGroupsMembership:input_type -> google.apps.cloudidentity.groups.v1beta1.CheckTransitiveMembershipGroupsMembershipRequest
	153, // 171: google.apps.cloudidentity.groups.v1beta1.GroupsMembershipsServer.CreateGroupsMembership:input_type -> google.apps.cloudidentity.groups.v1beta1.CreateGroupsMembershipRequest
	154, // 172: google.apps.cloudidentity.groups.v1beta1.GroupsMembershipsServer.DeleteGroupsMembership:input_type -> google.apps.cloudidentity.groups.v1beta1.DeleteGroupsMembershipRequest
	155, // 173: google.apps.cloudidentity.groups.v1beta1.GroupsMembershipsServer.GetGroupsMembership:input_type -> google.apps.cloudidentity.groups.v1beta1.GetGroupsMembershipRequest
	156, // 174: google.apps.cloudidentity.groups.v1beta1.GroupsMembershipsServer.GetMembershipGraphGroupsMembership:input_type -> google.apps.cloudidentity.groups.v1beta1.GetMembershipGraphGroupsMembershipRequest
	157, // 175: google.apps.cloudidentity.groups.v1beta1.GroupsMembershipsServer.ListGroupsMemberships:input_type -> google.apps.cloudidentity.groups.v1beta1.ListGroupsMembershipsRequest
	158, // 176: google.apps.cloudidentity.groups.v1beta1.GroupsMembershipsServer.LookupGroupsMembership:input_type -> google.apps.cloudidentity.groups.v1beta1.LookupGroupsMembershipRequest
	159, // 177: google.apps.cloudidentity.groups.v1beta1.GroupsMembershipsServer.ModifyMembershipRolesGroupsMembership:input_type -> google.apps.cloudidentity.groups.v1beta1.ModifyMembershipRolesGroupsMembershipRequest
	160, // 178: google.apps.cloudidentity.groups.v1beta1.GroupsMembershipsServer.SearchDirectGroupsGroupsMembership:input_type -> google.apps.cloudidentity.groups.v1beta1.SearchDirectGroupsGroupsMembershipRequest
	161, // 179: google.apps.cloudidentity.groups.v1beta1.GroupsMembershipsServer.SearchTransitiveGroupsGroupsMembership:input_type -> google.apps.cloudidentity.groups.v1beta1.SearchTransitiveGroupsGroupsMembershipRequest
	162, // 180: google.apps.cloudidentity.groups.v1beta1.GroupsMembershipsServer.SearchTransitiveMembershipsGroupsMembership:input_type -> google.apps.cloudidentity.groups.v1beta1.SearchTransitiveMembershipsGroupsMembershipRequest
	163, // 181: google.apps.cloudidentity.groups.v1beta1.InboundSamlSsoProfilesServer.CreateInboundSamlSsoProfile:input_type -> google.apps.cloudidentity.groups.v1beta1.CreateInboundSamlSsoProfileRequest
	164, // 182: google.apps.cloudidentity.groups.v1beta1.InboundSamlSsoProfilesServer.DeleteInboundSamlSsoProfile:input_type -> google.apps.cloudidentity.groups.v1beta1.DeleteInboundSamlSsoProfileRequest
	165, // 183: google.apps.cloudidentity.groups.v1beta1.InboundSamlSsoProfilesServer.GetInboundSamlSsoProfile:input_type -> google.apps.cloudidentity.groups.v1beta1.GetInboundSamlSsoProfileRequest
	166, // 184: google.apps.cloudidentity.groups.v1beta1.InboundSamlSsoProfilesServer.ListInboundSamlSsoProfiles:input_type -> google.apps.cloudidentity.groups.v1beta1.ListInboundSamlSsoProfilesRequest
	167, // 185: google.apps.cloudidentity.groups.v1beta1.InboundSamlSsoProfilesServer.PatchInboundSamlSsoProfile:input_type -> google.apps.cloudidentity.groups.v1beta1.PatchInboundSamlSsoProfileRequest
	168, // 186: google.apps.cloudidentity.groups.v1beta1.InboundSamlSsoProfilesIdpCredentialsServer.AddInboundSamlSsoProfilesIdpCredential:input_type -> google.apps.cloudidentity.groups.v1beta1.AddInboundSamlSsoProfilesIdpCredentialRequest
	169, // 187: google.apps.cloudidentity.groups.v1beta1.InboundSamlSsoProfilesIdpCredentialsServer.DeleteInboundSamlSsoProfilesIdpCredential:input_type -> google.apps.cloudidentity.groups.v1beta1.DeleteInboundSamlSsoProfilesIdpCredentialRequest
	170, // 188: google.apps.cloudidentity.groups.v1beta1.InboundSamlSsoProfilesIdpCredentialsServer.GetInboundSamlSsoProfilesIdpCredential:input_type -> google.apps.cloudidentity.groups.v1beta1.GetInboundSamlSsoProfilesIdpCredentialRequest
	171, // 189: google.apps.cloudidentity.groups.v1beta1.InboundSamlSsoProfilesIdpCredentialsServer.ListInboundSamlSsoProfilesIdpCredentials:input_type -> google.apps.cloudidentity.groups.v1beta1.ListInboundSamlSsoProfilesIdpCredentialsRequest
	172, // 190: google.apps.cloudidentity.groups.v1beta1.InboundSsoAssignmentsServer.CreateInboundSsoAssignment:input_type -> google.apps.cloudidentity.groups.v1beta1.CreateInboundSsoAssignmentRequest
	173, // 191: google.apps.cloudidentity.groups.v1beta1.InboundSsoAssignmentsServer.DeleteInboundSsoAssignment:input_type -> google.apps.cloudidentity.groups.v1beta1.DeleteInboundSsoAssignmentRequest
	174, // 192: google.apps.cloudidentity.groups.v1beta1.InboundSsoAssignmentsServer.GetInboundSsoAssignment:input_type -> google.apps.cloudidentity.groups.v1beta1.GetInboundSsoAssignmentRequest
	175, // 193: google.apps.cloudidentity.groups.v1beta1.InboundSsoAssignmentsServer.ListInboundSsoAssignments:input_type -> google.apps.cloudidentity.groups.v1beta1.ListInboundSsoAssignmentsRequest
	176, // 194: google.apps.cloudidentity.groups.v1beta1.InboundSsoAssignmentsServer.PatchInboundSsoAssignment:input_type -> google.apps.cloudidentity.groups.v1beta1.PatchInboundSsoAssignmentRequest
	177, // 195: google.apps.cloudidentity.groups.v1beta1.OrgUnitsMembershipsServer.ListOrgUnitsMemberships:input_type -> google.apps.cloudidentity.groups.v1beta1.ListOrgUnitsMembershipsRequest
	178, // 196: google.apps.cloudidentity.groups.v1beta1.OrgUnitsMembershipsServer.MoveOrgUnitsMembership:input_type -> google.apps.cloudidentity.groups.v1beta1.MoveOrgUnitsMembershipRequest
	179, // 197: google.apps.cloudidentity.groups.v1beta1.PoliciesServer.GetPolicy:input_type -> google.apps.cloudidentity.groups.v1beta1.GetPolicyRequest
	180, // 198: google.apps.cloudidentity.groups.v1beta1.PoliciesServer.ListPolicies:input_type -> google.apps.cloudidentity.groups.v1beta1.ListPoliciesRequest
	191, // 199: google.apps.cloudidentity.groups.v1beta1.CustomersUserinvitationsServer.CancelCustomersUserinvitation:output_type -> google.longrunning.Operation
	117, // 200: google.apps.cloudidentity.groups.v1beta1.CustomersUserinvitationsServer.GetCustomersUserinvitation:output_type -> google.apps.cloudidentity.groups.v1beta1.UserInvitation
	69,  // 201: google.apps.cloudidentity.groups.v1beta1.CustomersUserinvitationsServer.IsInvitableUserCustomersUserinvitation:output_type -> google.apps.cloudidentity.groups.v1beta1.IsInvitableUserResponse
	80,  // 202: google.apps.cloudidentity.groups.v1beta1.CustomersUserinvitationsServer.ListCustomersUserinvitations:output_type -> google.apps.cloudidentity.groups.v1beta1.ListUserInvitationsResponse
	191, // 203: google.apps.cloudidentity.groups.v1beta1.CustomersUserinvitationsServer.SendCustomersUserinvitation:output_type -> google.longrunning.Operation
	191, // 204: google.apps.cloudidentity.groups.v1beta1.DevicesServer.CancelWipeDevice:output_type -> google.longrunning.Operation
	191, // 205: google.apps.cloudidentity.groups.v1beta1.DevicesServer.CreateDevice:output_type -> google.longrunning.Operation
	191, // 206: google.apps.cloudidentity.groups.v1beta1.DevicesServer.DeleteDevice:output_type -> google.longrunning.Operation
	25,  // 207: google.apps.cloudidentity.groups.v1beta1.DevicesServer.GetDevice:output_type -> google.apps.cloudidentity.groups.v1beta1.Device
	72,  // 208: google.apps.cloudidentity.groups.v1beta1.DevicesServer.ListDevices:output_type -> google.apps.cloudidentity.groups.v1beta1.ListDevicesResponse
	191, // 209: google.apps.cloudidentity.groups.v1beta1.DevicesServer.WipeDevice:output_type -> google.longrunning.Operation
	191, // 210: google.apps.cloudidentity.groups.v1beta1.DevicesDeviceUsersServer.ApproveDevicesDeviceUser:output_type -> google.longrunning.Operation
	191, // 211: google.apps.cloudidentity.groups.v1beta1.DevicesDeviceUsersServer.BlockDevicesDeviceUser:output_type -> google.longrunning.Operation
	191, // 212: google.apps.cloudidentity.groups.v1beta1.DevicesDeviceUsersServer.CancelWipeDevicesDeviceUser:output_type -> google.longrunning.Operation
	191, // 213: google.apps.cloudidentity.groups.v1beta1.DevicesDeviceUsersServer.DeleteDevicesDeviceUser:output_type -> google.longrunning.Operation
	26,  // 214: google.apps.cloudidentity.groups.v1beta1.DevicesDeviceUsersServer.GetDevicesDeviceUser:output_type -> google.apps.cloudidentity.groups.v1beta1.DeviceUser
	71,  // 215: google.apps.cloudidentity.groups.v1beta1.DevicesDeviceUsersServer.ListDevicesDeviceUsers:output_type -> google.apps.cloudidentity.groups.v1beta1.ListDeviceUsersResponse
	83,  // 216: google.apps.cloudidentity.groups.v1beta1.DevicesDeviceUsersServer.LookupDevicesDeviceUser:output_type -> google.apps.cloudidentity.groups.v1beta1.LookupSelfDeviceUsersResponse
	191, // 217: google.apps.cloudidentity.groups.v1beta1.DevicesDeviceUsersServer.WipeDevicesDeviceUser:output_type -> google.longrunning.Operation
	17,  // 218: google.apps.cloudidentity.groups.v1beta1.DevicesDeviceUsersClientStatesServer.GetDevicesDeviceUsersClientState:output_type -> google.apps.cloudidentity.groups.v1beta1.ClientState
	191, // 219: google.apps.cloudidentity.groups.v1beta1.DevicesDeviceUsersClientStatesServer.PatchDevicesDeviceUsersClientState:output_type -> google.longrunning.Operation
	191, // 220: google.apps.cloudidentity.groups.v1beta1.GroupsServer.CreateGroup:output_type -> google.longrunning.Operation
	191, // 221: google.apps.cloudidentity.groups.v1beta1.GroupsServer.DeleteGroup:output_type -> google.longrunning.Operation
	64,  // 222: google.apps.cloudidentity.groups.v1beta1.GroupsServer.GetGroup:output_type -> google.apps.cloudidentity.groups.v1beta1.Group
	108, // 223: google.apps.cloudidentity.groups.v1beta1.GroupsServer.GetSecuritySettingsGroup:output_type -> google.apps.cloudidentity.groups.v1beta1.SecuritySettings
	73,  // 224: google.apps.cloudidentity.groups.v1beta1.GroupsServer.ListGroups:output_type -> google.apps.cloudidentity.groups.v1beta1.ListGroupsResponse
	81,  // 225: google.apps.cloudidentity.groups.v1beta1.GroupsServer.LookupGroup:output_type -> google.apps.cloudidentity.groups.v1beta1.LookupGroupNameResponse
	191, // 226: google.apps.cloudidentity.groups.v1beta1.GroupsServer.PatchGroup:output_type -> google.longrunning.Operation
	105, // 227: google.apps.cloudidentity.groups.v1beta1.GroupsServer.SearchGroup:output_type -> google.apps.cloudidentity.groups.v1beta1.SearchGroupsResponse
	191, // 228: google.apps.cloudidentity.groups.v1beta1.GroupsServer.UpdateSecuritySettingsGroup:output_type -> google.longrunning.Operation
	16,  // 229: google.apps.cloudidentity.groups.v1beta1.GroupsMembershipsServer.CheckTransitiveMembershipGroupsMembership:output_type -> google.apps.cloudidentity.groups.v1beta1.CheckTransitiveMembershipResponse
	191, // 230: google.apps.cloudidentity.groups.v1beta1.GroupsMembershipsServer.CreateGroupsMembership:output_type -> google.longrunning.Operation
	191, // 231: google.apps.cloudidentity.groups.v1beta1.GroupsMembershipsServer.DeleteGroupsMembership:output_type -> google.longrunning.Operation
	86,  // 232: google.apps.cloudidentity.groups.v1beta1.GroupsMembershipsServer.GetGroupsMembership:output_type -> google.apps.cloudidentity.groups.v1beta1.Membership
	191, // 233: google.apps.cloudidentity.groups.v1beta1.GroupsMembershipsServer.GetMembershipGraphGroupsMembership:output_type -> google.longrunning.Operation
	77,  // 234: google.apps.cloudidentity.groups.v1beta1.GroupsMembershipsServer.ListGroupsMemberships:output_type -> google.apps.cloudidentity.groups.v1beta1.ListMembershipsResponse
	82,  // 235: google.apps.cloudidentity.groups.v1beta1.GroupsMembershipsServer.LookupGroupsMembership:output_type -> google.apps.cloudidentity.groups.v1beta1.LookupMembershipNameResponse
	92,  // 236: google.apps.cloudidentity.groups.v1beta1.GroupsMembershipsServer.ModifyMembershipRolesGroupsMembership:output_type -> google.apps.cloudidentity.groups.v1beta1.ModifyMembershipRolesResponse
	104, // 237: google.apps.cloudidentity.groups.v1beta1.GroupsMembershipsServer.SearchDirectGroupsGroupsMembership:output_type -> google.apps.cloudidentity.groups.v1beta1.SearchDirectGroupsResponse
	106, // 238: google.apps.cloudidentity.groups.v1beta1.GroupsMembershipsServer.SearchTransitiveGroupsGroupsMembership:output_type -> google.apps.cloudidentity.groups.v1beta1.SearchTransitiveGroupsResponse
	107, // 239: google.apps.cloudidentity.groups.v1beta1.GroupsMembershipsServer.SearchTransitiveMembershipsGroupsMembership:output_type -> google.apps.cloudidentity.groups.v1beta1.SearchTransitiveMembershipsResponse
	191, // 240: google.apps.cloudidentity.groups.v1beta1.InboundSamlSsoProfilesServer.CreateInboundSamlSsoProfile:output_type -> google.longrunning.Operation
	191, // 241: google.apps.cloudidentity.groups.v1beta1.InboundSamlSsoProfilesServer.DeleteInboundSamlSsoProfile:output_type -> google.longrunning.Operation
	67,  // 242: google.apps.cloudidentity.groups.v1beta1.InboundSamlSsoProfilesServer.GetInboundSamlSsoProfile:output_type -> google.apps.cloudidentity.groups.v1beta1.InboundSamlSsoProfile
	75,  // 243: google.apps.cloudidentity.groups.v1beta1.InboundSamlSsoProfilesServer.ListInboundSamlSsoProfiles:output_type -> google.apps.cloudidentity.groups.v1beta1.ListInboundSamlSsoProfilesResponse
	191, // 244: google.apps.cloudidentity.groups.v1beta1.InboundSamlSsoProfilesServer.PatchInboundSamlSsoProfile:output_type -> google.longrunning.Operation
	191, // 245: google.apps.cloudidentity.groups.v1beta1.InboundSamlSsoProfilesIdpCredentialsServer.AddInboundSamlSsoProfilesIdpCredential:output_type -> google.longrunning.Operation
	191, // 246: google.apps.cloudidentity.groups.v1beta1.InboundSamlSsoProfilesIdpCredentialsServer.DeleteInboundSamlSsoProfilesIdpCredential:output_type -> google.longrunning.Operation
	66,  // 247: google.apps.cloudidentity.groups.v1beta1.InboundSamlSsoProfilesIdpCredentialsServer.GetInboundSamlSsoProfilesIdpCredential:output_type -> google.apps.cloudidentity.groups.v1beta1.IdpCredential
	74,  // 248: google.apps.cloudidentity.groups.v1beta1.InboundSamlSsoProfilesIdpCredentialsServer.ListInboundSamlSsoProfilesIdpCredentials:output_type -> google.apps.cloudidentity.groups.v1beta1.ListIdpCredentialsResponse
	191, // 249: google.apps.cloudidentity.groups.v1beta1.InboundSsoAssignmentsServer.CreateInboundSsoAssignment:output_type -> google.longrunning.Operation
	191, // 250: google.apps.cloudidentity.groups.v1beta1.InboundSsoAssignmentsServer.DeleteInboundSsoAssignment:output_type -> google.longrunning.Operation
	68,  // 251: google.apps.cloudidentity.groups.v1beta1.InboundSsoAssignmentsServer.GetInboundSsoAssignment:output_type -> google.apps.cloudidentity.groups.v1beta1.InboundSsoAssignment
	76,  // 252: google.apps.cloudidentity.groups.v1beta1.InboundSsoAssignmentsServer.ListInboundSsoAssignments:output_type -> google.apps.cloudidentity.groups.v1beta1.ListInboundSsoAssignmentsResponse
	191, // 253: google.apps.cloudidentity.groups.v1beta1.InboundSsoAssignmentsServer.PatchInboundSsoAssignment:output_type -> google.longrunning.Operation
	78,  // 254: google.apps.cloudidentity.groups.v1beta1.OrgUnitsMembershipsServer.ListOrgUnitsMemberships:output_type -> google.apps.cloudidentity.groups.v1beta1.ListOrgMembershipsResponse
	191, // 255: google.apps.cloudidentity.groups.v1beta1.OrgUnitsMembershipsServer.MoveOrgUnitsMembership:output_type -> google.longrunning.Operation
	95,  // 256: google.apps.cloudidentity.groups.v1beta1.PoliciesServer.GetPolicy:output_type -> google.apps.cloudidentity.groups.v1beta1.Policy
	79,  // 257: google.apps.cloudidentity.groups.v1beta1.PoliciesServer.ListPolicies:output_type -> google.apps.cloudidentity.groups.v1beta1.ListPoliciesResponse
	199, // [199:258] is the sub-list for method output_type
	140, // [140:199] is the sub-list for method input_type
	140, // [140:140] is the sub-list for extension type_name
	140, // [140:140] is the sub-list for extension extendee
	0,   // [0:140] is the sub-list for field type_name
}

func init() { file_google_apps_cloudidentity_groups_v1beta1_service_proto_init() }
func file_google_apps_cloudidentity_groups_v1beta1_service_proto_init() {
	if File_google_apps_cloudidentity_groups_v1beta1_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddIdpCredentialOperationMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddIdpCredentialRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AndroidAttributes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApproveDeviceUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApproveDeviceUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockDeviceUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockDeviceUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BrowserAttributes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BrowserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelUserInvitationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelWipeDeviceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelWipeDeviceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelWipeDeviceUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelWipeDeviceUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CertificateAttributes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CertificateTemplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckTransitiveMembershipResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDeviceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateInboundSamlSsoProfileOperationMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateInboundSsoAssignmentOperationMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomAttributeValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteIdpCredentialOperationMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteInboundSamlSsoProfileOperationMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteInboundSsoAssignmentOperationMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Device); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DsaPublicKeyInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynamicGroupMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynamicGroupQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynamicGroupStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EndpointVerificationSpecificAttributes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExpiryDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMembershipGraphResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleAppsCloudidentityDevicesV1AndroidAttributes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleAppsCloudidentityDevicesV1ApproveDeviceUserMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleAppsCloudidentityDevicesV1ApproveDeviceUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleAppsCloudidentityDevicesV1BlockDeviceUserMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleAppsCloudidentityDevicesV1BlockDeviceUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleAppsCloudidentityDevicesV1BrowserAttributes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleAppsCloudidentityDevicesV1BrowserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleAppsCloudidentityDevicesV1CancelWipeDeviceMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleAppsCloudidentityDevicesV1CancelWipeDeviceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleAppsCloudidentityDevicesV1CancelWipeDeviceUserMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleAppsCloudidentityDevicesV1CancelWipeDeviceUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleAppsCloudidentityDevicesV1CertificateAttributes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleAppsCloudidentityDevicesV1CertificateTemplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleAppsCloudidentityDevicesV1ClientState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleAppsCloudidentityDevicesV1CreateDeviceMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleAppsCloudidentityDevicesV1CustomAttributeValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleAppsCloudidentityDevicesV1DeleteDeviceMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleAppsCloudidentityDevicesV1DeleteDeviceUserMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleAppsCloudidentityDevicesV1Device); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleAppsCloudidentityDevicesV1DeviceUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleAppsCloudidentityDevicesV1EndpointVerificationSpecificAttributes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleAppsCloudidentityDevicesV1ListEndpointAppsMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleAppsCloudidentityDevicesV1SignoutDeviceUserMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleAppsCloudidentityDevicesV1UpdateClientStateMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleAppsCloudidentityDevicesV1UpdateDeviceMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleAppsCloudidentityDevicesV1WipeDeviceMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleAppsCloudidentityDevicesV1WipeDeviceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleAppsCloudidentityDevicesV1WipeDeviceUserMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleAppsCloudidentityDevicesV1WipeDeviceUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Group); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupRelation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdpCredential); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InboundSamlSsoProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InboundSsoAssignment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsInvitableUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListClientStatesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDeviceUsersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDevicesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGroupsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListIdpCredentialsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListInboundSamlSsoProfilesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListInboundSsoAssignmentsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMembershipsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrgMembershipsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPoliciesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserInvitationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LookupGroupNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LookupMembershipNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LookupSelfDeviceUsersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberRelation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberRestriction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Membership); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MembershipAdjacencyList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MembershipRelation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MembershipRole); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MembershipRoleRestrictionEvaluation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyMembershipRolesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyMembershipRolesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoveOrgMembershipRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrgMembership); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Policy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PolicyQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PosixGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestrictionEvaluation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestrictionEvaluations); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RsaPublicKeyInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SamlIdpConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SamlSpConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SamlSsoInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchDirectGroupsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchGroupsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchTransitiveGroupsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchTransitiveMembershipsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SecuritySettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendUserInvitationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Setting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignInBehavior); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Status); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransitiveMembershipRole); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateInboundSamlSsoProfileOperationMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateInboundSsoAssignmentOperationMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[116].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMembershipRolesParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[117].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInvitation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[118].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WipeDeviceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[119].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WipeDeviceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[120].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WipeDeviceUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[121].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WipeDeviceUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[122].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelCustomersUserinvitationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[123].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCustomersUserinvitationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[124].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsInvitableUserCustomersUserinvitationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[125].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCustomersUserinvitationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[126].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendCustomersUserinvitationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[127].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelWipeDeviceServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[128].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDeviceServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[129].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDeviceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[130].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeviceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[131].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDevicesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[132].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WipeDeviceServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[133].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApproveDevicesDeviceUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[134].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockDevicesDeviceUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[135].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelWipeDevicesDeviceUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[136].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDevicesDeviceUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[137].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDevicesDeviceUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[138].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDevicesDeviceUsersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[139].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LookupDevicesDeviceUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[140].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WipeDevicesDeviceUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[141].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDevicesDeviceUsersClientStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[142].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PatchDevicesDeviceUsersClientStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[143].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[144].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[145].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[146].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSecuritySettingsGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[147].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGroupsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[148].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LookupGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[149].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PatchGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[150].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[151].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSecuritySettingsGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[152].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckTransitiveMembershipGroupsMembershipRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[153].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGroupsMembershipRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[154].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteGroupsMembershipRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[155].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupsMembershipRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[156].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMembershipGraphGroupsMembershipRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[157].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGroupsMembershipsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[158].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LookupGroupsMembershipRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[159].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyMembershipRolesGroupsMembershipRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[160].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchDirectGroupsGroupsMembershipRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[161].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchTransitiveGroupsGroupsMembershipRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[162].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchTransitiveMembershipsGroupsMembershipRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[163].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateInboundSamlSsoProfileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[164].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteInboundSamlSsoProfileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[165].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInboundSamlSsoProfileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[166].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListInboundSamlSsoProfilesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[167].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PatchInboundSamlSsoProfileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[168].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddInboundSamlSsoProfilesIdpCredentialRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[169].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteInboundSamlSsoProfilesIdpCredentialRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[170].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInboundSamlSsoProfilesIdpCredentialRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[171].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListInboundSamlSsoProfilesIdpCredentialsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[172].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateInboundSsoAssignmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[173].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteInboundSsoAssignmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[174].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInboundSsoAssignmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[175].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListInboundSsoAssignmentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[176].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PatchInboundSsoAssignmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[177].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrgUnitsMembershipsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[178].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoveOrgUnitsMembershipRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[179].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPolicyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes[180].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPoliciesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   189,
			NumExtensions: 0,
			NumServices:   13,
		},
		GoTypes:           file_google_apps_cloudidentity_groups_v1beta1_service_proto_goTypes,
		DependencyIndexes: file_google_apps_cloudidentity_groups_v1beta1_service_proto_depIdxs,
		MessageInfos:      file_google_apps_cloudidentity_groups_v1beta1_service_proto_msgTypes,
	}.Build()
	File_google_apps_cloudidentity_groups_v1beta1_service_proto = out.File
	file_google_apps_cloudidentity_groups_v1beta1_service_proto_rawDesc = nil
	file_google_apps_cloudidentity_groups_v1beta1_service_proto_goTypes = nil
	file_google_apps_cloudidentity_groups_v1beta1_service_proto_depIdxs = nil
}
