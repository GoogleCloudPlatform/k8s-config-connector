// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: mockgcp/cloud/apigee/v1/service.proto

package apigeepb

import (
	longrunningpb "cloud.google.com/go/longrunning/autogen/longrunningpb"
	any1 "github.com/golang/protobuf/ptypes/any"
	duration "github.com/golang/protobuf/ptypes/duration"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EdgeConfigstoreBundleBadBundle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Violations []*EdgeConfigstoreBundleBadBundleViolation `protobuf:"bytes,1,rep,name=violations" json:"violations,omitempty"`
}

func (x *EdgeConfigstoreBundleBadBundle) Reset() {
	*x = EdgeConfigstoreBundleBadBundle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EdgeConfigstoreBundleBadBundle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EdgeConfigstoreBundleBadBundle) ProtoMessage() {}

func (x *EdgeConfigstoreBundleBadBundle) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EdgeConfigstoreBundleBadBundle.ProtoReflect.Descriptor instead.
func (*EdgeConfigstoreBundleBadBundle) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{0}
}

func (x *EdgeConfigstoreBundleBadBundle) GetViolations() []*EdgeConfigstoreBundleBadBundleViolation {
	if x != nil {
		return x.Violations
	}
	return nil
}

type EdgeConfigstoreBundleBadBundleViolation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description *string `protobuf:"bytes,1,opt,name=description" json:"description,omitempty"`
	Filename    *string `protobuf:"bytes,2,opt,name=filename" json:"filename,omitempty"`
}

func (x *EdgeConfigstoreBundleBadBundleViolation) Reset() {
	*x = EdgeConfigstoreBundleBadBundleViolation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EdgeConfigstoreBundleBadBundleViolation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EdgeConfigstoreBundleBadBundleViolation) ProtoMessage() {}

func (x *EdgeConfigstoreBundleBadBundleViolation) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EdgeConfigstoreBundleBadBundleViolation.ProtoReflect.Descriptor instead.
func (*EdgeConfigstoreBundleBadBundleViolation) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{1}
}

func (x *EdgeConfigstoreBundleBadBundleViolation) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *EdgeConfigstoreBundleBadBundleViolation) GetFilename() string {
	if x != nil && x.Filename != nil {
		return *x.Filename
	}
	return ""
}

type GoogleApiHttpBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContentType *string     `protobuf:"bytes,1,opt,name=content_type,json=contentType" json:"content_type,omitempty"`
	Data        []byte      `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
	Extensions  []*any1.Any `protobuf:"bytes,3,rep,name=extensions" json:"extensions,omitempty"`
}

func (x *GoogleApiHttpBody) Reset() {
	*x = GoogleApiHttpBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleApiHttpBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleApiHttpBody) ProtoMessage() {}

func (x *GoogleApiHttpBody) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleApiHttpBody.ProtoReflect.Descriptor instead.
func (*GoogleApiHttpBody) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{2}
}

func (x *GoogleApiHttpBody) GetContentType() string {
	if x != nil && x.ContentType != nil {
		return *x.ContentType
	}
	return ""
}

func (x *GoogleApiHttpBody) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GoogleApiHttpBody) GetExtensions() []*any1.Any {
	if x != nil {
		return x.Extensions
	}
	return nil
}

type GoogleCloudApigeeV1APIProductAssociation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Apiproduct *string `protobuf:"bytes,1,opt,name=apiproduct" json:"apiproduct,omitempty"`
	Status     *string `protobuf:"bytes,2,opt,name=status" json:"status,omitempty"`
}

func (x *GoogleCloudApigeeV1APIProductAssociation) Reset() {
	*x = GoogleCloudApigeeV1APIProductAssociation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1APIProductAssociation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1APIProductAssociation) ProtoMessage() {}

func (x *GoogleCloudApigeeV1APIProductAssociation) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1APIProductAssociation.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1APIProductAssociation) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{3}
}

func (x *GoogleCloudApigeeV1APIProductAssociation) GetApiproduct() string {
	if x != nil && x.Apiproduct != nil {
		return *x.Apiproduct
	}
	return ""
}

func (x *GoogleCloudApigeeV1APIProductAssociation) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

type GoogleCloudApigeeV1Access struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Get    *GoogleCloudApigeeV1AccessGet    `protobuf:"bytes,1,opt,name=get,json=Get" json:"get,omitempty"`
	Remove *GoogleCloudApigeeV1AccessRemove `protobuf:"bytes,2,opt,name=remove,json=Remove" json:"remove,omitempty"`
	Set    *GoogleCloudApigeeV1AccessSet    `protobuf:"bytes,3,opt,name=set,json=Set" json:"set,omitempty"`
}

func (x *GoogleCloudApigeeV1Access) Reset() {
	*x = GoogleCloudApigeeV1Access{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1Access) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1Access) ProtoMessage() {}

func (x *GoogleCloudApigeeV1Access) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1Access.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1Access) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{4}
}

func (x *GoogleCloudApigeeV1Access) GetGet() *GoogleCloudApigeeV1AccessGet {
	if x != nil {
		return x.Get
	}
	return nil
}

func (x *GoogleCloudApigeeV1Access) GetRemove() *GoogleCloudApigeeV1AccessRemove {
	if x != nil {
		return x.Remove
	}
	return nil
}

func (x *GoogleCloudApigeeV1Access) GetSet() *GoogleCloudApigeeV1AccessSet {
	if x != nil {
		return x.Set
	}
	return nil
}

type GoogleCloudApigeeV1AccessGet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Value *string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (x *GoogleCloudApigeeV1AccessGet) Reset() {
	*x = GoogleCloudApigeeV1AccessGet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1AccessGet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1AccessGet) ProtoMessage() {}

func (x *GoogleCloudApigeeV1AccessGet) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1AccessGet.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1AccessGet) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{5}
}

func (x *GoogleCloudApigeeV1AccessGet) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GoogleCloudApigeeV1AccessGet) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

type GoogleCloudApigeeV1AccessLoggingConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled *bool   `protobuf:"varint,1,opt,name=enabled" json:"enabled,omitempty"`
	Filter  *string `protobuf:"bytes,2,opt,name=filter" json:"filter,omitempty"`
}

func (x *GoogleCloudApigeeV1AccessLoggingConfig) Reset() {
	*x = GoogleCloudApigeeV1AccessLoggingConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1AccessLoggingConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1AccessLoggingConfig) ProtoMessage() {}

func (x *GoogleCloudApigeeV1AccessLoggingConfig) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1AccessLoggingConfig.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1AccessLoggingConfig) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{6}
}

func (x *GoogleCloudApigeeV1AccessLoggingConfig) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

func (x *GoogleCloudApigeeV1AccessLoggingConfig) GetFilter() string {
	if x != nil && x.Filter != nil {
		return *x.Filter
	}
	return ""
}

type GoogleCloudApigeeV1AccessRemove struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Success *bool   `protobuf:"varint,2,opt,name=success" json:"success,omitempty"`
}

func (x *GoogleCloudApigeeV1AccessRemove) Reset() {
	*x = GoogleCloudApigeeV1AccessRemove{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1AccessRemove) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1AccessRemove) ProtoMessage() {}

func (x *GoogleCloudApigeeV1AccessRemove) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1AccessRemove.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1AccessRemove) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{7}
}

func (x *GoogleCloudApigeeV1AccessRemove) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GoogleCloudApigeeV1AccessRemove) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

type GoogleCloudApigeeV1AccessSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Success *bool   `protobuf:"varint,2,opt,name=success" json:"success,omitempty"`
	Value   *string `protobuf:"bytes,3,opt,name=value" json:"value,omitempty"`
}

func (x *GoogleCloudApigeeV1AccessSet) Reset() {
	*x = GoogleCloudApigeeV1AccessSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1AccessSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1AccessSet) ProtoMessage() {}

func (x *GoogleCloudApigeeV1AccessSet) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1AccessSet.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1AccessSet) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{8}
}

func (x *GoogleCloudApigeeV1AccessSet) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GoogleCloudApigeeV1AccessSet) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *GoogleCloudApigeeV1AccessSet) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

type GoogleCloudApigeeV1ActivateNatAddressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GoogleCloudApigeeV1ActivateNatAddressRequest) Reset() {
	*x = GoogleCloudApigeeV1ActivateNatAddressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1ActivateNatAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1ActivateNatAddressRequest) ProtoMessage() {}

func (x *GoogleCloudApigeeV1ActivateNatAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1ActivateNatAddressRequest.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1ActivateNatAddressRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{9}
}

type GoogleCloudApigeeV1AddonsConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdvancedApiOpsConfig     *GoogleCloudApigeeV1AdvancedApiOpsConfig     `protobuf:"bytes,1,opt,name=advanced_api_ops_config,json=advancedApiOpsConfig" json:"advanced_api_ops_config,omitempty"`
	AnalyticsConfig          *GoogleCloudApigeeV1AnalyticsConfig          `protobuf:"bytes,2,opt,name=analytics_config,json=analyticsConfig" json:"analytics_config,omitempty"`
	ApiSecurityConfig        *GoogleCloudApigeeV1ApiSecurityConfig        `protobuf:"bytes,3,opt,name=api_security_config,json=apiSecurityConfig" json:"api_security_config,omitempty"`
	ConnectorsPlatformConfig *GoogleCloudApigeeV1ConnectorsPlatformConfig `protobuf:"bytes,4,opt,name=connectors_platform_config,json=connectorsPlatformConfig" json:"connectors_platform_config,omitempty"`
	IntegrationConfig        *GoogleCloudApigeeV1IntegrationConfig        `protobuf:"bytes,5,opt,name=integration_config,json=integrationConfig" json:"integration_config,omitempty"`
	MonetizationConfig       *GoogleCloudApigeeV1MonetizationConfig       `protobuf:"bytes,6,opt,name=monetization_config,json=monetizationConfig" json:"monetization_config,omitempty"`
}

func (x *GoogleCloudApigeeV1AddonsConfig) Reset() {
	*x = GoogleCloudApigeeV1AddonsConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1AddonsConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1AddonsConfig) ProtoMessage() {}

func (x *GoogleCloudApigeeV1AddonsConfig) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1AddonsConfig.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1AddonsConfig) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{10}
}

func (x *GoogleCloudApigeeV1AddonsConfig) GetAdvancedApiOpsConfig() *GoogleCloudApigeeV1AdvancedApiOpsConfig {
	if x != nil {
		return x.AdvancedApiOpsConfig
	}
	return nil
}

func (x *GoogleCloudApigeeV1AddonsConfig) GetAnalyticsConfig() *GoogleCloudApigeeV1AnalyticsConfig {
	if x != nil {
		return x.AnalyticsConfig
	}
	return nil
}

func (x *GoogleCloudApigeeV1AddonsConfig) GetApiSecurityConfig() *GoogleCloudApigeeV1ApiSecurityConfig {
	if x != nil {
		return x.ApiSecurityConfig
	}
	return nil
}

func (x *GoogleCloudApigeeV1AddonsConfig) GetConnectorsPlatformConfig() *GoogleCloudApigeeV1ConnectorsPlatformConfig {
	if x != nil {
		return x.ConnectorsPlatformConfig
	}
	return nil
}

func (x *GoogleCloudApigeeV1AddonsConfig) GetIntegrationConfig() *GoogleCloudApigeeV1IntegrationConfig {
	if x != nil {
		return x.IntegrationConfig
	}
	return nil
}

func (x *GoogleCloudApigeeV1AddonsConfig) GetMonetizationConfig() *GoogleCloudApigeeV1MonetizationConfig {
	if x != nil {
		return x.MonetizationConfig
	}
	return nil
}

type GoogleCloudApigeeV1AdjustDeveloperBalanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Adjustment *GoogleTypeMoney `protobuf:"bytes,1,opt,name=adjustment" json:"adjustment,omitempty"`
}

func (x *GoogleCloudApigeeV1AdjustDeveloperBalanceRequest) Reset() {
	*x = GoogleCloudApigeeV1AdjustDeveloperBalanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1AdjustDeveloperBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1AdjustDeveloperBalanceRequest) ProtoMessage() {}

func (x *GoogleCloudApigeeV1AdjustDeveloperBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1AdjustDeveloperBalanceRequest.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1AdjustDeveloperBalanceRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{11}
}

func (x *GoogleCloudApigeeV1AdjustDeveloperBalanceRequest) GetAdjustment() *GoogleTypeMoney {
	if x != nil {
		return x.Adjustment
	}
	return nil
}

type GoogleCloudApigeeV1AdvancedApiOpsConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled *bool `protobuf:"varint,1,opt,name=enabled" json:"enabled,omitempty"`
}

func (x *GoogleCloudApigeeV1AdvancedApiOpsConfig) Reset() {
	*x = GoogleCloudApigeeV1AdvancedApiOpsConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1AdvancedApiOpsConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1AdvancedApiOpsConfig) ProtoMessage() {}

func (x *GoogleCloudApigeeV1AdvancedApiOpsConfig) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1AdvancedApiOpsConfig.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1AdvancedApiOpsConfig) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{12}
}

func (x *GoogleCloudApigeeV1AdvancedApiOpsConfig) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

type GoogleCloudApigeeV1Alias struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Alias     *string                         `protobuf:"bytes,1,opt,name=alias" json:"alias,omitempty"`
	CertsInfo *GoogleCloudApigeeV1Certificate `protobuf:"bytes,2,opt,name=certs_info,json=certsInfo" json:"certs_info,omitempty"`
	Type      *string                         `protobuf:"bytes,3,opt,name=type" json:"type,omitempty"`
}

func (x *GoogleCloudApigeeV1Alias) Reset() {
	*x = GoogleCloudApigeeV1Alias{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1Alias) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1Alias) ProtoMessage() {}

func (x *GoogleCloudApigeeV1Alias) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1Alias.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1Alias) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{13}
}

func (x *GoogleCloudApigeeV1Alias) GetAlias() string {
	if x != nil && x.Alias != nil {
		return *x.Alias
	}
	return ""
}

func (x *GoogleCloudApigeeV1Alias) GetCertsInfo() *GoogleCloudApigeeV1Certificate {
	if x != nil {
		return x.CertsInfo
	}
	return nil
}

func (x *GoogleCloudApigeeV1Alias) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

type GoogleCloudApigeeV1AliasRevisionConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location *string `protobuf:"bytes,1,opt,name=location" json:"location,omitempty"`
	Name     *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Type     *string `protobuf:"bytes,3,opt,name=type" json:"type,omitempty"`
}

func (x *GoogleCloudApigeeV1AliasRevisionConfig) Reset() {
	*x = GoogleCloudApigeeV1AliasRevisionConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1AliasRevisionConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1AliasRevisionConfig) ProtoMessage() {}

func (x *GoogleCloudApigeeV1AliasRevisionConfig) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1AliasRevisionConfig.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1AliasRevisionConfig) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{14}
}

func (x *GoogleCloudApigeeV1AliasRevisionConfig) GetLocation() string {
	if x != nil && x.Location != nil {
		return *x.Location
	}
	return ""
}

func (x *GoogleCloudApigeeV1AliasRevisionConfig) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GoogleCloudApigeeV1AliasRevisionConfig) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

type GoogleCloudApigeeV1AnalyticsConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled          *bool                `protobuf:"varint,1,opt,name=enabled" json:"enabled,omitempty"`
	ExpireTimeMillis *int64               `protobuf:"varint,2,opt,name=expire_time_millis,json=expireTimeMillis" json:"expire_time_millis,omitempty"`
	State            *string              `protobuf:"bytes,3,opt,name=state" json:"state,omitempty"`
	UpdateTime       *timestamp.Timestamp `protobuf:"bytes,4,opt,name=update_time,json=updateTime" json:"update_time,omitempty"`
}

func (x *GoogleCloudApigeeV1AnalyticsConfig) Reset() {
	*x = GoogleCloudApigeeV1AnalyticsConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1AnalyticsConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1AnalyticsConfig) ProtoMessage() {}

func (x *GoogleCloudApigeeV1AnalyticsConfig) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1AnalyticsConfig.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1AnalyticsConfig) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{15}
}

func (x *GoogleCloudApigeeV1AnalyticsConfig) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

func (x *GoogleCloudApigeeV1AnalyticsConfig) GetExpireTimeMillis() int64 {
	if x != nil && x.ExpireTimeMillis != nil {
		return *x.ExpireTimeMillis
	}
	return 0
}

func (x *GoogleCloudApigeeV1AnalyticsConfig) GetState() string {
	if x != nil && x.State != nil {
		return *x.State
	}
	return ""
}

func (x *GoogleCloudApigeeV1AnalyticsConfig) GetUpdateTime() *timestamp.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

type GoogleCloudApigeeV1ApiCategory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name       *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	SiteId     *string `protobuf:"bytes,3,opt,name=site_id,json=siteId" json:"site_id,omitempty"`
	UpdateTime *int64  `protobuf:"varint,4,opt,name=update_time,json=updateTime" json:"update_time,omitempty"`
}

func (x *GoogleCloudApigeeV1ApiCategory) Reset() {
	*x = GoogleCloudApigeeV1ApiCategory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1ApiCategory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1ApiCategory) ProtoMessage() {}

func (x *GoogleCloudApigeeV1ApiCategory) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1ApiCategory.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1ApiCategory) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{16}
}

func (x *GoogleCloudApigeeV1ApiCategory) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *GoogleCloudApigeeV1ApiCategory) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GoogleCloudApigeeV1ApiCategory) GetSiteId() string {
	if x != nil && x.SiteId != nil {
		return *x.SiteId
	}
	return ""
}

func (x *GoogleCloudApigeeV1ApiCategory) GetUpdateTime() int64 {
	if x != nil && x.UpdateTime != nil {
		return *x.UpdateTime
	}
	return 0
}

type GoogleCloudApigeeV1ApiCategoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data      *GoogleCloudApigeeV1ApiCategory `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	ErrorCode *string                         `protobuf:"bytes,2,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
	Message   *string                         `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	RequestId *string                         `protobuf:"bytes,4,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
	Status    *string                         `protobuf:"bytes,5,opt,name=status" json:"status,omitempty"`
}

func (x *GoogleCloudApigeeV1ApiCategoryResponse) Reset() {
	*x = GoogleCloudApigeeV1ApiCategoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1ApiCategoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1ApiCategoryResponse) ProtoMessage() {}

func (x *GoogleCloudApigeeV1ApiCategoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1ApiCategoryResponse.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1ApiCategoryResponse) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{17}
}

func (x *GoogleCloudApigeeV1ApiCategoryResponse) GetData() *GoogleCloudApigeeV1ApiCategory {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GoogleCloudApigeeV1ApiCategoryResponse) GetErrorCode() string {
	if x != nil && x.ErrorCode != nil {
		return *x.ErrorCode
	}
	return ""
}

func (x *GoogleCloudApigeeV1ApiCategoryResponse) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

func (x *GoogleCloudApigeeV1ApiCategoryResponse) GetRequestId() string {
	if x != nil && x.RequestId != nil {
		return *x.RequestId
	}
	return ""
}

func (x *GoogleCloudApigeeV1ApiCategoryResponse) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

type GoogleCloudApigeeV1ApiDoc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnonAllowed              *bool    `protobuf:"varint,1,opt,name=anon_allowed,json=anonAllowed" json:"anon_allowed,omitempty"`
	ApiProductName           *string  `protobuf:"bytes,2,opt,name=api_product_name,json=apiProductName" json:"api_product_name,omitempty"`
	CategoryIds              []string `protobuf:"bytes,3,rep,name=category_ids,json=categoryIds" json:"category_ids,omitempty"`
	Description              *string  `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	EdgeAPIProductName       *string  `protobuf:"bytes,5,opt,name=edge_a_p_i_product_name,json=edgeAPIProductName" json:"edge_a_p_i_product_name,omitempty"`
	GraphqlEndpointUrl       *string  `protobuf:"bytes,6,opt,name=graphql_endpoint_url,json=graphqlEndpointUrl" json:"graphql_endpoint_url,omitempty"`
	GraphqlSchema            *string  `protobuf:"bytes,7,opt,name=graphql_schema,json=graphqlSchema" json:"graphql_schema,omitempty"`
	GraphqlSchemaDisplayName *string  `protobuf:"bytes,8,opt,name=graphql_schema_display_name,json=graphqlSchemaDisplayName" json:"graphql_schema_display_name,omitempty"`
	Id                       *int64   `protobuf:"varint,9,opt,name=id" json:"id,omitempty"`
	ImageUrl                 *string  `protobuf:"bytes,10,opt,name=image_url,json=imageUrl" json:"image_url,omitempty"`
	Modified                 *int64   `protobuf:"varint,11,opt,name=modified" json:"modified,omitempty"`
	Published                *bool    `protobuf:"varint,12,opt,name=published" json:"published,omitempty"`
	RequireCallbackUrl       *bool    `protobuf:"varint,13,opt,name=require_callback_url,json=requireCallbackUrl" json:"require_callback_url,omitempty"`
	SiteId                   *string  `protobuf:"bytes,14,opt,name=site_id,json=siteId" json:"site_id,omitempty"`
	SpecId                   *string  `protobuf:"bytes,15,opt,name=spec_id,json=specId" json:"spec_id,omitempty"`
	Title                    *string  `protobuf:"bytes,16,opt,name=title" json:"title,omitempty"`
	Visibility               *bool    `protobuf:"varint,17,opt,name=visibility" json:"visibility,omitempty"`
}

func (x *GoogleCloudApigeeV1ApiDoc) Reset() {
	*x = GoogleCloudApigeeV1ApiDoc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1ApiDoc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1ApiDoc) ProtoMessage() {}

func (x *GoogleCloudApigeeV1ApiDoc) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1ApiDoc.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1ApiDoc) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{18}
}

func (x *GoogleCloudApigeeV1ApiDoc) GetAnonAllowed() bool {
	if x != nil && x.AnonAllowed != nil {
		return *x.AnonAllowed
	}
	return false
}

func (x *GoogleCloudApigeeV1ApiDoc) GetApiProductName() string {
	if x != nil && x.ApiProductName != nil {
		return *x.ApiProductName
	}
	return ""
}

func (x *GoogleCloudApigeeV1ApiDoc) GetCategoryIds() []string {
	if x != nil {
		return x.CategoryIds
	}
	return nil
}

func (x *GoogleCloudApigeeV1ApiDoc) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *GoogleCloudApigeeV1ApiDoc) GetEdgeAPIProductName() string {
	if x != nil && x.EdgeAPIProductName != nil {
		return *x.EdgeAPIProductName
	}
	return ""
}

func (x *GoogleCloudApigeeV1ApiDoc) GetGraphqlEndpointUrl() string {
	if x != nil && x.GraphqlEndpointUrl != nil {
		return *x.GraphqlEndpointUrl
	}
	return ""
}

func (x *GoogleCloudApigeeV1ApiDoc) GetGraphqlSchema() string {
	if x != nil && x.GraphqlSchema != nil {
		return *x.GraphqlSchema
	}
	return ""
}

func (x *GoogleCloudApigeeV1ApiDoc) GetGraphqlSchemaDisplayName() string {
	if x != nil && x.GraphqlSchemaDisplayName != nil {
		return *x.GraphqlSchemaDisplayName
	}
	return ""
}

func (x *GoogleCloudApigeeV1ApiDoc) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *GoogleCloudApigeeV1ApiDoc) GetImageUrl() string {
	if x != nil && x.ImageUrl != nil {
		return *x.ImageUrl
	}
	return ""
}

func (x *GoogleCloudApigeeV1ApiDoc) GetModified() int64 {
	if x != nil && x.Modified != nil {
		return *x.Modified
	}
	return 0
}

func (x *GoogleCloudApigeeV1ApiDoc) GetPublished() bool {
	if x != nil && x.Published != nil {
		return *x.Published
	}
	return false
}

func (x *GoogleCloudApigeeV1ApiDoc) GetRequireCallbackUrl() bool {
	if x != nil && x.RequireCallbackUrl != nil {
		return *x.RequireCallbackUrl
	}
	return false
}

func (x *GoogleCloudApigeeV1ApiDoc) GetSiteId() string {
	if x != nil && x.SiteId != nil {
		return *x.SiteId
	}
	return ""
}

func (x *GoogleCloudApigeeV1ApiDoc) GetSpecId() string {
	if x != nil && x.SpecId != nil {
		return *x.SpecId
	}
	return ""
}

func (x *GoogleCloudApigeeV1ApiDoc) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *GoogleCloudApigeeV1ApiDoc) GetVisibility() bool {
	if x != nil && x.Visibility != nil {
		return *x.Visibility
	}
	return false
}

type GoogleCloudApigeeV1ApiDocDocumentation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GraphqlDocumentation *GoogleCloudApigeeV1GraphqlDocumentation `protobuf:"bytes,1,opt,name=graphql_documentation,json=graphqlDocumentation" json:"graphql_documentation,omitempty"`
	OasDocumentation     *GoogleCloudApigeeV1OASDocumentation     `protobuf:"bytes,2,opt,name=oas_documentation,json=oasDocumentation" json:"oas_documentation,omitempty"`
}

func (x *GoogleCloudApigeeV1ApiDocDocumentation) Reset() {
	*x = GoogleCloudApigeeV1ApiDocDocumentation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1ApiDocDocumentation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1ApiDocDocumentation) ProtoMessage() {}

func (x *GoogleCloudApigeeV1ApiDocDocumentation) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1ApiDocDocumentation.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1ApiDocDocumentation) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{19}
}

func (x *GoogleCloudApigeeV1ApiDocDocumentation) GetGraphqlDocumentation() *GoogleCloudApigeeV1GraphqlDocumentation {
	if x != nil {
		return x.GraphqlDocumentation
	}
	return nil
}

func (x *GoogleCloudApigeeV1ApiDocDocumentation) GetOasDocumentation() *GoogleCloudApigeeV1OASDocumentation {
	if x != nil {
		return x.OasDocumentation
	}
	return nil
}

type GoogleCloudApigeeV1ApiDocDocumentationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data      *GoogleCloudApigeeV1ApiDocDocumentation `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	ErrorCode *string                                 `protobuf:"bytes,2,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
	Message   *string                                 `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	RequestId *string                                 `protobuf:"bytes,4,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
	Status    *string                                 `protobuf:"bytes,5,opt,name=status" json:"status,omitempty"`
}

func (x *GoogleCloudApigeeV1ApiDocDocumentationResponse) Reset() {
	*x = GoogleCloudApigeeV1ApiDocDocumentationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1ApiDocDocumentationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1ApiDocDocumentationResponse) ProtoMessage() {}

func (x *GoogleCloudApigeeV1ApiDocDocumentationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1ApiDocDocumentationResponse.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1ApiDocDocumentationResponse) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{20}
}

func (x *GoogleCloudApigeeV1ApiDocDocumentationResponse) GetData() *GoogleCloudApigeeV1ApiDocDocumentation {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GoogleCloudApigeeV1ApiDocDocumentationResponse) GetErrorCode() string {
	if x != nil && x.ErrorCode != nil {
		return *x.ErrorCode
	}
	return ""
}

func (x *GoogleCloudApigeeV1ApiDocDocumentationResponse) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

func (x *GoogleCloudApigeeV1ApiDocDocumentationResponse) GetRequestId() string {
	if x != nil && x.RequestId != nil {
		return *x.RequestId
	}
	return ""
}

func (x *GoogleCloudApigeeV1ApiDocDocumentationResponse) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

type GoogleCloudApigeeV1ApiDocResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data      *GoogleCloudApigeeV1ApiDoc `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	ErrorCode *string                    `protobuf:"bytes,2,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
	Message   *string                    `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	RequestId *string                    `protobuf:"bytes,4,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
	Status    *string                    `protobuf:"bytes,5,opt,name=status" json:"status,omitempty"`
}

func (x *GoogleCloudApigeeV1ApiDocResponse) Reset() {
	*x = GoogleCloudApigeeV1ApiDocResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1ApiDocResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1ApiDocResponse) ProtoMessage() {}

func (x *GoogleCloudApigeeV1ApiDocResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1ApiDocResponse.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1ApiDocResponse) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{21}
}

func (x *GoogleCloudApigeeV1ApiDocResponse) GetData() *GoogleCloudApigeeV1ApiDoc {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GoogleCloudApigeeV1ApiDocResponse) GetErrorCode() string {
	if x != nil && x.ErrorCode != nil {
		return *x.ErrorCode
	}
	return ""
}

func (x *GoogleCloudApigeeV1ApiDocResponse) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

func (x *GoogleCloudApigeeV1ApiDocResponse) GetRequestId() string {
	if x != nil && x.RequestId != nil {
		return *x.RequestId
	}
	return ""
}

func (x *GoogleCloudApigeeV1ApiDocResponse) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

type GoogleCloudApigeeV1ApiProduct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiResources          []string                                  `protobuf:"bytes,1,rep,name=api_resources,json=apiResources" json:"api_resources,omitempty"`
	ApprovalType          *string                                   `protobuf:"bytes,2,opt,name=approval_type,json=approvalType" json:"approval_type,omitempty"`
	Attributes            []*GoogleCloudApigeeV1Attribute           `protobuf:"bytes,3,rep,name=attributes" json:"attributes,omitempty"`
	CreatedAt             *int64                                    `protobuf:"varint,4,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	Description           *string                                   `protobuf:"bytes,5,opt,name=description" json:"description,omitempty"`
	DisplayName           *string                                   `protobuf:"bytes,6,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	Environments          []string                                  `protobuf:"bytes,7,rep,name=environments" json:"environments,omitempty"`
	GraphqlOperationGroup *GoogleCloudApigeeV1GraphQLOperationGroup `protobuf:"bytes,8,opt,name=graphql_operation_group,json=graphqlOperationGroup" json:"graphql_operation_group,omitempty"`
	GrpcOperationGroup    *GoogleCloudApigeeV1GrpcOperationGroup    `protobuf:"bytes,9,opt,name=grpc_operation_group,json=grpcOperationGroup" json:"grpc_operation_group,omitempty"`
	LastModifiedAt        *int64                                    `protobuf:"varint,10,opt,name=last_modified_at,json=lastModifiedAt" json:"last_modified_at,omitempty"`
	Name                  *string                                   `protobuf:"bytes,11,opt,name=name" json:"name,omitempty"`
	OperationGroup        *GoogleCloudApigeeV1OperationGroup        `protobuf:"bytes,12,opt,name=operation_group,json=operationGroup" json:"operation_group,omitempty"`
	Proxies               []string                                  `protobuf:"bytes,13,rep,name=proxies" json:"proxies,omitempty"`
	Quota                 *string                                   `protobuf:"bytes,14,opt,name=quota" json:"quota,omitempty"`
	QuotaCounterScope     *string                                   `protobuf:"bytes,15,opt,name=quota_counter_scope,json=quotaCounterScope" json:"quota_counter_scope,omitempty"`
	QuotaInterval         *string                                   `protobuf:"bytes,16,opt,name=quota_interval,json=quotaInterval" json:"quota_interval,omitempty"`
	QuotaTimeUnit         *string                                   `protobuf:"bytes,17,opt,name=quota_time_unit,json=quotaTimeUnit" json:"quota_time_unit,omitempty"`
	Scopes                []string                                  `protobuf:"bytes,18,rep,name=scopes" json:"scopes,omitempty"`
}

func (x *GoogleCloudApigeeV1ApiProduct) Reset() {
	*x = GoogleCloudApigeeV1ApiProduct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1ApiProduct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1ApiProduct) ProtoMessage() {}

func (x *GoogleCloudApigeeV1ApiProduct) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1ApiProduct.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1ApiProduct) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{22}
}

func (x *GoogleCloudApigeeV1ApiProduct) GetApiResources() []string {
	if x != nil {
		return x.ApiResources
	}
	return nil
}

func (x *GoogleCloudApigeeV1ApiProduct) GetApprovalType() string {
	if x != nil && x.ApprovalType != nil {
		return *x.ApprovalType
	}
	return ""
}

func (x *GoogleCloudApigeeV1ApiProduct) GetAttributes() []*GoogleCloudApigeeV1Attribute {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *GoogleCloudApigeeV1ApiProduct) GetCreatedAt() int64 {
	if x != nil && x.CreatedAt != nil {
		return *x.CreatedAt
	}
	return 0
}

func (x *GoogleCloudApigeeV1ApiProduct) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *GoogleCloudApigeeV1ApiProduct) GetDisplayName() string {
	if x != nil && x.DisplayName != nil {
		return *x.DisplayName
	}
	return ""
}

func (x *GoogleCloudApigeeV1ApiProduct) GetEnvironments() []string {
	if x != nil {
		return x.Environments
	}
	return nil
}

func (x *GoogleCloudApigeeV1ApiProduct) GetGraphqlOperationGroup() *GoogleCloudApigeeV1GraphQLOperationGroup {
	if x != nil {
		return x.GraphqlOperationGroup
	}
	return nil
}

func (x *GoogleCloudApigeeV1ApiProduct) GetGrpcOperationGroup() *GoogleCloudApigeeV1GrpcOperationGroup {
	if x != nil {
		return x.GrpcOperationGroup
	}
	return nil
}

func (x *GoogleCloudApigeeV1ApiProduct) GetLastModifiedAt() int64 {
	if x != nil && x.LastModifiedAt != nil {
		return *x.LastModifiedAt
	}
	return 0
}

func (x *GoogleCloudApigeeV1ApiProduct) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GoogleCloudApigeeV1ApiProduct) GetOperationGroup() *GoogleCloudApigeeV1OperationGroup {
	if x != nil {
		return x.OperationGroup
	}
	return nil
}

func (x *GoogleCloudApigeeV1ApiProduct) GetProxies() []string {
	if x != nil {
		return x.Proxies
	}
	return nil
}

func (x *GoogleCloudApigeeV1ApiProduct) GetQuota() string {
	if x != nil && x.Quota != nil {
		return *x.Quota
	}
	return ""
}

func (x *GoogleCloudApigeeV1ApiProduct) GetQuotaCounterScope() string {
	if x != nil && x.QuotaCounterScope != nil {
		return *x.QuotaCounterScope
	}
	return ""
}

func (x *GoogleCloudApigeeV1ApiProduct) GetQuotaInterval() string {
	if x != nil && x.QuotaInterval != nil {
		return *x.QuotaInterval
	}
	return ""
}

func (x *GoogleCloudApigeeV1ApiProduct) GetQuotaTimeUnit() string {
	if x != nil && x.QuotaTimeUnit != nil {
		return *x.QuotaTimeUnit
	}
	return ""
}

func (x *GoogleCloudApigeeV1ApiProduct) GetScopes() []string {
	if x != nil {
		return x.Scopes
	}
	return nil
}

type GoogleCloudApigeeV1ApiProductRef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Apiproduct *string `protobuf:"bytes,1,opt,name=apiproduct" json:"apiproduct,omitempty"`
	Status     *string `protobuf:"bytes,2,opt,name=status" json:"status,omitempty"`
}

func (x *GoogleCloudApigeeV1ApiProductRef) Reset() {
	*x = GoogleCloudApigeeV1ApiProductRef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1ApiProductRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1ApiProductRef) ProtoMessage() {}

func (x *GoogleCloudApigeeV1ApiProductRef) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1ApiProductRef.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1ApiProductRef) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{23}
}

func (x *GoogleCloudApigeeV1ApiProductRef) GetApiproduct() string {
	if x != nil && x.Apiproduct != nil {
		return *x.Apiproduct
	}
	return ""
}

func (x *GoogleCloudApigeeV1ApiProductRef) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

type GoogleCloudApigeeV1ApiProxy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiProxyType     *string                            `protobuf:"bytes,1,opt,name=api_proxy_type,json=apiProxyType" json:"api_proxy_type,omitempty"`
	Labels           map[string]string                  `protobuf:"bytes,2,rep,name=labels" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	LatestRevisionId *string                            `protobuf:"bytes,3,opt,name=latest_revision_id,json=latestRevisionId" json:"latest_revision_id,omitempty"`
	MetaData         *GoogleCloudApigeeV1EntityMetadata `protobuf:"bytes,4,opt,name=meta_data,json=metaData" json:"meta_data,omitempty"`
	Name             *string                            `protobuf:"bytes,5,opt,name=name" json:"name,omitempty"`
	ReadOnly         *bool                              `protobuf:"varint,6,opt,name=read_only,json=readOnly" json:"read_only,omitempty"`
	Revision         []string                           `protobuf:"bytes,7,rep,name=revision" json:"revision,omitempty"`
}

func (x *GoogleCloudApigeeV1ApiProxy) Reset() {
	*x = GoogleCloudApigeeV1ApiProxy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1ApiProxy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1ApiProxy) ProtoMessage() {}

func (x *GoogleCloudApigeeV1ApiProxy) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1ApiProxy.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1ApiProxy) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{24}
}

func (x *GoogleCloudApigeeV1ApiProxy) GetApiProxyType() string {
	if x != nil && x.ApiProxyType != nil {
		return *x.ApiProxyType
	}
	return ""
}

func (x *GoogleCloudApigeeV1ApiProxy) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *GoogleCloudApigeeV1ApiProxy) GetLatestRevisionId() string {
	if x != nil && x.LatestRevisionId != nil {
		return *x.LatestRevisionId
	}
	return ""
}

func (x *GoogleCloudApigeeV1ApiProxy) GetMetaData() *GoogleCloudApigeeV1EntityMetadata {
	if x != nil {
		return x.MetaData
	}
	return nil
}

func (x *GoogleCloudApigeeV1ApiProxy) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GoogleCloudApigeeV1ApiProxy) GetReadOnly() bool {
	if x != nil && x.ReadOnly != nil {
		return *x.ReadOnly
	}
	return false
}

func (x *GoogleCloudApigeeV1ApiProxy) GetRevision() []string {
	if x != nil {
		return x.Revision
	}
	return nil
}

type GoogleCloudApigeeV1ApiProxyRevision struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Archive                    *string                           `protobuf:"bytes,1,opt,name=archive" json:"archive,omitempty"`
	Basepaths                  []string                          `protobuf:"bytes,2,rep,name=basepaths" json:"basepaths,omitempty"`
	ConfigurationVersion       *GoogleCloudApigeeV1ConfigVersion `protobuf:"bytes,3,opt,name=configuration_version,json=configurationVersion" json:"configuration_version,omitempty"`
	ContextInfo                *string                           `protobuf:"bytes,4,opt,name=context_info,json=contextInfo" json:"context_info,omitempty"`
	CreatedAt                  *int64                            `protobuf:"varint,5,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	Description                *string                           `protobuf:"bytes,6,opt,name=description" json:"description,omitempty"`
	DisplayName                *string                           `protobuf:"bytes,7,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	EntityMetaDataAsProperties map[string]string                 `protobuf:"bytes,8,rep,name=entity_meta_data_as_properties,json=entityMetaDataAsProperties" json:"entity_meta_data_as_properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	HasExtensiblePolicy        *bool                             `protobuf:"varint,9,opt,name=has_extensible_policy,json=hasExtensiblePolicy" json:"has_extensible_policy,omitempty"`
	IntegrationEndpoints       []string                          `protobuf:"bytes,10,rep,name=integration_endpoints,json=integrationEndpoints" json:"integration_endpoints,omitempty"`
	LastModifiedAt             *int64                            `protobuf:"varint,11,opt,name=last_modified_at,json=lastModifiedAt" json:"last_modified_at,omitempty"`
	Name                       *string                           `protobuf:"bytes,12,opt,name=name" json:"name,omitempty"`
	Policies                   []string                          `protobuf:"bytes,13,rep,name=policies" json:"policies,omitempty"`
	Proxies                    []string                          `protobuf:"bytes,14,rep,name=proxies" json:"proxies,omitempty"`
	ProxyEndpoints             []string                          `protobuf:"bytes,15,rep,name=proxy_endpoints,json=proxyEndpoints" json:"proxy_endpoints,omitempty"`
	ResourceFiles              *GoogleCloudApigeeV1ResourceFiles `protobuf:"bytes,16,opt,name=resource_files,json=resourceFiles" json:"resource_files,omitempty"`
	Resources                  []string                          `protobuf:"bytes,17,rep,name=resources" json:"resources,omitempty"`
	Revision                   *string                           `protobuf:"bytes,18,opt,name=revision" json:"revision,omitempty"`
	SharedFlows                []string                          `protobuf:"bytes,19,rep,name=shared_flows,json=sharedFlows" json:"shared_flows,omitempty"`
	Spec                       *string                           `protobuf:"bytes,20,opt,name=spec" json:"spec,omitempty"`
	TargetEndpoints            []string                          `protobuf:"bytes,21,rep,name=target_endpoints,json=targetEndpoints" json:"target_endpoints,omitempty"`
	TargetServers              []string                          `protobuf:"bytes,22,rep,name=target_servers,json=targetServers" json:"target_servers,omitempty"`
	Targets                    []string                          `protobuf:"bytes,23,rep,name=targets" json:"targets,omitempty"`
	Teams                      []string                          `protobuf:"bytes,24,rep,name=teams" json:"teams,omitempty"`
	Type                       *string                           `protobuf:"bytes,25,opt,name=type" json:"type,omitempty"`
}

func (x *GoogleCloudApigeeV1ApiProxyRevision) Reset() {
	*x = GoogleCloudApigeeV1ApiProxyRevision{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1ApiProxyRevision) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1ApiProxyRevision) ProtoMessage() {}

func (x *GoogleCloudApigeeV1ApiProxyRevision) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1ApiProxyRevision.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1ApiProxyRevision) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{25}
}

func (x *GoogleCloudApigeeV1ApiProxyRevision) GetArchive() string {
	if x != nil && x.Archive != nil {
		return *x.Archive
	}
	return ""
}

func (x *GoogleCloudApigeeV1ApiProxyRevision) GetBasepaths() []string {
	if x != nil {
		return x.Basepaths
	}
	return nil
}

func (x *GoogleCloudApigeeV1ApiProxyRevision) GetConfigurationVersion() *GoogleCloudApigeeV1ConfigVersion {
	if x != nil {
		return x.ConfigurationVersion
	}
	return nil
}

func (x *GoogleCloudApigeeV1ApiProxyRevision) GetContextInfo() string {
	if x != nil && x.ContextInfo != nil {
		return *x.ContextInfo
	}
	return ""
}

func (x *GoogleCloudApigeeV1ApiProxyRevision) GetCreatedAt() int64 {
	if x != nil && x.CreatedAt != nil {
		return *x.CreatedAt
	}
	return 0
}

func (x *GoogleCloudApigeeV1ApiProxyRevision) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *GoogleCloudApigeeV1ApiProxyRevision) GetDisplayName() string {
	if x != nil && x.DisplayName != nil {
		return *x.DisplayName
	}
	return ""
}

func (x *GoogleCloudApigeeV1ApiProxyRevision) GetEntityMetaDataAsProperties() map[string]string {
	if x != nil {
		return x.EntityMetaDataAsProperties
	}
	return nil
}

func (x *GoogleCloudApigeeV1ApiProxyRevision) GetHasExtensiblePolicy() bool {
	if x != nil && x.HasExtensiblePolicy != nil {
		return *x.HasExtensiblePolicy
	}
	return false
}

func (x *GoogleCloudApigeeV1ApiProxyRevision) GetIntegrationEndpoints() []string {
	if x != nil {
		return x.IntegrationEndpoints
	}
	return nil
}

func (x *GoogleCloudApigeeV1ApiProxyRevision) GetLastModifiedAt() int64 {
	if x != nil && x.LastModifiedAt != nil {
		return *x.LastModifiedAt
	}
	return 0
}

func (x *GoogleCloudApigeeV1ApiProxyRevision) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GoogleCloudApigeeV1ApiProxyRevision) GetPolicies() []string {
	if x != nil {
		return x.Policies
	}
	return nil
}

func (x *GoogleCloudApigeeV1ApiProxyRevision) GetProxies() []string {
	if x != nil {
		return x.Proxies
	}
	return nil
}

func (x *GoogleCloudApigeeV1ApiProxyRevision) GetProxyEndpoints() []string {
	if x != nil {
		return x.ProxyEndpoints
	}
	return nil
}

func (x *GoogleCloudApigeeV1ApiProxyRevision) GetResourceFiles() *GoogleCloudApigeeV1ResourceFiles {
	if x != nil {
		return x.ResourceFiles
	}
	return nil
}

func (x *GoogleCloudApigeeV1ApiProxyRevision) GetResources() []string {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *GoogleCloudApigeeV1ApiProxyRevision) GetRevision() string {
	if x != nil && x.Revision != nil {
		return *x.Revision
	}
	return ""
}

func (x *GoogleCloudApigeeV1ApiProxyRevision) GetSharedFlows() []string {
	if x != nil {
		return x.SharedFlows
	}
	return nil
}

func (x *GoogleCloudApigeeV1ApiProxyRevision) GetSpec() string {
	if x != nil && x.Spec != nil {
		return *x.Spec
	}
	return ""
}

func (x *GoogleCloudApigeeV1ApiProxyRevision) GetTargetEndpoints() []string {
	if x != nil {
		return x.TargetEndpoints
	}
	return nil
}

func (x *GoogleCloudApigeeV1ApiProxyRevision) GetTargetServers() []string {
	if x != nil {
		return x.TargetServers
	}
	return nil
}

func (x *GoogleCloudApigeeV1ApiProxyRevision) GetTargets() []string {
	if x != nil {
		return x.Targets
	}
	return nil
}

func (x *GoogleCloudApigeeV1ApiProxyRevision) GetTeams() []string {
	if x != nil {
		return x.Teams
	}
	return nil
}

func (x *GoogleCloudApigeeV1ApiProxyRevision) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

type GoogleCloudApigeeV1ApiSecurityConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled   *bool  `protobuf:"varint,1,opt,name=enabled" json:"enabled,omitempty"`
	ExpiresAt *int64 `protobuf:"varint,2,opt,name=expires_at,json=expiresAt" json:"expires_at,omitempty"`
}

func (x *GoogleCloudApigeeV1ApiSecurityConfig) Reset() {
	*x = GoogleCloudApigeeV1ApiSecurityConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1ApiSecurityConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1ApiSecurityConfig) ProtoMessage() {}

func (x *GoogleCloudApigeeV1ApiSecurityConfig) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1ApiSecurityConfig.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1ApiSecurityConfig) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{26}
}

func (x *GoogleCloudApigeeV1ApiSecurityConfig) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

func (x *GoogleCloudApigeeV1ApiSecurityConfig) GetExpiresAt() int64 {
	if x != nil && x.ExpiresAt != nil {
		return *x.ExpiresAt
	}
	return 0
}

type GoogleCloudApigeeV1ApiSecurityRuntimeConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location   []string             `protobuf:"bytes,1,rep,name=location" json:"location,omitempty"`
	Name       *string              `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	RevisionId *int64               `protobuf:"varint,3,opt,name=revision_id,json=revisionId" json:"revision_id,omitempty"`
	Uid        *string              `protobuf:"bytes,4,opt,name=uid" json:"uid,omitempty"`
	UpdateTime *timestamp.Timestamp `protobuf:"bytes,5,opt,name=update_time,json=updateTime" json:"update_time,omitempty"`
}

func (x *GoogleCloudApigeeV1ApiSecurityRuntimeConfig) Reset() {
	*x = GoogleCloudApigeeV1ApiSecurityRuntimeConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1ApiSecurityRuntimeConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1ApiSecurityRuntimeConfig) ProtoMessage() {}

func (x *GoogleCloudApigeeV1ApiSecurityRuntimeConfig) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1ApiSecurityRuntimeConfig.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1ApiSecurityRuntimeConfig) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{27}
}

func (x *GoogleCloudApigeeV1ApiSecurityRuntimeConfig) GetLocation() []string {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *GoogleCloudApigeeV1ApiSecurityRuntimeConfig) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GoogleCloudApigeeV1ApiSecurityRuntimeConfig) GetRevisionId() int64 {
	if x != nil && x.RevisionId != nil {
		return *x.RevisionId
	}
	return 0
}

func (x *GoogleCloudApigeeV1ApiSecurityRuntimeConfig) GetUid() string {
	if x != nil && x.Uid != nil {
		return *x.Uid
	}
	return ""
}

func (x *GoogleCloudApigeeV1ApiSecurityRuntimeConfig) GetUpdateTime() *timestamp.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

type GoogleCloudApigeeV1App struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiProducts    []*GoogleCloudApigeeV1ApiProductRef `protobuf:"bytes,1,rep,name=api_products,json=apiProducts" json:"api_products,omitempty"`
	AppGroup       *string                             `protobuf:"bytes,2,opt,name=app_group,json=appGroup" json:"app_group,omitempty"`
	AppId          *string                             `protobuf:"bytes,3,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	Attributes     []*GoogleCloudApigeeV1Attribute     `protobuf:"bytes,4,rep,name=attributes" json:"attributes,omitempty"`
	CallbackUrl    *string                             `protobuf:"bytes,5,opt,name=callback_url,json=callbackUrl" json:"callback_url,omitempty"`
	CompanyName    *string                             `protobuf:"bytes,6,opt,name=company_name,json=companyName" json:"company_name,omitempty"`
	CreatedAt      *int64                              `protobuf:"varint,7,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	Credentials    []*GoogleCloudApigeeV1Credential    `protobuf:"bytes,8,rep,name=credentials" json:"credentials,omitempty"`
	DeveloperEmail *string                             `protobuf:"bytes,9,opt,name=developer_email,json=developerEmail" json:"developer_email,omitempty"`
	DeveloperId    *string                             `protobuf:"bytes,10,opt,name=developer_id,json=developerId" json:"developer_id,omitempty"`
	KeyExpiresIn   *int64                              `protobuf:"varint,11,opt,name=key_expires_in,json=keyExpiresIn" json:"key_expires_in,omitempty"`
	LastModifiedAt *int64                              `protobuf:"varint,12,opt,name=last_modified_at,json=lastModifiedAt" json:"last_modified_at,omitempty"`
	Name           *string                             `protobuf:"bytes,13,opt,name=name" json:"name,omitempty"`
	Scopes         []string                            `protobuf:"bytes,14,rep,name=scopes" json:"scopes,omitempty"`
	Status         *string                             `protobuf:"bytes,15,opt,name=status" json:"status,omitempty"`
}

func (x *GoogleCloudApigeeV1App) Reset() {
	*x = GoogleCloudApigeeV1App{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1App) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1App) ProtoMessage() {}

func (x *GoogleCloudApigeeV1App) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1App.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1App) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{28}
}

func (x *GoogleCloudApigeeV1App) GetApiProducts() []*GoogleCloudApigeeV1ApiProductRef {
	if x != nil {
		return x.ApiProducts
	}
	return nil
}

func (x *GoogleCloudApigeeV1App) GetAppGroup() string {
	if x != nil && x.AppGroup != nil {
		return *x.AppGroup
	}
	return ""
}

func (x *GoogleCloudApigeeV1App) GetAppId() string {
	if x != nil && x.AppId != nil {
		return *x.AppId
	}
	return ""
}

func (x *GoogleCloudApigeeV1App) GetAttributes() []*GoogleCloudApigeeV1Attribute {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *GoogleCloudApigeeV1App) GetCallbackUrl() string {
	if x != nil && x.CallbackUrl != nil {
		return *x.CallbackUrl
	}
	return ""
}

func (x *GoogleCloudApigeeV1App) GetCompanyName() string {
	if x != nil && x.CompanyName != nil {
		return *x.CompanyName
	}
	return ""
}

func (x *GoogleCloudApigeeV1App) GetCreatedAt() int64 {
	if x != nil && x.CreatedAt != nil {
		return *x.CreatedAt
	}
	return 0
}

func (x *GoogleCloudApigeeV1App) GetCredentials() []*GoogleCloudApigeeV1Credential {
	if x != nil {
		return x.Credentials
	}
	return nil
}

func (x *GoogleCloudApigeeV1App) GetDeveloperEmail() string {
	if x != nil && x.DeveloperEmail != nil {
		return *x.DeveloperEmail
	}
	return ""
}

func (x *GoogleCloudApigeeV1App) GetDeveloperId() string {
	if x != nil && x.DeveloperId != nil {
		return *x.DeveloperId
	}
	return ""
}

func (x *GoogleCloudApigeeV1App) GetKeyExpiresIn() int64 {
	if x != nil && x.KeyExpiresIn != nil {
		return *x.KeyExpiresIn
	}
	return 0
}

func (x *GoogleCloudApigeeV1App) GetLastModifiedAt() int64 {
	if x != nil && x.LastModifiedAt != nil {
		return *x.LastModifiedAt
	}
	return 0
}

func (x *GoogleCloudApigeeV1App) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GoogleCloudApigeeV1App) GetScopes() []string {
	if x != nil {
		return x.Scopes
	}
	return nil
}

func (x *GoogleCloudApigeeV1App) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

type GoogleCloudApigeeV1AppGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppGroupId     *string                         `protobuf:"bytes,1,opt,name=app_group_id,json=appGroupId" json:"app_group_id,omitempty"`
	Attributes     []*GoogleCloudApigeeV1Attribute `protobuf:"bytes,2,rep,name=attributes" json:"attributes,omitempty"`
	ChannelId      *string                         `protobuf:"bytes,3,opt,name=channel_id,json=channelId" json:"channel_id,omitempty"`
	ChannelUri     *string                         `protobuf:"bytes,4,opt,name=channel_uri,json=channelUri" json:"channel_uri,omitempty"`
	CreatedAt      *int64                          `protobuf:"varint,5,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	DisplayName    *string                         `protobuf:"bytes,6,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	LastModifiedAt *int64                          `protobuf:"varint,7,opt,name=last_modified_at,json=lastModifiedAt" json:"last_modified_at,omitempty"`
	Name           *string                         `protobuf:"bytes,8,opt,name=name" json:"name,omitempty"`
	Organization   *string                         `protobuf:"bytes,9,opt,name=organization" json:"organization,omitempty"`
	Status         *string                         `protobuf:"bytes,10,opt,name=status" json:"status,omitempty"`
}

func (x *GoogleCloudApigeeV1AppGroup) Reset() {
	*x = GoogleCloudApigeeV1AppGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1AppGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1AppGroup) ProtoMessage() {}

func (x *GoogleCloudApigeeV1AppGroup) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1AppGroup.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1AppGroup) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{29}
}

func (x *GoogleCloudApigeeV1AppGroup) GetAppGroupId() string {
	if x != nil && x.AppGroupId != nil {
		return *x.AppGroupId
	}
	return ""
}

func (x *GoogleCloudApigeeV1AppGroup) GetAttributes() []*GoogleCloudApigeeV1Attribute {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *GoogleCloudApigeeV1AppGroup) GetChannelId() string {
	if x != nil && x.ChannelId != nil {
		return *x.ChannelId
	}
	return ""
}

func (x *GoogleCloudApigeeV1AppGroup) GetChannelUri() string {
	if x != nil && x.ChannelUri != nil {
		return *x.ChannelUri
	}
	return ""
}

func (x *GoogleCloudApigeeV1AppGroup) GetCreatedAt() int64 {
	if x != nil && x.CreatedAt != nil {
		return *x.CreatedAt
	}
	return 0
}

func (x *GoogleCloudApigeeV1AppGroup) GetDisplayName() string {
	if x != nil && x.DisplayName != nil {
		return *x.DisplayName
	}
	return ""
}

func (x *GoogleCloudApigeeV1AppGroup) GetLastModifiedAt() int64 {
	if x != nil && x.LastModifiedAt != nil {
		return *x.LastModifiedAt
	}
	return 0
}

func (x *GoogleCloudApigeeV1AppGroup) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GoogleCloudApigeeV1AppGroup) GetOrganization() string {
	if x != nil && x.Organization != nil {
		return *x.Organization
	}
	return ""
}

func (x *GoogleCloudApigeeV1AppGroup) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

type GoogleCloudApigeeV1AppGroupApp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiProducts    []string                         `protobuf:"bytes,1,rep,name=api_products,json=apiProducts" json:"api_products,omitempty"`
	AppGroup       *string                          `protobuf:"bytes,2,opt,name=app_group,json=appGroup" json:"app_group,omitempty"`
	AppId          *string                          `protobuf:"bytes,3,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	Attributes     []*GoogleCloudApigeeV1Attribute  `protobuf:"bytes,4,rep,name=attributes" json:"attributes,omitempty"`
	CallbackUrl    *string                          `protobuf:"bytes,5,opt,name=callback_url,json=callbackUrl" json:"callback_url,omitempty"`
	CreatedAt      *int64                           `protobuf:"varint,6,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	Credentials    []*GoogleCloudApigeeV1Credential `protobuf:"bytes,7,rep,name=credentials" json:"credentials,omitempty"`
	KeyExpiresIn   *int64                           `protobuf:"varint,8,opt,name=key_expires_in,json=keyExpiresIn" json:"key_expires_in,omitempty"`
	LastModifiedAt *int64                           `protobuf:"varint,9,opt,name=last_modified_at,json=lastModifiedAt" json:"last_modified_at,omitempty"`
	Name           *string                          `protobuf:"bytes,10,opt,name=name" json:"name,omitempty"`
	Scopes         []string                         `protobuf:"bytes,11,rep,name=scopes" json:"scopes,omitempty"`
	Status         *string                          `protobuf:"bytes,12,opt,name=status" json:"status,omitempty"`
}

func (x *GoogleCloudApigeeV1AppGroupApp) Reset() {
	*x = GoogleCloudApigeeV1AppGroupApp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1AppGroupApp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1AppGroupApp) ProtoMessage() {}

func (x *GoogleCloudApigeeV1AppGroupApp) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1AppGroupApp.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1AppGroupApp) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{30}
}

func (x *GoogleCloudApigeeV1AppGroupApp) GetApiProducts() []string {
	if x != nil {
		return x.ApiProducts
	}
	return nil
}

func (x *GoogleCloudApigeeV1AppGroupApp) GetAppGroup() string {
	if x != nil && x.AppGroup != nil {
		return *x.AppGroup
	}
	return ""
}

func (x *GoogleCloudApigeeV1AppGroupApp) GetAppId() string {
	if x != nil && x.AppId != nil {
		return *x.AppId
	}
	return ""
}

func (x *GoogleCloudApigeeV1AppGroupApp) GetAttributes() []*GoogleCloudApigeeV1Attribute {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *GoogleCloudApigeeV1AppGroupApp) GetCallbackUrl() string {
	if x != nil && x.CallbackUrl != nil {
		return *x.CallbackUrl
	}
	return ""
}

func (x *GoogleCloudApigeeV1AppGroupApp) GetCreatedAt() int64 {
	if x != nil && x.CreatedAt != nil {
		return *x.CreatedAt
	}
	return 0
}

func (x *GoogleCloudApigeeV1AppGroupApp) GetCredentials() []*GoogleCloudApigeeV1Credential {
	if x != nil {
		return x.Credentials
	}
	return nil
}

func (x *GoogleCloudApigeeV1AppGroupApp) GetKeyExpiresIn() int64 {
	if x != nil && x.KeyExpiresIn != nil {
		return *x.KeyExpiresIn
	}
	return 0
}

func (x *GoogleCloudApigeeV1AppGroupApp) GetLastModifiedAt() int64 {
	if x != nil && x.LastModifiedAt != nil {
		return *x.LastModifiedAt
	}
	return 0
}

func (x *GoogleCloudApigeeV1AppGroupApp) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GoogleCloudApigeeV1AppGroupApp) GetScopes() []string {
	if x != nil {
		return x.Scopes
	}
	return nil
}

func (x *GoogleCloudApigeeV1AppGroupApp) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

type GoogleCloudApigeeV1AppGroupAppKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiProducts      []*GoogleCloudApigeeV1APIProductAssociation `protobuf:"bytes,1,rep,name=api_products,json=apiProducts" json:"api_products,omitempty"`
	Attributes       []*GoogleCloudApigeeV1Attribute             `protobuf:"bytes,2,rep,name=attributes" json:"attributes,omitempty"`
	ConsumerKey      *string                                     `protobuf:"bytes,3,opt,name=consumer_key,json=consumerKey" json:"consumer_key,omitempty"`
	ConsumerSecret   *string                                     `protobuf:"bytes,4,opt,name=consumer_secret,json=consumerSecret" json:"consumer_secret,omitempty"`
	ExpiresAt        *int64                                      `protobuf:"varint,5,opt,name=expires_at,json=expiresAt" json:"expires_at,omitempty"`
	ExpiresInSeconds *int64                                      `protobuf:"varint,6,opt,name=expires_in_seconds,json=expiresInSeconds" json:"expires_in_seconds,omitempty"`
	IssuedAt         *int64                                      `protobuf:"varint,7,opt,name=issued_at,json=issuedAt" json:"issued_at,omitempty"`
	Scopes           []string                                    `protobuf:"bytes,8,rep,name=scopes" json:"scopes,omitempty"`
	Status           *string                                     `protobuf:"bytes,9,opt,name=status" json:"status,omitempty"`
}

func (x *GoogleCloudApigeeV1AppGroupAppKey) Reset() {
	*x = GoogleCloudApigeeV1AppGroupAppKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1AppGroupAppKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1AppGroupAppKey) ProtoMessage() {}

func (x *GoogleCloudApigeeV1AppGroupAppKey) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1AppGroupAppKey.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1AppGroupAppKey) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{31}
}

func (x *GoogleCloudApigeeV1AppGroupAppKey) GetApiProducts() []*GoogleCloudApigeeV1APIProductAssociation {
	if x != nil {
		return x.ApiProducts
	}
	return nil
}

func (x *GoogleCloudApigeeV1AppGroupAppKey) GetAttributes() []*GoogleCloudApigeeV1Attribute {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *GoogleCloudApigeeV1AppGroupAppKey) GetConsumerKey() string {
	if x != nil && x.ConsumerKey != nil {
		return *x.ConsumerKey
	}
	return ""
}

func (x *GoogleCloudApigeeV1AppGroupAppKey) GetConsumerSecret() string {
	if x != nil && x.ConsumerSecret != nil {
		return *x.ConsumerSecret
	}
	return ""
}

func (x *GoogleCloudApigeeV1AppGroupAppKey) GetExpiresAt() int64 {
	if x != nil && x.ExpiresAt != nil {
		return *x.ExpiresAt
	}
	return 0
}

func (x *GoogleCloudApigeeV1AppGroupAppKey) GetExpiresInSeconds() int64 {
	if x != nil && x.ExpiresInSeconds != nil {
		return *x.ExpiresInSeconds
	}
	return 0
}

func (x *GoogleCloudApigeeV1AppGroupAppKey) GetIssuedAt() int64 {
	if x != nil && x.IssuedAt != nil {
		return *x.IssuedAt
	}
	return 0
}

func (x *GoogleCloudApigeeV1AppGroupAppKey) GetScopes() []string {
	if x != nil {
		return x.Scopes
	}
	return nil
}

func (x *GoogleCloudApigeeV1AppGroupAppKey) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

type GoogleCloudApigeeV1ArchiveDeployment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatedAt *int64            `protobuf:"varint,1,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	GcsUri    *string           `protobuf:"bytes,2,opt,name=gcs_uri,json=gcsUri" json:"gcs_uri,omitempty"`
	Labels    map[string]string `protobuf:"bytes,3,rep,name=labels" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Name      *string           `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	Operation *string           `protobuf:"bytes,5,opt,name=operation" json:"operation,omitempty"`
	UpdatedAt *int64            `protobuf:"varint,6,opt,name=updated_at,json=updatedAt" json:"updated_at,omitempty"`
}

func (x *GoogleCloudApigeeV1ArchiveDeployment) Reset() {
	*x = GoogleCloudApigeeV1ArchiveDeployment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1ArchiveDeployment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1ArchiveDeployment) ProtoMessage() {}

func (x *GoogleCloudApigeeV1ArchiveDeployment) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1ArchiveDeployment.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1ArchiveDeployment) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{32}
}

func (x *GoogleCloudApigeeV1ArchiveDeployment) GetCreatedAt() int64 {
	if x != nil && x.CreatedAt != nil {
		return *x.CreatedAt
	}
	return 0
}

func (x *GoogleCloudApigeeV1ArchiveDeployment) GetGcsUri() string {
	if x != nil && x.GcsUri != nil {
		return *x.GcsUri
	}
	return ""
}

func (x *GoogleCloudApigeeV1ArchiveDeployment) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *GoogleCloudApigeeV1ArchiveDeployment) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GoogleCloudApigeeV1ArchiveDeployment) GetOperation() string {
	if x != nil && x.Operation != nil {
		return *x.Operation
	}
	return ""
}

func (x *GoogleCloudApigeeV1ArchiveDeployment) GetUpdatedAt() int64 {
	if x != nil && x.UpdatedAt != nil {
		return *x.UpdatedAt
	}
	return 0
}

type GoogleCloudApigeeV1AsyncQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Created            *string                              `protobuf:"bytes,1,opt,name=created" json:"created,omitempty"`
	EnvgroupHostname   *string                              `protobuf:"bytes,2,opt,name=envgroup_hostname,json=envgroupHostname" json:"envgroup_hostname,omitempty"`
	Error              *string                              `protobuf:"bytes,3,opt,name=error" json:"error,omitempty"`
	ExecutionTime      *string                              `protobuf:"bytes,4,opt,name=execution_time,json=executionTime" json:"execution_time,omitempty"`
	Name               *string                              `protobuf:"bytes,5,opt,name=name" json:"name,omitempty"`
	QueryParams        *GoogleCloudApigeeV1QueryMetadata    `protobuf:"bytes,6,opt,name=query_params,json=queryParams" json:"query_params,omitempty"`
	ReportDefinitionId *string                              `protobuf:"bytes,7,opt,name=report_definition_id,json=reportDefinitionId" json:"report_definition_id,omitempty"`
	Result             *GoogleCloudApigeeV1AsyncQueryResult `protobuf:"bytes,8,opt,name=result" json:"result,omitempty"`
	ResultFileSize     *string                              `protobuf:"bytes,9,opt,name=result_file_size,json=resultFileSize" json:"result_file_size,omitempty"`
	ResultRows         *int64                               `protobuf:"varint,10,opt,name=result_rows,json=resultRows" json:"result_rows,omitempty"`
	Self               *string                              `protobuf:"bytes,11,opt,name=self" json:"self,omitempty"`
	State              *string                              `protobuf:"bytes,12,opt,name=state" json:"state,omitempty"`
	Updated            *string                              `protobuf:"bytes,13,opt,name=updated" json:"updated,omitempty"`
}

func (x *GoogleCloudApigeeV1AsyncQuery) Reset() {
	*x = GoogleCloudApigeeV1AsyncQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1AsyncQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1AsyncQuery) ProtoMessage() {}

func (x *GoogleCloudApigeeV1AsyncQuery) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1AsyncQuery.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1AsyncQuery) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{33}
}

func (x *GoogleCloudApigeeV1AsyncQuery) GetCreated() string {
	if x != nil && x.Created != nil {
		return *x.Created
	}
	return ""
}

func (x *GoogleCloudApigeeV1AsyncQuery) GetEnvgroupHostname() string {
	if x != nil && x.EnvgroupHostname != nil {
		return *x.EnvgroupHostname
	}
	return ""
}

func (x *GoogleCloudApigeeV1AsyncQuery) GetError() string {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return ""
}

func (x *GoogleCloudApigeeV1AsyncQuery) GetExecutionTime() string {
	if x != nil && x.ExecutionTime != nil {
		return *x.ExecutionTime
	}
	return ""
}

func (x *GoogleCloudApigeeV1AsyncQuery) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GoogleCloudApigeeV1AsyncQuery) GetQueryParams() *GoogleCloudApigeeV1QueryMetadata {
	if x != nil {
		return x.QueryParams
	}
	return nil
}

func (x *GoogleCloudApigeeV1AsyncQuery) GetReportDefinitionId() string {
	if x != nil && x.ReportDefinitionId != nil {
		return *x.ReportDefinitionId
	}
	return ""
}

func (x *GoogleCloudApigeeV1AsyncQuery) GetResult() *GoogleCloudApigeeV1AsyncQueryResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *GoogleCloudApigeeV1AsyncQuery) GetResultFileSize() string {
	if x != nil && x.ResultFileSize != nil {
		return *x.ResultFileSize
	}
	return ""
}

func (x *GoogleCloudApigeeV1AsyncQuery) GetResultRows() int64 {
	if x != nil && x.ResultRows != nil {
		return *x.ResultRows
	}
	return 0
}

func (x *GoogleCloudApigeeV1AsyncQuery) GetSelf() string {
	if x != nil && x.Self != nil {
		return *x.Self
	}
	return ""
}

func (x *GoogleCloudApigeeV1AsyncQuery) GetState() string {
	if x != nil && x.State != nil {
		return *x.State
	}
	return ""
}

func (x *GoogleCloudApigeeV1AsyncQuery) GetUpdated() string {
	if x != nil && x.Updated != nil {
		return *x.Updated
	}
	return ""
}

type GoogleCloudApigeeV1AsyncQueryResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Expires *string `protobuf:"bytes,1,opt,name=expires" json:"expires,omitempty"`
	Self    *string `protobuf:"bytes,2,opt,name=self" json:"self,omitempty"`
}

func (x *GoogleCloudApigeeV1AsyncQueryResult) Reset() {
	*x = GoogleCloudApigeeV1AsyncQueryResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1AsyncQueryResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1AsyncQueryResult) ProtoMessage() {}

func (x *GoogleCloudApigeeV1AsyncQueryResult) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1AsyncQueryResult.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1AsyncQueryResult) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{34}
}

func (x *GoogleCloudApigeeV1AsyncQueryResult) GetExpires() string {
	if x != nil && x.Expires != nil {
		return *x.Expires
	}
	return ""
}

func (x *GoogleCloudApigeeV1AsyncQueryResult) GetSelf() string {
	if x != nil && x.Self != nil {
		return *x.Self
	}
	return ""
}

type GoogleCloudApigeeV1AsyncQueryResultView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     *int32                            `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Error    *string                           `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
	Metadata *GoogleCloudApigeeV1QueryMetadata `protobuf:"bytes,3,opt,name=metadata" json:"metadata,omitempty"`
	Rows     []*any1.Any                       `protobuf:"bytes,4,rep,name=rows" json:"rows,omitempty"`
	State    *string                           `protobuf:"bytes,5,opt,name=state" json:"state,omitempty"`
}

func (x *GoogleCloudApigeeV1AsyncQueryResultView) Reset() {
	*x = GoogleCloudApigeeV1AsyncQueryResultView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1AsyncQueryResultView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1AsyncQueryResultView) ProtoMessage() {}

func (x *GoogleCloudApigeeV1AsyncQueryResultView) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1AsyncQueryResultView.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1AsyncQueryResultView) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{35}
}

func (x *GoogleCloudApigeeV1AsyncQueryResultView) GetCode() int32 {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return 0
}

func (x *GoogleCloudApigeeV1AsyncQueryResultView) GetError() string {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return ""
}

func (x *GoogleCloudApigeeV1AsyncQueryResultView) GetMetadata() *GoogleCloudApigeeV1QueryMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *GoogleCloudApigeeV1AsyncQueryResultView) GetRows() []*any1.Any {
	if x != nil {
		return x.Rows
	}
	return nil
}

func (x *GoogleCloudApigeeV1AsyncQueryResultView) GetState() string {
	if x != nil && x.State != nil {
		return *x.State
	}
	return ""
}

type GoogleCloudApigeeV1Attribute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Value *string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (x *GoogleCloudApigeeV1Attribute) Reset() {
	*x = GoogleCloudApigeeV1Attribute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1Attribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1Attribute) ProtoMessage() {}

func (x *GoogleCloudApigeeV1Attribute) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1Attribute.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1Attribute) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{36}
}

func (x *GoogleCloudApigeeV1Attribute) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GoogleCloudApigeeV1Attribute) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

type GoogleCloudApigeeV1Attributes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attribute []*GoogleCloudApigeeV1Attribute `protobuf:"bytes,1,rep,name=attribute" json:"attribute,omitempty"`
}

func (x *GoogleCloudApigeeV1Attributes) Reset() {
	*x = GoogleCloudApigeeV1Attributes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1Attributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1Attributes) ProtoMessage() {}

func (x *GoogleCloudApigeeV1Attributes) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1Attributes.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1Attributes) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{37}
}

func (x *GoogleCloudApigeeV1Attributes) GetAttribute() []*GoogleCloudApigeeV1Attribute {
	if x != nil {
		return x.Attribute
	}
	return nil
}

type GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Include             *GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsRequestResourceArray `protobuf:"bytes,1,opt,name=include" json:"include,omitempty"`
	IncludeAllResources *GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsRequestIncludeAll    `protobuf:"bytes,2,opt,name=include_all_resources,json=includeAllResources" json:"include_all_resources,omitempty"`
	PageSize            *int32                                                                        `protobuf:"varint,3,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	PageToken           *string                                                                       `protobuf:"bytes,4,opt,name=page_token,json=pageToken" json:"page_token,omitempty"`
	Profile             *string                                                                       `protobuf:"bytes,5,opt,name=profile" json:"profile,omitempty"`
	Scope               *string                                                                       `protobuf:"bytes,6,opt,name=scope" json:"scope,omitempty"`
}

func (x *GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsRequest) Reset() {
	*x = GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsRequest) ProtoMessage() {}

func (x *GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsRequest.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{38}
}

func (x *GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsRequest) GetInclude() *GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsRequestResourceArray {
	if x != nil {
		return x.Include
	}
	return nil
}

func (x *GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsRequest) GetIncludeAllResources() *GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsRequestIncludeAll {
	if x != nil {
		return x.IncludeAllResources
	}
	return nil
}

func (x *GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsRequest) GetPageToken() string {
	if x != nil && x.PageToken != nil {
		return *x.PageToken
	}
	return ""
}

func (x *GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsRequest) GetProfile() string {
	if x != nil && x.Profile != nil {
		return *x.Profile
	}
	return ""
}

func (x *GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsRequest) GetScope() string {
	if x != nil && x.Scope != nil {
		return *x.Scope
	}
	return ""
}

type GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsRequestIncludeAll struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsRequestIncludeAll) Reset() {
	*x = GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsRequestIncludeAll{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsRequestIncludeAll) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsRequestIncludeAll) ProtoMessage() {}

func (x *GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsRequestIncludeAll) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsRequestIncludeAll.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsRequestIncludeAll) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{39}
}

type GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsRequestResourceArray struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resources []*GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsRequestResourceArrayResource `protobuf:"bytes,1,rep,name=resources" json:"resources,omitempty"`
}

func (x *GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsRequestResourceArray) Reset() {
	*x = GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsRequestResourceArray{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsRequestResourceArray) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsRequestResourceArray) ProtoMessage() {}

func (x *GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsRequestResourceArray) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsRequestResourceArray.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsRequestResourceArray) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{40}
}

func (x *GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsRequestResourceArray) GetResources() []*GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsRequestResourceArrayResource {
	if x != nil {
		return x.Resources
	}
	return nil
}

type GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsRequestResourceArrayResource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Type *string `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
}

func (x *GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsRequestResourceArrayResource) Reset() {
	*x = GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsRequestResourceArrayResource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsRequestResourceArrayResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsRequestResourceArrayResource) ProtoMessage() {
}

func (x *GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsRequestResourceArrayResource) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsRequestResourceArrayResource.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsRequestResourceArrayResource) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{41}
}

func (x *GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsRequestResourceArrayResource) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsRequestResourceArrayResource) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

type GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssessmentTime            *timestamp.Timestamp                           `protobuf:"bytes,1,opt,name=assessment_time,json=assessmentTime" json:"assessment_time,omitempty"`
	NextPageToken             *string                                        `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken" json:"next_page_token,omitempty"`
	SecurityAssessmentResults []*GoogleCloudApigeeV1SecurityAssessmentResult `protobuf:"bytes,3,rep,name=security_assessment_results,json=securityAssessmentResults" json:"security_assessment_results,omitempty"`
}

func (x *GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsResponse) Reset() {
	*x = GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsResponse) ProtoMessage() {}

func (x *GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsResponse.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsResponse) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{42}
}

func (x *GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsResponse) GetAssessmentTime() *timestamp.Timestamp {
	if x != nil {
		return x.AssessmentTime
	}
	return nil
}

func (x *GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsResponse) GetNextPageToken() string {
	if x != nil && x.NextPageToken != nil {
		return *x.NextPageToken
	}
	return ""
}

func (x *GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsResponse) GetSecurityAssessmentResults() []*GoogleCloudApigeeV1SecurityAssessmentResult {
	if x != nil {
		return x.SecurityAssessmentResults
	}
	return nil
}

type GoogleCloudApigeeV1BatchUpdateSecurityIncidentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Requests []*GoogleCloudApigeeV1UpdateSecurityIncidentRequest `protobuf:"bytes,1,rep,name=requests" json:"requests,omitempty"`
}

func (x *GoogleCloudApigeeV1BatchUpdateSecurityIncidentsRequest) Reset() {
	*x = GoogleCloudApigeeV1BatchUpdateSecurityIncidentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1BatchUpdateSecurityIncidentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1BatchUpdateSecurityIncidentsRequest) ProtoMessage() {}

func (x *GoogleCloudApigeeV1BatchUpdateSecurityIncidentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1BatchUpdateSecurityIncidentsRequest.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1BatchUpdateSecurityIncidentsRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{43}
}

func (x *GoogleCloudApigeeV1BatchUpdateSecurityIncidentsRequest) GetRequests() []*GoogleCloudApigeeV1UpdateSecurityIncidentRequest {
	if x != nil {
		return x.Requests
	}
	return nil
}

type GoogleCloudApigeeV1BatchUpdateSecurityIncidentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SecurityIncidents []*GoogleCloudApigeeV1SecurityIncident `protobuf:"bytes,1,rep,name=security_incidents,json=securityIncidents" json:"security_incidents,omitempty"`
}

func (x *GoogleCloudApigeeV1BatchUpdateSecurityIncidentsResponse) Reset() {
	*x = GoogleCloudApigeeV1BatchUpdateSecurityIncidentsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1BatchUpdateSecurityIncidentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1BatchUpdateSecurityIncidentsResponse) ProtoMessage() {}

func (x *GoogleCloudApigeeV1BatchUpdateSecurityIncidentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1BatchUpdateSecurityIncidentsResponse.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1BatchUpdateSecurityIncidentsResponse) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{44}
}

func (x *GoogleCloudApigeeV1BatchUpdateSecurityIncidentsResponse) GetSecurityIncidents() []*GoogleCloudApigeeV1SecurityIncident {
	if x != nil {
		return x.SecurityIncidents
	}
	return nil
}

type GoogleCloudApigeeV1CanaryEvaluation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Control      *string                                          `protobuf:"bytes,1,opt,name=control" json:"control,omitempty"`
	CreateTime   *timestamp.Timestamp                             `protobuf:"bytes,2,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	EndTime      *timestamp.Timestamp                             `protobuf:"bytes,3,opt,name=end_time,json=endTime" json:"end_time,omitempty"`
	MetricLabels *GoogleCloudApigeeV1CanaryEvaluationMetricLabels `protobuf:"bytes,4,opt,name=metric_labels,json=metricLabels" json:"metric_labels,omitempty"`
	Name         *string                                          `protobuf:"bytes,5,opt,name=name" json:"name,omitempty"`
	StartTime    *timestamp.Timestamp                             `protobuf:"bytes,6,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	State        *string                                          `protobuf:"bytes,7,opt,name=state" json:"state,omitempty"`
	Treatment    *string                                          `protobuf:"bytes,8,opt,name=treatment" json:"treatment,omitempty"`
	Verdict      *string                                          `protobuf:"bytes,9,opt,name=verdict" json:"verdict,omitempty"`
}

func (x *GoogleCloudApigeeV1CanaryEvaluation) Reset() {
	*x = GoogleCloudApigeeV1CanaryEvaluation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1CanaryEvaluation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1CanaryEvaluation) ProtoMessage() {}

func (x *GoogleCloudApigeeV1CanaryEvaluation) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1CanaryEvaluation.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1CanaryEvaluation) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{45}
}

func (x *GoogleCloudApigeeV1CanaryEvaluation) GetControl() string {
	if x != nil && x.Control != nil {
		return *x.Control
	}
	return ""
}

func (x *GoogleCloudApigeeV1CanaryEvaluation) GetCreateTime() *timestamp.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *GoogleCloudApigeeV1CanaryEvaluation) GetEndTime() *timestamp.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *GoogleCloudApigeeV1CanaryEvaluation) GetMetricLabels() *GoogleCloudApigeeV1CanaryEvaluationMetricLabels {
	if x != nil {
		return x.MetricLabels
	}
	return nil
}

func (x *GoogleCloudApigeeV1CanaryEvaluation) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GoogleCloudApigeeV1CanaryEvaluation) GetStartTime() *timestamp.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *GoogleCloudApigeeV1CanaryEvaluation) GetState() string {
	if x != nil && x.State != nil {
		return *x.State
	}
	return ""
}

func (x *GoogleCloudApigeeV1CanaryEvaluation) GetTreatment() string {
	if x != nil && x.Treatment != nil {
		return *x.Treatment
	}
	return ""
}

func (x *GoogleCloudApigeeV1CanaryEvaluation) GetVerdict() string {
	if x != nil && x.Verdict != nil {
		return *x.Verdict
	}
	return ""
}

type GoogleCloudApigeeV1CanaryEvaluationMetricLabels struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Env        *string `protobuf:"bytes,1,opt,name=env" json:"env,omitempty"`
	InstanceId *string `protobuf:"bytes,2,opt,name=instance_id" json:"instance_id,omitempty"`
	Location   *string `protobuf:"bytes,3,opt,name=location" json:"location,omitempty"`
}

func (x *GoogleCloudApigeeV1CanaryEvaluationMetricLabels) Reset() {
	*x = GoogleCloudApigeeV1CanaryEvaluationMetricLabels{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1CanaryEvaluationMetricLabels) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1CanaryEvaluationMetricLabels) ProtoMessage() {}

func (x *GoogleCloudApigeeV1CanaryEvaluationMetricLabels) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1CanaryEvaluationMetricLabels.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1CanaryEvaluationMetricLabels) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{46}
}

func (x *GoogleCloudApigeeV1CanaryEvaluationMetricLabels) GetEnv() string {
	if x != nil && x.Env != nil {
		return *x.Env
	}
	return ""
}

func (x *GoogleCloudApigeeV1CanaryEvaluationMetricLabels) GetInstanceId() string {
	if x != nil && x.InstanceId != nil {
		return *x.InstanceId
	}
	return ""
}

func (x *GoogleCloudApigeeV1CanaryEvaluationMetricLabels) GetLocation() string {
	if x != nil && x.Location != nil {
		return *x.Location
	}
	return ""
}

type GoogleCloudApigeeV1CertInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicConstraints        *string  `protobuf:"bytes,1,opt,name=basic_constraints,json=basicConstraints" json:"basic_constraints,omitempty"`
	ExpiryDate              *int64   `protobuf:"varint,2,opt,name=expiry_date,json=expiryDate" json:"expiry_date,omitempty"`
	IsValid                 *string  `protobuf:"bytes,3,opt,name=is_valid,json=isValid" json:"is_valid,omitempty"`
	Issuer                  *string  `protobuf:"bytes,4,opt,name=issuer" json:"issuer,omitempty"`
	PublicKey               *string  `protobuf:"bytes,5,opt,name=public_key,json=publicKey" json:"public_key,omitempty"`
	SerialNumber            *string  `protobuf:"bytes,6,opt,name=serial_number,json=serialNumber" json:"serial_number,omitempty"`
	SigAlgName              *string  `protobuf:"bytes,7,opt,name=sig_alg_name,json=sigAlgName" json:"sig_alg_name,omitempty"`
	Subject                 *string  `protobuf:"bytes,8,opt,name=subject" json:"subject,omitempty"`
	SubjectAlternativeNames []string `protobuf:"bytes,9,rep,name=subject_alternative_names,json=subjectAlternativeNames" json:"subject_alternative_names,omitempty"`
	ValidFrom               *int64   `protobuf:"varint,10,opt,name=valid_from,json=validFrom" json:"valid_from,omitempty"`
	Version                 *int32   `protobuf:"varint,11,opt,name=version" json:"version,omitempty"`
}

func (x *GoogleCloudApigeeV1CertInfo) Reset() {
	*x = GoogleCloudApigeeV1CertInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1CertInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1CertInfo) ProtoMessage() {}

func (x *GoogleCloudApigeeV1CertInfo) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1CertInfo.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1CertInfo) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{47}
}

func (x *GoogleCloudApigeeV1CertInfo) GetBasicConstraints() string {
	if x != nil && x.BasicConstraints != nil {
		return *x.BasicConstraints
	}
	return ""
}

func (x *GoogleCloudApigeeV1CertInfo) GetExpiryDate() int64 {
	if x != nil && x.ExpiryDate != nil {
		return *x.ExpiryDate
	}
	return 0
}

func (x *GoogleCloudApigeeV1CertInfo) GetIsValid() string {
	if x != nil && x.IsValid != nil {
		return *x.IsValid
	}
	return ""
}

func (x *GoogleCloudApigeeV1CertInfo) GetIssuer() string {
	if x != nil && x.Issuer != nil {
		return *x.Issuer
	}
	return ""
}

func (x *GoogleCloudApigeeV1CertInfo) GetPublicKey() string {
	if x != nil && x.PublicKey != nil {
		return *x.PublicKey
	}
	return ""
}

func (x *GoogleCloudApigeeV1CertInfo) GetSerialNumber() string {
	if x != nil && x.SerialNumber != nil {
		return *x.SerialNumber
	}
	return ""
}

func (x *GoogleCloudApigeeV1CertInfo) GetSigAlgName() string {
	if x != nil && x.SigAlgName != nil {
		return *x.SigAlgName
	}
	return ""
}

func (x *GoogleCloudApigeeV1CertInfo) GetSubject() string {
	if x != nil && x.Subject != nil {
		return *x.Subject
	}
	return ""
}

func (x *GoogleCloudApigeeV1CertInfo) GetSubjectAlternativeNames() []string {
	if x != nil {
		return x.SubjectAlternativeNames
	}
	return nil
}

func (x *GoogleCloudApigeeV1CertInfo) GetValidFrom() int64 {
	if x != nil && x.ValidFrom != nil {
		return *x.ValidFrom
	}
	return 0
}

func (x *GoogleCloudApigeeV1CertInfo) GetVersion() int32 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

type GoogleCloudApigeeV1Certificate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CertInfo []*GoogleCloudApigeeV1CertInfo `protobuf:"bytes,1,rep,name=cert_info,json=certInfo" json:"cert_info,omitempty"`
}

func (x *GoogleCloudApigeeV1Certificate) Reset() {
	*x = GoogleCloudApigeeV1Certificate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1Certificate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1Certificate) ProtoMessage() {}

func (x *GoogleCloudApigeeV1Certificate) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1Certificate.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1Certificate) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{48}
}

func (x *GoogleCloudApigeeV1Certificate) GetCertInfo() []*GoogleCloudApigeeV1CertInfo {
	if x != nil {
		return x.CertInfo
	}
	return nil
}

type GoogleCloudApigeeV1CommonNameConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchWildCards *bool   `protobuf:"varint,1,opt,name=match_wild_cards,json=matchWildCards" json:"match_wild_cards,omitempty"`
	Name           *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (x *GoogleCloudApigeeV1CommonNameConfig) Reset() {
	*x = GoogleCloudApigeeV1CommonNameConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1CommonNameConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1CommonNameConfig) ProtoMessage() {}

func (x *GoogleCloudApigeeV1CommonNameConfig) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1CommonNameConfig.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1CommonNameConfig) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{49}
}

func (x *GoogleCloudApigeeV1CommonNameConfig) GetMatchWildCards() bool {
	if x != nil && x.MatchWildCards != nil {
		return *x.MatchWildCards
	}
	return false
}

func (x *GoogleCloudApigeeV1CommonNameConfig) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GoogleCloudApigeeV1ComputeEnvironmentScoresRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters   []*GoogleCloudApigeeV1ComputeEnvironmentScoresRequestFilter `protobuf:"bytes,1,rep,name=filters" json:"filters,omitempty"`
	PageSize  *int32                                                      `protobuf:"varint,2,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	PageToken *string                                                     `protobuf:"bytes,3,opt,name=page_token,json=pageToken" json:"page_token,omitempty"`
	TimeRange *GoogleTypeInterval                                         `protobuf:"bytes,4,opt,name=time_range,json=timeRange" json:"time_range,omitempty"`
}

func (x *GoogleCloudApigeeV1ComputeEnvironmentScoresRequest) Reset() {
	*x = GoogleCloudApigeeV1ComputeEnvironmentScoresRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1ComputeEnvironmentScoresRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1ComputeEnvironmentScoresRequest) ProtoMessage() {}

func (x *GoogleCloudApigeeV1ComputeEnvironmentScoresRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1ComputeEnvironmentScoresRequest.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1ComputeEnvironmentScoresRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{50}
}

func (x *GoogleCloudApigeeV1ComputeEnvironmentScoresRequest) GetFilters() []*GoogleCloudApigeeV1ComputeEnvironmentScoresRequestFilter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *GoogleCloudApigeeV1ComputeEnvironmentScoresRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *GoogleCloudApigeeV1ComputeEnvironmentScoresRequest) GetPageToken() string {
	if x != nil && x.PageToken != nil {
		return *x.PageToken
	}
	return ""
}

func (x *GoogleCloudApigeeV1ComputeEnvironmentScoresRequest) GetTimeRange() *GoogleTypeInterval {
	if x != nil {
		return x.TimeRange
	}
	return nil
}

type GoogleCloudApigeeV1ComputeEnvironmentScoresRequestFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScorePath *string `protobuf:"bytes,1,opt,name=score_path,json=scorePath" json:"score_path,omitempty"`
}

func (x *GoogleCloudApigeeV1ComputeEnvironmentScoresRequestFilter) Reset() {
	*x = GoogleCloudApigeeV1ComputeEnvironmentScoresRequestFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1ComputeEnvironmentScoresRequestFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1ComputeEnvironmentScoresRequestFilter) ProtoMessage() {}

func (x *GoogleCloudApigeeV1ComputeEnvironmentScoresRequestFilter) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1ComputeEnvironmentScoresRequestFilter.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1ComputeEnvironmentScoresRequestFilter) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{51}
}

func (x *GoogleCloudApigeeV1ComputeEnvironmentScoresRequestFilter) GetScorePath() string {
	if x != nil && x.ScorePath != nil {
		return *x.ScorePath
	}
	return ""
}

type GoogleCloudApigeeV1ComputeEnvironmentScoresResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NextPageToken *string                     `protobuf:"bytes,1,opt,name=next_page_token,json=nextPageToken" json:"next_page_token,omitempty"`
	Scores        []*GoogleCloudApigeeV1Score `protobuf:"bytes,2,rep,name=scores" json:"scores,omitempty"`
}

func (x *GoogleCloudApigeeV1ComputeEnvironmentScoresResponse) Reset() {
	*x = GoogleCloudApigeeV1ComputeEnvironmentScoresResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1ComputeEnvironmentScoresResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1ComputeEnvironmentScoresResponse) ProtoMessage() {}

func (x *GoogleCloudApigeeV1ComputeEnvironmentScoresResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1ComputeEnvironmentScoresResponse.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1ComputeEnvironmentScoresResponse) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{52}
}

func (x *GoogleCloudApigeeV1ComputeEnvironmentScoresResponse) GetNextPageToken() string {
	if x != nil && x.NextPageToken != nil {
		return *x.NextPageToken
	}
	return ""
}

func (x *GoogleCloudApigeeV1ComputeEnvironmentScoresResponse) GetScores() []*GoogleCloudApigeeV1Score {
	if x != nil {
		return x.Scores
	}
	return nil
}

type GoogleCloudApigeeV1ConfigVersion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MajorVersion *int32 `protobuf:"varint,1,opt,name=major_version,json=majorVersion" json:"major_version,omitempty"`
	MinorVersion *int32 `protobuf:"varint,2,opt,name=minor_version,json=minorVersion" json:"minor_version,omitempty"`
}

func (x *GoogleCloudApigeeV1ConfigVersion) Reset() {
	*x = GoogleCloudApigeeV1ConfigVersion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1ConfigVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1ConfigVersion) ProtoMessage() {}

func (x *GoogleCloudApigeeV1ConfigVersion) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1ConfigVersion.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1ConfigVersion) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{53}
}

func (x *GoogleCloudApigeeV1ConfigVersion) GetMajorVersion() int32 {
	if x != nil && x.MajorVersion != nil {
		return *x.MajorVersion
	}
	return 0
}

func (x *GoogleCloudApigeeV1ConfigVersion) GetMinorVersion() int32 {
	if x != nil && x.MinorVersion != nil {
		return *x.MinorVersion
	}
	return 0
}

type GoogleCloudApigeeV1ConnectorsPlatformConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled   *bool  `protobuf:"varint,1,opt,name=enabled" json:"enabled,omitempty"`
	ExpiresAt *int64 `protobuf:"varint,2,opt,name=expires_at,json=expiresAt" json:"expires_at,omitempty"`
}

func (x *GoogleCloudApigeeV1ConnectorsPlatformConfig) Reset() {
	*x = GoogleCloudApigeeV1ConnectorsPlatformConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1ConnectorsPlatformConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1ConnectorsPlatformConfig) ProtoMessage() {}

func (x *GoogleCloudApigeeV1ConnectorsPlatformConfig) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1ConnectorsPlatformConfig.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1ConnectorsPlatformConfig) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{54}
}

func (x *GoogleCloudApigeeV1ConnectorsPlatformConfig) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

func (x *GoogleCloudApigeeV1ConnectorsPlatformConfig) GetExpiresAt() int64 {
	if x != nil && x.ExpiresAt != nil {
		return *x.ExpiresAt
	}
	return 0
}

type GoogleCloudApigeeV1Credential struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiProducts    []*GoogleCloudApigeeV1ApiProductRef `protobuf:"bytes,1,rep,name=api_products,json=apiProducts" json:"api_products,omitempty"`
	Attributes     []*GoogleCloudApigeeV1Attribute     `protobuf:"bytes,2,rep,name=attributes" json:"attributes,omitempty"`
	ConsumerKey    *string                             `protobuf:"bytes,3,opt,name=consumer_key,json=consumerKey" json:"consumer_key,omitempty"`
	ConsumerSecret *string                             `protobuf:"bytes,4,opt,name=consumer_secret,json=consumerSecret" json:"consumer_secret,omitempty"`
	ExpiresAt      *int64                              `protobuf:"varint,5,opt,name=expires_at,json=expiresAt" json:"expires_at,omitempty"`
	IssuedAt       *int64                              `protobuf:"varint,6,opt,name=issued_at,json=issuedAt" json:"issued_at,omitempty"`
	Scopes         []string                            `protobuf:"bytes,7,rep,name=scopes" json:"scopes,omitempty"`
	Status         *string                             `protobuf:"bytes,8,opt,name=status" json:"status,omitempty"`
}

func (x *GoogleCloudApigeeV1Credential) Reset() {
	*x = GoogleCloudApigeeV1Credential{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1Credential) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1Credential) ProtoMessage() {}

func (x *GoogleCloudApigeeV1Credential) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1Credential.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1Credential) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{55}
}

func (x *GoogleCloudApigeeV1Credential) GetApiProducts() []*GoogleCloudApigeeV1ApiProductRef {
	if x != nil {
		return x.ApiProducts
	}
	return nil
}

func (x *GoogleCloudApigeeV1Credential) GetAttributes() []*GoogleCloudApigeeV1Attribute {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *GoogleCloudApigeeV1Credential) GetConsumerKey() string {
	if x != nil && x.ConsumerKey != nil {
		return *x.ConsumerKey
	}
	return ""
}

func (x *GoogleCloudApigeeV1Credential) GetConsumerSecret() string {
	if x != nil && x.ConsumerSecret != nil {
		return *x.ConsumerSecret
	}
	return ""
}

func (x *GoogleCloudApigeeV1Credential) GetExpiresAt() int64 {
	if x != nil && x.ExpiresAt != nil {
		return *x.ExpiresAt
	}
	return 0
}

func (x *GoogleCloudApigeeV1Credential) GetIssuedAt() int64 {
	if x != nil && x.IssuedAt != nil {
		return *x.IssuedAt
	}
	return 0
}

func (x *GoogleCloudApigeeV1Credential) GetScopes() []string {
	if x != nil {
		return x.Scopes
	}
	return nil
}

func (x *GoogleCloudApigeeV1Credential) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

type GoogleCloudApigeeV1CreditDeveloperBalanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionAmount *GoogleTypeMoney `protobuf:"bytes,1,opt,name=transaction_amount,json=transactionAmount" json:"transaction_amount,omitempty"`
	TransactionId     *string          `protobuf:"bytes,2,opt,name=transaction_id,json=transactionId" json:"transaction_id,omitempty"`
}

func (x *GoogleCloudApigeeV1CreditDeveloperBalanceRequest) Reset() {
	*x = GoogleCloudApigeeV1CreditDeveloperBalanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1CreditDeveloperBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1CreditDeveloperBalanceRequest) ProtoMessage() {}

func (x *GoogleCloudApigeeV1CreditDeveloperBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1CreditDeveloperBalanceRequest.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1CreditDeveloperBalanceRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{56}
}

func (x *GoogleCloudApigeeV1CreditDeveloperBalanceRequest) GetTransactionAmount() *GoogleTypeMoney {
	if x != nil {
		return x.TransactionAmount
	}
	return nil
}

func (x *GoogleCloudApigeeV1CreditDeveloperBalanceRequest) GetTransactionId() string {
	if x != nil && x.TransactionId != nil {
		return *x.TransactionId
	}
	return ""
}

type GoogleCloudApigeeV1CustomReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChartType      *string                                  `protobuf:"bytes,1,opt,name=chart_type,json=chartType" json:"chart_type,omitempty"`
	Comments       []string                                 `protobuf:"bytes,2,rep,name=comments" json:"comments,omitempty"`
	CreatedAt      *int64                                   `protobuf:"varint,3,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	Dimensions     []string                                 `protobuf:"bytes,4,rep,name=dimensions" json:"dimensions,omitempty"`
	DisplayName    *string                                  `protobuf:"bytes,5,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	Environment    *string                                  `protobuf:"bytes,6,opt,name=environment" json:"environment,omitempty"`
	Filter         *string                                  `protobuf:"bytes,7,opt,name=filter" json:"filter,omitempty"`
	FromTime       *string                                  `protobuf:"bytes,8,opt,name=from_time,json=fromTime" json:"from_time,omitempty"`
	LastModifiedAt *int64                                   `protobuf:"varint,9,opt,name=last_modified_at,json=lastModifiedAt" json:"last_modified_at,omitempty"`
	LastViewedAt   *int64                                   `protobuf:"varint,10,opt,name=last_viewed_at,json=lastViewedAt" json:"last_viewed_at,omitempty"`
	Limit          *string                                  `protobuf:"bytes,11,opt,name=limit" json:"limit,omitempty"`
	Metrics        []*GoogleCloudApigeeV1CustomReportMetric `protobuf:"bytes,12,rep,name=metrics" json:"metrics,omitempty"`
	Name           *string                                  `protobuf:"bytes,13,opt,name=name" json:"name,omitempty"`
	Offset         *string                                  `protobuf:"bytes,14,opt,name=offset" json:"offset,omitempty"`
	Organization   *string                                  `protobuf:"bytes,15,opt,name=organization" json:"organization,omitempty"`
	Properties     []*GoogleCloudApigeeV1ReportProperty     `protobuf:"bytes,16,rep,name=properties" json:"properties,omitempty"`
	SortByCols     []string                                 `protobuf:"bytes,17,rep,name=sort_by_cols,json=sortByCols" json:"sort_by_cols,omitempty"`
	SortOrder      *string                                  `protobuf:"bytes,18,opt,name=sort_order,json=sortOrder" json:"sort_order,omitempty"`
	Tags           []string                                 `protobuf:"bytes,19,rep,name=tags" json:"tags,omitempty"`
	TimeUnit       *string                                  `protobuf:"bytes,20,opt,name=time_unit,json=timeUnit" json:"time_unit,omitempty"`
	ToTime         *string                                  `protobuf:"bytes,21,opt,name=to_time,json=toTime" json:"to_time,omitempty"`
	Topk           *string                                  `protobuf:"bytes,22,opt,name=topk" json:"topk,omitempty"`
}

func (x *GoogleCloudApigeeV1CustomReport) Reset() {
	*x = GoogleCloudApigeeV1CustomReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1CustomReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1CustomReport) ProtoMessage() {}

func (x *GoogleCloudApigeeV1CustomReport) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1CustomReport.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1CustomReport) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{57}
}

func (x *GoogleCloudApigeeV1CustomReport) GetChartType() string {
	if x != nil && x.ChartType != nil {
		return *x.ChartType
	}
	return ""
}

func (x *GoogleCloudApigeeV1CustomReport) GetComments() []string {
	if x != nil {
		return x.Comments
	}
	return nil
}

func (x *GoogleCloudApigeeV1CustomReport) GetCreatedAt() int64 {
	if x != nil && x.CreatedAt != nil {
		return *x.CreatedAt
	}
	return 0
}

func (x *GoogleCloudApigeeV1CustomReport) GetDimensions() []string {
	if x != nil {
		return x.Dimensions
	}
	return nil
}

func (x *GoogleCloudApigeeV1CustomReport) GetDisplayName() string {
	if x != nil && x.DisplayName != nil {
		return *x.DisplayName
	}
	return ""
}

func (x *GoogleCloudApigeeV1CustomReport) GetEnvironment() string {
	if x != nil && x.Environment != nil {
		return *x.Environment
	}
	return ""
}

func (x *GoogleCloudApigeeV1CustomReport) GetFilter() string {
	if x != nil && x.Filter != nil {
		return *x.Filter
	}
	return ""
}

func (x *GoogleCloudApigeeV1CustomReport) GetFromTime() string {
	if x != nil && x.FromTime != nil {
		return *x.FromTime
	}
	return ""
}

func (x *GoogleCloudApigeeV1CustomReport) GetLastModifiedAt() int64 {
	if x != nil && x.LastModifiedAt != nil {
		return *x.LastModifiedAt
	}
	return 0
}

func (x *GoogleCloudApigeeV1CustomReport) GetLastViewedAt() int64 {
	if x != nil && x.LastViewedAt != nil {
		return *x.LastViewedAt
	}
	return 0
}

func (x *GoogleCloudApigeeV1CustomReport) GetLimit() string {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return ""
}

func (x *GoogleCloudApigeeV1CustomReport) GetMetrics() []*GoogleCloudApigeeV1CustomReportMetric {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *GoogleCloudApigeeV1CustomReport) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GoogleCloudApigeeV1CustomReport) GetOffset() string {
	if x != nil && x.Offset != nil {
		return *x.Offset
	}
	return ""
}

func (x *GoogleCloudApigeeV1CustomReport) GetOrganization() string {
	if x != nil && x.Organization != nil {
		return *x.Organization
	}
	return ""
}

func (x *GoogleCloudApigeeV1CustomReport) GetProperties() []*GoogleCloudApigeeV1ReportProperty {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *GoogleCloudApigeeV1CustomReport) GetSortByCols() []string {
	if x != nil {
		return x.SortByCols
	}
	return nil
}

func (x *GoogleCloudApigeeV1CustomReport) GetSortOrder() string {
	if x != nil && x.SortOrder != nil {
		return *x.SortOrder
	}
	return ""
}

func (x *GoogleCloudApigeeV1CustomReport) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *GoogleCloudApigeeV1CustomReport) GetTimeUnit() string {
	if x != nil && x.TimeUnit != nil {
		return *x.TimeUnit
	}
	return ""
}

func (x *GoogleCloudApigeeV1CustomReport) GetToTime() string {
	if x != nil && x.ToTime != nil {
		return *x.ToTime
	}
	return ""
}

func (x *GoogleCloudApigeeV1CustomReport) GetTopk() string {
	if x != nil && x.Topk != nil {
		return *x.Topk
	}
	return ""
}

type GoogleCloudApigeeV1CustomReportMetric struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Function *string `protobuf:"bytes,1,opt,name=function" json:"function,omitempty"`
	Name     *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (x *GoogleCloudApigeeV1CustomReportMetric) Reset() {
	*x = GoogleCloudApigeeV1CustomReportMetric{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1CustomReportMetric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1CustomReportMetric) ProtoMessage() {}

func (x *GoogleCloudApigeeV1CustomReportMetric) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1CustomReportMetric.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1CustomReportMetric) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{58}
}

func (x *GoogleCloudApigeeV1CustomReportMetric) GetFunction() string {
	if x != nil && x.Function != nil {
		return *x.Function
	}
	return ""
}

func (x *GoogleCloudApigeeV1CustomReportMetric) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GoogleCloudApigeeV1DataCollector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatedAt      *int64  `protobuf:"varint,1,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	Description    *string `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	LastModifiedAt *int64  `protobuf:"varint,3,opt,name=last_modified_at,json=lastModifiedAt" json:"last_modified_at,omitempty"`
	Name           *string `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	Type           *string `protobuf:"bytes,5,opt,name=type" json:"type,omitempty"`
}

func (x *GoogleCloudApigeeV1DataCollector) Reset() {
	*x = GoogleCloudApigeeV1DataCollector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1DataCollector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1DataCollector) ProtoMessage() {}

func (x *GoogleCloudApigeeV1DataCollector) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1DataCollector.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1DataCollector) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{59}
}

func (x *GoogleCloudApigeeV1DataCollector) GetCreatedAt() int64 {
	if x != nil && x.CreatedAt != nil {
		return *x.CreatedAt
	}
	return 0
}

func (x *GoogleCloudApigeeV1DataCollector) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *GoogleCloudApigeeV1DataCollector) GetLastModifiedAt() int64 {
	if x != nil && x.LastModifiedAt != nil {
		return *x.LastModifiedAt
	}
	return 0
}

func (x *GoogleCloudApigeeV1DataCollector) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GoogleCloudApigeeV1DataCollector) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

type GoogleCloudApigeeV1DataCollectorConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Type *string `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
}

func (x *GoogleCloudApigeeV1DataCollectorConfig) Reset() {
	*x = GoogleCloudApigeeV1DataCollectorConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1DataCollectorConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1DataCollectorConfig) ProtoMessage() {}

func (x *GoogleCloudApigeeV1DataCollectorConfig) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1DataCollectorConfig.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1DataCollectorConfig) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{60}
}

func (x *GoogleCloudApigeeV1DataCollectorConfig) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GoogleCloudApigeeV1DataCollectorConfig) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

type GoogleCloudApigeeV1Datastore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateTime      *int64                              `protobuf:"varint,1,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	DatastoreConfig *GoogleCloudApigeeV1DatastoreConfig `protobuf:"bytes,2,opt,name=datastore_config,json=datastoreConfig" json:"datastore_config,omitempty"`
	DisplayName     *string                             `protobuf:"bytes,3,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	LastUpdateTime  *int64                              `protobuf:"varint,4,opt,name=last_update_time,json=lastUpdateTime" json:"last_update_time,omitempty"`
	Org             *string                             `protobuf:"bytes,5,opt,name=org" json:"org,omitempty"`
	Self            *string                             `protobuf:"bytes,6,opt,name=self" json:"self,omitempty"`
	TargetType      *string                             `protobuf:"bytes,7,opt,name=target_type,json=targetType" json:"target_type,omitempty"`
}

func (x *GoogleCloudApigeeV1Datastore) Reset() {
	*x = GoogleCloudApigeeV1Datastore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1Datastore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1Datastore) ProtoMessage() {}

func (x *GoogleCloudApigeeV1Datastore) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1Datastore.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1Datastore) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{61}
}

func (x *GoogleCloudApigeeV1Datastore) GetCreateTime() int64 {
	if x != nil && x.CreateTime != nil {
		return *x.CreateTime
	}
	return 0
}

func (x *GoogleCloudApigeeV1Datastore) GetDatastoreConfig() *GoogleCloudApigeeV1DatastoreConfig {
	if x != nil {
		return x.DatastoreConfig
	}
	return nil
}

func (x *GoogleCloudApigeeV1Datastore) GetDisplayName() string {
	if x != nil && x.DisplayName != nil {
		return *x.DisplayName
	}
	return ""
}

func (x *GoogleCloudApigeeV1Datastore) GetLastUpdateTime() int64 {
	if x != nil && x.LastUpdateTime != nil {
		return *x.LastUpdateTime
	}
	return 0
}

func (x *GoogleCloudApigeeV1Datastore) GetOrg() string {
	if x != nil && x.Org != nil {
		return *x.Org
	}
	return ""
}

func (x *GoogleCloudApigeeV1Datastore) GetSelf() string {
	if x != nil && x.Self != nil {
		return *x.Self
	}
	return ""
}

func (x *GoogleCloudApigeeV1Datastore) GetTargetType() string {
	if x != nil && x.TargetType != nil {
		return *x.TargetType
	}
	return ""
}

type GoogleCloudApigeeV1DatastoreConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BucketName  *string `protobuf:"bytes,1,opt,name=bucket_name,json=bucketName" json:"bucket_name,omitempty"`
	DatasetName *string `protobuf:"bytes,2,opt,name=dataset_name,json=datasetName" json:"dataset_name,omitempty"`
	Path        *string `protobuf:"bytes,3,opt,name=path" json:"path,omitempty"`
	ProjectId   *string `protobuf:"bytes,4,opt,name=project_id,json=projectId" json:"project_id,omitempty"`
	TablePrefix *string `protobuf:"bytes,5,opt,name=table_prefix,json=tablePrefix" json:"table_prefix,omitempty"`
}

func (x *GoogleCloudApigeeV1DatastoreConfig) Reset() {
	*x = GoogleCloudApigeeV1DatastoreConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1DatastoreConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1DatastoreConfig) ProtoMessage() {}

func (x *GoogleCloudApigeeV1DatastoreConfig) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1DatastoreConfig.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1DatastoreConfig) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{62}
}

func (x *GoogleCloudApigeeV1DatastoreConfig) GetBucketName() string {
	if x != nil && x.BucketName != nil {
		return *x.BucketName
	}
	return ""
}

func (x *GoogleCloudApigeeV1DatastoreConfig) GetDatasetName() string {
	if x != nil && x.DatasetName != nil {
		return *x.DatasetName
	}
	return ""
}

func (x *GoogleCloudApigeeV1DatastoreConfig) GetPath() string {
	if x != nil && x.Path != nil {
		return *x.Path
	}
	return ""
}

func (x *GoogleCloudApigeeV1DatastoreConfig) GetProjectId() string {
	if x != nil && x.ProjectId != nil {
		return *x.ProjectId
	}
	return ""
}

func (x *GoogleCloudApigeeV1DatastoreConfig) GetTablePrefix() string {
	if x != nil && x.TablePrefix != nil {
		return *x.TablePrefix
	}
	return ""
}

type GoogleCloudApigeeV1DateRange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	End   *string `protobuf:"bytes,1,opt,name=end" json:"end,omitempty"`
	Start *string `protobuf:"bytes,2,opt,name=start" json:"start,omitempty"`
}

func (x *GoogleCloudApigeeV1DateRange) Reset() {
	*x = GoogleCloudApigeeV1DateRange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1DateRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1DateRange) ProtoMessage() {}

func (x *GoogleCloudApigeeV1DateRange) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1DateRange.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1DateRange) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{63}
}

func (x *GoogleCloudApigeeV1DateRange) GetEnd() string {
	if x != nil && x.End != nil {
		return *x.End
	}
	return ""
}

func (x *GoogleCloudApigeeV1DateRange) GetStart() string {
	if x != nil && x.Start != nil {
		return *x.Start
	}
	return ""
}

type GoogleCloudApigeeV1DebugMask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FaultJSONPaths    []string          `protobuf:"bytes,1,rep,name=fault_j_s_o_n_paths,json=faultJSONPaths" json:"fault_j_s_o_n_paths,omitempty"`
	FaultXPaths       []string          `protobuf:"bytes,2,rep,name=fault_x_paths,json=faultXPaths" json:"fault_x_paths,omitempty"`
	Name              *string           `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Namespaces        map[string]string `protobuf:"bytes,4,rep,name=namespaces" json:"namespaces,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	RequestJSONPaths  []string          `protobuf:"bytes,5,rep,name=request_j_s_o_n_paths,json=requestJSONPaths" json:"request_j_s_o_n_paths,omitempty"`
	RequestXPaths     []string          `protobuf:"bytes,6,rep,name=request_x_paths,json=requestXPaths" json:"request_x_paths,omitempty"`
	ResponseJSONPaths []string          `protobuf:"bytes,7,rep,name=response_j_s_o_n_paths,json=responseJSONPaths" json:"response_j_s_o_n_paths,omitempty"`
	ResponseXPaths    []string          `protobuf:"bytes,8,rep,name=response_x_paths,json=responseXPaths" json:"response_x_paths,omitempty"`
	Variables         []string          `protobuf:"bytes,9,rep,name=variables" json:"variables,omitempty"`
}

func (x *GoogleCloudApigeeV1DebugMask) Reset() {
	*x = GoogleCloudApigeeV1DebugMask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1DebugMask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1DebugMask) ProtoMessage() {}

func (x *GoogleCloudApigeeV1DebugMask) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1DebugMask.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1DebugMask) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{64}
}

func (x *GoogleCloudApigeeV1DebugMask) GetFaultJSONPaths() []string {
	if x != nil {
		return x.FaultJSONPaths
	}
	return nil
}

func (x *GoogleCloudApigeeV1DebugMask) GetFaultXPaths() []string {
	if x != nil {
		return x.FaultXPaths
	}
	return nil
}

func (x *GoogleCloudApigeeV1DebugMask) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GoogleCloudApigeeV1DebugMask) GetNamespaces() map[string]string {
	if x != nil {
		return x.Namespaces
	}
	return nil
}

func (x *GoogleCloudApigeeV1DebugMask) GetRequestJSONPaths() []string {
	if x != nil {
		return x.RequestJSONPaths
	}
	return nil
}

func (x *GoogleCloudApigeeV1DebugMask) GetRequestXPaths() []string {
	if x != nil {
		return x.RequestXPaths
	}
	return nil
}

func (x *GoogleCloudApigeeV1DebugMask) GetResponseJSONPaths() []string {
	if x != nil {
		return x.ResponseJSONPaths
	}
	return nil
}

func (x *GoogleCloudApigeeV1DebugMask) GetResponseXPaths() []string {
	if x != nil {
		return x.ResponseXPaths
	}
	return nil
}

func (x *GoogleCloudApigeeV1DebugMask) GetVariables() []string {
	if x != nil {
		return x.Variables
	}
	return nil
}

type GoogleCloudApigeeV1DebugSession struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count      *int32               `protobuf:"varint,1,opt,name=count" json:"count,omitempty"`
	CreateTime *timestamp.Timestamp `protobuf:"bytes,2,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	Filter     *string              `protobuf:"bytes,3,opt,name=filter" json:"filter,omitempty"`
	Name       *string              `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	Timeout    *int64               `protobuf:"varint,5,opt,name=timeout" json:"timeout,omitempty"`
	Tracesize  *int32               `protobuf:"varint,6,opt,name=tracesize" json:"tracesize,omitempty"`
	Validity   *int32               `protobuf:"varint,7,opt,name=validity" json:"validity,omitempty"`
}

func (x *GoogleCloudApigeeV1DebugSession) Reset() {
	*x = GoogleCloudApigeeV1DebugSession{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1DebugSession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1DebugSession) ProtoMessage() {}

func (x *GoogleCloudApigeeV1DebugSession) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1DebugSession.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1DebugSession) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{65}
}

func (x *GoogleCloudApigeeV1DebugSession) GetCount() int32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

func (x *GoogleCloudApigeeV1DebugSession) GetCreateTime() *timestamp.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *GoogleCloudApigeeV1DebugSession) GetFilter() string {
	if x != nil && x.Filter != nil {
		return *x.Filter
	}
	return ""
}

func (x *GoogleCloudApigeeV1DebugSession) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GoogleCloudApigeeV1DebugSession) GetTimeout() int64 {
	if x != nil && x.Timeout != nil {
		return *x.Timeout
	}
	return 0
}

func (x *GoogleCloudApigeeV1DebugSession) GetTracesize() int32 {
	if x != nil && x.Tracesize != nil {
		return *x.Tracesize
	}
	return 0
}

func (x *GoogleCloudApigeeV1DebugSession) GetValidity() int32 {
	if x != nil && x.Validity != nil {
		return *x.Validity
	}
	return 0
}

type GoogleCloudApigeeV1DebugSessionTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Completed *bool                       `protobuf:"varint,1,opt,name=completed" json:"completed,omitempty"`
	Point     []*GoogleCloudApigeeV1Point `protobuf:"bytes,2,rep,name=point" json:"point,omitempty"`
}

func (x *GoogleCloudApigeeV1DebugSessionTransaction) Reset() {
	*x = GoogleCloudApigeeV1DebugSessionTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1DebugSessionTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1DebugSessionTransaction) ProtoMessage() {}

func (x *GoogleCloudApigeeV1DebugSessionTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1DebugSessionTransaction.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1DebugSessionTransaction) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{66}
}

func (x *GoogleCloudApigeeV1DebugSessionTransaction) GetCompleted() bool {
	if x != nil && x.Completed != nil {
		return *x.Completed
	}
	return false
}

func (x *GoogleCloudApigeeV1DebugSessionTransaction) GetPoint() []*GoogleCloudApigeeV1Point {
	if x != nil {
		return x.Point
	}
	return nil
}

type GoogleCloudApigeeV1DeleteCustomReportResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message *string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
}

func (x *GoogleCloudApigeeV1DeleteCustomReportResponse) Reset() {
	*x = GoogleCloudApigeeV1DeleteCustomReportResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1DeleteCustomReportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1DeleteCustomReportResponse) ProtoMessage() {}

func (x *GoogleCloudApigeeV1DeleteCustomReportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1DeleteCustomReportResponse.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1DeleteCustomReportResponse) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{67}
}

func (x *GoogleCloudApigeeV1DeleteCustomReportResponse) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

type GoogleCloudApigeeV1DeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode   *string `protobuf:"bytes,1,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
	GcpResource *string `protobuf:"bytes,2,opt,name=gcp_resource,json=gcpResource" json:"gcp_resource,omitempty"`
	Message     *string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	RequestId   *string `protobuf:"bytes,4,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
	Status      *string `protobuf:"bytes,5,opt,name=status" json:"status,omitempty"`
}

func (x *GoogleCloudApigeeV1DeleteResponse) Reset() {
	*x = GoogleCloudApigeeV1DeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1DeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1DeleteResponse) ProtoMessage() {}

func (x *GoogleCloudApigeeV1DeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1DeleteResponse.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1DeleteResponse) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{68}
}

func (x *GoogleCloudApigeeV1DeleteResponse) GetErrorCode() string {
	if x != nil && x.ErrorCode != nil {
		return *x.ErrorCode
	}
	return ""
}

func (x *GoogleCloudApigeeV1DeleteResponse) GetGcpResource() string {
	if x != nil && x.GcpResource != nil {
		return *x.GcpResource
	}
	return ""
}

func (x *GoogleCloudApigeeV1DeleteResponse) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

func (x *GoogleCloudApigeeV1DeleteResponse) GetRequestId() string {
	if x != nil && x.RequestId != nil {
		return *x.RequestId
	}
	return ""
}

func (x *GoogleCloudApigeeV1DeleteResponse) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

type GoogleCloudApigeeV1Deployment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiProxy            *string                                                     `protobuf:"bytes,1,opt,name=api_proxy,json=apiProxy" json:"api_proxy,omitempty"`
	DeployStartTime     *int64                                                      `protobuf:"varint,2,opt,name=deploy_start_time,json=deployStartTime" json:"deploy_start_time,omitempty"`
	Environment         *string                                                     `protobuf:"bytes,3,opt,name=environment" json:"environment,omitempty"`
	Errors              []*GoogleRpcStatus                                          `protobuf:"bytes,4,rep,name=errors" json:"errors,omitempty"`
	Instances           []*GoogleCloudApigeeV1InstanceDeploymentStatus              `protobuf:"bytes,5,rep,name=instances" json:"instances,omitempty"`
	Pods                []*GoogleCloudApigeeV1PodStatus                             `protobuf:"bytes,6,rep,name=pods" json:"pods,omitempty"`
	ProxyDeploymentType *string                                                     `protobuf:"bytes,7,opt,name=proxy_deployment_type,json=proxyDeploymentType" json:"proxy_deployment_type,omitempty"`
	Revision            *string                                                     `protobuf:"bytes,8,opt,name=revision" json:"revision,omitempty"`
	RouteConflicts      []*GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict `protobuf:"bytes,9,rep,name=route_conflicts,json=routeConflicts" json:"route_conflicts,omitempty"`
	ServiceAccount      *string                                                     `protobuf:"bytes,10,opt,name=service_account,json=serviceAccount" json:"service_account,omitempty"`
	State               *string                                                     `protobuf:"bytes,11,opt,name=state" json:"state,omitempty"`
}

func (x *GoogleCloudApigeeV1Deployment) Reset() {
	*x = GoogleCloudApigeeV1Deployment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1Deployment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1Deployment) ProtoMessage() {}

func (x *GoogleCloudApigeeV1Deployment) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1Deployment.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1Deployment) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{69}
}

func (x *GoogleCloudApigeeV1Deployment) GetApiProxy() string {
	if x != nil && x.ApiProxy != nil {
		return *x.ApiProxy
	}
	return ""
}

func (x *GoogleCloudApigeeV1Deployment) GetDeployStartTime() int64 {
	if x != nil && x.DeployStartTime != nil {
		return *x.DeployStartTime
	}
	return 0
}

func (x *GoogleCloudApigeeV1Deployment) GetEnvironment() string {
	if x != nil && x.Environment != nil {
		return *x.Environment
	}
	return ""
}

func (x *GoogleCloudApigeeV1Deployment) GetErrors() []*GoogleRpcStatus {
	if x != nil {
		return x.Errors
	}
	return nil
}

func (x *GoogleCloudApigeeV1Deployment) GetInstances() []*GoogleCloudApigeeV1InstanceDeploymentStatus {
	if x != nil {
		return x.Instances
	}
	return nil
}

func (x *GoogleCloudApigeeV1Deployment) GetPods() []*GoogleCloudApigeeV1PodStatus {
	if x != nil {
		return x.Pods
	}
	return nil
}

func (x *GoogleCloudApigeeV1Deployment) GetProxyDeploymentType() string {
	if x != nil && x.ProxyDeploymentType != nil {
		return *x.ProxyDeploymentType
	}
	return ""
}

func (x *GoogleCloudApigeeV1Deployment) GetRevision() string {
	if x != nil && x.Revision != nil {
		return *x.Revision
	}
	return ""
}

func (x *GoogleCloudApigeeV1Deployment) GetRouteConflicts() []*GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict {
	if x != nil {
		return x.RouteConflicts
	}
	return nil
}

func (x *GoogleCloudApigeeV1Deployment) GetServiceAccount() string {
	if x != nil && x.ServiceAccount != nil {
		return *x.ServiceAccount
	}
	return ""
}

func (x *GoogleCloudApigeeV1Deployment) GetState() string {
	if x != nil && x.State != nil {
		return *x.State
	}
	return ""
}

type GoogleCloudApigeeV1DeploymentChangeReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoutingChanges   []*GoogleCloudApigeeV1DeploymentChangeReportRoutingChange   `protobuf:"bytes,1,rep,name=routing_changes,json=routingChanges" json:"routing_changes,omitempty"`
	RoutingConflicts []*GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict `protobuf:"bytes,2,rep,name=routing_conflicts,json=routingConflicts" json:"routing_conflicts,omitempty"`
	ValidationErrors *GoogleRpcPreconditionFailure                               `protobuf:"bytes,3,opt,name=validation_errors,json=validationErrors" json:"validation_errors,omitempty"`
}

func (x *GoogleCloudApigeeV1DeploymentChangeReport) Reset() {
	*x = GoogleCloudApigeeV1DeploymentChangeReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1DeploymentChangeReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1DeploymentChangeReport) ProtoMessage() {}

func (x *GoogleCloudApigeeV1DeploymentChangeReport) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1DeploymentChangeReport.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1DeploymentChangeReport) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{70}
}

func (x *GoogleCloudApigeeV1DeploymentChangeReport) GetRoutingChanges() []*GoogleCloudApigeeV1DeploymentChangeReportRoutingChange {
	if x != nil {
		return x.RoutingChanges
	}
	return nil
}

func (x *GoogleCloudApigeeV1DeploymentChangeReport) GetRoutingConflicts() []*GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict {
	if x != nil {
		return x.RoutingConflicts
	}
	return nil
}

func (x *GoogleCloudApigeeV1DeploymentChangeReport) GetValidationErrors() *GoogleRpcPreconditionFailure {
	if x != nil {
		return x.ValidationErrors
	}
	return nil
}

type GoogleCloudApigeeV1DeploymentChangeReportRoutingChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description           *string                                                     `protobuf:"bytes,1,opt,name=description" json:"description,omitempty"`
	EnvironmentGroup      *string                                                     `protobuf:"bytes,2,opt,name=environment_group,json=environmentGroup" json:"environment_group,omitempty"`
	FromDeployment        *GoogleCloudApigeeV1DeploymentChangeReportRoutingDeployment `protobuf:"bytes,3,opt,name=from_deployment,json=fromDeployment" json:"from_deployment,omitempty"`
	ShouldSequenceRollout *bool                                                       `protobuf:"varint,4,opt,name=should_sequence_rollout,json=shouldSequenceRollout" json:"should_sequence_rollout,omitempty"`
	ToDeployment          *GoogleCloudApigeeV1DeploymentChangeReportRoutingDeployment `protobuf:"bytes,5,opt,name=to_deployment,json=toDeployment" json:"to_deployment,omitempty"`
}

func (x *GoogleCloudApigeeV1DeploymentChangeReportRoutingChange) Reset() {
	*x = GoogleCloudApigeeV1DeploymentChangeReportRoutingChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1DeploymentChangeReportRoutingChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1DeploymentChangeReportRoutingChange) ProtoMessage() {}

func (x *GoogleCloudApigeeV1DeploymentChangeReportRoutingChange) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1DeploymentChangeReportRoutingChange.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1DeploymentChangeReportRoutingChange) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{71}
}

func (x *GoogleCloudApigeeV1DeploymentChangeReportRoutingChange) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *GoogleCloudApigeeV1DeploymentChangeReportRoutingChange) GetEnvironmentGroup() string {
	if x != nil && x.EnvironmentGroup != nil {
		return *x.EnvironmentGroup
	}
	return ""
}

func (x *GoogleCloudApigeeV1DeploymentChangeReportRoutingChange) GetFromDeployment() *GoogleCloudApigeeV1DeploymentChangeReportRoutingDeployment {
	if x != nil {
		return x.FromDeployment
	}
	return nil
}

func (x *GoogleCloudApigeeV1DeploymentChangeReportRoutingChange) GetShouldSequenceRollout() bool {
	if x != nil && x.ShouldSequenceRollout != nil {
		return *x.ShouldSequenceRollout
	}
	return false
}

func (x *GoogleCloudApigeeV1DeploymentChangeReportRoutingChange) GetToDeployment() *GoogleCloudApigeeV1DeploymentChangeReportRoutingDeployment {
	if x != nil {
		return x.ToDeployment
	}
	return nil
}

type GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConflictingDeployment *GoogleCloudApigeeV1DeploymentChangeReportRoutingDeployment `protobuf:"bytes,1,opt,name=conflicting_deployment,json=conflictingDeployment" json:"conflicting_deployment,omitempty"`
	Description           *string                                                     `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	EnvironmentGroup      *string                                                     `protobuf:"bytes,3,opt,name=environment_group,json=environmentGroup" json:"environment_group,omitempty"`
}

func (x *GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict) Reset() {
	*x = GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict) ProtoMessage() {}

func (x *GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{72}
}

func (x *GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict) GetConflictingDeployment() *GoogleCloudApigeeV1DeploymentChangeReportRoutingDeployment {
	if x != nil {
		return x.ConflictingDeployment
	}
	return nil
}

func (x *GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict) GetEnvironmentGroup() string {
	if x != nil && x.EnvironmentGroup != nil {
		return *x.EnvironmentGroup
	}
	return ""
}

type GoogleCloudApigeeV1DeploymentChangeReportRoutingDeployment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiProxy    *string `protobuf:"bytes,1,opt,name=api_proxy,json=apiProxy" json:"api_proxy,omitempty"`
	Basepath    *string `protobuf:"bytes,2,opt,name=basepath" json:"basepath,omitempty"`
	Environment *string `protobuf:"bytes,3,opt,name=environment" json:"environment,omitempty"`
	Revision    *string `protobuf:"bytes,4,opt,name=revision" json:"revision,omitempty"`
}

func (x *GoogleCloudApigeeV1DeploymentChangeReportRoutingDeployment) Reset() {
	*x = GoogleCloudApigeeV1DeploymentChangeReportRoutingDeployment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1DeploymentChangeReportRoutingDeployment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1DeploymentChangeReportRoutingDeployment) ProtoMessage() {}

func (x *GoogleCloudApigeeV1DeploymentChangeReportRoutingDeployment) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1DeploymentChangeReportRoutingDeployment.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1DeploymentChangeReportRoutingDeployment) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{73}
}

func (x *GoogleCloudApigeeV1DeploymentChangeReportRoutingDeployment) GetApiProxy() string {
	if x != nil && x.ApiProxy != nil {
		return *x.ApiProxy
	}
	return ""
}

func (x *GoogleCloudApigeeV1DeploymentChangeReportRoutingDeployment) GetBasepath() string {
	if x != nil && x.Basepath != nil {
		return *x.Basepath
	}
	return ""
}

func (x *GoogleCloudApigeeV1DeploymentChangeReportRoutingDeployment) GetEnvironment() string {
	if x != nil && x.Environment != nil {
		return *x.Environment
	}
	return ""
}

func (x *GoogleCloudApigeeV1DeploymentChangeReportRoutingDeployment) GetRevision() string {
	if x != nil && x.Revision != nil {
		return *x.Revision
	}
	return ""
}

type GoogleCloudApigeeV1DeploymentConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attributes       map[string]string `protobuf:"bytes,1,rep,name=attributes" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	BasePath         *string           `protobuf:"bytes,2,opt,name=base_path,json=basePath" json:"base_path,omitempty"`
	DeploymentGroups []string          `protobuf:"bytes,3,rep,name=deployment_groups,json=deploymentGroups" json:"deployment_groups,omitempty"`
	Endpoints        map[string]string `protobuf:"bytes,4,rep,name=endpoints" json:"endpoints,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Location         *string           `protobuf:"bytes,5,opt,name=location" json:"location,omitempty"`
	Name             *string           `protobuf:"bytes,6,opt,name=name" json:"name,omitempty"`
	ProxyUid         *string           `protobuf:"bytes,7,opt,name=proxy_uid,json=proxyUid" json:"proxy_uid,omitempty"`
	ServiceAccount   *string           `protobuf:"bytes,8,opt,name=service_account,json=serviceAccount" json:"service_account,omitempty"`
	Uid              *string           `protobuf:"bytes,9,opt,name=uid" json:"uid,omitempty"`
}

func (x *GoogleCloudApigeeV1DeploymentConfig) Reset() {
	*x = GoogleCloudApigeeV1DeploymentConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1DeploymentConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1DeploymentConfig) ProtoMessage() {}

func (x *GoogleCloudApigeeV1DeploymentConfig) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1DeploymentConfig.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1DeploymentConfig) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{74}
}

func (x *GoogleCloudApigeeV1DeploymentConfig) GetAttributes() map[string]string {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *GoogleCloudApigeeV1DeploymentConfig) GetBasePath() string {
	if x != nil && x.BasePath != nil {
		return *x.BasePath
	}
	return ""
}

func (x *GoogleCloudApigeeV1DeploymentConfig) GetDeploymentGroups() []string {
	if x != nil {
		return x.DeploymentGroups
	}
	return nil
}

func (x *GoogleCloudApigeeV1DeploymentConfig) GetEndpoints() map[string]string {
	if x != nil {
		return x.Endpoints
	}
	return nil
}

func (x *GoogleCloudApigeeV1DeploymentConfig) GetLocation() string {
	if x != nil && x.Location != nil {
		return *x.Location
	}
	return ""
}

func (x *GoogleCloudApigeeV1DeploymentConfig) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GoogleCloudApigeeV1DeploymentConfig) GetProxyUid() string {
	if x != nil && x.ProxyUid != nil {
		return *x.ProxyUid
	}
	return ""
}

func (x *GoogleCloudApigeeV1DeploymentConfig) GetServiceAccount() string {
	if x != nil && x.ServiceAccount != nil {
		return *x.ServiceAccount
	}
	return ""
}

func (x *GoogleCloudApigeeV1DeploymentConfig) GetUid() string {
	if x != nil && x.Uid != nil {
		return *x.Uid
	}
	return ""
}

type GoogleCloudApigeeV1DeploymentGroupConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeploymentGroupType *string `protobuf:"bytes,1,opt,name=deployment_group_type,json=deploymentGroupType" json:"deployment_group_type,omitempty"`
	Name                *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	RevisionId          *int64  `protobuf:"varint,3,opt,name=revision_id,json=revisionId" json:"revision_id,omitempty"`
	Uid                 *string `protobuf:"bytes,4,opt,name=uid" json:"uid,omitempty"`
}

func (x *GoogleCloudApigeeV1DeploymentGroupConfig) Reset() {
	*x = GoogleCloudApigeeV1DeploymentGroupConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1DeploymentGroupConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1DeploymentGroupConfig) ProtoMessage() {}

func (x *GoogleCloudApigeeV1DeploymentGroupConfig) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1DeploymentGroupConfig.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1DeploymentGroupConfig) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{75}
}

func (x *GoogleCloudApigeeV1DeploymentGroupConfig) GetDeploymentGroupType() string {
	if x != nil && x.DeploymentGroupType != nil {
		return *x.DeploymentGroupType
	}
	return ""
}

func (x *GoogleCloudApigeeV1DeploymentGroupConfig) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GoogleCloudApigeeV1DeploymentGroupConfig) GetRevisionId() int64 {
	if x != nil && x.RevisionId != nil {
		return *x.RevisionId
	}
	return 0
}

func (x *GoogleCloudApigeeV1DeploymentGroupConfig) GetUid() string {
	if x != nil && x.Uid != nil {
		return *x.Uid
	}
	return ""
}

type GoogleCloudApigeeV1Developer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessType       *string                         `protobuf:"bytes,1,opt,name=access_type,json=accessType" json:"access_type,omitempty"`
	AppFamily        *string                         `protobuf:"bytes,2,opt,name=app_family,json=appFamily" json:"app_family,omitempty"`
	Apps             []string                        `protobuf:"bytes,3,rep,name=apps" json:"apps,omitempty"`
	Attributes       []*GoogleCloudApigeeV1Attribute `protobuf:"bytes,4,rep,name=attributes" json:"attributes,omitempty"`
	Companies        []string                        `protobuf:"bytes,5,rep,name=companies" json:"companies,omitempty"`
	CreatedAt        *int64                          `protobuf:"varint,6,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	DeveloperId      *string                         `protobuf:"bytes,7,opt,name=developer_id,json=developerId" json:"developer_id,omitempty"`
	Email            *string                         `protobuf:"bytes,8,opt,name=email" json:"email,omitempty"`
	FirstName        *string                         `protobuf:"bytes,9,opt,name=first_name,json=firstName" json:"first_name,omitempty"`
	LastModifiedAt   *int64                          `protobuf:"varint,10,opt,name=last_modified_at,json=lastModifiedAt" json:"last_modified_at,omitempty"`
	LastName         *string                         `protobuf:"bytes,11,opt,name=last_name,json=lastName" json:"last_name,omitempty"`
	OrganizationName *string                         `protobuf:"bytes,12,opt,name=organization_name,json=organizationName" json:"organization_name,omitempty"`
	Status           *string                         `protobuf:"bytes,13,opt,name=status" json:"status,omitempty"`
	UserName         *string                         `protobuf:"bytes,14,opt,name=user_name,json=userName" json:"user_name,omitempty"`
}

func (x *GoogleCloudApigeeV1Developer) Reset() {
	*x = GoogleCloudApigeeV1Developer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1Developer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1Developer) ProtoMessage() {}

func (x *GoogleCloudApigeeV1Developer) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1Developer.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1Developer) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{76}
}

func (x *GoogleCloudApigeeV1Developer) GetAccessType() string {
	if x != nil && x.AccessType != nil {
		return *x.AccessType
	}
	return ""
}

func (x *GoogleCloudApigeeV1Developer) GetAppFamily() string {
	if x != nil && x.AppFamily != nil {
		return *x.AppFamily
	}
	return ""
}

func (x *GoogleCloudApigeeV1Developer) GetApps() []string {
	if x != nil {
		return x.Apps
	}
	return nil
}

func (x *GoogleCloudApigeeV1Developer) GetAttributes() []*GoogleCloudApigeeV1Attribute {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *GoogleCloudApigeeV1Developer) GetCompanies() []string {
	if x != nil {
		return x.Companies
	}
	return nil
}

func (x *GoogleCloudApigeeV1Developer) GetCreatedAt() int64 {
	if x != nil && x.CreatedAt != nil {
		return *x.CreatedAt
	}
	return 0
}

func (x *GoogleCloudApigeeV1Developer) GetDeveloperId() string {
	if x != nil && x.DeveloperId != nil {
		return *x.DeveloperId
	}
	return ""
}

func (x *GoogleCloudApigeeV1Developer) GetEmail() string {
	if x != nil && x.Email != nil {
		return *x.Email
	}
	return ""
}

func (x *GoogleCloudApigeeV1Developer) GetFirstName() string {
	if x != nil && x.FirstName != nil {
		return *x.FirstName
	}
	return ""
}

func (x *GoogleCloudApigeeV1Developer) GetLastModifiedAt() int64 {
	if x != nil && x.LastModifiedAt != nil {
		return *x.LastModifiedAt
	}
	return 0
}

func (x *GoogleCloudApigeeV1Developer) GetLastName() string {
	if x != nil && x.LastName != nil {
		return *x.LastName
	}
	return ""
}

func (x *GoogleCloudApigeeV1Developer) GetOrganizationName() string {
	if x != nil && x.OrganizationName != nil {
		return *x.OrganizationName
	}
	return ""
}

func (x *GoogleCloudApigeeV1Developer) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

func (x *GoogleCloudApigeeV1Developer) GetUserName() string {
	if x != nil && x.UserName != nil {
		return *x.UserName
	}
	return ""
}

type GoogleCloudApigeeV1DeveloperApp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiProducts    []string                         `protobuf:"bytes,1,rep,name=api_products,json=apiProducts" json:"api_products,omitempty"`
	AppFamily      *string                          `protobuf:"bytes,2,opt,name=app_family,json=appFamily" json:"app_family,omitempty"`
	AppId          *string                          `protobuf:"bytes,3,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	Attributes     []*GoogleCloudApigeeV1Attribute  `protobuf:"bytes,4,rep,name=attributes" json:"attributes,omitempty"`
	CallbackUrl    *string                          `protobuf:"bytes,5,opt,name=callback_url,json=callbackUrl" json:"callback_url,omitempty"`
	CreatedAt      *int64                           `protobuf:"varint,6,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	Credentials    []*GoogleCloudApigeeV1Credential `protobuf:"bytes,7,rep,name=credentials" json:"credentials,omitempty"`
	DeveloperId    *string                          `protobuf:"bytes,8,opt,name=developer_id,json=developerId" json:"developer_id,omitempty"`
	KeyExpiresIn   *int64                           `protobuf:"varint,9,opt,name=key_expires_in,json=keyExpiresIn" json:"key_expires_in,omitempty"`
	LastModifiedAt *int64                           `protobuf:"varint,10,opt,name=last_modified_at,json=lastModifiedAt" json:"last_modified_at,omitempty"`
	Name           *string                          `protobuf:"bytes,11,opt,name=name" json:"name,omitempty"`
	Scopes         []string                         `protobuf:"bytes,12,rep,name=scopes" json:"scopes,omitempty"`
	Status         *string                          `protobuf:"bytes,13,opt,name=status" json:"status,omitempty"`
}

func (x *GoogleCloudApigeeV1DeveloperApp) Reset() {
	*x = GoogleCloudApigeeV1DeveloperApp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1DeveloperApp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1DeveloperApp) ProtoMessage() {}

func (x *GoogleCloudApigeeV1DeveloperApp) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1DeveloperApp.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1DeveloperApp) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{77}
}

func (x *GoogleCloudApigeeV1DeveloperApp) GetApiProducts() []string {
	if x != nil {
		return x.ApiProducts
	}
	return nil
}

func (x *GoogleCloudApigeeV1DeveloperApp) GetAppFamily() string {
	if x != nil && x.AppFamily != nil {
		return *x.AppFamily
	}
	return ""
}

func (x *GoogleCloudApigeeV1DeveloperApp) GetAppId() string {
	if x != nil && x.AppId != nil {
		return *x.AppId
	}
	return ""
}

func (x *GoogleCloudApigeeV1DeveloperApp) GetAttributes() []*GoogleCloudApigeeV1Attribute {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *GoogleCloudApigeeV1DeveloperApp) GetCallbackUrl() string {
	if x != nil && x.CallbackUrl != nil {
		return *x.CallbackUrl
	}
	return ""
}

func (x *GoogleCloudApigeeV1DeveloperApp) GetCreatedAt() int64 {
	if x != nil && x.CreatedAt != nil {
		return *x.CreatedAt
	}
	return 0
}

func (x *GoogleCloudApigeeV1DeveloperApp) GetCredentials() []*GoogleCloudApigeeV1Credential {
	if x != nil {
		return x.Credentials
	}
	return nil
}

func (x *GoogleCloudApigeeV1DeveloperApp) GetDeveloperId() string {
	if x != nil && x.DeveloperId != nil {
		return *x.DeveloperId
	}
	return ""
}

func (x *GoogleCloudApigeeV1DeveloperApp) GetKeyExpiresIn() int64 {
	if x != nil && x.KeyExpiresIn != nil {
		return *x.KeyExpiresIn
	}
	return 0
}

func (x *GoogleCloudApigeeV1DeveloperApp) GetLastModifiedAt() int64 {
	if x != nil && x.LastModifiedAt != nil {
		return *x.LastModifiedAt
	}
	return 0
}

func (x *GoogleCloudApigeeV1DeveloperApp) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GoogleCloudApigeeV1DeveloperApp) GetScopes() []string {
	if x != nil {
		return x.Scopes
	}
	return nil
}

func (x *GoogleCloudApigeeV1DeveloperApp) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

type GoogleCloudApigeeV1DeveloperAppKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiProducts      []*any1.Any                     `protobuf:"bytes,1,rep,name=api_products,json=apiProducts" json:"api_products,omitempty"`
	Attributes       []*GoogleCloudApigeeV1Attribute `protobuf:"bytes,2,rep,name=attributes" json:"attributes,omitempty"`
	ConsumerKey      *string                         `protobuf:"bytes,3,opt,name=consumer_key,json=consumerKey" json:"consumer_key,omitempty"`
	ConsumerSecret   *string                         `protobuf:"bytes,4,opt,name=consumer_secret,json=consumerSecret" json:"consumer_secret,omitempty"`
	ExpiresAt        *int64                          `protobuf:"varint,5,opt,name=expires_at,json=expiresAt" json:"expires_at,omitempty"`
	ExpiresInSeconds *int64                          `protobuf:"varint,6,opt,name=expires_in_seconds,json=expiresInSeconds" json:"expires_in_seconds,omitempty"`
	IssuedAt         *int64                          `protobuf:"varint,7,opt,name=issued_at,json=issuedAt" json:"issued_at,omitempty"`
	Scopes           []string                        `protobuf:"bytes,8,rep,name=scopes" json:"scopes,omitempty"`
	Status           *string                         `protobuf:"bytes,9,opt,name=status" json:"status,omitempty"`
}

func (x *GoogleCloudApigeeV1DeveloperAppKey) Reset() {
	*x = GoogleCloudApigeeV1DeveloperAppKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1DeveloperAppKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1DeveloperAppKey) ProtoMessage() {}

func (x *GoogleCloudApigeeV1DeveloperAppKey) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1DeveloperAppKey.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1DeveloperAppKey) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{78}
}

func (x *GoogleCloudApigeeV1DeveloperAppKey) GetApiProducts() []*any1.Any {
	if x != nil {
		return x.ApiProducts
	}
	return nil
}

func (x *GoogleCloudApigeeV1DeveloperAppKey) GetAttributes() []*GoogleCloudApigeeV1Attribute {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *GoogleCloudApigeeV1DeveloperAppKey) GetConsumerKey() string {
	if x != nil && x.ConsumerKey != nil {
		return *x.ConsumerKey
	}
	return ""
}

func (x *GoogleCloudApigeeV1DeveloperAppKey) GetConsumerSecret() string {
	if x != nil && x.ConsumerSecret != nil {
		return *x.ConsumerSecret
	}
	return ""
}

func (x *GoogleCloudApigeeV1DeveloperAppKey) GetExpiresAt() int64 {
	if x != nil && x.ExpiresAt != nil {
		return *x.ExpiresAt
	}
	return 0
}

func (x *GoogleCloudApigeeV1DeveloperAppKey) GetExpiresInSeconds() int64 {
	if x != nil && x.ExpiresInSeconds != nil {
		return *x.ExpiresInSeconds
	}
	return 0
}

func (x *GoogleCloudApigeeV1DeveloperAppKey) GetIssuedAt() int64 {
	if x != nil && x.IssuedAt != nil {
		return *x.IssuedAt
	}
	return 0
}

func (x *GoogleCloudApigeeV1DeveloperAppKey) GetScopes() []string {
	if x != nil {
		return x.Scopes
	}
	return nil
}

func (x *GoogleCloudApigeeV1DeveloperAppKey) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

type GoogleCloudApigeeV1DeveloperBalance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Wallets []*GoogleCloudApigeeV1DeveloperBalanceWallet `protobuf:"bytes,1,rep,name=wallets" json:"wallets,omitempty"`
}

func (x *GoogleCloudApigeeV1DeveloperBalance) Reset() {
	*x = GoogleCloudApigeeV1DeveloperBalance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1DeveloperBalance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1DeveloperBalance) ProtoMessage() {}

func (x *GoogleCloudApigeeV1DeveloperBalance) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1DeveloperBalance.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1DeveloperBalance) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{79}
}

func (x *GoogleCloudApigeeV1DeveloperBalance) GetWallets() []*GoogleCloudApigeeV1DeveloperBalanceWallet {
	if x != nil {
		return x.Wallets
	}
	return nil
}

type GoogleCloudApigeeV1DeveloperBalanceWallet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Balance        *GoogleTypeMoney `protobuf:"bytes,1,opt,name=balance" json:"balance,omitempty"`
	LastCreditTime *int64           `protobuf:"varint,2,opt,name=last_credit_time,json=lastCreditTime" json:"last_credit_time,omitempty"`
}

func (x *GoogleCloudApigeeV1DeveloperBalanceWallet) Reset() {
	*x = GoogleCloudApigeeV1DeveloperBalanceWallet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1DeveloperBalanceWallet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1DeveloperBalanceWallet) ProtoMessage() {}

func (x *GoogleCloudApigeeV1DeveloperBalanceWallet) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1DeveloperBalanceWallet.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1DeveloperBalanceWallet) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{80}
}

func (x *GoogleCloudApigeeV1DeveloperBalanceWallet) GetBalance() *GoogleTypeMoney {
	if x != nil {
		return x.Balance
	}
	return nil
}

func (x *GoogleCloudApigeeV1DeveloperBalanceWallet) GetLastCreditTime() int64 {
	if x != nil && x.LastCreditTime != nil {
		return *x.LastCreditTime
	}
	return 0
}

type GoogleCloudApigeeV1DeveloperMonetizationConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BillingType *string `protobuf:"bytes,1,opt,name=billing_type,json=billingType" json:"billing_type,omitempty"`
}

func (x *GoogleCloudApigeeV1DeveloperMonetizationConfig) Reset() {
	*x = GoogleCloudApigeeV1DeveloperMonetizationConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1DeveloperMonetizationConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1DeveloperMonetizationConfig) ProtoMessage() {}

func (x *GoogleCloudApigeeV1DeveloperMonetizationConfig) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1DeveloperMonetizationConfig.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1DeveloperMonetizationConfig) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{81}
}

func (x *GoogleCloudApigeeV1DeveloperMonetizationConfig) GetBillingType() string {
	if x != nil && x.BillingType != nil {
		return *x.BillingType
	}
	return ""
}

type GoogleCloudApigeeV1DeveloperSubscription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Apiproduct     *string `protobuf:"bytes,1,opt,name=apiproduct" json:"apiproduct,omitempty"`
	CreatedAt      *int64  `protobuf:"varint,2,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	EndTime        *int64  `protobuf:"varint,3,opt,name=end_time,json=endTime" json:"end_time,omitempty"`
	LastModifiedAt *int64  `protobuf:"varint,4,opt,name=last_modified_at,json=lastModifiedAt" json:"last_modified_at,omitempty"`
	Name           *string `protobuf:"bytes,5,opt,name=name" json:"name,omitempty"`
	StartTime      *int64  `protobuf:"varint,6,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
}

func (x *GoogleCloudApigeeV1DeveloperSubscription) Reset() {
	*x = GoogleCloudApigeeV1DeveloperSubscription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1DeveloperSubscription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1DeveloperSubscription) ProtoMessage() {}

func (x *GoogleCloudApigeeV1DeveloperSubscription) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1DeveloperSubscription.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1DeveloperSubscription) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{82}
}

func (x *GoogleCloudApigeeV1DeveloperSubscription) GetApiproduct() string {
	if x != nil && x.Apiproduct != nil {
		return *x.Apiproduct
	}
	return ""
}

func (x *GoogleCloudApigeeV1DeveloperSubscription) GetCreatedAt() int64 {
	if x != nil && x.CreatedAt != nil {
		return *x.CreatedAt
	}
	return 0
}

func (x *GoogleCloudApigeeV1DeveloperSubscription) GetEndTime() int64 {
	if x != nil && x.EndTime != nil {
		return *x.EndTime
	}
	return 0
}

func (x *GoogleCloudApigeeV1DeveloperSubscription) GetLastModifiedAt() int64 {
	if x != nil && x.LastModifiedAt != nil {
		return *x.LastModifiedAt
	}
	return 0
}

func (x *GoogleCloudApigeeV1DeveloperSubscription) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GoogleCloudApigeeV1DeveloperSubscription) GetStartTime() int64 {
	if x != nil && x.StartTime != nil {
		return *x.StartTime
	}
	return 0
}

type GoogleCloudApigeeV1DimensionMetric struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IndividualNames []string                     `protobuf:"bytes,1,rep,name=individual_names,json=individualNames" json:"individual_names,omitempty"`
	Metrics         []*GoogleCloudApigeeV1Metric `protobuf:"bytes,2,rep,name=metrics" json:"metrics,omitempty"`
	Name            *string                      `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
}

func (x *GoogleCloudApigeeV1DimensionMetric) Reset() {
	*x = GoogleCloudApigeeV1DimensionMetric{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1DimensionMetric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1DimensionMetric) ProtoMessage() {}

func (x *GoogleCloudApigeeV1DimensionMetric) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1DimensionMetric.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1DimensionMetric) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{83}
}

func (x *GoogleCloudApigeeV1DimensionMetric) GetIndividualNames() []string {
	if x != nil {
		return x.IndividualNames
	}
	return nil
}

func (x *GoogleCloudApigeeV1DimensionMetric) GetMetrics() []*GoogleCloudApigeeV1Metric {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *GoogleCloudApigeeV1DimensionMetric) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GoogleCloudApigeeV1DisableSecurityActionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GoogleCloudApigeeV1DisableSecurityActionRequest) Reset() {
	*x = GoogleCloudApigeeV1DisableSecurityActionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1DisableSecurityActionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1DisableSecurityActionRequest) ProtoMessage() {}

func (x *GoogleCloudApigeeV1DisableSecurityActionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1DisableSecurityActionRequest.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1DisableSecurityActionRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{84}
}

type GoogleCloudApigeeV1DocumentationFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Contents    []byte  `protobuf:"bytes,1,opt,name=contents" json:"contents,omitempty"`
	DisplayName *string `protobuf:"bytes,2,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
}

func (x *GoogleCloudApigeeV1DocumentationFile) Reset() {
	*x = GoogleCloudApigeeV1DocumentationFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1DocumentationFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1DocumentationFile) ProtoMessage() {}

func (x *GoogleCloudApigeeV1DocumentationFile) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1DocumentationFile.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1DocumentationFile) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{85}
}

func (x *GoogleCloudApigeeV1DocumentationFile) GetContents() []byte {
	if x != nil {
		return x.Contents
	}
	return nil
}

func (x *GoogleCloudApigeeV1DocumentationFile) GetDisplayName() string {
	if x != nil && x.DisplayName != nil {
		return *x.DisplayName
	}
	return ""
}

type GoogleCloudApigeeV1EnableSecurityActionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GoogleCloudApigeeV1EnableSecurityActionRequest) Reset() {
	*x = GoogleCloudApigeeV1EnableSecurityActionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1EnableSecurityActionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1EnableSecurityActionRequest) ProtoMessage() {}

func (x *GoogleCloudApigeeV1EnableSecurityActionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1EnableSecurityActionRequest.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1EnableSecurityActionRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{86}
}

type GoogleCloudApigeeV1EndpointAttachment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConnectionState   *string `protobuf:"bytes,1,opt,name=connection_state,json=connectionState" json:"connection_state,omitempty"`
	Host              *string `protobuf:"bytes,2,opt,name=host" json:"host,omitempty"`
	Location          *string `protobuf:"bytes,3,opt,name=location" json:"location,omitempty"`
	Name              *string `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	ServiceAttachment *string `protobuf:"bytes,5,opt,name=service_attachment,json=serviceAttachment" json:"service_attachment,omitempty"`
	State             *string `protobuf:"bytes,6,opt,name=state" json:"state,omitempty"`
}

func (x *GoogleCloudApigeeV1EndpointAttachment) Reset() {
	*x = GoogleCloudApigeeV1EndpointAttachment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1EndpointAttachment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1EndpointAttachment) ProtoMessage() {}

func (x *GoogleCloudApigeeV1EndpointAttachment) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1EndpointAttachment.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1EndpointAttachment) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{87}
}

func (x *GoogleCloudApigeeV1EndpointAttachment) GetConnectionState() string {
	if x != nil && x.ConnectionState != nil {
		return *x.ConnectionState
	}
	return ""
}

func (x *GoogleCloudApigeeV1EndpointAttachment) GetHost() string {
	if x != nil && x.Host != nil {
		return *x.Host
	}
	return ""
}

func (x *GoogleCloudApigeeV1EndpointAttachment) GetLocation() string {
	if x != nil && x.Location != nil {
		return *x.Location
	}
	return ""
}

func (x *GoogleCloudApigeeV1EndpointAttachment) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GoogleCloudApigeeV1EndpointAttachment) GetServiceAttachment() string {
	if x != nil && x.ServiceAttachment != nil {
		return *x.ServiceAttachment
	}
	return ""
}

func (x *GoogleCloudApigeeV1EndpointAttachment) GetState() string {
	if x != nil && x.State != nil {
		return *x.State
	}
	return ""
}

type GoogleCloudApigeeV1EndpointChainingRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeploymentGroup *string  `protobuf:"bytes,1,opt,name=deployment_group,json=deploymentGroup" json:"deployment_group,omitempty"`
	ProxyIds        []string `protobuf:"bytes,2,rep,name=proxy_ids,json=proxyIds" json:"proxy_ids,omitempty"`
}

func (x *GoogleCloudApigeeV1EndpointChainingRule) Reset() {
	*x = GoogleCloudApigeeV1EndpointChainingRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1EndpointChainingRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1EndpointChainingRule) ProtoMessage() {}

func (x *GoogleCloudApigeeV1EndpointChainingRule) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1EndpointChainingRule.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1EndpointChainingRule) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{88}
}

func (x *GoogleCloudApigeeV1EndpointChainingRule) GetDeploymentGroup() string {
	if x != nil && x.DeploymentGroup != nil {
		return *x.DeploymentGroup
	}
	return ""
}

func (x *GoogleCloudApigeeV1EndpointChainingRule) GetProxyIds() []string {
	if x != nil {
		return x.ProxyIds
	}
	return nil
}

type GoogleCloudApigeeV1EntityMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatedAt      *int64  `protobuf:"varint,1,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	LastModifiedAt *int64  `protobuf:"varint,2,opt,name=last_modified_at,json=lastModifiedAt" json:"last_modified_at,omitempty"`
	SubType        *string `protobuf:"bytes,3,opt,name=sub_type,json=subType" json:"sub_type,omitempty"`
}

func (x *GoogleCloudApigeeV1EntityMetadata) Reset() {
	*x = GoogleCloudApigeeV1EntityMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1EntityMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1EntityMetadata) ProtoMessage() {}

func (x *GoogleCloudApigeeV1EntityMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1EntityMetadata.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1EntityMetadata) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{89}
}

func (x *GoogleCloudApigeeV1EntityMetadata) GetCreatedAt() int64 {
	if x != nil && x.CreatedAt != nil {
		return *x.CreatedAt
	}
	return 0
}

func (x *GoogleCloudApigeeV1EntityMetadata) GetLastModifiedAt() int64 {
	if x != nil && x.LastModifiedAt != nil {
		return *x.LastModifiedAt
	}
	return 0
}

func (x *GoogleCloudApigeeV1EntityMetadata) GetSubType() string {
	if x != nil && x.SubType != nil {
		return *x.SubType
	}
	return ""
}

type GoogleCloudApigeeV1Environment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiProxyType         *string                        `protobuf:"bytes,1,opt,name=api_proxy_type,json=apiProxyType" json:"api_proxy_type,omitempty"`
	CreatedAt            *int64                         `protobuf:"varint,2,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	DeploymentType       *string                        `protobuf:"bytes,3,opt,name=deployment_type,json=deploymentType" json:"deployment_type,omitempty"`
	Description          *string                        `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	DisplayName          *string                        `protobuf:"bytes,5,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	ForwardProxyUri      *string                        `protobuf:"bytes,6,opt,name=forward_proxy_uri,json=forwardProxyUri" json:"forward_proxy_uri,omitempty"`
	HasAttachedFlowHooks *bool                          `protobuf:"varint,7,opt,name=has_attached_flow_hooks,json=hasAttachedFlowHooks" json:"has_attached_flow_hooks,omitempty"`
	LastModifiedAt       *int64                         `protobuf:"varint,8,opt,name=last_modified_at,json=lastModifiedAt" json:"last_modified_at,omitempty"`
	Name                 *string                        `protobuf:"bytes,9,opt,name=name" json:"name,omitempty"`
	NodeConfig           *GoogleCloudApigeeV1NodeConfig `protobuf:"bytes,10,opt,name=node_config,json=nodeConfig" json:"node_config,omitempty"`
	Properties           *GoogleCloudApigeeV1Properties `protobuf:"bytes,11,opt,name=properties" json:"properties,omitempty"`
	State                *string                        `protobuf:"bytes,12,opt,name=state" json:"state,omitempty"`
	Type                 *string                        `protobuf:"bytes,13,opt,name=type" json:"type,omitempty"`
}

func (x *GoogleCloudApigeeV1Environment) Reset() {
	*x = GoogleCloudApigeeV1Environment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1Environment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1Environment) ProtoMessage() {}

func (x *GoogleCloudApigeeV1Environment) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1Environment.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1Environment) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{90}
}

func (x *GoogleCloudApigeeV1Environment) GetApiProxyType() string {
	if x != nil && x.ApiProxyType != nil {
		return *x.ApiProxyType
	}
	return ""
}

func (x *GoogleCloudApigeeV1Environment) GetCreatedAt() int64 {
	if x != nil && x.CreatedAt != nil {
		return *x.CreatedAt
	}
	return 0
}

func (x *GoogleCloudApigeeV1Environment) GetDeploymentType() string {
	if x != nil && x.DeploymentType != nil {
		return *x.DeploymentType
	}
	return ""
}

func (x *GoogleCloudApigeeV1Environment) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *GoogleCloudApigeeV1Environment) GetDisplayName() string {
	if x != nil && x.DisplayName != nil {
		return *x.DisplayName
	}
	return ""
}

func (x *GoogleCloudApigeeV1Environment) GetForwardProxyUri() string {
	if x != nil && x.ForwardProxyUri != nil {
		return *x.ForwardProxyUri
	}
	return ""
}

func (x *GoogleCloudApigeeV1Environment) GetHasAttachedFlowHooks() bool {
	if x != nil && x.HasAttachedFlowHooks != nil {
		return *x.HasAttachedFlowHooks
	}
	return false
}

func (x *GoogleCloudApigeeV1Environment) GetLastModifiedAt() int64 {
	if x != nil && x.LastModifiedAt != nil {
		return *x.LastModifiedAt
	}
	return 0
}

func (x *GoogleCloudApigeeV1Environment) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GoogleCloudApigeeV1Environment) GetNodeConfig() *GoogleCloudApigeeV1NodeConfig {
	if x != nil {
		return x.NodeConfig
	}
	return nil
}

func (x *GoogleCloudApigeeV1Environment) GetProperties() *GoogleCloudApigeeV1Properties {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *GoogleCloudApigeeV1Environment) GetState() string {
	if x != nil && x.State != nil {
		return *x.State
	}
	return ""
}

func (x *GoogleCloudApigeeV1Environment) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

type GoogleCloudApigeeV1EnvironmentConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddonsConfig          *GoogleCloudApigeeV1RuntimeAddonsConfig     `protobuf:"bytes,1,opt,name=addons_config,json=addonsConfig" json:"addons_config,omitempty"`
	ArcConfigLocation     *string                                     `protobuf:"bytes,2,opt,name=arc_config_location,json=arcConfigLocation" json:"arc_config_location,omitempty"`
	CreateTime            *timestamp.Timestamp                        `protobuf:"bytes,3,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	DataCollectors        []*GoogleCloudApigeeV1DataCollectorConfig   `protobuf:"bytes,4,rep,name=data_collectors,json=dataCollectors" json:"data_collectors,omitempty"`
	DebugMask             *GoogleCloudApigeeV1DebugMask               `protobuf:"bytes,5,opt,name=debug_mask,json=debugMask" json:"debug_mask,omitempty"`
	DeploymentGroups      []*GoogleCloudApigeeV1DeploymentGroupConfig `protobuf:"bytes,6,rep,name=deployment_groups,json=deploymentGroups" json:"deployment_groups,omitempty"`
	Deployments           []*GoogleCloudApigeeV1DeploymentConfig      `protobuf:"bytes,7,rep,name=deployments" json:"deployments,omitempty"`
	EnvScopedRevisionId   *int64                                      `protobuf:"varint,8,opt,name=env_scoped_revision_id,json=envScopedRevisionId" json:"env_scoped_revision_id,omitempty"`
	FeatureFlags          map[string]string                           `protobuf:"bytes,9,rep,name=feature_flags,json=featureFlags" json:"feature_flags,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Flowhooks             []*GoogleCloudApigeeV1FlowHookConfig        `protobuf:"bytes,10,rep,name=flowhooks" json:"flowhooks,omitempty"`
	ForwardProxyUri       *string                                     `protobuf:"bytes,11,opt,name=forward_proxy_uri,json=forwardProxyUri" json:"forward_proxy_uri,omitempty"`
	GatewayConfigLocation *string                                     `protobuf:"bytes,12,opt,name=gateway_config_location,json=gatewayConfigLocation" json:"gateway_config_location,omitempty"`
	Keystores             []*GoogleCloudApigeeV1KeystoreConfig        `protobuf:"bytes,13,rep,name=keystores" json:"keystores,omitempty"`
	Name                  *string                                     `protobuf:"bytes,14,opt,name=name" json:"name,omitempty"`
	Provider              *string                                     `protobuf:"bytes,15,opt,name=provider" json:"provider,omitempty"`
	PubsubTopic           *string                                     `protobuf:"bytes,16,opt,name=pubsub_topic,json=pubsubTopic" json:"pubsub_topic,omitempty"`
	ResourceReferences    []*GoogleCloudApigeeV1ReferenceConfig       `protobuf:"bytes,17,rep,name=resource_references,json=resourceReferences" json:"resource_references,omitempty"`
	Resources             []*GoogleCloudApigeeV1ResourceConfig        `protobuf:"bytes,18,rep,name=resources" json:"resources,omitempty"`
	RevisionId            *int64                                      `protobuf:"varint,19,opt,name=revision_id,json=revisionId" json:"revision_id,omitempty"`
	SequenceNumber        *int64                                      `protobuf:"varint,20,opt,name=sequence_number,json=sequenceNumber" json:"sequence_number,omitempty"`
	Targets               []*GoogleCloudApigeeV1TargetServerConfig    `protobuf:"bytes,21,rep,name=targets" json:"targets,omitempty"`
	TraceConfig           *GoogleCloudApigeeV1RuntimeTraceConfig      `protobuf:"bytes,22,opt,name=trace_config,json=traceConfig" json:"trace_config,omitempty"`
	Uid                   *string                                     `protobuf:"bytes,23,opt,name=uid" json:"uid,omitempty"`
}

func (x *GoogleCloudApigeeV1EnvironmentConfig) Reset() {
	*x = GoogleCloudApigeeV1EnvironmentConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1EnvironmentConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1EnvironmentConfig) ProtoMessage() {}

func (x *GoogleCloudApigeeV1EnvironmentConfig) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1EnvironmentConfig.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1EnvironmentConfig) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{91}
}

func (x *GoogleCloudApigeeV1EnvironmentConfig) GetAddonsConfig() *GoogleCloudApigeeV1RuntimeAddonsConfig {
	if x != nil {
		return x.AddonsConfig
	}
	return nil
}

func (x *GoogleCloudApigeeV1EnvironmentConfig) GetArcConfigLocation() string {
	if x != nil && x.ArcConfigLocation != nil {
		return *x.ArcConfigLocation
	}
	return ""
}

func (x *GoogleCloudApigeeV1EnvironmentConfig) GetCreateTime() *timestamp.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *GoogleCloudApigeeV1EnvironmentConfig) GetDataCollectors() []*GoogleCloudApigeeV1DataCollectorConfig {
	if x != nil {
		return x.DataCollectors
	}
	return nil
}

func (x *GoogleCloudApigeeV1EnvironmentConfig) GetDebugMask() *GoogleCloudApigeeV1DebugMask {
	if x != nil {
		return x.DebugMask
	}
	return nil
}

func (x *GoogleCloudApigeeV1EnvironmentConfig) GetDeploymentGroups() []*GoogleCloudApigeeV1DeploymentGroupConfig {
	if x != nil {
		return x.DeploymentGroups
	}
	return nil
}

func (x *GoogleCloudApigeeV1EnvironmentConfig) GetDeployments() []*GoogleCloudApigeeV1DeploymentConfig {
	if x != nil {
		return x.Deployments
	}
	return nil
}

func (x *GoogleCloudApigeeV1EnvironmentConfig) GetEnvScopedRevisionId() int64 {
	if x != nil && x.EnvScopedRevisionId != nil {
		return *x.EnvScopedRevisionId
	}
	return 0
}

func (x *GoogleCloudApigeeV1EnvironmentConfig) GetFeatureFlags() map[string]string {
	if x != nil {
		return x.FeatureFlags
	}
	return nil
}

func (x *GoogleCloudApigeeV1EnvironmentConfig) GetFlowhooks() []*GoogleCloudApigeeV1FlowHookConfig {
	if x != nil {
		return x.Flowhooks
	}
	return nil
}

func (x *GoogleCloudApigeeV1EnvironmentConfig) GetForwardProxyUri() string {
	if x != nil && x.ForwardProxyUri != nil {
		return *x.ForwardProxyUri
	}
	return ""
}

func (x *GoogleCloudApigeeV1EnvironmentConfig) GetGatewayConfigLocation() string {
	if x != nil && x.GatewayConfigLocation != nil {
		return *x.GatewayConfigLocation
	}
	return ""
}

func (x *GoogleCloudApigeeV1EnvironmentConfig) GetKeystores() []*GoogleCloudApigeeV1KeystoreConfig {
	if x != nil {
		return x.Keystores
	}
	return nil
}

func (x *GoogleCloudApigeeV1EnvironmentConfig) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GoogleCloudApigeeV1EnvironmentConfig) GetProvider() string {
	if x != nil && x.Provider != nil {
		return *x.Provider
	}
	return ""
}

func (x *GoogleCloudApigeeV1EnvironmentConfig) GetPubsubTopic() string {
	if x != nil && x.PubsubTopic != nil {
		return *x.PubsubTopic
	}
	return ""
}

func (x *GoogleCloudApigeeV1EnvironmentConfig) GetResourceReferences() []*GoogleCloudApigeeV1ReferenceConfig {
	if x != nil {
		return x.ResourceReferences
	}
	return nil
}

func (x *GoogleCloudApigeeV1EnvironmentConfig) GetResources() []*GoogleCloudApigeeV1ResourceConfig {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *GoogleCloudApigeeV1EnvironmentConfig) GetRevisionId() int64 {
	if x != nil && x.RevisionId != nil {
		return *x.RevisionId
	}
	return 0
}

func (x *GoogleCloudApigeeV1EnvironmentConfig) GetSequenceNumber() int64 {
	if x != nil && x.SequenceNumber != nil {
		return *x.SequenceNumber
	}
	return 0
}

func (x *GoogleCloudApigeeV1EnvironmentConfig) GetTargets() []*GoogleCloudApigeeV1TargetServerConfig {
	if x != nil {
		return x.Targets
	}
	return nil
}

func (x *GoogleCloudApigeeV1EnvironmentConfig) GetTraceConfig() *GoogleCloudApigeeV1RuntimeTraceConfig {
	if x != nil {
		return x.TraceConfig
	}
	return nil
}

func (x *GoogleCloudApigeeV1EnvironmentConfig) GetUid() string {
	if x != nil && x.Uid != nil {
		return *x.Uid
	}
	return ""
}

type GoogleCloudApigeeV1EnvironmentGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatedAt      *int64   `protobuf:"varint,1,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	Hostnames      []string `protobuf:"bytes,2,rep,name=hostnames" json:"hostnames,omitempty"`
	LastModifiedAt *int64   `protobuf:"varint,3,opt,name=last_modified_at,json=lastModifiedAt" json:"last_modified_at,omitempty"`
	Name           *string  `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	State          *string  `protobuf:"bytes,5,opt,name=state" json:"state,omitempty"`
}

func (x *GoogleCloudApigeeV1EnvironmentGroup) Reset() {
	*x = GoogleCloudApigeeV1EnvironmentGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1EnvironmentGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1EnvironmentGroup) ProtoMessage() {}

func (x *GoogleCloudApigeeV1EnvironmentGroup) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1EnvironmentGroup.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1EnvironmentGroup) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{92}
}

func (x *GoogleCloudApigeeV1EnvironmentGroup) GetCreatedAt() int64 {
	if x != nil && x.CreatedAt != nil {
		return *x.CreatedAt
	}
	return 0
}

func (x *GoogleCloudApigeeV1EnvironmentGroup) GetHostnames() []string {
	if x != nil {
		return x.Hostnames
	}
	return nil
}

func (x *GoogleCloudApigeeV1EnvironmentGroup) GetLastModifiedAt() int64 {
	if x != nil && x.LastModifiedAt != nil {
		return *x.LastModifiedAt
	}
	return 0
}

func (x *GoogleCloudApigeeV1EnvironmentGroup) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GoogleCloudApigeeV1EnvironmentGroup) GetState() string {
	if x != nil && x.State != nil {
		return *x.State
	}
	return ""
}

type GoogleCloudApigeeV1EnvironmentGroupAttachment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatedAt          *int64  `protobuf:"varint,1,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	Environment        *string `protobuf:"bytes,2,opt,name=environment" json:"environment,omitempty"`
	EnvironmentGroupId *string `protobuf:"bytes,3,opt,name=environment_group_id,json=environmentGroupId" json:"environment_group_id,omitempty"`
	Name               *string `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
}

func (x *GoogleCloudApigeeV1EnvironmentGroupAttachment) Reset() {
	*x = GoogleCloudApigeeV1EnvironmentGroupAttachment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1EnvironmentGroupAttachment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1EnvironmentGroupAttachment) ProtoMessage() {}

func (x *GoogleCloudApigeeV1EnvironmentGroupAttachment) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1EnvironmentGroupAttachment.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1EnvironmentGroupAttachment) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{93}
}

func (x *GoogleCloudApigeeV1EnvironmentGroupAttachment) GetCreatedAt() int64 {
	if x != nil && x.CreatedAt != nil {
		return *x.CreatedAt
	}
	return 0
}

func (x *GoogleCloudApigeeV1EnvironmentGroupAttachment) GetEnvironment() string {
	if x != nil && x.Environment != nil {
		return *x.Environment
	}
	return ""
}

func (x *GoogleCloudApigeeV1EnvironmentGroupAttachment) GetEnvironmentGroupId() string {
	if x != nil && x.EnvironmentGroupId != nil {
		return *x.EnvironmentGroupId
	}
	return ""
}

func (x *GoogleCloudApigeeV1EnvironmentGroupAttachment) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GoogleCloudApigeeV1EnvironmentGroupConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EndpointChainingRules []*GoogleCloudApigeeV1EndpointChainingRule `protobuf:"bytes,1,rep,name=endpoint_chaining_rules,json=endpointChainingRules" json:"endpoint_chaining_rules,omitempty"`
	Hostnames             []string                                   `protobuf:"bytes,2,rep,name=hostnames" json:"hostnames,omitempty"`
	Location              *string                                    `protobuf:"bytes,3,opt,name=location" json:"location,omitempty"`
	Name                  *string                                    `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	RevisionId            *int64                                     `protobuf:"varint,5,opt,name=revision_id,json=revisionId" json:"revision_id,omitempty"`
	RoutingRules          []*GoogleCloudApigeeV1RoutingRule          `protobuf:"bytes,6,rep,name=routing_rules,json=routingRules" json:"routing_rules,omitempty"`
	Uid                   *string                                    `protobuf:"bytes,7,opt,name=uid" json:"uid,omitempty"`
}

func (x *GoogleCloudApigeeV1EnvironmentGroupConfig) Reset() {
	*x = GoogleCloudApigeeV1EnvironmentGroupConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1EnvironmentGroupConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1EnvironmentGroupConfig) ProtoMessage() {}

func (x *GoogleCloudApigeeV1EnvironmentGroupConfig) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1EnvironmentGroupConfig.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1EnvironmentGroupConfig) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{94}
}

func (x *GoogleCloudApigeeV1EnvironmentGroupConfig) GetEndpointChainingRules() []*GoogleCloudApigeeV1EndpointChainingRule {
	if x != nil {
		return x.EndpointChainingRules
	}
	return nil
}

func (x *GoogleCloudApigeeV1EnvironmentGroupConfig) GetHostnames() []string {
	if x != nil {
		return x.Hostnames
	}
	return nil
}

func (x *GoogleCloudApigeeV1EnvironmentGroupConfig) GetLocation() string {
	if x != nil && x.Location != nil {
		return *x.Location
	}
	return ""
}

func (x *GoogleCloudApigeeV1EnvironmentGroupConfig) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GoogleCloudApigeeV1EnvironmentGroupConfig) GetRevisionId() int64 {
	if x != nil && x.RevisionId != nil {
		return *x.RevisionId
	}
	return 0
}

func (x *GoogleCloudApigeeV1EnvironmentGroupConfig) GetRoutingRules() []*GoogleCloudApigeeV1RoutingRule {
	if x != nil {
		return x.RoutingRules
	}
	return nil
}

func (x *GoogleCloudApigeeV1EnvironmentGroupConfig) GetUid() string {
	if x != nil && x.Uid != nil {
		return *x.Uid
	}
	return ""
}

type GoogleCloudApigeeV1ExpireDeveloperSubscriptionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GoogleCloudApigeeV1ExpireDeveloperSubscriptionRequest) Reset() {
	*x = GoogleCloudApigeeV1ExpireDeveloperSubscriptionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1ExpireDeveloperSubscriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1ExpireDeveloperSubscriptionRequest) ProtoMessage() {}

func (x *GoogleCloudApigeeV1ExpireDeveloperSubscriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1ExpireDeveloperSubscriptionRequest.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1ExpireDeveloperSubscriptionRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{95}
}

type GoogleCloudApigeeV1Export struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Created       *string `protobuf:"bytes,1,opt,name=created" json:"created,omitempty"`
	DatastoreName *string `protobuf:"bytes,2,opt,name=datastore_name,json=datastoreName" json:"datastore_name,omitempty"`
	Description   *string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	Error         *string `protobuf:"bytes,4,opt,name=error" json:"error,omitempty"`
	ExecutionTime *string `protobuf:"bytes,5,opt,name=execution_time,json=executionTime" json:"execution_time,omitempty"`
	Name          *string `protobuf:"bytes,6,opt,name=name" json:"name,omitempty"`
	Self          *string `protobuf:"bytes,7,opt,name=self" json:"self,omitempty"`
	State         *string `protobuf:"bytes,8,opt,name=state" json:"state,omitempty"`
	Updated       *string `protobuf:"bytes,9,opt,name=updated" json:"updated,omitempty"`
}

func (x *GoogleCloudApigeeV1Export) Reset() {
	*x = GoogleCloudApigeeV1Export{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1Export) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1Export) ProtoMessage() {}

func (x *GoogleCloudApigeeV1Export) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1Export.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1Export) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{96}
}

func (x *GoogleCloudApigeeV1Export) GetCreated() string {
	if x != nil && x.Created != nil {
		return *x.Created
	}
	return ""
}

func (x *GoogleCloudApigeeV1Export) GetDatastoreName() string {
	if x != nil && x.DatastoreName != nil {
		return *x.DatastoreName
	}
	return ""
}

func (x *GoogleCloudApigeeV1Export) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *GoogleCloudApigeeV1Export) GetError() string {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return ""
}

func (x *GoogleCloudApigeeV1Export) GetExecutionTime() string {
	if x != nil && x.ExecutionTime != nil {
		return *x.ExecutionTime
	}
	return ""
}

func (x *GoogleCloudApigeeV1Export) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GoogleCloudApigeeV1Export) GetSelf() string {
	if x != nil && x.Self != nil {
		return *x.Self
	}
	return ""
}

func (x *GoogleCloudApigeeV1Export) GetState() string {
	if x != nil && x.State != nil {
		return *x.State
	}
	return ""
}

func (x *GoogleCloudApigeeV1Export) GetUpdated() string {
	if x != nil && x.Updated != nil {
		return *x.Updated
	}
	return ""
}

type GoogleCloudApigeeV1ExportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CsvDelimiter  *string                       `protobuf:"bytes,1,opt,name=csv_delimiter,json=csvDelimiter" json:"csv_delimiter,omitempty"`
	DatastoreName *string                       `protobuf:"bytes,2,opt,name=datastore_name,json=datastoreName" json:"datastore_name,omitempty"`
	DateRange     *GoogleCloudApigeeV1DateRange `protobuf:"bytes,3,opt,name=date_range,json=dateRange" json:"date_range,omitempty"`
	Description   *string                       `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	Name          *string                       `protobuf:"bytes,5,opt,name=name" json:"name,omitempty"`
	OutputFormat  *string                       `protobuf:"bytes,6,opt,name=output_format,json=outputFormat" json:"output_format,omitempty"`
}

func (x *GoogleCloudApigeeV1ExportRequest) Reset() {
	*x = GoogleCloudApigeeV1ExportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1ExportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1ExportRequest) ProtoMessage() {}

func (x *GoogleCloudApigeeV1ExportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1ExportRequest.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1ExportRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{97}
}

func (x *GoogleCloudApigeeV1ExportRequest) GetCsvDelimiter() string {
	if x != nil && x.CsvDelimiter != nil {
		return *x.CsvDelimiter
	}
	return ""
}

func (x *GoogleCloudApigeeV1ExportRequest) GetDatastoreName() string {
	if x != nil && x.DatastoreName != nil {
		return *x.DatastoreName
	}
	return ""
}

func (x *GoogleCloudApigeeV1ExportRequest) GetDateRange() *GoogleCloudApigeeV1DateRange {
	if x != nil {
		return x.DateRange
	}
	return nil
}

func (x *GoogleCloudApigeeV1ExportRequest) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *GoogleCloudApigeeV1ExportRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GoogleCloudApigeeV1ExportRequest) GetOutputFormat() string {
	if x != nil && x.OutputFormat != nil {
		return *x.OutputFormat
	}
	return ""
}

type GoogleCloudApigeeV1FlowHook struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContinueOnError *bool   `protobuf:"varint,1,opt,name=continue_on_error,json=continueOnError" json:"continue_on_error,omitempty"`
	Description     *string `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	FlowHookPoint   *string `protobuf:"bytes,3,opt,name=flow_hook_point,json=flowHookPoint" json:"flow_hook_point,omitempty"`
	SharedFlow      *string `protobuf:"bytes,4,opt,name=shared_flow,json=sharedFlow" json:"shared_flow,omitempty"`
}

func (x *GoogleCloudApigeeV1FlowHook) Reset() {
	*x = GoogleCloudApigeeV1FlowHook{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1FlowHook) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1FlowHook) ProtoMessage() {}

func (x *GoogleCloudApigeeV1FlowHook) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1FlowHook.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1FlowHook) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{98}
}

func (x *GoogleCloudApigeeV1FlowHook) GetContinueOnError() bool {
	if x != nil && x.ContinueOnError != nil {
		return *x.ContinueOnError
	}
	return false
}

func (x *GoogleCloudApigeeV1FlowHook) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *GoogleCloudApigeeV1FlowHook) GetFlowHookPoint() string {
	if x != nil && x.FlowHookPoint != nil {
		return *x.FlowHookPoint
	}
	return ""
}

func (x *GoogleCloudApigeeV1FlowHook) GetSharedFlow() string {
	if x != nil && x.SharedFlow != nil {
		return *x.SharedFlow
	}
	return ""
}

type GoogleCloudApigeeV1FlowHookConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContinueOnError *bool   `protobuf:"varint,1,opt,name=continue_on_error,json=continueOnError" json:"continue_on_error,omitempty"`
	Name            *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	SharedFlowName  *string `protobuf:"bytes,3,opt,name=shared_flow_name,json=sharedFlowName" json:"shared_flow_name,omitempty"`
}

func (x *GoogleCloudApigeeV1FlowHookConfig) Reset() {
	*x = GoogleCloudApigeeV1FlowHookConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1FlowHookConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1FlowHookConfig) ProtoMessage() {}

func (x *GoogleCloudApigeeV1FlowHookConfig) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1FlowHookConfig.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1FlowHookConfig) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{99}
}

func (x *GoogleCloudApigeeV1FlowHookConfig) GetContinueOnError() bool {
	if x != nil && x.ContinueOnError != nil {
		return *x.ContinueOnError
	}
	return false
}

func (x *GoogleCloudApigeeV1FlowHookConfig) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GoogleCloudApigeeV1FlowHookConfig) GetSharedFlowName() string {
	if x != nil && x.SharedFlowName != nil {
		return *x.SharedFlowName
	}
	return ""
}

type GoogleCloudApigeeV1GenerateDownloadUrlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GoogleCloudApigeeV1GenerateDownloadUrlRequest) Reset() {
	*x = GoogleCloudApigeeV1GenerateDownloadUrlRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1GenerateDownloadUrlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1GenerateDownloadUrlRequest) ProtoMessage() {}

func (x *GoogleCloudApigeeV1GenerateDownloadUrlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1GenerateDownloadUrlRequest.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1GenerateDownloadUrlRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{100}
}

type GoogleCloudApigeeV1GenerateDownloadUrlResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DownloadUri *string `protobuf:"bytes,1,opt,name=download_uri,json=downloadUri" json:"download_uri,omitempty"`
}

func (x *GoogleCloudApigeeV1GenerateDownloadUrlResponse) Reset() {
	*x = GoogleCloudApigeeV1GenerateDownloadUrlResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1GenerateDownloadUrlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1GenerateDownloadUrlResponse) ProtoMessage() {}

func (x *GoogleCloudApigeeV1GenerateDownloadUrlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1GenerateDownloadUrlResponse.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1GenerateDownloadUrlResponse) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{101}
}

func (x *GoogleCloudApigeeV1GenerateDownloadUrlResponse) GetDownloadUri() string {
	if x != nil && x.DownloadUri != nil {
		return *x.DownloadUri
	}
	return ""
}

type GoogleCloudApigeeV1GenerateUploadUrlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GoogleCloudApigeeV1GenerateUploadUrlRequest) Reset() {
	*x = GoogleCloudApigeeV1GenerateUploadUrlRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1GenerateUploadUrlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1GenerateUploadUrlRequest) ProtoMessage() {}

func (x *GoogleCloudApigeeV1GenerateUploadUrlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1GenerateUploadUrlRequest.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1GenerateUploadUrlRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{102}
}

type GoogleCloudApigeeV1GenerateUploadUrlResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UploadUri *string `protobuf:"bytes,1,opt,name=upload_uri,json=uploadUri" json:"upload_uri,omitempty"`
}

func (x *GoogleCloudApigeeV1GenerateUploadUrlResponse) Reset() {
	*x = GoogleCloudApigeeV1GenerateUploadUrlResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1GenerateUploadUrlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1GenerateUploadUrlResponse) ProtoMessage() {}

func (x *GoogleCloudApigeeV1GenerateUploadUrlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1GenerateUploadUrlResponse.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1GenerateUploadUrlResponse) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{103}
}

func (x *GoogleCloudApigeeV1GenerateUploadUrlResponse) GetUploadUri() string {
	if x != nil && x.UploadUri != nil {
		return *x.UploadUri
	}
	return ""
}

type GoogleCloudApigeeV1GetAsyncQueryResultUrlResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Urls []*GoogleCloudApigeeV1GetAsyncQueryResultUrlResponseURLInfo `protobuf:"bytes,1,rep,name=urls" json:"urls,omitempty"`
}

func (x *GoogleCloudApigeeV1GetAsyncQueryResultUrlResponse) Reset() {
	*x = GoogleCloudApigeeV1GetAsyncQueryResultUrlResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1GetAsyncQueryResultUrlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1GetAsyncQueryResultUrlResponse) ProtoMessage() {}

func (x *GoogleCloudApigeeV1GetAsyncQueryResultUrlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1GetAsyncQueryResultUrlResponse.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1GetAsyncQueryResultUrlResponse) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{104}
}

func (x *GoogleCloudApigeeV1GetAsyncQueryResultUrlResponse) GetUrls() []*GoogleCloudApigeeV1GetAsyncQueryResultUrlResponseURLInfo {
	if x != nil {
		return x.Urls
	}
	return nil
}

type GoogleCloudApigeeV1GetAsyncQueryResultUrlResponseURLInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Md5       *string `protobuf:"bytes,1,opt,name=md5" json:"md5,omitempty"`
	SizeBytes *int64  `protobuf:"varint,2,opt,name=size_bytes,json=sizeBytes" json:"size_bytes,omitempty"`
	Uri       *string `protobuf:"bytes,3,opt,name=uri" json:"uri,omitempty"`
}

func (x *GoogleCloudApigeeV1GetAsyncQueryResultUrlResponseURLInfo) Reset() {
	*x = GoogleCloudApigeeV1GetAsyncQueryResultUrlResponseURLInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1GetAsyncQueryResultUrlResponseURLInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1GetAsyncQueryResultUrlResponseURLInfo) ProtoMessage() {}

func (x *GoogleCloudApigeeV1GetAsyncQueryResultUrlResponseURLInfo) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1GetAsyncQueryResultUrlResponseURLInfo.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1GetAsyncQueryResultUrlResponseURLInfo) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{105}
}

func (x *GoogleCloudApigeeV1GetAsyncQueryResultUrlResponseURLInfo) GetMd5() string {
	if x != nil && x.Md5 != nil {
		return *x.Md5
	}
	return ""
}

func (x *GoogleCloudApigeeV1GetAsyncQueryResultUrlResponseURLInfo) GetSizeBytes() int64 {
	if x != nil && x.SizeBytes != nil {
		return *x.SizeBytes
	}
	return 0
}

func (x *GoogleCloudApigeeV1GetAsyncQueryResultUrlResponseURLInfo) GetUri() string {
	if x != nil && x.Uri != nil {
		return *x.Uri
	}
	return ""
}

type GoogleCloudApigeeV1GetSyncAuthorizationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GoogleCloudApigeeV1GetSyncAuthorizationRequest) Reset() {
	*x = GoogleCloudApigeeV1GetSyncAuthorizationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1GetSyncAuthorizationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1GetSyncAuthorizationRequest) ProtoMessage() {}

func (x *GoogleCloudApigeeV1GetSyncAuthorizationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1GetSyncAuthorizationRequest.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1GetSyncAuthorizationRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{106}
}

type GoogleCloudApigeeV1GraphQLOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Operation      *string  `protobuf:"bytes,1,opt,name=operation" json:"operation,omitempty"`
	OperationTypes []string `protobuf:"bytes,2,rep,name=operation_types,json=operationTypes" json:"operation_types,omitempty"`
}

func (x *GoogleCloudApigeeV1GraphQLOperation) Reset() {
	*x = GoogleCloudApigeeV1GraphQLOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1GraphQLOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1GraphQLOperation) ProtoMessage() {}

func (x *GoogleCloudApigeeV1GraphQLOperation) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1GraphQLOperation.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1GraphQLOperation) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{107}
}

func (x *GoogleCloudApigeeV1GraphQLOperation) GetOperation() string {
	if x != nil && x.Operation != nil {
		return *x.Operation
	}
	return ""
}

func (x *GoogleCloudApigeeV1GraphQLOperation) GetOperationTypes() []string {
	if x != nil {
		return x.OperationTypes
	}
	return nil
}

type GoogleCloudApigeeV1GraphQLOperationConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiSource  *string                                `protobuf:"bytes,1,opt,name=api_source,json=apiSource" json:"api_source,omitempty"`
	Attributes []*GoogleCloudApigeeV1Attribute        `protobuf:"bytes,2,rep,name=attributes" json:"attributes,omitempty"`
	Operations []*GoogleCloudApigeeV1GraphQLOperation `protobuf:"bytes,3,rep,name=operations" json:"operations,omitempty"`
	Quota      *GoogleCloudApigeeV1Quota              `protobuf:"bytes,4,opt,name=quota" json:"quota,omitempty"`
}

func (x *GoogleCloudApigeeV1GraphQLOperationConfig) Reset() {
	*x = GoogleCloudApigeeV1GraphQLOperationConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1GraphQLOperationConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1GraphQLOperationConfig) ProtoMessage() {}

func (x *GoogleCloudApigeeV1GraphQLOperationConfig) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1GraphQLOperationConfig.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1GraphQLOperationConfig) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{108}
}

func (x *GoogleCloudApigeeV1GraphQLOperationConfig) GetApiSource() string {
	if x != nil && x.ApiSource != nil {
		return *x.ApiSource
	}
	return ""
}

func (x *GoogleCloudApigeeV1GraphQLOperationConfig) GetAttributes() []*GoogleCloudApigeeV1Attribute {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *GoogleCloudApigeeV1GraphQLOperationConfig) GetOperations() []*GoogleCloudApigeeV1GraphQLOperation {
	if x != nil {
		return x.Operations
	}
	return nil
}

func (x *GoogleCloudApigeeV1GraphQLOperationConfig) GetQuota() *GoogleCloudApigeeV1Quota {
	if x != nil {
		return x.Quota
	}
	return nil
}

type GoogleCloudApigeeV1GraphQLOperationGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationConfigType *string                                      `protobuf:"bytes,1,opt,name=operation_config_type,json=operationConfigType" json:"operation_config_type,omitempty"`
	OperationConfigs    []*GoogleCloudApigeeV1GraphQLOperationConfig `protobuf:"bytes,2,rep,name=operation_configs,json=operationConfigs" json:"operation_configs,omitempty"`
}

func (x *GoogleCloudApigeeV1GraphQLOperationGroup) Reset() {
	*x = GoogleCloudApigeeV1GraphQLOperationGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1GraphQLOperationGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1GraphQLOperationGroup) ProtoMessage() {}

func (x *GoogleCloudApigeeV1GraphQLOperationGroup) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1GraphQLOperationGroup.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1GraphQLOperationGroup) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{109}
}

func (x *GoogleCloudApigeeV1GraphQLOperationGroup) GetOperationConfigType() string {
	if x != nil && x.OperationConfigType != nil {
		return *x.OperationConfigType
	}
	return ""
}

func (x *GoogleCloudApigeeV1GraphQLOperationGroup) GetOperationConfigs() []*GoogleCloudApigeeV1GraphQLOperationConfig {
	if x != nil {
		return x.OperationConfigs
	}
	return nil
}

type GoogleCloudApigeeV1GraphqlDocumentation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EndpointUri *string                               `protobuf:"bytes,1,opt,name=endpoint_uri,json=endpointUri" json:"endpoint_uri,omitempty"`
	Schema      *GoogleCloudApigeeV1DocumentationFile `protobuf:"bytes,2,opt,name=schema" json:"schema,omitempty"`
}

func (x *GoogleCloudApigeeV1GraphqlDocumentation) Reset() {
	*x = GoogleCloudApigeeV1GraphqlDocumentation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1GraphqlDocumentation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1GraphqlDocumentation) ProtoMessage() {}

func (x *GoogleCloudApigeeV1GraphqlDocumentation) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1GraphqlDocumentation.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1GraphqlDocumentation) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{110}
}

func (x *GoogleCloudApigeeV1GraphqlDocumentation) GetEndpointUri() string {
	if x != nil && x.EndpointUri != nil {
		return *x.EndpointUri
	}
	return ""
}

func (x *GoogleCloudApigeeV1GraphqlDocumentation) GetSchema() *GoogleCloudApigeeV1DocumentationFile {
	if x != nil {
		return x.Schema
	}
	return nil
}

type GoogleCloudApigeeV1GrpcOperationConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiSource  *string                         `protobuf:"bytes,1,opt,name=api_source,json=apiSource" json:"api_source,omitempty"`
	Attributes []*GoogleCloudApigeeV1Attribute `protobuf:"bytes,2,rep,name=attributes" json:"attributes,omitempty"`
	Methods    []string                        `protobuf:"bytes,3,rep,name=methods" json:"methods,omitempty"`
	Quota      *GoogleCloudApigeeV1Quota       `protobuf:"bytes,4,opt,name=quota" json:"quota,omitempty"`
	Service    *string                         `protobuf:"bytes,5,opt,name=service" json:"service,omitempty"`
}

func (x *GoogleCloudApigeeV1GrpcOperationConfig) Reset() {
	*x = GoogleCloudApigeeV1GrpcOperationConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1GrpcOperationConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1GrpcOperationConfig) ProtoMessage() {}

func (x *GoogleCloudApigeeV1GrpcOperationConfig) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1GrpcOperationConfig.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1GrpcOperationConfig) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{111}
}

func (x *GoogleCloudApigeeV1GrpcOperationConfig) GetApiSource() string {
	if x != nil && x.ApiSource != nil {
		return *x.ApiSource
	}
	return ""
}

func (x *GoogleCloudApigeeV1GrpcOperationConfig) GetAttributes() []*GoogleCloudApigeeV1Attribute {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *GoogleCloudApigeeV1GrpcOperationConfig) GetMethods() []string {
	if x != nil {
		return x.Methods
	}
	return nil
}

func (x *GoogleCloudApigeeV1GrpcOperationConfig) GetQuota() *GoogleCloudApigeeV1Quota {
	if x != nil {
		return x.Quota
	}
	return nil
}

func (x *GoogleCloudApigeeV1GrpcOperationConfig) GetService() string {
	if x != nil && x.Service != nil {
		return *x.Service
	}
	return ""
}

type GoogleCloudApigeeV1GrpcOperationGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationConfigs []*GoogleCloudApigeeV1GrpcOperationConfig `protobuf:"bytes,1,rep,name=operation_configs,json=operationConfigs" json:"operation_configs,omitempty"`
}

func (x *GoogleCloudApigeeV1GrpcOperationGroup) Reset() {
	*x = GoogleCloudApigeeV1GrpcOperationGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1GrpcOperationGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1GrpcOperationGroup) ProtoMessage() {}

func (x *GoogleCloudApigeeV1GrpcOperationGroup) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1GrpcOperationGroup.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1GrpcOperationGroup) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{112}
}

func (x *GoogleCloudApigeeV1GrpcOperationGroup) GetOperationConfigs() []*GoogleCloudApigeeV1GrpcOperationConfig {
	if x != nil {
		return x.OperationConfigs
	}
	return nil
}

type GoogleCloudApigeeV1IngressConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnvironmentGroups  []*GoogleCloudApigeeV1EnvironmentGroupConfig `protobuf:"bytes,1,rep,name=environment_groups,json=environmentGroups" json:"environment_groups,omitempty"`
	Name               *string                                      `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	RevisionCreateTime *timestamp.Timestamp                         `protobuf:"bytes,3,opt,name=revision_create_time,json=revisionCreateTime" json:"revision_create_time,omitempty"`
	RevisionId         *int64                                       `protobuf:"varint,4,opt,name=revision_id,json=revisionId" json:"revision_id,omitempty"`
	Uid                *string                                      `protobuf:"bytes,5,opt,name=uid" json:"uid,omitempty"`
}

func (x *GoogleCloudApigeeV1IngressConfig) Reset() {
	*x = GoogleCloudApigeeV1IngressConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1IngressConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1IngressConfig) ProtoMessage() {}

func (x *GoogleCloudApigeeV1IngressConfig) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1IngressConfig.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1IngressConfig) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{113}
}

func (x *GoogleCloudApigeeV1IngressConfig) GetEnvironmentGroups() []*GoogleCloudApigeeV1EnvironmentGroupConfig {
	if x != nil {
		return x.EnvironmentGroups
	}
	return nil
}

func (x *GoogleCloudApigeeV1IngressConfig) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GoogleCloudApigeeV1IngressConfig) GetRevisionCreateTime() *timestamp.Timestamp {
	if x != nil {
		return x.RevisionCreateTime
	}
	return nil
}

func (x *GoogleCloudApigeeV1IngressConfig) GetRevisionId() int64 {
	if x != nil && x.RevisionId != nil {
		return *x.RevisionId
	}
	return 0
}

func (x *GoogleCloudApigeeV1IngressConfig) GetUid() string {
	if x != nil && x.Uid != nil {
		return *x.Uid
	}
	return ""
}

type GoogleCloudApigeeV1Instance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessLoggingConfig   *GoogleCloudApigeeV1AccessLoggingConfig `protobuf:"bytes,1,opt,name=access_logging_config,json=accessLoggingConfig" json:"access_logging_config,omitempty"`
	ConsumerAcceptList    []string                                `protobuf:"bytes,2,rep,name=consumer_accept_list,json=consumerAcceptList" json:"consumer_accept_list,omitempty"`
	CreatedAt             *int64                                  `protobuf:"varint,3,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	Description           *string                                 `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	DiskEncryptionKeyName *string                                 `protobuf:"bytes,5,opt,name=disk_encryption_key_name,json=diskEncryptionKeyName" json:"disk_encryption_key_name,omitempty"`
	DisplayName           *string                                 `protobuf:"bytes,6,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	Host                  *string                                 `protobuf:"bytes,7,opt,name=host" json:"host,omitempty"`
	IpRange               *string                                 `protobuf:"bytes,8,opt,name=ip_range,json=ipRange" json:"ip_range,omitempty"`
	LastModifiedAt        *int64                                  `protobuf:"varint,9,opt,name=last_modified_at,json=lastModifiedAt" json:"last_modified_at,omitempty"`
	Location              *string                                 `protobuf:"bytes,10,opt,name=location" json:"location,omitempty"`
	Name                  *string                                 `protobuf:"bytes,11,opt,name=name" json:"name,omitempty"`
	PeeringCidrRange      *string                                 `protobuf:"bytes,12,opt,name=peering_cidr_range,json=peeringCidrRange" json:"peering_cidr_range,omitempty"`
	Port                  *string                                 `protobuf:"bytes,13,opt,name=port" json:"port,omitempty"`
	RuntimeVersion        *string                                 `protobuf:"bytes,14,opt,name=runtime_version,json=runtimeVersion" json:"runtime_version,omitempty"`
	ServiceAttachment     *string                                 `protobuf:"bytes,15,opt,name=service_attachment,json=serviceAttachment" json:"service_attachment,omitempty"`
	State                 *string                                 `protobuf:"bytes,16,opt,name=state" json:"state,omitempty"`
}

func (x *GoogleCloudApigeeV1Instance) Reset() {
	*x = GoogleCloudApigeeV1Instance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1Instance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1Instance) ProtoMessage() {}

func (x *GoogleCloudApigeeV1Instance) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1Instance.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1Instance) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{114}
}

func (x *GoogleCloudApigeeV1Instance) GetAccessLoggingConfig() *GoogleCloudApigeeV1AccessLoggingConfig {
	if x != nil {
		return x.AccessLoggingConfig
	}
	return nil
}

func (x *GoogleCloudApigeeV1Instance) GetConsumerAcceptList() []string {
	if x != nil {
		return x.ConsumerAcceptList
	}
	return nil
}

func (x *GoogleCloudApigeeV1Instance) GetCreatedAt() int64 {
	if x != nil && x.CreatedAt != nil {
		return *x.CreatedAt
	}
	return 0
}

func (x *GoogleCloudApigeeV1Instance) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *GoogleCloudApigeeV1Instance) GetDiskEncryptionKeyName() string {
	if x != nil && x.DiskEncryptionKeyName != nil {
		return *x.DiskEncryptionKeyName
	}
	return ""
}

func (x *GoogleCloudApigeeV1Instance) GetDisplayName() string {
	if x != nil && x.DisplayName != nil {
		return *x.DisplayName
	}
	return ""
}

func (x *GoogleCloudApigeeV1Instance) GetHost() string {
	if x != nil && x.Host != nil {
		return *x.Host
	}
	return ""
}

func (x *GoogleCloudApigeeV1Instance) GetIpRange() string {
	if x != nil && x.IpRange != nil {
		return *x.IpRange
	}
	return ""
}

func (x *GoogleCloudApigeeV1Instance) GetLastModifiedAt() int64 {
	if x != nil && x.LastModifiedAt != nil {
		return *x.LastModifiedAt
	}
	return 0
}

func (x *GoogleCloudApigeeV1Instance) GetLocation() string {
	if x != nil && x.Location != nil {
		return *x.Location
	}
	return ""
}

func (x *GoogleCloudApigeeV1Instance) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GoogleCloudApigeeV1Instance) GetPeeringCidrRange() string {
	if x != nil && x.PeeringCidrRange != nil {
		return *x.PeeringCidrRange
	}
	return ""
}

func (x *GoogleCloudApigeeV1Instance) GetPort() string {
	if x != nil && x.Port != nil {
		return *x.Port
	}
	return ""
}

func (x *GoogleCloudApigeeV1Instance) GetRuntimeVersion() string {
	if x != nil && x.RuntimeVersion != nil {
		return *x.RuntimeVersion
	}
	return ""
}

func (x *GoogleCloudApigeeV1Instance) GetServiceAttachment() string {
	if x != nil && x.ServiceAttachment != nil {
		return *x.ServiceAttachment
	}
	return ""
}

func (x *GoogleCloudApigeeV1Instance) GetState() string {
	if x != nil && x.State != nil {
		return *x.State
	}
	return ""
}

type GoogleCloudApigeeV1InstanceAttachment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatedAt   *int64  `protobuf:"varint,1,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	Environment *string `protobuf:"bytes,2,opt,name=environment" json:"environment,omitempty"`
	Name        *string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
}

func (x *GoogleCloudApigeeV1InstanceAttachment) Reset() {
	*x = GoogleCloudApigeeV1InstanceAttachment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1InstanceAttachment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1InstanceAttachment) ProtoMessage() {}

func (x *GoogleCloudApigeeV1InstanceAttachment) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1InstanceAttachment.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1InstanceAttachment) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{115}
}

func (x *GoogleCloudApigeeV1InstanceAttachment) GetCreatedAt() int64 {
	if x != nil && x.CreatedAt != nil {
		return *x.CreatedAt
	}
	return 0
}

func (x *GoogleCloudApigeeV1InstanceAttachment) GetEnvironment() string {
	if x != nil && x.Environment != nil {
		return *x.Environment
	}
	return ""
}

func (x *GoogleCloudApigeeV1InstanceAttachment) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GoogleCloudApigeeV1InstanceDeploymentStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeployedRevisions []*GoogleCloudApigeeV1InstanceDeploymentStatusDeployedRevision `protobuf:"bytes,1,rep,name=deployed_revisions,json=deployedRevisions" json:"deployed_revisions,omitempty"`
	DeployedRoutes    []*GoogleCloudApigeeV1InstanceDeploymentStatusDeployedRoute    `protobuf:"bytes,2,rep,name=deployed_routes,json=deployedRoutes" json:"deployed_routes,omitempty"`
	Instance          *string                                                        `protobuf:"bytes,3,opt,name=instance" json:"instance,omitempty"`
}

func (x *GoogleCloudApigeeV1InstanceDeploymentStatus) Reset() {
	*x = GoogleCloudApigeeV1InstanceDeploymentStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1InstanceDeploymentStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1InstanceDeploymentStatus) ProtoMessage() {}

func (x *GoogleCloudApigeeV1InstanceDeploymentStatus) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1InstanceDeploymentStatus.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1InstanceDeploymentStatus) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{116}
}

func (x *GoogleCloudApigeeV1InstanceDeploymentStatus) GetDeployedRevisions() []*GoogleCloudApigeeV1InstanceDeploymentStatusDeployedRevision {
	if x != nil {
		return x.DeployedRevisions
	}
	return nil
}

func (x *GoogleCloudApigeeV1InstanceDeploymentStatus) GetDeployedRoutes() []*GoogleCloudApigeeV1InstanceDeploymentStatusDeployedRoute {
	if x != nil {
		return x.DeployedRoutes
	}
	return nil
}

func (x *GoogleCloudApigeeV1InstanceDeploymentStatus) GetInstance() string {
	if x != nil && x.Instance != nil {
		return *x.Instance
	}
	return ""
}

type GoogleCloudApigeeV1InstanceDeploymentStatusDeployedRevision struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Percentage *int32  `protobuf:"varint,1,opt,name=percentage" json:"percentage,omitempty"`
	Revision   *string `protobuf:"bytes,2,opt,name=revision" json:"revision,omitempty"`
}

func (x *GoogleCloudApigeeV1InstanceDeploymentStatusDeployedRevision) Reset() {
	*x = GoogleCloudApigeeV1InstanceDeploymentStatusDeployedRevision{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1InstanceDeploymentStatusDeployedRevision) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1InstanceDeploymentStatusDeployedRevision) ProtoMessage() {}

func (x *GoogleCloudApigeeV1InstanceDeploymentStatusDeployedRevision) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1InstanceDeploymentStatusDeployedRevision.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1InstanceDeploymentStatusDeployedRevision) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{117}
}

func (x *GoogleCloudApigeeV1InstanceDeploymentStatusDeployedRevision) GetPercentage() int32 {
	if x != nil && x.Percentage != nil {
		return *x.Percentage
	}
	return 0
}

func (x *GoogleCloudApigeeV1InstanceDeploymentStatusDeployedRevision) GetRevision() string {
	if x != nil && x.Revision != nil {
		return *x.Revision
	}
	return ""
}

type GoogleCloudApigeeV1InstanceDeploymentStatusDeployedRoute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Basepath    *string `protobuf:"bytes,1,opt,name=basepath" json:"basepath,omitempty"`
	Envgroup    *string `protobuf:"bytes,2,opt,name=envgroup" json:"envgroup,omitempty"`
	Environment *string `protobuf:"bytes,3,opt,name=environment" json:"environment,omitempty"`
	Percentage  *int32  `protobuf:"varint,4,opt,name=percentage" json:"percentage,omitempty"`
}

func (x *GoogleCloudApigeeV1InstanceDeploymentStatusDeployedRoute) Reset() {
	*x = GoogleCloudApigeeV1InstanceDeploymentStatusDeployedRoute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1InstanceDeploymentStatusDeployedRoute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1InstanceDeploymentStatusDeployedRoute) ProtoMessage() {}

func (x *GoogleCloudApigeeV1InstanceDeploymentStatusDeployedRoute) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1InstanceDeploymentStatusDeployedRoute.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1InstanceDeploymentStatusDeployedRoute) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{118}
}

func (x *GoogleCloudApigeeV1InstanceDeploymentStatusDeployedRoute) GetBasepath() string {
	if x != nil && x.Basepath != nil {
		return *x.Basepath
	}
	return ""
}

func (x *GoogleCloudApigeeV1InstanceDeploymentStatusDeployedRoute) GetEnvgroup() string {
	if x != nil && x.Envgroup != nil {
		return *x.Envgroup
	}
	return ""
}

func (x *GoogleCloudApigeeV1InstanceDeploymentStatusDeployedRoute) GetEnvironment() string {
	if x != nil && x.Environment != nil {
		return *x.Environment
	}
	return ""
}

func (x *GoogleCloudApigeeV1InstanceDeploymentStatusDeployedRoute) GetPercentage() int32 {
	if x != nil && x.Percentage != nil {
		return *x.Percentage
	}
	return 0
}

type GoogleCloudApigeeV1IntegrationConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled *bool `protobuf:"varint,1,opt,name=enabled" json:"enabled,omitempty"`
}

func (x *GoogleCloudApigeeV1IntegrationConfig) Reset() {
	*x = GoogleCloudApigeeV1IntegrationConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1IntegrationConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1IntegrationConfig) ProtoMessage() {}

func (x *GoogleCloudApigeeV1IntegrationConfig) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1IntegrationConfig.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1IntegrationConfig) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{119}
}

func (x *GoogleCloudApigeeV1IntegrationConfig) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

type GoogleCloudApigeeV1KeyAliasReference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AliasId   *string `protobuf:"bytes,1,opt,name=alias_id,json=aliasId" json:"alias_id,omitempty"`
	Reference *string `protobuf:"bytes,2,opt,name=reference" json:"reference,omitempty"`
}

func (x *GoogleCloudApigeeV1KeyAliasReference) Reset() {
	*x = GoogleCloudApigeeV1KeyAliasReference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1KeyAliasReference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1KeyAliasReference) ProtoMessage() {}

func (x *GoogleCloudApigeeV1KeyAliasReference) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1KeyAliasReference.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1KeyAliasReference) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{120}
}

func (x *GoogleCloudApigeeV1KeyAliasReference) GetAliasId() string {
	if x != nil && x.AliasId != nil {
		return *x.AliasId
	}
	return ""
}

func (x *GoogleCloudApigeeV1KeyAliasReference) GetReference() string {
	if x != nil && x.Reference != nil {
		return *x.Reference
	}
	return ""
}

type GoogleCloudApigeeV1KeyValueEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Value *string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (x *GoogleCloudApigeeV1KeyValueEntry) Reset() {
	*x = GoogleCloudApigeeV1KeyValueEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1KeyValueEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1KeyValueEntry) ProtoMessage() {}

func (x *GoogleCloudApigeeV1KeyValueEntry) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1KeyValueEntry.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1KeyValueEntry) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{121}
}

func (x *GoogleCloudApigeeV1KeyValueEntry) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GoogleCloudApigeeV1KeyValueEntry) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

type GoogleCloudApigeeV1KeyValueMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Encrypted *bool   `protobuf:"varint,1,opt,name=encrypted" json:"encrypted,omitempty"`
	Name      *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (x *GoogleCloudApigeeV1KeyValueMap) Reset() {
	*x = GoogleCloudApigeeV1KeyValueMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1KeyValueMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1KeyValueMap) ProtoMessage() {}

func (x *GoogleCloudApigeeV1KeyValueMap) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[122]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1KeyValueMap.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1KeyValueMap) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{122}
}

func (x *GoogleCloudApigeeV1KeyValueMap) GetEncrypted() bool {
	if x != nil && x.Encrypted != nil {
		return *x.Encrypted
	}
	return false
}

func (x *GoogleCloudApigeeV1KeyValueMap) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GoogleCloudApigeeV1Keystore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aliases []string `protobuf:"bytes,1,rep,name=aliases" json:"aliases,omitempty"`
	Name    *string  `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (x *GoogleCloudApigeeV1Keystore) Reset() {
	*x = GoogleCloudApigeeV1Keystore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1Keystore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1Keystore) ProtoMessage() {}

func (x *GoogleCloudApigeeV1Keystore) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[123]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1Keystore.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1Keystore) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{123}
}

func (x *GoogleCloudApigeeV1Keystore) GetAliases() []string {
	if x != nil {
		return x.Aliases
	}
	return nil
}

func (x *GoogleCloudApigeeV1Keystore) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GoogleCloudApigeeV1KeystoreConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aliases []*GoogleCloudApigeeV1AliasRevisionConfig `protobuf:"bytes,1,rep,name=aliases" json:"aliases,omitempty"`
	Name    *string                                   `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (x *GoogleCloudApigeeV1KeystoreConfig) Reset() {
	*x = GoogleCloudApigeeV1KeystoreConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[124]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1KeystoreConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1KeystoreConfig) ProtoMessage() {}

func (x *GoogleCloudApigeeV1KeystoreConfig) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[124]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1KeystoreConfig.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1KeystoreConfig) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{124}
}

func (x *GoogleCloudApigeeV1KeystoreConfig) GetAliases() []*GoogleCloudApigeeV1AliasRevisionConfig {
	if x != nil {
		return x.Aliases
	}
	return nil
}

func (x *GoogleCloudApigeeV1KeystoreConfig) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GoogleCloudApigeeV1ListApiCategoriesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data      []*GoogleCloudApigeeV1ApiCategory `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
	ErrorCode *string                           `protobuf:"bytes,2,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
	Message   *string                           `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	RequestId *string                           `protobuf:"bytes,4,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
	Status    *string                           `protobuf:"bytes,5,opt,name=status" json:"status,omitempty"`
}

func (x *GoogleCloudApigeeV1ListApiCategoriesResponse) Reset() {
	*x = GoogleCloudApigeeV1ListApiCategoriesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[125]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1ListApiCategoriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1ListApiCategoriesResponse) ProtoMessage() {}

func (x *GoogleCloudApigeeV1ListApiCategoriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[125]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1ListApiCategoriesResponse.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1ListApiCategoriesResponse) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{125}
}

func (x *GoogleCloudApigeeV1ListApiCategoriesResponse) GetData() []*GoogleCloudApigeeV1ApiCategory {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GoogleCloudApigeeV1ListApiCategoriesResponse) GetErrorCode() string {
	if x != nil && x.ErrorCode != nil {
		return *x.ErrorCode
	}
	return ""
}

func (x *GoogleCloudApigeeV1ListApiCategoriesResponse) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

func (x *GoogleCloudApigeeV1ListApiCategoriesResponse) GetRequestId() string {
	if x != nil && x.RequestId != nil {
		return *x.RequestId
	}
	return ""
}

func (x *GoogleCloudApigeeV1ListApiCategoriesResponse) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

type GoogleCloudApigeeV1ListApiDocsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data          []*GoogleCloudApigeeV1ApiDoc `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
	ErrorCode     *string                      `protobuf:"bytes,2,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
	Message       *string                      `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	NextPageToken *string                      `protobuf:"bytes,4,opt,name=next_page_token,json=nextPageToken" json:"next_page_token,omitempty"`
	RequestId     *string                      `protobuf:"bytes,5,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
	Status        *string                      `protobuf:"bytes,6,opt,name=status" json:"status,omitempty"`
}

func (x *GoogleCloudApigeeV1ListApiDocsResponse) Reset() {
	*x = GoogleCloudApigeeV1ListApiDocsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[126]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1ListApiDocsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1ListApiDocsResponse) ProtoMessage() {}

func (x *GoogleCloudApigeeV1ListApiDocsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[126]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1ListApiDocsResponse.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1ListApiDocsResponse) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{126}
}

func (x *GoogleCloudApigeeV1ListApiDocsResponse) GetData() []*GoogleCloudApigeeV1ApiDoc {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GoogleCloudApigeeV1ListApiDocsResponse) GetErrorCode() string {
	if x != nil && x.ErrorCode != nil {
		return *x.ErrorCode
	}
	return ""
}

func (x *GoogleCloudApigeeV1ListApiDocsResponse) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

func (x *GoogleCloudApigeeV1ListApiDocsResponse) GetNextPageToken() string {
	if x != nil && x.NextPageToken != nil {
		return *x.NextPageToken
	}
	return ""
}

func (x *GoogleCloudApigeeV1ListApiDocsResponse) GetRequestId() string {
	if x != nil && x.RequestId != nil {
		return *x.RequestId
	}
	return ""
}

func (x *GoogleCloudApigeeV1ListApiDocsResponse) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

type GoogleCloudApigeeV1ListApiProductsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiProduct []*GoogleCloudApigeeV1ApiProduct `protobuf:"bytes,1,rep,name=api_product,json=apiProduct" json:"api_product,omitempty"`
}

func (x *GoogleCloudApigeeV1ListApiProductsResponse) Reset() {
	*x = GoogleCloudApigeeV1ListApiProductsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[127]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1ListApiProductsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1ListApiProductsResponse) ProtoMessage() {}

func (x *GoogleCloudApigeeV1ListApiProductsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[127]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1ListApiProductsResponse.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1ListApiProductsResponse) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{127}
}

func (x *GoogleCloudApigeeV1ListApiProductsResponse) GetApiProduct() []*GoogleCloudApigeeV1ApiProduct {
	if x != nil {
		return x.ApiProduct
	}
	return nil
}

type GoogleCloudApigeeV1ListApiProxiesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Proxies []*GoogleCloudApigeeV1ApiProxy `protobuf:"bytes,1,rep,name=proxies" json:"proxies,omitempty"`
}

func (x *GoogleCloudApigeeV1ListApiProxiesResponse) Reset() {
	*x = GoogleCloudApigeeV1ListApiProxiesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[128]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1ListApiProxiesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1ListApiProxiesResponse) ProtoMessage() {}

func (x *GoogleCloudApigeeV1ListApiProxiesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[128]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1ListApiProxiesResponse.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1ListApiProxiesResponse) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{128}
}

func (x *GoogleCloudApigeeV1ListApiProxiesResponse) GetProxies() []*GoogleCloudApigeeV1ApiProxy {
	if x != nil {
		return x.Proxies
	}
	return nil
}

type GoogleCloudApigeeV1ListAppGroupAppsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppGroupApps  []*GoogleCloudApigeeV1AppGroupApp `protobuf:"bytes,1,rep,name=app_group_apps,json=appGroupApps" json:"app_group_apps,omitempty"`
	NextPageToken *string                           `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken" json:"next_page_token,omitempty"`
}

func (x *GoogleCloudApigeeV1ListAppGroupAppsResponse) Reset() {
	*x = GoogleCloudApigeeV1ListAppGroupAppsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[129]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1ListAppGroupAppsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1ListAppGroupAppsResponse) ProtoMessage() {}

func (x *GoogleCloudApigeeV1ListAppGroupAppsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[129]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1ListAppGroupAppsResponse.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1ListAppGroupAppsResponse) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{129}
}

func (x *GoogleCloudApigeeV1ListAppGroupAppsResponse) GetAppGroupApps() []*GoogleCloudApigeeV1AppGroupApp {
	if x != nil {
		return x.AppGroupApps
	}
	return nil
}

func (x *GoogleCloudApigeeV1ListAppGroupAppsResponse) GetNextPageToken() string {
	if x != nil && x.NextPageToken != nil {
		return *x.NextPageToken
	}
	return ""
}

type GoogleCloudApigeeV1ListAppGroupsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppGroups     []*GoogleCloudApigeeV1AppGroup `protobuf:"bytes,1,rep,name=app_groups,json=appGroups" json:"app_groups,omitempty"`
	NextPageToken *string                        `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken" json:"next_page_token,omitempty"`
	TotalSize     *int32                         `protobuf:"varint,3,opt,name=total_size,json=totalSize" json:"total_size,omitempty"`
}

func (x *GoogleCloudApigeeV1ListAppGroupsResponse) Reset() {
	*x = GoogleCloudApigeeV1ListAppGroupsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[130]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1ListAppGroupsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1ListAppGroupsResponse) ProtoMessage() {}

func (x *GoogleCloudApigeeV1ListAppGroupsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[130]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1ListAppGroupsResponse.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1ListAppGroupsResponse) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{130}
}

func (x *GoogleCloudApigeeV1ListAppGroupsResponse) GetAppGroups() []*GoogleCloudApigeeV1AppGroup {
	if x != nil {
		return x.AppGroups
	}
	return nil
}

func (x *GoogleCloudApigeeV1ListAppGroupsResponse) GetNextPageToken() string {
	if x != nil && x.NextPageToken != nil {
		return *x.NextPageToken
	}
	return ""
}

func (x *GoogleCloudApigeeV1ListAppGroupsResponse) GetTotalSize() int32 {
	if x != nil && x.TotalSize != nil {
		return *x.TotalSize
	}
	return 0
}

type GoogleCloudApigeeV1ListAppsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	App           []*GoogleCloudApigeeV1App `protobuf:"bytes,1,rep,name=app" json:"app,omitempty"`
	NextPageToken *string                   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken" json:"next_page_token,omitempty"`
	TotalSize     *int32                    `protobuf:"varint,3,opt,name=total_size,json=totalSize" json:"total_size,omitempty"`
}

func (x *GoogleCloudApigeeV1ListAppsResponse) Reset() {
	*x = GoogleCloudApigeeV1ListAppsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[131]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1ListAppsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1ListAppsResponse) ProtoMessage() {}

func (x *GoogleCloudApigeeV1ListAppsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[131]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1ListAppsResponse.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1ListAppsResponse) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{131}
}

func (x *GoogleCloudApigeeV1ListAppsResponse) GetApp() []*GoogleCloudApigeeV1App {
	if x != nil {
		return x.App
	}
	return nil
}

func (x *GoogleCloudApigeeV1ListAppsResponse) GetNextPageToken() string {
	if x != nil && x.NextPageToken != nil {
		return *x.NextPageToken
	}
	return ""
}

func (x *GoogleCloudApigeeV1ListAppsResponse) GetTotalSize() int32 {
	if x != nil && x.TotalSize != nil {
		return *x.TotalSize
	}
	return 0
}

type GoogleCloudApigeeV1ListArchiveDeploymentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArchiveDeployments []*GoogleCloudApigeeV1ArchiveDeployment `protobuf:"bytes,1,rep,name=archive_deployments,json=archiveDeployments" json:"archive_deployments,omitempty"`
	NextPageToken      *string                                 `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken" json:"next_page_token,omitempty"`
}

func (x *GoogleCloudApigeeV1ListArchiveDeploymentsResponse) Reset() {
	*x = GoogleCloudApigeeV1ListArchiveDeploymentsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[132]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1ListArchiveDeploymentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1ListArchiveDeploymentsResponse) ProtoMessage() {}

func (x *GoogleCloudApigeeV1ListArchiveDeploymentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[132]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1ListArchiveDeploymentsResponse.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1ListArchiveDeploymentsResponse) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{132}
}

func (x *GoogleCloudApigeeV1ListArchiveDeploymentsResponse) GetArchiveDeployments() []*GoogleCloudApigeeV1ArchiveDeployment {
	if x != nil {
		return x.ArchiveDeployments
	}
	return nil
}

func (x *GoogleCloudApigeeV1ListArchiveDeploymentsResponse) GetNextPageToken() string {
	if x != nil && x.NextPageToken != nil {
		return *x.NextPageToken
	}
	return ""
}

type GoogleCloudApigeeV1ListAsyncQueriesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Queries []*GoogleCloudApigeeV1AsyncQuery `protobuf:"bytes,1,rep,name=queries" json:"queries,omitempty"`
}

func (x *GoogleCloudApigeeV1ListAsyncQueriesResponse) Reset() {
	*x = GoogleCloudApigeeV1ListAsyncQueriesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[133]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1ListAsyncQueriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1ListAsyncQueriesResponse) ProtoMessage() {}

func (x *GoogleCloudApigeeV1ListAsyncQueriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[133]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1ListAsyncQueriesResponse.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1ListAsyncQueriesResponse) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{133}
}

func (x *GoogleCloudApigeeV1ListAsyncQueriesResponse) GetQueries() []*GoogleCloudApigeeV1AsyncQuery {
	if x != nil {
		return x.Queries
	}
	return nil
}

type GoogleCloudApigeeV1ListCustomReportsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Qualifier []*GoogleCloudApigeeV1CustomReport `protobuf:"bytes,1,rep,name=qualifier" json:"qualifier,omitempty"`
}

func (x *GoogleCloudApigeeV1ListCustomReportsResponse) Reset() {
	*x = GoogleCloudApigeeV1ListCustomReportsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[134]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1ListCustomReportsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1ListCustomReportsResponse) ProtoMessage() {}

func (x *GoogleCloudApigeeV1ListCustomReportsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[134]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1ListCustomReportsResponse.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1ListCustomReportsResponse) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{134}
}

func (x *GoogleCloudApigeeV1ListCustomReportsResponse) GetQualifier() []*GoogleCloudApigeeV1CustomReport {
	if x != nil {
		return x.Qualifier
	}
	return nil
}

type GoogleCloudApigeeV1ListDataCollectorsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataCollectors []*GoogleCloudApigeeV1DataCollector `protobuf:"bytes,1,rep,name=data_collectors,json=dataCollectors" json:"data_collectors,omitempty"`
	NextPageToken  *string                             `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken" json:"next_page_token,omitempty"`
}

func (x *GoogleCloudApigeeV1ListDataCollectorsResponse) Reset() {
	*x = GoogleCloudApigeeV1ListDataCollectorsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[135]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1ListDataCollectorsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1ListDataCollectorsResponse) ProtoMessage() {}

func (x *GoogleCloudApigeeV1ListDataCollectorsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[135]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1ListDataCollectorsResponse.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1ListDataCollectorsResponse) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{135}
}

func (x *GoogleCloudApigeeV1ListDataCollectorsResponse) GetDataCollectors() []*GoogleCloudApigeeV1DataCollector {
	if x != nil {
		return x.DataCollectors
	}
	return nil
}

func (x *GoogleCloudApigeeV1ListDataCollectorsResponse) GetNextPageToken() string {
	if x != nil && x.NextPageToken != nil {
		return *x.NextPageToken
	}
	return ""
}

type GoogleCloudApigeeV1ListDatastoresResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Datastores []*GoogleCloudApigeeV1Datastore `protobuf:"bytes,1,rep,name=datastores" json:"datastores,omitempty"`
}

func (x *GoogleCloudApigeeV1ListDatastoresResponse) Reset() {
	*x = GoogleCloudApigeeV1ListDatastoresResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[136]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1ListDatastoresResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1ListDatastoresResponse) ProtoMessage() {}

func (x *GoogleCloudApigeeV1ListDatastoresResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[136]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1ListDatastoresResponse.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1ListDatastoresResponse) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{136}
}

func (x *GoogleCloudApigeeV1ListDatastoresResponse) GetDatastores() []*GoogleCloudApigeeV1Datastore {
	if x != nil {
		return x.Datastores
	}
	return nil
}

type GoogleCloudApigeeV1ListDebugSessionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NextPageToken *string                       `protobuf:"bytes,1,opt,name=next_page_token,json=nextPageToken" json:"next_page_token,omitempty"`
	Sessions      []*GoogleCloudApigeeV1Session `protobuf:"bytes,2,rep,name=sessions" json:"sessions,omitempty"`
}

func (x *GoogleCloudApigeeV1ListDebugSessionsResponse) Reset() {
	*x = GoogleCloudApigeeV1ListDebugSessionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[137]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1ListDebugSessionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1ListDebugSessionsResponse) ProtoMessage() {}

func (x *GoogleCloudApigeeV1ListDebugSessionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[137]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1ListDebugSessionsResponse.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1ListDebugSessionsResponse) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{137}
}

func (x *GoogleCloudApigeeV1ListDebugSessionsResponse) GetNextPageToken() string {
	if x != nil && x.NextPageToken != nil {
		return *x.NextPageToken
	}
	return ""
}

func (x *GoogleCloudApigeeV1ListDebugSessionsResponse) GetSessions() []*GoogleCloudApigeeV1Session {
	if x != nil {
		return x.Sessions
	}
	return nil
}

type GoogleCloudApigeeV1ListDeploymentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Deployments []*GoogleCloudApigeeV1Deployment `protobuf:"bytes,1,rep,name=deployments" json:"deployments,omitempty"`
}

func (x *GoogleCloudApigeeV1ListDeploymentsResponse) Reset() {
	*x = GoogleCloudApigeeV1ListDeploymentsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[138]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1ListDeploymentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1ListDeploymentsResponse) ProtoMessage() {}

func (x *GoogleCloudApigeeV1ListDeploymentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[138]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1ListDeploymentsResponse.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1ListDeploymentsResponse) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{138}
}

func (x *GoogleCloudApigeeV1ListDeploymentsResponse) GetDeployments() []*GoogleCloudApigeeV1Deployment {
	if x != nil {
		return x.Deployments
	}
	return nil
}

type GoogleCloudApigeeV1ListDeveloperAppsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	App []*GoogleCloudApigeeV1DeveloperApp `protobuf:"bytes,1,rep,name=app" json:"app,omitempty"`
}

func (x *GoogleCloudApigeeV1ListDeveloperAppsResponse) Reset() {
	*x = GoogleCloudApigeeV1ListDeveloperAppsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[139]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1ListDeveloperAppsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1ListDeveloperAppsResponse) ProtoMessage() {}

func (x *GoogleCloudApigeeV1ListDeveloperAppsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[139]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1ListDeveloperAppsResponse.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1ListDeveloperAppsResponse) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{139}
}

func (x *GoogleCloudApigeeV1ListDeveloperAppsResponse) GetApp() []*GoogleCloudApigeeV1DeveloperApp {
	if x != nil {
		return x.App
	}
	return nil
}

type GoogleCloudApigeeV1ListDeveloperSubscriptionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeveloperSubscriptions []*GoogleCloudApigeeV1DeveloperSubscription `protobuf:"bytes,1,rep,name=developer_subscriptions,json=developerSubscriptions" json:"developer_subscriptions,omitempty"`
	NextStartKey           *string                                     `protobuf:"bytes,2,opt,name=next_start_key,json=nextStartKey" json:"next_start_key,omitempty"`
}

func (x *GoogleCloudApigeeV1ListDeveloperSubscriptionsResponse) Reset() {
	*x = GoogleCloudApigeeV1ListDeveloperSubscriptionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[140]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1ListDeveloperSubscriptionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1ListDeveloperSubscriptionsResponse) ProtoMessage() {}

func (x *GoogleCloudApigeeV1ListDeveloperSubscriptionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[140]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1ListDeveloperSubscriptionsResponse.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1ListDeveloperSubscriptionsResponse) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{140}
}

func (x *GoogleCloudApigeeV1ListDeveloperSubscriptionsResponse) GetDeveloperSubscriptions() []*GoogleCloudApigeeV1DeveloperSubscription {
	if x != nil {
		return x.DeveloperSubscriptions
	}
	return nil
}

func (x *GoogleCloudApigeeV1ListDeveloperSubscriptionsResponse) GetNextStartKey() string {
	if x != nil && x.NextStartKey != nil {
		return *x.NextStartKey
	}
	return ""
}

type GoogleCloudApigeeV1ListEndpointAttachmentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EndpointAttachments []*GoogleCloudApigeeV1EndpointAttachment `protobuf:"bytes,1,rep,name=endpoint_attachments,json=endpointAttachments" json:"endpoint_attachments,omitempty"`
	NextPageToken       *string                                  `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken" json:"next_page_token,omitempty"`
}

func (x *GoogleCloudApigeeV1ListEndpointAttachmentsResponse) Reset() {
	*x = GoogleCloudApigeeV1ListEndpointAttachmentsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[141]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1ListEndpointAttachmentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1ListEndpointAttachmentsResponse) ProtoMessage() {}

func (x *GoogleCloudApigeeV1ListEndpointAttachmentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[141]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1ListEndpointAttachmentsResponse.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1ListEndpointAttachmentsResponse) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{141}
}

func (x *GoogleCloudApigeeV1ListEndpointAttachmentsResponse) GetEndpointAttachments() []*GoogleCloudApigeeV1EndpointAttachment {
	if x != nil {
		return x.EndpointAttachments
	}
	return nil
}

func (x *GoogleCloudApigeeV1ListEndpointAttachmentsResponse) GetNextPageToken() string {
	if x != nil && x.NextPageToken != nil {
		return *x.NextPageToken
	}
	return ""
}

type GoogleCloudApigeeV1ListEnvironmentGroupAttachmentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnvironmentGroupAttachments []*GoogleCloudApigeeV1EnvironmentGroupAttachment `protobuf:"bytes,1,rep,name=environment_group_attachments,json=environmentGroupAttachments" json:"environment_group_attachments,omitempty"`
	NextPageToken               *string                                          `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken" json:"next_page_token,omitempty"`
}

func (x *GoogleCloudApigeeV1ListEnvironmentGroupAttachmentsResponse) Reset() {
	*x = GoogleCloudApigeeV1ListEnvironmentGroupAttachmentsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[142]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1ListEnvironmentGroupAttachmentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1ListEnvironmentGroupAttachmentsResponse) ProtoMessage() {}

func (x *GoogleCloudApigeeV1ListEnvironmentGroupAttachmentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[142]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1ListEnvironmentGroupAttachmentsResponse.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1ListEnvironmentGroupAttachmentsResponse) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{142}
}

func (x *GoogleCloudApigeeV1ListEnvironmentGroupAttachmentsResponse) GetEnvironmentGroupAttachments() []*GoogleCloudApigeeV1EnvironmentGroupAttachment {
	if x != nil {
		return x.EnvironmentGroupAttachments
	}
	return nil
}

func (x *GoogleCloudApigeeV1ListEnvironmentGroupAttachmentsResponse) GetNextPageToken() string {
	if x != nil && x.NextPageToken != nil {
		return *x.NextPageToken
	}
	return ""
}

type GoogleCloudApigeeV1ListEnvironmentGroupsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnvironmentGroups []*GoogleCloudApigeeV1EnvironmentGroup `protobuf:"bytes,1,rep,name=environment_groups,json=environmentGroups" json:"environment_groups,omitempty"`
	NextPageToken     *string                                `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken" json:"next_page_token,omitempty"`
}

func (x *GoogleCloudApigeeV1ListEnvironmentGroupsResponse) Reset() {
	*x = GoogleCloudApigeeV1ListEnvironmentGroupsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[143]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1ListEnvironmentGroupsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1ListEnvironmentGroupsResponse) ProtoMessage() {}

func (x *GoogleCloudApigeeV1ListEnvironmentGroupsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[143]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1ListEnvironmentGroupsResponse.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1ListEnvironmentGroupsResponse) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{143}
}

func (x *GoogleCloudApigeeV1ListEnvironmentGroupsResponse) GetEnvironmentGroups() []*GoogleCloudApigeeV1EnvironmentGroup {
	if x != nil {
		return x.EnvironmentGroups
	}
	return nil
}

func (x *GoogleCloudApigeeV1ListEnvironmentGroupsResponse) GetNextPageToken() string {
	if x != nil && x.NextPageToken != nil {
		return *x.NextPageToken
	}
	return ""
}

type GoogleCloudApigeeV1ListEnvironmentResourcesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceFile []*GoogleCloudApigeeV1ResourceFile `protobuf:"bytes,1,rep,name=resource_file,json=resourceFile" json:"resource_file,omitempty"`
}

func (x *GoogleCloudApigeeV1ListEnvironmentResourcesResponse) Reset() {
	*x = GoogleCloudApigeeV1ListEnvironmentResourcesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[144]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1ListEnvironmentResourcesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1ListEnvironmentResourcesResponse) ProtoMessage() {}

func (x *GoogleCloudApigeeV1ListEnvironmentResourcesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[144]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1ListEnvironmentResourcesResponse.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1ListEnvironmentResourcesResponse) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{144}
}

func (x *GoogleCloudApigeeV1ListEnvironmentResourcesResponse) GetResourceFile() []*GoogleCloudApigeeV1ResourceFile {
	if x != nil {
		return x.ResourceFile
	}
	return nil
}

type GoogleCloudApigeeV1ListExportsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exports []*GoogleCloudApigeeV1Export `protobuf:"bytes,1,rep,name=exports" json:"exports,omitempty"`
}

func (x *GoogleCloudApigeeV1ListExportsResponse) Reset() {
	*x = GoogleCloudApigeeV1ListExportsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[145]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1ListExportsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1ListExportsResponse) ProtoMessage() {}

func (x *GoogleCloudApigeeV1ListExportsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[145]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1ListExportsResponse.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1ListExportsResponse) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{145}
}

func (x *GoogleCloudApigeeV1ListExportsResponse) GetExports() []*GoogleCloudApigeeV1Export {
	if x != nil {
		return x.Exports
	}
	return nil
}

type GoogleCloudApigeeV1ListHybridIssuersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Issuers []*GoogleCloudApigeeV1ServiceIssuersMapping `protobuf:"bytes,1,rep,name=issuers" json:"issuers,omitempty"`
}

func (x *GoogleCloudApigeeV1ListHybridIssuersResponse) Reset() {
	*x = GoogleCloudApigeeV1ListHybridIssuersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[146]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1ListHybridIssuersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1ListHybridIssuersResponse) ProtoMessage() {}

func (x *GoogleCloudApigeeV1ListHybridIssuersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[146]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1ListHybridIssuersResponse.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1ListHybridIssuersResponse) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{146}
}

func (x *GoogleCloudApigeeV1ListHybridIssuersResponse) GetIssuers() []*GoogleCloudApigeeV1ServiceIssuersMapping {
	if x != nil {
		return x.Issuers
	}
	return nil
}

type GoogleCloudApigeeV1ListInstanceAttachmentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attachments   []*GoogleCloudApigeeV1InstanceAttachment `protobuf:"bytes,1,rep,name=attachments" json:"attachments,omitempty"`
	NextPageToken *string                                  `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken" json:"next_page_token,omitempty"`
}

func (x *GoogleCloudApigeeV1ListInstanceAttachmentsResponse) Reset() {
	*x = GoogleCloudApigeeV1ListInstanceAttachmentsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[147]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1ListInstanceAttachmentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1ListInstanceAttachmentsResponse) ProtoMessage() {}

func (x *GoogleCloudApigeeV1ListInstanceAttachmentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[147]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1ListInstanceAttachmentsResponse.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1ListInstanceAttachmentsResponse) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{147}
}

func (x *GoogleCloudApigeeV1ListInstanceAttachmentsResponse) GetAttachments() []*GoogleCloudApigeeV1InstanceAttachment {
	if x != nil {
		return x.Attachments
	}
	return nil
}

func (x *GoogleCloudApigeeV1ListInstanceAttachmentsResponse) GetNextPageToken() string {
	if x != nil && x.NextPageToken != nil {
		return *x.NextPageToken
	}
	return ""
}

type GoogleCloudApigeeV1ListInstancesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Instances     []*GoogleCloudApigeeV1Instance `protobuf:"bytes,1,rep,name=instances" json:"instances,omitempty"`
	NextPageToken *string                        `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken" json:"next_page_token,omitempty"`
}

func (x *GoogleCloudApigeeV1ListInstancesResponse) Reset() {
	*x = GoogleCloudApigeeV1ListInstancesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[148]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1ListInstancesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1ListInstancesResponse) ProtoMessage() {}

func (x *GoogleCloudApigeeV1ListInstancesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[148]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1ListInstancesResponse.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1ListInstancesResponse) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{148}
}

func (x *GoogleCloudApigeeV1ListInstancesResponse) GetInstances() []*GoogleCloudApigeeV1Instance {
	if x != nil {
		return x.Instances
	}
	return nil
}

func (x *GoogleCloudApigeeV1ListInstancesResponse) GetNextPageToken() string {
	if x != nil && x.NextPageToken != nil {
		return *x.NextPageToken
	}
	return ""
}

type GoogleCloudApigeeV1ListKeyValueEntriesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyValueEntries []*GoogleCloudApigeeV1KeyValueEntry `protobuf:"bytes,1,rep,name=key_value_entries,json=keyValueEntries" json:"key_value_entries,omitempty"`
	NextPageToken   *string                             `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken" json:"next_page_token,omitempty"`
}

func (x *GoogleCloudApigeeV1ListKeyValueEntriesResponse) Reset() {
	*x = GoogleCloudApigeeV1ListKeyValueEntriesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[149]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1ListKeyValueEntriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1ListKeyValueEntriesResponse) ProtoMessage() {}

func (x *GoogleCloudApigeeV1ListKeyValueEntriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[149]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1ListKeyValueEntriesResponse.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1ListKeyValueEntriesResponse) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{149}
}

func (x *GoogleCloudApigeeV1ListKeyValueEntriesResponse) GetKeyValueEntries() []*GoogleCloudApigeeV1KeyValueEntry {
	if x != nil {
		return x.KeyValueEntries
	}
	return nil
}

func (x *GoogleCloudApigeeV1ListKeyValueEntriesResponse) GetNextPageToken() string {
	if x != nil && x.NextPageToken != nil {
		return *x.NextPageToken
	}
	return ""
}

type GoogleCloudApigeeV1ListNatAddressesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NatAddresses  []*GoogleCloudApigeeV1NatAddress `protobuf:"bytes,1,rep,name=nat_addresses,json=natAddresses" json:"nat_addresses,omitempty"`
	NextPageToken *string                          `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken" json:"next_page_token,omitempty"`
}

func (x *GoogleCloudApigeeV1ListNatAddressesResponse) Reset() {
	*x = GoogleCloudApigeeV1ListNatAddressesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[150]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1ListNatAddressesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1ListNatAddressesResponse) ProtoMessage() {}

func (x *GoogleCloudApigeeV1ListNatAddressesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[150]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1ListNatAddressesResponse.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1ListNatAddressesResponse) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{150}
}

func (x *GoogleCloudApigeeV1ListNatAddressesResponse) GetNatAddresses() []*GoogleCloudApigeeV1NatAddress {
	if x != nil {
		return x.NatAddresses
	}
	return nil
}

func (x *GoogleCloudApigeeV1ListNatAddressesResponse) GetNextPageToken() string {
	if x != nil && x.NextPageToken != nil {
		return *x.NextPageToken
	}
	return ""
}

type GoogleCloudApigeeV1ListOfDevelopersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Developer []*GoogleCloudApigeeV1Developer `protobuf:"bytes,1,rep,name=developer" json:"developer,omitempty"`
}

func (x *GoogleCloudApigeeV1ListOfDevelopersResponse) Reset() {
	*x = GoogleCloudApigeeV1ListOfDevelopersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[151]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1ListOfDevelopersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1ListOfDevelopersResponse) ProtoMessage() {}

func (x *GoogleCloudApigeeV1ListOfDevelopersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[151]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1ListOfDevelopersResponse.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1ListOfDevelopersResponse) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{151}
}

func (x *GoogleCloudApigeeV1ListOfDevelopersResponse) GetDeveloper() []*GoogleCloudApigeeV1Developer {
	if x != nil {
		return x.Developer
	}
	return nil
}

type GoogleCloudApigeeV1ListOrganizationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Organizations []*GoogleCloudApigeeV1OrganizationProjectMapping `protobuf:"bytes,1,rep,name=organizations" json:"organizations,omitempty"`
}

func (x *GoogleCloudApigeeV1ListOrganizationsResponse) Reset() {
	*x = GoogleCloudApigeeV1ListOrganizationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[152]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1ListOrganizationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1ListOrganizationsResponse) ProtoMessage() {}

func (x *GoogleCloudApigeeV1ListOrganizationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[152]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1ListOrganizationsResponse.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1ListOrganizationsResponse) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{152}
}

func (x *GoogleCloudApigeeV1ListOrganizationsResponse) GetOrganizations() []*GoogleCloudApigeeV1OrganizationProjectMapping {
	if x != nil {
		return x.Organizations
	}
	return nil
}

type GoogleCloudApigeeV1ListRatePlansResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NextStartKey *string                        `protobuf:"bytes,1,opt,name=next_start_key,json=nextStartKey" json:"next_start_key,omitempty"`
	RatePlans    []*GoogleCloudApigeeV1RatePlan `protobuf:"bytes,2,rep,name=rate_plans,json=ratePlans" json:"rate_plans,omitempty"`
}

func (x *GoogleCloudApigeeV1ListRatePlansResponse) Reset() {
	*x = GoogleCloudApigeeV1ListRatePlansResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[153]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1ListRatePlansResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1ListRatePlansResponse) ProtoMessage() {}

func (x *GoogleCloudApigeeV1ListRatePlansResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[153]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1ListRatePlansResponse.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1ListRatePlansResponse) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{153}
}

func (x *GoogleCloudApigeeV1ListRatePlansResponse) GetNextStartKey() string {
	if x != nil && x.NextStartKey != nil {
		return *x.NextStartKey
	}
	return ""
}

func (x *GoogleCloudApigeeV1ListRatePlansResponse) GetRatePlans() []*GoogleCloudApigeeV1RatePlan {
	if x != nil {
		return x.RatePlans
	}
	return nil
}

type GoogleCloudApigeeV1ListSecurityActionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NextPageToken   *string                              `protobuf:"bytes,1,opt,name=next_page_token,json=nextPageToken" json:"next_page_token,omitempty"`
	SecurityActions []*GoogleCloudApigeeV1SecurityAction `protobuf:"bytes,2,rep,name=security_actions,json=securityActions" json:"security_actions,omitempty"`
}

func (x *GoogleCloudApigeeV1ListSecurityActionsResponse) Reset() {
	*x = GoogleCloudApigeeV1ListSecurityActionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[154]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1ListSecurityActionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1ListSecurityActionsResponse) ProtoMessage() {}

func (x *GoogleCloudApigeeV1ListSecurityActionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[154]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1ListSecurityActionsResponse.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1ListSecurityActionsResponse) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{154}
}

func (x *GoogleCloudApigeeV1ListSecurityActionsResponse) GetNextPageToken() string {
	if x != nil && x.NextPageToken != nil {
		return *x.NextPageToken
	}
	return ""
}

func (x *GoogleCloudApigeeV1ListSecurityActionsResponse) GetSecurityActions() []*GoogleCloudApigeeV1SecurityAction {
	if x != nil {
		return x.SecurityActions
	}
	return nil
}

type GoogleCloudApigeeV1ListSecurityIncidentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NextPageToken     *string                                `protobuf:"bytes,1,opt,name=next_page_token,json=nextPageToken" json:"next_page_token,omitempty"`
	SecurityIncidents []*GoogleCloudApigeeV1SecurityIncident `protobuf:"bytes,2,rep,name=security_incidents,json=securityIncidents" json:"security_incidents,omitempty"`
}

func (x *GoogleCloudApigeeV1ListSecurityIncidentsResponse) Reset() {
	*x = GoogleCloudApigeeV1ListSecurityIncidentsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[155]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1ListSecurityIncidentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1ListSecurityIncidentsResponse) ProtoMessage() {}

func (x *GoogleCloudApigeeV1ListSecurityIncidentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[155]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1ListSecurityIncidentsResponse.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1ListSecurityIncidentsResponse) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{155}
}

func (x *GoogleCloudApigeeV1ListSecurityIncidentsResponse) GetNextPageToken() string {
	if x != nil && x.NextPageToken != nil {
		return *x.NextPageToken
	}
	return ""
}

func (x *GoogleCloudApigeeV1ListSecurityIncidentsResponse) GetSecurityIncidents() []*GoogleCloudApigeeV1SecurityIncident {
	if x != nil {
		return x.SecurityIncidents
	}
	return nil
}

type GoogleCloudApigeeV1ListSecurityProfileRevisionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NextPageToken    *string                               `protobuf:"bytes,1,opt,name=next_page_token,json=nextPageToken" json:"next_page_token,omitempty"`
	SecurityProfiles []*GoogleCloudApigeeV1SecurityProfile `protobuf:"bytes,2,rep,name=security_profiles,json=securityProfiles" json:"security_profiles,omitempty"`
}

func (x *GoogleCloudApigeeV1ListSecurityProfileRevisionsResponse) Reset() {
	*x = GoogleCloudApigeeV1ListSecurityProfileRevisionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[156]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1ListSecurityProfileRevisionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1ListSecurityProfileRevisionsResponse) ProtoMessage() {}

func (x *GoogleCloudApigeeV1ListSecurityProfileRevisionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[156]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1ListSecurityProfileRevisionsResponse.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1ListSecurityProfileRevisionsResponse) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{156}
}

func (x *GoogleCloudApigeeV1ListSecurityProfileRevisionsResponse) GetNextPageToken() string {
	if x != nil && x.NextPageToken != nil {
		return *x.NextPageToken
	}
	return ""
}

func (x *GoogleCloudApigeeV1ListSecurityProfileRevisionsResponse) GetSecurityProfiles() []*GoogleCloudApigeeV1SecurityProfile {
	if x != nil {
		return x.SecurityProfiles
	}
	return nil
}

type GoogleCloudApigeeV1ListSecurityProfilesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NextPageToken    *string                               `protobuf:"bytes,1,opt,name=next_page_token,json=nextPageToken" json:"next_page_token,omitempty"`
	SecurityProfiles []*GoogleCloudApigeeV1SecurityProfile `protobuf:"bytes,2,rep,name=security_profiles,json=securityProfiles" json:"security_profiles,omitempty"`
}

func (x *GoogleCloudApigeeV1ListSecurityProfilesResponse) Reset() {
	*x = GoogleCloudApigeeV1ListSecurityProfilesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[157]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1ListSecurityProfilesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1ListSecurityProfilesResponse) ProtoMessage() {}

func (x *GoogleCloudApigeeV1ListSecurityProfilesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[157]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1ListSecurityProfilesResponse.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1ListSecurityProfilesResponse) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{157}
}

func (x *GoogleCloudApigeeV1ListSecurityProfilesResponse) GetNextPageToken() string {
	if x != nil && x.NextPageToken != nil {
		return *x.NextPageToken
	}
	return ""
}

func (x *GoogleCloudApigeeV1ListSecurityProfilesResponse) GetSecurityProfiles() []*GoogleCloudApigeeV1SecurityProfile {
	if x != nil {
		return x.SecurityProfiles
	}
	return nil
}

type GoogleCloudApigeeV1ListSecurityReportsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NextPageToken   *string                              `protobuf:"bytes,1,opt,name=next_page_token,json=nextPageToken" json:"next_page_token,omitempty"`
	SecurityReports []*GoogleCloudApigeeV1SecurityReport `protobuf:"bytes,2,rep,name=security_reports,json=securityReports" json:"security_reports,omitempty"`
}

func (x *GoogleCloudApigeeV1ListSecurityReportsResponse) Reset() {
	*x = GoogleCloudApigeeV1ListSecurityReportsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[158]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1ListSecurityReportsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1ListSecurityReportsResponse) ProtoMessage() {}

func (x *GoogleCloudApigeeV1ListSecurityReportsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[158]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1ListSecurityReportsResponse.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1ListSecurityReportsResponse) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{158}
}

func (x *GoogleCloudApigeeV1ListSecurityReportsResponse) GetNextPageToken() string {
	if x != nil && x.NextPageToken != nil {
		return *x.NextPageToken
	}
	return ""
}

func (x *GoogleCloudApigeeV1ListSecurityReportsResponse) GetSecurityReports() []*GoogleCloudApigeeV1SecurityReport {
	if x != nil {
		return x.SecurityReports
	}
	return nil
}

type GoogleCloudApigeeV1ListSharedFlowsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SharedFlows []*GoogleCloudApigeeV1SharedFlow `protobuf:"bytes,1,rep,name=shared_flows,json=sharedFlows" json:"shared_flows,omitempty"`
}

func (x *GoogleCloudApigeeV1ListSharedFlowsResponse) Reset() {
	*x = GoogleCloudApigeeV1ListSharedFlowsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[159]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1ListSharedFlowsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1ListSharedFlowsResponse) ProtoMessage() {}

func (x *GoogleCloudApigeeV1ListSharedFlowsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[159]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1ListSharedFlowsResponse.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1ListSharedFlowsResponse) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{159}
}

func (x *GoogleCloudApigeeV1ListSharedFlowsResponse) GetSharedFlows() []*GoogleCloudApigeeV1SharedFlow {
	if x != nil {
		return x.SharedFlows
	}
	return nil
}

type GoogleCloudApigeeV1ListTraceConfigOverridesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NextPageToken        *string                                   `protobuf:"bytes,1,opt,name=next_page_token,json=nextPageToken" json:"next_page_token,omitempty"`
	TraceConfigOverrides []*GoogleCloudApigeeV1TraceConfigOverride `protobuf:"bytes,2,rep,name=trace_config_overrides,json=traceConfigOverrides" json:"trace_config_overrides,omitempty"`
}

func (x *GoogleCloudApigeeV1ListTraceConfigOverridesResponse) Reset() {
	*x = GoogleCloudApigeeV1ListTraceConfigOverridesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[160]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1ListTraceConfigOverridesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1ListTraceConfigOverridesResponse) ProtoMessage() {}

func (x *GoogleCloudApigeeV1ListTraceConfigOverridesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[160]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1ListTraceConfigOverridesResponse.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1ListTraceConfigOverridesResponse) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{160}
}

func (x *GoogleCloudApigeeV1ListTraceConfigOverridesResponse) GetNextPageToken() string {
	if x != nil && x.NextPageToken != nil {
		return *x.NextPageToken
	}
	return ""
}

func (x *GoogleCloudApigeeV1ListTraceConfigOverridesResponse) GetTraceConfigOverrides() []*GoogleCloudApigeeV1TraceConfigOverride {
	if x != nil {
		return x.TraceConfigOverrides
	}
	return nil
}

type GoogleCloudApigeeV1Metadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Errors  []string `protobuf:"bytes,1,rep,name=errors" json:"errors,omitempty"`
	Notices []string `protobuf:"bytes,2,rep,name=notices" json:"notices,omitempty"`
}

func (x *GoogleCloudApigeeV1Metadata) Reset() {
	*x = GoogleCloudApigeeV1Metadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[161]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1Metadata) ProtoMessage() {}

func (x *GoogleCloudApigeeV1Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[161]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1Metadata.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1Metadata) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{161}
}

func (x *GoogleCloudApigeeV1Metadata) GetErrors() []string {
	if x != nil {
		return x.Errors
	}
	return nil
}

func (x *GoogleCloudApigeeV1Metadata) GetNotices() []string {
	if x != nil {
		return x.Notices
	}
	return nil
}

type GoogleCloudApigeeV1Metric struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   *string     `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Values []*any1.Any `protobuf:"bytes,2,rep,name=values" json:"values,omitempty"`
}

func (x *GoogleCloudApigeeV1Metric) Reset() {
	*x = GoogleCloudApigeeV1Metric{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[162]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1Metric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1Metric) ProtoMessage() {}

func (x *GoogleCloudApigeeV1Metric) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[162]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1Metric.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1Metric) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{162}
}

func (x *GoogleCloudApigeeV1Metric) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GoogleCloudApigeeV1Metric) GetValues() []*any1.Any {
	if x != nil {
		return x.Values
	}
	return nil
}

type GoogleCloudApigeeV1MetricAggregation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aggregation *string `protobuf:"bytes,1,opt,name=aggregation" json:"aggregation,omitempty"`
	Name        *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Order       *string `protobuf:"bytes,3,opt,name=order" json:"order,omitempty"`
}

func (x *GoogleCloudApigeeV1MetricAggregation) Reset() {
	*x = GoogleCloudApigeeV1MetricAggregation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[163]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1MetricAggregation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1MetricAggregation) ProtoMessage() {}

func (x *GoogleCloudApigeeV1MetricAggregation) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[163]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1MetricAggregation.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1MetricAggregation) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{163}
}

func (x *GoogleCloudApigeeV1MetricAggregation) GetAggregation() string {
	if x != nil && x.Aggregation != nil {
		return *x.Aggregation
	}
	return ""
}

func (x *GoogleCloudApigeeV1MetricAggregation) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GoogleCloudApigeeV1MetricAggregation) GetOrder() string {
	if x != nil && x.Order != nil {
		return *x.Order
	}
	return ""
}

type GoogleCloudApigeeV1MonetizationConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled *bool `protobuf:"varint,1,opt,name=enabled" json:"enabled,omitempty"`
}

func (x *GoogleCloudApigeeV1MonetizationConfig) Reset() {
	*x = GoogleCloudApigeeV1MonetizationConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[164]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1MonetizationConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1MonetizationConfig) ProtoMessage() {}

func (x *GoogleCloudApigeeV1MonetizationConfig) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[164]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1MonetizationConfig.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1MonetizationConfig) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{164}
}

func (x *GoogleCloudApigeeV1MonetizationConfig) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

type GoogleCloudApigeeV1NatAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IpAddress *string `protobuf:"bytes,1,opt,name=ip_address,json=ipAddress" json:"ip_address,omitempty"`
	Name      *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	State     *string `protobuf:"bytes,3,opt,name=state" json:"state,omitempty"`
}

func (x *GoogleCloudApigeeV1NatAddress) Reset() {
	*x = GoogleCloudApigeeV1NatAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[165]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1NatAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1NatAddress) ProtoMessage() {}

func (x *GoogleCloudApigeeV1NatAddress) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[165]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1NatAddress.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1NatAddress) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{165}
}

func (x *GoogleCloudApigeeV1NatAddress) GetIpAddress() string {
	if x != nil && x.IpAddress != nil {
		return *x.IpAddress
	}
	return ""
}

func (x *GoogleCloudApigeeV1NatAddress) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GoogleCloudApigeeV1NatAddress) GetState() string {
	if x != nil && x.State != nil {
		return *x.State
	}
	return ""
}

type GoogleCloudApigeeV1NodeConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentAggregateNodeCount *int64 `protobuf:"varint,1,opt,name=current_aggregate_node_count,json=currentAggregateNodeCount" json:"current_aggregate_node_count,omitempty"`
	MaxNodeCount              *int64 `protobuf:"varint,2,opt,name=max_node_count,json=maxNodeCount" json:"max_node_count,omitempty"`
	MinNodeCount              *int64 `protobuf:"varint,3,opt,name=min_node_count,json=minNodeCount" json:"min_node_count,omitempty"`
}

func (x *GoogleCloudApigeeV1NodeConfig) Reset() {
	*x = GoogleCloudApigeeV1NodeConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[166]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1NodeConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1NodeConfig) ProtoMessage() {}

func (x *GoogleCloudApigeeV1NodeConfig) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[166]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1NodeConfig.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1NodeConfig) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{166}
}

func (x *GoogleCloudApigeeV1NodeConfig) GetCurrentAggregateNodeCount() int64 {
	if x != nil && x.CurrentAggregateNodeCount != nil {
		return *x.CurrentAggregateNodeCount
	}
	return 0
}

func (x *GoogleCloudApigeeV1NodeConfig) GetMaxNodeCount() int64 {
	if x != nil && x.MaxNodeCount != nil {
		return *x.MaxNodeCount
	}
	return 0
}

func (x *GoogleCloudApigeeV1NodeConfig) GetMinNodeCount() int64 {
	if x != nil && x.MinNodeCount != nil {
		return *x.MinNodeCount
	}
	return 0
}

type GoogleCloudApigeeV1OASDocumentation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Format *string                               `protobuf:"bytes,1,opt,name=format" json:"format,omitempty"`
	Spec   *GoogleCloudApigeeV1DocumentationFile `protobuf:"bytes,2,opt,name=spec" json:"spec,omitempty"`
}

func (x *GoogleCloudApigeeV1OASDocumentation) Reset() {
	*x = GoogleCloudApigeeV1OASDocumentation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[167]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1OASDocumentation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1OASDocumentation) ProtoMessage() {}

func (x *GoogleCloudApigeeV1OASDocumentation) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[167]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1OASDocumentation.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1OASDocumentation) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{167}
}

func (x *GoogleCloudApigeeV1OASDocumentation) GetFormat() string {
	if x != nil && x.Format != nil {
		return *x.Format
	}
	return ""
}

func (x *GoogleCloudApigeeV1OASDocumentation) GetSpec() *GoogleCloudApigeeV1DocumentationFile {
	if x != nil {
		return x.Spec
	}
	return nil
}

type GoogleCloudApigeeV1Operation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Methods  []string `protobuf:"bytes,1,rep,name=methods" json:"methods,omitempty"`
	Resource *string  `protobuf:"bytes,2,opt,name=resource" json:"resource,omitempty"`
}

func (x *GoogleCloudApigeeV1Operation) Reset() {
	*x = GoogleCloudApigeeV1Operation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[168]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1Operation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1Operation) ProtoMessage() {}

func (x *GoogleCloudApigeeV1Operation) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[168]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1Operation.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1Operation) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{168}
}

func (x *GoogleCloudApigeeV1Operation) GetMethods() []string {
	if x != nil {
		return x.Methods
	}
	return nil
}

func (x *GoogleCloudApigeeV1Operation) GetResource() string {
	if x != nil && x.Resource != nil {
		return *x.Resource
	}
	return ""
}

type GoogleCloudApigeeV1OperationConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiSource  *string                         `protobuf:"bytes,1,opt,name=api_source,json=apiSource" json:"api_source,omitempty"`
	Attributes []*GoogleCloudApigeeV1Attribute `protobuf:"bytes,2,rep,name=attributes" json:"attributes,omitempty"`
	Operations []*GoogleCloudApigeeV1Operation `protobuf:"bytes,3,rep,name=operations" json:"operations,omitempty"`
	Quota      *GoogleCloudApigeeV1Quota       `protobuf:"bytes,4,opt,name=quota" json:"quota,omitempty"`
}

func (x *GoogleCloudApigeeV1OperationConfig) Reset() {
	*x = GoogleCloudApigeeV1OperationConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[169]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1OperationConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1OperationConfig) ProtoMessage() {}

func (x *GoogleCloudApigeeV1OperationConfig) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[169]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1OperationConfig.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1OperationConfig) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{169}
}

func (x *GoogleCloudApigeeV1OperationConfig) GetApiSource() string {
	if x != nil && x.ApiSource != nil {
		return *x.ApiSource
	}
	return ""
}

func (x *GoogleCloudApigeeV1OperationConfig) GetAttributes() []*GoogleCloudApigeeV1Attribute {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *GoogleCloudApigeeV1OperationConfig) GetOperations() []*GoogleCloudApigeeV1Operation {
	if x != nil {
		return x.Operations
	}
	return nil
}

func (x *GoogleCloudApigeeV1OperationConfig) GetQuota() *GoogleCloudApigeeV1Quota {
	if x != nil {
		return x.Quota
	}
	return nil
}

type GoogleCloudApigeeV1OperationGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationConfigType *string                               `protobuf:"bytes,1,opt,name=operation_config_type,json=operationConfigType" json:"operation_config_type,omitempty"`
	OperationConfigs    []*GoogleCloudApigeeV1OperationConfig `protobuf:"bytes,2,rep,name=operation_configs,json=operationConfigs" json:"operation_configs,omitempty"`
}

func (x *GoogleCloudApigeeV1OperationGroup) Reset() {
	*x = GoogleCloudApigeeV1OperationGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[170]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1OperationGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1OperationGroup) ProtoMessage() {}

func (x *GoogleCloudApigeeV1OperationGroup) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[170]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1OperationGroup.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1OperationGroup) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{170}
}

func (x *GoogleCloudApigeeV1OperationGroup) GetOperationConfigType() string {
	if x != nil && x.OperationConfigType != nil {
		return *x.OperationConfigType
	}
	return ""
}

func (x *GoogleCloudApigeeV1OperationGroup) GetOperationConfigs() []*GoogleCloudApigeeV1OperationConfig {
	if x != nil {
		return x.OperationConfigs
	}
	return nil
}

type GoogleCloudApigeeV1OperationMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationType      *string                                       `protobuf:"bytes,1,opt,name=operation_type,json=operationType" json:"operation_type,omitempty"`
	Progress           *GoogleCloudApigeeV1OperationMetadataProgress `protobuf:"bytes,2,opt,name=progress" json:"progress,omitempty"`
	State              *string                                       `protobuf:"bytes,3,opt,name=state" json:"state,omitempty"`
	TargetResourceName *string                                       `protobuf:"bytes,4,opt,name=target_resource_name,json=targetResourceName" json:"target_resource_name,omitempty"`
	Warnings           []string                                      `protobuf:"bytes,5,rep,name=warnings" json:"warnings,omitempty"`
}

func (x *GoogleCloudApigeeV1OperationMetadata) Reset() {
	*x = GoogleCloudApigeeV1OperationMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[171]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1OperationMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1OperationMetadata) ProtoMessage() {}

func (x *GoogleCloudApigeeV1OperationMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[171]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1OperationMetadata.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1OperationMetadata) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{171}
}

func (x *GoogleCloudApigeeV1OperationMetadata) GetOperationType() string {
	if x != nil && x.OperationType != nil {
		return *x.OperationType
	}
	return ""
}

func (x *GoogleCloudApigeeV1OperationMetadata) GetProgress() *GoogleCloudApigeeV1OperationMetadataProgress {
	if x != nil {
		return x.Progress
	}
	return nil
}

func (x *GoogleCloudApigeeV1OperationMetadata) GetState() string {
	if x != nil && x.State != nil {
		return *x.State
	}
	return ""
}

func (x *GoogleCloudApigeeV1OperationMetadata) GetTargetResourceName() string {
	if x != nil && x.TargetResourceName != nil {
		return *x.TargetResourceName
	}
	return ""
}

func (x *GoogleCloudApigeeV1OperationMetadata) GetWarnings() []string {
	if x != nil {
		return x.Warnings
	}
	return nil
}

type GoogleCloudApigeeV1OperationMetadataProgress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description *string              `protobuf:"bytes,1,opt,name=description" json:"description,omitempty"`
	Details     map[string]*any1.Any `protobuf:"bytes,2,rep,name=details" json:"details,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	PercentDone *int32               `protobuf:"varint,3,opt,name=percent_done,json=percentDone" json:"percent_done,omitempty"`
	State       *string              `protobuf:"bytes,4,opt,name=state" json:"state,omitempty"`
}

func (x *GoogleCloudApigeeV1OperationMetadataProgress) Reset() {
	*x = GoogleCloudApigeeV1OperationMetadataProgress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[172]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1OperationMetadataProgress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1OperationMetadataProgress) ProtoMessage() {}

func (x *GoogleCloudApigeeV1OperationMetadataProgress) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[172]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1OperationMetadataProgress.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1OperationMetadataProgress) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{172}
}

func (x *GoogleCloudApigeeV1OperationMetadataProgress) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *GoogleCloudApigeeV1OperationMetadataProgress) GetDetails() map[string]*any1.Any {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *GoogleCloudApigeeV1OperationMetadataProgress) GetPercentDone() int32 {
	if x != nil && x.PercentDone != nil {
		return *x.PercentDone
	}
	return 0
}

func (x *GoogleCloudApigeeV1OperationMetadataProgress) GetState() string {
	if x != nil && x.State != nil {
		return *x.State
	}
	return ""
}

type GoogleCloudApigeeV1OptimizedStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *GoogleCloudApigeeV1OptimizedStatsResponse `protobuf:"bytes,1,opt,name=response,json=Response" json:"response,omitempty"`
}

func (x *GoogleCloudApigeeV1OptimizedStats) Reset() {
	*x = GoogleCloudApigeeV1OptimizedStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[173]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1OptimizedStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1OptimizedStats) ProtoMessage() {}

func (x *GoogleCloudApigeeV1OptimizedStats) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[173]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1OptimizedStats.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1OptimizedStats) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{173}
}

func (x *GoogleCloudApigeeV1OptimizedStats) GetResponse() *GoogleCloudApigeeV1OptimizedStatsResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type GoogleCloudApigeeV1OptimizedStatsNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*any1.Any `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
}

func (x *GoogleCloudApigeeV1OptimizedStatsNode) Reset() {
	*x = GoogleCloudApigeeV1OptimizedStatsNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[174]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1OptimizedStatsNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1OptimizedStatsNode) ProtoMessage() {}

func (x *GoogleCloudApigeeV1OptimizedStatsNode) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[174]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1OptimizedStatsNode.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1OptimizedStatsNode) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{174}
}

func (x *GoogleCloudApigeeV1OptimizedStatsNode) GetData() []*any1.Any {
	if x != nil {
		return x.Data
	}
	return nil
}

type GoogleCloudApigeeV1OptimizedStatsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeUnit        []int64                                `protobuf:"varint,1,rep,name=time_unit,json=TimeUnit" json:"time_unit,omitempty"`
	MetaData        *GoogleCloudApigeeV1Metadata           `protobuf:"bytes,2,opt,name=meta_data,json=metaData" json:"meta_data,omitempty"`
	ResultTruncated *bool                                  `protobuf:"varint,3,opt,name=result_truncated,json=resultTruncated" json:"result_truncated,omitempty"`
	Stats           *GoogleCloudApigeeV1OptimizedStatsNode `protobuf:"bytes,4,opt,name=stats" json:"stats,omitempty"`
}

func (x *GoogleCloudApigeeV1OptimizedStatsResponse) Reset() {
	*x = GoogleCloudApigeeV1OptimizedStatsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[175]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1OptimizedStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1OptimizedStatsResponse) ProtoMessage() {}

func (x *GoogleCloudApigeeV1OptimizedStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[175]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1OptimizedStatsResponse.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1OptimizedStatsResponse) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{175}
}

func (x *GoogleCloudApigeeV1OptimizedStatsResponse) GetTimeUnit() []int64 {
	if x != nil {
		return x.TimeUnit
	}
	return nil
}

func (x *GoogleCloudApigeeV1OptimizedStatsResponse) GetMetaData() *GoogleCloudApigeeV1Metadata {
	if x != nil {
		return x.MetaData
	}
	return nil
}

func (x *GoogleCloudApigeeV1OptimizedStatsResponse) GetResultTruncated() bool {
	if x != nil && x.ResultTruncated != nil {
		return *x.ResultTruncated
	}
	return false
}

func (x *GoogleCloudApigeeV1OptimizedStatsResponse) GetStats() *GoogleCloudApigeeV1OptimizedStatsNode {
	if x != nil {
		return x.Stats
	}
	return nil
}

type GoogleCloudApigeeV1Organization struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddonsConfig                     *GoogleCloudApigeeV1AddonsConfig `protobuf:"bytes,1,opt,name=addons_config,json=addonsConfig" json:"addons_config,omitempty"`
	AnalyticsRegion                  *string                          `protobuf:"bytes,2,opt,name=analytics_region,json=analyticsRegion" json:"analytics_region,omitempty"`
	ApiConsumerDataEncryptionKeyName *string                          `protobuf:"bytes,3,opt,name=api_consumer_data_encryption_key_name,json=apiConsumerDataEncryptionKeyName" json:"api_consumer_data_encryption_key_name,omitempty"`
	ApiConsumerDataLocation          *string                          `protobuf:"bytes,4,opt,name=api_consumer_data_location,json=apiConsumerDataLocation" json:"api_consumer_data_location,omitempty"`
	ApigeeProjectId                  *string                          `protobuf:"bytes,5,opt,name=apigee_project_id,json=apigeeProjectId" json:"apigee_project_id,omitempty"`
	Attributes                       []string                         `protobuf:"bytes,6,rep,name=attributes" json:"attributes,omitempty"`
	AuthorizedNetwork                *string                          `protobuf:"bytes,7,opt,name=authorized_network,json=authorizedNetwork" json:"authorized_network,omitempty"`
	BillingType                      *string                          `protobuf:"bytes,8,opt,name=billing_type,json=billingType" json:"billing_type,omitempty"`
	CaCertificate                    []byte                           `protobuf:"bytes,9,opt,name=ca_certificate,json=caCertificate" json:"ca_certificate,omitempty"`
	ControlPlaneEncryptionKeyName    *string                          `protobuf:"bytes,10,opt,name=control_plane_encryption_key_name,json=controlPlaneEncryptionKeyName" json:"control_plane_encryption_key_name,omitempty"`
	CreatedAt                        *int64                           `protobuf:"varint,11,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	CustomerName                     *string                          `protobuf:"bytes,12,opt,name=customer_name,json=customerName" json:"customer_name,omitempty"`
	Description                      *string                          `protobuf:"bytes,13,opt,name=description" json:"description,omitempty"`
	DisableVpcPeering                *bool                            `protobuf:"varint,14,opt,name=disable_vpc_peering,json=disableVpcPeering" json:"disable_vpc_peering,omitempty"`
	DisplayName                      *string                          `protobuf:"bytes,15,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	Environments                     []string                         `protobuf:"bytes,16,rep,name=environments" json:"environments,omitempty"`
	ExpiresAt                        *int64                           `protobuf:"varint,17,opt,name=expires_at,json=expiresAt" json:"expires_at,omitempty"`
	LastModifiedAt                   *int64                           `protobuf:"varint,18,opt,name=last_modified_at,json=lastModifiedAt" json:"last_modified_at,omitempty"`
	Name                             *string                          `protobuf:"bytes,19,opt,name=name" json:"name,omitempty"`
	PortalDisabled                   *bool                            `protobuf:"varint,20,opt,name=portal_disabled,json=portalDisabled" json:"portal_disabled,omitempty"`
	ProjectId                        *string                          `protobuf:"bytes,21,opt,name=project_id,json=projectId" json:"project_id,omitempty"`
	Properties                       *GoogleCloudApigeeV1Properties   `protobuf:"bytes,22,opt,name=properties" json:"properties,omitempty"`
	RuntimeDatabaseEncryptionKeyName *string                          `protobuf:"bytes,23,opt,name=runtime_database_encryption_key_name,json=runtimeDatabaseEncryptionKeyName" json:"runtime_database_encryption_key_name,omitempty"`
	RuntimeType                      *string                          `protobuf:"bytes,24,opt,name=runtime_type,json=runtimeType" json:"runtime_type,omitempty"`
	State                            *string                          `protobuf:"bytes,25,opt,name=state" json:"state,omitempty"`
	SubscriptionPlan                 *string                          `protobuf:"bytes,26,opt,name=subscription_plan,json=subscriptionPlan" json:"subscription_plan,omitempty"`
	SubscriptionType                 *string                          `protobuf:"bytes,27,opt,name=subscription_type,json=subscriptionType" json:"subscription_type,omitempty"`
	Type                             *string                          `protobuf:"bytes,28,opt,name=type" json:"type,omitempty"`
}

func (x *GoogleCloudApigeeV1Organization) Reset() {
	*x = GoogleCloudApigeeV1Organization{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[176]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1Organization) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1Organization) ProtoMessage() {}

func (x *GoogleCloudApigeeV1Organization) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[176]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1Organization.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1Organization) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{176}
}

func (x *GoogleCloudApigeeV1Organization) GetAddonsConfig() *GoogleCloudApigeeV1AddonsConfig {
	if x != nil {
		return x.AddonsConfig
	}
	return nil
}

func (x *GoogleCloudApigeeV1Organization) GetAnalyticsRegion() string {
	if x != nil && x.AnalyticsRegion != nil {
		return *x.AnalyticsRegion
	}
	return ""
}

func (x *GoogleCloudApigeeV1Organization) GetApiConsumerDataEncryptionKeyName() string {
	if x != nil && x.ApiConsumerDataEncryptionKeyName != nil {
		return *x.ApiConsumerDataEncryptionKeyName
	}
	return ""
}

func (x *GoogleCloudApigeeV1Organization) GetApiConsumerDataLocation() string {
	if x != nil && x.ApiConsumerDataLocation != nil {
		return *x.ApiConsumerDataLocation
	}
	return ""
}

func (x *GoogleCloudApigeeV1Organization) GetApigeeProjectId() string {
	if x != nil && x.ApigeeProjectId != nil {
		return *x.ApigeeProjectId
	}
	return ""
}

func (x *GoogleCloudApigeeV1Organization) GetAttributes() []string {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *GoogleCloudApigeeV1Organization) GetAuthorizedNetwork() string {
	if x != nil && x.AuthorizedNetwork != nil {
		return *x.AuthorizedNetwork
	}
	return ""
}

func (x *GoogleCloudApigeeV1Organization) GetBillingType() string {
	if x != nil && x.BillingType != nil {
		return *x.BillingType
	}
	return ""
}

func (x *GoogleCloudApigeeV1Organization) GetCaCertificate() []byte {
	if x != nil {
		return x.CaCertificate
	}
	return nil
}

func (x *GoogleCloudApigeeV1Organization) GetControlPlaneEncryptionKeyName() string {
	if x != nil && x.ControlPlaneEncryptionKeyName != nil {
		return *x.ControlPlaneEncryptionKeyName
	}
	return ""
}

func (x *GoogleCloudApigeeV1Organization) GetCreatedAt() int64 {
	if x != nil && x.CreatedAt != nil {
		return *x.CreatedAt
	}
	return 0
}

func (x *GoogleCloudApigeeV1Organization) GetCustomerName() string {
	if x != nil && x.CustomerName != nil {
		return *x.CustomerName
	}
	return ""
}

func (x *GoogleCloudApigeeV1Organization) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *GoogleCloudApigeeV1Organization) GetDisableVpcPeering() bool {
	if x != nil && x.DisableVpcPeering != nil {
		return *x.DisableVpcPeering
	}
	return false
}

func (x *GoogleCloudApigeeV1Organization) GetDisplayName() string {
	if x != nil && x.DisplayName != nil {
		return *x.DisplayName
	}
	return ""
}

func (x *GoogleCloudApigeeV1Organization) GetEnvironments() []string {
	if x != nil {
		return x.Environments
	}
	return nil
}

func (x *GoogleCloudApigeeV1Organization) GetExpiresAt() int64 {
	if x != nil && x.ExpiresAt != nil {
		return *x.ExpiresAt
	}
	return 0
}

func (x *GoogleCloudApigeeV1Organization) GetLastModifiedAt() int64 {
	if x != nil && x.LastModifiedAt != nil {
		return *x.LastModifiedAt
	}
	return 0
}

func (x *GoogleCloudApigeeV1Organization) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GoogleCloudApigeeV1Organization) GetPortalDisabled() bool {
	if x != nil && x.PortalDisabled != nil {
		return *x.PortalDisabled
	}
	return false
}

func (x *GoogleCloudApigeeV1Organization) GetProjectId() string {
	if x != nil && x.ProjectId != nil {
		return *x.ProjectId
	}
	return ""
}

func (x *GoogleCloudApigeeV1Organization) GetProperties() *GoogleCloudApigeeV1Properties {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *GoogleCloudApigeeV1Organization) GetRuntimeDatabaseEncryptionKeyName() string {
	if x != nil && x.RuntimeDatabaseEncryptionKeyName != nil {
		return *x.RuntimeDatabaseEncryptionKeyName
	}
	return ""
}

func (x *GoogleCloudApigeeV1Organization) GetRuntimeType() string {
	if x != nil && x.RuntimeType != nil {
		return *x.RuntimeType
	}
	return ""
}

func (x *GoogleCloudApigeeV1Organization) GetState() string {
	if x != nil && x.State != nil {
		return *x.State
	}
	return ""
}

func (x *GoogleCloudApigeeV1Organization) GetSubscriptionPlan() string {
	if x != nil && x.SubscriptionPlan != nil {
		return *x.SubscriptionPlan
	}
	return ""
}

func (x *GoogleCloudApigeeV1Organization) GetSubscriptionType() string {
	if x != nil && x.SubscriptionType != nil {
		return *x.SubscriptionType
	}
	return ""
}

func (x *GoogleCloudApigeeV1Organization) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

type GoogleCloudApigeeV1OrganizationProjectMapping struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location     *string  `protobuf:"bytes,1,opt,name=location" json:"location,omitempty"`
	Organization *string  `protobuf:"bytes,2,opt,name=organization" json:"organization,omitempty"`
	ProjectId    *string  `protobuf:"bytes,3,opt,name=project_id,json=projectId" json:"project_id,omitempty"`
	ProjectIds   []string `protobuf:"bytes,4,rep,name=project_ids,json=projectIds" json:"project_ids,omitempty"`
}

func (x *GoogleCloudApigeeV1OrganizationProjectMapping) Reset() {
	*x = GoogleCloudApigeeV1OrganizationProjectMapping{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[177]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1OrganizationProjectMapping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1OrganizationProjectMapping) ProtoMessage() {}

func (x *GoogleCloudApigeeV1OrganizationProjectMapping) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[177]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1OrganizationProjectMapping.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1OrganizationProjectMapping) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{177}
}

func (x *GoogleCloudApigeeV1OrganizationProjectMapping) GetLocation() string {
	if x != nil && x.Location != nil {
		return *x.Location
	}
	return ""
}

func (x *GoogleCloudApigeeV1OrganizationProjectMapping) GetOrganization() string {
	if x != nil && x.Organization != nil {
		return *x.Organization
	}
	return ""
}

func (x *GoogleCloudApigeeV1OrganizationProjectMapping) GetProjectId() string {
	if x != nil && x.ProjectId != nil {
		return *x.ProjectId
	}
	return ""
}

func (x *GoogleCloudApigeeV1OrganizationProjectMapping) GetProjectIds() []string {
	if x != nil {
		return x.ProjectIds
	}
	return nil
}

type GoogleCloudApigeeV1PodStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppVersion           *string `protobuf:"bytes,1,opt,name=app_version,json=appVersion" json:"app_version,omitempty"`
	DeploymentStatus     *string `protobuf:"bytes,2,opt,name=deployment_status,json=deploymentStatus" json:"deployment_status,omitempty"`
	DeploymentStatusTime *int64  `protobuf:"varint,3,opt,name=deployment_status_time,json=deploymentStatusTime" json:"deployment_status_time,omitempty"`
	DeploymentTime       *int64  `protobuf:"varint,4,opt,name=deployment_time,json=deploymentTime" json:"deployment_time,omitempty"`
	PodName              *string `protobuf:"bytes,5,opt,name=pod_name,json=podName" json:"pod_name,omitempty"`
	PodStatus            *string `protobuf:"bytes,6,opt,name=pod_status,json=podStatus" json:"pod_status,omitempty"`
	PodStatusTime        *int64  `protobuf:"varint,7,opt,name=pod_status_time,json=podStatusTime" json:"pod_status_time,omitempty"`
	StatusCode           *string `protobuf:"bytes,8,opt,name=status_code,json=statusCode" json:"status_code,omitempty"`
	StatusCodeDetails    *string `protobuf:"bytes,9,opt,name=status_code_details,json=statusCodeDetails" json:"status_code_details,omitempty"`
}

func (x *GoogleCloudApigeeV1PodStatus) Reset() {
	*x = GoogleCloudApigeeV1PodStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[178]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1PodStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1PodStatus) ProtoMessage() {}

func (x *GoogleCloudApigeeV1PodStatus) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[178]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1PodStatus.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1PodStatus) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{178}
}

func (x *GoogleCloudApigeeV1PodStatus) GetAppVersion() string {
	if x != nil && x.AppVersion != nil {
		return *x.AppVersion
	}
	return ""
}

func (x *GoogleCloudApigeeV1PodStatus) GetDeploymentStatus() string {
	if x != nil && x.DeploymentStatus != nil {
		return *x.DeploymentStatus
	}
	return ""
}

func (x *GoogleCloudApigeeV1PodStatus) GetDeploymentStatusTime() int64 {
	if x != nil && x.DeploymentStatusTime != nil {
		return *x.DeploymentStatusTime
	}
	return 0
}

func (x *GoogleCloudApigeeV1PodStatus) GetDeploymentTime() int64 {
	if x != nil && x.DeploymentTime != nil {
		return *x.DeploymentTime
	}
	return 0
}

func (x *GoogleCloudApigeeV1PodStatus) GetPodName() string {
	if x != nil && x.PodName != nil {
		return *x.PodName
	}
	return ""
}

func (x *GoogleCloudApigeeV1PodStatus) GetPodStatus() string {
	if x != nil && x.PodStatus != nil {
		return *x.PodStatus
	}
	return ""
}

func (x *GoogleCloudApigeeV1PodStatus) GetPodStatusTime() int64 {
	if x != nil && x.PodStatusTime != nil {
		return *x.PodStatusTime
	}
	return 0
}

func (x *GoogleCloudApigeeV1PodStatus) GetStatusCode() string {
	if x != nil && x.StatusCode != nil {
		return *x.StatusCode
	}
	return ""
}

func (x *GoogleCloudApigeeV1PodStatus) GetStatusCodeDetails() string {
	if x != nil && x.StatusCodeDetails != nil {
		return *x.StatusCodeDetails
	}
	return ""
}

type GoogleCloudApigeeV1Point struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      *string                      `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Results []*GoogleCloudApigeeV1Result `protobuf:"bytes,2,rep,name=results" json:"results,omitempty"`
}

func (x *GoogleCloudApigeeV1Point) Reset() {
	*x = GoogleCloudApigeeV1Point{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[179]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1Point) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1Point) ProtoMessage() {}

func (x *GoogleCloudApigeeV1Point) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[179]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1Point.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1Point) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{179}
}

func (x *GoogleCloudApigeeV1Point) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *GoogleCloudApigeeV1Point) GetResults() []*GoogleCloudApigeeV1Result {
	if x != nil {
		return x.Results
	}
	return nil
}

type GoogleCloudApigeeV1ProfileConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Categories []*GoogleCloudApigeeV1ProfileConfigCategory `protobuf:"bytes,1,rep,name=categories" json:"categories,omitempty"`
}

func (x *GoogleCloudApigeeV1ProfileConfig) Reset() {
	*x = GoogleCloudApigeeV1ProfileConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[180]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1ProfileConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1ProfileConfig) ProtoMessage() {}

func (x *GoogleCloudApigeeV1ProfileConfig) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[180]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1ProfileConfig.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1ProfileConfig) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{180}
}

func (x *GoogleCloudApigeeV1ProfileConfig) GetCategories() []*GoogleCloudApigeeV1ProfileConfigCategory {
	if x != nil {
		return x.Categories
	}
	return nil
}

type GoogleCloudApigeeV1ProfileConfigAbuse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GoogleCloudApigeeV1ProfileConfigAbuse) Reset() {
	*x = GoogleCloudApigeeV1ProfileConfigAbuse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[181]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1ProfileConfigAbuse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1ProfileConfigAbuse) ProtoMessage() {}

func (x *GoogleCloudApigeeV1ProfileConfigAbuse) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[181]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1ProfileConfigAbuse.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1ProfileConfigAbuse) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{181}
}

type GoogleCloudApigeeV1ProfileConfigAuthorization struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GoogleCloudApigeeV1ProfileConfigAuthorization) Reset() {
	*x = GoogleCloudApigeeV1ProfileConfigAuthorization{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[182]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1ProfileConfigAuthorization) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1ProfileConfigAuthorization) ProtoMessage() {}

func (x *GoogleCloudApigeeV1ProfileConfigAuthorization) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[182]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1ProfileConfigAuthorization.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1ProfileConfigAuthorization) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{182}
}

type GoogleCloudApigeeV1ProfileConfigCORS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GoogleCloudApigeeV1ProfileConfigCORS) Reset() {
	*x = GoogleCloudApigeeV1ProfileConfigCORS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[183]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1ProfileConfigCORS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1ProfileConfigCORS) ProtoMessage() {}

func (x *GoogleCloudApigeeV1ProfileConfigCORS) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[183]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1ProfileConfigCORS.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1ProfileConfigCORS) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{183}
}

type GoogleCloudApigeeV1ProfileConfigCategory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Abuse         *GoogleCloudApigeeV1ProfileConfigAbuse         `protobuf:"bytes,1,opt,name=abuse" json:"abuse,omitempty"`
	Authorization *GoogleCloudApigeeV1ProfileConfigAuthorization `protobuf:"bytes,2,opt,name=authorization" json:"authorization,omitempty"`
	Cors          *GoogleCloudApigeeV1ProfileConfigCORS          `protobuf:"bytes,3,opt,name=cors" json:"cors,omitempty"`
	Mediation     *GoogleCloudApigeeV1ProfileConfigMediation     `protobuf:"bytes,4,opt,name=mediation" json:"mediation,omitempty"`
	Mtls          *GoogleCloudApigeeV1ProfileConfigMTLS          `protobuf:"bytes,5,opt,name=mtls" json:"mtls,omitempty"`
	Threat        *GoogleCloudApigeeV1ProfileConfigThreat        `protobuf:"bytes,6,opt,name=threat" json:"threat,omitempty"`
}

func (x *GoogleCloudApigeeV1ProfileConfigCategory) Reset() {
	*x = GoogleCloudApigeeV1ProfileConfigCategory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[184]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1ProfileConfigCategory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1ProfileConfigCategory) ProtoMessage() {}

func (x *GoogleCloudApigeeV1ProfileConfigCategory) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[184]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1ProfileConfigCategory.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1ProfileConfigCategory) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{184}
}

func (x *GoogleCloudApigeeV1ProfileConfigCategory) GetAbuse() *GoogleCloudApigeeV1ProfileConfigAbuse {
	if x != nil {
		return x.Abuse
	}
	return nil
}

func (x *GoogleCloudApigeeV1ProfileConfigCategory) GetAuthorization() *GoogleCloudApigeeV1ProfileConfigAuthorization {
	if x != nil {
		return x.Authorization
	}
	return nil
}

func (x *GoogleCloudApigeeV1ProfileConfigCategory) GetCors() *GoogleCloudApigeeV1ProfileConfigCORS {
	if x != nil {
		return x.Cors
	}
	return nil
}

func (x *GoogleCloudApigeeV1ProfileConfigCategory) GetMediation() *GoogleCloudApigeeV1ProfileConfigMediation {
	if x != nil {
		return x.Mediation
	}
	return nil
}

func (x *GoogleCloudApigeeV1ProfileConfigCategory) GetMtls() *GoogleCloudApigeeV1ProfileConfigMTLS {
	if x != nil {
		return x.Mtls
	}
	return nil
}

func (x *GoogleCloudApigeeV1ProfileConfigCategory) GetThreat() *GoogleCloudApigeeV1ProfileConfigThreat {
	if x != nil {
		return x.Threat
	}
	return nil
}

type GoogleCloudApigeeV1ProfileConfigMTLS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GoogleCloudApigeeV1ProfileConfigMTLS) Reset() {
	*x = GoogleCloudApigeeV1ProfileConfigMTLS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[185]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1ProfileConfigMTLS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1ProfileConfigMTLS) ProtoMessage() {}

func (x *GoogleCloudApigeeV1ProfileConfigMTLS) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[185]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1ProfileConfigMTLS.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1ProfileConfigMTLS) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{185}
}

type GoogleCloudApigeeV1ProfileConfigMediation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GoogleCloudApigeeV1ProfileConfigMediation) Reset() {
	*x = GoogleCloudApigeeV1ProfileConfigMediation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[186]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1ProfileConfigMediation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1ProfileConfigMediation) ProtoMessage() {}

func (x *GoogleCloudApigeeV1ProfileConfigMediation) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[186]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1ProfileConfigMediation.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1ProfileConfigMediation) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{186}
}

type GoogleCloudApigeeV1ProfileConfigThreat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GoogleCloudApigeeV1ProfileConfigThreat) Reset() {
	*x = GoogleCloudApigeeV1ProfileConfigThreat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[187]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1ProfileConfigThreat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1ProfileConfigThreat) ProtoMessage() {}

func (x *GoogleCloudApigeeV1ProfileConfigThreat) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[187]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1ProfileConfigThreat.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1ProfileConfigThreat) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{187}
}

type GoogleCloudApigeeV1Properties struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Property []*GoogleCloudApigeeV1Property `protobuf:"bytes,1,rep,name=property" json:"property,omitempty"`
}

func (x *GoogleCloudApigeeV1Properties) Reset() {
	*x = GoogleCloudApigeeV1Properties{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[188]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1Properties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1Properties) ProtoMessage() {}

func (x *GoogleCloudApigeeV1Properties) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[188]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1Properties.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1Properties) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{188}
}

func (x *GoogleCloudApigeeV1Properties) GetProperty() []*GoogleCloudApigeeV1Property {
	if x != nil {
		return x.Property
	}
	return nil
}

type GoogleCloudApigeeV1Property struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Value *string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (x *GoogleCloudApigeeV1Property) Reset() {
	*x = GoogleCloudApigeeV1Property{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[189]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1Property) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1Property) ProtoMessage() {}

func (x *GoogleCloudApigeeV1Property) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[189]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1Property.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1Property) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{189}
}

func (x *GoogleCloudApigeeV1Property) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GoogleCloudApigeeV1Property) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

type GoogleCloudApigeeV1ProvisionOrganizationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnalyticsRegion   *string `protobuf:"bytes,1,opt,name=analytics_region,json=analyticsRegion" json:"analytics_region,omitempty"`
	AuthorizedNetwork *string `protobuf:"bytes,2,opt,name=authorized_network,json=authorizedNetwork" json:"authorized_network,omitempty"`
	DisableVpcPeering *bool   `protobuf:"varint,3,opt,name=disable_vpc_peering,json=disableVpcPeering" json:"disable_vpc_peering,omitempty"`
	RuntimeLocation   *string `protobuf:"bytes,4,opt,name=runtime_location,json=runtimeLocation" json:"runtime_location,omitempty"`
}

func (x *GoogleCloudApigeeV1ProvisionOrganizationRequest) Reset() {
	*x = GoogleCloudApigeeV1ProvisionOrganizationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[190]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1ProvisionOrganizationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1ProvisionOrganizationRequest) ProtoMessage() {}

func (x *GoogleCloudApigeeV1ProvisionOrganizationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[190]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1ProvisionOrganizationRequest.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1ProvisionOrganizationRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{190}
}

func (x *GoogleCloudApigeeV1ProvisionOrganizationRequest) GetAnalyticsRegion() string {
	if x != nil && x.AnalyticsRegion != nil {
		return *x.AnalyticsRegion
	}
	return ""
}

func (x *GoogleCloudApigeeV1ProvisionOrganizationRequest) GetAuthorizedNetwork() string {
	if x != nil && x.AuthorizedNetwork != nil {
		return *x.AuthorizedNetwork
	}
	return ""
}

func (x *GoogleCloudApigeeV1ProvisionOrganizationRequest) GetDisableVpcPeering() bool {
	if x != nil && x.DisableVpcPeering != nil {
		return *x.DisableVpcPeering
	}
	return false
}

func (x *GoogleCloudApigeeV1ProvisionOrganizationRequest) GetRuntimeLocation() string {
	if x != nil && x.RuntimeLocation != nil {
		return *x.RuntimeLocation
	}
	return ""
}

type GoogleCloudApigeeV1Query struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CsvDelimiter       *string                           `protobuf:"bytes,1,opt,name=csv_delimiter,json=csvDelimiter" json:"csv_delimiter,omitempty"`
	Dimensions         []string                          `protobuf:"bytes,2,rep,name=dimensions" json:"dimensions,omitempty"`
	EnvgroupHostname   *string                           `protobuf:"bytes,3,opt,name=envgroup_hostname,json=envgroupHostname" json:"envgroup_hostname,omitempty"`
	Filter             *string                           `protobuf:"bytes,4,opt,name=filter" json:"filter,omitempty"`
	GroupByTimeUnit    *string                           `protobuf:"bytes,5,opt,name=group_by_time_unit,json=groupByTimeUnit" json:"group_by_time_unit,omitempty"`
	Limit              *int32                            `protobuf:"varint,6,opt,name=limit" json:"limit,omitempty"`
	Metrics            []*GoogleCloudApigeeV1QueryMetric `protobuf:"bytes,7,rep,name=metrics" json:"metrics,omitempty"`
	Name               *string                           `protobuf:"bytes,8,opt,name=name" json:"name,omitempty"`
	OutputFormat       *string                           `protobuf:"bytes,9,opt,name=output_format,json=outputFormat" json:"output_format,omitempty"`
	ReportDefinitionId *string                           `protobuf:"bytes,10,opt,name=report_definition_id,json=reportDefinitionId" json:"report_definition_id,omitempty"`
	TimeRange          *any1.Any                         `protobuf:"bytes,11,opt,name=time_range,json=timeRange" json:"time_range,omitempty"`
}

func (x *GoogleCloudApigeeV1Query) Reset() {
	*x = GoogleCloudApigeeV1Query{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[191]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1Query) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1Query) ProtoMessage() {}

func (x *GoogleCloudApigeeV1Query) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[191]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1Query.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1Query) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{191}
}

func (x *GoogleCloudApigeeV1Query) GetCsvDelimiter() string {
	if x != nil && x.CsvDelimiter != nil {
		return *x.CsvDelimiter
	}
	return ""
}

func (x *GoogleCloudApigeeV1Query) GetDimensions() []string {
	if x != nil {
		return x.Dimensions
	}
	return nil
}

func (x *GoogleCloudApigeeV1Query) GetEnvgroupHostname() string {
	if x != nil && x.EnvgroupHostname != nil {
		return *x.EnvgroupHostname
	}
	return ""
}

func (x *GoogleCloudApigeeV1Query) GetFilter() string {
	if x != nil && x.Filter != nil {
		return *x.Filter
	}
	return ""
}

func (x *GoogleCloudApigeeV1Query) GetGroupByTimeUnit() string {
	if x != nil && x.GroupByTimeUnit != nil {
		return *x.GroupByTimeUnit
	}
	return ""
}

func (x *GoogleCloudApigeeV1Query) GetLimit() int32 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

func (x *GoogleCloudApigeeV1Query) GetMetrics() []*GoogleCloudApigeeV1QueryMetric {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *GoogleCloudApigeeV1Query) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GoogleCloudApigeeV1Query) GetOutputFormat() string {
	if x != nil && x.OutputFormat != nil {
		return *x.OutputFormat
	}
	return ""
}

func (x *GoogleCloudApigeeV1Query) GetReportDefinitionId() string {
	if x != nil && x.ReportDefinitionId != nil {
		return *x.ReportDefinitionId
	}
	return ""
}

func (x *GoogleCloudApigeeV1Query) GetTimeRange() *any1.Any {
	if x != nil {
		return x.TimeRange
	}
	return nil
}

type GoogleCloudApigeeV1QueryMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dimensions     []string `protobuf:"bytes,1,rep,name=dimensions" json:"dimensions,omitempty"`
	EndTimestamp   *string  `protobuf:"bytes,2,opt,name=end_timestamp,json=endTimestamp" json:"end_timestamp,omitempty"`
	Metrics        []string `protobuf:"bytes,3,rep,name=metrics" json:"metrics,omitempty"`
	OutputFormat   *string  `protobuf:"bytes,4,opt,name=output_format,json=outputFormat" json:"output_format,omitempty"`
	StartTimestamp *string  `protobuf:"bytes,5,opt,name=start_timestamp,json=startTimestamp" json:"start_timestamp,omitempty"`
	TimeUnit       *string  `protobuf:"bytes,6,opt,name=time_unit,json=timeUnit" json:"time_unit,omitempty"`
}

func (x *GoogleCloudApigeeV1QueryMetadata) Reset() {
	*x = GoogleCloudApigeeV1QueryMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[192]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1QueryMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1QueryMetadata) ProtoMessage() {}

func (x *GoogleCloudApigeeV1QueryMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[192]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1QueryMetadata.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1QueryMetadata) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{192}
}

func (x *GoogleCloudApigeeV1QueryMetadata) GetDimensions() []string {
	if x != nil {
		return x.Dimensions
	}
	return nil
}

func (x *GoogleCloudApigeeV1QueryMetadata) GetEndTimestamp() string {
	if x != nil && x.EndTimestamp != nil {
		return *x.EndTimestamp
	}
	return ""
}

func (x *GoogleCloudApigeeV1QueryMetadata) GetMetrics() []string {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *GoogleCloudApigeeV1QueryMetadata) GetOutputFormat() string {
	if x != nil && x.OutputFormat != nil {
		return *x.OutputFormat
	}
	return ""
}

func (x *GoogleCloudApigeeV1QueryMetadata) GetStartTimestamp() string {
	if x != nil && x.StartTimestamp != nil {
		return *x.StartTimestamp
	}
	return ""
}

func (x *GoogleCloudApigeeV1QueryMetadata) GetTimeUnit() string {
	if x != nil && x.TimeUnit != nil {
		return *x.TimeUnit
	}
	return ""
}

type GoogleCloudApigeeV1QueryMetric struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Alias    *string `protobuf:"bytes,1,opt,name=alias" json:"alias,omitempty"`
	Function *string `protobuf:"bytes,2,opt,name=function" json:"function,omitempty"`
	Name     *string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Operator *string `protobuf:"bytes,4,opt,name=operator" json:"operator,omitempty"`
	Value    *string `protobuf:"bytes,5,opt,name=value" json:"value,omitempty"`
}

func (x *GoogleCloudApigeeV1QueryMetric) Reset() {
	*x = GoogleCloudApigeeV1QueryMetric{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[193]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1QueryMetric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1QueryMetric) ProtoMessage() {}

func (x *GoogleCloudApigeeV1QueryMetric) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[193]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1QueryMetric.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1QueryMetric) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{193}
}

func (x *GoogleCloudApigeeV1QueryMetric) GetAlias() string {
	if x != nil && x.Alias != nil {
		return *x.Alias
	}
	return ""
}

func (x *GoogleCloudApigeeV1QueryMetric) GetFunction() string {
	if x != nil && x.Function != nil {
		return *x.Function
	}
	return ""
}

func (x *GoogleCloudApigeeV1QueryMetric) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GoogleCloudApigeeV1QueryMetric) GetOperator() string {
	if x != nil && x.Operator != nil {
		return *x.Operator
	}
	return ""
}

func (x *GoogleCloudApigeeV1QueryMetric) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

type GoogleCloudApigeeV1QueryTabularStatsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dimensions []string                                `protobuf:"bytes,1,rep,name=dimensions" json:"dimensions,omitempty"`
	Filter     *string                                 `protobuf:"bytes,2,opt,name=filter" json:"filter,omitempty"`
	Metrics    []*GoogleCloudApigeeV1MetricAggregation `protobuf:"bytes,3,rep,name=metrics" json:"metrics,omitempty"`
	PageSize   *int32                                  `protobuf:"varint,4,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	PageToken  *string                                 `protobuf:"bytes,5,opt,name=page_token,json=pageToken" json:"page_token,omitempty"`
	TimeRange  *GoogleTypeInterval                     `protobuf:"bytes,6,opt,name=time_range,json=timeRange" json:"time_range,omitempty"`
}

func (x *GoogleCloudApigeeV1QueryTabularStatsRequest) Reset() {
	*x = GoogleCloudApigeeV1QueryTabularStatsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[194]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1QueryTabularStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1QueryTabularStatsRequest) ProtoMessage() {}

func (x *GoogleCloudApigeeV1QueryTabularStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[194]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1QueryTabularStatsRequest.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1QueryTabularStatsRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{194}
}

func (x *GoogleCloudApigeeV1QueryTabularStatsRequest) GetDimensions() []string {
	if x != nil {
		return x.Dimensions
	}
	return nil
}

func (x *GoogleCloudApigeeV1QueryTabularStatsRequest) GetFilter() string {
	if x != nil && x.Filter != nil {
		return *x.Filter
	}
	return ""
}

func (x *GoogleCloudApigeeV1QueryTabularStatsRequest) GetMetrics() []*GoogleCloudApigeeV1MetricAggregation {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *GoogleCloudApigeeV1QueryTabularStatsRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *GoogleCloudApigeeV1QueryTabularStatsRequest) GetPageToken() string {
	if x != nil && x.PageToken != nil {
		return *x.PageToken
	}
	return ""
}

func (x *GoogleCloudApigeeV1QueryTabularStatsRequest) GetTimeRange() *GoogleTypeInterval {
	if x != nil {
		return x.TimeRange
	}
	return nil
}

type GoogleCloudApigeeV1QueryTabularStatsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Columns       []string    `protobuf:"bytes,1,rep,name=columns" json:"columns,omitempty"`
	NextPageToken *string     `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken" json:"next_page_token,omitempty"`
	Values        []*any1.Any `protobuf:"bytes,3,rep,name=values" json:"values,omitempty"`
}

func (x *GoogleCloudApigeeV1QueryTabularStatsResponse) Reset() {
	*x = GoogleCloudApigeeV1QueryTabularStatsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[195]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1QueryTabularStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1QueryTabularStatsResponse) ProtoMessage() {}

func (x *GoogleCloudApigeeV1QueryTabularStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[195]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1QueryTabularStatsResponse.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1QueryTabularStatsResponse) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{195}
}

func (x *GoogleCloudApigeeV1QueryTabularStatsResponse) GetColumns() []string {
	if x != nil {
		return x.Columns
	}
	return nil
}

func (x *GoogleCloudApigeeV1QueryTabularStatsResponse) GetNextPageToken() string {
	if x != nil && x.NextPageToken != nil {
		return *x.NextPageToken
	}
	return ""
}

func (x *GoogleCloudApigeeV1QueryTabularStatsResponse) GetValues() []*any1.Any {
	if x != nil {
		return x.Values
	}
	return nil
}

type GoogleCloudApigeeV1QueryTimeSeriesStatsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dimensions     []string                                `protobuf:"bytes,1,rep,name=dimensions" json:"dimensions,omitempty"`
	Filter         *string                                 `protobuf:"bytes,2,opt,name=filter" json:"filter,omitempty"`
	Metrics        []*GoogleCloudApigeeV1MetricAggregation `protobuf:"bytes,3,rep,name=metrics" json:"metrics,omitempty"`
	PageSize       *int32                                  `protobuf:"varint,4,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	PageToken      *string                                 `protobuf:"bytes,5,opt,name=page_token,json=pageToken" json:"page_token,omitempty"`
	TimeRange      *GoogleTypeInterval                     `protobuf:"bytes,6,opt,name=time_range,json=timeRange" json:"time_range,omitempty"`
	TimestampOrder *string                                 `protobuf:"bytes,7,opt,name=timestamp_order,json=timestampOrder" json:"timestamp_order,omitempty"`
	WindowSize     *string                                 `protobuf:"bytes,8,opt,name=window_size,json=windowSize" json:"window_size,omitempty"`
}

func (x *GoogleCloudApigeeV1QueryTimeSeriesStatsRequest) Reset() {
	*x = GoogleCloudApigeeV1QueryTimeSeriesStatsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[196]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1QueryTimeSeriesStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1QueryTimeSeriesStatsRequest) ProtoMessage() {}

func (x *GoogleCloudApigeeV1QueryTimeSeriesStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[196]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1QueryTimeSeriesStatsRequest.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1QueryTimeSeriesStatsRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{196}
}

func (x *GoogleCloudApigeeV1QueryTimeSeriesStatsRequest) GetDimensions() []string {
	if x != nil {
		return x.Dimensions
	}
	return nil
}

func (x *GoogleCloudApigeeV1QueryTimeSeriesStatsRequest) GetFilter() string {
	if x != nil && x.Filter != nil {
		return *x.Filter
	}
	return ""
}

func (x *GoogleCloudApigeeV1QueryTimeSeriesStatsRequest) GetMetrics() []*GoogleCloudApigeeV1MetricAggregation {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *GoogleCloudApigeeV1QueryTimeSeriesStatsRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *GoogleCloudApigeeV1QueryTimeSeriesStatsRequest) GetPageToken() string {
	if x != nil && x.PageToken != nil {
		return *x.PageToken
	}
	return ""
}

func (x *GoogleCloudApigeeV1QueryTimeSeriesStatsRequest) GetTimeRange() *GoogleTypeInterval {
	if x != nil {
		return x.TimeRange
	}
	return nil
}

func (x *GoogleCloudApigeeV1QueryTimeSeriesStatsRequest) GetTimestampOrder() string {
	if x != nil && x.TimestampOrder != nil {
		return *x.TimestampOrder
	}
	return ""
}

func (x *GoogleCloudApigeeV1QueryTimeSeriesStatsRequest) GetWindowSize() string {
	if x != nil && x.WindowSize != nil {
		return *x.WindowSize
	}
	return ""
}

type GoogleCloudApigeeV1QueryTimeSeriesStatsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Columns       []string                                                   `protobuf:"bytes,1,rep,name=columns" json:"columns,omitempty"`
	NextPageToken *string                                                    `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken" json:"next_page_token,omitempty"`
	Values        []*GoogleCloudApigeeV1QueryTimeSeriesStatsResponseSequence `protobuf:"bytes,3,rep,name=values" json:"values,omitempty"`
}

func (x *GoogleCloudApigeeV1QueryTimeSeriesStatsResponse) Reset() {
	*x = GoogleCloudApigeeV1QueryTimeSeriesStatsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[197]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1QueryTimeSeriesStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1QueryTimeSeriesStatsResponse) ProtoMessage() {}

func (x *GoogleCloudApigeeV1QueryTimeSeriesStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[197]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1QueryTimeSeriesStatsResponse.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1QueryTimeSeriesStatsResponse) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{197}
}

func (x *GoogleCloudApigeeV1QueryTimeSeriesStatsResponse) GetColumns() []string {
	if x != nil {
		return x.Columns
	}
	return nil
}

func (x *GoogleCloudApigeeV1QueryTimeSeriesStatsResponse) GetNextPageToken() string {
	if x != nil && x.NextPageToken != nil {
		return *x.NextPageToken
	}
	return ""
}

func (x *GoogleCloudApigeeV1QueryTimeSeriesStatsResponse) GetValues() []*GoogleCloudApigeeV1QueryTimeSeriesStatsResponseSequence {
	if x != nil {
		return x.Values
	}
	return nil
}

type GoogleCloudApigeeV1QueryTimeSeriesStatsResponseSequence struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dimensions map[string]string `protobuf:"bytes,1,rep,name=dimensions" json:"dimensions,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Points     []*any1.Any       `protobuf:"bytes,2,rep,name=points" json:"points,omitempty"`
}

func (x *GoogleCloudApigeeV1QueryTimeSeriesStatsResponseSequence) Reset() {
	*x = GoogleCloudApigeeV1QueryTimeSeriesStatsResponseSequence{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[198]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1QueryTimeSeriesStatsResponseSequence) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1QueryTimeSeriesStatsResponseSequence) ProtoMessage() {}

func (x *GoogleCloudApigeeV1QueryTimeSeriesStatsResponseSequence) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[198]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1QueryTimeSeriesStatsResponseSequence.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1QueryTimeSeriesStatsResponseSequence) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{198}
}

func (x *GoogleCloudApigeeV1QueryTimeSeriesStatsResponseSequence) GetDimensions() map[string]string {
	if x != nil {
		return x.Dimensions
	}
	return nil
}

func (x *GoogleCloudApigeeV1QueryTimeSeriesStatsResponseSequence) GetPoints() []*any1.Any {
	if x != nil {
		return x.Points
	}
	return nil
}

type GoogleCloudApigeeV1Quota struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Interval *string `protobuf:"bytes,1,opt,name=interval" json:"interval,omitempty"`
	Limit    *string `protobuf:"bytes,2,opt,name=limit" json:"limit,omitempty"`
	TimeUnit *string `protobuf:"bytes,3,opt,name=time_unit,json=timeUnit" json:"time_unit,omitempty"`
}

func (x *GoogleCloudApigeeV1Quota) Reset() {
	*x = GoogleCloudApigeeV1Quota{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[199]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1Quota) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1Quota) ProtoMessage() {}

func (x *GoogleCloudApigeeV1Quota) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[199]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1Quota.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1Quota) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{199}
}

func (x *GoogleCloudApigeeV1Quota) GetInterval() string {
	if x != nil && x.Interval != nil {
		return *x.Interval
	}
	return ""
}

func (x *GoogleCloudApigeeV1Quota) GetLimit() string {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return ""
}

func (x *GoogleCloudApigeeV1Quota) GetTimeUnit() string {
	if x != nil && x.TimeUnit != nil {
		return *x.TimeUnit
	}
	return ""
}

type GoogleCloudApigeeV1RatePlan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Apiproduct              *string                                 `protobuf:"bytes,1,opt,name=apiproduct" json:"apiproduct,omitempty"`
	BillingPeriod           *string                                 `protobuf:"bytes,2,opt,name=billing_period,json=billingPeriod" json:"billing_period,omitempty"`
	ConsumptionPricingRates []*GoogleCloudApigeeV1RateRange         `protobuf:"bytes,3,rep,name=consumption_pricing_rates,json=consumptionPricingRates" json:"consumption_pricing_rates,omitempty"`
	ConsumptionPricingType  *string                                 `protobuf:"bytes,4,opt,name=consumption_pricing_type,json=consumptionPricingType" json:"consumption_pricing_type,omitempty"`
	CreatedAt               *int64                                  `protobuf:"varint,5,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	CurrencyCode            *string                                 `protobuf:"bytes,6,opt,name=currency_code,json=currencyCode" json:"currency_code,omitempty"`
	Description             *string                                 `protobuf:"bytes,7,opt,name=description" json:"description,omitempty"`
	DisplayName             *string                                 `protobuf:"bytes,8,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	EndTime                 *int64                                  `protobuf:"varint,9,opt,name=end_time,json=endTime" json:"end_time,omitempty"`
	FixedFeeFrequency       *int32                                  `protobuf:"varint,10,opt,name=fixed_fee_frequency,json=fixedFeeFrequency" json:"fixed_fee_frequency,omitempty"`
	FixedRecurringFee       *GoogleTypeMoney                        `protobuf:"bytes,11,opt,name=fixed_recurring_fee,json=fixedRecurringFee" json:"fixed_recurring_fee,omitempty"`
	LastModifiedAt          *int64                                  `protobuf:"varint,12,opt,name=last_modified_at,json=lastModifiedAt" json:"last_modified_at,omitempty"`
	Name                    *string                                 `protobuf:"bytes,13,opt,name=name" json:"name,omitempty"`
	PaymentFundingModel     *string                                 `protobuf:"bytes,14,opt,name=payment_funding_model,json=paymentFundingModel" json:"payment_funding_model,omitempty"`
	RevenueShareRates       []*GoogleCloudApigeeV1RevenueShareRange `protobuf:"bytes,15,rep,name=revenue_share_rates,json=revenueShareRates" json:"revenue_share_rates,omitempty"`
	RevenueShareType        *string                                 `protobuf:"bytes,16,opt,name=revenue_share_type,json=revenueShareType" json:"revenue_share_type,omitempty"`
	SetupFee                *GoogleTypeMoney                        `protobuf:"bytes,17,opt,name=setup_fee,json=setupFee" json:"setup_fee,omitempty"`
	StartTime               *int64                                  `protobuf:"varint,18,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	State                   *string                                 `protobuf:"bytes,19,opt,name=state" json:"state,omitempty"`
}

func (x *GoogleCloudApigeeV1RatePlan) Reset() {
	*x = GoogleCloudApigeeV1RatePlan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[200]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1RatePlan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1RatePlan) ProtoMessage() {}

func (x *GoogleCloudApigeeV1RatePlan) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[200]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1RatePlan.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1RatePlan) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{200}
}

func (x *GoogleCloudApigeeV1RatePlan) GetApiproduct() string {
	if x != nil && x.Apiproduct != nil {
		return *x.Apiproduct
	}
	return ""
}

func (x *GoogleCloudApigeeV1RatePlan) GetBillingPeriod() string {
	if x != nil && x.BillingPeriod != nil {
		return *x.BillingPeriod
	}
	return ""
}

func (x *GoogleCloudApigeeV1RatePlan) GetConsumptionPricingRates() []*GoogleCloudApigeeV1RateRange {
	if x != nil {
		return x.ConsumptionPricingRates
	}
	return nil
}

func (x *GoogleCloudApigeeV1RatePlan) GetConsumptionPricingType() string {
	if x != nil && x.ConsumptionPricingType != nil {
		return *x.ConsumptionPricingType
	}
	return ""
}

func (x *GoogleCloudApigeeV1RatePlan) GetCreatedAt() int64 {
	if x != nil && x.CreatedAt != nil {
		return *x.CreatedAt
	}
	return 0
}

func (x *GoogleCloudApigeeV1RatePlan) GetCurrencyCode() string {
	if x != nil && x.CurrencyCode != nil {
		return *x.CurrencyCode
	}
	return ""
}

func (x *GoogleCloudApigeeV1RatePlan) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *GoogleCloudApigeeV1RatePlan) GetDisplayName() string {
	if x != nil && x.DisplayName != nil {
		return *x.DisplayName
	}
	return ""
}

func (x *GoogleCloudApigeeV1RatePlan) GetEndTime() int64 {
	if x != nil && x.EndTime != nil {
		return *x.EndTime
	}
	return 0
}

func (x *GoogleCloudApigeeV1RatePlan) GetFixedFeeFrequency() int32 {
	if x != nil && x.FixedFeeFrequency != nil {
		return *x.FixedFeeFrequency
	}
	return 0
}

func (x *GoogleCloudApigeeV1RatePlan) GetFixedRecurringFee() *GoogleTypeMoney {
	if x != nil {
		return x.FixedRecurringFee
	}
	return nil
}

func (x *GoogleCloudApigeeV1RatePlan) GetLastModifiedAt() int64 {
	if x != nil && x.LastModifiedAt != nil {
		return *x.LastModifiedAt
	}
	return 0
}

func (x *GoogleCloudApigeeV1RatePlan) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GoogleCloudApigeeV1RatePlan) GetPaymentFundingModel() string {
	if x != nil && x.PaymentFundingModel != nil {
		return *x.PaymentFundingModel
	}
	return ""
}

func (x *GoogleCloudApigeeV1RatePlan) GetRevenueShareRates() []*GoogleCloudApigeeV1RevenueShareRange {
	if x != nil {
		return x.RevenueShareRates
	}
	return nil
}

func (x *GoogleCloudApigeeV1RatePlan) GetRevenueShareType() string {
	if x != nil && x.RevenueShareType != nil {
		return *x.RevenueShareType
	}
	return ""
}

func (x *GoogleCloudApigeeV1RatePlan) GetSetupFee() *GoogleTypeMoney {
	if x != nil {
		return x.SetupFee
	}
	return nil
}

func (x *GoogleCloudApigeeV1RatePlan) GetStartTime() int64 {
	if x != nil && x.StartTime != nil {
		return *x.StartTime
	}
	return 0
}

func (x *GoogleCloudApigeeV1RatePlan) GetState() string {
	if x != nil && x.State != nil {
		return *x.State
	}
	return ""
}

type GoogleCloudApigeeV1RateRange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	End   *int64           `protobuf:"varint,1,opt,name=end" json:"end,omitempty"`
	Fee   *GoogleTypeMoney `protobuf:"bytes,2,opt,name=fee" json:"fee,omitempty"`
	Start *int64           `protobuf:"varint,3,opt,name=start" json:"start,omitempty"`
}

func (x *GoogleCloudApigeeV1RateRange) Reset() {
	*x = GoogleCloudApigeeV1RateRange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[201]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1RateRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1RateRange) ProtoMessage() {}

func (x *GoogleCloudApigeeV1RateRange) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[201]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1RateRange.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1RateRange) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{201}
}

func (x *GoogleCloudApigeeV1RateRange) GetEnd() int64 {
	if x != nil && x.End != nil {
		return *x.End
	}
	return 0
}

func (x *GoogleCloudApigeeV1RateRange) GetFee() *GoogleTypeMoney {
	if x != nil {
		return x.Fee
	}
	return nil
}

func (x *GoogleCloudApigeeV1RateRange) GetStart() int64 {
	if x != nil && x.Start != nil {
		return *x.Start
	}
	return 0
}

type GoogleCloudApigeeV1Reference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description  *string `protobuf:"bytes,1,opt,name=description" json:"description,omitempty"`
	Name         *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Refers       *string `protobuf:"bytes,3,opt,name=refers" json:"refers,omitempty"`
	ResourceType *string `protobuf:"bytes,4,opt,name=resource_type,json=resourceType" json:"resource_type,omitempty"`
}

func (x *GoogleCloudApigeeV1Reference) Reset() {
	*x = GoogleCloudApigeeV1Reference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[202]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1Reference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1Reference) ProtoMessage() {}

func (x *GoogleCloudApigeeV1Reference) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[202]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1Reference.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1Reference) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{202}
}

func (x *GoogleCloudApigeeV1Reference) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *GoogleCloudApigeeV1Reference) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GoogleCloudApigeeV1Reference) GetRefers() string {
	if x != nil && x.Refers != nil {
		return *x.Refers
	}
	return ""
}

func (x *GoogleCloudApigeeV1Reference) GetResourceType() string {
	if x != nil && x.ResourceType != nil {
		return *x.ResourceType
	}
	return ""
}

type GoogleCloudApigeeV1ReferenceConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	ResourceName *string `protobuf:"bytes,2,opt,name=resource_name,json=resourceName" json:"resource_name,omitempty"`
}

func (x *GoogleCloudApigeeV1ReferenceConfig) Reset() {
	*x = GoogleCloudApigeeV1ReferenceConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[203]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1ReferenceConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1ReferenceConfig) ProtoMessage() {}

func (x *GoogleCloudApigeeV1ReferenceConfig) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[203]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1ReferenceConfig.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1ReferenceConfig) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{203}
}

func (x *GoogleCloudApigeeV1ReferenceConfig) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GoogleCloudApigeeV1ReferenceConfig) GetResourceName() string {
	if x != nil && x.ResourceName != nil {
		return *x.ResourceName
	}
	return ""
}

type GoogleCloudApigeeV1ReportInstanceStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceUid *string                              `protobuf:"bytes,1,opt,name=instance_uid,json=instanceUid" json:"instance_uid,omitempty"`
	ReportTime  *timestamp.Timestamp                 `protobuf:"bytes,2,opt,name=report_time,json=reportTime" json:"report_time,omitempty"`
	Resources   []*GoogleCloudApigeeV1ResourceStatus `protobuf:"bytes,3,rep,name=resources" json:"resources,omitempty"`
}

func (x *GoogleCloudApigeeV1ReportInstanceStatusRequest) Reset() {
	*x = GoogleCloudApigeeV1ReportInstanceStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[204]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1ReportInstanceStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1ReportInstanceStatusRequest) ProtoMessage() {}

func (x *GoogleCloudApigeeV1ReportInstanceStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[204]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1ReportInstanceStatusRequest.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1ReportInstanceStatusRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{204}
}

func (x *GoogleCloudApigeeV1ReportInstanceStatusRequest) GetInstanceUid() string {
	if x != nil && x.InstanceUid != nil {
		return *x.InstanceUid
	}
	return ""
}

func (x *GoogleCloudApigeeV1ReportInstanceStatusRequest) GetReportTime() *timestamp.Timestamp {
	if x != nil {
		return x.ReportTime
	}
	return nil
}

func (x *GoogleCloudApigeeV1ReportInstanceStatusRequest) GetResources() []*GoogleCloudApigeeV1ResourceStatus {
	if x != nil {
		return x.Resources
	}
	return nil
}

type GoogleCloudApigeeV1ReportInstanceStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GoogleCloudApigeeV1ReportInstanceStatusResponse) Reset() {
	*x = GoogleCloudApigeeV1ReportInstanceStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[205]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1ReportInstanceStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1ReportInstanceStatusResponse) ProtoMessage() {}

func (x *GoogleCloudApigeeV1ReportInstanceStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[205]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1ReportInstanceStatusResponse.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1ReportInstanceStatusResponse) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{205}
}

type GoogleCloudApigeeV1ReportProperty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Property *string                         `protobuf:"bytes,1,opt,name=property" json:"property,omitempty"`
	Value    []*GoogleCloudApigeeV1Attribute `protobuf:"bytes,2,rep,name=value" json:"value,omitempty"`
}

func (x *GoogleCloudApigeeV1ReportProperty) Reset() {
	*x = GoogleCloudApigeeV1ReportProperty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[206]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1ReportProperty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1ReportProperty) ProtoMessage() {}

func (x *GoogleCloudApigeeV1ReportProperty) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[206]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1ReportProperty.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1ReportProperty) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{206}
}

func (x *GoogleCloudApigeeV1ReportProperty) GetProperty() string {
	if x != nil && x.Property != nil {
		return *x.Property
	}
	return ""
}

func (x *GoogleCloudApigeeV1ReportProperty) GetValue() []*GoogleCloudApigeeV1Attribute {
	if x != nil {
		return x.Value
	}
	return nil
}

type GoogleCloudApigeeV1ResourceConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location *string `protobuf:"bytes,1,opt,name=location" json:"location,omitempty"`
	Name     *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (x *GoogleCloudApigeeV1ResourceConfig) Reset() {
	*x = GoogleCloudApigeeV1ResourceConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[207]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1ResourceConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1ResourceConfig) ProtoMessage() {}

func (x *GoogleCloudApigeeV1ResourceConfig) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[207]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1ResourceConfig.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1ResourceConfig) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{207}
}

func (x *GoogleCloudApigeeV1ResourceConfig) GetLocation() string {
	if x != nil && x.Location != nil {
		return *x.Location
	}
	return ""
}

func (x *GoogleCloudApigeeV1ResourceConfig) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GoogleCloudApigeeV1ResourceFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Type *string `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
}

func (x *GoogleCloudApigeeV1ResourceFile) Reset() {
	*x = GoogleCloudApigeeV1ResourceFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[208]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1ResourceFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1ResourceFile) ProtoMessage() {}

func (x *GoogleCloudApigeeV1ResourceFile) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[208]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1ResourceFile.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1ResourceFile) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{208}
}

func (x *GoogleCloudApigeeV1ResourceFile) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GoogleCloudApigeeV1ResourceFile) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

type GoogleCloudApigeeV1ResourceFiles struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceFile []*GoogleCloudApigeeV1ResourceFile `protobuf:"bytes,1,rep,name=resource_file,json=resourceFile" json:"resource_file,omitempty"`
}

func (x *GoogleCloudApigeeV1ResourceFiles) Reset() {
	*x = GoogleCloudApigeeV1ResourceFiles{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[209]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1ResourceFiles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1ResourceFiles) ProtoMessage() {}

func (x *GoogleCloudApigeeV1ResourceFiles) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[209]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1ResourceFiles.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1ResourceFiles) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{209}
}

func (x *GoogleCloudApigeeV1ResourceFiles) GetResourceFile() []*GoogleCloudApigeeV1ResourceFile {
	if x != nil {
		return x.ResourceFile
	}
	return nil
}

type GoogleCloudApigeeV1ResourceStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resource      *string                              `protobuf:"bytes,1,opt,name=resource" json:"resource,omitempty"`
	Revisions     []*GoogleCloudApigeeV1RevisionStatus `protobuf:"bytes,2,rep,name=revisions" json:"revisions,omitempty"`
	TotalReplicas *int32                               `protobuf:"varint,3,opt,name=total_replicas,json=totalReplicas" json:"total_replicas,omitempty"`
	Uid           *string                              `protobuf:"bytes,4,opt,name=uid" json:"uid,omitempty"`
}

func (x *GoogleCloudApigeeV1ResourceStatus) Reset() {
	*x = GoogleCloudApigeeV1ResourceStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[210]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1ResourceStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1ResourceStatus) ProtoMessage() {}

func (x *GoogleCloudApigeeV1ResourceStatus) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[210]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1ResourceStatus.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1ResourceStatus) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{210}
}

func (x *GoogleCloudApigeeV1ResourceStatus) GetResource() string {
	if x != nil && x.Resource != nil {
		return *x.Resource
	}
	return ""
}

func (x *GoogleCloudApigeeV1ResourceStatus) GetRevisions() []*GoogleCloudApigeeV1RevisionStatus {
	if x != nil {
		return x.Revisions
	}
	return nil
}

func (x *GoogleCloudApigeeV1ResourceStatus) GetTotalReplicas() int32 {
	if x != nil && x.TotalReplicas != nil {
		return *x.TotalReplicas
	}
	return 0
}

func (x *GoogleCloudApigeeV1ResourceStatus) GetUid() string {
	if x != nil && x.Uid != nil {
		return *x.Uid
	}
	return ""
}

type GoogleCloudApigeeV1Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionResult *string                        `protobuf:"bytes,1,opt,name=action_result,json=ActionResult" json:"action_result,omitempty"`
	AccessList   []*GoogleCloudApigeeV1Access   `protobuf:"bytes,2,rep,name=access_list,json=accessList" json:"access_list,omitempty"`
	Content      *string                        `protobuf:"bytes,3,opt,name=content" json:"content,omitempty"`
	Headers      []*GoogleCloudApigeeV1Property `protobuf:"bytes,4,rep,name=headers" json:"headers,omitempty"`
	Properties   *GoogleCloudApigeeV1Properties `protobuf:"bytes,5,opt,name=properties" json:"properties,omitempty"`
	ReasonPhrase *string                        `protobuf:"bytes,6,opt,name=reason_phrase,json=reasonPhrase" json:"reason_phrase,omitempty"`
	StatusCode   *string                        `protobuf:"bytes,7,opt,name=status_code,json=statusCode" json:"status_code,omitempty"`
	Timestamp    *string                        `protobuf:"bytes,8,opt,name=timestamp" json:"timestamp,omitempty"`
	URI          *string                        `protobuf:"bytes,9,opt,name=u_r_i,json=uRI" json:"u_r_i,omitempty"`
	Verb         *string                        `protobuf:"bytes,10,opt,name=verb" json:"verb,omitempty"`
}

func (x *GoogleCloudApigeeV1Result) Reset() {
	*x = GoogleCloudApigeeV1Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[211]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1Result) ProtoMessage() {}

func (x *GoogleCloudApigeeV1Result) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[211]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1Result.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1Result) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{211}
}

func (x *GoogleCloudApigeeV1Result) GetActionResult() string {
	if x != nil && x.ActionResult != nil {
		return *x.ActionResult
	}
	return ""
}

func (x *GoogleCloudApigeeV1Result) GetAccessList() []*GoogleCloudApigeeV1Access {
	if x != nil {
		return x.AccessList
	}
	return nil
}

func (x *GoogleCloudApigeeV1Result) GetContent() string {
	if x != nil && x.Content != nil {
		return *x.Content
	}
	return ""
}

func (x *GoogleCloudApigeeV1Result) GetHeaders() []*GoogleCloudApigeeV1Property {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *GoogleCloudApigeeV1Result) GetProperties() *GoogleCloudApigeeV1Properties {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *GoogleCloudApigeeV1Result) GetReasonPhrase() string {
	if x != nil && x.ReasonPhrase != nil {
		return *x.ReasonPhrase
	}
	return ""
}

func (x *GoogleCloudApigeeV1Result) GetStatusCode() string {
	if x != nil && x.StatusCode != nil {
		return *x.StatusCode
	}
	return ""
}

func (x *GoogleCloudApigeeV1Result) GetTimestamp() string {
	if x != nil && x.Timestamp != nil {
		return *x.Timestamp
	}
	return ""
}

func (x *GoogleCloudApigeeV1Result) GetURI() string {
	if x != nil && x.URI != nil {
		return *x.URI
	}
	return ""
}

func (x *GoogleCloudApigeeV1Result) GetVerb() string {
	if x != nil && x.Verb != nil {
		return *x.Verb
	}
	return ""
}

type GoogleCloudApigeeV1RevenueShareRange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	End             *int64   `protobuf:"varint,1,opt,name=end" json:"end,omitempty"`
	SharePercentage *float64 `protobuf:"fixed64,2,opt,name=share_percentage,json=sharePercentage" json:"share_percentage,omitempty"`
	Start           *int64   `protobuf:"varint,3,opt,name=start" json:"start,omitempty"`
}

func (x *GoogleCloudApigeeV1RevenueShareRange) Reset() {
	*x = GoogleCloudApigeeV1RevenueShareRange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[212]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1RevenueShareRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1RevenueShareRange) ProtoMessage() {}

func (x *GoogleCloudApigeeV1RevenueShareRange) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[212]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1RevenueShareRange.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1RevenueShareRange) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{212}
}

func (x *GoogleCloudApigeeV1RevenueShareRange) GetEnd() int64 {
	if x != nil && x.End != nil {
		return *x.End
	}
	return 0
}

func (x *GoogleCloudApigeeV1RevenueShareRange) GetSharePercentage() float64 {
	if x != nil && x.SharePercentage != nil {
		return *x.SharePercentage
	}
	return 0
}

func (x *GoogleCloudApigeeV1RevenueShareRange) GetStart() int64 {
	if x != nil && x.Start != nil {
		return *x.Start
	}
	return 0
}

type GoogleCloudApigeeV1RevisionStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Errors     []*GoogleCloudApigeeV1UpdateError `protobuf:"bytes,1,rep,name=errors" json:"errors,omitempty"`
	JsonSpec   *string                           `protobuf:"bytes,2,opt,name=json_spec,json=jsonSpec" json:"json_spec,omitempty"`
	Replicas   *int32                            `protobuf:"varint,3,opt,name=replicas" json:"replicas,omitempty"`
	RevisionId *string                           `protobuf:"bytes,4,opt,name=revision_id,json=revisionId" json:"revision_id,omitempty"`
}

func (x *GoogleCloudApigeeV1RevisionStatus) Reset() {
	*x = GoogleCloudApigeeV1RevisionStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[213]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1RevisionStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1RevisionStatus) ProtoMessage() {}

func (x *GoogleCloudApigeeV1RevisionStatus) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[213]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1RevisionStatus.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1RevisionStatus) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{213}
}

func (x *GoogleCloudApigeeV1RevisionStatus) GetErrors() []*GoogleCloudApigeeV1UpdateError {
	if x != nil {
		return x.Errors
	}
	return nil
}

func (x *GoogleCloudApigeeV1RevisionStatus) GetJsonSpec() string {
	if x != nil && x.JsonSpec != nil {
		return *x.JsonSpec
	}
	return ""
}

func (x *GoogleCloudApigeeV1RevisionStatus) GetReplicas() int32 {
	if x != nil && x.Replicas != nil {
		return *x.Replicas
	}
	return 0
}

func (x *GoogleCloudApigeeV1RevisionStatus) GetRevisionId() string {
	if x != nil && x.RevisionId != nil {
		return *x.RevisionId
	}
	return ""
}

type GoogleCloudApigeeV1RoutingRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Basepath         *string              `protobuf:"bytes,1,opt,name=basepath" json:"basepath,omitempty"`
	DeploymentGroup  *string              `protobuf:"bytes,2,opt,name=deployment_group,json=deploymentGroup" json:"deployment_group,omitempty"`
	EnvGroupRevision *int64               `protobuf:"varint,3,opt,name=env_group_revision,json=envGroupRevision" json:"env_group_revision,omitempty"`
	Environment      *string              `protobuf:"bytes,4,opt,name=environment" json:"environment,omitempty"`
	OtherTargets     []string             `protobuf:"bytes,5,rep,name=other_targets,json=otherTargets" json:"other_targets,omitempty"`
	Receiver         *string              `protobuf:"bytes,6,opt,name=receiver" json:"receiver,omitempty"`
	UpdateTime       *timestamp.Timestamp `protobuf:"bytes,7,opt,name=update_time,json=updateTime" json:"update_time,omitempty"`
}

func (x *GoogleCloudApigeeV1RoutingRule) Reset() {
	*x = GoogleCloudApigeeV1RoutingRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[214]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1RoutingRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1RoutingRule) ProtoMessage() {}

func (x *GoogleCloudApigeeV1RoutingRule) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[214]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1RoutingRule.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1RoutingRule) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{214}
}

func (x *GoogleCloudApigeeV1RoutingRule) GetBasepath() string {
	if x != nil && x.Basepath != nil {
		return *x.Basepath
	}
	return ""
}

func (x *GoogleCloudApigeeV1RoutingRule) GetDeploymentGroup() string {
	if x != nil && x.DeploymentGroup != nil {
		return *x.DeploymentGroup
	}
	return ""
}

func (x *GoogleCloudApigeeV1RoutingRule) GetEnvGroupRevision() int64 {
	if x != nil && x.EnvGroupRevision != nil {
		return *x.EnvGroupRevision
	}
	return 0
}

func (x *GoogleCloudApigeeV1RoutingRule) GetEnvironment() string {
	if x != nil && x.Environment != nil {
		return *x.Environment
	}
	return ""
}

func (x *GoogleCloudApigeeV1RoutingRule) GetOtherTargets() []string {
	if x != nil {
		return x.OtherTargets
	}
	return nil
}

func (x *GoogleCloudApigeeV1RoutingRule) GetReceiver() string {
	if x != nil && x.Receiver != nil {
		return *x.Receiver
	}
	return ""
}

func (x *GoogleCloudApigeeV1RoutingRule) GetUpdateTime() *timestamp.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

type GoogleCloudApigeeV1RuntimeAddonsConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnalyticsConfig   *GoogleCloudApigeeV1RuntimeAnalyticsConfig   `protobuf:"bytes,1,opt,name=analytics_config,json=analyticsConfig" json:"analytics_config,omitempty"`
	ApiSecurityConfig *GoogleCloudApigeeV1RuntimeApiSecurityConfig `protobuf:"bytes,2,opt,name=api_security_config,json=apiSecurityConfig" json:"api_security_config,omitempty"`
	Name              *string                                      `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	RevisionId        *string                                      `protobuf:"bytes,4,opt,name=revision_id,json=revisionId" json:"revision_id,omitempty"`
	Uid               *string                                      `protobuf:"bytes,5,opt,name=uid" json:"uid,omitempty"`
}

func (x *GoogleCloudApigeeV1RuntimeAddonsConfig) Reset() {
	*x = GoogleCloudApigeeV1RuntimeAddonsConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[215]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1RuntimeAddonsConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1RuntimeAddonsConfig) ProtoMessage() {}

func (x *GoogleCloudApigeeV1RuntimeAddonsConfig) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[215]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1RuntimeAddonsConfig.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1RuntimeAddonsConfig) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{215}
}

func (x *GoogleCloudApigeeV1RuntimeAddonsConfig) GetAnalyticsConfig() *GoogleCloudApigeeV1RuntimeAnalyticsConfig {
	if x != nil {
		return x.AnalyticsConfig
	}
	return nil
}

func (x *GoogleCloudApigeeV1RuntimeAddonsConfig) GetApiSecurityConfig() *GoogleCloudApigeeV1RuntimeApiSecurityConfig {
	if x != nil {
		return x.ApiSecurityConfig
	}
	return nil
}

func (x *GoogleCloudApigeeV1RuntimeAddonsConfig) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GoogleCloudApigeeV1RuntimeAddonsConfig) GetRevisionId() string {
	if x != nil && x.RevisionId != nil {
		return *x.RevisionId
	}
	return ""
}

func (x *GoogleCloudApigeeV1RuntimeAddonsConfig) GetUid() string {
	if x != nil && x.Uid != nil {
		return *x.Uid
	}
	return ""
}

type GoogleCloudApigeeV1RuntimeAnalyticsConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BillingPipelineEnabled *bool `protobuf:"varint,1,opt,name=billing_pipeline_enabled,json=billingPipelineEnabled" json:"billing_pipeline_enabled,omitempty"`
	Enabled                *bool `protobuf:"varint,2,opt,name=enabled" json:"enabled,omitempty"`
}

func (x *GoogleCloudApigeeV1RuntimeAnalyticsConfig) Reset() {
	*x = GoogleCloudApigeeV1RuntimeAnalyticsConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[216]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1RuntimeAnalyticsConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1RuntimeAnalyticsConfig) ProtoMessage() {}

func (x *GoogleCloudApigeeV1RuntimeAnalyticsConfig) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[216]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1RuntimeAnalyticsConfig.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1RuntimeAnalyticsConfig) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{216}
}

func (x *GoogleCloudApigeeV1RuntimeAnalyticsConfig) GetBillingPipelineEnabled() bool {
	if x != nil && x.BillingPipelineEnabled != nil {
		return *x.BillingPipelineEnabled
	}
	return false
}

func (x *GoogleCloudApigeeV1RuntimeAnalyticsConfig) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

type GoogleCloudApigeeV1RuntimeApiSecurityConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled *bool `protobuf:"varint,1,opt,name=enabled" json:"enabled,omitempty"`
}

func (x *GoogleCloudApigeeV1RuntimeApiSecurityConfig) Reset() {
	*x = GoogleCloudApigeeV1RuntimeApiSecurityConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[217]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1RuntimeApiSecurityConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1RuntimeApiSecurityConfig) ProtoMessage() {}

func (x *GoogleCloudApigeeV1RuntimeApiSecurityConfig) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[217]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1RuntimeApiSecurityConfig.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1RuntimeApiSecurityConfig) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{217}
}

func (x *GoogleCloudApigeeV1RuntimeApiSecurityConfig) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

type GoogleCloudApigeeV1RuntimeConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnalyticsBucket *string `protobuf:"bytes,1,opt,name=analytics_bucket,json=analyticsBucket" json:"analytics_bucket,omitempty"`
	Name            *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	TenantProjectId *string `protobuf:"bytes,3,opt,name=tenant_project_id,json=tenantProjectId" json:"tenant_project_id,omitempty"`
	TraceBucket     *string `protobuf:"bytes,4,opt,name=trace_bucket,json=traceBucket" json:"trace_bucket,omitempty"`
}

func (x *GoogleCloudApigeeV1RuntimeConfig) Reset() {
	*x = GoogleCloudApigeeV1RuntimeConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[218]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1RuntimeConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1RuntimeConfig) ProtoMessage() {}

func (x *GoogleCloudApigeeV1RuntimeConfig) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[218]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1RuntimeConfig.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1RuntimeConfig) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{218}
}

func (x *GoogleCloudApigeeV1RuntimeConfig) GetAnalyticsBucket() string {
	if x != nil && x.AnalyticsBucket != nil {
		return *x.AnalyticsBucket
	}
	return ""
}

func (x *GoogleCloudApigeeV1RuntimeConfig) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GoogleCloudApigeeV1RuntimeConfig) GetTenantProjectId() string {
	if x != nil && x.TenantProjectId != nil {
		return *x.TenantProjectId
	}
	return ""
}

func (x *GoogleCloudApigeeV1RuntimeConfig) GetTraceBucket() string {
	if x != nil && x.TraceBucket != nil {
		return *x.TraceBucket
	}
	return ""
}

type GoogleCloudApigeeV1RuntimeTraceConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Endpoint           *string                                          `protobuf:"bytes,1,opt,name=endpoint" json:"endpoint,omitempty"`
	Exporter           *string                                          `protobuf:"bytes,2,opt,name=exporter" json:"exporter,omitempty"`
	Name               *string                                          `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Overrides          []*GoogleCloudApigeeV1RuntimeTraceConfigOverride `protobuf:"bytes,4,rep,name=overrides" json:"overrides,omitempty"`
	RevisionCreateTime *timestamp.Timestamp                             `protobuf:"bytes,5,opt,name=revision_create_time,json=revisionCreateTime" json:"revision_create_time,omitempty"`
	RevisionId         *string                                          `protobuf:"bytes,6,opt,name=revision_id,json=revisionId" json:"revision_id,omitempty"`
	SamplingConfig     *GoogleCloudApigeeV1RuntimeTraceSamplingConfig   `protobuf:"bytes,7,opt,name=sampling_config,json=samplingConfig" json:"sampling_config,omitempty"`
}

func (x *GoogleCloudApigeeV1RuntimeTraceConfig) Reset() {
	*x = GoogleCloudApigeeV1RuntimeTraceConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[219]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1RuntimeTraceConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1RuntimeTraceConfig) ProtoMessage() {}

func (x *GoogleCloudApigeeV1RuntimeTraceConfig) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[219]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1RuntimeTraceConfig.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1RuntimeTraceConfig) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{219}
}

func (x *GoogleCloudApigeeV1RuntimeTraceConfig) GetEndpoint() string {
	if x != nil && x.Endpoint != nil {
		return *x.Endpoint
	}
	return ""
}

func (x *GoogleCloudApigeeV1RuntimeTraceConfig) GetExporter() string {
	if x != nil && x.Exporter != nil {
		return *x.Exporter
	}
	return ""
}

func (x *GoogleCloudApigeeV1RuntimeTraceConfig) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GoogleCloudApigeeV1RuntimeTraceConfig) GetOverrides() []*GoogleCloudApigeeV1RuntimeTraceConfigOverride {
	if x != nil {
		return x.Overrides
	}
	return nil
}

func (x *GoogleCloudApigeeV1RuntimeTraceConfig) GetRevisionCreateTime() *timestamp.Timestamp {
	if x != nil {
		return x.RevisionCreateTime
	}
	return nil
}

func (x *GoogleCloudApigeeV1RuntimeTraceConfig) GetRevisionId() string {
	if x != nil && x.RevisionId != nil {
		return *x.RevisionId
	}
	return ""
}

func (x *GoogleCloudApigeeV1RuntimeTraceConfig) GetSamplingConfig() *GoogleCloudApigeeV1RuntimeTraceSamplingConfig {
	if x != nil {
		return x.SamplingConfig
	}
	return nil
}

type GoogleCloudApigeeV1RuntimeTraceConfigOverride struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiProxy           *string                                        `protobuf:"bytes,1,opt,name=api_proxy,json=apiProxy" json:"api_proxy,omitempty"`
	Name               *string                                        `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	RevisionCreateTime *timestamp.Timestamp                           `protobuf:"bytes,3,opt,name=revision_create_time,json=revisionCreateTime" json:"revision_create_time,omitempty"`
	RevisionId         *string                                        `protobuf:"bytes,4,opt,name=revision_id,json=revisionId" json:"revision_id,omitempty"`
	SamplingConfig     *GoogleCloudApigeeV1RuntimeTraceSamplingConfig `protobuf:"bytes,5,opt,name=sampling_config,json=samplingConfig" json:"sampling_config,omitempty"`
	Uid                *string                                        `protobuf:"bytes,6,opt,name=uid" json:"uid,omitempty"`
}

func (x *GoogleCloudApigeeV1RuntimeTraceConfigOverride) Reset() {
	*x = GoogleCloudApigeeV1RuntimeTraceConfigOverride{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[220]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1RuntimeTraceConfigOverride) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1RuntimeTraceConfigOverride) ProtoMessage() {}

func (x *GoogleCloudApigeeV1RuntimeTraceConfigOverride) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[220]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1RuntimeTraceConfigOverride.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1RuntimeTraceConfigOverride) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{220}
}

func (x *GoogleCloudApigeeV1RuntimeTraceConfigOverride) GetApiProxy() string {
	if x != nil && x.ApiProxy != nil {
		return *x.ApiProxy
	}
	return ""
}

func (x *GoogleCloudApigeeV1RuntimeTraceConfigOverride) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GoogleCloudApigeeV1RuntimeTraceConfigOverride) GetRevisionCreateTime() *timestamp.Timestamp {
	if x != nil {
		return x.RevisionCreateTime
	}
	return nil
}

func (x *GoogleCloudApigeeV1RuntimeTraceConfigOverride) GetRevisionId() string {
	if x != nil && x.RevisionId != nil {
		return *x.RevisionId
	}
	return ""
}

func (x *GoogleCloudApigeeV1RuntimeTraceConfigOverride) GetSamplingConfig() *GoogleCloudApigeeV1RuntimeTraceSamplingConfig {
	if x != nil {
		return x.SamplingConfig
	}
	return nil
}

func (x *GoogleCloudApigeeV1RuntimeTraceConfigOverride) GetUid() string {
	if x != nil && x.Uid != nil {
		return *x.Uid
	}
	return ""
}

type GoogleCloudApigeeV1RuntimeTraceSamplingConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sampler      *string  `protobuf:"bytes,1,opt,name=sampler" json:"sampler,omitempty"`
	SamplingRate *float32 `protobuf:"fixed32,2,opt,name=sampling_rate,json=samplingRate" json:"sampling_rate,omitempty"`
}

func (x *GoogleCloudApigeeV1RuntimeTraceSamplingConfig) Reset() {
	*x = GoogleCloudApigeeV1RuntimeTraceSamplingConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[221]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1RuntimeTraceSamplingConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1RuntimeTraceSamplingConfig) ProtoMessage() {}

func (x *GoogleCloudApigeeV1RuntimeTraceSamplingConfig) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[221]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1RuntimeTraceSamplingConfig.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1RuntimeTraceSamplingConfig) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{221}
}

func (x *GoogleCloudApigeeV1RuntimeTraceSamplingConfig) GetSampler() string {
	if x != nil && x.Sampler != nil {
		return *x.Sampler
	}
	return ""
}

func (x *GoogleCloudApigeeV1RuntimeTraceSamplingConfig) GetSamplingRate() float32 {
	if x != nil && x.SamplingRate != nil {
		return *x.SamplingRate
	}
	return 0
}

type GoogleCloudApigeeV1Schema struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dimensions []*GoogleCloudApigeeV1SchemaSchemaElement `protobuf:"bytes,1,rep,name=dimensions" json:"dimensions,omitempty"`
	Meta       []string                                  `protobuf:"bytes,2,rep,name=meta" json:"meta,omitempty"`
	Metrics    []*GoogleCloudApigeeV1SchemaSchemaElement `protobuf:"bytes,3,rep,name=metrics" json:"metrics,omitempty"`
}

func (x *GoogleCloudApigeeV1Schema) Reset() {
	*x = GoogleCloudApigeeV1Schema{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[222]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1Schema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1Schema) ProtoMessage() {}

func (x *GoogleCloudApigeeV1Schema) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[222]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1Schema.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1Schema) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{222}
}

func (x *GoogleCloudApigeeV1Schema) GetDimensions() []*GoogleCloudApigeeV1SchemaSchemaElement {
	if x != nil {
		return x.Dimensions
	}
	return nil
}

func (x *GoogleCloudApigeeV1Schema) GetMeta() []string {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *GoogleCloudApigeeV1Schema) GetMetrics() []*GoogleCloudApigeeV1SchemaSchemaElement {
	if x != nil {
		return x.Metrics
	}
	return nil
}

type GoogleCloudApigeeV1SchemaSchemaElement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       *string                                  `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Properties *GoogleCloudApigeeV1SchemaSchemaProperty `protobuf:"bytes,2,opt,name=properties" json:"properties,omitempty"`
}

func (x *GoogleCloudApigeeV1SchemaSchemaElement) Reset() {
	*x = GoogleCloudApigeeV1SchemaSchemaElement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[223]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1SchemaSchemaElement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1SchemaSchemaElement) ProtoMessage() {}

func (x *GoogleCloudApigeeV1SchemaSchemaElement) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[223]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1SchemaSchemaElement.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1SchemaSchemaElement) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{223}
}

func (x *GoogleCloudApigeeV1SchemaSchemaElement) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GoogleCloudApigeeV1SchemaSchemaElement) GetProperties() *GoogleCloudApigeeV1SchemaSchemaProperty {
	if x != nil {
		return x.Properties
	}
	return nil
}

type GoogleCloudApigeeV1SchemaSchemaProperty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateTime *string `protobuf:"bytes,1,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	Custom     *string `protobuf:"bytes,2,opt,name=custom" json:"custom,omitempty"`
	Type       *string `protobuf:"bytes,3,opt,name=type" json:"type,omitempty"`
}

func (x *GoogleCloudApigeeV1SchemaSchemaProperty) Reset() {
	*x = GoogleCloudApigeeV1SchemaSchemaProperty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[224]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1SchemaSchemaProperty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1SchemaSchemaProperty) ProtoMessage() {}

func (x *GoogleCloudApigeeV1SchemaSchemaProperty) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[224]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1SchemaSchemaProperty.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1SchemaSchemaProperty) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{224}
}

func (x *GoogleCloudApigeeV1SchemaSchemaProperty) GetCreateTime() string {
	if x != nil && x.CreateTime != nil {
		return *x.CreateTime
	}
	return ""
}

func (x *GoogleCloudApigeeV1SchemaSchemaProperty) GetCustom() string {
	if x != nil && x.Custom != nil {
		return *x.Custom
	}
	return ""
}

func (x *GoogleCloudApigeeV1SchemaSchemaProperty) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

type GoogleCloudApigeeV1Score struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Component     *GoogleCloudApigeeV1ScoreComponent   `protobuf:"bytes,1,opt,name=component" json:"component,omitempty"`
	Subcomponents []*GoogleCloudApigeeV1ScoreComponent `protobuf:"bytes,2,rep,name=subcomponents" json:"subcomponents,omitempty"`
	TimeRange     *GoogleTypeInterval                  `protobuf:"bytes,3,opt,name=time_range,json=timeRange" json:"time_range,omitempty"`
}

func (x *GoogleCloudApigeeV1Score) Reset() {
	*x = GoogleCloudApigeeV1Score{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[225]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1Score) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1Score) ProtoMessage() {}

func (x *GoogleCloudApigeeV1Score) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[225]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1Score.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1Score) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{225}
}

func (x *GoogleCloudApigeeV1Score) GetComponent() *GoogleCloudApigeeV1ScoreComponent {
	if x != nil {
		return x.Component
	}
	return nil
}

func (x *GoogleCloudApigeeV1Score) GetSubcomponents() []*GoogleCloudApigeeV1ScoreComponent {
	if x != nil {
		return x.Subcomponents
	}
	return nil
}

func (x *GoogleCloudApigeeV1Score) GetTimeRange() *GoogleTypeInterval {
	if x != nil {
		return x.TimeRange
	}
	return nil
}

type GoogleCloudApigeeV1ScoreComponent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CalculateTime   *timestamp.Timestamp                               `protobuf:"bytes,1,opt,name=calculate_time,json=calculateTime" json:"calculate_time,omitempty"`
	DataCaptureTime *timestamp.Timestamp                               `protobuf:"bytes,2,opt,name=data_capture_time,json=dataCaptureTime" json:"data_capture_time,omitempty"`
	DrilldownPaths  []string                                           `protobuf:"bytes,3,rep,name=drilldown_paths,json=drilldownPaths" json:"drilldown_paths,omitempty"`
	Recommendations []*GoogleCloudApigeeV1ScoreComponentRecommendation `protobuf:"bytes,4,rep,name=recommendations" json:"recommendations,omitempty"`
	Score           *int32                                             `protobuf:"varint,5,opt,name=score" json:"score,omitempty"`
	ScorePath       *string                                            `protobuf:"bytes,6,opt,name=score_path,json=scorePath" json:"score_path,omitempty"`
}

func (x *GoogleCloudApigeeV1ScoreComponent) Reset() {
	*x = GoogleCloudApigeeV1ScoreComponent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[226]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1ScoreComponent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1ScoreComponent) ProtoMessage() {}

func (x *GoogleCloudApigeeV1ScoreComponent) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[226]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1ScoreComponent.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1ScoreComponent) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{226}
}

func (x *GoogleCloudApigeeV1ScoreComponent) GetCalculateTime() *timestamp.Timestamp {
	if x != nil {
		return x.CalculateTime
	}
	return nil
}

func (x *GoogleCloudApigeeV1ScoreComponent) GetDataCaptureTime() *timestamp.Timestamp {
	if x != nil {
		return x.DataCaptureTime
	}
	return nil
}

func (x *GoogleCloudApigeeV1ScoreComponent) GetDrilldownPaths() []string {
	if x != nil {
		return x.DrilldownPaths
	}
	return nil
}

func (x *GoogleCloudApigeeV1ScoreComponent) GetRecommendations() []*GoogleCloudApigeeV1ScoreComponentRecommendation {
	if x != nil {
		return x.Recommendations
	}
	return nil
}

func (x *GoogleCloudApigeeV1ScoreComponent) GetScore() int32 {
	if x != nil && x.Score != nil {
		return *x.Score
	}
	return 0
}

func (x *GoogleCloudApigeeV1ScoreComponent) GetScorePath() string {
	if x != nil && x.ScorePath != nil {
		return *x.ScorePath
	}
	return ""
}

type GoogleCloudApigeeV1ScoreComponentRecommendation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Actions     []*GoogleCloudApigeeV1ScoreComponentRecommendationAction `protobuf:"bytes,1,rep,name=actions" json:"actions,omitempty"`
	Description *string                                                  `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	Impact      *int32                                                   `protobuf:"varint,3,opt,name=impact" json:"impact,omitempty"`
	Title       *string                                                  `protobuf:"bytes,4,opt,name=title" json:"title,omitempty"`
}

func (x *GoogleCloudApigeeV1ScoreComponentRecommendation) Reset() {
	*x = GoogleCloudApigeeV1ScoreComponentRecommendation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[227]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1ScoreComponentRecommendation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1ScoreComponentRecommendation) ProtoMessage() {}

func (x *GoogleCloudApigeeV1ScoreComponentRecommendation) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[227]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1ScoreComponentRecommendation.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1ScoreComponentRecommendation) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{227}
}

func (x *GoogleCloudApigeeV1ScoreComponentRecommendation) GetActions() []*GoogleCloudApigeeV1ScoreComponentRecommendationAction {
	if x != nil {
		return x.Actions
	}
	return nil
}

func (x *GoogleCloudApigeeV1ScoreComponentRecommendation) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *GoogleCloudApigeeV1ScoreComponentRecommendation) GetImpact() int32 {
	if x != nil && x.Impact != nil {
		return *x.Impact
	}
	return 0
}

func (x *GoogleCloudApigeeV1ScoreComponentRecommendation) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

type GoogleCloudApigeeV1ScoreComponentRecommendationAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionContext *GoogleCloudApigeeV1ScoreComponentRecommendationActionActionContext `protobuf:"bytes,1,opt,name=action_context,json=actionContext" json:"action_context,omitempty"`
	Description   *string                                                             `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
}

func (x *GoogleCloudApigeeV1ScoreComponentRecommendationAction) Reset() {
	*x = GoogleCloudApigeeV1ScoreComponentRecommendationAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[228]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1ScoreComponentRecommendationAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1ScoreComponentRecommendationAction) ProtoMessage() {}

func (x *GoogleCloudApigeeV1ScoreComponentRecommendationAction) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[228]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1ScoreComponentRecommendationAction.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1ScoreComponentRecommendationAction) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{228}
}

func (x *GoogleCloudApigeeV1ScoreComponentRecommendationAction) GetActionContext() *GoogleCloudApigeeV1ScoreComponentRecommendationActionActionContext {
	if x != nil {
		return x.ActionContext
	}
	return nil
}

func (x *GoogleCloudApigeeV1ScoreComponentRecommendationAction) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

type GoogleCloudApigeeV1ScoreComponentRecommendationActionActionContext struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DocumentationLink *string `protobuf:"bytes,1,opt,name=documentation_link,json=documentationLink" json:"documentation_link,omitempty"`
}

func (x *GoogleCloudApigeeV1ScoreComponentRecommendationActionActionContext) Reset() {
	*x = GoogleCloudApigeeV1ScoreComponentRecommendationActionActionContext{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[229]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1ScoreComponentRecommendationActionActionContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1ScoreComponentRecommendationActionActionContext) ProtoMessage() {}

func (x *GoogleCloudApigeeV1ScoreComponentRecommendationActionActionContext) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[229]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1ScoreComponentRecommendationActionActionContext.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1ScoreComponentRecommendationActionActionContext) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{229}
}

func (x *GoogleCloudApigeeV1ScoreComponentRecommendationActionActionContext) GetDocumentationLink() string {
	if x != nil && x.DocumentationLink != nil {
		return *x.DocumentationLink
	}
	return ""
}

type GoogleCloudApigeeV1SecurityAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Allow           *GoogleCloudApigeeV1SecurityActionAllow           `protobuf:"bytes,1,opt,name=allow" json:"allow,omitempty"`
	ConditionConfig *GoogleCloudApigeeV1SecurityActionConditionConfig `protobuf:"bytes,2,opt,name=condition_config,json=conditionConfig" json:"condition_config,omitempty"`
	CreateTime      *timestamp.Timestamp                              `protobuf:"bytes,3,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	Deny            *GoogleCloudApigeeV1SecurityActionDeny            `protobuf:"bytes,4,opt,name=deny" json:"deny,omitempty"`
	Description     *string                                           `protobuf:"bytes,5,opt,name=description" json:"description,omitempty"`
	ExpireTime      *timestamp.Timestamp                              `protobuf:"bytes,6,opt,name=expire_time,json=expireTime" json:"expire_time,omitempty"`
	Flag            *GoogleCloudApigeeV1SecurityActionFlag            `protobuf:"bytes,7,opt,name=flag" json:"flag,omitempty"`
	Name            *string                                           `protobuf:"bytes,8,opt,name=name" json:"name,omitempty"`
	State           *string                                           `protobuf:"bytes,9,opt,name=state" json:"state,omitempty"`
	Ttl             *duration.Duration                                `protobuf:"bytes,10,opt,name=ttl" json:"ttl,omitempty"`
	UpdateTime      *timestamp.Timestamp                              `protobuf:"bytes,11,opt,name=update_time,json=updateTime" json:"update_time,omitempty"`
}

func (x *GoogleCloudApigeeV1SecurityAction) Reset() {
	*x = GoogleCloudApigeeV1SecurityAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[230]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1SecurityAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1SecurityAction) ProtoMessage() {}

func (x *GoogleCloudApigeeV1SecurityAction) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[230]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1SecurityAction.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1SecurityAction) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{230}
}

func (x *GoogleCloudApigeeV1SecurityAction) GetAllow() *GoogleCloudApigeeV1SecurityActionAllow {
	if x != nil {
		return x.Allow
	}
	return nil
}

func (x *GoogleCloudApigeeV1SecurityAction) GetConditionConfig() *GoogleCloudApigeeV1SecurityActionConditionConfig {
	if x != nil {
		return x.ConditionConfig
	}
	return nil
}

func (x *GoogleCloudApigeeV1SecurityAction) GetCreateTime() *timestamp.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *GoogleCloudApigeeV1SecurityAction) GetDeny() *GoogleCloudApigeeV1SecurityActionDeny {
	if x != nil {
		return x.Deny
	}
	return nil
}

func (x *GoogleCloudApigeeV1SecurityAction) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *GoogleCloudApigeeV1SecurityAction) GetExpireTime() *timestamp.Timestamp {
	if x != nil {
		return x.ExpireTime
	}
	return nil
}

func (x *GoogleCloudApigeeV1SecurityAction) GetFlag() *GoogleCloudApigeeV1SecurityActionFlag {
	if x != nil {
		return x.Flag
	}
	return nil
}

func (x *GoogleCloudApigeeV1SecurityAction) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GoogleCloudApigeeV1SecurityAction) GetState() string {
	if x != nil && x.State != nil {
		return *x.State
	}
	return ""
}

func (x *GoogleCloudApigeeV1SecurityAction) GetTtl() *duration.Duration {
	if x != nil {
		return x.Ttl
	}
	return nil
}

func (x *GoogleCloudApigeeV1SecurityAction) GetUpdateTime() *timestamp.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

type GoogleCloudApigeeV1SecurityActionAllow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GoogleCloudApigeeV1SecurityActionAllow) Reset() {
	*x = GoogleCloudApigeeV1SecurityActionAllow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[231]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1SecurityActionAllow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1SecurityActionAllow) ProtoMessage() {}

func (x *GoogleCloudApigeeV1SecurityActionAllow) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[231]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1SecurityActionAllow.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1SecurityActionAllow) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{231}
}

type GoogleCloudApigeeV1SecurityActionConditionConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessTokens    []string `protobuf:"bytes,1,rep,name=access_tokens,json=accessTokens" json:"access_tokens,omitempty"`
	ApiKeys         []string `protobuf:"bytes,2,rep,name=api_keys,json=apiKeys" json:"api_keys,omitempty"`
	ApiProducts     []string `protobuf:"bytes,3,rep,name=api_products,json=apiProducts" json:"api_products,omitempty"`
	Asns            []int64  `protobuf:"varint,4,rep,name=asns" json:"asns,omitempty"`
	BotReasons      []string `protobuf:"bytes,5,rep,name=bot_reasons,json=botReasons" json:"bot_reasons,omitempty"`
	DeveloperApps   []string `protobuf:"bytes,6,rep,name=developer_apps,json=developerApps" json:"developer_apps,omitempty"`
	Developers      []string `protobuf:"bytes,7,rep,name=developers" json:"developers,omitempty"`
	HttpMethods     []string `protobuf:"bytes,8,rep,name=http_methods,json=httpMethods" json:"http_methods,omitempty"`
	IpAddressRanges []string `protobuf:"bytes,9,rep,name=ip_address_ranges,json=ipAddressRanges" json:"ip_address_ranges,omitempty"`
	RegionCodes     []string `protobuf:"bytes,10,rep,name=region_codes,json=regionCodes" json:"region_codes,omitempty"`
	UserAgents      []string `protobuf:"bytes,11,rep,name=user_agents,json=userAgents" json:"user_agents,omitempty"`
}

func (x *GoogleCloudApigeeV1SecurityActionConditionConfig) Reset() {
	*x = GoogleCloudApigeeV1SecurityActionConditionConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[232]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1SecurityActionConditionConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1SecurityActionConditionConfig) ProtoMessage() {}

func (x *GoogleCloudApigeeV1SecurityActionConditionConfig) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[232]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1SecurityActionConditionConfig.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1SecurityActionConditionConfig) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{232}
}

func (x *GoogleCloudApigeeV1SecurityActionConditionConfig) GetAccessTokens() []string {
	if x != nil {
		return x.AccessTokens
	}
	return nil
}

func (x *GoogleCloudApigeeV1SecurityActionConditionConfig) GetApiKeys() []string {
	if x != nil {
		return x.ApiKeys
	}
	return nil
}

func (x *GoogleCloudApigeeV1SecurityActionConditionConfig) GetApiProducts() []string {
	if x != nil {
		return x.ApiProducts
	}
	return nil
}

func (x *GoogleCloudApigeeV1SecurityActionConditionConfig) GetAsns() []int64 {
	if x != nil {
		return x.Asns
	}
	return nil
}

func (x *GoogleCloudApigeeV1SecurityActionConditionConfig) GetBotReasons() []string {
	if x != nil {
		return x.BotReasons
	}
	return nil
}

func (x *GoogleCloudApigeeV1SecurityActionConditionConfig) GetDeveloperApps() []string {
	if x != nil {
		return x.DeveloperApps
	}
	return nil
}

func (x *GoogleCloudApigeeV1SecurityActionConditionConfig) GetDevelopers() []string {
	if x != nil {
		return x.Developers
	}
	return nil
}

func (x *GoogleCloudApigeeV1SecurityActionConditionConfig) GetHttpMethods() []string {
	if x != nil {
		return x.HttpMethods
	}
	return nil
}

func (x *GoogleCloudApigeeV1SecurityActionConditionConfig) GetIpAddressRanges() []string {
	if x != nil {
		return x.IpAddressRanges
	}
	return nil
}

func (x *GoogleCloudApigeeV1SecurityActionConditionConfig) GetRegionCodes() []string {
	if x != nil {
		return x.RegionCodes
	}
	return nil
}

func (x *GoogleCloudApigeeV1SecurityActionConditionConfig) GetUserAgents() []string {
	if x != nil {
		return x.UserAgents
	}
	return nil
}

type GoogleCloudApigeeV1SecurityActionDeny struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseCode *int32 `protobuf:"varint,1,opt,name=response_code,json=responseCode" json:"response_code,omitempty"`
}

func (x *GoogleCloudApigeeV1SecurityActionDeny) Reset() {
	*x = GoogleCloudApigeeV1SecurityActionDeny{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[233]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1SecurityActionDeny) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1SecurityActionDeny) ProtoMessage() {}

func (x *GoogleCloudApigeeV1SecurityActionDeny) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[233]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1SecurityActionDeny.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1SecurityActionDeny) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{233}
}

func (x *GoogleCloudApigeeV1SecurityActionDeny) GetResponseCode() int32 {
	if x != nil && x.ResponseCode != nil {
		return *x.ResponseCode
	}
	return 0
}

type GoogleCloudApigeeV1SecurityActionFlag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Headers []*GoogleCloudApigeeV1SecurityActionHttpHeader `protobuf:"bytes,1,rep,name=headers" json:"headers,omitempty"`
}

func (x *GoogleCloudApigeeV1SecurityActionFlag) Reset() {
	*x = GoogleCloudApigeeV1SecurityActionFlag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[234]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1SecurityActionFlag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1SecurityActionFlag) ProtoMessage() {}

func (x *GoogleCloudApigeeV1SecurityActionFlag) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[234]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1SecurityActionFlag.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1SecurityActionFlag) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{234}
}

func (x *GoogleCloudApigeeV1SecurityActionFlag) GetHeaders() []*GoogleCloudApigeeV1SecurityActionHttpHeader {
	if x != nil {
		return x.Headers
	}
	return nil
}

type GoogleCloudApigeeV1SecurityActionHttpHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Value *string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (x *GoogleCloudApigeeV1SecurityActionHttpHeader) Reset() {
	*x = GoogleCloudApigeeV1SecurityActionHttpHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[235]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1SecurityActionHttpHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1SecurityActionHttpHeader) ProtoMessage() {}

func (x *GoogleCloudApigeeV1SecurityActionHttpHeader) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[235]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1SecurityActionHttpHeader.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1SecurityActionHttpHeader) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{235}
}

func (x *GoogleCloudApigeeV1SecurityActionHttpHeader) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GoogleCloudApigeeV1SecurityActionHttpHeader) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

type GoogleCloudApigeeV1SecurityActionsConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled    *bool                `protobuf:"varint,1,opt,name=enabled" json:"enabled,omitempty"`
	Name       *string              `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	UpdateTime *timestamp.Timestamp `protobuf:"bytes,3,opt,name=update_time,json=updateTime" json:"update_time,omitempty"`
}

func (x *GoogleCloudApigeeV1SecurityActionsConfig) Reset() {
	*x = GoogleCloudApigeeV1SecurityActionsConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[236]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1SecurityActionsConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1SecurityActionsConfig) ProtoMessage() {}

func (x *GoogleCloudApigeeV1SecurityActionsConfig) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[236]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1SecurityActionsConfig.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1SecurityActionsConfig) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{236}
}

func (x *GoogleCloudApigeeV1SecurityActionsConfig) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

func (x *GoogleCloudApigeeV1SecurityActionsConfig) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GoogleCloudApigeeV1SecurityActionsConfig) GetUpdateTime() *timestamp.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

type GoogleCloudApigeeV1SecurityAssessmentResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateTime    *timestamp.Timestamp                                      `protobuf:"bytes,1,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	Error         *GoogleRpcStatus                                          `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
	Resource      *GoogleCloudApigeeV1SecurityAssessmentResultResource      `protobuf:"bytes,3,opt,name=resource" json:"resource,omitempty"`
	ScoringResult *GoogleCloudApigeeV1SecurityAssessmentResultScoringResult `protobuf:"bytes,4,opt,name=scoring_result,json=scoringResult" json:"scoring_result,omitempty"`
}

func (x *GoogleCloudApigeeV1SecurityAssessmentResult) Reset() {
	*x = GoogleCloudApigeeV1SecurityAssessmentResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[237]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1SecurityAssessmentResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1SecurityAssessmentResult) ProtoMessage() {}

func (x *GoogleCloudApigeeV1SecurityAssessmentResult) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[237]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1SecurityAssessmentResult.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1SecurityAssessmentResult) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{237}
}

func (x *GoogleCloudApigeeV1SecurityAssessmentResult) GetCreateTime() *timestamp.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *GoogleCloudApigeeV1SecurityAssessmentResult) GetError() *GoogleRpcStatus {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *GoogleCloudApigeeV1SecurityAssessmentResult) GetResource() *GoogleCloudApigeeV1SecurityAssessmentResultResource {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *GoogleCloudApigeeV1SecurityAssessmentResult) GetScoringResult() *GoogleCloudApigeeV1SecurityAssessmentResultScoringResult {
	if x != nil {
		return x.ScoringResult
	}
	return nil
}

type GoogleCloudApigeeV1SecurityAssessmentResultResource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name               *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	ResourceRevisionId *string `protobuf:"bytes,2,opt,name=resource_revision_id,json=resourceRevisionId" json:"resource_revision_id,omitempty"`
	Type               *string `protobuf:"bytes,3,opt,name=type" json:"type,omitempty"`
}

func (x *GoogleCloudApigeeV1SecurityAssessmentResultResource) Reset() {
	*x = GoogleCloudApigeeV1SecurityAssessmentResultResource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[238]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1SecurityAssessmentResultResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1SecurityAssessmentResultResource) ProtoMessage() {}

func (x *GoogleCloudApigeeV1SecurityAssessmentResultResource) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[238]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1SecurityAssessmentResultResource.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1SecurityAssessmentResultResource) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{238}
}

func (x *GoogleCloudApigeeV1SecurityAssessmentResultResource) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GoogleCloudApigeeV1SecurityAssessmentResultResource) GetResourceRevisionId() string {
	if x != nil && x.ResourceRevisionId != nil {
		return *x.ResourceRevisionId
	}
	return ""
}

func (x *GoogleCloudApigeeV1SecurityAssessmentResultResource) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

type GoogleCloudApigeeV1SecurityAssessmentResultScoringResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssessmentRecommendations map[string]*GoogleCloudApigeeV1SecurityAssessmentResultScoringResultAssessmentRecommendation `protobuf:"bytes,1,rep,name=assessment_recommendations,json=assessmentRecommendations" json:"assessment_recommendations,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	DataUpdateTime            *timestamp.Timestamp                                                                         `protobuf:"bytes,2,opt,name=data_update_time,json=dataUpdateTime" json:"data_update_time,omitempty"`
	Score                     *int32                                                                                       `protobuf:"varint,4,opt,name=score" json:"score,omitempty"`
	Severity                  *string                                                                                      `protobuf:"bytes,5,opt,name=severity" json:"severity,omitempty"`
}

func (x *GoogleCloudApigeeV1SecurityAssessmentResultScoringResult) Reset() {
	*x = GoogleCloudApigeeV1SecurityAssessmentResultScoringResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[239]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1SecurityAssessmentResultScoringResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1SecurityAssessmentResultScoringResult) ProtoMessage() {}

func (x *GoogleCloudApigeeV1SecurityAssessmentResultScoringResult) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[239]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1SecurityAssessmentResultScoringResult.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1SecurityAssessmentResultScoringResult) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{239}
}

func (x *GoogleCloudApigeeV1SecurityAssessmentResultScoringResult) GetAssessmentRecommendations() map[string]*GoogleCloudApigeeV1SecurityAssessmentResultScoringResultAssessmentRecommendation {
	if x != nil {
		return x.AssessmentRecommendations
	}
	return nil
}

func (x *GoogleCloudApigeeV1SecurityAssessmentResultScoringResult) GetDataUpdateTime() *timestamp.Timestamp {
	if x != nil {
		return x.DataUpdateTime
	}
	return nil
}

func (x *GoogleCloudApigeeV1SecurityAssessmentResultScoringResult) GetScore() int32 {
	if x != nil && x.Score != nil {
		return *x.Score
	}
	return 0
}

func (x *GoogleCloudApigeeV1SecurityAssessmentResultScoringResult) GetSeverity() string {
	if x != nil && x.Severity != nil {
		return *x.Severity
	}
	return ""
}

type GoogleCloudApigeeV1SecurityAssessmentResultScoringResultAssessmentRecommendation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DisplayName     *string                                                                                           `protobuf:"bytes,1,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	Recommendations []*GoogleCloudApigeeV1SecurityAssessmentResultScoringResultAssessmentRecommendationRecommendation `protobuf:"bytes,2,rep,name=recommendations" json:"recommendations,omitempty"`
	ScoreImpact     *int32                                                                                            `protobuf:"varint,3,opt,name=score_impact,json=scoreImpact" json:"score_impact,omitempty"`
	Verdict         *string                                                                                           `protobuf:"bytes,4,opt,name=verdict" json:"verdict,omitempty"`
	Weight          *string                                                                                           `protobuf:"bytes,5,opt,name=weight" json:"weight,omitempty"`
}

func (x *GoogleCloudApigeeV1SecurityAssessmentResultScoringResultAssessmentRecommendation) Reset() {
	*x = GoogleCloudApigeeV1SecurityAssessmentResultScoringResultAssessmentRecommendation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[240]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1SecurityAssessmentResultScoringResultAssessmentRecommendation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1SecurityAssessmentResultScoringResultAssessmentRecommendation) ProtoMessage() {
}

func (x *GoogleCloudApigeeV1SecurityAssessmentResultScoringResultAssessmentRecommendation) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[240]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1SecurityAssessmentResultScoringResultAssessmentRecommendation.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1SecurityAssessmentResultScoringResultAssessmentRecommendation) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{240}
}

func (x *GoogleCloudApigeeV1SecurityAssessmentResultScoringResultAssessmentRecommendation) GetDisplayName() string {
	if x != nil && x.DisplayName != nil {
		return *x.DisplayName
	}
	return ""
}

func (x *GoogleCloudApigeeV1SecurityAssessmentResultScoringResultAssessmentRecommendation) GetRecommendations() []*GoogleCloudApigeeV1SecurityAssessmentResultScoringResultAssessmentRecommendationRecommendation {
	if x != nil {
		return x.Recommendations
	}
	return nil
}

func (x *GoogleCloudApigeeV1SecurityAssessmentResultScoringResultAssessmentRecommendation) GetScoreImpact() int32 {
	if x != nil && x.ScoreImpact != nil {
		return *x.ScoreImpact
	}
	return 0
}

func (x *GoogleCloudApigeeV1SecurityAssessmentResultScoringResultAssessmentRecommendation) GetVerdict() string {
	if x != nil && x.Verdict != nil {
		return *x.Verdict
	}
	return ""
}

func (x *GoogleCloudApigeeV1SecurityAssessmentResultScoringResultAssessmentRecommendation) GetWeight() string {
	if x != nil && x.Weight != nil {
		return *x.Weight
	}
	return ""
}

type GoogleCloudApigeeV1SecurityAssessmentResultScoringResultAssessmentRecommendationRecommendation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description *string                                                                                             `protobuf:"bytes,1,opt,name=description" json:"description,omitempty"`
	Link        *GoogleCloudApigeeV1SecurityAssessmentResultScoringResultAssessmentRecommendationRecommendationLink `protobuf:"bytes,2,opt,name=link" json:"link,omitempty"`
}

func (x *GoogleCloudApigeeV1SecurityAssessmentResultScoringResultAssessmentRecommendationRecommendation) Reset() {
	*x = GoogleCloudApigeeV1SecurityAssessmentResultScoringResultAssessmentRecommendationRecommendation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[241]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1SecurityAssessmentResultScoringResultAssessmentRecommendationRecommendation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1SecurityAssessmentResultScoringResultAssessmentRecommendationRecommendation) ProtoMessage() {
}

func (x *GoogleCloudApigeeV1SecurityAssessmentResultScoringResultAssessmentRecommendationRecommendation) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[241]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1SecurityAssessmentResultScoringResultAssessmentRecommendationRecommendation.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1SecurityAssessmentResultScoringResultAssessmentRecommendationRecommendation) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{241}
}

func (x *GoogleCloudApigeeV1SecurityAssessmentResultScoringResultAssessmentRecommendationRecommendation) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *GoogleCloudApigeeV1SecurityAssessmentResultScoringResultAssessmentRecommendationRecommendation) GetLink() *GoogleCloudApigeeV1SecurityAssessmentResultScoringResultAssessmentRecommendationRecommendationLink {
	if x != nil {
		return x.Link
	}
	return nil
}

type GoogleCloudApigeeV1SecurityAssessmentResultScoringResultAssessmentRecommendationRecommendationLink struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text *string `protobuf:"bytes,1,opt,name=text" json:"text,omitempty"`
	Uri  *string `protobuf:"bytes,2,opt,name=uri" json:"uri,omitempty"`
}

func (x *GoogleCloudApigeeV1SecurityAssessmentResultScoringResultAssessmentRecommendationRecommendationLink) Reset() {
	*x = GoogleCloudApigeeV1SecurityAssessmentResultScoringResultAssessmentRecommendationRecommendationLink{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[242]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1SecurityAssessmentResultScoringResultAssessmentRecommendationRecommendationLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1SecurityAssessmentResultScoringResultAssessmentRecommendationRecommendationLink) ProtoMessage() {
}

func (x *GoogleCloudApigeeV1SecurityAssessmentResultScoringResultAssessmentRecommendationRecommendationLink) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[242]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1SecurityAssessmentResultScoringResultAssessmentRecommendationRecommendationLink.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1SecurityAssessmentResultScoringResultAssessmentRecommendationRecommendationLink) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{242}
}

func (x *GoogleCloudApigeeV1SecurityAssessmentResultScoringResultAssessmentRecommendationRecommendationLink) GetText() string {
	if x != nil && x.Text != nil {
		return *x.Text
	}
	return ""
}

func (x *GoogleCloudApigeeV1SecurityAssessmentResultScoringResultAssessmentRecommendationRecommendationLink) GetUri() string {
	if x != nil && x.Uri != nil {
		return *x.Uri
	}
	return ""
}

type GoogleCloudApigeeV1SecurityIncident struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DetectionTypes              []string             `protobuf:"bytes,1,rep,name=detection_types,json=detectionTypes" json:"detection_types,omitempty"`
	DisplayName                 *string              `protobuf:"bytes,2,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	FirstDetectedTime           *timestamp.Timestamp `protobuf:"bytes,3,opt,name=first_detected_time,json=firstDetectedTime" json:"first_detected_time,omitempty"`
	LastDetectedTime            *timestamp.Timestamp `protobuf:"bytes,4,opt,name=last_detected_time,json=lastDetectedTime" json:"last_detected_time,omitempty"`
	LastObservabilityChangeTime *timestamp.Timestamp `protobuf:"bytes,5,opt,name=last_observability_change_time,json=lastObservabilityChangeTime" json:"last_observability_change_time,omitempty"`
	Name                        *string              `protobuf:"bytes,6,opt,name=name" json:"name,omitempty"`
	Observability               *string              `protobuf:"bytes,7,opt,name=observability" json:"observability,omitempty"`
	RiskLevel                   *string              `protobuf:"bytes,8,opt,name=risk_level,json=riskLevel" json:"risk_level,omitempty"`
	TrafficCount                *int64               `protobuf:"varint,9,opt,name=traffic_count,json=trafficCount" json:"traffic_count,omitempty"`
}

func (x *GoogleCloudApigeeV1SecurityIncident) Reset() {
	*x = GoogleCloudApigeeV1SecurityIncident{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[243]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1SecurityIncident) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1SecurityIncident) ProtoMessage() {}

func (x *GoogleCloudApigeeV1SecurityIncident) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[243]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1SecurityIncident.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1SecurityIncident) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{243}
}

func (x *GoogleCloudApigeeV1SecurityIncident) GetDetectionTypes() []string {
	if x != nil {
		return x.DetectionTypes
	}
	return nil
}

func (x *GoogleCloudApigeeV1SecurityIncident) GetDisplayName() string {
	if x != nil && x.DisplayName != nil {
		return *x.DisplayName
	}
	return ""
}

func (x *GoogleCloudApigeeV1SecurityIncident) GetFirstDetectedTime() *timestamp.Timestamp {
	if x != nil {
		return x.FirstDetectedTime
	}
	return nil
}

func (x *GoogleCloudApigeeV1SecurityIncident) GetLastDetectedTime() *timestamp.Timestamp {
	if x != nil {
		return x.LastDetectedTime
	}
	return nil
}

func (x *GoogleCloudApigeeV1SecurityIncident) GetLastObservabilityChangeTime() *timestamp.Timestamp {
	if x != nil {
		return x.LastObservabilityChangeTime
	}
	return nil
}

func (x *GoogleCloudApigeeV1SecurityIncident) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GoogleCloudApigeeV1SecurityIncident) GetObservability() string {
	if x != nil && x.Observability != nil {
		return *x.Observability
	}
	return ""
}

func (x *GoogleCloudApigeeV1SecurityIncident) GetRiskLevel() string {
	if x != nil && x.RiskLevel != nil {
		return *x.RiskLevel
	}
	return ""
}

func (x *GoogleCloudApigeeV1SecurityIncident) GetTrafficCount() int64 {
	if x != nil && x.TrafficCount != nil {
		return *x.TrafficCount
	}
	return 0
}

type GoogleCloudApigeeV1SecurityProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description         *string                                            `protobuf:"bytes,1,opt,name=description" json:"description,omitempty"`
	DisplayName         *string                                            `protobuf:"bytes,2,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	Environments        []*GoogleCloudApigeeV1SecurityProfileEnvironment   `protobuf:"bytes,3,rep,name=environments" json:"environments,omitempty"`
	MaxScore            *int32                                             `protobuf:"varint,4,opt,name=max_score,json=maxScore" json:"max_score,omitempty"`
	MinScore            *int32                                             `protobuf:"varint,5,opt,name=min_score,json=minScore" json:"min_score,omitempty"`
	Name                *string                                            `protobuf:"bytes,6,opt,name=name" json:"name,omitempty"`
	ProfileConfig       *GoogleCloudApigeeV1ProfileConfig                  `protobuf:"bytes,7,opt,name=profile_config,json=profileConfig" json:"profile_config,omitempty"`
	RevisionCreateTime  *timestamp.Timestamp                               `protobuf:"bytes,8,opt,name=revision_create_time,json=revisionCreateTime" json:"revision_create_time,omitempty"`
	RevisionId          *int64                                             `protobuf:"varint,9,opt,name=revision_id,json=revisionId" json:"revision_id,omitempty"`
	RevisionPublishTime *timestamp.Timestamp                               `protobuf:"bytes,10,opt,name=revision_publish_time,json=revisionPublishTime" json:"revision_publish_time,omitempty"`
	RevisionUpdateTime  *timestamp.Timestamp                               `protobuf:"bytes,11,opt,name=revision_update_time,json=revisionUpdateTime" json:"revision_update_time,omitempty"`
	ScoringConfigs      []*GoogleCloudApigeeV1SecurityProfileScoringConfig `protobuf:"bytes,12,rep,name=scoring_configs,json=scoringConfigs" json:"scoring_configs,omitempty"`
}

func (x *GoogleCloudApigeeV1SecurityProfile) Reset() {
	*x = GoogleCloudApigeeV1SecurityProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[244]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1SecurityProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1SecurityProfile) ProtoMessage() {}

func (x *GoogleCloudApigeeV1SecurityProfile) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[244]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1SecurityProfile.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1SecurityProfile) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{244}
}

func (x *GoogleCloudApigeeV1SecurityProfile) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *GoogleCloudApigeeV1SecurityProfile) GetDisplayName() string {
	if x != nil && x.DisplayName != nil {
		return *x.DisplayName
	}
	return ""
}

func (x *GoogleCloudApigeeV1SecurityProfile) GetEnvironments() []*GoogleCloudApigeeV1SecurityProfileEnvironment {
	if x != nil {
		return x.Environments
	}
	return nil
}

func (x *GoogleCloudApigeeV1SecurityProfile) GetMaxScore() int32 {
	if x != nil && x.MaxScore != nil {
		return *x.MaxScore
	}
	return 0
}

func (x *GoogleCloudApigeeV1SecurityProfile) GetMinScore() int32 {
	if x != nil && x.MinScore != nil {
		return *x.MinScore
	}
	return 0
}

func (x *GoogleCloudApigeeV1SecurityProfile) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GoogleCloudApigeeV1SecurityProfile) GetProfileConfig() *GoogleCloudApigeeV1ProfileConfig {
	if x != nil {
		return x.ProfileConfig
	}
	return nil
}

func (x *GoogleCloudApigeeV1SecurityProfile) GetRevisionCreateTime() *timestamp.Timestamp {
	if x != nil {
		return x.RevisionCreateTime
	}
	return nil
}

func (x *GoogleCloudApigeeV1SecurityProfile) GetRevisionId() int64 {
	if x != nil && x.RevisionId != nil {
		return *x.RevisionId
	}
	return 0
}

func (x *GoogleCloudApigeeV1SecurityProfile) GetRevisionPublishTime() *timestamp.Timestamp {
	if x != nil {
		return x.RevisionPublishTime
	}
	return nil
}

func (x *GoogleCloudApigeeV1SecurityProfile) GetRevisionUpdateTime() *timestamp.Timestamp {
	if x != nil {
		return x.RevisionUpdateTime
	}
	return nil
}

func (x *GoogleCloudApigeeV1SecurityProfile) GetScoringConfigs() []*GoogleCloudApigeeV1SecurityProfileScoringConfig {
	if x != nil {
		return x.ScoringConfigs
	}
	return nil
}

type GoogleCloudApigeeV1SecurityProfileEnvironment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttachTime  *timestamp.Timestamp `protobuf:"bytes,1,opt,name=attach_time,json=attachTime" json:"attach_time,omitempty"`
	Environment *string              `protobuf:"bytes,2,opt,name=environment" json:"environment,omitempty"`
}

func (x *GoogleCloudApigeeV1SecurityProfileEnvironment) Reset() {
	*x = GoogleCloudApigeeV1SecurityProfileEnvironment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[245]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1SecurityProfileEnvironment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1SecurityProfileEnvironment) ProtoMessage() {}

func (x *GoogleCloudApigeeV1SecurityProfileEnvironment) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[245]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1SecurityProfileEnvironment.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1SecurityProfileEnvironment) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{245}
}

func (x *GoogleCloudApigeeV1SecurityProfileEnvironment) GetAttachTime() *timestamp.Timestamp {
	if x != nil {
		return x.AttachTime
	}
	return nil
}

func (x *GoogleCloudApigeeV1SecurityProfileEnvironment) GetEnvironment() string {
	if x != nil && x.Environment != nil {
		return *x.Environment
	}
	return ""
}

type GoogleCloudApigeeV1SecurityProfileEnvironmentAssociation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttachTime                *timestamp.Timestamp `protobuf:"bytes,1,opt,name=attach_time,json=attachTime" json:"attach_time,omitempty"`
	Name                      *string              `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	SecurityProfileRevisionId *int64               `protobuf:"varint,3,opt,name=security_profile_revision_id,json=securityProfileRevisionId" json:"security_profile_revision_id,omitempty"`
}

func (x *GoogleCloudApigeeV1SecurityProfileEnvironmentAssociation) Reset() {
	*x = GoogleCloudApigeeV1SecurityProfileEnvironmentAssociation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[246]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1SecurityProfileEnvironmentAssociation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1SecurityProfileEnvironmentAssociation) ProtoMessage() {}

func (x *GoogleCloudApigeeV1SecurityProfileEnvironmentAssociation) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[246]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1SecurityProfileEnvironmentAssociation.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1SecurityProfileEnvironmentAssociation) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{246}
}

func (x *GoogleCloudApigeeV1SecurityProfileEnvironmentAssociation) GetAttachTime() *timestamp.Timestamp {
	if x != nil {
		return x.AttachTime
	}
	return nil
}

func (x *GoogleCloudApigeeV1SecurityProfileEnvironmentAssociation) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GoogleCloudApigeeV1SecurityProfileEnvironmentAssociation) GetSecurityProfileRevisionId() int64 {
	if x != nil && x.SecurityProfileRevisionId != nil {
		return *x.SecurityProfileRevisionId
	}
	return 0
}

type GoogleCloudApigeeV1SecurityProfileScoringConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description *string `protobuf:"bytes,1,opt,name=description" json:"description,omitempty"`
	ScorePath   *string `protobuf:"bytes,2,opt,name=score_path,json=scorePath" json:"score_path,omitempty"`
	Title       *string `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
}

func (x *GoogleCloudApigeeV1SecurityProfileScoringConfig) Reset() {
	*x = GoogleCloudApigeeV1SecurityProfileScoringConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[247]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1SecurityProfileScoringConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1SecurityProfileScoringConfig) ProtoMessage() {}

func (x *GoogleCloudApigeeV1SecurityProfileScoringConfig) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[247]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1SecurityProfileScoringConfig.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1SecurityProfileScoringConfig) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{247}
}

func (x *GoogleCloudApigeeV1SecurityProfileScoringConfig) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *GoogleCloudApigeeV1SecurityProfileScoringConfig) GetScorePath() string {
	if x != nil && x.ScorePath != nil {
		return *x.ScorePath
	}
	return ""
}

func (x *GoogleCloudApigeeV1SecurityProfileScoringConfig) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

type GoogleCloudApigeeV1SecurityReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Created            *string                                          `protobuf:"bytes,1,opt,name=created" json:"created,omitempty"`
	DisplayName        *string                                          `protobuf:"bytes,2,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	EnvgroupHostname   *string                                          `protobuf:"bytes,3,opt,name=envgroup_hostname,json=envgroupHostname" json:"envgroup_hostname,omitempty"`
	Error              *string                                          `protobuf:"bytes,4,opt,name=error" json:"error,omitempty"`
	ExecutionTime      *string                                          `protobuf:"bytes,5,opt,name=execution_time,json=executionTime" json:"execution_time,omitempty"`
	QueryParams        *GoogleCloudApigeeV1SecurityReportMetadata       `protobuf:"bytes,6,opt,name=query_params,json=queryParams" json:"query_params,omitempty"`
	ReportDefinitionId *string                                          `protobuf:"bytes,7,opt,name=report_definition_id,json=reportDefinitionId" json:"report_definition_id,omitempty"`
	Result             *GoogleCloudApigeeV1SecurityReportResultMetadata `protobuf:"bytes,8,opt,name=result" json:"result,omitempty"`
	ResultFileSize     *string                                          `protobuf:"bytes,9,opt,name=result_file_size,json=resultFileSize" json:"result_file_size,omitempty"`
	ResultRows         *int64                                           `protobuf:"varint,10,opt,name=result_rows,json=resultRows" json:"result_rows,omitempty"`
	Self               *string                                          `protobuf:"bytes,11,opt,name=self" json:"self,omitempty"`
	State              *string                                          `protobuf:"bytes,12,opt,name=state" json:"state,omitempty"`
	Updated            *string                                          `protobuf:"bytes,13,opt,name=updated" json:"updated,omitempty"`
}

func (x *GoogleCloudApigeeV1SecurityReport) Reset() {
	*x = GoogleCloudApigeeV1SecurityReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[248]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1SecurityReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1SecurityReport) ProtoMessage() {}

func (x *GoogleCloudApigeeV1SecurityReport) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[248]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1SecurityReport.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1SecurityReport) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{248}
}

func (x *GoogleCloudApigeeV1SecurityReport) GetCreated() string {
	if x != nil && x.Created != nil {
		return *x.Created
	}
	return ""
}

func (x *GoogleCloudApigeeV1SecurityReport) GetDisplayName() string {
	if x != nil && x.DisplayName != nil {
		return *x.DisplayName
	}
	return ""
}

func (x *GoogleCloudApigeeV1SecurityReport) GetEnvgroupHostname() string {
	if x != nil && x.EnvgroupHostname != nil {
		return *x.EnvgroupHostname
	}
	return ""
}

func (x *GoogleCloudApigeeV1SecurityReport) GetError() string {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return ""
}

func (x *GoogleCloudApigeeV1SecurityReport) GetExecutionTime() string {
	if x != nil && x.ExecutionTime != nil {
		return *x.ExecutionTime
	}
	return ""
}

func (x *GoogleCloudApigeeV1SecurityReport) GetQueryParams() *GoogleCloudApigeeV1SecurityReportMetadata {
	if x != nil {
		return x.QueryParams
	}
	return nil
}

func (x *GoogleCloudApigeeV1SecurityReport) GetReportDefinitionId() string {
	if x != nil && x.ReportDefinitionId != nil {
		return *x.ReportDefinitionId
	}
	return ""
}

func (x *GoogleCloudApigeeV1SecurityReport) GetResult() *GoogleCloudApigeeV1SecurityReportResultMetadata {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *GoogleCloudApigeeV1SecurityReport) GetResultFileSize() string {
	if x != nil && x.ResultFileSize != nil {
		return *x.ResultFileSize
	}
	return ""
}

func (x *GoogleCloudApigeeV1SecurityReport) GetResultRows() int64 {
	if x != nil && x.ResultRows != nil {
		return *x.ResultRows
	}
	return 0
}

func (x *GoogleCloudApigeeV1SecurityReport) GetSelf() string {
	if x != nil && x.Self != nil {
		return *x.Self
	}
	return ""
}

func (x *GoogleCloudApigeeV1SecurityReport) GetState() string {
	if x != nil && x.State != nil {
		return *x.State
	}
	return ""
}

func (x *GoogleCloudApigeeV1SecurityReport) GetUpdated() string {
	if x != nil && x.Updated != nil {
		return *x.Updated
	}
	return ""
}

type GoogleCloudApigeeV1SecurityReportMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dimensions     []string             `protobuf:"bytes,1,rep,name=dimensions" json:"dimensions,omitempty"`
	EndTimestamp   *timestamp.Timestamp `protobuf:"bytes,2,opt,name=end_timestamp,json=endTimestamp" json:"end_timestamp,omitempty"`
	Metrics        []string             `protobuf:"bytes,3,rep,name=metrics" json:"metrics,omitempty"`
	MimeType       *string              `protobuf:"bytes,4,opt,name=mime_type,json=mimeType" json:"mime_type,omitempty"`
	StartTimestamp *timestamp.Timestamp `protobuf:"bytes,5,opt,name=start_timestamp,json=startTimestamp" json:"start_timestamp,omitempty"`
	TimeUnit       *string              `protobuf:"bytes,6,opt,name=time_unit,json=timeUnit" json:"time_unit,omitempty"`
}

func (x *GoogleCloudApigeeV1SecurityReportMetadata) Reset() {
	*x = GoogleCloudApigeeV1SecurityReportMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[249]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1SecurityReportMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1SecurityReportMetadata) ProtoMessage() {}

func (x *GoogleCloudApigeeV1SecurityReportMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[249]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1SecurityReportMetadata.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1SecurityReportMetadata) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{249}
}

func (x *GoogleCloudApigeeV1SecurityReportMetadata) GetDimensions() []string {
	if x != nil {
		return x.Dimensions
	}
	return nil
}

func (x *GoogleCloudApigeeV1SecurityReportMetadata) GetEndTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.EndTimestamp
	}
	return nil
}

func (x *GoogleCloudApigeeV1SecurityReportMetadata) GetMetrics() []string {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *GoogleCloudApigeeV1SecurityReportMetadata) GetMimeType() string {
	if x != nil && x.MimeType != nil {
		return *x.MimeType
	}
	return ""
}

func (x *GoogleCloudApigeeV1SecurityReportMetadata) GetStartTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.StartTimestamp
	}
	return nil
}

func (x *GoogleCloudApigeeV1SecurityReportMetadata) GetTimeUnit() string {
	if x != nil && x.TimeUnit != nil {
		return *x.TimeUnit
	}
	return ""
}

type GoogleCloudApigeeV1SecurityReportQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CsvDelimiter       *string                                         `protobuf:"bytes,1,opt,name=csv_delimiter,json=csvDelimiter" json:"csv_delimiter,omitempty"`
	Dimensions         []string                                        `protobuf:"bytes,2,rep,name=dimensions" json:"dimensions,omitempty"`
	DisplayName        *string                                         `protobuf:"bytes,3,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	EnvgroupHostname   *string                                         `protobuf:"bytes,4,opt,name=envgroup_hostname,json=envgroupHostname" json:"envgroup_hostname,omitempty"`
	Filter             *string                                         `protobuf:"bytes,5,opt,name=filter" json:"filter,omitempty"`
	GroupByTimeUnit    *string                                         `protobuf:"bytes,6,opt,name=group_by_time_unit,json=groupByTimeUnit" json:"group_by_time_unit,omitempty"`
	Limit              *int32                                          `protobuf:"varint,7,opt,name=limit" json:"limit,omitempty"`
	Metrics            []*GoogleCloudApigeeV1SecurityReportQueryMetric `protobuf:"bytes,8,rep,name=metrics" json:"metrics,omitempty"`
	MimeType           *string                                         `protobuf:"bytes,9,opt,name=mime_type,json=mimeType" json:"mime_type,omitempty"`
	ReportDefinitionId *string                                         `protobuf:"bytes,10,opt,name=report_definition_id,json=reportDefinitionId" json:"report_definition_id,omitempty"`
	TimeRange          *any1.Any                                       `protobuf:"bytes,11,opt,name=time_range,json=timeRange" json:"time_range,omitempty"`
}

func (x *GoogleCloudApigeeV1SecurityReportQuery) Reset() {
	*x = GoogleCloudApigeeV1SecurityReportQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[250]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1SecurityReportQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1SecurityReportQuery) ProtoMessage() {}

func (x *GoogleCloudApigeeV1SecurityReportQuery) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[250]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1SecurityReportQuery.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1SecurityReportQuery) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{250}
}

func (x *GoogleCloudApigeeV1SecurityReportQuery) GetCsvDelimiter() string {
	if x != nil && x.CsvDelimiter != nil {
		return *x.CsvDelimiter
	}
	return ""
}

func (x *GoogleCloudApigeeV1SecurityReportQuery) GetDimensions() []string {
	if x != nil {
		return x.Dimensions
	}
	return nil
}

func (x *GoogleCloudApigeeV1SecurityReportQuery) GetDisplayName() string {
	if x != nil && x.DisplayName != nil {
		return *x.DisplayName
	}
	return ""
}

func (x *GoogleCloudApigeeV1SecurityReportQuery) GetEnvgroupHostname() string {
	if x != nil && x.EnvgroupHostname != nil {
		return *x.EnvgroupHostname
	}
	return ""
}

func (x *GoogleCloudApigeeV1SecurityReportQuery) GetFilter() string {
	if x != nil && x.Filter != nil {
		return *x.Filter
	}
	return ""
}

func (x *GoogleCloudApigeeV1SecurityReportQuery) GetGroupByTimeUnit() string {
	if x != nil && x.GroupByTimeUnit != nil {
		return *x.GroupByTimeUnit
	}
	return ""
}

func (x *GoogleCloudApigeeV1SecurityReportQuery) GetLimit() int32 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

func (x *GoogleCloudApigeeV1SecurityReportQuery) GetMetrics() []*GoogleCloudApigeeV1SecurityReportQueryMetric {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *GoogleCloudApigeeV1SecurityReportQuery) GetMimeType() string {
	if x != nil && x.MimeType != nil {
		return *x.MimeType
	}
	return ""
}

func (x *GoogleCloudApigeeV1SecurityReportQuery) GetReportDefinitionId() string {
	if x != nil && x.ReportDefinitionId != nil {
		return *x.ReportDefinitionId
	}
	return ""
}

func (x *GoogleCloudApigeeV1SecurityReportQuery) GetTimeRange() *any1.Any {
	if x != nil {
		return x.TimeRange
	}
	return nil
}

type GoogleCloudApigeeV1SecurityReportQueryMetric struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AggregationFunction *string `protobuf:"bytes,1,opt,name=aggregation_function,json=aggregationFunction" json:"aggregation_function,omitempty"`
	Alias               *string `protobuf:"bytes,2,opt,name=alias" json:"alias,omitempty"`
	Name                *string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Operator            *string `protobuf:"bytes,4,opt,name=operator" json:"operator,omitempty"`
	Value               *string `protobuf:"bytes,5,opt,name=value" json:"value,omitempty"`
}

func (x *GoogleCloudApigeeV1SecurityReportQueryMetric) Reset() {
	*x = GoogleCloudApigeeV1SecurityReportQueryMetric{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[251]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1SecurityReportQueryMetric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1SecurityReportQueryMetric) ProtoMessage() {}

func (x *GoogleCloudApigeeV1SecurityReportQueryMetric) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[251]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1SecurityReportQueryMetric.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1SecurityReportQueryMetric) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{251}
}

func (x *GoogleCloudApigeeV1SecurityReportQueryMetric) GetAggregationFunction() string {
	if x != nil && x.AggregationFunction != nil {
		return *x.AggregationFunction
	}
	return ""
}

func (x *GoogleCloudApigeeV1SecurityReportQueryMetric) GetAlias() string {
	if x != nil && x.Alias != nil {
		return *x.Alias
	}
	return ""
}

func (x *GoogleCloudApigeeV1SecurityReportQueryMetric) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GoogleCloudApigeeV1SecurityReportQueryMetric) GetOperator() string {
	if x != nil && x.Operator != nil {
		return *x.Operator
	}
	return ""
}

func (x *GoogleCloudApigeeV1SecurityReportQueryMetric) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

type GoogleCloudApigeeV1SecurityReportResultMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Expires *string `protobuf:"bytes,1,opt,name=expires" json:"expires,omitempty"`
	Self    *string `protobuf:"bytes,2,opt,name=self" json:"self,omitempty"`
}

func (x *GoogleCloudApigeeV1SecurityReportResultMetadata) Reset() {
	*x = GoogleCloudApigeeV1SecurityReportResultMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[252]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1SecurityReportResultMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1SecurityReportResultMetadata) ProtoMessage() {}

func (x *GoogleCloudApigeeV1SecurityReportResultMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[252]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1SecurityReportResultMetadata.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1SecurityReportResultMetadata) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{252}
}

func (x *GoogleCloudApigeeV1SecurityReportResultMetadata) GetExpires() string {
	if x != nil && x.Expires != nil {
		return *x.Expires
	}
	return ""
}

func (x *GoogleCloudApigeeV1SecurityReportResultMetadata) GetSelf() string {
	if x != nil && x.Self != nil {
		return *x.Self
	}
	return ""
}

type GoogleCloudApigeeV1SecurityReportResultView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     *int32                                     `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Error    *string                                    `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
	Metadata *GoogleCloudApigeeV1SecurityReportMetadata `protobuf:"bytes,3,opt,name=metadata" json:"metadata,omitempty"`
	Rows     []*any1.Any                                `protobuf:"bytes,4,rep,name=rows" json:"rows,omitempty"`
	State    *string                                    `protobuf:"bytes,5,opt,name=state" json:"state,omitempty"`
}

func (x *GoogleCloudApigeeV1SecurityReportResultView) Reset() {
	*x = GoogleCloudApigeeV1SecurityReportResultView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[253]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1SecurityReportResultView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1SecurityReportResultView) ProtoMessage() {}

func (x *GoogleCloudApigeeV1SecurityReportResultView) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[253]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1SecurityReportResultView.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1SecurityReportResultView) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{253}
}

func (x *GoogleCloudApigeeV1SecurityReportResultView) GetCode() int32 {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return 0
}

func (x *GoogleCloudApigeeV1SecurityReportResultView) GetError() string {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return ""
}

func (x *GoogleCloudApigeeV1SecurityReportResultView) GetMetadata() *GoogleCloudApigeeV1SecurityReportMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *GoogleCloudApigeeV1SecurityReportResultView) GetRows() []*any1.Any {
	if x != nil {
		return x.Rows
	}
	return nil
}

func (x *GoogleCloudApigeeV1SecurityReportResultView) GetState() string {
	if x != nil && x.State != nil {
		return *x.State
	}
	return ""
}

type GoogleCloudApigeeV1SecuritySettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MlRetrainingFeedbackEnabled *bool   `protobuf:"varint,1,opt,name=ml_retraining_feedback_enabled,json=mlRetrainingFeedbackEnabled" json:"ml_retraining_feedback_enabled,omitempty"`
	Name                        *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (x *GoogleCloudApigeeV1SecuritySettings) Reset() {
	*x = GoogleCloudApigeeV1SecuritySettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[254]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1SecuritySettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1SecuritySettings) ProtoMessage() {}

func (x *GoogleCloudApigeeV1SecuritySettings) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[254]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1SecuritySettings.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1SecuritySettings) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{254}
}

func (x *GoogleCloudApigeeV1SecuritySettings) GetMlRetrainingFeedbackEnabled() bool {
	if x != nil && x.MlRetrainingFeedbackEnabled != nil {
		return *x.MlRetrainingFeedbackEnabled
	}
	return false
}

func (x *GoogleCloudApigeeV1SecuritySettings) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GoogleCloudApigeeV1ServiceIssuersMapping struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmailIds []string `protobuf:"bytes,1,rep,name=email_ids,json=emailIds" json:"email_ids,omitempty"`
	Service  *string  `protobuf:"bytes,2,opt,name=service" json:"service,omitempty"`
}

func (x *GoogleCloudApigeeV1ServiceIssuersMapping) Reset() {
	*x = GoogleCloudApigeeV1ServiceIssuersMapping{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[255]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1ServiceIssuersMapping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1ServiceIssuersMapping) ProtoMessage() {}

func (x *GoogleCloudApigeeV1ServiceIssuersMapping) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[255]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1ServiceIssuersMapping.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1ServiceIssuersMapping) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{255}
}

func (x *GoogleCloudApigeeV1ServiceIssuersMapping) GetEmailIds() []string {
	if x != nil {
		return x.EmailIds
	}
	return nil
}

func (x *GoogleCloudApigeeV1ServiceIssuersMapping) GetService() string {
	if x != nil && x.Service != nil {
		return *x.Service
	}
	return ""
}

type GoogleCloudApigeeV1Session struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	TimestampMs *int64  `protobuf:"varint,2,opt,name=timestamp_ms,json=timestampMs" json:"timestamp_ms,omitempty"`
}

func (x *GoogleCloudApigeeV1Session) Reset() {
	*x = GoogleCloudApigeeV1Session{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[256]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1Session) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1Session) ProtoMessage() {}

func (x *GoogleCloudApigeeV1Session) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[256]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1Session.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1Session) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{256}
}

func (x *GoogleCloudApigeeV1Session) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *GoogleCloudApigeeV1Session) GetTimestampMs() int64 {
	if x != nil && x.TimestampMs != nil {
		return *x.TimestampMs
	}
	return 0
}

type GoogleCloudApigeeV1SetAddonEnablementRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnalyticsEnabled   *bool `protobuf:"varint,1,opt,name=analytics_enabled,json=analyticsEnabled" json:"analytics_enabled,omitempty"`
	ApiSecurityEnabled *bool `protobuf:"varint,2,opt,name=api_security_enabled,json=apiSecurityEnabled" json:"api_security_enabled,omitempty"`
}

func (x *GoogleCloudApigeeV1SetAddonEnablementRequest) Reset() {
	*x = GoogleCloudApigeeV1SetAddonEnablementRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[257]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1SetAddonEnablementRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1SetAddonEnablementRequest) ProtoMessage() {}

func (x *GoogleCloudApigeeV1SetAddonEnablementRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[257]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1SetAddonEnablementRequest.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1SetAddonEnablementRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{257}
}

func (x *GoogleCloudApigeeV1SetAddonEnablementRequest) GetAnalyticsEnabled() bool {
	if x != nil && x.AnalyticsEnabled != nil {
		return *x.AnalyticsEnabled
	}
	return false
}

func (x *GoogleCloudApigeeV1SetAddonEnablementRequest) GetApiSecurityEnabled() bool {
	if x != nil && x.ApiSecurityEnabled != nil {
		return *x.ApiSecurityEnabled
	}
	return false
}

type GoogleCloudApigeeV1SetAddonsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddonsConfig *GoogleCloudApigeeV1AddonsConfig `protobuf:"bytes,1,opt,name=addons_config,json=addonsConfig" json:"addons_config,omitempty"`
}

func (x *GoogleCloudApigeeV1SetAddonsRequest) Reset() {
	*x = GoogleCloudApigeeV1SetAddonsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[258]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1SetAddonsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1SetAddonsRequest) ProtoMessage() {}

func (x *GoogleCloudApigeeV1SetAddonsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[258]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1SetAddonsRequest.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1SetAddonsRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{258}
}

func (x *GoogleCloudApigeeV1SetAddonsRequest) GetAddonsConfig() *GoogleCloudApigeeV1AddonsConfig {
	if x != nil {
		return x.AddonsConfig
	}
	return nil
}

type GoogleCloudApigeeV1SharedFlow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LatestRevisionId *string                            `protobuf:"bytes,1,opt,name=latest_revision_id,json=latestRevisionId" json:"latest_revision_id,omitempty"`
	MetaData         *GoogleCloudApigeeV1EntityMetadata `protobuf:"bytes,2,opt,name=meta_data,json=metaData" json:"meta_data,omitempty"`
	Name             *string                            `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Revision         []string                           `protobuf:"bytes,4,rep,name=revision" json:"revision,omitempty"`
}

func (x *GoogleCloudApigeeV1SharedFlow) Reset() {
	*x = GoogleCloudApigeeV1SharedFlow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[259]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1SharedFlow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1SharedFlow) ProtoMessage() {}

func (x *GoogleCloudApigeeV1SharedFlow) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[259]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1SharedFlow.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1SharedFlow) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{259}
}

func (x *GoogleCloudApigeeV1SharedFlow) GetLatestRevisionId() string {
	if x != nil && x.LatestRevisionId != nil {
		return *x.LatestRevisionId
	}
	return ""
}

func (x *GoogleCloudApigeeV1SharedFlow) GetMetaData() *GoogleCloudApigeeV1EntityMetadata {
	if x != nil {
		return x.MetaData
	}
	return nil
}

func (x *GoogleCloudApigeeV1SharedFlow) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GoogleCloudApigeeV1SharedFlow) GetRevision() []string {
	if x != nil {
		return x.Revision
	}
	return nil
}

type GoogleCloudApigeeV1SharedFlowRevision struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigurationVersion       *GoogleCloudApigeeV1ConfigVersion `protobuf:"bytes,1,opt,name=configuration_version,json=configurationVersion" json:"configuration_version,omitempty"`
	ContextInfo                *string                           `protobuf:"bytes,2,opt,name=context_info,json=contextInfo" json:"context_info,omitempty"`
	CreatedAt                  *int64                            `protobuf:"varint,3,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	Description                *string                           `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	DisplayName                *string                           `protobuf:"bytes,5,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	EntityMetaDataAsProperties map[string]string                 `protobuf:"bytes,6,rep,name=entity_meta_data_as_properties,json=entityMetaDataAsProperties" json:"entity_meta_data_as_properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	LastModifiedAt             *int64                            `protobuf:"varint,7,opt,name=last_modified_at,json=lastModifiedAt" json:"last_modified_at,omitempty"`
	Name                       *string                           `protobuf:"bytes,8,opt,name=name" json:"name,omitempty"`
	Policies                   []string                          `protobuf:"bytes,9,rep,name=policies" json:"policies,omitempty"`
	ResourceFiles              *GoogleCloudApigeeV1ResourceFiles `protobuf:"bytes,10,opt,name=resource_files,json=resourceFiles" json:"resource_files,omitempty"`
	Resources                  []string                          `protobuf:"bytes,11,rep,name=resources" json:"resources,omitempty"`
	Revision                   *string                           `protobuf:"bytes,12,opt,name=revision" json:"revision,omitempty"`
	SharedFlows                []string                          `protobuf:"bytes,13,rep,name=shared_flows,json=sharedFlows" json:"shared_flows,omitempty"`
	Type                       *string                           `protobuf:"bytes,14,opt,name=type" json:"type,omitempty"`
}

func (x *GoogleCloudApigeeV1SharedFlowRevision) Reset() {
	*x = GoogleCloudApigeeV1SharedFlowRevision{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[260]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1SharedFlowRevision) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1SharedFlowRevision) ProtoMessage() {}

func (x *GoogleCloudApigeeV1SharedFlowRevision) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[260]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1SharedFlowRevision.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1SharedFlowRevision) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{260}
}

func (x *GoogleCloudApigeeV1SharedFlowRevision) GetConfigurationVersion() *GoogleCloudApigeeV1ConfigVersion {
	if x != nil {
		return x.ConfigurationVersion
	}
	return nil
}

func (x *GoogleCloudApigeeV1SharedFlowRevision) GetContextInfo() string {
	if x != nil && x.ContextInfo != nil {
		return *x.ContextInfo
	}
	return ""
}

func (x *GoogleCloudApigeeV1SharedFlowRevision) GetCreatedAt() int64 {
	if x != nil && x.CreatedAt != nil {
		return *x.CreatedAt
	}
	return 0
}

func (x *GoogleCloudApigeeV1SharedFlowRevision) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *GoogleCloudApigeeV1SharedFlowRevision) GetDisplayName() string {
	if x != nil && x.DisplayName != nil {
		return *x.DisplayName
	}
	return ""
}

func (x *GoogleCloudApigeeV1SharedFlowRevision) GetEntityMetaDataAsProperties() map[string]string {
	if x != nil {
		return x.EntityMetaDataAsProperties
	}
	return nil
}

func (x *GoogleCloudApigeeV1SharedFlowRevision) GetLastModifiedAt() int64 {
	if x != nil && x.LastModifiedAt != nil {
		return *x.LastModifiedAt
	}
	return 0
}

func (x *GoogleCloudApigeeV1SharedFlowRevision) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GoogleCloudApigeeV1SharedFlowRevision) GetPolicies() []string {
	if x != nil {
		return x.Policies
	}
	return nil
}

func (x *GoogleCloudApigeeV1SharedFlowRevision) GetResourceFiles() *GoogleCloudApigeeV1ResourceFiles {
	if x != nil {
		return x.ResourceFiles
	}
	return nil
}

func (x *GoogleCloudApigeeV1SharedFlowRevision) GetResources() []string {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *GoogleCloudApigeeV1SharedFlowRevision) GetRevision() string {
	if x != nil && x.Revision != nil {
		return *x.Revision
	}
	return ""
}

func (x *GoogleCloudApigeeV1SharedFlowRevision) GetSharedFlows() []string {
	if x != nil {
		return x.SharedFlows
	}
	return nil
}

func (x *GoogleCloudApigeeV1SharedFlowRevision) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

type GoogleCloudApigeeV1Stats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Environments []*GoogleCloudApigeeV1StatsEnvironmentStats `protobuf:"bytes,1,rep,name=environments" json:"environments,omitempty"`
	Hosts        []*GoogleCloudApigeeV1StatsHostStats        `protobuf:"bytes,2,rep,name=hosts" json:"hosts,omitempty"`
	MetaData     *GoogleCloudApigeeV1Metadata                `protobuf:"bytes,3,opt,name=meta_data,json=metaData" json:"meta_data,omitempty"`
}

func (x *GoogleCloudApigeeV1Stats) Reset() {
	*x = GoogleCloudApigeeV1Stats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[261]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1Stats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1Stats) ProtoMessage() {}

func (x *GoogleCloudApigeeV1Stats) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[261]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1Stats.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1Stats) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{261}
}

func (x *GoogleCloudApigeeV1Stats) GetEnvironments() []*GoogleCloudApigeeV1StatsEnvironmentStats {
	if x != nil {
		return x.Environments
	}
	return nil
}

func (x *GoogleCloudApigeeV1Stats) GetHosts() []*GoogleCloudApigeeV1StatsHostStats {
	if x != nil {
		return x.Hosts
	}
	return nil
}

func (x *GoogleCloudApigeeV1Stats) GetMetaData() *GoogleCloudApigeeV1Metadata {
	if x != nil {
		return x.MetaData
	}
	return nil
}

type GoogleCloudApigeeV1StatsEnvironmentStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dimensions []*GoogleCloudApigeeV1DimensionMetric `protobuf:"bytes,1,rep,name=dimensions" json:"dimensions,omitempty"`
	Metrics    []*GoogleCloudApigeeV1Metric          `protobuf:"bytes,2,rep,name=metrics" json:"metrics,omitempty"`
	Name       *string                               `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
}

func (x *GoogleCloudApigeeV1StatsEnvironmentStats) Reset() {
	*x = GoogleCloudApigeeV1StatsEnvironmentStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[262]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1StatsEnvironmentStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1StatsEnvironmentStats) ProtoMessage() {}

func (x *GoogleCloudApigeeV1StatsEnvironmentStats) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[262]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1StatsEnvironmentStats.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1StatsEnvironmentStats) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{262}
}

func (x *GoogleCloudApigeeV1StatsEnvironmentStats) GetDimensions() []*GoogleCloudApigeeV1DimensionMetric {
	if x != nil {
		return x.Dimensions
	}
	return nil
}

func (x *GoogleCloudApigeeV1StatsEnvironmentStats) GetMetrics() []*GoogleCloudApigeeV1Metric {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *GoogleCloudApigeeV1StatsEnvironmentStats) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GoogleCloudApigeeV1StatsHostStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dimensions []*GoogleCloudApigeeV1DimensionMetric `protobuf:"bytes,1,rep,name=dimensions" json:"dimensions,omitempty"`
	Metrics    []*GoogleCloudApigeeV1Metric          `protobuf:"bytes,2,rep,name=metrics" json:"metrics,omitempty"`
	Name       *string                               `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
}

func (x *GoogleCloudApigeeV1StatsHostStats) Reset() {
	*x = GoogleCloudApigeeV1StatsHostStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[263]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1StatsHostStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1StatsHostStats) ProtoMessage() {}

func (x *GoogleCloudApigeeV1StatsHostStats) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[263]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1StatsHostStats.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1StatsHostStats) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{263}
}

func (x *GoogleCloudApigeeV1StatsHostStats) GetDimensions() []*GoogleCloudApigeeV1DimensionMetric {
	if x != nil {
		return x.Dimensions
	}
	return nil
}

func (x *GoogleCloudApigeeV1StatsHostStats) GetMetrics() []*GoogleCloudApigeeV1Metric {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *GoogleCloudApigeeV1StatsHostStats) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GoogleCloudApigeeV1Subscription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *GoogleCloudApigeeV1Subscription) Reset() {
	*x = GoogleCloudApigeeV1Subscription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[264]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1Subscription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1Subscription) ProtoMessage() {}

func (x *GoogleCloudApigeeV1Subscription) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[264]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1Subscription.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1Subscription) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{264}
}

func (x *GoogleCloudApigeeV1Subscription) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GoogleCloudApigeeV1SyncAuthorization struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Etag       []byte   `protobuf:"bytes,1,opt,name=etag" json:"etag,omitempty"`
	Identities []string `protobuf:"bytes,2,rep,name=identities" json:"identities,omitempty"`
}

func (x *GoogleCloudApigeeV1SyncAuthorization) Reset() {
	*x = GoogleCloudApigeeV1SyncAuthorization{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[265]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1SyncAuthorization) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1SyncAuthorization) ProtoMessage() {}

func (x *GoogleCloudApigeeV1SyncAuthorization) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[265]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1SyncAuthorization.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1SyncAuthorization) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{265}
}

func (x *GoogleCloudApigeeV1SyncAuthorization) GetEtag() []byte {
	if x != nil {
		return x.Etag
	}
	return nil
}

func (x *GoogleCloudApigeeV1SyncAuthorization) GetIdentities() []string {
	if x != nil {
		return x.Identities
	}
	return nil
}

type GoogleCloudApigeeV1TargetServer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description *string                     `protobuf:"bytes,1,opt,name=description" json:"description,omitempty"`
	Host        *string                     `protobuf:"bytes,2,opt,name=host" json:"host,omitempty"`
	IsEnabled   *bool                       `protobuf:"varint,3,opt,name=is_enabled,json=isEnabled" json:"is_enabled,omitempty"`
	Name        *string                     `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	Port        *int32                      `protobuf:"varint,5,opt,name=port" json:"port,omitempty"`
	Protocol    *string                     `protobuf:"bytes,6,opt,name=protocol" json:"protocol,omitempty"`
	SSLInfo     *GoogleCloudApigeeV1TlsInfo `protobuf:"bytes,7,opt,name=s_s_l_info,json=sSLInfo" json:"s_s_l_info,omitempty"`
}

func (x *GoogleCloudApigeeV1TargetServer) Reset() {
	*x = GoogleCloudApigeeV1TargetServer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[266]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1TargetServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1TargetServer) ProtoMessage() {}

func (x *GoogleCloudApigeeV1TargetServer) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[266]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1TargetServer.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1TargetServer) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{266}
}

func (x *GoogleCloudApigeeV1TargetServer) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *GoogleCloudApigeeV1TargetServer) GetHost() string {
	if x != nil && x.Host != nil {
		return *x.Host
	}
	return ""
}

func (x *GoogleCloudApigeeV1TargetServer) GetIsEnabled() bool {
	if x != nil && x.IsEnabled != nil {
		return *x.IsEnabled
	}
	return false
}

func (x *GoogleCloudApigeeV1TargetServer) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GoogleCloudApigeeV1TargetServer) GetPort() int32 {
	if x != nil && x.Port != nil {
		return *x.Port
	}
	return 0
}

func (x *GoogleCloudApigeeV1TargetServer) GetProtocol() string {
	if x != nil && x.Protocol != nil {
		return *x.Protocol
	}
	return ""
}

func (x *GoogleCloudApigeeV1TargetServer) GetSSLInfo() *GoogleCloudApigeeV1TlsInfo {
	if x != nil {
		return x.SSLInfo
	}
	return nil
}

type GoogleCloudApigeeV1TargetServerConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled  *bool                             `protobuf:"varint,1,opt,name=enabled" json:"enabled,omitempty"`
	Host     *string                           `protobuf:"bytes,2,opt,name=host" json:"host,omitempty"`
	Name     *string                           `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Port     *int32                            `protobuf:"varint,4,opt,name=port" json:"port,omitempty"`
	Protocol *string                           `protobuf:"bytes,5,opt,name=protocol" json:"protocol,omitempty"`
	TlsInfo  *GoogleCloudApigeeV1TlsInfoConfig `protobuf:"bytes,6,opt,name=tls_info,json=tlsInfo" json:"tls_info,omitempty"`
}

func (x *GoogleCloudApigeeV1TargetServerConfig) Reset() {
	*x = GoogleCloudApigeeV1TargetServerConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[267]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1TargetServerConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1TargetServerConfig) ProtoMessage() {}

func (x *GoogleCloudApigeeV1TargetServerConfig) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[267]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1TargetServerConfig.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1TargetServerConfig) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{267}
}

func (x *GoogleCloudApigeeV1TargetServerConfig) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

func (x *GoogleCloudApigeeV1TargetServerConfig) GetHost() string {
	if x != nil && x.Host != nil {
		return *x.Host
	}
	return ""
}

func (x *GoogleCloudApigeeV1TargetServerConfig) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GoogleCloudApigeeV1TargetServerConfig) GetPort() int32 {
	if x != nil && x.Port != nil {
		return *x.Port
	}
	return 0
}

func (x *GoogleCloudApigeeV1TargetServerConfig) GetProtocol() string {
	if x != nil && x.Protocol != nil {
		return *x.Protocol
	}
	return ""
}

func (x *GoogleCloudApigeeV1TargetServerConfig) GetTlsInfo() *GoogleCloudApigeeV1TlsInfoConfig {
	if x != nil {
		return x.TlsInfo
	}
	return nil
}

type GoogleCloudApigeeV1TestDatastoreResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *string `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	State *string `protobuf:"bytes,2,opt,name=state" json:"state,omitempty"`
}

func (x *GoogleCloudApigeeV1TestDatastoreResponse) Reset() {
	*x = GoogleCloudApigeeV1TestDatastoreResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[268]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1TestDatastoreResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1TestDatastoreResponse) ProtoMessage() {}

func (x *GoogleCloudApigeeV1TestDatastoreResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[268]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1TestDatastoreResponse.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1TestDatastoreResponse) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{268}
}

func (x *GoogleCloudApigeeV1TestDatastoreResponse) GetError() string {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return ""
}

func (x *GoogleCloudApigeeV1TestDatastoreResponse) GetState() string {
	if x != nil && x.State != nil {
		return *x.State
	}
	return ""
}

type GoogleCloudApigeeV1TlsInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ciphers                []string                              `protobuf:"bytes,1,rep,name=ciphers" json:"ciphers,omitempty"`
	ClientAuthEnabled      *bool                                 `protobuf:"varint,2,opt,name=client_auth_enabled,json=clientAuthEnabled" json:"client_auth_enabled,omitempty"`
	CommonName             *GoogleCloudApigeeV1TlsInfoCommonName `protobuf:"bytes,3,opt,name=common_name,json=commonName" json:"common_name,omitempty"`
	Enabled                *bool                                 `protobuf:"varint,4,opt,name=enabled" json:"enabled,omitempty"`
	Enforce                *bool                                 `protobuf:"varint,5,opt,name=enforce" json:"enforce,omitempty"`
	IgnoreValidationErrors *bool                                 `protobuf:"varint,6,opt,name=ignore_validation_errors,json=ignoreValidationErrors" json:"ignore_validation_errors,omitempty"`
	KeyAlias               *string                               `protobuf:"bytes,7,opt,name=key_alias,json=keyAlias" json:"key_alias,omitempty"`
	KeyStore               *string                               `protobuf:"bytes,8,opt,name=key_store,json=keyStore" json:"key_store,omitempty"`
	Protocols              []string                              `protobuf:"bytes,9,rep,name=protocols" json:"protocols,omitempty"`
	TrustStore             *string                               `protobuf:"bytes,10,opt,name=trust_store,json=trustStore" json:"trust_store,omitempty"`
}

func (x *GoogleCloudApigeeV1TlsInfo) Reset() {
	*x = GoogleCloudApigeeV1TlsInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[269]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1TlsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1TlsInfo) ProtoMessage() {}

func (x *GoogleCloudApigeeV1TlsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[269]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1TlsInfo.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1TlsInfo) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{269}
}

func (x *GoogleCloudApigeeV1TlsInfo) GetCiphers() []string {
	if x != nil {
		return x.Ciphers
	}
	return nil
}

func (x *GoogleCloudApigeeV1TlsInfo) GetClientAuthEnabled() bool {
	if x != nil && x.ClientAuthEnabled != nil {
		return *x.ClientAuthEnabled
	}
	return false
}

func (x *GoogleCloudApigeeV1TlsInfo) GetCommonName() *GoogleCloudApigeeV1TlsInfoCommonName {
	if x != nil {
		return x.CommonName
	}
	return nil
}

func (x *GoogleCloudApigeeV1TlsInfo) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

func (x *GoogleCloudApigeeV1TlsInfo) GetEnforce() bool {
	if x != nil && x.Enforce != nil {
		return *x.Enforce
	}
	return false
}

func (x *GoogleCloudApigeeV1TlsInfo) GetIgnoreValidationErrors() bool {
	if x != nil && x.IgnoreValidationErrors != nil {
		return *x.IgnoreValidationErrors
	}
	return false
}

func (x *GoogleCloudApigeeV1TlsInfo) GetKeyAlias() string {
	if x != nil && x.KeyAlias != nil {
		return *x.KeyAlias
	}
	return ""
}

func (x *GoogleCloudApigeeV1TlsInfo) GetKeyStore() string {
	if x != nil && x.KeyStore != nil {
		return *x.KeyStore
	}
	return ""
}

func (x *GoogleCloudApigeeV1TlsInfo) GetProtocols() []string {
	if x != nil {
		return x.Protocols
	}
	return nil
}

func (x *GoogleCloudApigeeV1TlsInfo) GetTrustStore() string {
	if x != nil && x.TrustStore != nil {
		return *x.TrustStore
	}
	return ""
}

type GoogleCloudApigeeV1TlsInfoCommonName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value         *string `protobuf:"bytes,1,opt,name=value" json:"value,omitempty"`
	WildcardMatch *bool   `protobuf:"varint,2,opt,name=wildcard_match,json=wildcardMatch" json:"wildcard_match,omitempty"`
}

func (x *GoogleCloudApigeeV1TlsInfoCommonName) Reset() {
	*x = GoogleCloudApigeeV1TlsInfoCommonName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[270]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1TlsInfoCommonName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1TlsInfoCommonName) ProtoMessage() {}

func (x *GoogleCloudApigeeV1TlsInfoCommonName) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[270]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1TlsInfoCommonName.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1TlsInfoCommonName) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{270}
}

func (x *GoogleCloudApigeeV1TlsInfoCommonName) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

func (x *GoogleCloudApigeeV1TlsInfoCommonName) GetWildcardMatch() bool {
	if x != nil && x.WildcardMatch != nil {
		return *x.WildcardMatch
	}
	return false
}

type GoogleCloudApigeeV1TlsInfoConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ciphers                []string                              `protobuf:"bytes,1,rep,name=ciphers" json:"ciphers,omitempty"`
	ClientAuthEnabled      *bool                                 `protobuf:"varint,2,opt,name=client_auth_enabled,json=clientAuthEnabled" json:"client_auth_enabled,omitempty"`
	CommonName             *GoogleCloudApigeeV1CommonNameConfig  `protobuf:"bytes,3,opt,name=common_name,json=commonName" json:"common_name,omitempty"`
	Enabled                *bool                                 `protobuf:"varint,4,opt,name=enabled" json:"enabled,omitempty"`
	Enforce                *bool                                 `protobuf:"varint,5,opt,name=enforce" json:"enforce,omitempty"`
	IgnoreValidationErrors *bool                                 `protobuf:"varint,6,opt,name=ignore_validation_errors,json=ignoreValidationErrors" json:"ignore_validation_errors,omitempty"`
	KeyAlias               *string                               `protobuf:"bytes,7,opt,name=key_alias,json=keyAlias" json:"key_alias,omitempty"`
	KeyAliasReference      *GoogleCloudApigeeV1KeyAliasReference `protobuf:"bytes,8,opt,name=key_alias_reference,json=keyAliasReference" json:"key_alias_reference,omitempty"`
	Protocols              []string                              `protobuf:"bytes,9,rep,name=protocols" json:"protocols,omitempty"`
	TrustStore             *string                               `protobuf:"bytes,10,opt,name=trust_store,json=trustStore" json:"trust_store,omitempty"`
}

func (x *GoogleCloudApigeeV1TlsInfoConfig) Reset() {
	*x = GoogleCloudApigeeV1TlsInfoConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[271]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1TlsInfoConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1TlsInfoConfig) ProtoMessage() {}

func (x *GoogleCloudApigeeV1TlsInfoConfig) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[271]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1TlsInfoConfig.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1TlsInfoConfig) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{271}
}

func (x *GoogleCloudApigeeV1TlsInfoConfig) GetCiphers() []string {
	if x != nil {
		return x.Ciphers
	}
	return nil
}

func (x *GoogleCloudApigeeV1TlsInfoConfig) GetClientAuthEnabled() bool {
	if x != nil && x.ClientAuthEnabled != nil {
		return *x.ClientAuthEnabled
	}
	return false
}

func (x *GoogleCloudApigeeV1TlsInfoConfig) GetCommonName() *GoogleCloudApigeeV1CommonNameConfig {
	if x != nil {
		return x.CommonName
	}
	return nil
}

func (x *GoogleCloudApigeeV1TlsInfoConfig) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

func (x *GoogleCloudApigeeV1TlsInfoConfig) GetEnforce() bool {
	if x != nil && x.Enforce != nil {
		return *x.Enforce
	}
	return false
}

func (x *GoogleCloudApigeeV1TlsInfoConfig) GetIgnoreValidationErrors() bool {
	if x != nil && x.IgnoreValidationErrors != nil {
		return *x.IgnoreValidationErrors
	}
	return false
}

func (x *GoogleCloudApigeeV1TlsInfoConfig) GetKeyAlias() string {
	if x != nil && x.KeyAlias != nil {
		return *x.KeyAlias
	}
	return ""
}

func (x *GoogleCloudApigeeV1TlsInfoConfig) GetKeyAliasReference() *GoogleCloudApigeeV1KeyAliasReference {
	if x != nil {
		return x.KeyAliasReference
	}
	return nil
}

func (x *GoogleCloudApigeeV1TlsInfoConfig) GetProtocols() []string {
	if x != nil {
		return x.Protocols
	}
	return nil
}

func (x *GoogleCloudApigeeV1TlsInfoConfig) GetTrustStore() string {
	if x != nil && x.TrustStore != nil {
		return *x.TrustStore
	}
	return ""
}

type GoogleCloudApigeeV1TraceConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Endpoint       *string                                 `protobuf:"bytes,1,opt,name=endpoint" json:"endpoint,omitempty"`
	Exporter       *string                                 `protobuf:"bytes,2,opt,name=exporter" json:"exporter,omitempty"`
	SamplingConfig *GoogleCloudApigeeV1TraceSamplingConfig `protobuf:"bytes,3,opt,name=sampling_config,json=samplingConfig" json:"sampling_config,omitempty"`
}

func (x *GoogleCloudApigeeV1TraceConfig) Reset() {
	*x = GoogleCloudApigeeV1TraceConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[272]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1TraceConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1TraceConfig) ProtoMessage() {}

func (x *GoogleCloudApigeeV1TraceConfig) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[272]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1TraceConfig.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1TraceConfig) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{272}
}

func (x *GoogleCloudApigeeV1TraceConfig) GetEndpoint() string {
	if x != nil && x.Endpoint != nil {
		return *x.Endpoint
	}
	return ""
}

func (x *GoogleCloudApigeeV1TraceConfig) GetExporter() string {
	if x != nil && x.Exporter != nil {
		return *x.Exporter
	}
	return ""
}

func (x *GoogleCloudApigeeV1TraceConfig) GetSamplingConfig() *GoogleCloudApigeeV1TraceSamplingConfig {
	if x != nil {
		return x.SamplingConfig
	}
	return nil
}

type GoogleCloudApigeeV1TraceConfigOverride struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiProxy       *string                                 `protobuf:"bytes,1,opt,name=api_proxy,json=apiProxy" json:"api_proxy,omitempty"`
	Name           *string                                 `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	SamplingConfig *GoogleCloudApigeeV1TraceSamplingConfig `protobuf:"bytes,3,opt,name=sampling_config,json=samplingConfig" json:"sampling_config,omitempty"`
}

func (x *GoogleCloudApigeeV1TraceConfigOverride) Reset() {
	*x = GoogleCloudApigeeV1TraceConfigOverride{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[273]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1TraceConfigOverride) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1TraceConfigOverride) ProtoMessage() {}

func (x *GoogleCloudApigeeV1TraceConfigOverride) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[273]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1TraceConfigOverride.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1TraceConfigOverride) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{273}
}

func (x *GoogleCloudApigeeV1TraceConfigOverride) GetApiProxy() string {
	if x != nil && x.ApiProxy != nil {
		return *x.ApiProxy
	}
	return ""
}

func (x *GoogleCloudApigeeV1TraceConfigOverride) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GoogleCloudApigeeV1TraceConfigOverride) GetSamplingConfig() *GoogleCloudApigeeV1TraceSamplingConfig {
	if x != nil {
		return x.SamplingConfig
	}
	return nil
}

type GoogleCloudApigeeV1TraceSamplingConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sampler      *string  `protobuf:"bytes,1,opt,name=sampler" json:"sampler,omitempty"`
	SamplingRate *float32 `protobuf:"fixed32,2,opt,name=sampling_rate,json=samplingRate" json:"sampling_rate,omitempty"`
}

func (x *GoogleCloudApigeeV1TraceSamplingConfig) Reset() {
	*x = GoogleCloudApigeeV1TraceSamplingConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[274]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1TraceSamplingConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1TraceSamplingConfig) ProtoMessage() {}

func (x *GoogleCloudApigeeV1TraceSamplingConfig) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[274]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1TraceSamplingConfig.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1TraceSamplingConfig) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{274}
}

func (x *GoogleCloudApigeeV1TraceSamplingConfig) GetSampler() string {
	if x != nil && x.Sampler != nil {
		return *x.Sampler
	}
	return ""
}

func (x *GoogleCloudApigeeV1TraceSamplingConfig) GetSamplingRate() float32 {
	if x != nil && x.SamplingRate != nil {
		return *x.SamplingRate
	}
	return 0
}

type GoogleCloudApigeeV1UpdateAppGroupAppKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action         *string                            `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	ApiProducts    []string                           `protobuf:"bytes,2,rep,name=api_products,json=apiProducts" json:"api_products,omitempty"`
	AppGroupAppKey *GoogleCloudApigeeV1AppGroupAppKey `protobuf:"bytes,3,opt,name=app_group_app_key,json=appGroupAppKey" json:"app_group_app_key,omitempty"`
}

func (x *GoogleCloudApigeeV1UpdateAppGroupAppKeyRequest) Reset() {
	*x = GoogleCloudApigeeV1UpdateAppGroupAppKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[275]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1UpdateAppGroupAppKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1UpdateAppGroupAppKeyRequest) ProtoMessage() {}

func (x *GoogleCloudApigeeV1UpdateAppGroupAppKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[275]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1UpdateAppGroupAppKeyRequest.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1UpdateAppGroupAppKeyRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{275}
}

func (x *GoogleCloudApigeeV1UpdateAppGroupAppKeyRequest) GetAction() string {
	if x != nil && x.Action != nil {
		return *x.Action
	}
	return ""
}

func (x *GoogleCloudApigeeV1UpdateAppGroupAppKeyRequest) GetApiProducts() []string {
	if x != nil {
		return x.ApiProducts
	}
	return nil
}

func (x *GoogleCloudApigeeV1UpdateAppGroupAppKeyRequest) GetAppGroupAppKey() *GoogleCloudApigeeV1AppGroupAppKey {
	if x != nil {
		return x.AppGroupAppKey
	}
	return nil
}

type GoogleCloudApigeeV1UpdateError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     *string `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Message  *string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Resource *string `protobuf:"bytes,3,opt,name=resource" json:"resource,omitempty"`
	Type     *string `protobuf:"bytes,4,opt,name=type" json:"type,omitempty"`
}

func (x *GoogleCloudApigeeV1UpdateError) Reset() {
	*x = GoogleCloudApigeeV1UpdateError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[276]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1UpdateError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1UpdateError) ProtoMessage() {}

func (x *GoogleCloudApigeeV1UpdateError) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[276]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1UpdateError.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1UpdateError) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{276}
}

func (x *GoogleCloudApigeeV1UpdateError) GetCode() string {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return ""
}

func (x *GoogleCloudApigeeV1UpdateError) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

func (x *GoogleCloudApigeeV1UpdateError) GetResource() string {
	if x != nil && x.Resource != nil {
		return *x.Resource
	}
	return ""
}

func (x *GoogleCloudApigeeV1UpdateError) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

type GoogleCloudApigeeV1UpdateSecurityIncidentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SecurityIncident *GoogleCloudApigeeV1SecurityIncident `protobuf:"bytes,1,opt,name=security_incident,json=securityIncident" json:"security_incident,omitempty"`
	UpdateMask       *string                              `protobuf:"bytes,2,opt,name=update_mask,json=updateMask" json:"update_mask,omitempty"`
}

func (x *GoogleCloudApigeeV1UpdateSecurityIncidentRequest) Reset() {
	*x = GoogleCloudApigeeV1UpdateSecurityIncidentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[277]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleCloudApigeeV1UpdateSecurityIncidentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleCloudApigeeV1UpdateSecurityIncidentRequest) ProtoMessage() {}

func (x *GoogleCloudApigeeV1UpdateSecurityIncidentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[277]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleCloudApigeeV1UpdateSecurityIncidentRequest.ProtoReflect.Descriptor instead.
func (*GoogleCloudApigeeV1UpdateSecurityIncidentRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{277}
}

func (x *GoogleCloudApigeeV1UpdateSecurityIncidentRequest) GetSecurityIncident() *GoogleCloudApigeeV1SecurityIncident {
	if x != nil {
		return x.SecurityIncident
	}
	return nil
}

func (x *GoogleCloudApigeeV1UpdateSecurityIncidentRequest) GetUpdateMask() string {
	if x != nil && x.UpdateMask != nil {
		return *x.UpdateMask
	}
	return ""
}

type GoogleIamV1AuditConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuditLogConfigs []*GoogleIamV1AuditLogConfig `protobuf:"bytes,1,rep,name=audit_log_configs,json=auditLogConfigs" json:"audit_log_configs,omitempty"`
	Service         *string                      `protobuf:"bytes,2,opt,name=service" json:"service,omitempty"`
}

func (x *GoogleIamV1AuditConfig) Reset() {
	*x = GoogleIamV1AuditConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[278]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleIamV1AuditConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleIamV1AuditConfig) ProtoMessage() {}

func (x *GoogleIamV1AuditConfig) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[278]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleIamV1AuditConfig.ProtoReflect.Descriptor instead.
func (*GoogleIamV1AuditConfig) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{278}
}

func (x *GoogleIamV1AuditConfig) GetAuditLogConfigs() []*GoogleIamV1AuditLogConfig {
	if x != nil {
		return x.AuditLogConfigs
	}
	return nil
}

func (x *GoogleIamV1AuditConfig) GetService() string {
	if x != nil && x.Service != nil {
		return *x.Service
	}
	return ""
}

type GoogleIamV1AuditLogConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExemptedMembers []string `protobuf:"bytes,1,rep,name=exempted_members,json=exemptedMembers" json:"exempted_members,omitempty"`
	LogType         *string  `protobuf:"bytes,2,opt,name=log_type,json=logType" json:"log_type,omitempty"`
}

func (x *GoogleIamV1AuditLogConfig) Reset() {
	*x = GoogleIamV1AuditLogConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[279]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleIamV1AuditLogConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleIamV1AuditLogConfig) ProtoMessage() {}

func (x *GoogleIamV1AuditLogConfig) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[279]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleIamV1AuditLogConfig.ProtoReflect.Descriptor instead.
func (*GoogleIamV1AuditLogConfig) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{279}
}

func (x *GoogleIamV1AuditLogConfig) GetExemptedMembers() []string {
	if x != nil {
		return x.ExemptedMembers
	}
	return nil
}

func (x *GoogleIamV1AuditLogConfig) GetLogType() string {
	if x != nil && x.LogType != nil {
		return *x.LogType
	}
	return ""
}

type GoogleIamV1Binding struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Condition *GoogleTypeExpr `protobuf:"bytes,1,opt,name=condition" json:"condition,omitempty"`
	Members   []string        `protobuf:"bytes,2,rep,name=members" json:"members,omitempty"`
	Role      *string         `protobuf:"bytes,3,opt,name=role" json:"role,omitempty"`
}

func (x *GoogleIamV1Binding) Reset() {
	*x = GoogleIamV1Binding{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[280]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleIamV1Binding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleIamV1Binding) ProtoMessage() {}

func (x *GoogleIamV1Binding) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[280]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleIamV1Binding.ProtoReflect.Descriptor instead.
func (*GoogleIamV1Binding) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{280}
}

func (x *GoogleIamV1Binding) GetCondition() *GoogleTypeExpr {
	if x != nil {
		return x.Condition
	}
	return nil
}

func (x *GoogleIamV1Binding) GetMembers() []string {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *GoogleIamV1Binding) GetRole() string {
	if x != nil && x.Role != nil {
		return *x.Role
	}
	return ""
}

type GoogleIamV1Policy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuditConfigs []*GoogleIamV1AuditConfig `protobuf:"bytes,1,rep,name=audit_configs,json=auditConfigs" json:"audit_configs,omitempty"`
	Bindings     []*GoogleIamV1Binding     `protobuf:"bytes,2,rep,name=bindings" json:"bindings,omitempty"`
	Etag         []byte                    `protobuf:"bytes,3,opt,name=etag" json:"etag,omitempty"`
	Version      *int32                    `protobuf:"varint,4,opt,name=version" json:"version,omitempty"`
}

func (x *GoogleIamV1Policy) Reset() {
	*x = GoogleIamV1Policy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[281]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleIamV1Policy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleIamV1Policy) ProtoMessage() {}

func (x *GoogleIamV1Policy) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[281]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleIamV1Policy.ProtoReflect.Descriptor instead.
func (*GoogleIamV1Policy) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{281}
}

func (x *GoogleIamV1Policy) GetAuditConfigs() []*GoogleIamV1AuditConfig {
	if x != nil {
		return x.AuditConfigs
	}
	return nil
}

func (x *GoogleIamV1Policy) GetBindings() []*GoogleIamV1Binding {
	if x != nil {
		return x.Bindings
	}
	return nil
}

func (x *GoogleIamV1Policy) GetEtag() []byte {
	if x != nil {
		return x.Etag
	}
	return nil
}

func (x *GoogleIamV1Policy) GetVersion() int32 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

type GoogleIamV1SetIamPolicyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Policy     *GoogleIamV1Policy `protobuf:"bytes,1,opt,name=policy" json:"policy,omitempty"`
	UpdateMask *string            `protobuf:"bytes,2,opt,name=update_mask,json=updateMask" json:"update_mask,omitempty"`
}

func (x *GoogleIamV1SetIamPolicyRequest) Reset() {
	*x = GoogleIamV1SetIamPolicyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[282]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleIamV1SetIamPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleIamV1SetIamPolicyRequest) ProtoMessage() {}

func (x *GoogleIamV1SetIamPolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[282]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleIamV1SetIamPolicyRequest.ProtoReflect.Descriptor instead.
func (*GoogleIamV1SetIamPolicyRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{282}
}

func (x *GoogleIamV1SetIamPolicyRequest) GetPolicy() *GoogleIamV1Policy {
	if x != nil {
		return x.Policy
	}
	return nil
}

func (x *GoogleIamV1SetIamPolicyRequest) GetUpdateMask() string {
	if x != nil && x.UpdateMask != nil {
		return *x.UpdateMask
	}
	return ""
}

type GoogleIamV1TestIamPermissionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Permissions []string `protobuf:"bytes,1,rep,name=permissions" json:"permissions,omitempty"`
}

func (x *GoogleIamV1TestIamPermissionsRequest) Reset() {
	*x = GoogleIamV1TestIamPermissionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[283]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleIamV1TestIamPermissionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleIamV1TestIamPermissionsRequest) ProtoMessage() {}

func (x *GoogleIamV1TestIamPermissionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[283]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleIamV1TestIamPermissionsRequest.ProtoReflect.Descriptor instead.
func (*GoogleIamV1TestIamPermissionsRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{283}
}

func (x *GoogleIamV1TestIamPermissionsRequest) GetPermissions() []string {
	if x != nil {
		return x.Permissions
	}
	return nil
}

type GoogleIamV1TestIamPermissionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Permissions []string `protobuf:"bytes,1,rep,name=permissions" json:"permissions,omitempty"`
}

func (x *GoogleIamV1TestIamPermissionsResponse) Reset() {
	*x = GoogleIamV1TestIamPermissionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[284]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleIamV1TestIamPermissionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleIamV1TestIamPermissionsResponse) ProtoMessage() {}

func (x *GoogleIamV1TestIamPermissionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[284]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleIamV1TestIamPermissionsResponse.ProtoReflect.Descriptor instead.
func (*GoogleIamV1TestIamPermissionsResponse) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{284}
}

func (x *GoogleIamV1TestIamPermissionsResponse) GetPermissions() []string {
	if x != nil {
		return x.Permissions
	}
	return nil
}

type GoogleLongrunningListOperationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NextPageToken *string                    `protobuf:"bytes,1,opt,name=next_page_token,json=nextPageToken" json:"next_page_token,omitempty"`
	Operations    []*longrunningpb.Operation `protobuf:"bytes,2,rep,name=operations" json:"operations,omitempty"`
}

func (x *GoogleLongrunningListOperationsResponse) Reset() {
	*x = GoogleLongrunningListOperationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[285]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleLongrunningListOperationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleLongrunningListOperationsResponse) ProtoMessage() {}

func (x *GoogleLongrunningListOperationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[285]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleLongrunningListOperationsResponse.ProtoReflect.Descriptor instead.
func (*GoogleLongrunningListOperationsResponse) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{285}
}

func (x *GoogleLongrunningListOperationsResponse) GetNextPageToken() string {
	if x != nil && x.NextPageToken != nil {
		return *x.NextPageToken
	}
	return ""
}

func (x *GoogleLongrunningListOperationsResponse) GetOperations() []*longrunningpb.Operation {
	if x != nil {
		return x.Operations
	}
	return nil
}

type GoogleLongrunningOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Done     *bool                `protobuf:"varint,1,opt,name=done" json:"done,omitempty"`
	Error    *GoogleRpcStatus     `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
	Metadata map[string]*any1.Any `protobuf:"bytes,3,rep,name=metadata" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Name     *string              `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	Response map[string]*any1.Any `protobuf:"bytes,5,rep,name=response" json:"response,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (x *GoogleLongrunningOperation) Reset() {
	*x = GoogleLongrunningOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[286]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleLongrunningOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleLongrunningOperation) ProtoMessage() {}

func (x *GoogleLongrunningOperation) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[286]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleLongrunningOperation.ProtoReflect.Descriptor instead.
func (*GoogleLongrunningOperation) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{286}
}

func (x *GoogleLongrunningOperation) GetDone() bool {
	if x != nil && x.Done != nil {
		return *x.Done
	}
	return false
}

func (x *GoogleLongrunningOperation) GetError() *GoogleRpcStatus {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *GoogleLongrunningOperation) GetMetadata() map[string]*any1.Any {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *GoogleLongrunningOperation) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GoogleLongrunningOperation) GetResponse() map[string]*any1.Any {
	if x != nil {
		return x.Response
	}
	return nil
}

type GoogleProtobufEmpty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GoogleProtobufEmpty) Reset() {
	*x = GoogleProtobufEmpty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[287]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleProtobufEmpty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleProtobufEmpty) ProtoMessage() {}

func (x *GoogleProtobufEmpty) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[287]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleProtobufEmpty.ProtoReflect.Descriptor instead.
func (*GoogleProtobufEmpty) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{287}
}

type GoogleRpcPreconditionFailure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Violations []*GoogleRpcPreconditionFailureViolation `protobuf:"bytes,1,rep,name=violations" json:"violations,omitempty"`
}

func (x *GoogleRpcPreconditionFailure) Reset() {
	*x = GoogleRpcPreconditionFailure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[288]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleRpcPreconditionFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleRpcPreconditionFailure) ProtoMessage() {}

func (x *GoogleRpcPreconditionFailure) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[288]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleRpcPreconditionFailure.ProtoReflect.Descriptor instead.
func (*GoogleRpcPreconditionFailure) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{288}
}

func (x *GoogleRpcPreconditionFailure) GetViolations() []*GoogleRpcPreconditionFailureViolation {
	if x != nil {
		return x.Violations
	}
	return nil
}

type GoogleRpcPreconditionFailureViolation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description *string `protobuf:"bytes,1,opt,name=description" json:"description,omitempty"`
	Subject     *string `protobuf:"bytes,2,opt,name=subject" json:"subject,omitempty"`
	Type        *string `protobuf:"bytes,3,opt,name=type" json:"type,omitempty"`
}

func (x *GoogleRpcPreconditionFailureViolation) Reset() {
	*x = GoogleRpcPreconditionFailureViolation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[289]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleRpcPreconditionFailureViolation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleRpcPreconditionFailureViolation) ProtoMessage() {}

func (x *GoogleRpcPreconditionFailureViolation) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[289]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleRpcPreconditionFailureViolation.ProtoReflect.Descriptor instead.
func (*GoogleRpcPreconditionFailureViolation) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{289}
}

func (x *GoogleRpcPreconditionFailureViolation) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *GoogleRpcPreconditionFailureViolation) GetSubject() string {
	if x != nil && x.Subject != nil {
		return *x.Subject
	}
	return ""
}

func (x *GoogleRpcPreconditionFailureViolation) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

type GoogleRpcStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    *int32      `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Details []*any1.Any `protobuf:"bytes,2,rep,name=details" json:"details,omitempty"`
	Message *string     `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (x *GoogleRpcStatus) Reset() {
	*x = GoogleRpcStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[290]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleRpcStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleRpcStatus) ProtoMessage() {}

func (x *GoogleRpcStatus) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[290]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleRpcStatus.ProtoReflect.Descriptor instead.
func (*GoogleRpcStatus) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{290}
}

func (x *GoogleRpcStatus) GetCode() int32 {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return 0
}

func (x *GoogleRpcStatus) GetDetails() []*any1.Any {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *GoogleRpcStatus) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

type GoogleTypeExpr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description *string `protobuf:"bytes,1,opt,name=description" json:"description,omitempty"`
	Expression  *string `protobuf:"bytes,2,opt,name=expression" json:"expression,omitempty"`
	Location    *string `protobuf:"bytes,3,opt,name=location" json:"location,omitempty"`
	Title       *string `protobuf:"bytes,4,opt,name=title" json:"title,omitempty"`
}

func (x *GoogleTypeExpr) Reset() {
	*x = GoogleTypeExpr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[291]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleTypeExpr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleTypeExpr) ProtoMessage() {}

func (x *GoogleTypeExpr) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[291]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleTypeExpr.ProtoReflect.Descriptor instead.
func (*GoogleTypeExpr) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{291}
}

func (x *GoogleTypeExpr) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *GoogleTypeExpr) GetExpression() string {
	if x != nil && x.Expression != nil {
		return *x.Expression
	}
	return ""
}

func (x *GoogleTypeExpr) GetLocation() string {
	if x != nil && x.Location != nil {
		return *x.Location
	}
	return ""
}

func (x *GoogleTypeExpr) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

type GoogleTypeInterval struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EndTime   *timestamp.Timestamp `protobuf:"bytes,1,opt,name=end_time,json=endTime" json:"end_time,omitempty"`
	StartTime *timestamp.Timestamp `protobuf:"bytes,2,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
}

func (x *GoogleTypeInterval) Reset() {
	*x = GoogleTypeInterval{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[292]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleTypeInterval) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleTypeInterval) ProtoMessage() {}

func (x *GoogleTypeInterval) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[292]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleTypeInterval.ProtoReflect.Descriptor instead.
func (*GoogleTypeInterval) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{292}
}

func (x *GoogleTypeInterval) GetEndTime() *timestamp.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *GoogleTypeInterval) GetStartTime() *timestamp.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

type GoogleTypeMoney struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrencyCode *string `protobuf:"bytes,1,opt,name=currency_code,json=currencyCode" json:"currency_code,omitempty"`
	Nanos        *int32  `protobuf:"varint,2,opt,name=nanos" json:"nanos,omitempty"`
	Units        *int64  `protobuf:"varint,3,opt,name=units" json:"units,omitempty"`
}

func (x *GoogleTypeMoney) Reset() {
	*x = GoogleTypeMoney{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[293]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleTypeMoney) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleTypeMoney) ProtoMessage() {}

func (x *GoogleTypeMoney) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[293]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleTypeMoney.ProtoReflect.Descriptor instead.
func (*GoogleTypeMoney) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{293}
}

func (x *GoogleTypeMoney) GetCurrencyCode() string {
	if x != nil && x.CurrencyCode != nil {
		return *x.CurrencyCode
	}
	return ""
}

func (x *GoogleTypeMoney) GetNanos() int32 {
	if x != nil && x.Nanos != nil {
		return *x.Nanos
	}
	return 0
}

func (x *GoogleTypeMoney) GetUnits() int64 {
	if x != nil && x.Units != nil {
		return *x.Units
	}
	return 0
}

type ListHybridIssuersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *ListHybridIssuersRequest) Reset() {
	*x = ListHybridIssuersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[294]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListHybridIssuersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListHybridIssuersRequest) ProtoMessage() {}

func (x *ListHybridIssuersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[294]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListHybridIssuersRequest.ProtoReflect.Descriptor instead.
func (*ListHybridIssuersRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{294}
}

func (x *ListHybridIssuersRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type CreateOrganizationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent       *string                          `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
	Organization *GoogleCloudApigeeV1Organization `protobuf:"bytes,2,opt,name=organization" json:"organization,omitempty"`
}

func (x *CreateOrganizationRequest) Reset() {
	*x = CreateOrganizationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[295]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrganizationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrganizationRequest) ProtoMessage() {}

func (x *CreateOrganizationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[295]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrganizationRequest.ProtoReflect.Descriptor instead.
func (*CreateOrganizationRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{295}
}

func (x *CreateOrganizationRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

func (x *CreateOrganizationRequest) GetOrganization() *GoogleCloudApigeeV1Organization {
	if x != nil {
		return x.Organization
	}
	return nil
}

type DeleteOrganizationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Retention *string `protobuf:"bytes,2,opt,name=retention" json:"retention,omitempty"`
}

func (x *DeleteOrganizationRequest) Reset() {
	*x = DeleteOrganizationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[296]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrganizationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrganizationRequest) ProtoMessage() {}

func (x *DeleteOrganizationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[296]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrganizationRequest.ProtoReflect.Descriptor instead.
func (*DeleteOrganizationRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{296}
}

func (x *DeleteOrganizationRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *DeleteOrganizationRequest) GetRetention() string {
	if x != nil && x.Retention != nil {
		return *x.Retention
	}
	return ""
}

type GetOrganizationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *GetOrganizationRequest) Reset() {
	*x = GetOrganizationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[297]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrganizationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrganizationRequest) ProtoMessage() {}

func (x *GetOrganizationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[297]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrganizationRequest.ProtoReflect.Descriptor instead.
func (*GetOrganizationRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{297}
}

func (x *GetOrganizationRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GetDeployedIngressConfigOrganizationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	View *string `protobuf:"bytes,2,opt,name=view" json:"view,omitempty"`
}

func (x *GetDeployedIngressConfigOrganizationRequest) Reset() {
	*x = GetDeployedIngressConfigOrganizationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[298]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeployedIngressConfigOrganizationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeployedIngressConfigOrganizationRequest) ProtoMessage() {}

func (x *GetDeployedIngressConfigOrganizationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[298]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeployedIngressConfigOrganizationRequest.ProtoReflect.Descriptor instead.
func (*GetDeployedIngressConfigOrganizationRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{298}
}

func (x *GetDeployedIngressConfigOrganizationRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GetDeployedIngressConfigOrganizationRequest) GetView() string {
	if x != nil && x.View != nil {
		return *x.View
	}
	return ""
}

type GetProjectMappingOrganizationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *GetProjectMappingOrganizationRequest) Reset() {
	*x = GetProjectMappingOrganizationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[299]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProjectMappingOrganizationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectMappingOrganizationRequest) ProtoMessage() {}

func (x *GetProjectMappingOrganizationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[299]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectMappingOrganizationRequest.ProtoReflect.Descriptor instead.
func (*GetProjectMappingOrganizationRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{299}
}

func (x *GetProjectMappingOrganizationRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GetRuntimeConfigOrganizationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *GetRuntimeConfigOrganizationRequest) Reset() {
	*x = GetRuntimeConfigOrganizationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[300]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRuntimeConfigOrganizationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRuntimeConfigOrganizationRequest) ProtoMessage() {}

func (x *GetRuntimeConfigOrganizationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[300]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRuntimeConfigOrganizationRequest.ProtoReflect.Descriptor instead.
func (*GetRuntimeConfigOrganizationRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{300}
}

func (x *GetRuntimeConfigOrganizationRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GetSecuritySettingsOrganizationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *GetSecuritySettingsOrganizationRequest) Reset() {
	*x = GetSecuritySettingsOrganizationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[301]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSecuritySettingsOrganizationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSecuritySettingsOrganizationRequest) ProtoMessage() {}

func (x *GetSecuritySettingsOrganizationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[301]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSecuritySettingsOrganizationRequest.ProtoReflect.Descriptor instead.
func (*GetSecuritySettingsOrganizationRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{301}
}

func (x *GetSecuritySettingsOrganizationRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GetSyncAuthorizationOrganizationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         *string                                         `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Organization *GoogleCloudApigeeV1GetSyncAuthorizationRequest `protobuf:"bytes,2,opt,name=organization" json:"organization,omitempty"`
}

func (x *GetSyncAuthorizationOrganizationRequest) Reset() {
	*x = GetSyncAuthorizationOrganizationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[302]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSyncAuthorizationOrganizationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSyncAuthorizationOrganizationRequest) ProtoMessage() {}

func (x *GetSyncAuthorizationOrganizationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[302]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSyncAuthorizationOrganizationRequest.ProtoReflect.Descriptor instead.
func (*GetSyncAuthorizationOrganizationRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{302}
}

func (x *GetSyncAuthorizationOrganizationRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GetSyncAuthorizationOrganizationRequest) GetOrganization() *GoogleCloudApigeeV1GetSyncAuthorizationRequest {
	if x != nil {
		return x.Organization
	}
	return nil
}

type ListOrganizationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent *string `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
}

func (x *ListOrganizationsRequest) Reset() {
	*x = ListOrganizationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[303]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrganizationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrganizationsRequest) ProtoMessage() {}

func (x *ListOrganizationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[303]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrganizationsRequest.ProtoReflect.Descriptor instead.
func (*ListOrganizationsRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{303}
}

func (x *ListOrganizationsRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

type SetAddonsOrganizationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Org          *string                              `protobuf:"bytes,1,opt,name=org" json:"org,omitempty"`
	Organization *GoogleCloudApigeeV1SetAddonsRequest `protobuf:"bytes,2,opt,name=organization" json:"organization,omitempty"`
}

func (x *SetAddonsOrganizationRequest) Reset() {
	*x = SetAddonsOrganizationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[304]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetAddonsOrganizationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAddonsOrganizationRequest) ProtoMessage() {}

func (x *SetAddonsOrganizationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[304]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAddonsOrganizationRequest.ProtoReflect.Descriptor instead.
func (*SetAddonsOrganizationRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{304}
}

func (x *SetAddonsOrganizationRequest) GetOrg() string {
	if x != nil && x.Org != nil {
		return *x.Org
	}
	return ""
}

func (x *SetAddonsOrganizationRequest) GetOrganization() *GoogleCloudApigeeV1SetAddonsRequest {
	if x != nil {
		return x.Organization
	}
	return nil
}

type SetSyncAuthorizationOrganizationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         *string                               `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Organization *GoogleCloudApigeeV1SyncAuthorization `protobuf:"bytes,2,opt,name=organization" json:"organization,omitempty"`
}

func (x *SetSyncAuthorizationOrganizationRequest) Reset() {
	*x = SetSyncAuthorizationOrganizationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[305]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetSyncAuthorizationOrganizationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSyncAuthorizationOrganizationRequest) ProtoMessage() {}

func (x *SetSyncAuthorizationOrganizationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[305]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSyncAuthorizationOrganizationRequest.ProtoReflect.Descriptor instead.
func (*SetSyncAuthorizationOrganizationRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{305}
}

func (x *SetSyncAuthorizationOrganizationRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *SetSyncAuthorizationOrganizationRequest) GetOrganization() *GoogleCloudApigeeV1SyncAuthorization {
	if x != nil {
		return x.Organization
	}
	return nil
}

type UpdateOrganizationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         *string                          `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Organization *GoogleCloudApigeeV1Organization `protobuf:"bytes,2,opt,name=organization" json:"organization,omitempty"`
}

func (x *UpdateOrganizationRequest) Reset() {
	*x = UpdateOrganizationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[306]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrganizationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrganizationRequest) ProtoMessage() {}

func (x *UpdateOrganizationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[306]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrganizationRequest.ProtoReflect.Descriptor instead.
func (*UpdateOrganizationRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{306}
}

func (x *UpdateOrganizationRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UpdateOrganizationRequest) GetOrganization() *GoogleCloudApigeeV1Organization {
	if x != nil {
		return x.Organization
	}
	return nil
}

type UpdateSecuritySettingsOrganizationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         *string                              `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	UpdateMask   *string                              `protobuf:"bytes,2,opt,name=update_mask,json=updateMask" json:"update_mask,omitempty"`
	Organization *GoogleCloudApigeeV1SecuritySettings `protobuf:"bytes,3,opt,name=organization" json:"organization,omitempty"`
}

func (x *UpdateSecuritySettingsOrganizationRequest) Reset() {
	*x = UpdateSecuritySettingsOrganizationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[307]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSecuritySettingsOrganizationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSecuritySettingsOrganizationRequest) ProtoMessage() {}

func (x *UpdateSecuritySettingsOrganizationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[307]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSecuritySettingsOrganizationRequest.ProtoReflect.Descriptor instead.
func (*UpdateSecuritySettingsOrganizationRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{307}
}

func (x *UpdateSecuritySettingsOrganizationRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UpdateSecuritySettingsOrganizationRequest) GetUpdateMask() string {
	if x != nil && x.UpdateMask != nil {
		return *x.UpdateMask
	}
	return ""
}

func (x *UpdateSecuritySettingsOrganizationRequest) GetOrganization() *GoogleCloudApigeeV1SecuritySettings {
	if x != nil {
		return x.Organization
	}
	return nil
}

type CreateOrganizationsAnalyticsDatastoreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent                          *string                       `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
	OrganizationsAnalyticsDatastore *GoogleCloudApigeeV1Datastore `protobuf:"bytes,2,opt,name=organizations_analytics_datastore,json=organizationsAnalyticsDatastore" json:"organizations_analytics_datastore,omitempty"`
}

func (x *CreateOrganizationsAnalyticsDatastoreRequest) Reset() {
	*x = CreateOrganizationsAnalyticsDatastoreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[308]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrganizationsAnalyticsDatastoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrganizationsAnalyticsDatastoreRequest) ProtoMessage() {}

func (x *CreateOrganizationsAnalyticsDatastoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[308]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrganizationsAnalyticsDatastoreRequest.ProtoReflect.Descriptor instead.
func (*CreateOrganizationsAnalyticsDatastoreRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{308}
}

func (x *CreateOrganizationsAnalyticsDatastoreRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

func (x *CreateOrganizationsAnalyticsDatastoreRequest) GetOrganizationsAnalyticsDatastore() *GoogleCloudApigeeV1Datastore {
	if x != nil {
		return x.OrganizationsAnalyticsDatastore
	}
	return nil
}

type DeleteOrganizationsAnalyticsDatastoreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *DeleteOrganizationsAnalyticsDatastoreRequest) Reset() {
	*x = DeleteOrganizationsAnalyticsDatastoreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[309]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrganizationsAnalyticsDatastoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrganizationsAnalyticsDatastoreRequest) ProtoMessage() {}

func (x *DeleteOrganizationsAnalyticsDatastoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[309]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrganizationsAnalyticsDatastoreRequest.ProtoReflect.Descriptor instead.
func (*DeleteOrganizationsAnalyticsDatastoreRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{309}
}

func (x *DeleteOrganizationsAnalyticsDatastoreRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GetOrganizationsAnalyticsDatastoreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *GetOrganizationsAnalyticsDatastoreRequest) Reset() {
	*x = GetOrganizationsAnalyticsDatastoreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[310]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrganizationsAnalyticsDatastoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrganizationsAnalyticsDatastoreRequest) ProtoMessage() {}

func (x *GetOrganizationsAnalyticsDatastoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[310]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrganizationsAnalyticsDatastoreRequest.ProtoReflect.Descriptor instead.
func (*GetOrganizationsAnalyticsDatastoreRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{310}
}

func (x *GetOrganizationsAnalyticsDatastoreRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type ListOrganizationsAnalyticsDatastoresRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent     *string `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
	TargetType *string `protobuf:"bytes,2,opt,name=target_type,json=targetType" json:"target_type,omitempty"`
}

func (x *ListOrganizationsAnalyticsDatastoresRequest) Reset() {
	*x = ListOrganizationsAnalyticsDatastoresRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[311]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrganizationsAnalyticsDatastoresRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrganizationsAnalyticsDatastoresRequest) ProtoMessage() {}

func (x *ListOrganizationsAnalyticsDatastoresRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[311]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrganizationsAnalyticsDatastoresRequest.ProtoReflect.Descriptor instead.
func (*ListOrganizationsAnalyticsDatastoresRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{311}
}

func (x *ListOrganizationsAnalyticsDatastoresRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

func (x *ListOrganizationsAnalyticsDatastoresRequest) GetTargetType() string {
	if x != nil && x.TargetType != nil {
		return *x.TargetType
	}
	return ""
}

type TestOrganizationsAnalyticsDatastoreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent                          *string                       `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
	OrganizationsAnalyticsDatastore *GoogleCloudApigeeV1Datastore `protobuf:"bytes,2,opt,name=organizations_analytics_datastore,json=organizationsAnalyticsDatastore" json:"organizations_analytics_datastore,omitempty"`
}

func (x *TestOrganizationsAnalyticsDatastoreRequest) Reset() {
	*x = TestOrganizationsAnalyticsDatastoreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[312]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestOrganizationsAnalyticsDatastoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestOrganizationsAnalyticsDatastoreRequest) ProtoMessage() {}

func (x *TestOrganizationsAnalyticsDatastoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[312]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestOrganizationsAnalyticsDatastoreRequest.ProtoReflect.Descriptor instead.
func (*TestOrganizationsAnalyticsDatastoreRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{312}
}

func (x *TestOrganizationsAnalyticsDatastoreRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

func (x *TestOrganizationsAnalyticsDatastoreRequest) GetOrganizationsAnalyticsDatastore() *GoogleCloudApigeeV1Datastore {
	if x != nil {
		return x.OrganizationsAnalyticsDatastore
	}
	return nil
}

type UpdateOrganizationsAnalyticsDatastoreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                            *string                       `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	OrganizationsAnalyticsDatastore *GoogleCloudApigeeV1Datastore `protobuf:"bytes,2,opt,name=organizations_analytics_datastore,json=organizationsAnalyticsDatastore" json:"organizations_analytics_datastore,omitempty"`
}

func (x *UpdateOrganizationsAnalyticsDatastoreRequest) Reset() {
	*x = UpdateOrganizationsAnalyticsDatastoreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[313]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrganizationsAnalyticsDatastoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrganizationsAnalyticsDatastoreRequest) ProtoMessage() {}

func (x *UpdateOrganizationsAnalyticsDatastoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[313]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrganizationsAnalyticsDatastoreRequest.ProtoReflect.Descriptor instead.
func (*UpdateOrganizationsAnalyticsDatastoreRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{313}
}

func (x *UpdateOrganizationsAnalyticsDatastoreRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UpdateOrganizationsAnalyticsDatastoreRequest) GetOrganizationsAnalyticsDatastore() *GoogleCloudApigeeV1Datastore {
	if x != nil {
		return x.OrganizationsAnalyticsDatastore
	}
	return nil
}

type AttributesOrganizationsApiproductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                    *string                        `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	OrganizationsApiproduct *GoogleCloudApigeeV1Attributes `protobuf:"bytes,2,opt,name=organizations_apiproduct,json=organizationsApiproduct" json:"organizations_apiproduct,omitempty"`
}

func (x *AttributesOrganizationsApiproductRequest) Reset() {
	*x = AttributesOrganizationsApiproductRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[314]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttributesOrganizationsApiproductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttributesOrganizationsApiproductRequest) ProtoMessage() {}

func (x *AttributesOrganizationsApiproductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[314]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttributesOrganizationsApiproductRequest.ProtoReflect.Descriptor instead.
func (*AttributesOrganizationsApiproductRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{314}
}

func (x *AttributesOrganizationsApiproductRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *AttributesOrganizationsApiproductRequest) GetOrganizationsApiproduct() *GoogleCloudApigeeV1Attributes {
	if x != nil {
		return x.OrganizationsApiproduct
	}
	return nil
}

type CreateOrganizationsApiproductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent                  *string                        `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
	OrganizationsApiproduct *GoogleCloudApigeeV1ApiProduct `protobuf:"bytes,2,opt,name=organizations_apiproduct,json=organizationsApiproduct" json:"organizations_apiproduct,omitempty"`
}

func (x *CreateOrganizationsApiproductRequest) Reset() {
	*x = CreateOrganizationsApiproductRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[315]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrganizationsApiproductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrganizationsApiproductRequest) ProtoMessage() {}

func (x *CreateOrganizationsApiproductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[315]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrganizationsApiproductRequest.ProtoReflect.Descriptor instead.
func (*CreateOrganizationsApiproductRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{315}
}

func (x *CreateOrganizationsApiproductRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

func (x *CreateOrganizationsApiproductRequest) GetOrganizationsApiproduct() *GoogleCloudApigeeV1ApiProduct {
	if x != nil {
		return x.OrganizationsApiproduct
	}
	return nil
}

type DeleteOrganizationsApiproductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *DeleteOrganizationsApiproductRequest) Reset() {
	*x = DeleteOrganizationsApiproductRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[316]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrganizationsApiproductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrganizationsApiproductRequest) ProtoMessage() {}

func (x *DeleteOrganizationsApiproductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[316]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrganizationsApiproductRequest.ProtoReflect.Descriptor instead.
func (*DeleteOrganizationsApiproductRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{316}
}

func (x *DeleteOrganizationsApiproductRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GetOrganizationsApiproductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *GetOrganizationsApiproductRequest) Reset() {
	*x = GetOrganizationsApiproductRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[317]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrganizationsApiproductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrganizationsApiproductRequest) ProtoMessage() {}

func (x *GetOrganizationsApiproductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[317]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrganizationsApiproductRequest.ProtoReflect.Descriptor instead.
func (*GetOrganizationsApiproductRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{317}
}

func (x *GetOrganizationsApiproductRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type ListOrganizationsApiproductsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attributename  *string `protobuf:"bytes,1,opt,name=attributename" json:"attributename,omitempty"`
	Attributevalue *string `protobuf:"bytes,2,opt,name=attributevalue" json:"attributevalue,omitempty"`
	Count          *string `protobuf:"bytes,3,opt,name=count" json:"count,omitempty"`
	Expand         *bool   `protobuf:"varint,4,opt,name=expand" json:"expand,omitempty"`
	Parent         *string `protobuf:"bytes,5,opt,name=parent" json:"parent,omitempty"`
	StartKey       *string `protobuf:"bytes,6,opt,name=start_key,json=startKey" json:"start_key,omitempty"`
}

func (x *ListOrganizationsApiproductsRequest) Reset() {
	*x = ListOrganizationsApiproductsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[318]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrganizationsApiproductsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrganizationsApiproductsRequest) ProtoMessage() {}

func (x *ListOrganizationsApiproductsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[318]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrganizationsApiproductsRequest.ProtoReflect.Descriptor instead.
func (*ListOrganizationsApiproductsRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{318}
}

func (x *ListOrganizationsApiproductsRequest) GetAttributename() string {
	if x != nil && x.Attributename != nil {
		return *x.Attributename
	}
	return ""
}

func (x *ListOrganizationsApiproductsRequest) GetAttributevalue() string {
	if x != nil && x.Attributevalue != nil {
		return *x.Attributevalue
	}
	return ""
}

func (x *ListOrganizationsApiproductsRequest) GetCount() string {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return ""
}

func (x *ListOrganizationsApiproductsRequest) GetExpand() bool {
	if x != nil && x.Expand != nil {
		return *x.Expand
	}
	return false
}

func (x *ListOrganizationsApiproductsRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

func (x *ListOrganizationsApiproductsRequest) GetStartKey() string {
	if x != nil && x.StartKey != nil {
		return *x.StartKey
	}
	return ""
}

type UpdateOrganizationsApiproductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                    *string                        `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	OrganizationsApiproduct *GoogleCloudApigeeV1ApiProduct `protobuf:"bytes,2,opt,name=organizations_apiproduct,json=organizationsApiproduct" json:"organizations_apiproduct,omitempty"`
}

func (x *UpdateOrganizationsApiproductRequest) Reset() {
	*x = UpdateOrganizationsApiproductRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[319]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrganizationsApiproductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrganizationsApiproductRequest) ProtoMessage() {}

func (x *UpdateOrganizationsApiproductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[319]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrganizationsApiproductRequest.ProtoReflect.Descriptor instead.
func (*UpdateOrganizationsApiproductRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{319}
}

func (x *UpdateOrganizationsApiproductRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UpdateOrganizationsApiproductRequest) GetOrganizationsApiproduct() *GoogleCloudApigeeV1ApiProduct {
	if x != nil {
		return x.OrganizationsApiproduct
	}
	return nil
}

type DeleteOrganizationsApiproductsAttributeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *DeleteOrganizationsApiproductsAttributeRequest) Reset() {
	*x = DeleteOrganizationsApiproductsAttributeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[320]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrganizationsApiproductsAttributeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrganizationsApiproductsAttributeRequest) ProtoMessage() {}

func (x *DeleteOrganizationsApiproductsAttributeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[320]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrganizationsApiproductsAttributeRequest.ProtoReflect.Descriptor instead.
func (*DeleteOrganizationsApiproductsAttributeRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{320}
}

func (x *DeleteOrganizationsApiproductsAttributeRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GetOrganizationsApiproductsAttributeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *GetOrganizationsApiproductsAttributeRequest) Reset() {
	*x = GetOrganizationsApiproductsAttributeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[321]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrganizationsApiproductsAttributeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrganizationsApiproductsAttributeRequest) ProtoMessage() {}

func (x *GetOrganizationsApiproductsAttributeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[321]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrganizationsApiproductsAttributeRequest.ProtoReflect.Descriptor instead.
func (*GetOrganizationsApiproductsAttributeRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{321}
}

func (x *GetOrganizationsApiproductsAttributeRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type ListOrganizationsApiproductsAttributesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent *string `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
}

func (x *ListOrganizationsApiproductsAttributesRequest) Reset() {
	*x = ListOrganizationsApiproductsAttributesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[322]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrganizationsApiproductsAttributesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrganizationsApiproductsAttributesRequest) ProtoMessage() {}

func (x *ListOrganizationsApiproductsAttributesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[322]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrganizationsApiproductsAttributesRequest.ProtoReflect.Descriptor instead.
func (*ListOrganizationsApiproductsAttributesRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{322}
}

func (x *ListOrganizationsApiproductsAttributesRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

type UpdateApiProductAttributeOrganizationsApiproductsAttributeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                              *string                       `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	OrganizationsApiproductsAttribute *GoogleCloudApigeeV1Attribute `protobuf:"bytes,2,opt,name=organizations_apiproducts_attribute,json=organizationsApiproductsAttribute" json:"organizations_apiproducts_attribute,omitempty"`
}

func (x *UpdateApiProductAttributeOrganizationsApiproductsAttributeRequest) Reset() {
	*x = UpdateApiProductAttributeOrganizationsApiproductsAttributeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[323]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateApiProductAttributeOrganizationsApiproductsAttributeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateApiProductAttributeOrganizationsApiproductsAttributeRequest) ProtoMessage() {}

func (x *UpdateApiProductAttributeOrganizationsApiproductsAttributeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[323]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateApiProductAttributeOrganizationsApiproductsAttributeRequest.ProtoReflect.Descriptor instead.
func (*UpdateApiProductAttributeOrganizationsApiproductsAttributeRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{323}
}

func (x *UpdateApiProductAttributeOrganizationsApiproductsAttributeRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UpdateApiProductAttributeOrganizationsApiproductsAttributeRequest) GetOrganizationsApiproductsAttribute() *GoogleCloudApigeeV1Attribute {
	if x != nil {
		return x.OrganizationsApiproductsAttribute
	}
	return nil
}

type CreateOrganizationsApiproductsRateplanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent                           *string                      `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
	OrganizationsApiproductsRateplan *GoogleCloudApigeeV1RatePlan `protobuf:"bytes,2,opt,name=organizations_apiproducts_rateplan,json=organizationsApiproductsRateplan" json:"organizations_apiproducts_rateplan,omitempty"`
}

func (x *CreateOrganizationsApiproductsRateplanRequest) Reset() {
	*x = CreateOrganizationsApiproductsRateplanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[324]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrganizationsApiproductsRateplanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrganizationsApiproductsRateplanRequest) ProtoMessage() {}

func (x *CreateOrganizationsApiproductsRateplanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[324]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrganizationsApiproductsRateplanRequest.ProtoReflect.Descriptor instead.
func (*CreateOrganizationsApiproductsRateplanRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{324}
}

func (x *CreateOrganizationsApiproductsRateplanRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

func (x *CreateOrganizationsApiproductsRateplanRequest) GetOrganizationsApiproductsRateplan() *GoogleCloudApigeeV1RatePlan {
	if x != nil {
		return x.OrganizationsApiproductsRateplan
	}
	return nil
}

type DeleteOrganizationsApiproductsRateplanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *DeleteOrganizationsApiproductsRateplanRequest) Reset() {
	*x = DeleteOrganizationsApiproductsRateplanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[325]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrganizationsApiproductsRateplanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrganizationsApiproductsRateplanRequest) ProtoMessage() {}

func (x *DeleteOrganizationsApiproductsRateplanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[325]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrganizationsApiproductsRateplanRequest.ProtoReflect.Descriptor instead.
func (*DeleteOrganizationsApiproductsRateplanRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{325}
}

func (x *DeleteOrganizationsApiproductsRateplanRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GetOrganizationsApiproductsRateplanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *GetOrganizationsApiproductsRateplanRequest) Reset() {
	*x = GetOrganizationsApiproductsRateplanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[326]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrganizationsApiproductsRateplanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrganizationsApiproductsRateplanRequest) ProtoMessage() {}

func (x *GetOrganizationsApiproductsRateplanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[326]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrganizationsApiproductsRateplanRequest.ProtoReflect.Descriptor instead.
func (*GetOrganizationsApiproductsRateplanRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{326}
}

func (x *GetOrganizationsApiproductsRateplanRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type ListOrganizationsApiproductsRateplansRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count    *int32  `protobuf:"varint,1,opt,name=count" json:"count,omitempty"`
	Expand   *bool   `protobuf:"varint,2,opt,name=expand" json:"expand,omitempty"`
	OrderBy  *string `protobuf:"bytes,3,opt,name=order_by,json=orderBy" json:"order_by,omitempty"`
	Parent   *string `protobuf:"bytes,4,opt,name=parent" json:"parent,omitempty"`
	StartKey *string `protobuf:"bytes,5,opt,name=start_key,json=startKey" json:"start_key,omitempty"`
	State    *string `protobuf:"bytes,6,opt,name=state" json:"state,omitempty"`
}

func (x *ListOrganizationsApiproductsRateplansRequest) Reset() {
	*x = ListOrganizationsApiproductsRateplansRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[327]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrganizationsApiproductsRateplansRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrganizationsApiproductsRateplansRequest) ProtoMessage() {}

func (x *ListOrganizationsApiproductsRateplansRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[327]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrganizationsApiproductsRateplansRequest.ProtoReflect.Descriptor instead.
func (*ListOrganizationsApiproductsRateplansRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{327}
}

func (x *ListOrganizationsApiproductsRateplansRequest) GetCount() int32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

func (x *ListOrganizationsApiproductsRateplansRequest) GetExpand() bool {
	if x != nil && x.Expand != nil {
		return *x.Expand
	}
	return false
}

func (x *ListOrganizationsApiproductsRateplansRequest) GetOrderBy() string {
	if x != nil && x.OrderBy != nil {
		return *x.OrderBy
	}
	return ""
}

func (x *ListOrganizationsApiproductsRateplansRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

func (x *ListOrganizationsApiproductsRateplansRequest) GetStartKey() string {
	if x != nil && x.StartKey != nil {
		return *x.StartKey
	}
	return ""
}

func (x *ListOrganizationsApiproductsRateplansRequest) GetState() string {
	if x != nil && x.State != nil {
		return *x.State
	}
	return ""
}

type UpdateOrganizationsApiproductsRateplanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                             *string                      `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	OrganizationsApiproductsRateplan *GoogleCloudApigeeV1RatePlan `protobuf:"bytes,2,opt,name=organizations_apiproducts_rateplan,json=organizationsApiproductsRateplan" json:"organizations_apiproducts_rateplan,omitempty"`
}

func (x *UpdateOrganizationsApiproductsRateplanRequest) Reset() {
	*x = UpdateOrganizationsApiproductsRateplanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[328]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrganizationsApiproductsRateplanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrganizationsApiproductsRateplanRequest) ProtoMessage() {}

func (x *UpdateOrganizationsApiproductsRateplanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[328]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrganizationsApiproductsRateplanRequest.ProtoReflect.Descriptor instead.
func (*UpdateOrganizationsApiproductsRateplanRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{328}
}

func (x *UpdateOrganizationsApiproductsRateplanRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UpdateOrganizationsApiproductsRateplanRequest) GetOrganizationsApiproductsRateplan() *GoogleCloudApigeeV1RatePlan {
	if x != nil {
		return x.OrganizationsApiproductsRateplan
	}
	return nil
}

type CreateOrganizationsApiRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action           *string            `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	Name             *string            `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Parent           *string            `protobuf:"bytes,3,opt,name=parent" json:"parent,omitempty"`
	Validate         *bool              `protobuf:"varint,4,opt,name=validate" json:"validate,omitempty"`
	OrganizationsApi *GoogleApiHttpBody `protobuf:"bytes,5,opt,name=organizations_api,json=organizationsApi" json:"organizations_api,omitempty"`
}

func (x *CreateOrganizationsApiRequest) Reset() {
	*x = CreateOrganizationsApiRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[329]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrganizationsApiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrganizationsApiRequest) ProtoMessage() {}

func (x *CreateOrganizationsApiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[329]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrganizationsApiRequest.ProtoReflect.Descriptor instead.
func (*CreateOrganizationsApiRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{329}
}

func (x *CreateOrganizationsApiRequest) GetAction() string {
	if x != nil && x.Action != nil {
		return *x.Action
	}
	return ""
}

func (x *CreateOrganizationsApiRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CreateOrganizationsApiRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

func (x *CreateOrganizationsApiRequest) GetValidate() bool {
	if x != nil && x.Validate != nil {
		return *x.Validate
	}
	return false
}

func (x *CreateOrganizationsApiRequest) GetOrganizationsApi() *GoogleApiHttpBody {
	if x != nil {
		return x.OrganizationsApi
	}
	return nil
}

type DeleteOrganizationsApiRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *DeleteOrganizationsApiRequest) Reset() {
	*x = DeleteOrganizationsApiRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[330]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrganizationsApiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrganizationsApiRequest) ProtoMessage() {}

func (x *DeleteOrganizationsApiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[330]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrganizationsApiRequest.ProtoReflect.Descriptor instead.
func (*DeleteOrganizationsApiRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{330}
}

func (x *DeleteOrganizationsApiRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GetOrganizationsApiRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *GetOrganizationsApiRequest) Reset() {
	*x = GetOrganizationsApiRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[331]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrganizationsApiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrganizationsApiRequest) ProtoMessage() {}

func (x *GetOrganizationsApiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[331]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrganizationsApiRequest.ProtoReflect.Descriptor instead.
func (*GetOrganizationsApiRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{331}
}

func (x *GetOrganizationsApiRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type ListOrganizationsApisRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IncludeMetaData  *bool   `protobuf:"varint,1,opt,name=include_meta_data,json=includeMetaData" json:"include_meta_data,omitempty"`
	IncludeRevisions *bool   `protobuf:"varint,2,opt,name=include_revisions,json=includeRevisions" json:"include_revisions,omitempty"`
	Parent           *string `protobuf:"bytes,3,opt,name=parent" json:"parent,omitempty"`
}

func (x *ListOrganizationsApisRequest) Reset() {
	*x = ListOrganizationsApisRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[332]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrganizationsApisRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrganizationsApisRequest) ProtoMessage() {}

func (x *ListOrganizationsApisRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[332]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrganizationsApisRequest.ProtoReflect.Descriptor instead.
func (*ListOrganizationsApisRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{332}
}

func (x *ListOrganizationsApisRequest) GetIncludeMetaData() bool {
	if x != nil && x.IncludeMetaData != nil {
		return *x.IncludeMetaData
	}
	return false
}

func (x *ListOrganizationsApisRequest) GetIncludeRevisions() bool {
	if x != nil && x.IncludeRevisions != nil {
		return *x.IncludeRevisions
	}
	return false
}

func (x *ListOrganizationsApisRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

type PatchOrganizationsApiRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name             *string                      `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	UpdateMask       *string                      `protobuf:"bytes,2,opt,name=update_mask,json=updateMask" json:"update_mask,omitempty"`
	OrganizationsApi *GoogleCloudApigeeV1ApiProxy `protobuf:"bytes,3,opt,name=organizations_api,json=organizationsApi" json:"organizations_api,omitempty"`
}

func (x *PatchOrganizationsApiRequest) Reset() {
	*x = PatchOrganizationsApiRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[333]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PatchOrganizationsApiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatchOrganizationsApiRequest) ProtoMessage() {}

func (x *PatchOrganizationsApiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[333]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatchOrganizationsApiRequest.ProtoReflect.Descriptor instead.
func (*PatchOrganizationsApiRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{333}
}

func (x *PatchOrganizationsApiRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *PatchOrganizationsApiRequest) GetUpdateMask() string {
	if x != nil && x.UpdateMask != nil {
		return *x.UpdateMask
	}
	return ""
}

func (x *PatchOrganizationsApiRequest) GetOrganizationsApi() *GoogleCloudApigeeV1ApiProxy {
	if x != nil {
		return x.OrganizationsApi
	}
	return nil
}

type ListOrganizationsApisDeploymentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent *string `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
}

func (x *ListOrganizationsApisDeploymentsRequest) Reset() {
	*x = ListOrganizationsApisDeploymentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[334]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrganizationsApisDeploymentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrganizationsApisDeploymentsRequest) ProtoMessage() {}

func (x *ListOrganizationsApisDeploymentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[334]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrganizationsApisDeploymentsRequest.ProtoReflect.Descriptor instead.
func (*ListOrganizationsApisDeploymentsRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{334}
}

func (x *ListOrganizationsApisDeploymentsRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

type CreateOrganizationsApisKeyvaluemapRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent                       *string                         `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
	OrganizationsApisKeyvaluemap *GoogleCloudApigeeV1KeyValueMap `protobuf:"bytes,2,opt,name=organizations_apis_keyvaluemap,json=organizationsApisKeyvaluemap" json:"organizations_apis_keyvaluemap,omitempty"`
}

func (x *CreateOrganizationsApisKeyvaluemapRequest) Reset() {
	*x = CreateOrganizationsApisKeyvaluemapRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[335]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrganizationsApisKeyvaluemapRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrganizationsApisKeyvaluemapRequest) ProtoMessage() {}

func (x *CreateOrganizationsApisKeyvaluemapRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[335]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrganizationsApisKeyvaluemapRequest.ProtoReflect.Descriptor instead.
func (*CreateOrganizationsApisKeyvaluemapRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{335}
}

func (x *CreateOrganizationsApisKeyvaluemapRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

func (x *CreateOrganizationsApisKeyvaluemapRequest) GetOrganizationsApisKeyvaluemap() *GoogleCloudApigeeV1KeyValueMap {
	if x != nil {
		return x.OrganizationsApisKeyvaluemap
	}
	return nil
}

type DeleteOrganizationsApisKeyvaluemapRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *DeleteOrganizationsApisKeyvaluemapRequest) Reset() {
	*x = DeleteOrganizationsApisKeyvaluemapRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[336]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrganizationsApisKeyvaluemapRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrganizationsApisKeyvaluemapRequest) ProtoMessage() {}

func (x *DeleteOrganizationsApisKeyvaluemapRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[336]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrganizationsApisKeyvaluemapRequest.ProtoReflect.Descriptor instead.
func (*DeleteOrganizationsApisKeyvaluemapRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{336}
}

func (x *DeleteOrganizationsApisKeyvaluemapRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type CreateOrganizationsApisKeyvaluemapsEntryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent                             *string                           `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
	OrganizationsApisKeyvaluemapsEntry *GoogleCloudApigeeV1KeyValueEntry `protobuf:"bytes,2,opt,name=organizations_apis_keyvaluemaps_entry,json=organizationsApisKeyvaluemapsEntry" json:"organizations_apis_keyvaluemaps_entry,omitempty"`
}

func (x *CreateOrganizationsApisKeyvaluemapsEntryRequest) Reset() {
	*x = CreateOrganizationsApisKeyvaluemapsEntryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[337]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrganizationsApisKeyvaluemapsEntryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrganizationsApisKeyvaluemapsEntryRequest) ProtoMessage() {}

func (x *CreateOrganizationsApisKeyvaluemapsEntryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[337]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrganizationsApisKeyvaluemapsEntryRequest.ProtoReflect.Descriptor instead.
func (*CreateOrganizationsApisKeyvaluemapsEntryRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{337}
}

func (x *CreateOrganizationsApisKeyvaluemapsEntryRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

func (x *CreateOrganizationsApisKeyvaluemapsEntryRequest) GetOrganizationsApisKeyvaluemapsEntry() *GoogleCloudApigeeV1KeyValueEntry {
	if x != nil {
		return x.OrganizationsApisKeyvaluemapsEntry
	}
	return nil
}

type DeleteOrganizationsApisKeyvaluemapsEntryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *DeleteOrganizationsApisKeyvaluemapsEntryRequest) Reset() {
	*x = DeleteOrganizationsApisKeyvaluemapsEntryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[338]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrganizationsApisKeyvaluemapsEntryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrganizationsApisKeyvaluemapsEntryRequest) ProtoMessage() {}

func (x *DeleteOrganizationsApisKeyvaluemapsEntryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[338]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrganizationsApisKeyvaluemapsEntryRequest.ProtoReflect.Descriptor instead.
func (*DeleteOrganizationsApisKeyvaluemapsEntryRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{338}
}

func (x *DeleteOrganizationsApisKeyvaluemapsEntryRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GetOrganizationsApisKeyvaluemapsEntryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *GetOrganizationsApisKeyvaluemapsEntryRequest) Reset() {
	*x = GetOrganizationsApisKeyvaluemapsEntryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[339]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrganizationsApisKeyvaluemapsEntryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrganizationsApisKeyvaluemapsEntryRequest) ProtoMessage() {}

func (x *GetOrganizationsApisKeyvaluemapsEntryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[339]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrganizationsApisKeyvaluemapsEntryRequest.ProtoReflect.Descriptor instead.
func (*GetOrganizationsApisKeyvaluemapsEntryRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{339}
}

func (x *GetOrganizationsApisKeyvaluemapsEntryRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type ListOrganizationsApisKeyvaluemapsEntriesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize  *int32  `protobuf:"varint,1,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	PageToken *string `protobuf:"bytes,2,opt,name=page_token,json=pageToken" json:"page_token,omitempty"`
	Parent    *string `protobuf:"bytes,3,opt,name=parent" json:"parent,omitempty"`
}

func (x *ListOrganizationsApisKeyvaluemapsEntriesRequest) Reset() {
	*x = ListOrganizationsApisKeyvaluemapsEntriesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[340]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrganizationsApisKeyvaluemapsEntriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrganizationsApisKeyvaluemapsEntriesRequest) ProtoMessage() {}

func (x *ListOrganizationsApisKeyvaluemapsEntriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[340]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrganizationsApisKeyvaluemapsEntriesRequest.ProtoReflect.Descriptor instead.
func (*ListOrganizationsApisKeyvaluemapsEntriesRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{340}
}

func (x *ListOrganizationsApisKeyvaluemapsEntriesRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *ListOrganizationsApisKeyvaluemapsEntriesRequest) GetPageToken() string {
	if x != nil && x.PageToken != nil {
		return *x.PageToken
	}
	return ""
}

func (x *ListOrganizationsApisKeyvaluemapsEntriesRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

type UpdateOrganizationsApisKeyvaluemapsEntryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                               *string                           `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	OrganizationsApisKeyvaluemapsEntry *GoogleCloudApigeeV1KeyValueEntry `protobuf:"bytes,2,opt,name=organizations_apis_keyvaluemaps_entry,json=organizationsApisKeyvaluemapsEntry" json:"organizations_apis_keyvaluemaps_entry,omitempty"`
}

func (x *UpdateOrganizationsApisKeyvaluemapsEntryRequest) Reset() {
	*x = UpdateOrganizationsApisKeyvaluemapsEntryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[341]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrganizationsApisKeyvaluemapsEntryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrganizationsApisKeyvaluemapsEntryRequest) ProtoMessage() {}

func (x *UpdateOrganizationsApisKeyvaluemapsEntryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[341]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrganizationsApisKeyvaluemapsEntryRequest.ProtoReflect.Descriptor instead.
func (*UpdateOrganizationsApisKeyvaluemapsEntryRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{341}
}

func (x *UpdateOrganizationsApisKeyvaluemapsEntryRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UpdateOrganizationsApisKeyvaluemapsEntryRequest) GetOrganizationsApisKeyvaluemapsEntry() *GoogleCloudApigeeV1KeyValueEntry {
	if x != nil {
		return x.OrganizationsApisKeyvaluemapsEntry
	}
	return nil
}

type DeleteOrganizationsApisRevisionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *DeleteOrganizationsApisRevisionRequest) Reset() {
	*x = DeleteOrganizationsApisRevisionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[342]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrganizationsApisRevisionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrganizationsApisRevisionRequest) ProtoMessage() {}

func (x *DeleteOrganizationsApisRevisionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[342]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrganizationsApisRevisionRequest.ProtoReflect.Descriptor instead.
func (*DeleteOrganizationsApisRevisionRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{342}
}

func (x *DeleteOrganizationsApisRevisionRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GetOrganizationsApisRevisionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Format *string `protobuf:"bytes,1,opt,name=format" json:"format,omitempty"`
	Name   *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (x *GetOrganizationsApisRevisionRequest) Reset() {
	*x = GetOrganizationsApisRevisionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[343]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrganizationsApisRevisionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrganizationsApisRevisionRequest) ProtoMessage() {}

func (x *GetOrganizationsApisRevisionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[343]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrganizationsApisRevisionRequest.ProtoReflect.Descriptor instead.
func (*GetOrganizationsApisRevisionRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{343}
}

func (x *GetOrganizationsApisRevisionRequest) GetFormat() string {
	if x != nil && x.Format != nil {
		return *x.Format
	}
	return ""
}

func (x *GetOrganizationsApisRevisionRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type UpdateApiProxyRevisionOrganizationsApisRevisionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                      *string            `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Validate                  *bool              `protobuf:"varint,2,opt,name=validate" json:"validate,omitempty"`
	OrganizationsApisRevision *GoogleApiHttpBody `protobuf:"bytes,3,opt,name=organizations_apis_revision,json=organizationsApisRevision" json:"organizations_apis_revision,omitempty"`
}

func (x *UpdateApiProxyRevisionOrganizationsApisRevisionRequest) Reset() {
	*x = UpdateApiProxyRevisionOrganizationsApisRevisionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[344]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateApiProxyRevisionOrganizationsApisRevisionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateApiProxyRevisionOrganizationsApisRevisionRequest) ProtoMessage() {}

func (x *UpdateApiProxyRevisionOrganizationsApisRevisionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[344]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateApiProxyRevisionOrganizationsApisRevisionRequest.ProtoReflect.Descriptor instead.
func (*UpdateApiProxyRevisionOrganizationsApisRevisionRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{344}
}

func (x *UpdateApiProxyRevisionOrganizationsApisRevisionRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UpdateApiProxyRevisionOrganizationsApisRevisionRequest) GetValidate() bool {
	if x != nil && x.Validate != nil {
		return *x.Validate
	}
	return false
}

func (x *UpdateApiProxyRevisionOrganizationsApisRevisionRequest) GetOrganizationsApisRevision() *GoogleApiHttpBody {
	if x != nil {
		return x.OrganizationsApisRevision
	}
	return nil
}

type ListOrganizationsApisRevisionsDeploymentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent *string `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
}

func (x *ListOrganizationsApisRevisionsDeploymentsRequest) Reset() {
	*x = ListOrganizationsApisRevisionsDeploymentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[345]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrganizationsApisRevisionsDeploymentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrganizationsApisRevisionsDeploymentsRequest) ProtoMessage() {}

func (x *ListOrganizationsApisRevisionsDeploymentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[345]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrganizationsApisRevisionsDeploymentsRequest.ProtoReflect.Descriptor instead.
func (*ListOrganizationsApisRevisionsDeploymentsRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{345}
}

func (x *ListOrganizationsApisRevisionsDeploymentsRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

type CreateOrganizationsAppgroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent                *string                      `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
	OrganizationsAppgroup *GoogleCloudApigeeV1AppGroup `protobuf:"bytes,2,opt,name=organizations_appgroup,json=organizationsAppgroup" json:"organizations_appgroup,omitempty"`
}

func (x *CreateOrganizationsAppgroupRequest) Reset() {
	*x = CreateOrganizationsAppgroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[346]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrganizationsAppgroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrganizationsAppgroupRequest) ProtoMessage() {}

func (x *CreateOrganizationsAppgroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[346]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrganizationsAppgroupRequest.ProtoReflect.Descriptor instead.
func (*CreateOrganizationsAppgroupRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{346}
}

func (x *CreateOrganizationsAppgroupRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

func (x *CreateOrganizationsAppgroupRequest) GetOrganizationsAppgroup() *GoogleCloudApigeeV1AppGroup {
	if x != nil {
		return x.OrganizationsAppgroup
	}
	return nil
}

type DeleteOrganizationsAppgroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *DeleteOrganizationsAppgroupRequest) Reset() {
	*x = DeleteOrganizationsAppgroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[347]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrganizationsAppgroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrganizationsAppgroupRequest) ProtoMessage() {}

func (x *DeleteOrganizationsAppgroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[347]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrganizationsAppgroupRequest.ProtoReflect.Descriptor instead.
func (*DeleteOrganizationsAppgroupRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{347}
}

func (x *DeleteOrganizationsAppgroupRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GetOrganizationsAppgroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *GetOrganizationsAppgroupRequest) Reset() {
	*x = GetOrganizationsAppgroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[348]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrganizationsAppgroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrganizationsAppgroupRequest) ProtoMessage() {}

func (x *GetOrganizationsAppgroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[348]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrganizationsAppgroupRequest.ProtoReflect.Descriptor instead.
func (*GetOrganizationsAppgroupRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{348}
}

func (x *GetOrganizationsAppgroupRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type ListOrganizationsAppgroupsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filter    *string `protobuf:"bytes,1,opt,name=filter" json:"filter,omitempty"`
	PageSize  *int32  `protobuf:"varint,2,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	PageToken *string `protobuf:"bytes,3,opt,name=page_token,json=pageToken" json:"page_token,omitempty"`
	Parent    *string `protobuf:"bytes,4,opt,name=parent" json:"parent,omitempty"`
}

func (x *ListOrganizationsAppgroupsRequest) Reset() {
	*x = ListOrganizationsAppgroupsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[349]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrganizationsAppgroupsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrganizationsAppgroupsRequest) ProtoMessage() {}

func (x *ListOrganizationsAppgroupsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[349]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrganizationsAppgroupsRequest.ProtoReflect.Descriptor instead.
func (*ListOrganizationsAppgroupsRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{349}
}

func (x *ListOrganizationsAppgroupsRequest) GetFilter() string {
	if x != nil && x.Filter != nil {
		return *x.Filter
	}
	return ""
}

func (x *ListOrganizationsAppgroupsRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *ListOrganizationsAppgroupsRequest) GetPageToken() string {
	if x != nil && x.PageToken != nil {
		return *x.PageToken
	}
	return ""
}

func (x *ListOrganizationsAppgroupsRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

type UpdateOrganizationsAppgroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action                *string                      `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	Name                  *string                      `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	OrganizationsAppgroup *GoogleCloudApigeeV1AppGroup `protobuf:"bytes,3,opt,name=organizations_appgroup,json=organizationsAppgroup" json:"organizations_appgroup,omitempty"`
}

func (x *UpdateOrganizationsAppgroupRequest) Reset() {
	*x = UpdateOrganizationsAppgroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[350]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrganizationsAppgroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrganizationsAppgroupRequest) ProtoMessage() {}

func (x *UpdateOrganizationsAppgroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[350]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrganizationsAppgroupRequest.ProtoReflect.Descriptor instead.
func (*UpdateOrganizationsAppgroupRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{350}
}

func (x *UpdateOrganizationsAppgroupRequest) GetAction() string {
	if x != nil && x.Action != nil {
		return *x.Action
	}
	return ""
}

func (x *UpdateOrganizationsAppgroupRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UpdateOrganizationsAppgroupRequest) GetOrganizationsAppgroup() *GoogleCloudApigeeV1AppGroup {
	if x != nil {
		return x.OrganizationsAppgroup
	}
	return nil
}

type CreateOrganizationsAppgroupsAppRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent                    *string                         `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
	OrganizationsAppgroupsApp *GoogleCloudApigeeV1AppGroupApp `protobuf:"bytes,2,opt,name=organizations_appgroups_app,json=organizationsAppgroupsApp" json:"organizations_appgroups_app,omitempty"`
}

func (x *CreateOrganizationsAppgroupsAppRequest) Reset() {
	*x = CreateOrganizationsAppgroupsAppRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[351]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrganizationsAppgroupsAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrganizationsAppgroupsAppRequest) ProtoMessage() {}

func (x *CreateOrganizationsAppgroupsAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[351]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrganizationsAppgroupsAppRequest.ProtoReflect.Descriptor instead.
func (*CreateOrganizationsAppgroupsAppRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{351}
}

func (x *CreateOrganizationsAppgroupsAppRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

func (x *CreateOrganizationsAppgroupsAppRequest) GetOrganizationsAppgroupsApp() *GoogleCloudApigeeV1AppGroupApp {
	if x != nil {
		return x.OrganizationsAppgroupsApp
	}
	return nil
}

type DeleteOrganizationsAppgroupsAppRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *DeleteOrganizationsAppgroupsAppRequest) Reset() {
	*x = DeleteOrganizationsAppgroupsAppRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[352]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrganizationsAppgroupsAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrganizationsAppgroupsAppRequest) ProtoMessage() {}

func (x *DeleteOrganizationsAppgroupsAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[352]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrganizationsAppgroupsAppRequest.ProtoReflect.Descriptor instead.
func (*DeleteOrganizationsAppgroupsAppRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{352}
}

func (x *DeleteOrganizationsAppgroupsAppRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GetOrganizationsAppgroupsAppRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *GetOrganizationsAppgroupsAppRequest) Reset() {
	*x = GetOrganizationsAppgroupsAppRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[353]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrganizationsAppgroupsAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrganizationsAppgroupsAppRequest) ProtoMessage() {}

func (x *GetOrganizationsAppgroupsAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[353]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrganizationsAppgroupsAppRequest.ProtoReflect.Descriptor instead.
func (*GetOrganizationsAppgroupsAppRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{353}
}

func (x *GetOrganizationsAppgroupsAppRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type ListOrganizationsAppgroupsAppsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize  *int32  `protobuf:"varint,1,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	PageToken *string `protobuf:"bytes,2,opt,name=page_token,json=pageToken" json:"page_token,omitempty"`
	Parent    *string `protobuf:"bytes,3,opt,name=parent" json:"parent,omitempty"`
}

func (x *ListOrganizationsAppgroupsAppsRequest) Reset() {
	*x = ListOrganizationsAppgroupsAppsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[354]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrganizationsAppgroupsAppsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrganizationsAppgroupsAppsRequest) ProtoMessage() {}

func (x *ListOrganizationsAppgroupsAppsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[354]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrganizationsAppgroupsAppsRequest.ProtoReflect.Descriptor instead.
func (*ListOrganizationsAppgroupsAppsRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{354}
}

func (x *ListOrganizationsAppgroupsAppsRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *ListOrganizationsAppgroupsAppsRequest) GetPageToken() string {
	if x != nil && x.PageToken != nil {
		return *x.PageToken
	}
	return ""
}

func (x *ListOrganizationsAppgroupsAppsRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

type UpdateOrganizationsAppgroupsAppRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action                    *string                         `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	Name                      *string                         `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	OrganizationsAppgroupsApp *GoogleCloudApigeeV1AppGroupApp `protobuf:"bytes,3,opt,name=organizations_appgroups_app,json=organizationsAppgroupsApp" json:"organizations_appgroups_app,omitempty"`
}

func (x *UpdateOrganizationsAppgroupsAppRequest) Reset() {
	*x = UpdateOrganizationsAppgroupsAppRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[355]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrganizationsAppgroupsAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrganizationsAppgroupsAppRequest) ProtoMessage() {}

func (x *UpdateOrganizationsAppgroupsAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[355]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrganizationsAppgroupsAppRequest.ProtoReflect.Descriptor instead.
func (*UpdateOrganizationsAppgroupsAppRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{355}
}

func (x *UpdateOrganizationsAppgroupsAppRequest) GetAction() string {
	if x != nil && x.Action != nil {
		return *x.Action
	}
	return ""
}

func (x *UpdateOrganizationsAppgroupsAppRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UpdateOrganizationsAppgroupsAppRequest) GetOrganizationsAppgroupsApp() *GoogleCloudApigeeV1AppGroupApp {
	if x != nil {
		return x.OrganizationsAppgroupsApp
	}
	return nil
}

type CreateOrganizationsAppgroupsAppsKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent                        *string                            `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
	OrganizationsAppgroupsAppsKey *GoogleCloudApigeeV1AppGroupAppKey `protobuf:"bytes,2,opt,name=organizations_appgroups_apps_key,json=organizationsAppgroupsAppsKey" json:"organizations_appgroups_apps_key,omitempty"`
}

func (x *CreateOrganizationsAppgroupsAppsKeyRequest) Reset() {
	*x = CreateOrganizationsAppgroupsAppsKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[356]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrganizationsAppgroupsAppsKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrganizationsAppgroupsAppsKeyRequest) ProtoMessage() {}

func (x *CreateOrganizationsAppgroupsAppsKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[356]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrganizationsAppgroupsAppsKeyRequest.ProtoReflect.Descriptor instead.
func (*CreateOrganizationsAppgroupsAppsKeyRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{356}
}

func (x *CreateOrganizationsAppgroupsAppsKeyRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

func (x *CreateOrganizationsAppgroupsAppsKeyRequest) GetOrganizationsAppgroupsAppsKey() *GoogleCloudApigeeV1AppGroupAppKey {
	if x != nil {
		return x.OrganizationsAppgroupsAppsKey
	}
	return nil
}

type DeleteOrganizationsAppgroupsAppsKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *DeleteOrganizationsAppgroupsAppsKeyRequest) Reset() {
	*x = DeleteOrganizationsAppgroupsAppsKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[357]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrganizationsAppgroupsAppsKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrganizationsAppgroupsAppsKeyRequest) ProtoMessage() {}

func (x *DeleteOrganizationsAppgroupsAppsKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[357]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrganizationsAppgroupsAppsKeyRequest.ProtoReflect.Descriptor instead.
func (*DeleteOrganizationsAppgroupsAppsKeyRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{357}
}

func (x *DeleteOrganizationsAppgroupsAppsKeyRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GetOrganizationsAppgroupsAppsKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *GetOrganizationsAppgroupsAppsKeyRequest) Reset() {
	*x = GetOrganizationsAppgroupsAppsKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[358]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrganizationsAppgroupsAppsKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrganizationsAppgroupsAppsKeyRequest) ProtoMessage() {}

func (x *GetOrganizationsAppgroupsAppsKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[358]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrganizationsAppgroupsAppsKeyRequest.ProtoReflect.Descriptor instead.
func (*GetOrganizationsAppgroupsAppsKeyRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{358}
}

func (x *GetOrganizationsAppgroupsAppsKeyRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type UpdateAppGroupAppKeyOrganizationsAppgroupsAppsKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                          *string                                         `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	OrganizationsAppgroupsAppsKey *GoogleCloudApigeeV1UpdateAppGroupAppKeyRequest `protobuf:"bytes,2,opt,name=organizations_appgroups_apps_key,json=organizationsAppgroupsAppsKey" json:"organizations_appgroups_apps_key,omitempty"`
}

func (x *UpdateAppGroupAppKeyOrganizationsAppgroupsAppsKeyRequest) Reset() {
	*x = UpdateAppGroupAppKeyOrganizationsAppgroupsAppsKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[359]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAppGroupAppKeyOrganizationsAppgroupsAppsKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAppGroupAppKeyOrganizationsAppgroupsAppsKeyRequest) ProtoMessage() {}

func (x *UpdateAppGroupAppKeyOrganizationsAppgroupsAppsKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[359]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAppGroupAppKeyOrganizationsAppgroupsAppsKeyRequest.ProtoReflect.Descriptor instead.
func (*UpdateAppGroupAppKeyOrganizationsAppgroupsAppsKeyRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{359}
}

func (x *UpdateAppGroupAppKeyOrganizationsAppgroupsAppsKeyRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UpdateAppGroupAppKeyOrganizationsAppgroupsAppsKeyRequest) GetOrganizationsAppgroupsAppsKey() *GoogleCloudApigeeV1UpdateAppGroupAppKeyRequest {
	if x != nil {
		return x.OrganizationsAppgroupsAppsKey
	}
	return nil
}

type DeleteOrganizationsAppgroupsAppsKeysApiproductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *DeleteOrganizationsAppgroupsAppsKeysApiproductRequest) Reset() {
	*x = DeleteOrganizationsAppgroupsAppsKeysApiproductRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[360]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrganizationsAppgroupsAppsKeysApiproductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrganizationsAppgroupsAppsKeysApiproductRequest) ProtoMessage() {}

func (x *DeleteOrganizationsAppgroupsAppsKeysApiproductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[360]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrganizationsAppgroupsAppsKeysApiproductRequest.ProtoReflect.Descriptor instead.
func (*DeleteOrganizationsAppgroupsAppsKeysApiproductRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{360}
}

func (x *DeleteOrganizationsAppgroupsAppsKeysApiproductRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type UpdateAppGroupAppKeyApiProductOrganizationsAppgroupsAppsKeysApiproductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action *string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	Name   *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (x *UpdateAppGroupAppKeyApiProductOrganizationsAppgroupsAppsKeysApiproductRequest) Reset() {
	*x = UpdateAppGroupAppKeyApiProductOrganizationsAppgroupsAppsKeysApiproductRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[361]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAppGroupAppKeyApiProductOrganizationsAppgroupsAppsKeysApiproductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAppGroupAppKeyApiProductOrganizationsAppgroupsAppsKeysApiproductRequest) ProtoMessage() {
}

func (x *UpdateAppGroupAppKeyApiProductOrganizationsAppgroupsAppsKeysApiproductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[361]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAppGroupAppKeyApiProductOrganizationsAppgroupsAppsKeysApiproductRequest.ProtoReflect.Descriptor instead.
func (*UpdateAppGroupAppKeyApiProductOrganizationsAppgroupsAppsKeysApiproductRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{361}
}

func (x *UpdateAppGroupAppKeyApiProductOrganizationsAppgroupsAppsKeysApiproductRequest) GetAction() string {
	if x != nil && x.Action != nil {
		return *x.Action
	}
	return ""
}

func (x *UpdateAppGroupAppKeyApiProductOrganizationsAppgroupsAppsKeysApiproductRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GetOrganizationsAppRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *GetOrganizationsAppRequest) Reset() {
	*x = GetOrganizationsAppRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[362]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrganizationsAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrganizationsAppRequest) ProtoMessage() {}

func (x *GetOrganizationsAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[362]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrganizationsAppRequest.ProtoReflect.Descriptor instead.
func (*GetOrganizationsAppRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{362}
}

func (x *GetOrganizationsAppRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type ListOrganizationsAppsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiProduct  *string `protobuf:"bytes,1,opt,name=api_product,json=apiProduct" json:"api_product,omitempty"`
	Apptype     *string `protobuf:"bytes,2,opt,name=apptype" json:"apptype,omitempty"`
	Expand      *bool   `protobuf:"varint,3,opt,name=expand" json:"expand,omitempty"`
	Filter      *string `protobuf:"bytes,4,opt,name=filter" json:"filter,omitempty"`
	Ids         *string `protobuf:"bytes,5,opt,name=ids" json:"ids,omitempty"`
	IncludeCred *bool   `protobuf:"varint,6,opt,name=include_cred,json=includeCred" json:"include_cred,omitempty"`
	KeyStatus   *string `protobuf:"bytes,7,opt,name=key_status,json=keyStatus" json:"key_status,omitempty"`
	PageSize    *int32  `protobuf:"varint,8,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	PageToken   *string `protobuf:"bytes,9,opt,name=page_token,json=pageToken" json:"page_token,omitempty"`
	Parent      *string `protobuf:"bytes,10,opt,name=parent" json:"parent,omitempty"`
	Rows        *string `protobuf:"bytes,11,opt,name=rows" json:"rows,omitempty"`
	StartKey    *string `protobuf:"bytes,12,opt,name=start_key,json=startKey" json:"start_key,omitempty"`
	Status      *string `protobuf:"bytes,13,opt,name=status" json:"status,omitempty"`
}

func (x *ListOrganizationsAppsRequest) Reset() {
	*x = ListOrganizationsAppsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[363]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrganizationsAppsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrganizationsAppsRequest) ProtoMessage() {}

func (x *ListOrganizationsAppsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[363]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrganizationsAppsRequest.ProtoReflect.Descriptor instead.
func (*ListOrganizationsAppsRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{363}
}

func (x *ListOrganizationsAppsRequest) GetApiProduct() string {
	if x != nil && x.ApiProduct != nil {
		return *x.ApiProduct
	}
	return ""
}

func (x *ListOrganizationsAppsRequest) GetApptype() string {
	if x != nil && x.Apptype != nil {
		return *x.Apptype
	}
	return ""
}

func (x *ListOrganizationsAppsRequest) GetExpand() bool {
	if x != nil && x.Expand != nil {
		return *x.Expand
	}
	return false
}

func (x *ListOrganizationsAppsRequest) GetFilter() string {
	if x != nil && x.Filter != nil {
		return *x.Filter
	}
	return ""
}

func (x *ListOrganizationsAppsRequest) GetIds() string {
	if x != nil && x.Ids != nil {
		return *x.Ids
	}
	return ""
}

func (x *ListOrganizationsAppsRequest) GetIncludeCred() bool {
	if x != nil && x.IncludeCred != nil {
		return *x.IncludeCred
	}
	return false
}

func (x *ListOrganizationsAppsRequest) GetKeyStatus() string {
	if x != nil && x.KeyStatus != nil {
		return *x.KeyStatus
	}
	return ""
}

func (x *ListOrganizationsAppsRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *ListOrganizationsAppsRequest) GetPageToken() string {
	if x != nil && x.PageToken != nil {
		return *x.PageToken
	}
	return ""
}

func (x *ListOrganizationsAppsRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

func (x *ListOrganizationsAppsRequest) GetRows() string {
	if x != nil && x.Rows != nil {
		return *x.Rows
	}
	return ""
}

func (x *ListOrganizationsAppsRequest) GetStartKey() string {
	if x != nil && x.StartKey != nil {
		return *x.StartKey
	}
	return ""
}

func (x *ListOrganizationsAppsRequest) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

type CreateOrganizationsDatacollectorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataCollectorId            *string                           `protobuf:"bytes,1,opt,name=data_collector_id,json=dataCollectorId" json:"data_collector_id,omitempty"`
	Parent                     *string                           `protobuf:"bytes,2,opt,name=parent" json:"parent,omitempty"`
	OrganizationsDatacollector *GoogleCloudApigeeV1DataCollector `protobuf:"bytes,3,opt,name=organizations_datacollector,json=organizationsDatacollector" json:"organizations_datacollector,omitempty"`
}

func (x *CreateOrganizationsDatacollectorRequest) Reset() {
	*x = CreateOrganizationsDatacollectorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[364]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrganizationsDatacollectorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrganizationsDatacollectorRequest) ProtoMessage() {}

func (x *CreateOrganizationsDatacollectorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[364]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrganizationsDatacollectorRequest.ProtoReflect.Descriptor instead.
func (*CreateOrganizationsDatacollectorRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{364}
}

func (x *CreateOrganizationsDatacollectorRequest) GetDataCollectorId() string {
	if x != nil && x.DataCollectorId != nil {
		return *x.DataCollectorId
	}
	return ""
}

func (x *CreateOrganizationsDatacollectorRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

func (x *CreateOrganizationsDatacollectorRequest) GetOrganizationsDatacollector() *GoogleCloudApigeeV1DataCollector {
	if x != nil {
		return x.OrganizationsDatacollector
	}
	return nil
}

type DeleteOrganizationsDatacollectorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *DeleteOrganizationsDatacollectorRequest) Reset() {
	*x = DeleteOrganizationsDatacollectorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[365]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrganizationsDatacollectorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrganizationsDatacollectorRequest) ProtoMessage() {}

func (x *DeleteOrganizationsDatacollectorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[365]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrganizationsDatacollectorRequest.ProtoReflect.Descriptor instead.
func (*DeleteOrganizationsDatacollectorRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{365}
}

func (x *DeleteOrganizationsDatacollectorRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GetOrganizationsDatacollectorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *GetOrganizationsDatacollectorRequest) Reset() {
	*x = GetOrganizationsDatacollectorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[366]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrganizationsDatacollectorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrganizationsDatacollectorRequest) ProtoMessage() {}

func (x *GetOrganizationsDatacollectorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[366]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrganizationsDatacollectorRequest.ProtoReflect.Descriptor instead.
func (*GetOrganizationsDatacollectorRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{366}
}

func (x *GetOrganizationsDatacollectorRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type ListOrganizationsDatacollectorsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize  *int32  `protobuf:"varint,1,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	PageToken *string `protobuf:"bytes,2,opt,name=page_token,json=pageToken" json:"page_token,omitempty"`
	Parent    *string `protobuf:"bytes,3,opt,name=parent" json:"parent,omitempty"`
}

func (x *ListOrganizationsDatacollectorsRequest) Reset() {
	*x = ListOrganizationsDatacollectorsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[367]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrganizationsDatacollectorsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrganizationsDatacollectorsRequest) ProtoMessage() {}

func (x *ListOrganizationsDatacollectorsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[367]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrganizationsDatacollectorsRequest.ProtoReflect.Descriptor instead.
func (*ListOrganizationsDatacollectorsRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{367}
}

func (x *ListOrganizationsDatacollectorsRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *ListOrganizationsDatacollectorsRequest) GetPageToken() string {
	if x != nil && x.PageToken != nil {
		return *x.PageToken
	}
	return ""
}

func (x *ListOrganizationsDatacollectorsRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

type PatchOrganizationsDatacollectorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                       *string                           `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	UpdateMask                 *string                           `protobuf:"bytes,2,opt,name=update_mask,json=updateMask" json:"update_mask,omitempty"`
	OrganizationsDatacollector *GoogleCloudApigeeV1DataCollector `protobuf:"bytes,3,opt,name=organizations_datacollector,json=organizationsDatacollector" json:"organizations_datacollector,omitempty"`
}

func (x *PatchOrganizationsDatacollectorRequest) Reset() {
	*x = PatchOrganizationsDatacollectorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[368]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PatchOrganizationsDatacollectorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatchOrganizationsDatacollectorRequest) ProtoMessage() {}

func (x *PatchOrganizationsDatacollectorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[368]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatchOrganizationsDatacollectorRequest.ProtoReflect.Descriptor instead.
func (*PatchOrganizationsDatacollectorRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{368}
}

func (x *PatchOrganizationsDatacollectorRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *PatchOrganizationsDatacollectorRequest) GetUpdateMask() string {
	if x != nil && x.UpdateMask != nil {
		return *x.UpdateMask
	}
	return ""
}

func (x *PatchOrganizationsDatacollectorRequest) GetOrganizationsDatacollector() *GoogleCloudApigeeV1DataCollector {
	if x != nil {
		return x.OrganizationsDatacollector
	}
	return nil
}

type ListOrganizationsDeploymentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent      *string `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
	SharedFlows *bool   `protobuf:"varint,2,opt,name=shared_flows,json=sharedFlows" json:"shared_flows,omitempty"`
}

func (x *ListOrganizationsDeploymentsRequest) Reset() {
	*x = ListOrganizationsDeploymentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[369]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrganizationsDeploymentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrganizationsDeploymentsRequest) ProtoMessage() {}

func (x *ListOrganizationsDeploymentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[369]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrganizationsDeploymentsRequest.ProtoReflect.Descriptor instead.
func (*ListOrganizationsDeploymentsRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{369}
}

func (x *ListOrganizationsDeploymentsRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

func (x *ListOrganizationsDeploymentsRequest) GetSharedFlows() bool {
	if x != nil && x.SharedFlows != nil {
		return *x.SharedFlows
	}
	return false
}

type AttributesOrganizationsDeveloperRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent                 *string                        `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
	OrganizationsDeveloper *GoogleCloudApigeeV1Attributes `protobuf:"bytes,2,opt,name=organizations_developer,json=organizationsDeveloper" json:"organizations_developer,omitempty"`
}

func (x *AttributesOrganizationsDeveloperRequest) Reset() {
	*x = AttributesOrganizationsDeveloperRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[370]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttributesOrganizationsDeveloperRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttributesOrganizationsDeveloperRequest) ProtoMessage() {}

func (x *AttributesOrganizationsDeveloperRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[370]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttributesOrganizationsDeveloperRequest.ProtoReflect.Descriptor instead.
func (*AttributesOrganizationsDeveloperRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{370}
}

func (x *AttributesOrganizationsDeveloperRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

func (x *AttributesOrganizationsDeveloperRequest) GetOrganizationsDeveloper() *GoogleCloudApigeeV1Attributes {
	if x != nil {
		return x.OrganizationsDeveloper
	}
	return nil
}

type CreateOrganizationsDeveloperRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent                 *string                       `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
	OrganizationsDeveloper *GoogleCloudApigeeV1Developer `protobuf:"bytes,2,opt,name=organizations_developer,json=organizationsDeveloper" json:"organizations_developer,omitempty"`
}

func (x *CreateOrganizationsDeveloperRequest) Reset() {
	*x = CreateOrganizationsDeveloperRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[371]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrganizationsDeveloperRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrganizationsDeveloperRequest) ProtoMessage() {}

func (x *CreateOrganizationsDeveloperRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[371]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrganizationsDeveloperRequest.ProtoReflect.Descriptor instead.
func (*CreateOrganizationsDeveloperRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{371}
}

func (x *CreateOrganizationsDeveloperRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

func (x *CreateOrganizationsDeveloperRequest) GetOrganizationsDeveloper() *GoogleCloudApigeeV1Developer {
	if x != nil {
		return x.OrganizationsDeveloper
	}
	return nil
}

type DeleteOrganizationsDeveloperRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *DeleteOrganizationsDeveloperRequest) Reset() {
	*x = DeleteOrganizationsDeveloperRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[372]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrganizationsDeveloperRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrganizationsDeveloperRequest) ProtoMessage() {}

func (x *DeleteOrganizationsDeveloperRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[372]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrganizationsDeveloperRequest.ProtoReflect.Descriptor instead.
func (*DeleteOrganizationsDeveloperRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{372}
}

func (x *DeleteOrganizationsDeveloperRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GetOrganizationsDeveloperRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action *string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	Name   *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (x *GetOrganizationsDeveloperRequest) Reset() {
	*x = GetOrganizationsDeveloperRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[373]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrganizationsDeveloperRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrganizationsDeveloperRequest) ProtoMessage() {}

func (x *GetOrganizationsDeveloperRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[373]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrganizationsDeveloperRequest.ProtoReflect.Descriptor instead.
func (*GetOrganizationsDeveloperRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{373}
}

func (x *GetOrganizationsDeveloperRequest) GetAction() string {
	if x != nil && x.Action != nil {
		return *x.Action
	}
	return ""
}

func (x *GetOrganizationsDeveloperRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GetBalanceOrganizationsDeveloperRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *GetBalanceOrganizationsDeveloperRequest) Reset() {
	*x = GetBalanceOrganizationsDeveloperRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[374]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBalanceOrganizationsDeveloperRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBalanceOrganizationsDeveloperRequest) ProtoMessage() {}

func (x *GetBalanceOrganizationsDeveloperRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[374]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBalanceOrganizationsDeveloperRequest.ProtoReflect.Descriptor instead.
func (*GetBalanceOrganizationsDeveloperRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{374}
}

func (x *GetBalanceOrganizationsDeveloperRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GetMonetizationConfigOrganizationsDeveloperRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *GetMonetizationConfigOrganizationsDeveloperRequest) Reset() {
	*x = GetMonetizationConfigOrganizationsDeveloperRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[375]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMonetizationConfigOrganizationsDeveloperRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMonetizationConfigOrganizationsDeveloperRequest) ProtoMessage() {}

func (x *GetMonetizationConfigOrganizationsDeveloperRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[375]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMonetizationConfigOrganizationsDeveloperRequest.ProtoReflect.Descriptor instead.
func (*GetMonetizationConfigOrganizationsDeveloperRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{375}
}

func (x *GetMonetizationConfigOrganizationsDeveloperRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type ListOrganizationsDevelopersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	App            *string `protobuf:"bytes,1,opt,name=app" json:"app,omitempty"`
	Count          *string `protobuf:"bytes,2,opt,name=count" json:"count,omitempty"`
	Expand         *bool   `protobuf:"varint,3,opt,name=expand" json:"expand,omitempty"`
	Ids            *string `protobuf:"bytes,4,opt,name=ids" json:"ids,omitempty"`
	IncludeCompany *bool   `protobuf:"varint,5,opt,name=include_company,json=includeCompany" json:"include_company,omitempty"`
	Parent         *string `protobuf:"bytes,6,opt,name=parent" json:"parent,omitempty"`
	StartKey       *string `protobuf:"bytes,7,opt,name=start_key,json=startKey" json:"start_key,omitempty"`
}

func (x *ListOrganizationsDevelopersRequest) Reset() {
	*x = ListOrganizationsDevelopersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[376]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrganizationsDevelopersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrganizationsDevelopersRequest) ProtoMessage() {}

func (x *ListOrganizationsDevelopersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[376]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrganizationsDevelopersRequest.ProtoReflect.Descriptor instead.
func (*ListOrganizationsDevelopersRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{376}
}

func (x *ListOrganizationsDevelopersRequest) GetApp() string {
	if x != nil && x.App != nil {
		return *x.App
	}
	return ""
}

func (x *ListOrganizationsDevelopersRequest) GetCount() string {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return ""
}

func (x *ListOrganizationsDevelopersRequest) GetExpand() bool {
	if x != nil && x.Expand != nil {
		return *x.Expand
	}
	return false
}

func (x *ListOrganizationsDevelopersRequest) GetIds() string {
	if x != nil && x.Ids != nil {
		return *x.Ids
	}
	return ""
}

func (x *ListOrganizationsDevelopersRequest) GetIncludeCompany() bool {
	if x != nil && x.IncludeCompany != nil {
		return *x.IncludeCompany
	}
	return false
}

func (x *ListOrganizationsDevelopersRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

func (x *ListOrganizationsDevelopersRequest) GetStartKey() string {
	if x != nil && x.StartKey != nil {
		return *x.StartKey
	}
	return ""
}

type SetDeveloperStatusOrganizationsDeveloperRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action *string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	Name   *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (x *SetDeveloperStatusOrganizationsDeveloperRequest) Reset() {
	*x = SetDeveloperStatusOrganizationsDeveloperRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[377]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetDeveloperStatusOrganizationsDeveloperRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDeveloperStatusOrganizationsDeveloperRequest) ProtoMessage() {}

func (x *SetDeveloperStatusOrganizationsDeveloperRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[377]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDeveloperStatusOrganizationsDeveloperRequest.ProtoReflect.Descriptor instead.
func (*SetDeveloperStatusOrganizationsDeveloperRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{377}
}

func (x *SetDeveloperStatusOrganizationsDeveloperRequest) GetAction() string {
	if x != nil && x.Action != nil {
		return *x.Action
	}
	return ""
}

func (x *SetDeveloperStatusOrganizationsDeveloperRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type UpdateOrganizationsDeveloperRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                   *string                       `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	OrganizationsDeveloper *GoogleCloudApigeeV1Developer `protobuf:"bytes,2,opt,name=organizations_developer,json=organizationsDeveloper" json:"organizations_developer,omitempty"`
}

func (x *UpdateOrganizationsDeveloperRequest) Reset() {
	*x = UpdateOrganizationsDeveloperRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[378]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrganizationsDeveloperRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrganizationsDeveloperRequest) ProtoMessage() {}

func (x *UpdateOrganizationsDeveloperRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[378]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrganizationsDeveloperRequest.ProtoReflect.Descriptor instead.
func (*UpdateOrganizationsDeveloperRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{378}
}

func (x *UpdateOrganizationsDeveloperRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UpdateOrganizationsDeveloperRequest) GetOrganizationsDeveloper() *GoogleCloudApigeeV1Developer {
	if x != nil {
		return x.OrganizationsDeveloper
	}
	return nil
}

type UpdateMonetizationConfigOrganizationsDeveloperRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                   *string                                         `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	OrganizationsDeveloper *GoogleCloudApigeeV1DeveloperMonetizationConfig `protobuf:"bytes,2,opt,name=organizations_developer,json=organizationsDeveloper" json:"organizations_developer,omitempty"`
}

func (x *UpdateMonetizationConfigOrganizationsDeveloperRequest) Reset() {
	*x = UpdateMonetizationConfigOrganizationsDeveloperRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[379]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMonetizationConfigOrganizationsDeveloperRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMonetizationConfigOrganizationsDeveloperRequest) ProtoMessage() {}

func (x *UpdateMonetizationConfigOrganizationsDeveloperRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[379]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMonetizationConfigOrganizationsDeveloperRequest.ProtoReflect.Descriptor instead.
func (*UpdateMonetizationConfigOrganizationsDeveloperRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{379}
}

func (x *UpdateMonetizationConfigOrganizationsDeveloperRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UpdateMonetizationConfigOrganizationsDeveloperRequest) GetOrganizationsDeveloper() *GoogleCloudApigeeV1DeveloperMonetizationConfig {
	if x != nil {
		return x.OrganizationsDeveloper
	}
	return nil
}

type AttributesOrganizationsDevelopersAppRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                       *string                        `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	OrganizationsDevelopersApp *GoogleCloudApigeeV1Attributes `protobuf:"bytes,2,opt,name=organizations_developers_app,json=organizationsDevelopersApp" json:"organizations_developers_app,omitempty"`
}

func (x *AttributesOrganizationsDevelopersAppRequest) Reset() {
	*x = AttributesOrganizationsDevelopersAppRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[380]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttributesOrganizationsDevelopersAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttributesOrganizationsDevelopersAppRequest) ProtoMessage() {}

func (x *AttributesOrganizationsDevelopersAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[380]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttributesOrganizationsDevelopersAppRequest.ProtoReflect.Descriptor instead.
func (*AttributesOrganizationsDevelopersAppRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{380}
}

func (x *AttributesOrganizationsDevelopersAppRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *AttributesOrganizationsDevelopersAppRequest) GetOrganizationsDevelopersApp() *GoogleCloudApigeeV1Attributes {
	if x != nil {
		return x.OrganizationsDevelopersApp
	}
	return nil
}

type CreateOrganizationsDevelopersAppRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent                     *string                          `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
	OrganizationsDevelopersApp *GoogleCloudApigeeV1DeveloperApp `protobuf:"bytes,2,opt,name=organizations_developers_app,json=organizationsDevelopersApp" json:"organizations_developers_app,omitempty"`
}

func (x *CreateOrganizationsDevelopersAppRequest) Reset() {
	*x = CreateOrganizationsDevelopersAppRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[381]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrganizationsDevelopersAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrganizationsDevelopersAppRequest) ProtoMessage() {}

func (x *CreateOrganizationsDevelopersAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[381]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrganizationsDevelopersAppRequest.ProtoReflect.Descriptor instead.
func (*CreateOrganizationsDevelopersAppRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{381}
}

func (x *CreateOrganizationsDevelopersAppRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

func (x *CreateOrganizationsDevelopersAppRequest) GetOrganizationsDevelopersApp() *GoogleCloudApigeeV1DeveloperApp {
	if x != nil {
		return x.OrganizationsDevelopersApp
	}
	return nil
}

type DeleteOrganizationsDevelopersAppRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *DeleteOrganizationsDevelopersAppRequest) Reset() {
	*x = DeleteOrganizationsDevelopersAppRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[382]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrganizationsDevelopersAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrganizationsDevelopersAppRequest) ProtoMessage() {}

func (x *DeleteOrganizationsDevelopersAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[382]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrganizationsDevelopersAppRequest.ProtoReflect.Descriptor instead.
func (*DeleteOrganizationsDevelopersAppRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{382}
}

func (x *DeleteOrganizationsDevelopersAppRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GenerateKeyPairOrUpdateDeveloperAppStatusOrganizationsDevelopersAppRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action                     *string                          `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	Name                       *string                          `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	OrganizationsDevelopersApp *GoogleCloudApigeeV1DeveloperApp `protobuf:"bytes,3,opt,name=organizations_developers_app,json=organizationsDevelopersApp" json:"organizations_developers_app,omitempty"`
}

func (x *GenerateKeyPairOrUpdateDeveloperAppStatusOrganizationsDevelopersAppRequest) Reset() {
	*x = GenerateKeyPairOrUpdateDeveloperAppStatusOrganizationsDevelopersAppRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[383]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateKeyPairOrUpdateDeveloperAppStatusOrganizationsDevelopersAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateKeyPairOrUpdateDeveloperAppStatusOrganizationsDevelopersAppRequest) ProtoMessage() {}

func (x *GenerateKeyPairOrUpdateDeveloperAppStatusOrganizationsDevelopersAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[383]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateKeyPairOrUpdateDeveloperAppStatusOrganizationsDevelopersAppRequest.ProtoReflect.Descriptor instead.
func (*GenerateKeyPairOrUpdateDeveloperAppStatusOrganizationsDevelopersAppRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{383}
}

func (x *GenerateKeyPairOrUpdateDeveloperAppStatusOrganizationsDevelopersAppRequest) GetAction() string {
	if x != nil && x.Action != nil {
		return *x.Action
	}
	return ""
}

func (x *GenerateKeyPairOrUpdateDeveloperAppStatusOrganizationsDevelopersAppRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GenerateKeyPairOrUpdateDeveloperAppStatusOrganizationsDevelopersAppRequest) GetOrganizationsDevelopersApp() *GoogleCloudApigeeV1DeveloperApp {
	if x != nil {
		return x.OrganizationsDevelopersApp
	}
	return nil
}

type GetOrganizationsDevelopersAppRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity *string `protobuf:"bytes,1,opt,name=entity" json:"entity,omitempty"`
	Name   *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Query  *string `protobuf:"bytes,3,opt,name=query" json:"query,omitempty"`
}

func (x *GetOrganizationsDevelopersAppRequest) Reset() {
	*x = GetOrganizationsDevelopersAppRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[384]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrganizationsDevelopersAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrganizationsDevelopersAppRequest) ProtoMessage() {}

func (x *GetOrganizationsDevelopersAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[384]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrganizationsDevelopersAppRequest.ProtoReflect.Descriptor instead.
func (*GetOrganizationsDevelopersAppRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{384}
}

func (x *GetOrganizationsDevelopersAppRequest) GetEntity() string {
	if x != nil && x.Entity != nil {
		return *x.Entity
	}
	return ""
}

func (x *GetOrganizationsDevelopersAppRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GetOrganizationsDevelopersAppRequest) GetQuery() string {
	if x != nil && x.Query != nil {
		return *x.Query
	}
	return ""
}

type ListOrganizationsDevelopersAppsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count         *string `protobuf:"bytes,1,opt,name=count" json:"count,omitempty"`
	Expand        *bool   `protobuf:"varint,2,opt,name=expand" json:"expand,omitempty"`
	Parent        *string `protobuf:"bytes,3,opt,name=parent" json:"parent,omitempty"`
	ShallowExpand *bool   `protobuf:"varint,4,opt,name=shallow_expand,json=shallowExpand" json:"shallow_expand,omitempty"`
	StartKey      *string `protobuf:"bytes,5,opt,name=start_key,json=startKey" json:"start_key,omitempty"`
}

func (x *ListOrganizationsDevelopersAppsRequest) Reset() {
	*x = ListOrganizationsDevelopersAppsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[385]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrganizationsDevelopersAppsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrganizationsDevelopersAppsRequest) ProtoMessage() {}

func (x *ListOrganizationsDevelopersAppsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[385]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrganizationsDevelopersAppsRequest.ProtoReflect.Descriptor instead.
func (*ListOrganizationsDevelopersAppsRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{385}
}

func (x *ListOrganizationsDevelopersAppsRequest) GetCount() string {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return ""
}

func (x *ListOrganizationsDevelopersAppsRequest) GetExpand() bool {
	if x != nil && x.Expand != nil {
		return *x.Expand
	}
	return false
}

func (x *ListOrganizationsDevelopersAppsRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

func (x *ListOrganizationsDevelopersAppsRequest) GetShallowExpand() bool {
	if x != nil && x.ShallowExpand != nil {
		return *x.ShallowExpand
	}
	return false
}

func (x *ListOrganizationsDevelopersAppsRequest) GetStartKey() string {
	if x != nil && x.StartKey != nil {
		return *x.StartKey
	}
	return ""
}

type UpdateOrganizationsDevelopersAppRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                       *string                          `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	OrganizationsDevelopersApp *GoogleCloudApigeeV1DeveloperApp `protobuf:"bytes,2,opt,name=organizations_developers_app,json=organizationsDevelopersApp" json:"organizations_developers_app,omitempty"`
}

func (x *UpdateOrganizationsDevelopersAppRequest) Reset() {
	*x = UpdateOrganizationsDevelopersAppRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[386]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrganizationsDevelopersAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrganizationsDevelopersAppRequest) ProtoMessage() {}

func (x *UpdateOrganizationsDevelopersAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[386]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrganizationsDevelopersAppRequest.ProtoReflect.Descriptor instead.
func (*UpdateOrganizationsDevelopersAppRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{386}
}

func (x *UpdateOrganizationsDevelopersAppRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UpdateOrganizationsDevelopersAppRequest) GetOrganizationsDevelopersApp() *GoogleCloudApigeeV1DeveloperApp {
	if x != nil {
		return x.OrganizationsDevelopersApp
	}
	return nil
}

type DeleteOrganizationsDevelopersAppsAttributeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *DeleteOrganizationsDevelopersAppsAttributeRequest) Reset() {
	*x = DeleteOrganizationsDevelopersAppsAttributeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[387]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrganizationsDevelopersAppsAttributeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrganizationsDevelopersAppsAttributeRequest) ProtoMessage() {}

func (x *DeleteOrganizationsDevelopersAppsAttributeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[387]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrganizationsDevelopersAppsAttributeRequest.ProtoReflect.Descriptor instead.
func (*DeleteOrganizationsDevelopersAppsAttributeRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{387}
}

func (x *DeleteOrganizationsDevelopersAppsAttributeRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GetOrganizationsDevelopersAppsAttributeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *GetOrganizationsDevelopersAppsAttributeRequest) Reset() {
	*x = GetOrganizationsDevelopersAppsAttributeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[388]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrganizationsDevelopersAppsAttributeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrganizationsDevelopersAppsAttributeRequest) ProtoMessage() {}

func (x *GetOrganizationsDevelopersAppsAttributeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[388]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrganizationsDevelopersAppsAttributeRequest.ProtoReflect.Descriptor instead.
func (*GetOrganizationsDevelopersAppsAttributeRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{388}
}

func (x *GetOrganizationsDevelopersAppsAttributeRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type ListOrganizationsDevelopersAppsAttributesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent *string `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
}

func (x *ListOrganizationsDevelopersAppsAttributesRequest) Reset() {
	*x = ListOrganizationsDevelopersAppsAttributesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[389]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrganizationsDevelopersAppsAttributesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrganizationsDevelopersAppsAttributesRequest) ProtoMessage() {}

func (x *ListOrganizationsDevelopersAppsAttributesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[389]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrganizationsDevelopersAppsAttributesRequest.ProtoReflect.Descriptor instead.
func (*ListOrganizationsDevelopersAppsAttributesRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{389}
}

func (x *ListOrganizationsDevelopersAppsAttributesRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

type UpdateDeveloperAppAttributeOrganizationsDevelopersAppsAttributeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                                 *string                       `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	OrganizationsDevelopersAppsAttribute *GoogleCloudApigeeV1Attribute `protobuf:"bytes,2,opt,name=organizations_developers_apps_attribute,json=organizationsDevelopersAppsAttribute" json:"organizations_developers_apps_attribute,omitempty"`
}

func (x *UpdateDeveloperAppAttributeOrganizationsDevelopersAppsAttributeRequest) Reset() {
	*x = UpdateDeveloperAppAttributeOrganizationsDevelopersAppsAttributeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[390]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDeveloperAppAttributeOrganizationsDevelopersAppsAttributeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDeveloperAppAttributeOrganizationsDevelopersAppsAttributeRequest) ProtoMessage() {}

func (x *UpdateDeveloperAppAttributeOrganizationsDevelopersAppsAttributeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[390]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDeveloperAppAttributeOrganizationsDevelopersAppsAttributeRequest.ProtoReflect.Descriptor instead.
func (*UpdateDeveloperAppAttributeOrganizationsDevelopersAppsAttributeRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{390}
}

func (x *UpdateDeveloperAppAttributeOrganizationsDevelopersAppsAttributeRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UpdateDeveloperAppAttributeOrganizationsDevelopersAppsAttributeRequest) GetOrganizationsDevelopersAppsAttribute() *GoogleCloudApigeeV1Attribute {
	if x != nil {
		return x.OrganizationsDevelopersAppsAttribute
	}
	return nil
}

type CreateOrganizationsDevelopersAppsKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent                         *string                             `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
	OrganizationsDevelopersAppsKey *GoogleCloudApigeeV1DeveloperAppKey `protobuf:"bytes,2,opt,name=organizations_developers_apps_key,json=organizationsDevelopersAppsKey" json:"organizations_developers_apps_key,omitempty"`
}

func (x *CreateOrganizationsDevelopersAppsKeyRequest) Reset() {
	*x = CreateOrganizationsDevelopersAppsKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[391]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrganizationsDevelopersAppsKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrganizationsDevelopersAppsKeyRequest) ProtoMessage() {}

func (x *CreateOrganizationsDevelopersAppsKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[391]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrganizationsDevelopersAppsKeyRequest.ProtoReflect.Descriptor instead.
func (*CreateOrganizationsDevelopersAppsKeyRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{391}
}

func (x *CreateOrganizationsDevelopersAppsKeyRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

func (x *CreateOrganizationsDevelopersAppsKeyRequest) GetOrganizationsDevelopersAppsKey() *GoogleCloudApigeeV1DeveloperAppKey {
	if x != nil {
		return x.OrganizationsDevelopersAppsKey
	}
	return nil
}

type DeleteOrganizationsDevelopersAppsKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *DeleteOrganizationsDevelopersAppsKeyRequest) Reset() {
	*x = DeleteOrganizationsDevelopersAppsKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[392]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrganizationsDevelopersAppsKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrganizationsDevelopersAppsKeyRequest) ProtoMessage() {}

func (x *DeleteOrganizationsDevelopersAppsKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[392]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrganizationsDevelopersAppsKeyRequest.ProtoReflect.Descriptor instead.
func (*DeleteOrganizationsDevelopersAppsKeyRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{392}
}

func (x *DeleteOrganizationsDevelopersAppsKeyRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GetOrganizationsDevelopersAppsKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *GetOrganizationsDevelopersAppsKeyRequest) Reset() {
	*x = GetOrganizationsDevelopersAppsKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[393]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrganizationsDevelopersAppsKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrganizationsDevelopersAppsKeyRequest) ProtoMessage() {}

func (x *GetOrganizationsDevelopersAppsKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[393]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrganizationsDevelopersAppsKeyRequest.ProtoReflect.Descriptor instead.
func (*GetOrganizationsDevelopersAppsKeyRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{393}
}

func (x *GetOrganizationsDevelopersAppsKeyRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type ReplaceDeveloperAppKeyOrganizationsDevelopersAppsKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                           *string                             `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	OrganizationsDevelopersAppsKey *GoogleCloudApigeeV1DeveloperAppKey `protobuf:"bytes,2,opt,name=organizations_developers_apps_key,json=organizationsDevelopersAppsKey" json:"organizations_developers_apps_key,omitempty"`
}

func (x *ReplaceDeveloperAppKeyOrganizationsDevelopersAppsKeyRequest) Reset() {
	*x = ReplaceDeveloperAppKeyOrganizationsDevelopersAppsKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[394]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplaceDeveloperAppKeyOrganizationsDevelopersAppsKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplaceDeveloperAppKeyOrganizationsDevelopersAppsKeyRequest) ProtoMessage() {}

func (x *ReplaceDeveloperAppKeyOrganizationsDevelopersAppsKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[394]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplaceDeveloperAppKeyOrganizationsDevelopersAppsKeyRequest.ProtoReflect.Descriptor instead.
func (*ReplaceDeveloperAppKeyOrganizationsDevelopersAppsKeyRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{394}
}

func (x *ReplaceDeveloperAppKeyOrganizationsDevelopersAppsKeyRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ReplaceDeveloperAppKeyOrganizationsDevelopersAppsKeyRequest) GetOrganizationsDevelopersAppsKey() *GoogleCloudApigeeV1DeveloperAppKey {
	if x != nil {
		return x.OrganizationsDevelopersAppsKey
	}
	return nil
}

type UpdateDeveloperAppKeyOrganizationsDevelopersAppsKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action                         *string                             `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	Name                           *string                             `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	OrganizationsDevelopersAppsKey *GoogleCloudApigeeV1DeveloperAppKey `protobuf:"bytes,3,opt,name=organizations_developers_apps_key,json=organizationsDevelopersAppsKey" json:"organizations_developers_apps_key,omitempty"`
}

func (x *UpdateDeveloperAppKeyOrganizationsDevelopersAppsKeyRequest) Reset() {
	*x = UpdateDeveloperAppKeyOrganizationsDevelopersAppsKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[395]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDeveloperAppKeyOrganizationsDevelopersAppsKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDeveloperAppKeyOrganizationsDevelopersAppsKeyRequest) ProtoMessage() {}

func (x *UpdateDeveloperAppKeyOrganizationsDevelopersAppsKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[395]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDeveloperAppKeyOrganizationsDevelopersAppsKeyRequest.ProtoReflect.Descriptor instead.
func (*UpdateDeveloperAppKeyOrganizationsDevelopersAppsKeyRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{395}
}

func (x *UpdateDeveloperAppKeyOrganizationsDevelopersAppsKeyRequest) GetAction() string {
	if x != nil && x.Action != nil {
		return *x.Action
	}
	return ""
}

func (x *UpdateDeveloperAppKeyOrganizationsDevelopersAppsKeyRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UpdateDeveloperAppKeyOrganizationsDevelopersAppsKeyRequest) GetOrganizationsDevelopersAppsKey() *GoogleCloudApigeeV1DeveloperAppKey {
	if x != nil {
		return x.OrganizationsDevelopersAppsKey
	}
	return nil
}

type DeleteOrganizationsDevelopersAppsKeysApiproductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *DeleteOrganizationsDevelopersAppsKeysApiproductRequest) Reset() {
	*x = DeleteOrganizationsDevelopersAppsKeysApiproductRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[396]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrganizationsDevelopersAppsKeysApiproductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrganizationsDevelopersAppsKeysApiproductRequest) ProtoMessage() {}

func (x *DeleteOrganizationsDevelopersAppsKeysApiproductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[396]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrganizationsDevelopersAppsKeysApiproductRequest.ProtoReflect.Descriptor instead.
func (*DeleteOrganizationsDevelopersAppsKeysApiproductRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{396}
}

func (x *DeleteOrganizationsDevelopersAppsKeysApiproductRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type UpdateDeveloperAppKeyApiProductOrganizationsDevelopersAppsKeysApiproductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action *string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	Name   *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (x *UpdateDeveloperAppKeyApiProductOrganizationsDevelopersAppsKeysApiproductRequest) Reset() {
	*x = UpdateDeveloperAppKeyApiProductOrganizationsDevelopersAppsKeysApiproductRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[397]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDeveloperAppKeyApiProductOrganizationsDevelopersAppsKeysApiproductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDeveloperAppKeyApiProductOrganizationsDevelopersAppsKeysApiproductRequest) ProtoMessage() {
}

func (x *UpdateDeveloperAppKeyApiProductOrganizationsDevelopersAppsKeysApiproductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[397]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDeveloperAppKeyApiProductOrganizationsDevelopersAppsKeysApiproductRequest.ProtoReflect.Descriptor instead.
func (*UpdateDeveloperAppKeyApiProductOrganizationsDevelopersAppsKeysApiproductRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{397}
}

func (x *UpdateDeveloperAppKeyApiProductOrganizationsDevelopersAppsKeysApiproductRequest) GetAction() string {
	if x != nil && x.Action != nil {
		return *x.Action
	}
	return ""
}

func (x *UpdateDeveloperAppKeyApiProductOrganizationsDevelopersAppsKeysApiproductRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type CreateOrganizationsDevelopersAppsKeysCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent                                *string                             `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
	OrganizationsDevelopersAppsKeysCreate *GoogleCloudApigeeV1DeveloperAppKey `protobuf:"bytes,2,opt,name=organizations_developers_apps_keys_create,json=organizationsDevelopersAppsKeysCreate" json:"organizations_developers_apps_keys_create,omitempty"`
}

func (x *CreateOrganizationsDevelopersAppsKeysCreateRequest) Reset() {
	*x = CreateOrganizationsDevelopersAppsKeysCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[398]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrganizationsDevelopersAppsKeysCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrganizationsDevelopersAppsKeysCreateRequest) ProtoMessage() {}

func (x *CreateOrganizationsDevelopersAppsKeysCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[398]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrganizationsDevelopersAppsKeysCreateRequest.ProtoReflect.Descriptor instead.
func (*CreateOrganizationsDevelopersAppsKeysCreateRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{398}
}

func (x *CreateOrganizationsDevelopersAppsKeysCreateRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

func (x *CreateOrganizationsDevelopersAppsKeysCreateRequest) GetOrganizationsDevelopersAppsKeysCreate() *GoogleCloudApigeeV1DeveloperAppKey {
	if x != nil {
		return x.OrganizationsDevelopersAppsKeysCreate
	}
	return nil
}

type DeleteOrganizationsDevelopersAttributeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *DeleteOrganizationsDevelopersAttributeRequest) Reset() {
	*x = DeleteOrganizationsDevelopersAttributeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[399]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrganizationsDevelopersAttributeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrganizationsDevelopersAttributeRequest) ProtoMessage() {}

func (x *DeleteOrganizationsDevelopersAttributeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[399]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrganizationsDevelopersAttributeRequest.ProtoReflect.Descriptor instead.
func (*DeleteOrganizationsDevelopersAttributeRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{399}
}

func (x *DeleteOrganizationsDevelopersAttributeRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GetOrganizationsDevelopersAttributeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *GetOrganizationsDevelopersAttributeRequest) Reset() {
	*x = GetOrganizationsDevelopersAttributeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[400]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrganizationsDevelopersAttributeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrganizationsDevelopersAttributeRequest) ProtoMessage() {}

func (x *GetOrganizationsDevelopersAttributeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[400]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrganizationsDevelopersAttributeRequest.ProtoReflect.Descriptor instead.
func (*GetOrganizationsDevelopersAttributeRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{400}
}

func (x *GetOrganizationsDevelopersAttributeRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type ListOrganizationsDevelopersAttributesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent *string `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
}

func (x *ListOrganizationsDevelopersAttributesRequest) Reset() {
	*x = ListOrganizationsDevelopersAttributesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[401]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrganizationsDevelopersAttributesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrganizationsDevelopersAttributesRequest) ProtoMessage() {}

func (x *ListOrganizationsDevelopersAttributesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[401]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrganizationsDevelopersAttributesRequest.ProtoReflect.Descriptor instead.
func (*ListOrganizationsDevelopersAttributesRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{401}
}

func (x *ListOrganizationsDevelopersAttributesRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

type UpdateDeveloperAttributeOrganizationsDevelopersAttributeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                             *string                       `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	OrganizationsDevelopersAttribute *GoogleCloudApigeeV1Attribute `protobuf:"bytes,2,opt,name=organizations_developers_attribute,json=organizationsDevelopersAttribute" json:"organizations_developers_attribute,omitempty"`
}

func (x *UpdateDeveloperAttributeOrganizationsDevelopersAttributeRequest) Reset() {
	*x = UpdateDeveloperAttributeOrganizationsDevelopersAttributeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[402]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDeveloperAttributeOrganizationsDevelopersAttributeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDeveloperAttributeOrganizationsDevelopersAttributeRequest) ProtoMessage() {}

func (x *UpdateDeveloperAttributeOrganizationsDevelopersAttributeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[402]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDeveloperAttributeOrganizationsDevelopersAttributeRequest.ProtoReflect.Descriptor instead.
func (*UpdateDeveloperAttributeOrganizationsDevelopersAttributeRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{402}
}

func (x *UpdateDeveloperAttributeOrganizationsDevelopersAttributeRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UpdateDeveloperAttributeOrganizationsDevelopersAttributeRequest) GetOrganizationsDevelopersAttribute() *GoogleCloudApigeeV1Attribute {
	if x != nil {
		return x.OrganizationsDevelopersAttribute
	}
	return nil
}

type AdjustOrganizationsDevelopersBalanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                           *string                                           `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	OrganizationsDevelopersBalance *GoogleCloudApigeeV1AdjustDeveloperBalanceRequest `protobuf:"bytes,2,opt,name=organizations_developers_balance,json=organizationsDevelopersBalance" json:"organizations_developers_balance,omitempty"`
}

func (x *AdjustOrganizationsDevelopersBalanceRequest) Reset() {
	*x = AdjustOrganizationsDevelopersBalanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[403]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdjustOrganizationsDevelopersBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdjustOrganizationsDevelopersBalanceRequest) ProtoMessage() {}

func (x *AdjustOrganizationsDevelopersBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[403]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdjustOrganizationsDevelopersBalanceRequest.ProtoReflect.Descriptor instead.
func (*AdjustOrganizationsDevelopersBalanceRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{403}
}

func (x *AdjustOrganizationsDevelopersBalanceRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *AdjustOrganizationsDevelopersBalanceRequest) GetOrganizationsDevelopersBalance() *GoogleCloudApigeeV1AdjustDeveloperBalanceRequest {
	if x != nil {
		return x.OrganizationsDevelopersBalance
	}
	return nil
}

type CreditOrganizationsDevelopersBalanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                           *string                                           `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	OrganizationsDevelopersBalance *GoogleCloudApigeeV1CreditDeveloperBalanceRequest `protobuf:"bytes,2,opt,name=organizations_developers_balance,json=organizationsDevelopersBalance" json:"organizations_developers_balance,omitempty"`
}

func (x *CreditOrganizationsDevelopersBalanceRequest) Reset() {
	*x = CreditOrganizationsDevelopersBalanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[404]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreditOrganizationsDevelopersBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreditOrganizationsDevelopersBalanceRequest) ProtoMessage() {}

func (x *CreditOrganizationsDevelopersBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[404]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreditOrganizationsDevelopersBalanceRequest.ProtoReflect.Descriptor instead.
func (*CreditOrganizationsDevelopersBalanceRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{404}
}

func (x *CreditOrganizationsDevelopersBalanceRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CreditOrganizationsDevelopersBalanceRequest) GetOrganizationsDevelopersBalance() *GoogleCloudApigeeV1CreditDeveloperBalanceRequest {
	if x != nil {
		return x.OrganizationsDevelopersBalance
	}
	return nil
}

type CreateOrganizationsDevelopersSubscriptionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent                              *string                                   `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
	OrganizationsDevelopersSubscription *GoogleCloudApigeeV1DeveloperSubscription `protobuf:"bytes,2,opt,name=organizations_developers_subscription,json=organizationsDevelopersSubscription" json:"organizations_developers_subscription,omitempty"`
}

func (x *CreateOrganizationsDevelopersSubscriptionRequest) Reset() {
	*x = CreateOrganizationsDevelopersSubscriptionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[405]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrganizationsDevelopersSubscriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrganizationsDevelopersSubscriptionRequest) ProtoMessage() {}

func (x *CreateOrganizationsDevelopersSubscriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[405]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrganizationsDevelopersSubscriptionRequest.ProtoReflect.Descriptor instead.
func (*CreateOrganizationsDevelopersSubscriptionRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{405}
}

func (x *CreateOrganizationsDevelopersSubscriptionRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

func (x *CreateOrganizationsDevelopersSubscriptionRequest) GetOrganizationsDevelopersSubscription() *GoogleCloudApigeeV1DeveloperSubscription {
	if x != nil {
		return x.OrganizationsDevelopersSubscription
	}
	return nil
}

type ExpireOrganizationsDevelopersSubscriptionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                                *string                                                `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	OrganizationsDevelopersSubscription *GoogleCloudApigeeV1ExpireDeveloperSubscriptionRequest `protobuf:"bytes,2,opt,name=organizations_developers_subscription,json=organizationsDevelopersSubscription" json:"organizations_developers_subscription,omitempty"`
}

func (x *ExpireOrganizationsDevelopersSubscriptionRequest) Reset() {
	*x = ExpireOrganizationsDevelopersSubscriptionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[406]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExpireOrganizationsDevelopersSubscriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpireOrganizationsDevelopersSubscriptionRequest) ProtoMessage() {}

func (x *ExpireOrganizationsDevelopersSubscriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[406]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpireOrganizationsDevelopersSubscriptionRequest.ProtoReflect.Descriptor instead.
func (*ExpireOrganizationsDevelopersSubscriptionRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{406}
}

func (x *ExpireOrganizationsDevelopersSubscriptionRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ExpireOrganizationsDevelopersSubscriptionRequest) GetOrganizationsDevelopersSubscription() *GoogleCloudApigeeV1ExpireDeveloperSubscriptionRequest {
	if x != nil {
		return x.OrganizationsDevelopersSubscription
	}
	return nil
}

type GetOrganizationsDevelopersSubscriptionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *GetOrganizationsDevelopersSubscriptionRequest) Reset() {
	*x = GetOrganizationsDevelopersSubscriptionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[407]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrganizationsDevelopersSubscriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrganizationsDevelopersSubscriptionRequest) ProtoMessage() {}

func (x *GetOrganizationsDevelopersSubscriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[407]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrganizationsDevelopersSubscriptionRequest.ProtoReflect.Descriptor instead.
func (*GetOrganizationsDevelopersSubscriptionRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{407}
}

func (x *GetOrganizationsDevelopersSubscriptionRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type ListOrganizationsDevelopersSubscriptionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count    *int32  `protobuf:"varint,1,opt,name=count" json:"count,omitempty"`
	Parent   *string `protobuf:"bytes,2,opt,name=parent" json:"parent,omitempty"`
	StartKey *string `protobuf:"bytes,3,opt,name=start_key,json=startKey" json:"start_key,omitempty"`
}

func (x *ListOrganizationsDevelopersSubscriptionsRequest) Reset() {
	*x = ListOrganizationsDevelopersSubscriptionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[408]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrganizationsDevelopersSubscriptionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrganizationsDevelopersSubscriptionsRequest) ProtoMessage() {}

func (x *ListOrganizationsDevelopersSubscriptionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[408]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrganizationsDevelopersSubscriptionsRequest.ProtoReflect.Descriptor instead.
func (*ListOrganizationsDevelopersSubscriptionsRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{408}
}

func (x *ListOrganizationsDevelopersSubscriptionsRequest) GetCount() int32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

func (x *ListOrganizationsDevelopersSubscriptionsRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

func (x *ListOrganizationsDevelopersSubscriptionsRequest) GetStartKey() string {
	if x != nil && x.StartKey != nil {
		return *x.StartKey
	}
	return ""
}

type CreateOrganizationsEndpointAttachmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EndpointAttachmentId            *string                                `protobuf:"bytes,1,opt,name=endpoint_attachment_id,json=endpointAttachmentId" json:"endpoint_attachment_id,omitempty"`
	Parent                          *string                                `protobuf:"bytes,2,opt,name=parent" json:"parent,omitempty"`
	OrganizationsEndpointAttachment *GoogleCloudApigeeV1EndpointAttachment `protobuf:"bytes,3,opt,name=organizations_endpoint_attachment,json=organizationsEndpointAttachment" json:"organizations_endpoint_attachment,omitempty"`
}

func (x *CreateOrganizationsEndpointAttachmentRequest) Reset() {
	*x = CreateOrganizationsEndpointAttachmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[409]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrganizationsEndpointAttachmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrganizationsEndpointAttachmentRequest) ProtoMessage() {}

func (x *CreateOrganizationsEndpointAttachmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[409]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrganizationsEndpointAttachmentRequest.ProtoReflect.Descriptor instead.
func (*CreateOrganizationsEndpointAttachmentRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{409}
}

func (x *CreateOrganizationsEndpointAttachmentRequest) GetEndpointAttachmentId() string {
	if x != nil && x.EndpointAttachmentId != nil {
		return *x.EndpointAttachmentId
	}
	return ""
}

func (x *CreateOrganizationsEndpointAttachmentRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

func (x *CreateOrganizationsEndpointAttachmentRequest) GetOrganizationsEndpointAttachment() *GoogleCloudApigeeV1EndpointAttachment {
	if x != nil {
		return x.OrganizationsEndpointAttachment
	}
	return nil
}

type DeleteOrganizationsEndpointAttachmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *DeleteOrganizationsEndpointAttachmentRequest) Reset() {
	*x = DeleteOrganizationsEndpointAttachmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[410]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrganizationsEndpointAttachmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrganizationsEndpointAttachmentRequest) ProtoMessage() {}

func (x *DeleteOrganizationsEndpointAttachmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[410]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrganizationsEndpointAttachmentRequest.ProtoReflect.Descriptor instead.
func (*DeleteOrganizationsEndpointAttachmentRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{410}
}

func (x *DeleteOrganizationsEndpointAttachmentRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GetOrganizationsEndpointAttachmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *GetOrganizationsEndpointAttachmentRequest) Reset() {
	*x = GetOrganizationsEndpointAttachmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[411]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrganizationsEndpointAttachmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrganizationsEndpointAttachmentRequest) ProtoMessage() {}

func (x *GetOrganizationsEndpointAttachmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[411]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrganizationsEndpointAttachmentRequest.ProtoReflect.Descriptor instead.
func (*GetOrganizationsEndpointAttachmentRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{411}
}

func (x *GetOrganizationsEndpointAttachmentRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type ListOrganizationsEndpointAttachmentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize  *int32  `protobuf:"varint,1,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	PageToken *string `protobuf:"bytes,2,opt,name=page_token,json=pageToken" json:"page_token,omitempty"`
	Parent    *string `protobuf:"bytes,3,opt,name=parent" json:"parent,omitempty"`
}

func (x *ListOrganizationsEndpointAttachmentsRequest) Reset() {
	*x = ListOrganizationsEndpointAttachmentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[412]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrganizationsEndpointAttachmentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrganizationsEndpointAttachmentsRequest) ProtoMessage() {}

func (x *ListOrganizationsEndpointAttachmentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[412]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrganizationsEndpointAttachmentsRequest.ProtoReflect.Descriptor instead.
func (*ListOrganizationsEndpointAttachmentsRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{412}
}

func (x *ListOrganizationsEndpointAttachmentsRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *ListOrganizationsEndpointAttachmentsRequest) GetPageToken() string {
	if x != nil && x.PageToken != nil {
		return *x.PageToken
	}
	return ""
}

func (x *ListOrganizationsEndpointAttachmentsRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

type CreateOrganizationsEnvgroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                  *string                              `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Parent                *string                              `protobuf:"bytes,2,opt,name=parent" json:"parent,omitempty"`
	OrganizationsEnvgroup *GoogleCloudApigeeV1EnvironmentGroup `protobuf:"bytes,3,opt,name=organizations_envgroup,json=organizationsEnvgroup" json:"organizations_envgroup,omitempty"`
}

func (x *CreateOrganizationsEnvgroupRequest) Reset() {
	*x = CreateOrganizationsEnvgroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[413]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrganizationsEnvgroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrganizationsEnvgroupRequest) ProtoMessage() {}

func (x *CreateOrganizationsEnvgroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[413]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrganizationsEnvgroupRequest.ProtoReflect.Descriptor instead.
func (*CreateOrganizationsEnvgroupRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{413}
}

func (x *CreateOrganizationsEnvgroupRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CreateOrganizationsEnvgroupRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

func (x *CreateOrganizationsEnvgroupRequest) GetOrganizationsEnvgroup() *GoogleCloudApigeeV1EnvironmentGroup {
	if x != nil {
		return x.OrganizationsEnvgroup
	}
	return nil
}

type DeleteOrganizationsEnvgroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *DeleteOrganizationsEnvgroupRequest) Reset() {
	*x = DeleteOrganizationsEnvgroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[414]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrganizationsEnvgroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrganizationsEnvgroupRequest) ProtoMessage() {}

func (x *DeleteOrganizationsEnvgroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[414]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrganizationsEnvgroupRequest.ProtoReflect.Descriptor instead.
func (*DeleteOrganizationsEnvgroupRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{414}
}

func (x *DeleteOrganizationsEnvgroupRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GetOrganizationsEnvgroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *GetOrganizationsEnvgroupRequest) Reset() {
	*x = GetOrganizationsEnvgroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[415]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrganizationsEnvgroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrganizationsEnvgroupRequest) ProtoMessage() {}

func (x *GetOrganizationsEnvgroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[415]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrganizationsEnvgroupRequest.ProtoReflect.Descriptor instead.
func (*GetOrganizationsEnvgroupRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{415}
}

func (x *GetOrganizationsEnvgroupRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GetDeployedIngressConfigOrganizationsEnvgroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	View *string `protobuf:"bytes,2,opt,name=view" json:"view,omitempty"`
}

func (x *GetDeployedIngressConfigOrganizationsEnvgroupRequest) Reset() {
	*x = GetDeployedIngressConfigOrganizationsEnvgroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[416]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeployedIngressConfigOrganizationsEnvgroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeployedIngressConfigOrganizationsEnvgroupRequest) ProtoMessage() {}

func (x *GetDeployedIngressConfigOrganizationsEnvgroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[416]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeployedIngressConfigOrganizationsEnvgroupRequest.ProtoReflect.Descriptor instead.
func (*GetDeployedIngressConfigOrganizationsEnvgroupRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{416}
}

func (x *GetDeployedIngressConfigOrganizationsEnvgroupRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GetDeployedIngressConfigOrganizationsEnvgroupRequest) GetView() string {
	if x != nil && x.View != nil {
		return *x.View
	}
	return ""
}

type ListOrganizationsEnvgroupsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize  *int32  `protobuf:"varint,1,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	PageToken *string `protobuf:"bytes,2,opt,name=page_token,json=pageToken" json:"page_token,omitempty"`
	Parent    *string `protobuf:"bytes,3,opt,name=parent" json:"parent,omitempty"`
}

func (x *ListOrganizationsEnvgroupsRequest) Reset() {
	*x = ListOrganizationsEnvgroupsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[417]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrganizationsEnvgroupsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrganizationsEnvgroupsRequest) ProtoMessage() {}

func (x *ListOrganizationsEnvgroupsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[417]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrganizationsEnvgroupsRequest.ProtoReflect.Descriptor instead.
func (*ListOrganizationsEnvgroupsRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{417}
}

func (x *ListOrganizationsEnvgroupsRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *ListOrganizationsEnvgroupsRequest) GetPageToken() string {
	if x != nil && x.PageToken != nil {
		return *x.PageToken
	}
	return ""
}

func (x *ListOrganizationsEnvgroupsRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

type PatchOrganizationsEnvgroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                  *string                              `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	UpdateMask            *string                              `protobuf:"bytes,2,opt,name=update_mask,json=updateMask" json:"update_mask,omitempty"`
	OrganizationsEnvgroup *GoogleCloudApigeeV1EnvironmentGroup `protobuf:"bytes,3,opt,name=organizations_envgroup,json=organizationsEnvgroup" json:"organizations_envgroup,omitempty"`
}

func (x *PatchOrganizationsEnvgroupRequest) Reset() {
	*x = PatchOrganizationsEnvgroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[418]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PatchOrganizationsEnvgroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatchOrganizationsEnvgroupRequest) ProtoMessage() {}

func (x *PatchOrganizationsEnvgroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[418]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatchOrganizationsEnvgroupRequest.ProtoReflect.Descriptor instead.
func (*PatchOrganizationsEnvgroupRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{418}
}

func (x *PatchOrganizationsEnvgroupRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *PatchOrganizationsEnvgroupRequest) GetUpdateMask() string {
	if x != nil && x.UpdateMask != nil {
		return *x.UpdateMask
	}
	return ""
}

func (x *PatchOrganizationsEnvgroupRequest) GetOrganizationsEnvgroup() *GoogleCloudApigeeV1EnvironmentGroup {
	if x != nil {
		return x.OrganizationsEnvgroup
	}
	return nil
}

type CreateOrganizationsEnvgroupsAttachmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent                           *string                                        `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
	OrganizationsEnvgroupsAttachment *GoogleCloudApigeeV1EnvironmentGroupAttachment `protobuf:"bytes,2,opt,name=organizations_envgroups_attachment,json=organizationsEnvgroupsAttachment" json:"organizations_envgroups_attachment,omitempty"`
}

func (x *CreateOrganizationsEnvgroupsAttachmentRequest) Reset() {
	*x = CreateOrganizationsEnvgroupsAttachmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[419]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrganizationsEnvgroupsAttachmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrganizationsEnvgroupsAttachmentRequest) ProtoMessage() {}

func (x *CreateOrganizationsEnvgroupsAttachmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[419]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrganizationsEnvgroupsAttachmentRequest.ProtoReflect.Descriptor instead.
func (*CreateOrganizationsEnvgroupsAttachmentRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{419}
}

func (x *CreateOrganizationsEnvgroupsAttachmentRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

func (x *CreateOrganizationsEnvgroupsAttachmentRequest) GetOrganizationsEnvgroupsAttachment() *GoogleCloudApigeeV1EnvironmentGroupAttachment {
	if x != nil {
		return x.OrganizationsEnvgroupsAttachment
	}
	return nil
}

type DeleteOrganizationsEnvgroupsAttachmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *DeleteOrganizationsEnvgroupsAttachmentRequest) Reset() {
	*x = DeleteOrganizationsEnvgroupsAttachmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[420]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrganizationsEnvgroupsAttachmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrganizationsEnvgroupsAttachmentRequest) ProtoMessage() {}

func (x *DeleteOrganizationsEnvgroupsAttachmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[420]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrganizationsEnvgroupsAttachmentRequest.ProtoReflect.Descriptor instead.
func (*DeleteOrganizationsEnvgroupsAttachmentRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{420}
}

func (x *DeleteOrganizationsEnvgroupsAttachmentRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GetOrganizationsEnvgroupsAttachmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *GetOrganizationsEnvgroupsAttachmentRequest) Reset() {
	*x = GetOrganizationsEnvgroupsAttachmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[421]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrganizationsEnvgroupsAttachmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrganizationsEnvgroupsAttachmentRequest) ProtoMessage() {}

func (x *GetOrganizationsEnvgroupsAttachmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[421]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrganizationsEnvgroupsAttachmentRequest.ProtoReflect.Descriptor instead.
func (*GetOrganizationsEnvgroupsAttachmentRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{421}
}

func (x *GetOrganizationsEnvgroupsAttachmentRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type ListOrganizationsEnvgroupsAttachmentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize  *int32  `protobuf:"varint,1,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	PageToken *string `protobuf:"bytes,2,opt,name=page_token,json=pageToken" json:"page_token,omitempty"`
	Parent    *string `protobuf:"bytes,3,opt,name=parent" json:"parent,omitempty"`
}

func (x *ListOrganizationsEnvgroupsAttachmentsRequest) Reset() {
	*x = ListOrganizationsEnvgroupsAttachmentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[422]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrganizationsEnvgroupsAttachmentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrganizationsEnvgroupsAttachmentsRequest) ProtoMessage() {}

func (x *ListOrganizationsEnvgroupsAttachmentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[422]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrganizationsEnvgroupsAttachmentsRequest.ProtoReflect.Descriptor instead.
func (*ListOrganizationsEnvgroupsAttachmentsRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{422}
}

func (x *ListOrganizationsEnvgroupsAttachmentsRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *ListOrganizationsEnvgroupsAttachmentsRequest) GetPageToken() string {
	if x != nil && x.PageToken != nil {
		return *x.PageToken
	}
	return ""
}

func (x *ListOrganizationsEnvgroupsAttachmentsRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

type CreateOrganizationsEnvironmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                     *string                         `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Parent                   *string                         `protobuf:"bytes,2,opt,name=parent" json:"parent,omitempty"`
	OrganizationsEnvironment *GoogleCloudApigeeV1Environment `protobuf:"bytes,3,opt,name=organizations_environment,json=organizationsEnvironment" json:"organizations_environment,omitempty"`
}

func (x *CreateOrganizationsEnvironmentRequest) Reset() {
	*x = CreateOrganizationsEnvironmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[423]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrganizationsEnvironmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrganizationsEnvironmentRequest) ProtoMessage() {}

func (x *CreateOrganizationsEnvironmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[423]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrganizationsEnvironmentRequest.ProtoReflect.Descriptor instead.
func (*CreateOrganizationsEnvironmentRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{423}
}

func (x *CreateOrganizationsEnvironmentRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CreateOrganizationsEnvironmentRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

func (x *CreateOrganizationsEnvironmentRequest) GetOrganizationsEnvironment() *GoogleCloudApigeeV1Environment {
	if x != nil {
		return x.OrganizationsEnvironment
	}
	return nil
}

type DeleteOrganizationsEnvironmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *DeleteOrganizationsEnvironmentRequest) Reset() {
	*x = DeleteOrganizationsEnvironmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[424]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrganizationsEnvironmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrganizationsEnvironmentRequest) ProtoMessage() {}

func (x *DeleteOrganizationsEnvironmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[424]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrganizationsEnvironmentRequest.ProtoReflect.Descriptor instead.
func (*DeleteOrganizationsEnvironmentRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{424}
}

func (x *DeleteOrganizationsEnvironmentRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GetOrganizationsEnvironmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *GetOrganizationsEnvironmentRequest) Reset() {
	*x = GetOrganizationsEnvironmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[425]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrganizationsEnvironmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrganizationsEnvironmentRequest) ProtoMessage() {}

func (x *GetOrganizationsEnvironmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[425]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrganizationsEnvironmentRequest.ProtoReflect.Descriptor instead.
func (*GetOrganizationsEnvironmentRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{425}
}

func (x *GetOrganizationsEnvironmentRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GetAddonsConfigOrganizationsEnvironmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *GetAddonsConfigOrganizationsEnvironmentRequest) Reset() {
	*x = GetAddonsConfigOrganizationsEnvironmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[426]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAddonsConfigOrganizationsEnvironmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAddonsConfigOrganizationsEnvironmentRequest) ProtoMessage() {}

func (x *GetAddonsConfigOrganizationsEnvironmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[426]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAddonsConfigOrganizationsEnvironmentRequest.ProtoReflect.Descriptor instead.
func (*GetAddonsConfigOrganizationsEnvironmentRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{426}
}

func (x *GetAddonsConfigOrganizationsEnvironmentRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GetApiSecurityRuntimeConfigOrganizationsEnvironmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *GetApiSecurityRuntimeConfigOrganizationsEnvironmentRequest) Reset() {
	*x = GetApiSecurityRuntimeConfigOrganizationsEnvironmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[427]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetApiSecurityRuntimeConfigOrganizationsEnvironmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetApiSecurityRuntimeConfigOrganizationsEnvironmentRequest) ProtoMessage() {}

func (x *GetApiSecurityRuntimeConfigOrganizationsEnvironmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[427]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetApiSecurityRuntimeConfigOrganizationsEnvironmentRequest.ProtoReflect.Descriptor instead.
func (*GetApiSecurityRuntimeConfigOrganizationsEnvironmentRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{427}
}

func (x *GetApiSecurityRuntimeConfigOrganizationsEnvironmentRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GetDebugmaskOrganizationsEnvironmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *GetDebugmaskOrganizationsEnvironmentRequest) Reset() {
	*x = GetDebugmaskOrganizationsEnvironmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[428]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDebugmaskOrganizationsEnvironmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDebugmaskOrganizationsEnvironmentRequest) ProtoMessage() {}

func (x *GetDebugmaskOrganizationsEnvironmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[428]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDebugmaskOrganizationsEnvironmentRequest.ProtoReflect.Descriptor instead.
func (*GetDebugmaskOrganizationsEnvironmentRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{428}
}

func (x *GetDebugmaskOrganizationsEnvironmentRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GetDeployedConfigOrganizationsEnvironmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *GetDeployedConfigOrganizationsEnvironmentRequest) Reset() {
	*x = GetDeployedConfigOrganizationsEnvironmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[429]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeployedConfigOrganizationsEnvironmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeployedConfigOrganizationsEnvironmentRequest) ProtoMessage() {}

func (x *GetDeployedConfigOrganizationsEnvironmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[429]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeployedConfigOrganizationsEnvironmentRequest.ProtoReflect.Descriptor instead.
func (*GetDeployedConfigOrganizationsEnvironmentRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{429}
}

func (x *GetDeployedConfigOrganizationsEnvironmentRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GetSecurityActionsConfigOrganizationsEnvironmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *GetSecurityActionsConfigOrganizationsEnvironmentRequest) Reset() {
	*x = GetSecurityActionsConfigOrganizationsEnvironmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[430]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSecurityActionsConfigOrganizationsEnvironmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSecurityActionsConfigOrganizationsEnvironmentRequest) ProtoMessage() {}

func (x *GetSecurityActionsConfigOrganizationsEnvironmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[430]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSecurityActionsConfigOrganizationsEnvironmentRequest.ProtoReflect.Descriptor instead.
func (*GetSecurityActionsConfigOrganizationsEnvironmentRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{430}
}

func (x *GetSecurityActionsConfigOrganizationsEnvironmentRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GetTraceConfigOrganizationsEnvironmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *GetTraceConfigOrganizationsEnvironmentRequest) Reset() {
	*x = GetTraceConfigOrganizationsEnvironmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[431]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTraceConfigOrganizationsEnvironmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTraceConfigOrganizationsEnvironmentRequest) ProtoMessage() {}

func (x *GetTraceConfigOrganizationsEnvironmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[431]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTraceConfigOrganizationsEnvironmentRequest.ProtoReflect.Descriptor instead.
func (*GetTraceConfigOrganizationsEnvironmentRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{431}
}

func (x *GetTraceConfigOrganizationsEnvironmentRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type ModifyEnvironmentOrganizationsEnvironmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                     *string                         `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	UpdateMask               *string                         `protobuf:"bytes,2,opt,name=update_mask,json=updateMask" json:"update_mask,omitempty"`
	OrganizationsEnvironment *GoogleCloudApigeeV1Environment `protobuf:"bytes,3,opt,name=organizations_environment,json=organizationsEnvironment" json:"organizations_environment,omitempty"`
}

func (x *ModifyEnvironmentOrganizationsEnvironmentRequest) Reset() {
	*x = ModifyEnvironmentOrganizationsEnvironmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[432]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyEnvironmentOrganizationsEnvironmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyEnvironmentOrganizationsEnvironmentRequest) ProtoMessage() {}

func (x *ModifyEnvironmentOrganizationsEnvironmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[432]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyEnvironmentOrganizationsEnvironmentRequest.ProtoReflect.Descriptor instead.
func (*ModifyEnvironmentOrganizationsEnvironmentRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{432}
}

func (x *ModifyEnvironmentOrganizationsEnvironmentRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ModifyEnvironmentOrganizationsEnvironmentRequest) GetUpdateMask() string {
	if x != nil && x.UpdateMask != nil {
		return *x.UpdateMask
	}
	return ""
}

func (x *ModifyEnvironmentOrganizationsEnvironmentRequest) GetOrganizationsEnvironment() *GoogleCloudApigeeV1Environment {
	if x != nil {
		return x.OrganizationsEnvironment
	}
	return nil
}

type SubscribeOrganizationsEnvironmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent *string `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
}

func (x *SubscribeOrganizationsEnvironmentRequest) Reset() {
	*x = SubscribeOrganizationsEnvironmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[433]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeOrganizationsEnvironmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeOrganizationsEnvironmentRequest) ProtoMessage() {}

func (x *SubscribeOrganizationsEnvironmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[433]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeOrganizationsEnvironmentRequest.ProtoReflect.Descriptor instead.
func (*SubscribeOrganizationsEnvironmentRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{433}
}

func (x *SubscribeOrganizationsEnvironmentRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

type UnsubscribeOrganizationsEnvironmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent                   *string                          `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
	OrganizationsEnvironment *GoogleCloudApigeeV1Subscription `protobuf:"bytes,2,opt,name=organizations_environment,json=organizationsEnvironment" json:"organizations_environment,omitempty"`
}

func (x *UnsubscribeOrganizationsEnvironmentRequest) Reset() {
	*x = UnsubscribeOrganizationsEnvironmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[434]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsubscribeOrganizationsEnvironmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsubscribeOrganizationsEnvironmentRequest) ProtoMessage() {}

func (x *UnsubscribeOrganizationsEnvironmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[434]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsubscribeOrganizationsEnvironmentRequest.ProtoReflect.Descriptor instead.
func (*UnsubscribeOrganizationsEnvironmentRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{434}
}

func (x *UnsubscribeOrganizationsEnvironmentRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

func (x *UnsubscribeOrganizationsEnvironmentRequest) GetOrganizationsEnvironment() *GoogleCloudApigeeV1Subscription {
	if x != nil {
		return x.OrganizationsEnvironment
	}
	return nil
}

type UpdateOrganizationsEnvironmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                     *string                         `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	OrganizationsEnvironment *GoogleCloudApigeeV1Environment `protobuf:"bytes,2,opt,name=organizations_environment,json=organizationsEnvironment" json:"organizations_environment,omitempty"`
}

func (x *UpdateOrganizationsEnvironmentRequest) Reset() {
	*x = UpdateOrganizationsEnvironmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[435]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrganizationsEnvironmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrganizationsEnvironmentRequest) ProtoMessage() {}

func (x *UpdateOrganizationsEnvironmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[435]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrganizationsEnvironmentRequest.ProtoReflect.Descriptor instead.
func (*UpdateOrganizationsEnvironmentRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{435}
}

func (x *UpdateOrganizationsEnvironmentRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UpdateOrganizationsEnvironmentRequest) GetOrganizationsEnvironment() *GoogleCloudApigeeV1Environment {
	if x != nil {
		return x.OrganizationsEnvironment
	}
	return nil
}

type UpdateDebugmaskOrganizationsEnvironmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                     *string                       `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	ReplaceRepeatedFields    *bool                         `protobuf:"varint,2,opt,name=replace_repeated_fields,json=replaceRepeatedFields" json:"replace_repeated_fields,omitempty"`
	UpdateMask               *string                       `protobuf:"bytes,3,opt,name=update_mask,json=updateMask" json:"update_mask,omitempty"`
	OrganizationsEnvironment *GoogleCloudApigeeV1DebugMask `protobuf:"bytes,4,opt,name=organizations_environment,json=organizationsEnvironment" json:"organizations_environment,omitempty"`
}

func (x *UpdateDebugmaskOrganizationsEnvironmentRequest) Reset() {
	*x = UpdateDebugmaskOrganizationsEnvironmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[436]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDebugmaskOrganizationsEnvironmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDebugmaskOrganizationsEnvironmentRequest) ProtoMessage() {}

func (x *UpdateDebugmaskOrganizationsEnvironmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[436]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDebugmaskOrganizationsEnvironmentRequest.ProtoReflect.Descriptor instead.
func (*UpdateDebugmaskOrganizationsEnvironmentRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{436}
}

func (x *UpdateDebugmaskOrganizationsEnvironmentRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UpdateDebugmaskOrganizationsEnvironmentRequest) GetReplaceRepeatedFields() bool {
	if x != nil && x.ReplaceRepeatedFields != nil {
		return *x.ReplaceRepeatedFields
	}
	return false
}

func (x *UpdateDebugmaskOrganizationsEnvironmentRequest) GetUpdateMask() string {
	if x != nil && x.UpdateMask != nil {
		return *x.UpdateMask
	}
	return ""
}

func (x *UpdateDebugmaskOrganizationsEnvironmentRequest) GetOrganizationsEnvironment() *GoogleCloudApigeeV1DebugMask {
	if x != nil {
		return x.OrganizationsEnvironment
	}
	return nil
}

type UpdateEnvironmentOrganizationsEnvironmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                     *string                         `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	OrganizationsEnvironment *GoogleCloudApigeeV1Environment `protobuf:"bytes,2,opt,name=organizations_environment,json=organizationsEnvironment" json:"organizations_environment,omitempty"`
}

func (x *UpdateEnvironmentOrganizationsEnvironmentRequest) Reset() {
	*x = UpdateEnvironmentOrganizationsEnvironmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[437]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateEnvironmentOrganizationsEnvironmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEnvironmentOrganizationsEnvironmentRequest) ProtoMessage() {}

func (x *UpdateEnvironmentOrganizationsEnvironmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[437]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEnvironmentOrganizationsEnvironmentRequest.ProtoReflect.Descriptor instead.
func (*UpdateEnvironmentOrganizationsEnvironmentRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{437}
}

func (x *UpdateEnvironmentOrganizationsEnvironmentRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UpdateEnvironmentOrganizationsEnvironmentRequest) GetOrganizationsEnvironment() *GoogleCloudApigeeV1Environment {
	if x != nil {
		return x.OrganizationsEnvironment
	}
	return nil
}

type UpdateSecurityActionsConfigOrganizationsEnvironmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                     *string                                   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	UpdateMask               *string                                   `protobuf:"bytes,2,opt,name=update_mask,json=updateMask" json:"update_mask,omitempty"`
	OrganizationsEnvironment *GoogleCloudApigeeV1SecurityActionsConfig `protobuf:"bytes,3,opt,name=organizations_environment,json=organizationsEnvironment" json:"organizations_environment,omitempty"`
}

func (x *UpdateSecurityActionsConfigOrganizationsEnvironmentRequest) Reset() {
	*x = UpdateSecurityActionsConfigOrganizationsEnvironmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[438]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSecurityActionsConfigOrganizationsEnvironmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSecurityActionsConfigOrganizationsEnvironmentRequest) ProtoMessage() {}

func (x *UpdateSecurityActionsConfigOrganizationsEnvironmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[438]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSecurityActionsConfigOrganizationsEnvironmentRequest.ProtoReflect.Descriptor instead.
func (*UpdateSecurityActionsConfigOrganizationsEnvironmentRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{438}
}

func (x *UpdateSecurityActionsConfigOrganizationsEnvironmentRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UpdateSecurityActionsConfigOrganizationsEnvironmentRequest) GetUpdateMask() string {
	if x != nil && x.UpdateMask != nil {
		return *x.UpdateMask
	}
	return ""
}

func (x *UpdateSecurityActionsConfigOrganizationsEnvironmentRequest) GetOrganizationsEnvironment() *GoogleCloudApigeeV1SecurityActionsConfig {
	if x != nil {
		return x.OrganizationsEnvironment
	}
	return nil
}

type UpdateTraceConfigOrganizationsEnvironmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                     *string                         `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	UpdateMask               *string                         `protobuf:"bytes,2,opt,name=update_mask,json=updateMask" json:"update_mask,omitempty"`
	OrganizationsEnvironment *GoogleCloudApigeeV1TraceConfig `protobuf:"bytes,3,opt,name=organizations_environment,json=organizationsEnvironment" json:"organizations_environment,omitempty"`
}

func (x *UpdateTraceConfigOrganizationsEnvironmentRequest) Reset() {
	*x = UpdateTraceConfigOrganizationsEnvironmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[439]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTraceConfigOrganizationsEnvironmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTraceConfigOrganizationsEnvironmentRequest) ProtoMessage() {}

func (x *UpdateTraceConfigOrganizationsEnvironmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[439]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTraceConfigOrganizationsEnvironmentRequest.ProtoReflect.Descriptor instead.
func (*UpdateTraceConfigOrganizationsEnvironmentRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{439}
}

func (x *UpdateTraceConfigOrganizationsEnvironmentRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UpdateTraceConfigOrganizationsEnvironmentRequest) GetUpdateMask() string {
	if x != nil && x.UpdateMask != nil {
		return *x.UpdateMask
	}
	return ""
}

func (x *UpdateTraceConfigOrganizationsEnvironmentRequest) GetOrganizationsEnvironment() *GoogleCloudApigeeV1TraceConfig {
	if x != nil {
		return x.OrganizationsEnvironment
	}
	return nil
}

type SetAddonEnablementOrganizationsEnvironmentsAddonsConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                                  *string                                       `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	OrganizationsEnvironmentsAddonsConfig *GoogleCloudApigeeV1SetAddonEnablementRequest `protobuf:"bytes,2,opt,name=organizations_environments_addons_config,json=organizationsEnvironmentsAddonsConfig" json:"organizations_environments_addons_config,omitempty"`
}

func (x *SetAddonEnablementOrganizationsEnvironmentsAddonsConfigRequest) Reset() {
	*x = SetAddonEnablementOrganizationsEnvironmentsAddonsConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[440]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetAddonEnablementOrganizationsEnvironmentsAddonsConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAddonEnablementOrganizationsEnvironmentsAddonsConfigRequest) ProtoMessage() {}

func (x *SetAddonEnablementOrganizationsEnvironmentsAddonsConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[440]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAddonEnablementOrganizationsEnvironmentsAddonsConfigRequest.ProtoReflect.Descriptor instead.
func (*SetAddonEnablementOrganizationsEnvironmentsAddonsConfigRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{440}
}

func (x *SetAddonEnablementOrganizationsEnvironmentsAddonsConfigRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *SetAddonEnablementOrganizationsEnvironmentsAddonsConfigRequest) GetOrganizationsEnvironmentsAddonsConfig() *GoogleCloudApigeeV1SetAddonEnablementRequest {
	if x != nil {
		return x.OrganizationsEnvironmentsAddonsConfig
	}
	return nil
}

type GetSchemav2OrganizationsEnvironmentsAnalyticsAdminRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DisableCache *bool   `protobuf:"varint,1,opt,name=disable_cache,json=disableCache" json:"disable_cache,omitempty"`
	Name         *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Type         *string `protobuf:"bytes,3,opt,name=type" json:"type,omitempty"`
}

func (x *GetSchemav2OrganizationsEnvironmentsAnalyticsAdminRequest) Reset() {
	*x = GetSchemav2OrganizationsEnvironmentsAnalyticsAdminRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[441]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSchemav2OrganizationsEnvironmentsAnalyticsAdminRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSchemav2OrganizationsEnvironmentsAnalyticsAdminRequest) ProtoMessage() {}

func (x *GetSchemav2OrganizationsEnvironmentsAnalyticsAdminRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[441]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSchemav2OrganizationsEnvironmentsAnalyticsAdminRequest.ProtoReflect.Descriptor instead.
func (*GetSchemav2OrganizationsEnvironmentsAnalyticsAdminRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{441}
}

func (x *GetSchemav2OrganizationsEnvironmentsAnalyticsAdminRequest) GetDisableCache() bool {
	if x != nil && x.DisableCache != nil {
		return *x.DisableCache
	}
	return false
}

func (x *GetSchemav2OrganizationsEnvironmentsAnalyticsAdminRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GetSchemav2OrganizationsEnvironmentsAnalyticsAdminRequest) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

type CreateOrganizationsEnvironmentsAnalyticsExportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent                                   *string                           `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
	OrganizationsEnvironmentsAnalyticsExport *GoogleCloudApigeeV1ExportRequest `protobuf:"bytes,2,opt,name=organizations_environments_analytics_export,json=organizationsEnvironmentsAnalyticsExport" json:"organizations_environments_analytics_export,omitempty"`
}

func (x *CreateOrganizationsEnvironmentsAnalyticsExportRequest) Reset() {
	*x = CreateOrganizationsEnvironmentsAnalyticsExportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[442]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrganizationsEnvironmentsAnalyticsExportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrganizationsEnvironmentsAnalyticsExportRequest) ProtoMessage() {}

func (x *CreateOrganizationsEnvironmentsAnalyticsExportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[442]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrganizationsEnvironmentsAnalyticsExportRequest.ProtoReflect.Descriptor instead.
func (*CreateOrganizationsEnvironmentsAnalyticsExportRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{442}
}

func (x *CreateOrganizationsEnvironmentsAnalyticsExportRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

func (x *CreateOrganizationsEnvironmentsAnalyticsExportRequest) GetOrganizationsEnvironmentsAnalyticsExport() *GoogleCloudApigeeV1ExportRequest {
	if x != nil {
		return x.OrganizationsEnvironmentsAnalyticsExport
	}
	return nil
}

type GetOrganizationsEnvironmentsAnalyticsExportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *GetOrganizationsEnvironmentsAnalyticsExportRequest) Reset() {
	*x = GetOrganizationsEnvironmentsAnalyticsExportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[443]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrganizationsEnvironmentsAnalyticsExportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrganizationsEnvironmentsAnalyticsExportRequest) ProtoMessage() {}

func (x *GetOrganizationsEnvironmentsAnalyticsExportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[443]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrganizationsEnvironmentsAnalyticsExportRequest.ProtoReflect.Descriptor instead.
func (*GetOrganizationsEnvironmentsAnalyticsExportRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{443}
}

func (x *GetOrganizationsEnvironmentsAnalyticsExportRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type ListOrganizationsEnvironmentsAnalyticsExportsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent *string `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
}

func (x *ListOrganizationsEnvironmentsAnalyticsExportsRequest) Reset() {
	*x = ListOrganizationsEnvironmentsAnalyticsExportsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[444]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrganizationsEnvironmentsAnalyticsExportsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrganizationsEnvironmentsAnalyticsExportsRequest) ProtoMessage() {}

func (x *ListOrganizationsEnvironmentsAnalyticsExportsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[444]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrganizationsEnvironmentsAnalyticsExportsRequest.ProtoReflect.Descriptor instead.
func (*ListOrganizationsEnvironmentsAnalyticsExportsRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{444}
}

func (x *ListOrganizationsEnvironmentsAnalyticsExportsRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

type ListOrganizationsEnvironmentsApisDeploymentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent *string `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
}

func (x *ListOrganizationsEnvironmentsApisDeploymentsRequest) Reset() {
	*x = ListOrganizationsEnvironmentsApisDeploymentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[445]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrganizationsEnvironmentsApisDeploymentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrganizationsEnvironmentsApisDeploymentsRequest) ProtoMessage() {}

func (x *ListOrganizationsEnvironmentsApisDeploymentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[445]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrganizationsEnvironmentsApisDeploymentsRequest.ProtoReflect.Descriptor instead.
func (*ListOrganizationsEnvironmentsApisDeploymentsRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{445}
}

func (x *ListOrganizationsEnvironmentsApisDeploymentsRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

type DeployOrganizationsEnvironmentsApisRevisionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name             *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Override         *bool   `protobuf:"varint,2,opt,name=override" json:"override,omitempty"`
	SequencedRollout *bool   `protobuf:"varint,3,opt,name=sequenced_rollout,json=sequencedRollout" json:"sequenced_rollout,omitempty"`
	ServiceAccount   *string `protobuf:"bytes,4,opt,name=service_account,json=serviceAccount" json:"service_account,omitempty"`
}

func (x *DeployOrganizationsEnvironmentsApisRevisionRequest) Reset() {
	*x = DeployOrganizationsEnvironmentsApisRevisionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[446]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeployOrganizationsEnvironmentsApisRevisionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeployOrganizationsEnvironmentsApisRevisionRequest) ProtoMessage() {}

func (x *DeployOrganizationsEnvironmentsApisRevisionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[446]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeployOrganizationsEnvironmentsApisRevisionRequest.ProtoReflect.Descriptor instead.
func (*DeployOrganizationsEnvironmentsApisRevisionRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{446}
}

func (x *DeployOrganizationsEnvironmentsApisRevisionRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *DeployOrganizationsEnvironmentsApisRevisionRequest) GetOverride() bool {
	if x != nil && x.Override != nil {
		return *x.Override
	}
	return false
}

func (x *DeployOrganizationsEnvironmentsApisRevisionRequest) GetSequencedRollout() bool {
	if x != nil && x.SequencedRollout != nil {
		return *x.SequencedRollout
	}
	return false
}

func (x *DeployOrganizationsEnvironmentsApisRevisionRequest) GetServiceAccount() string {
	if x != nil && x.ServiceAccount != nil {
		return *x.ServiceAccount
	}
	return ""
}

type GetDeploymentsOrganizationsEnvironmentsApisRevisionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *GetDeploymentsOrganizationsEnvironmentsApisRevisionRequest) Reset() {
	*x = GetDeploymentsOrganizationsEnvironmentsApisRevisionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[447]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeploymentsOrganizationsEnvironmentsApisRevisionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeploymentsOrganizationsEnvironmentsApisRevisionRequest) ProtoMessage() {}

func (x *GetDeploymentsOrganizationsEnvironmentsApisRevisionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[447]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeploymentsOrganizationsEnvironmentsApisRevisionRequest.ProtoReflect.Descriptor instead.
func (*GetDeploymentsOrganizationsEnvironmentsApisRevisionRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{447}
}

func (x *GetDeploymentsOrganizationsEnvironmentsApisRevisionRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type UndeployOrganizationsEnvironmentsApisRevisionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name             *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	SequencedRollout *bool   `protobuf:"varint,2,opt,name=sequenced_rollout,json=sequencedRollout" json:"sequenced_rollout,omitempty"`
}

func (x *UndeployOrganizationsEnvironmentsApisRevisionRequest) Reset() {
	*x = UndeployOrganizationsEnvironmentsApisRevisionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[448]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UndeployOrganizationsEnvironmentsApisRevisionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UndeployOrganizationsEnvironmentsApisRevisionRequest) ProtoMessage() {}

func (x *UndeployOrganizationsEnvironmentsApisRevisionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[448]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UndeployOrganizationsEnvironmentsApisRevisionRequest.ProtoReflect.Descriptor instead.
func (*UndeployOrganizationsEnvironmentsApisRevisionRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{448}
}

func (x *UndeployOrganizationsEnvironmentsApisRevisionRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UndeployOrganizationsEnvironmentsApisRevisionRequest) GetSequencedRollout() bool {
	if x != nil && x.SequencedRollout != nil {
		return *x.SequencedRollout
	}
	return false
}

type CreateOrganizationsEnvironmentsApisRevisionsDebugsessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent                                             *string                          `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
	Timeout                                            *string                          `protobuf:"bytes,2,opt,name=timeout" json:"timeout,omitempty"`
	OrganizationsEnvironmentsApisRevisionsDebugsession *GoogleCloudApigeeV1DebugSession `protobuf:"bytes,3,opt,name=organizations_environments_apis_revisions_debugsession,json=organizationsEnvironmentsApisRevisionsDebugsession" json:"organizations_environments_apis_revisions_debugsession,omitempty"`
}

func (x *CreateOrganizationsEnvironmentsApisRevisionsDebugsessionRequest) Reset() {
	*x = CreateOrganizationsEnvironmentsApisRevisionsDebugsessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[449]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrganizationsEnvironmentsApisRevisionsDebugsessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrganizationsEnvironmentsApisRevisionsDebugsessionRequest) ProtoMessage() {}

func (x *CreateOrganizationsEnvironmentsApisRevisionsDebugsessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[449]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrganizationsEnvironmentsApisRevisionsDebugsessionRequest.ProtoReflect.Descriptor instead.
func (*CreateOrganizationsEnvironmentsApisRevisionsDebugsessionRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{449}
}

func (x *CreateOrganizationsEnvironmentsApisRevisionsDebugsessionRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

func (x *CreateOrganizationsEnvironmentsApisRevisionsDebugsessionRequest) GetTimeout() string {
	if x != nil && x.Timeout != nil {
		return *x.Timeout
	}
	return ""
}

func (x *CreateOrganizationsEnvironmentsApisRevisionsDebugsessionRequest) GetOrganizationsEnvironmentsApisRevisionsDebugsession() *GoogleCloudApigeeV1DebugSession {
	if x != nil {
		return x.OrganizationsEnvironmentsApisRevisionsDebugsession
	}
	return nil
}

type DeleteDataOrganizationsEnvironmentsApisRevisionsDebugsessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *DeleteDataOrganizationsEnvironmentsApisRevisionsDebugsessionRequest) Reset() {
	*x = DeleteDataOrganizationsEnvironmentsApisRevisionsDebugsessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[450]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDataOrganizationsEnvironmentsApisRevisionsDebugsessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDataOrganizationsEnvironmentsApisRevisionsDebugsessionRequest) ProtoMessage() {}

func (x *DeleteDataOrganizationsEnvironmentsApisRevisionsDebugsessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[450]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDataOrganizationsEnvironmentsApisRevisionsDebugsessionRequest.ProtoReflect.Descriptor instead.
func (*DeleteDataOrganizationsEnvironmentsApisRevisionsDebugsessionRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{450}
}

func (x *DeleteDataOrganizationsEnvironmentsApisRevisionsDebugsessionRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GetOrganizationsEnvironmentsApisRevisionsDebugsessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *GetOrganizationsEnvironmentsApisRevisionsDebugsessionRequest) Reset() {
	*x = GetOrganizationsEnvironmentsApisRevisionsDebugsessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[451]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrganizationsEnvironmentsApisRevisionsDebugsessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrganizationsEnvironmentsApisRevisionsDebugsessionRequest) ProtoMessage() {}

func (x *GetOrganizationsEnvironmentsApisRevisionsDebugsessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[451]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrganizationsEnvironmentsApisRevisionsDebugsessionRequest.ProtoReflect.Descriptor instead.
func (*GetOrganizationsEnvironmentsApisRevisionsDebugsessionRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{451}
}

func (x *GetOrganizationsEnvironmentsApisRevisionsDebugsessionRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type ListOrganizationsEnvironmentsApisRevisionsDebugsessionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize  *int32  `protobuf:"varint,1,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	PageToken *string `protobuf:"bytes,2,opt,name=page_token,json=pageToken" json:"page_token,omitempty"`
	Parent    *string `protobuf:"bytes,3,opt,name=parent" json:"parent,omitempty"`
}

func (x *ListOrganizationsEnvironmentsApisRevisionsDebugsessionsRequest) Reset() {
	*x = ListOrganizationsEnvironmentsApisRevisionsDebugsessionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[452]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrganizationsEnvironmentsApisRevisionsDebugsessionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrganizationsEnvironmentsApisRevisionsDebugsessionsRequest) ProtoMessage() {}

func (x *ListOrganizationsEnvironmentsApisRevisionsDebugsessionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[452]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrganizationsEnvironmentsApisRevisionsDebugsessionsRequest.ProtoReflect.Descriptor instead.
func (*ListOrganizationsEnvironmentsApisRevisionsDebugsessionsRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{452}
}

func (x *ListOrganizationsEnvironmentsApisRevisionsDebugsessionsRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *ListOrganizationsEnvironmentsApisRevisionsDebugsessionsRequest) GetPageToken() string {
	if x != nil && x.PageToken != nil {
		return *x.PageToken
	}
	return ""
}

func (x *ListOrganizationsEnvironmentsApisRevisionsDebugsessionsRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

type GetOrganizationsEnvironmentsApisRevisionsDebugsessionsDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *GetOrganizationsEnvironmentsApisRevisionsDebugsessionsDataRequest) Reset() {
	*x = GetOrganizationsEnvironmentsApisRevisionsDebugsessionsDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[453]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrganizationsEnvironmentsApisRevisionsDebugsessionsDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrganizationsEnvironmentsApisRevisionsDebugsessionsDataRequest) ProtoMessage() {}

func (x *GetOrganizationsEnvironmentsApisRevisionsDebugsessionsDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[453]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrganizationsEnvironmentsApisRevisionsDebugsessionsDataRequest.ProtoReflect.Descriptor instead.
func (*GetOrganizationsEnvironmentsApisRevisionsDebugsessionsDataRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{453}
}

func (x *GetOrganizationsEnvironmentsApisRevisionsDebugsessionsDataRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GenerateDeployChangeReportOrganizationsEnvironmentsApisRevisionsDeploymentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Override *bool   `protobuf:"varint,2,opt,name=override" json:"override,omitempty"`
}

func (x *GenerateDeployChangeReportOrganizationsEnvironmentsApisRevisionsDeploymentRequest) Reset() {
	*x = GenerateDeployChangeReportOrganizationsEnvironmentsApisRevisionsDeploymentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[454]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateDeployChangeReportOrganizationsEnvironmentsApisRevisionsDeploymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateDeployChangeReportOrganizationsEnvironmentsApisRevisionsDeploymentRequest) ProtoMessage() {
}

func (x *GenerateDeployChangeReportOrganizationsEnvironmentsApisRevisionsDeploymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[454]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateDeployChangeReportOrganizationsEnvironmentsApisRevisionsDeploymentRequest.ProtoReflect.Descriptor instead.
func (*GenerateDeployChangeReportOrganizationsEnvironmentsApisRevisionsDeploymentRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{454}
}

func (x *GenerateDeployChangeReportOrganizationsEnvironmentsApisRevisionsDeploymentRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GenerateDeployChangeReportOrganizationsEnvironmentsApisRevisionsDeploymentRequest) GetOverride() bool {
	if x != nil && x.Override != nil {
		return *x.Override
	}
	return false
}

type GenerateUndeployChangeReportOrganizationsEnvironmentsApisRevisionsDeploymentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *GenerateUndeployChangeReportOrganizationsEnvironmentsApisRevisionsDeploymentRequest) Reset() {
	*x = GenerateUndeployChangeReportOrganizationsEnvironmentsApisRevisionsDeploymentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[455]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateUndeployChangeReportOrganizationsEnvironmentsApisRevisionsDeploymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateUndeployChangeReportOrganizationsEnvironmentsApisRevisionsDeploymentRequest) ProtoMessage() {
}

func (x *GenerateUndeployChangeReportOrganizationsEnvironmentsApisRevisionsDeploymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[455]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateUndeployChangeReportOrganizationsEnvironmentsApisRevisionsDeploymentRequest.ProtoReflect.Descriptor instead.
func (*GenerateUndeployChangeReportOrganizationsEnvironmentsApisRevisionsDeploymentRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{455}
}

func (x *GenerateUndeployChangeReportOrganizationsEnvironmentsApisRevisionsDeploymentRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type CreateOrganizationsEnvironmentsArchiveDeploymentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent                                     *string                               `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
	OrganizationsEnvironmentsArchiveDeployment *GoogleCloudApigeeV1ArchiveDeployment `protobuf:"bytes,2,opt,name=organizations_environments_archive_deployment,json=organizationsEnvironmentsArchiveDeployment" json:"organizations_environments_archive_deployment,omitempty"`
}

func (x *CreateOrganizationsEnvironmentsArchiveDeploymentRequest) Reset() {
	*x = CreateOrganizationsEnvironmentsArchiveDeploymentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[456]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrganizationsEnvironmentsArchiveDeploymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrganizationsEnvironmentsArchiveDeploymentRequest) ProtoMessage() {}

func (x *CreateOrganizationsEnvironmentsArchiveDeploymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[456]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrganizationsEnvironmentsArchiveDeploymentRequest.ProtoReflect.Descriptor instead.
func (*CreateOrganizationsEnvironmentsArchiveDeploymentRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{456}
}

func (x *CreateOrganizationsEnvironmentsArchiveDeploymentRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

func (x *CreateOrganizationsEnvironmentsArchiveDeploymentRequest) GetOrganizationsEnvironmentsArchiveDeployment() *GoogleCloudApigeeV1ArchiveDeployment {
	if x != nil {
		return x.OrganizationsEnvironmentsArchiveDeployment
	}
	return nil
}

type DeleteOrganizationsEnvironmentsArchiveDeploymentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *DeleteOrganizationsEnvironmentsArchiveDeploymentRequest) Reset() {
	*x = DeleteOrganizationsEnvironmentsArchiveDeploymentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[457]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrganizationsEnvironmentsArchiveDeploymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrganizationsEnvironmentsArchiveDeploymentRequest) ProtoMessage() {}

func (x *DeleteOrganizationsEnvironmentsArchiveDeploymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[457]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrganizationsEnvironmentsArchiveDeploymentRequest.ProtoReflect.Descriptor instead.
func (*DeleteOrganizationsEnvironmentsArchiveDeploymentRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{457}
}

func (x *DeleteOrganizationsEnvironmentsArchiveDeploymentRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GenerateDownloadUrlOrganizationsEnvironmentsArchiveDeploymentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                                       *string                                        `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	OrganizationsEnvironmentsArchiveDeployment *GoogleCloudApigeeV1GenerateDownloadUrlRequest `protobuf:"bytes,2,opt,name=organizations_environments_archive_deployment,json=organizationsEnvironmentsArchiveDeployment" json:"organizations_environments_archive_deployment,omitempty"`
}

func (x *GenerateDownloadUrlOrganizationsEnvironmentsArchiveDeploymentRequest) Reset() {
	*x = GenerateDownloadUrlOrganizationsEnvironmentsArchiveDeploymentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[458]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateDownloadUrlOrganizationsEnvironmentsArchiveDeploymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateDownloadUrlOrganizationsEnvironmentsArchiveDeploymentRequest) ProtoMessage() {}

func (x *GenerateDownloadUrlOrganizationsEnvironmentsArchiveDeploymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[458]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateDownloadUrlOrganizationsEnvironmentsArchiveDeploymentRequest.ProtoReflect.Descriptor instead.
func (*GenerateDownloadUrlOrganizationsEnvironmentsArchiveDeploymentRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{458}
}

func (x *GenerateDownloadUrlOrganizationsEnvironmentsArchiveDeploymentRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GenerateDownloadUrlOrganizationsEnvironmentsArchiveDeploymentRequest) GetOrganizationsEnvironmentsArchiveDeployment() *GoogleCloudApigeeV1GenerateDownloadUrlRequest {
	if x != nil {
		return x.OrganizationsEnvironmentsArchiveDeployment
	}
	return nil
}

type GenerateUploadUrlOrganizationsEnvironmentsArchiveDeploymentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent                                     *string                                      `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
	OrganizationsEnvironmentsArchiveDeployment *GoogleCloudApigeeV1GenerateUploadUrlRequest `protobuf:"bytes,2,opt,name=organizations_environments_archive_deployment,json=organizationsEnvironmentsArchiveDeployment" json:"organizations_environments_archive_deployment,omitempty"`
}

func (x *GenerateUploadUrlOrganizationsEnvironmentsArchiveDeploymentRequest) Reset() {
	*x = GenerateUploadUrlOrganizationsEnvironmentsArchiveDeploymentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[459]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateUploadUrlOrganizationsEnvironmentsArchiveDeploymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateUploadUrlOrganizationsEnvironmentsArchiveDeploymentRequest) ProtoMessage() {}

func (x *GenerateUploadUrlOrganizationsEnvironmentsArchiveDeploymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[459]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateUploadUrlOrganizationsEnvironmentsArchiveDeploymentRequest.ProtoReflect.Descriptor instead.
func (*GenerateUploadUrlOrganizationsEnvironmentsArchiveDeploymentRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{459}
}

func (x *GenerateUploadUrlOrganizationsEnvironmentsArchiveDeploymentRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

func (x *GenerateUploadUrlOrganizationsEnvironmentsArchiveDeploymentRequest) GetOrganizationsEnvironmentsArchiveDeployment() *GoogleCloudApigeeV1GenerateUploadUrlRequest {
	if x != nil {
		return x.OrganizationsEnvironmentsArchiveDeployment
	}
	return nil
}

type GetOrganizationsEnvironmentsArchiveDeploymentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *GetOrganizationsEnvironmentsArchiveDeploymentRequest) Reset() {
	*x = GetOrganizationsEnvironmentsArchiveDeploymentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[460]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrganizationsEnvironmentsArchiveDeploymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrganizationsEnvironmentsArchiveDeploymentRequest) ProtoMessage() {}

func (x *GetOrganizationsEnvironmentsArchiveDeploymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[460]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrganizationsEnvironmentsArchiveDeploymentRequest.ProtoReflect.Descriptor instead.
func (*GetOrganizationsEnvironmentsArchiveDeploymentRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{460}
}

func (x *GetOrganizationsEnvironmentsArchiveDeploymentRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type ListOrganizationsEnvironmentsArchiveDeploymentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filter    *string `protobuf:"bytes,1,opt,name=filter" json:"filter,omitempty"`
	PageSize  *int32  `protobuf:"varint,2,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	PageToken *string `protobuf:"bytes,3,opt,name=page_token,json=pageToken" json:"page_token,omitempty"`
	Parent    *string `protobuf:"bytes,4,opt,name=parent" json:"parent,omitempty"`
}

func (x *ListOrganizationsEnvironmentsArchiveDeploymentsRequest) Reset() {
	*x = ListOrganizationsEnvironmentsArchiveDeploymentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[461]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrganizationsEnvironmentsArchiveDeploymentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrganizationsEnvironmentsArchiveDeploymentsRequest) ProtoMessage() {}

func (x *ListOrganizationsEnvironmentsArchiveDeploymentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[461]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrganizationsEnvironmentsArchiveDeploymentsRequest.ProtoReflect.Descriptor instead.
func (*ListOrganizationsEnvironmentsArchiveDeploymentsRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{461}
}

func (x *ListOrganizationsEnvironmentsArchiveDeploymentsRequest) GetFilter() string {
	if x != nil && x.Filter != nil {
		return *x.Filter
	}
	return ""
}

func (x *ListOrganizationsEnvironmentsArchiveDeploymentsRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *ListOrganizationsEnvironmentsArchiveDeploymentsRequest) GetPageToken() string {
	if x != nil && x.PageToken != nil {
		return *x.PageToken
	}
	return ""
}

func (x *ListOrganizationsEnvironmentsArchiveDeploymentsRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

type PatchOrganizationsEnvironmentsArchiveDeploymentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                                       *string                               `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	UpdateMask                                 *string                               `protobuf:"bytes,2,opt,name=update_mask,json=updateMask" json:"update_mask,omitempty"`
	OrganizationsEnvironmentsArchiveDeployment *GoogleCloudApigeeV1ArchiveDeployment `protobuf:"bytes,3,opt,name=organizations_environments_archive_deployment,json=organizationsEnvironmentsArchiveDeployment" json:"organizations_environments_archive_deployment,omitempty"`
}

func (x *PatchOrganizationsEnvironmentsArchiveDeploymentRequest) Reset() {
	*x = PatchOrganizationsEnvironmentsArchiveDeploymentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[462]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PatchOrganizationsEnvironmentsArchiveDeploymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatchOrganizationsEnvironmentsArchiveDeploymentRequest) ProtoMessage() {}

func (x *PatchOrganizationsEnvironmentsArchiveDeploymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[462]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatchOrganizationsEnvironmentsArchiveDeploymentRequest.ProtoReflect.Descriptor instead.
func (*PatchOrganizationsEnvironmentsArchiveDeploymentRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{462}
}

func (x *PatchOrganizationsEnvironmentsArchiveDeploymentRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *PatchOrganizationsEnvironmentsArchiveDeploymentRequest) GetUpdateMask() string {
	if x != nil && x.UpdateMask != nil {
		return *x.UpdateMask
	}
	return ""
}

func (x *PatchOrganizationsEnvironmentsArchiveDeploymentRequest) GetOrganizationsEnvironmentsArchiveDeployment() *GoogleCloudApigeeV1ArchiveDeployment {
	if x != nil {
		return x.OrganizationsEnvironmentsArchiveDeployment
	}
	return nil
}

type DeleteOrganizationsEnvironmentsCacheRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *DeleteOrganizationsEnvironmentsCacheRequest) Reset() {
	*x = DeleteOrganizationsEnvironmentsCacheRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[463]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrganizationsEnvironmentsCacheRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrganizationsEnvironmentsCacheRequest) ProtoMessage() {}

func (x *DeleteOrganizationsEnvironmentsCacheRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[463]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrganizationsEnvironmentsCacheRequest.ProtoReflect.Descriptor instead.
func (*DeleteOrganizationsEnvironmentsCacheRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{463}
}

func (x *DeleteOrganizationsEnvironmentsCacheRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type ListOrganizationsEnvironmentsDeploymentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent      *string `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
	SharedFlows *bool   `protobuf:"varint,2,opt,name=shared_flows,json=sharedFlows" json:"shared_flows,omitempty"`
}

func (x *ListOrganizationsEnvironmentsDeploymentsRequest) Reset() {
	*x = ListOrganizationsEnvironmentsDeploymentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[464]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrganizationsEnvironmentsDeploymentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrganizationsEnvironmentsDeploymentsRequest) ProtoMessage() {}

func (x *ListOrganizationsEnvironmentsDeploymentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[464]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrganizationsEnvironmentsDeploymentsRequest.ProtoReflect.Descriptor instead.
func (*ListOrganizationsEnvironmentsDeploymentsRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{464}
}

func (x *ListOrganizationsEnvironmentsDeploymentsRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

func (x *ListOrganizationsEnvironmentsDeploymentsRequest) GetSharedFlows() bool {
	if x != nil && x.SharedFlows != nil {
		return *x.SharedFlows
	}
	return false
}

type AttachSharedFlowToFlowHookOrganizationsEnvironmentsFlowhookRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                              *string                      `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	OrganizationsEnvironmentsFlowhook *GoogleCloudApigeeV1FlowHook `protobuf:"bytes,2,opt,name=organizations_environments_flowhook,json=organizationsEnvironmentsFlowhook" json:"organizations_environments_flowhook,omitempty"`
}

func (x *AttachSharedFlowToFlowHookOrganizationsEnvironmentsFlowhookRequest) Reset() {
	*x = AttachSharedFlowToFlowHookOrganizationsEnvironmentsFlowhookRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[465]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttachSharedFlowToFlowHookOrganizationsEnvironmentsFlowhookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachSharedFlowToFlowHookOrganizationsEnvironmentsFlowhookRequest) ProtoMessage() {}

func (x *AttachSharedFlowToFlowHookOrganizationsEnvironmentsFlowhookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[465]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachSharedFlowToFlowHookOrganizationsEnvironmentsFlowhookRequest.ProtoReflect.Descriptor instead.
func (*AttachSharedFlowToFlowHookOrganizationsEnvironmentsFlowhookRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{465}
}

func (x *AttachSharedFlowToFlowHookOrganizationsEnvironmentsFlowhookRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *AttachSharedFlowToFlowHookOrganizationsEnvironmentsFlowhookRequest) GetOrganizationsEnvironmentsFlowhook() *GoogleCloudApigeeV1FlowHook {
	if x != nil {
		return x.OrganizationsEnvironmentsFlowhook
	}
	return nil
}

type DetachSharedFlowFromFlowHookOrganizationsEnvironmentsFlowhookRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *DetachSharedFlowFromFlowHookOrganizationsEnvironmentsFlowhookRequest) Reset() {
	*x = DetachSharedFlowFromFlowHookOrganizationsEnvironmentsFlowhookRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[466]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetachSharedFlowFromFlowHookOrganizationsEnvironmentsFlowhookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetachSharedFlowFromFlowHookOrganizationsEnvironmentsFlowhookRequest) ProtoMessage() {}

func (x *DetachSharedFlowFromFlowHookOrganizationsEnvironmentsFlowhookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[466]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetachSharedFlowFromFlowHookOrganizationsEnvironmentsFlowhookRequest.ProtoReflect.Descriptor instead.
func (*DetachSharedFlowFromFlowHookOrganizationsEnvironmentsFlowhookRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{466}
}

func (x *DetachSharedFlowFromFlowHookOrganizationsEnvironmentsFlowhookRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GetOrganizationsEnvironmentsFlowhookRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *GetOrganizationsEnvironmentsFlowhookRequest) Reset() {
	*x = GetOrganizationsEnvironmentsFlowhookRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[467]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrganizationsEnvironmentsFlowhookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrganizationsEnvironmentsFlowhookRequest) ProtoMessage() {}

func (x *GetOrganizationsEnvironmentsFlowhookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[467]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrganizationsEnvironmentsFlowhookRequest.ProtoReflect.Descriptor instead.
func (*GetOrganizationsEnvironmentsFlowhookRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{467}
}

func (x *GetOrganizationsEnvironmentsFlowhookRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type CreateOrganizationsEnvironmentsKeystoreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                              *string                      `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Parent                            *string                      `protobuf:"bytes,2,opt,name=parent" json:"parent,omitempty"`
	OrganizationsEnvironmentsKeystore *GoogleCloudApigeeV1Keystore `protobuf:"bytes,3,opt,name=organizations_environments_keystore,json=organizationsEnvironmentsKeystore" json:"organizations_environments_keystore,omitempty"`
}

func (x *CreateOrganizationsEnvironmentsKeystoreRequest) Reset() {
	*x = CreateOrganizationsEnvironmentsKeystoreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[468]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrganizationsEnvironmentsKeystoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrganizationsEnvironmentsKeystoreRequest) ProtoMessage() {}

func (x *CreateOrganizationsEnvironmentsKeystoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[468]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrganizationsEnvironmentsKeystoreRequest.ProtoReflect.Descriptor instead.
func (*CreateOrganizationsEnvironmentsKeystoreRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{468}
}

func (x *CreateOrganizationsEnvironmentsKeystoreRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CreateOrganizationsEnvironmentsKeystoreRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

func (x *CreateOrganizationsEnvironmentsKeystoreRequest) GetOrganizationsEnvironmentsKeystore() *GoogleCloudApigeeV1Keystore {
	if x != nil {
		return x.OrganizationsEnvironmentsKeystore
	}
	return nil
}

type DeleteOrganizationsEnvironmentsKeystoreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *DeleteOrganizationsEnvironmentsKeystoreRequest) Reset() {
	*x = DeleteOrganizationsEnvironmentsKeystoreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[469]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrganizationsEnvironmentsKeystoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrganizationsEnvironmentsKeystoreRequest) ProtoMessage() {}

func (x *DeleteOrganizationsEnvironmentsKeystoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[469]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrganizationsEnvironmentsKeystoreRequest.ProtoReflect.Descriptor instead.
func (*DeleteOrganizationsEnvironmentsKeystoreRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{469}
}

func (x *DeleteOrganizationsEnvironmentsKeystoreRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GetOrganizationsEnvironmentsKeystoreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *GetOrganizationsEnvironmentsKeystoreRequest) Reset() {
	*x = GetOrganizationsEnvironmentsKeystoreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[470]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrganizationsEnvironmentsKeystoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrganizationsEnvironmentsKeystoreRequest) ProtoMessage() {}

func (x *GetOrganizationsEnvironmentsKeystoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[470]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrganizationsEnvironmentsKeystoreRequest.ProtoReflect.Descriptor instead.
func (*GetOrganizationsEnvironmentsKeystoreRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{470}
}

func (x *GetOrganizationsEnvironmentsKeystoreRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type CreateOrganizationsEnvironmentsKeystoresAliaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	XPassword                                *string            `protobuf:"bytes,1,opt,name=_password,json=Password" json:"_password,omitempty"`
	Alias                                    *string            `protobuf:"bytes,2,opt,name=alias" json:"alias,omitempty"`
	Format                                   *string            `protobuf:"bytes,3,opt,name=format" json:"format,omitempty"`
	IgnoreExpiryValidation                   *bool              `protobuf:"varint,4,opt,name=ignore_expiry_validation,json=ignoreExpiryValidation" json:"ignore_expiry_validation,omitempty"`
	IgnoreNewlineValidation                  *bool              `protobuf:"varint,5,opt,name=ignore_newline_validation,json=ignoreNewlineValidation" json:"ignore_newline_validation,omitempty"`
	Parent                                   *string            `protobuf:"bytes,6,opt,name=parent" json:"parent,omitempty"`
	OrganizationsEnvironmentsKeystoresAliase *GoogleApiHttpBody `protobuf:"bytes,7,opt,name=organizations_environments_keystores_aliase,json=organizationsEnvironmentsKeystoresAliase" json:"organizations_environments_keystores_aliase,omitempty"`
}

func (x *CreateOrganizationsEnvironmentsKeystoresAliaseRequest) Reset() {
	*x = CreateOrganizationsEnvironmentsKeystoresAliaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[471]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrganizationsEnvironmentsKeystoresAliaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrganizationsEnvironmentsKeystoresAliaseRequest) ProtoMessage() {}

func (x *CreateOrganizationsEnvironmentsKeystoresAliaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[471]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrganizationsEnvironmentsKeystoresAliaseRequest.ProtoReflect.Descriptor instead.
func (*CreateOrganizationsEnvironmentsKeystoresAliaseRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{471}
}

func (x *CreateOrganizationsEnvironmentsKeystoresAliaseRequest) GetXPassword() string {
	if x != nil && x.XPassword != nil {
		return *x.XPassword
	}
	return ""
}

func (x *CreateOrganizationsEnvironmentsKeystoresAliaseRequest) GetAlias() string {
	if x != nil && x.Alias != nil {
		return *x.Alias
	}
	return ""
}

func (x *CreateOrganizationsEnvironmentsKeystoresAliaseRequest) GetFormat() string {
	if x != nil && x.Format != nil {
		return *x.Format
	}
	return ""
}

func (x *CreateOrganizationsEnvironmentsKeystoresAliaseRequest) GetIgnoreExpiryValidation() bool {
	if x != nil && x.IgnoreExpiryValidation != nil {
		return *x.IgnoreExpiryValidation
	}
	return false
}

func (x *CreateOrganizationsEnvironmentsKeystoresAliaseRequest) GetIgnoreNewlineValidation() bool {
	if x != nil && x.IgnoreNewlineValidation != nil {
		return *x.IgnoreNewlineValidation
	}
	return false
}

func (x *CreateOrganizationsEnvironmentsKeystoresAliaseRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

func (x *CreateOrganizationsEnvironmentsKeystoresAliaseRequest) GetOrganizationsEnvironmentsKeystoresAliase() *GoogleApiHttpBody {
	if x != nil {
		return x.OrganizationsEnvironmentsKeystoresAliase
	}
	return nil
}

type CsrOrganizationsEnvironmentsKeystoresAliaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *CsrOrganizationsEnvironmentsKeystoresAliaseRequest) Reset() {
	*x = CsrOrganizationsEnvironmentsKeystoresAliaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[472]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CsrOrganizationsEnvironmentsKeystoresAliaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CsrOrganizationsEnvironmentsKeystoresAliaseRequest) ProtoMessage() {}

func (x *CsrOrganizationsEnvironmentsKeystoresAliaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[472]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CsrOrganizationsEnvironmentsKeystoresAliaseRequest.ProtoReflect.Descriptor instead.
func (*CsrOrganizationsEnvironmentsKeystoresAliaseRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{472}
}

func (x *CsrOrganizationsEnvironmentsKeystoresAliaseRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type DeleteOrganizationsEnvironmentsKeystoresAliaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *DeleteOrganizationsEnvironmentsKeystoresAliaseRequest) Reset() {
	*x = DeleteOrganizationsEnvironmentsKeystoresAliaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[473]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrganizationsEnvironmentsKeystoresAliaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrganizationsEnvironmentsKeystoresAliaseRequest) ProtoMessage() {}

func (x *DeleteOrganizationsEnvironmentsKeystoresAliaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[473]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrganizationsEnvironmentsKeystoresAliaseRequest.ProtoReflect.Descriptor instead.
func (*DeleteOrganizationsEnvironmentsKeystoresAliaseRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{473}
}

func (x *DeleteOrganizationsEnvironmentsKeystoresAliaseRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GetOrganizationsEnvironmentsKeystoresAliaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *GetOrganizationsEnvironmentsKeystoresAliaseRequest) Reset() {
	*x = GetOrganizationsEnvironmentsKeystoresAliaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[474]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrganizationsEnvironmentsKeystoresAliaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrganizationsEnvironmentsKeystoresAliaseRequest) ProtoMessage() {}

func (x *GetOrganizationsEnvironmentsKeystoresAliaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[474]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrganizationsEnvironmentsKeystoresAliaseRequest.ProtoReflect.Descriptor instead.
func (*GetOrganizationsEnvironmentsKeystoresAliaseRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{474}
}

func (x *GetOrganizationsEnvironmentsKeystoresAliaseRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GetCertificateOrganizationsEnvironmentsKeystoresAliaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *GetCertificateOrganizationsEnvironmentsKeystoresAliaseRequest) Reset() {
	*x = GetCertificateOrganizationsEnvironmentsKeystoresAliaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[475]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCertificateOrganizationsEnvironmentsKeystoresAliaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCertificateOrganizationsEnvironmentsKeystoresAliaseRequest) ProtoMessage() {}

func (x *GetCertificateOrganizationsEnvironmentsKeystoresAliaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[475]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCertificateOrganizationsEnvironmentsKeystoresAliaseRequest.ProtoReflect.Descriptor instead.
func (*GetCertificateOrganizationsEnvironmentsKeystoresAliaseRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{475}
}

func (x *GetCertificateOrganizationsEnvironmentsKeystoresAliaseRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type UpdateOrganizationsEnvironmentsKeystoresAliaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IgnoreExpiryValidation                   *bool              `protobuf:"varint,1,opt,name=ignore_expiry_validation,json=ignoreExpiryValidation" json:"ignore_expiry_validation,omitempty"`
	IgnoreNewlineValidation                  *bool              `protobuf:"varint,2,opt,name=ignore_newline_validation,json=ignoreNewlineValidation" json:"ignore_newline_validation,omitempty"`
	Name                                     *string            `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	OrganizationsEnvironmentsKeystoresAliase *GoogleApiHttpBody `protobuf:"bytes,4,opt,name=organizations_environments_keystores_aliase,json=organizationsEnvironmentsKeystoresAliase" json:"organizations_environments_keystores_aliase,omitempty"`
}

func (x *UpdateOrganizationsEnvironmentsKeystoresAliaseRequest) Reset() {
	*x = UpdateOrganizationsEnvironmentsKeystoresAliaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[476]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrganizationsEnvironmentsKeystoresAliaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrganizationsEnvironmentsKeystoresAliaseRequest) ProtoMessage() {}

func (x *UpdateOrganizationsEnvironmentsKeystoresAliaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[476]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrganizationsEnvironmentsKeystoresAliaseRequest.ProtoReflect.Descriptor instead.
func (*UpdateOrganizationsEnvironmentsKeystoresAliaseRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{476}
}

func (x *UpdateOrganizationsEnvironmentsKeystoresAliaseRequest) GetIgnoreExpiryValidation() bool {
	if x != nil && x.IgnoreExpiryValidation != nil {
		return *x.IgnoreExpiryValidation
	}
	return false
}

func (x *UpdateOrganizationsEnvironmentsKeystoresAliaseRequest) GetIgnoreNewlineValidation() bool {
	if x != nil && x.IgnoreNewlineValidation != nil {
		return *x.IgnoreNewlineValidation
	}
	return false
}

func (x *UpdateOrganizationsEnvironmentsKeystoresAliaseRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UpdateOrganizationsEnvironmentsKeystoresAliaseRequest) GetOrganizationsEnvironmentsKeystoresAliase() *GoogleApiHttpBody {
	if x != nil {
		return x.OrganizationsEnvironmentsKeystoresAliase
	}
	return nil
}

type CreateOrganizationsEnvironmentsKeyvaluemapRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent                               *string                         `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
	OrganizationsEnvironmentsKeyvaluemap *GoogleCloudApigeeV1KeyValueMap `protobuf:"bytes,2,opt,name=organizations_environments_keyvaluemap,json=organizationsEnvironmentsKeyvaluemap" json:"organizations_environments_keyvaluemap,omitempty"`
}

func (x *CreateOrganizationsEnvironmentsKeyvaluemapRequest) Reset() {
	*x = CreateOrganizationsEnvironmentsKeyvaluemapRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[477]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrganizationsEnvironmentsKeyvaluemapRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrganizationsEnvironmentsKeyvaluemapRequest) ProtoMessage() {}

func (x *CreateOrganizationsEnvironmentsKeyvaluemapRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[477]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrganizationsEnvironmentsKeyvaluemapRequest.ProtoReflect.Descriptor instead.
func (*CreateOrganizationsEnvironmentsKeyvaluemapRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{477}
}

func (x *CreateOrganizationsEnvironmentsKeyvaluemapRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

func (x *CreateOrganizationsEnvironmentsKeyvaluemapRequest) GetOrganizationsEnvironmentsKeyvaluemap() *GoogleCloudApigeeV1KeyValueMap {
	if x != nil {
		return x.OrganizationsEnvironmentsKeyvaluemap
	}
	return nil
}

type DeleteOrganizationsEnvironmentsKeyvaluemapRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *DeleteOrganizationsEnvironmentsKeyvaluemapRequest) Reset() {
	*x = DeleteOrganizationsEnvironmentsKeyvaluemapRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[478]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrganizationsEnvironmentsKeyvaluemapRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrganizationsEnvironmentsKeyvaluemapRequest) ProtoMessage() {}

func (x *DeleteOrganizationsEnvironmentsKeyvaluemapRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[478]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrganizationsEnvironmentsKeyvaluemapRequest.ProtoReflect.Descriptor instead.
func (*DeleteOrganizationsEnvironmentsKeyvaluemapRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{478}
}

func (x *DeleteOrganizationsEnvironmentsKeyvaluemapRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type CreateOrganizationsEnvironmentsKeyvaluemapsEntryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent                                     *string                           `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
	OrganizationsEnvironmentsKeyvaluemapsEntry *GoogleCloudApigeeV1KeyValueEntry `protobuf:"bytes,2,opt,name=organizations_environments_keyvaluemaps_entry,json=organizationsEnvironmentsKeyvaluemapsEntry" json:"organizations_environments_keyvaluemaps_entry,omitempty"`
}

func (x *CreateOrganizationsEnvironmentsKeyvaluemapsEntryRequest) Reset() {
	*x = CreateOrganizationsEnvironmentsKeyvaluemapsEntryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[479]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrganizationsEnvironmentsKeyvaluemapsEntryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrganizationsEnvironmentsKeyvaluemapsEntryRequest) ProtoMessage() {}

func (x *CreateOrganizationsEnvironmentsKeyvaluemapsEntryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[479]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrganizationsEnvironmentsKeyvaluemapsEntryRequest.ProtoReflect.Descriptor instead.
func (*CreateOrganizationsEnvironmentsKeyvaluemapsEntryRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{479}
}

func (x *CreateOrganizationsEnvironmentsKeyvaluemapsEntryRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

func (x *CreateOrganizationsEnvironmentsKeyvaluemapsEntryRequest) GetOrganizationsEnvironmentsKeyvaluemapsEntry() *GoogleCloudApigeeV1KeyValueEntry {
	if x != nil {
		return x.OrganizationsEnvironmentsKeyvaluemapsEntry
	}
	return nil
}

type DeleteOrganizationsEnvironmentsKeyvaluemapsEntryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *DeleteOrganizationsEnvironmentsKeyvaluemapsEntryRequest) Reset() {
	*x = DeleteOrganizationsEnvironmentsKeyvaluemapsEntryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[480]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrganizationsEnvironmentsKeyvaluemapsEntryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrganizationsEnvironmentsKeyvaluemapsEntryRequest) ProtoMessage() {}

func (x *DeleteOrganizationsEnvironmentsKeyvaluemapsEntryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[480]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrganizationsEnvironmentsKeyvaluemapsEntryRequest.ProtoReflect.Descriptor instead.
func (*DeleteOrganizationsEnvironmentsKeyvaluemapsEntryRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{480}
}

func (x *DeleteOrganizationsEnvironmentsKeyvaluemapsEntryRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GetOrganizationsEnvironmentsKeyvaluemapsEntryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *GetOrganizationsEnvironmentsKeyvaluemapsEntryRequest) Reset() {
	*x = GetOrganizationsEnvironmentsKeyvaluemapsEntryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[481]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrganizationsEnvironmentsKeyvaluemapsEntryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrganizationsEnvironmentsKeyvaluemapsEntryRequest) ProtoMessage() {}

func (x *GetOrganizationsEnvironmentsKeyvaluemapsEntryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[481]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrganizationsEnvironmentsKeyvaluemapsEntryRequest.ProtoReflect.Descriptor instead.
func (*GetOrganizationsEnvironmentsKeyvaluemapsEntryRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{481}
}

func (x *GetOrganizationsEnvironmentsKeyvaluemapsEntryRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type ListOrganizationsEnvironmentsKeyvaluemapsEntriesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize  *int32  `protobuf:"varint,1,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	PageToken *string `protobuf:"bytes,2,opt,name=page_token,json=pageToken" json:"page_token,omitempty"`
	Parent    *string `protobuf:"bytes,3,opt,name=parent" json:"parent,omitempty"`
}

func (x *ListOrganizationsEnvironmentsKeyvaluemapsEntriesRequest) Reset() {
	*x = ListOrganizationsEnvironmentsKeyvaluemapsEntriesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[482]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrganizationsEnvironmentsKeyvaluemapsEntriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrganizationsEnvironmentsKeyvaluemapsEntriesRequest) ProtoMessage() {}

func (x *ListOrganizationsEnvironmentsKeyvaluemapsEntriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[482]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrganizationsEnvironmentsKeyvaluemapsEntriesRequest.ProtoReflect.Descriptor instead.
func (*ListOrganizationsEnvironmentsKeyvaluemapsEntriesRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{482}
}

func (x *ListOrganizationsEnvironmentsKeyvaluemapsEntriesRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *ListOrganizationsEnvironmentsKeyvaluemapsEntriesRequest) GetPageToken() string {
	if x != nil && x.PageToken != nil {
		return *x.PageToken
	}
	return ""
}

func (x *ListOrganizationsEnvironmentsKeyvaluemapsEntriesRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

type UpdateOrganizationsEnvironmentsKeyvaluemapsEntryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                                       *string                           `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	OrganizationsEnvironmentsKeyvaluemapsEntry *GoogleCloudApigeeV1KeyValueEntry `protobuf:"bytes,2,opt,name=organizations_environments_keyvaluemaps_entry,json=organizationsEnvironmentsKeyvaluemapsEntry" json:"organizations_environments_keyvaluemaps_entry,omitempty"`
}

func (x *UpdateOrganizationsEnvironmentsKeyvaluemapsEntryRequest) Reset() {
	*x = UpdateOrganizationsEnvironmentsKeyvaluemapsEntryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[483]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrganizationsEnvironmentsKeyvaluemapsEntryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrganizationsEnvironmentsKeyvaluemapsEntryRequest) ProtoMessage() {}

func (x *UpdateOrganizationsEnvironmentsKeyvaluemapsEntryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[483]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrganizationsEnvironmentsKeyvaluemapsEntryRequest.ProtoReflect.Descriptor instead.
func (*UpdateOrganizationsEnvironmentsKeyvaluemapsEntryRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{483}
}

func (x *UpdateOrganizationsEnvironmentsKeyvaluemapsEntryRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UpdateOrganizationsEnvironmentsKeyvaluemapsEntryRequest) GetOrganizationsEnvironmentsKeyvaluemapsEntry() *GoogleCloudApigeeV1KeyValueEntry {
	if x != nil {
		return x.OrganizationsEnvironmentsKeyvaluemapsEntry
	}
	return nil
}

type GetOrganizationsEnvironmentsOptimizedStatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accuracy    *string `protobuf:"bytes,1,opt,name=accuracy" json:"accuracy,omitempty"`
	AggTable    *string `protobuf:"bytes,2,opt,name=agg_table,json=aggTable" json:"agg_table,omitempty"`
	Filter      *string `protobuf:"bytes,3,opt,name=filter" json:"filter,omitempty"`
	Limit       *string `protobuf:"bytes,4,opt,name=limit" json:"limit,omitempty"`
	Name        *string `protobuf:"bytes,5,opt,name=name" json:"name,omitempty"`
	Offset      *string `protobuf:"bytes,6,opt,name=offset" json:"offset,omitempty"`
	Realtime    *bool   `protobuf:"varint,7,opt,name=realtime" json:"realtime,omitempty"`
	Select      *string `protobuf:"bytes,8,opt,name=select" json:"select,omitempty"`
	Sonar       *bool   `protobuf:"varint,9,opt,name=sonar" json:"sonar,omitempty"`
	Sort        *string `protobuf:"bytes,10,opt,name=sort" json:"sort,omitempty"`
	Sortby      *string `protobuf:"bytes,11,opt,name=sortby" json:"sortby,omitempty"`
	TimeRange   *string `protobuf:"bytes,12,opt,name=time_range,json=timeRange" json:"time_range,omitempty"`
	TimeUnit    *string `protobuf:"bytes,13,opt,name=time_unit,json=timeUnit" json:"time_unit,omitempty"`
	Topk        *string `protobuf:"bytes,14,opt,name=topk" json:"topk,omitempty"`
	TsAscending *bool   `protobuf:"varint,15,opt,name=ts_ascending,json=tsAscending" json:"ts_ascending,omitempty"`
	Tzo         *string `protobuf:"bytes,16,opt,name=tzo" json:"tzo,omitempty"`
}

func (x *GetOrganizationsEnvironmentsOptimizedStatRequest) Reset() {
	*x = GetOrganizationsEnvironmentsOptimizedStatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[484]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrganizationsEnvironmentsOptimizedStatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrganizationsEnvironmentsOptimizedStatRequest) ProtoMessage() {}

func (x *GetOrganizationsEnvironmentsOptimizedStatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[484]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrganizationsEnvironmentsOptimizedStatRequest.ProtoReflect.Descriptor instead.
func (*GetOrganizationsEnvironmentsOptimizedStatRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{484}
}

func (x *GetOrganizationsEnvironmentsOptimizedStatRequest) GetAccuracy() string {
	if x != nil && x.Accuracy != nil {
		return *x.Accuracy
	}
	return ""
}

func (x *GetOrganizationsEnvironmentsOptimizedStatRequest) GetAggTable() string {
	if x != nil && x.AggTable != nil {
		return *x.AggTable
	}
	return ""
}

func (x *GetOrganizationsEnvironmentsOptimizedStatRequest) GetFilter() string {
	if x != nil && x.Filter != nil {
		return *x.Filter
	}
	return ""
}

func (x *GetOrganizationsEnvironmentsOptimizedStatRequest) GetLimit() string {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return ""
}

func (x *GetOrganizationsEnvironmentsOptimizedStatRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GetOrganizationsEnvironmentsOptimizedStatRequest) GetOffset() string {
	if x != nil && x.Offset != nil {
		return *x.Offset
	}
	return ""
}

func (x *GetOrganizationsEnvironmentsOptimizedStatRequest) GetRealtime() bool {
	if x != nil && x.Realtime != nil {
		return *x.Realtime
	}
	return false
}

func (x *GetOrganizationsEnvironmentsOptimizedStatRequest) GetSelect() string {
	if x != nil && x.Select != nil {
		return *x.Select
	}
	return ""
}

func (x *GetOrganizationsEnvironmentsOptimizedStatRequest) GetSonar() bool {
	if x != nil && x.Sonar != nil {
		return *x.Sonar
	}
	return false
}

func (x *GetOrganizationsEnvironmentsOptimizedStatRequest) GetSort() string {
	if x != nil && x.Sort != nil {
		return *x.Sort
	}
	return ""
}

func (x *GetOrganizationsEnvironmentsOptimizedStatRequest) GetSortby() string {
	if x != nil && x.Sortby != nil {
		return *x.Sortby
	}
	return ""
}

func (x *GetOrganizationsEnvironmentsOptimizedStatRequest) GetTimeRange() string {
	if x != nil && x.TimeRange != nil {
		return *x.TimeRange
	}
	return ""
}

func (x *GetOrganizationsEnvironmentsOptimizedStatRequest) GetTimeUnit() string {
	if x != nil && x.TimeUnit != nil {
		return *x.TimeUnit
	}
	return ""
}

func (x *GetOrganizationsEnvironmentsOptimizedStatRequest) GetTopk() string {
	if x != nil && x.Topk != nil {
		return *x.Topk
	}
	return ""
}

func (x *GetOrganizationsEnvironmentsOptimizedStatRequest) GetTsAscending() bool {
	if x != nil && x.TsAscending != nil {
		return *x.TsAscending
	}
	return false
}

func (x *GetOrganizationsEnvironmentsOptimizedStatRequest) GetTzo() string {
	if x != nil && x.Tzo != nil {
		return *x.Tzo
	}
	return ""
}

type CreateOrganizationsEnvironmentsQueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent                         *string                   `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
	OrganizationsEnvironmentsQuery *GoogleCloudApigeeV1Query `protobuf:"bytes,2,opt,name=organizations_environments_query,json=organizationsEnvironmentsQuery" json:"organizations_environments_query,omitempty"`
}

func (x *CreateOrganizationsEnvironmentsQueryRequest) Reset() {
	*x = CreateOrganizationsEnvironmentsQueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[485]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrganizationsEnvironmentsQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrganizationsEnvironmentsQueryRequest) ProtoMessage() {}

func (x *CreateOrganizationsEnvironmentsQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[485]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrganizationsEnvironmentsQueryRequest.ProtoReflect.Descriptor instead.
func (*CreateOrganizationsEnvironmentsQueryRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{485}
}

func (x *CreateOrganizationsEnvironmentsQueryRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

func (x *CreateOrganizationsEnvironmentsQueryRequest) GetOrganizationsEnvironmentsQuery() *GoogleCloudApigeeV1Query {
	if x != nil {
		return x.OrganizationsEnvironmentsQuery
	}
	return nil
}

type GetOrganizationsEnvironmentsQueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *GetOrganizationsEnvironmentsQueryRequest) Reset() {
	*x = GetOrganizationsEnvironmentsQueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[486]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrganizationsEnvironmentsQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrganizationsEnvironmentsQueryRequest) ProtoMessage() {}

func (x *GetOrganizationsEnvironmentsQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[486]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrganizationsEnvironmentsQueryRequest.ProtoReflect.Descriptor instead.
func (*GetOrganizationsEnvironmentsQueryRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{486}
}

func (x *GetOrganizationsEnvironmentsQueryRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GetResultOrganizationsEnvironmentsQueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *GetResultOrganizationsEnvironmentsQueryRequest) Reset() {
	*x = GetResultOrganizationsEnvironmentsQueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[487]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResultOrganizationsEnvironmentsQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResultOrganizationsEnvironmentsQueryRequest) ProtoMessage() {}

func (x *GetResultOrganizationsEnvironmentsQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[487]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResultOrganizationsEnvironmentsQueryRequest.ProtoReflect.Descriptor instead.
func (*GetResultOrganizationsEnvironmentsQueryRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{487}
}

func (x *GetResultOrganizationsEnvironmentsQueryRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GetResulturlOrganizationsEnvironmentsQueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *GetResulturlOrganizationsEnvironmentsQueryRequest) Reset() {
	*x = GetResulturlOrganizationsEnvironmentsQueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[488]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResulturlOrganizationsEnvironmentsQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResulturlOrganizationsEnvironmentsQueryRequest) ProtoMessage() {}

func (x *GetResulturlOrganizationsEnvironmentsQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[488]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResulturlOrganizationsEnvironmentsQueryRequest.ProtoReflect.Descriptor instead.
func (*GetResulturlOrganizationsEnvironmentsQueryRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{488}
}

func (x *GetResulturlOrganizationsEnvironmentsQueryRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type ListOrganizationsEnvironmentsQueriesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dataset                  *string `protobuf:"bytes,1,opt,name=dataset" json:"dataset,omitempty"`
	From                     *string `protobuf:"bytes,2,opt,name=from" json:"from,omitempty"`
	InclQueriesWithoutReport *string `protobuf:"bytes,3,opt,name=incl_queries_without_report,json=inclQueriesWithoutReport" json:"incl_queries_without_report,omitempty"`
	Parent                   *string `protobuf:"bytes,4,opt,name=parent" json:"parent,omitempty"`
	Status                   *string `protobuf:"bytes,5,opt,name=status" json:"status,omitempty"`
	SubmittedBy              *string `protobuf:"bytes,6,opt,name=submitted_by,json=submittedBy" json:"submitted_by,omitempty"`
	To                       *string `protobuf:"bytes,7,opt,name=to" json:"to,omitempty"`
}

func (x *ListOrganizationsEnvironmentsQueriesRequest) Reset() {
	*x = ListOrganizationsEnvironmentsQueriesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[489]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrganizationsEnvironmentsQueriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrganizationsEnvironmentsQueriesRequest) ProtoMessage() {}

func (x *ListOrganizationsEnvironmentsQueriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[489]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrganizationsEnvironmentsQueriesRequest.ProtoReflect.Descriptor instead.
func (*ListOrganizationsEnvironmentsQueriesRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{489}
}

func (x *ListOrganizationsEnvironmentsQueriesRequest) GetDataset() string {
	if x != nil && x.Dataset != nil {
		return *x.Dataset
	}
	return ""
}

func (x *ListOrganizationsEnvironmentsQueriesRequest) GetFrom() string {
	if x != nil && x.From != nil {
		return *x.From
	}
	return ""
}

func (x *ListOrganizationsEnvironmentsQueriesRequest) GetInclQueriesWithoutReport() string {
	if x != nil && x.InclQueriesWithoutReport != nil {
		return *x.InclQueriesWithoutReport
	}
	return ""
}

func (x *ListOrganizationsEnvironmentsQueriesRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

func (x *ListOrganizationsEnvironmentsQueriesRequest) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

func (x *ListOrganizationsEnvironmentsQueriesRequest) GetSubmittedBy() string {
	if x != nil && x.SubmittedBy != nil {
		return *x.SubmittedBy
	}
	return ""
}

func (x *ListOrganizationsEnvironmentsQueriesRequest) GetTo() string {
	if x != nil && x.To != nil {
		return *x.To
	}
	return ""
}

type CreateOrganizationsEnvironmentsReferenceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent                             *string                       `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
	OrganizationsEnvironmentsReference *GoogleCloudApigeeV1Reference `protobuf:"bytes,2,opt,name=organizations_environments_reference,json=organizationsEnvironmentsReference" json:"organizations_environments_reference,omitempty"`
}

func (x *CreateOrganizationsEnvironmentsReferenceRequest) Reset() {
	*x = CreateOrganizationsEnvironmentsReferenceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[490]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrganizationsEnvironmentsReferenceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrganizationsEnvironmentsReferenceRequest) ProtoMessage() {}

func (x *CreateOrganizationsEnvironmentsReferenceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[490]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrganizationsEnvironmentsReferenceRequest.ProtoReflect.Descriptor instead.
func (*CreateOrganizationsEnvironmentsReferenceRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{490}
}

func (x *CreateOrganizationsEnvironmentsReferenceRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

func (x *CreateOrganizationsEnvironmentsReferenceRequest) GetOrganizationsEnvironmentsReference() *GoogleCloudApigeeV1Reference {
	if x != nil {
		return x.OrganizationsEnvironmentsReference
	}
	return nil
}

type DeleteOrganizationsEnvironmentsReferenceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *DeleteOrganizationsEnvironmentsReferenceRequest) Reset() {
	*x = DeleteOrganizationsEnvironmentsReferenceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[491]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrganizationsEnvironmentsReferenceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrganizationsEnvironmentsReferenceRequest) ProtoMessage() {}

func (x *DeleteOrganizationsEnvironmentsReferenceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[491]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrganizationsEnvironmentsReferenceRequest.ProtoReflect.Descriptor instead.
func (*DeleteOrganizationsEnvironmentsReferenceRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{491}
}

func (x *DeleteOrganizationsEnvironmentsReferenceRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GetOrganizationsEnvironmentsReferenceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *GetOrganizationsEnvironmentsReferenceRequest) Reset() {
	*x = GetOrganizationsEnvironmentsReferenceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[492]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrganizationsEnvironmentsReferenceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrganizationsEnvironmentsReferenceRequest) ProtoMessage() {}

func (x *GetOrganizationsEnvironmentsReferenceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[492]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrganizationsEnvironmentsReferenceRequest.ProtoReflect.Descriptor instead.
func (*GetOrganizationsEnvironmentsReferenceRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{492}
}

func (x *GetOrganizationsEnvironmentsReferenceRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type UpdateOrganizationsEnvironmentsReferenceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                               *string                       `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	OrganizationsEnvironmentsReference *GoogleCloudApigeeV1Reference `protobuf:"bytes,2,opt,name=organizations_environments_reference,json=organizationsEnvironmentsReference" json:"organizations_environments_reference,omitempty"`
}

func (x *UpdateOrganizationsEnvironmentsReferenceRequest) Reset() {
	*x = UpdateOrganizationsEnvironmentsReferenceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[493]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrganizationsEnvironmentsReferenceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrganizationsEnvironmentsReferenceRequest) ProtoMessage() {}

func (x *UpdateOrganizationsEnvironmentsReferenceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[493]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrganizationsEnvironmentsReferenceRequest.ProtoReflect.Descriptor instead.
func (*UpdateOrganizationsEnvironmentsReferenceRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{493}
}

func (x *UpdateOrganizationsEnvironmentsReferenceRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UpdateOrganizationsEnvironmentsReferenceRequest) GetOrganizationsEnvironmentsReference() *GoogleCloudApigeeV1Reference {
	if x != nil {
		return x.OrganizationsEnvironmentsReference
	}
	return nil
}

type CreateOrganizationsEnvironmentsResourcefileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                                  *string            `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Parent                                *string            `protobuf:"bytes,2,opt,name=parent" json:"parent,omitempty"`
	Type                                  *string            `protobuf:"bytes,3,opt,name=type" json:"type,omitempty"`
	OrganizationsEnvironmentsResourcefile *GoogleApiHttpBody `protobuf:"bytes,4,opt,name=organizations_environments_resourcefile,json=organizationsEnvironmentsResourcefile" json:"organizations_environments_resourcefile,omitempty"`
}

func (x *CreateOrganizationsEnvironmentsResourcefileRequest) Reset() {
	*x = CreateOrganizationsEnvironmentsResourcefileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[494]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrganizationsEnvironmentsResourcefileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrganizationsEnvironmentsResourcefileRequest) ProtoMessage() {}

func (x *CreateOrganizationsEnvironmentsResourcefileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[494]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrganizationsEnvironmentsResourcefileRequest.ProtoReflect.Descriptor instead.
func (*CreateOrganizationsEnvironmentsResourcefileRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{494}
}

func (x *CreateOrganizationsEnvironmentsResourcefileRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CreateOrganizationsEnvironmentsResourcefileRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

func (x *CreateOrganizationsEnvironmentsResourcefileRequest) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *CreateOrganizationsEnvironmentsResourcefileRequest) GetOrganizationsEnvironmentsResourcefile() *GoogleApiHttpBody {
	if x != nil {
		return x.OrganizationsEnvironmentsResourcefile
	}
	return nil
}

type DeleteOrganizationsEnvironmentsResourcefileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Parent *string `protobuf:"bytes,2,opt,name=parent" json:"parent,omitempty"`
	Type   *string `protobuf:"bytes,3,opt,name=type" json:"type,omitempty"`
}

func (x *DeleteOrganizationsEnvironmentsResourcefileRequest) Reset() {
	*x = DeleteOrganizationsEnvironmentsResourcefileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[495]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrganizationsEnvironmentsResourcefileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrganizationsEnvironmentsResourcefileRequest) ProtoMessage() {}

func (x *DeleteOrganizationsEnvironmentsResourcefileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[495]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrganizationsEnvironmentsResourcefileRequest.ProtoReflect.Descriptor instead.
func (*DeleteOrganizationsEnvironmentsResourcefileRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{495}
}

func (x *DeleteOrganizationsEnvironmentsResourcefileRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *DeleteOrganizationsEnvironmentsResourcefileRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

func (x *DeleteOrganizationsEnvironmentsResourcefileRequest) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

type GetOrganizationsEnvironmentsResourcefileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Parent *string `protobuf:"bytes,2,opt,name=parent" json:"parent,omitempty"`
	Type   *string `protobuf:"bytes,3,opt,name=type" json:"type,omitempty"`
}

func (x *GetOrganizationsEnvironmentsResourcefileRequest) Reset() {
	*x = GetOrganizationsEnvironmentsResourcefileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[496]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrganizationsEnvironmentsResourcefileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrganizationsEnvironmentsResourcefileRequest) ProtoMessage() {}

func (x *GetOrganizationsEnvironmentsResourcefileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[496]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrganizationsEnvironmentsResourcefileRequest.ProtoReflect.Descriptor instead.
func (*GetOrganizationsEnvironmentsResourcefileRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{496}
}

func (x *GetOrganizationsEnvironmentsResourcefileRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GetOrganizationsEnvironmentsResourcefileRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

func (x *GetOrganizationsEnvironmentsResourcefileRequest) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

type ListOrganizationsEnvironmentsResourcefilesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent *string `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
	Type   *string `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
}

func (x *ListOrganizationsEnvironmentsResourcefilesRequest) Reset() {
	*x = ListOrganizationsEnvironmentsResourcefilesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[497]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrganizationsEnvironmentsResourcefilesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrganizationsEnvironmentsResourcefilesRequest) ProtoMessage() {}

func (x *ListOrganizationsEnvironmentsResourcefilesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[497]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrganizationsEnvironmentsResourcefilesRequest.ProtoReflect.Descriptor instead.
func (*ListOrganizationsEnvironmentsResourcefilesRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{497}
}

func (x *ListOrganizationsEnvironmentsResourcefilesRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

func (x *ListOrganizationsEnvironmentsResourcefilesRequest) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

type ListEnvironmentResourcesOrganizationsEnvironmentsResourcefileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent *string `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
	Type   *string `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
}

func (x *ListEnvironmentResourcesOrganizationsEnvironmentsResourcefileRequest) Reset() {
	*x = ListEnvironmentResourcesOrganizationsEnvironmentsResourcefileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[498]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListEnvironmentResourcesOrganizationsEnvironmentsResourcefileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEnvironmentResourcesOrganizationsEnvironmentsResourcefileRequest) ProtoMessage() {}

func (x *ListEnvironmentResourcesOrganizationsEnvironmentsResourcefileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[498]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEnvironmentResourcesOrganizationsEnvironmentsResourcefileRequest.ProtoReflect.Descriptor instead.
func (*ListEnvironmentResourcesOrganizationsEnvironmentsResourcefileRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{498}
}

func (x *ListEnvironmentResourcesOrganizationsEnvironmentsResourcefileRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

func (x *ListEnvironmentResourcesOrganizationsEnvironmentsResourcefileRequest) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

type UpdateOrganizationsEnvironmentsResourcefileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                                  *string            `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Parent                                *string            `protobuf:"bytes,2,opt,name=parent" json:"parent,omitempty"`
	Type                                  *string            `protobuf:"bytes,3,opt,name=type" json:"type,omitempty"`
	OrganizationsEnvironmentsResourcefile *GoogleApiHttpBody `protobuf:"bytes,4,opt,name=organizations_environments_resourcefile,json=organizationsEnvironmentsResourcefile" json:"organizations_environments_resourcefile,omitempty"`
}

func (x *UpdateOrganizationsEnvironmentsResourcefileRequest) Reset() {
	*x = UpdateOrganizationsEnvironmentsResourcefileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[499]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrganizationsEnvironmentsResourcefileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrganizationsEnvironmentsResourcefileRequest) ProtoMessage() {}

func (x *UpdateOrganizationsEnvironmentsResourcefileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[499]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrganizationsEnvironmentsResourcefileRequest.ProtoReflect.Descriptor instead.
func (*UpdateOrganizationsEnvironmentsResourcefileRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{499}
}

func (x *UpdateOrganizationsEnvironmentsResourcefileRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UpdateOrganizationsEnvironmentsResourcefileRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

func (x *UpdateOrganizationsEnvironmentsResourcefileRequest) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *UpdateOrganizationsEnvironmentsResourcefileRequest) GetOrganizationsEnvironmentsResourcefile() *GoogleApiHttpBody {
	if x != nil {
		return x.OrganizationsEnvironmentsResourcefile
	}
	return nil
}

type CreateOrganizationsEnvironmentsSecurityActionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent                                  *string                            `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
	SecurityActionId                        *string                            `protobuf:"bytes,2,opt,name=security_action_id,json=securityActionId" json:"security_action_id,omitempty"`
	OrganizationsEnvironmentsSecurityAction *GoogleCloudApigeeV1SecurityAction `protobuf:"bytes,3,opt,name=organizations_environments_security_action,json=organizationsEnvironmentsSecurityAction" json:"organizations_environments_security_action,omitempty"`
}

func (x *CreateOrganizationsEnvironmentsSecurityActionRequest) Reset() {
	*x = CreateOrganizationsEnvironmentsSecurityActionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[500]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrganizationsEnvironmentsSecurityActionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrganizationsEnvironmentsSecurityActionRequest) ProtoMessage() {}

func (x *CreateOrganizationsEnvironmentsSecurityActionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[500]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrganizationsEnvironmentsSecurityActionRequest.ProtoReflect.Descriptor instead.
func (*CreateOrganizationsEnvironmentsSecurityActionRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{500}
}

func (x *CreateOrganizationsEnvironmentsSecurityActionRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

func (x *CreateOrganizationsEnvironmentsSecurityActionRequest) GetSecurityActionId() string {
	if x != nil && x.SecurityActionId != nil {
		return *x.SecurityActionId
	}
	return ""
}

func (x *CreateOrganizationsEnvironmentsSecurityActionRequest) GetOrganizationsEnvironmentsSecurityAction() *GoogleCloudApigeeV1SecurityAction {
	if x != nil {
		return x.OrganizationsEnvironmentsSecurityAction
	}
	return nil
}

type DisableOrganizationsEnvironmentsSecurityActionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                                    *string                                          `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	OrganizationsEnvironmentsSecurityAction *GoogleCloudApigeeV1DisableSecurityActionRequest `protobuf:"bytes,2,opt,name=organizations_environments_security_action,json=organizationsEnvironmentsSecurityAction" json:"organizations_environments_security_action,omitempty"`
}

func (x *DisableOrganizationsEnvironmentsSecurityActionRequest) Reset() {
	*x = DisableOrganizationsEnvironmentsSecurityActionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[501]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisableOrganizationsEnvironmentsSecurityActionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisableOrganizationsEnvironmentsSecurityActionRequest) ProtoMessage() {}

func (x *DisableOrganizationsEnvironmentsSecurityActionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[501]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisableOrganizationsEnvironmentsSecurityActionRequest.ProtoReflect.Descriptor instead.
func (*DisableOrganizationsEnvironmentsSecurityActionRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{501}
}

func (x *DisableOrganizationsEnvironmentsSecurityActionRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *DisableOrganizationsEnvironmentsSecurityActionRequest) GetOrganizationsEnvironmentsSecurityAction() *GoogleCloudApigeeV1DisableSecurityActionRequest {
	if x != nil {
		return x.OrganizationsEnvironmentsSecurityAction
	}
	return nil
}

type EnableOrganizationsEnvironmentsSecurityActionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                                    *string                                         `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	OrganizationsEnvironmentsSecurityAction *GoogleCloudApigeeV1EnableSecurityActionRequest `protobuf:"bytes,2,opt,name=organizations_environments_security_action,json=organizationsEnvironmentsSecurityAction" json:"organizations_environments_security_action,omitempty"`
}

func (x *EnableOrganizationsEnvironmentsSecurityActionRequest) Reset() {
	*x = EnableOrganizationsEnvironmentsSecurityActionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[502]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnableOrganizationsEnvironmentsSecurityActionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnableOrganizationsEnvironmentsSecurityActionRequest) ProtoMessage() {}

func (x *EnableOrganizationsEnvironmentsSecurityActionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[502]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnableOrganizationsEnvironmentsSecurityActionRequest.ProtoReflect.Descriptor instead.
func (*EnableOrganizationsEnvironmentsSecurityActionRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{502}
}

func (x *EnableOrganizationsEnvironmentsSecurityActionRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *EnableOrganizationsEnvironmentsSecurityActionRequest) GetOrganizationsEnvironmentsSecurityAction() *GoogleCloudApigeeV1EnableSecurityActionRequest {
	if x != nil {
		return x.OrganizationsEnvironmentsSecurityAction
	}
	return nil
}

type GetOrganizationsEnvironmentsSecurityActionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *GetOrganizationsEnvironmentsSecurityActionRequest) Reset() {
	*x = GetOrganizationsEnvironmentsSecurityActionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[503]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrganizationsEnvironmentsSecurityActionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrganizationsEnvironmentsSecurityActionRequest) ProtoMessage() {}

func (x *GetOrganizationsEnvironmentsSecurityActionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[503]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrganizationsEnvironmentsSecurityActionRequest.ProtoReflect.Descriptor instead.
func (*GetOrganizationsEnvironmentsSecurityActionRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{503}
}

func (x *GetOrganizationsEnvironmentsSecurityActionRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type ListOrganizationsEnvironmentsSecurityActionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filter    *string `protobuf:"bytes,1,opt,name=filter" json:"filter,omitempty"`
	PageSize  *int32  `protobuf:"varint,2,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	PageToken *string `protobuf:"bytes,3,opt,name=page_token,json=pageToken" json:"page_token,omitempty"`
	Parent    *string `protobuf:"bytes,4,opt,name=parent" json:"parent,omitempty"`
}

func (x *ListOrganizationsEnvironmentsSecurityActionsRequest) Reset() {
	*x = ListOrganizationsEnvironmentsSecurityActionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[504]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrganizationsEnvironmentsSecurityActionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrganizationsEnvironmentsSecurityActionsRequest) ProtoMessage() {}

func (x *ListOrganizationsEnvironmentsSecurityActionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[504]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrganizationsEnvironmentsSecurityActionsRequest.ProtoReflect.Descriptor instead.
func (*ListOrganizationsEnvironmentsSecurityActionsRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{504}
}

func (x *ListOrganizationsEnvironmentsSecurityActionsRequest) GetFilter() string {
	if x != nil && x.Filter != nil {
		return *x.Filter
	}
	return ""
}

func (x *ListOrganizationsEnvironmentsSecurityActionsRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *ListOrganizationsEnvironmentsSecurityActionsRequest) GetPageToken() string {
	if x != nil && x.PageToken != nil {
		return *x.PageToken
	}
	return ""
}

func (x *ListOrganizationsEnvironmentsSecurityActionsRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

type BatchUpdateOrganizationsEnvironmentsSecurityIncidentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent                                    *string                                                 `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
	OrganizationsEnvironmentsSecurityIncident *GoogleCloudApigeeV1BatchUpdateSecurityIncidentsRequest `protobuf:"bytes,2,opt,name=organizations_environments_security_incident,json=organizationsEnvironmentsSecurityIncident" json:"organizations_environments_security_incident,omitempty"`
}

func (x *BatchUpdateOrganizationsEnvironmentsSecurityIncidentRequest) Reset() {
	*x = BatchUpdateOrganizationsEnvironmentsSecurityIncidentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[505]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchUpdateOrganizationsEnvironmentsSecurityIncidentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchUpdateOrganizationsEnvironmentsSecurityIncidentRequest) ProtoMessage() {}

func (x *BatchUpdateOrganizationsEnvironmentsSecurityIncidentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[505]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchUpdateOrganizationsEnvironmentsSecurityIncidentRequest.ProtoReflect.Descriptor instead.
func (*BatchUpdateOrganizationsEnvironmentsSecurityIncidentRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{505}
}

func (x *BatchUpdateOrganizationsEnvironmentsSecurityIncidentRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

func (x *BatchUpdateOrganizationsEnvironmentsSecurityIncidentRequest) GetOrganizationsEnvironmentsSecurityIncident() *GoogleCloudApigeeV1BatchUpdateSecurityIncidentsRequest {
	if x != nil {
		return x.OrganizationsEnvironmentsSecurityIncident
	}
	return nil
}

type GetOrganizationsEnvironmentsSecurityIncidentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *GetOrganizationsEnvironmentsSecurityIncidentRequest) Reset() {
	*x = GetOrganizationsEnvironmentsSecurityIncidentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[506]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrganizationsEnvironmentsSecurityIncidentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrganizationsEnvironmentsSecurityIncidentRequest) ProtoMessage() {}

func (x *GetOrganizationsEnvironmentsSecurityIncidentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[506]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrganizationsEnvironmentsSecurityIncidentRequest.ProtoReflect.Descriptor instead.
func (*GetOrganizationsEnvironmentsSecurityIncidentRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{506}
}

func (x *GetOrganizationsEnvironmentsSecurityIncidentRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type ListOrganizationsEnvironmentsSecurityIncidentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filter    *string `protobuf:"bytes,1,opt,name=filter" json:"filter,omitempty"`
	PageSize  *int32  `protobuf:"varint,2,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	PageToken *string `protobuf:"bytes,3,opt,name=page_token,json=pageToken" json:"page_token,omitempty"`
	Parent    *string `protobuf:"bytes,4,opt,name=parent" json:"parent,omitempty"`
}

func (x *ListOrganizationsEnvironmentsSecurityIncidentsRequest) Reset() {
	*x = ListOrganizationsEnvironmentsSecurityIncidentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[507]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrganizationsEnvironmentsSecurityIncidentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrganizationsEnvironmentsSecurityIncidentsRequest) ProtoMessage() {}

func (x *ListOrganizationsEnvironmentsSecurityIncidentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[507]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrganizationsEnvironmentsSecurityIncidentsRequest.ProtoReflect.Descriptor instead.
func (*ListOrganizationsEnvironmentsSecurityIncidentsRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{507}
}

func (x *ListOrganizationsEnvironmentsSecurityIncidentsRequest) GetFilter() string {
	if x != nil && x.Filter != nil {
		return *x.Filter
	}
	return ""
}

func (x *ListOrganizationsEnvironmentsSecurityIncidentsRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *ListOrganizationsEnvironmentsSecurityIncidentsRequest) GetPageToken() string {
	if x != nil && x.PageToken != nil {
		return *x.PageToken
	}
	return ""
}

func (x *ListOrganizationsEnvironmentsSecurityIncidentsRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

type PatchOrganizationsEnvironmentsSecurityIncidentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                                      *string                              `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	UpdateMask                                *string                              `protobuf:"bytes,2,opt,name=update_mask,json=updateMask" json:"update_mask,omitempty"`
	OrganizationsEnvironmentsSecurityIncident *GoogleCloudApigeeV1SecurityIncident `protobuf:"bytes,3,opt,name=organizations_environments_security_incident,json=organizationsEnvironmentsSecurityIncident" json:"organizations_environments_security_incident,omitempty"`
}

func (x *PatchOrganizationsEnvironmentsSecurityIncidentRequest) Reset() {
	*x = PatchOrganizationsEnvironmentsSecurityIncidentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[508]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PatchOrganizationsEnvironmentsSecurityIncidentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatchOrganizationsEnvironmentsSecurityIncidentRequest) ProtoMessage() {}

func (x *PatchOrganizationsEnvironmentsSecurityIncidentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[508]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatchOrganizationsEnvironmentsSecurityIncidentRequest.ProtoReflect.Descriptor instead.
func (*PatchOrganizationsEnvironmentsSecurityIncidentRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{508}
}

func (x *PatchOrganizationsEnvironmentsSecurityIncidentRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *PatchOrganizationsEnvironmentsSecurityIncidentRequest) GetUpdateMask() string {
	if x != nil && x.UpdateMask != nil {
		return *x.UpdateMask
	}
	return ""
}

func (x *PatchOrganizationsEnvironmentsSecurityIncidentRequest) GetOrganizationsEnvironmentsSecurityIncident() *GoogleCloudApigeeV1SecurityIncident {
	if x != nil {
		return x.OrganizationsEnvironmentsSecurityIncident
	}
	return nil
}

type CreateOrganizationsEnvironmentsSecurityReportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent                                  *string                                 `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
	OrganizationsEnvironmentsSecurityReport *GoogleCloudApigeeV1SecurityReportQuery `protobuf:"bytes,2,opt,name=organizations_environments_security_report,json=organizationsEnvironmentsSecurityReport" json:"organizations_environments_security_report,omitempty"`
}

func (x *CreateOrganizationsEnvironmentsSecurityReportRequest) Reset() {
	*x = CreateOrganizationsEnvironmentsSecurityReportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[509]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrganizationsEnvironmentsSecurityReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrganizationsEnvironmentsSecurityReportRequest) ProtoMessage() {}

func (x *CreateOrganizationsEnvironmentsSecurityReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[509]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrganizationsEnvironmentsSecurityReportRequest.ProtoReflect.Descriptor instead.
func (*CreateOrganizationsEnvironmentsSecurityReportRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{509}
}

func (x *CreateOrganizationsEnvironmentsSecurityReportRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

func (x *CreateOrganizationsEnvironmentsSecurityReportRequest) GetOrganizationsEnvironmentsSecurityReport() *GoogleCloudApigeeV1SecurityReportQuery {
	if x != nil {
		return x.OrganizationsEnvironmentsSecurityReport
	}
	return nil
}

type GetOrganizationsEnvironmentsSecurityReportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *GetOrganizationsEnvironmentsSecurityReportRequest) Reset() {
	*x = GetOrganizationsEnvironmentsSecurityReportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[510]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrganizationsEnvironmentsSecurityReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrganizationsEnvironmentsSecurityReportRequest) ProtoMessage() {}

func (x *GetOrganizationsEnvironmentsSecurityReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[510]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrganizationsEnvironmentsSecurityReportRequest.ProtoReflect.Descriptor instead.
func (*GetOrganizationsEnvironmentsSecurityReportRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{510}
}

func (x *GetOrganizationsEnvironmentsSecurityReportRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GetResultOrganizationsEnvironmentsSecurityReportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *GetResultOrganizationsEnvironmentsSecurityReportRequest) Reset() {
	*x = GetResultOrganizationsEnvironmentsSecurityReportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[511]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResultOrganizationsEnvironmentsSecurityReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResultOrganizationsEnvironmentsSecurityReportRequest) ProtoMessage() {}

func (x *GetResultOrganizationsEnvironmentsSecurityReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[511]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResultOrganizationsEnvironmentsSecurityReportRequest.ProtoReflect.Descriptor instead.
func (*GetResultOrganizationsEnvironmentsSecurityReportRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{511}
}

func (x *GetResultOrganizationsEnvironmentsSecurityReportRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GetResultViewOrganizationsEnvironmentsSecurityReportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *GetResultViewOrganizationsEnvironmentsSecurityReportRequest) Reset() {
	*x = GetResultViewOrganizationsEnvironmentsSecurityReportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[512]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResultViewOrganizationsEnvironmentsSecurityReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResultViewOrganizationsEnvironmentsSecurityReportRequest) ProtoMessage() {}

func (x *GetResultViewOrganizationsEnvironmentsSecurityReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[512]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResultViewOrganizationsEnvironmentsSecurityReportRequest.ProtoReflect.Descriptor instead.
func (*GetResultViewOrganizationsEnvironmentsSecurityReportRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{512}
}

func (x *GetResultViewOrganizationsEnvironmentsSecurityReportRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type ListOrganizationsEnvironmentsSecurityReportsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dataset     *string `protobuf:"bytes,1,opt,name=dataset" json:"dataset,omitempty"`
	From        *string `protobuf:"bytes,2,opt,name=from" json:"from,omitempty"`
	PageSize    *int32  `protobuf:"varint,3,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	PageToken   *string `protobuf:"bytes,4,opt,name=page_token,json=pageToken" json:"page_token,omitempty"`
	Parent      *string `protobuf:"bytes,5,opt,name=parent" json:"parent,omitempty"`
	Status      *string `protobuf:"bytes,6,opt,name=status" json:"status,omitempty"`
	SubmittedBy *string `protobuf:"bytes,7,opt,name=submitted_by,json=submittedBy" json:"submitted_by,omitempty"`
	To          *string `protobuf:"bytes,8,opt,name=to" json:"to,omitempty"`
}

func (x *ListOrganizationsEnvironmentsSecurityReportsRequest) Reset() {
	*x = ListOrganizationsEnvironmentsSecurityReportsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[513]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrganizationsEnvironmentsSecurityReportsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrganizationsEnvironmentsSecurityReportsRequest) ProtoMessage() {}

func (x *ListOrganizationsEnvironmentsSecurityReportsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[513]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrganizationsEnvironmentsSecurityReportsRequest.ProtoReflect.Descriptor instead.
func (*ListOrganizationsEnvironmentsSecurityReportsRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{513}
}

func (x *ListOrganizationsEnvironmentsSecurityReportsRequest) GetDataset() string {
	if x != nil && x.Dataset != nil {
		return *x.Dataset
	}
	return ""
}

func (x *ListOrganizationsEnvironmentsSecurityReportsRequest) GetFrom() string {
	if x != nil && x.From != nil {
		return *x.From
	}
	return ""
}

func (x *ListOrganizationsEnvironmentsSecurityReportsRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *ListOrganizationsEnvironmentsSecurityReportsRequest) GetPageToken() string {
	if x != nil && x.PageToken != nil {
		return *x.PageToken
	}
	return ""
}

func (x *ListOrganizationsEnvironmentsSecurityReportsRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

func (x *ListOrganizationsEnvironmentsSecurityReportsRequest) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

func (x *ListOrganizationsEnvironmentsSecurityReportsRequest) GetSubmittedBy() string {
	if x != nil && x.SubmittedBy != nil {
		return *x.SubmittedBy
	}
	return ""
}

func (x *ListOrganizationsEnvironmentsSecurityReportsRequest) GetTo() string {
	if x != nil && x.To != nil {
		return *x.To
	}
	return ""
}

type QueryTabularStatsOrganizationsEnvironmentsSecurityStatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Orgenv                                *string                                      `protobuf:"bytes,1,opt,name=orgenv" json:"orgenv,omitempty"`
	OrganizationsEnvironmentsSecurityStat *GoogleCloudApigeeV1QueryTabularStatsRequest `protobuf:"bytes,2,opt,name=organizations_environments_security_stat,json=organizationsEnvironmentsSecurityStat" json:"organizations_environments_security_stat,omitempty"`
}

func (x *QueryTabularStatsOrganizationsEnvironmentsSecurityStatRequest) Reset() {
	*x = QueryTabularStatsOrganizationsEnvironmentsSecurityStatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[514]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryTabularStatsOrganizationsEnvironmentsSecurityStatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryTabularStatsOrganizationsEnvironmentsSecurityStatRequest) ProtoMessage() {}

func (x *QueryTabularStatsOrganizationsEnvironmentsSecurityStatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[514]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryTabularStatsOrganizationsEnvironmentsSecurityStatRequest.ProtoReflect.Descriptor instead.
func (*QueryTabularStatsOrganizationsEnvironmentsSecurityStatRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{514}
}

func (x *QueryTabularStatsOrganizationsEnvironmentsSecurityStatRequest) GetOrgenv() string {
	if x != nil && x.Orgenv != nil {
		return *x.Orgenv
	}
	return ""
}

func (x *QueryTabularStatsOrganizationsEnvironmentsSecurityStatRequest) GetOrganizationsEnvironmentsSecurityStat() *GoogleCloudApigeeV1QueryTabularStatsRequest {
	if x != nil {
		return x.OrganizationsEnvironmentsSecurityStat
	}
	return nil
}

type QueryTimeSeriesStatsOrganizationsEnvironmentsSecurityStatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Orgenv                                *string                                         `protobuf:"bytes,1,opt,name=orgenv" json:"orgenv,omitempty"`
	OrganizationsEnvironmentsSecurityStat *GoogleCloudApigeeV1QueryTimeSeriesStatsRequest `protobuf:"bytes,2,opt,name=organizations_environments_security_stat,json=organizationsEnvironmentsSecurityStat" json:"organizations_environments_security_stat,omitempty"`
}

func (x *QueryTimeSeriesStatsOrganizationsEnvironmentsSecurityStatRequest) Reset() {
	*x = QueryTimeSeriesStatsOrganizationsEnvironmentsSecurityStatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[515]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryTimeSeriesStatsOrganizationsEnvironmentsSecurityStatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryTimeSeriesStatsOrganizationsEnvironmentsSecurityStatRequest) ProtoMessage() {}

func (x *QueryTimeSeriesStatsOrganizationsEnvironmentsSecurityStatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[515]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryTimeSeriesStatsOrganizationsEnvironmentsSecurityStatRequest.ProtoReflect.Descriptor instead.
func (*QueryTimeSeriesStatsOrganizationsEnvironmentsSecurityStatRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{515}
}

func (x *QueryTimeSeriesStatsOrganizationsEnvironmentsSecurityStatRequest) GetOrgenv() string {
	if x != nil && x.Orgenv != nil {
		return *x.Orgenv
	}
	return ""
}

func (x *QueryTimeSeriesStatsOrganizationsEnvironmentsSecurityStatRequest) GetOrganizationsEnvironmentsSecurityStat() *GoogleCloudApigeeV1QueryTimeSeriesStatsRequest {
	if x != nil {
		return x.OrganizationsEnvironmentsSecurityStat
	}
	return nil
}

type ListOrganizationsEnvironmentsSharedflowsDeploymentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent *string `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
}

func (x *ListOrganizationsEnvironmentsSharedflowsDeploymentsRequest) Reset() {
	*x = ListOrganizationsEnvironmentsSharedflowsDeploymentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[516]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrganizationsEnvironmentsSharedflowsDeploymentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrganizationsEnvironmentsSharedflowsDeploymentsRequest) ProtoMessage() {}

func (x *ListOrganizationsEnvironmentsSharedflowsDeploymentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[516]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrganizationsEnvironmentsSharedflowsDeploymentsRequest.ProtoReflect.Descriptor instead.
func (*ListOrganizationsEnvironmentsSharedflowsDeploymentsRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{516}
}

func (x *ListOrganizationsEnvironmentsSharedflowsDeploymentsRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

type DeployOrganizationsEnvironmentsSharedflowsRevisionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name           *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Override       *bool   `protobuf:"varint,2,opt,name=override" json:"override,omitempty"`
	ServiceAccount *string `protobuf:"bytes,3,opt,name=service_account,json=serviceAccount" json:"service_account,omitempty"`
}

func (x *DeployOrganizationsEnvironmentsSharedflowsRevisionRequest) Reset() {
	*x = DeployOrganizationsEnvironmentsSharedflowsRevisionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[517]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeployOrganizationsEnvironmentsSharedflowsRevisionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeployOrganizationsEnvironmentsSharedflowsRevisionRequest) ProtoMessage() {}

func (x *DeployOrganizationsEnvironmentsSharedflowsRevisionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[517]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeployOrganizationsEnvironmentsSharedflowsRevisionRequest.ProtoReflect.Descriptor instead.
func (*DeployOrganizationsEnvironmentsSharedflowsRevisionRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{517}
}

func (x *DeployOrganizationsEnvironmentsSharedflowsRevisionRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *DeployOrganizationsEnvironmentsSharedflowsRevisionRequest) GetOverride() bool {
	if x != nil && x.Override != nil {
		return *x.Override
	}
	return false
}

func (x *DeployOrganizationsEnvironmentsSharedflowsRevisionRequest) GetServiceAccount() string {
	if x != nil && x.ServiceAccount != nil {
		return *x.ServiceAccount
	}
	return ""
}

type GetDeploymentsOrganizationsEnvironmentsSharedflowsRevisionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *GetDeploymentsOrganizationsEnvironmentsSharedflowsRevisionRequest) Reset() {
	*x = GetDeploymentsOrganizationsEnvironmentsSharedflowsRevisionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[518]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeploymentsOrganizationsEnvironmentsSharedflowsRevisionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeploymentsOrganizationsEnvironmentsSharedflowsRevisionRequest) ProtoMessage() {}

func (x *GetDeploymentsOrganizationsEnvironmentsSharedflowsRevisionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[518]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeploymentsOrganizationsEnvironmentsSharedflowsRevisionRequest.ProtoReflect.Descriptor instead.
func (*GetDeploymentsOrganizationsEnvironmentsSharedflowsRevisionRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{518}
}

func (x *GetDeploymentsOrganizationsEnvironmentsSharedflowsRevisionRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type UndeployOrganizationsEnvironmentsSharedflowsRevisionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *UndeployOrganizationsEnvironmentsSharedflowsRevisionRequest) Reset() {
	*x = UndeployOrganizationsEnvironmentsSharedflowsRevisionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[519]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UndeployOrganizationsEnvironmentsSharedflowsRevisionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UndeployOrganizationsEnvironmentsSharedflowsRevisionRequest) ProtoMessage() {}

func (x *UndeployOrganizationsEnvironmentsSharedflowsRevisionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[519]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UndeployOrganizationsEnvironmentsSharedflowsRevisionRequest.ProtoReflect.Descriptor instead.
func (*UndeployOrganizationsEnvironmentsSharedflowsRevisionRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{519}
}

func (x *UndeployOrganizationsEnvironmentsSharedflowsRevisionRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GetOrganizationsEnvironmentsStatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accuracy    *string `protobuf:"bytes,1,opt,name=accuracy" json:"accuracy,omitempty"`
	AggTable    *string `protobuf:"bytes,2,opt,name=agg_table,json=aggTable" json:"agg_table,omitempty"`
	Filter      *string `protobuf:"bytes,3,opt,name=filter" json:"filter,omitempty"`
	Limit       *string `protobuf:"bytes,4,opt,name=limit" json:"limit,omitempty"`
	Name        *string `protobuf:"bytes,5,opt,name=name" json:"name,omitempty"`
	Offset      *string `protobuf:"bytes,6,opt,name=offset" json:"offset,omitempty"`
	Realtime    *bool   `protobuf:"varint,7,opt,name=realtime" json:"realtime,omitempty"`
	Select      *string `protobuf:"bytes,8,opt,name=select" json:"select,omitempty"`
	Sonar       *bool   `protobuf:"varint,9,opt,name=sonar" json:"sonar,omitempty"`
	Sort        *string `protobuf:"bytes,10,opt,name=sort" json:"sort,omitempty"`
	Sortby      *string `protobuf:"bytes,11,opt,name=sortby" json:"sortby,omitempty"`
	TimeRange   *string `protobuf:"bytes,12,opt,name=time_range,json=timeRange" json:"time_range,omitempty"`
	TimeUnit    *string `protobuf:"bytes,13,opt,name=time_unit,json=timeUnit" json:"time_unit,omitempty"`
	Topk        *string `protobuf:"bytes,14,opt,name=topk" json:"topk,omitempty"`
	TsAscending *bool   `protobuf:"varint,15,opt,name=ts_ascending,json=tsAscending" json:"ts_ascending,omitempty"`
	Tzo         *string `protobuf:"bytes,16,opt,name=tzo" json:"tzo,omitempty"`
}

func (x *GetOrganizationsEnvironmentsStatRequest) Reset() {
	*x = GetOrganizationsEnvironmentsStatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[520]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrganizationsEnvironmentsStatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrganizationsEnvironmentsStatRequest) ProtoMessage() {}

func (x *GetOrganizationsEnvironmentsStatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[520]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrganizationsEnvironmentsStatRequest.ProtoReflect.Descriptor instead.
func (*GetOrganizationsEnvironmentsStatRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{520}
}

func (x *GetOrganizationsEnvironmentsStatRequest) GetAccuracy() string {
	if x != nil && x.Accuracy != nil {
		return *x.Accuracy
	}
	return ""
}

func (x *GetOrganizationsEnvironmentsStatRequest) GetAggTable() string {
	if x != nil && x.AggTable != nil {
		return *x.AggTable
	}
	return ""
}

func (x *GetOrganizationsEnvironmentsStatRequest) GetFilter() string {
	if x != nil && x.Filter != nil {
		return *x.Filter
	}
	return ""
}

func (x *GetOrganizationsEnvironmentsStatRequest) GetLimit() string {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return ""
}

func (x *GetOrganizationsEnvironmentsStatRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GetOrganizationsEnvironmentsStatRequest) GetOffset() string {
	if x != nil && x.Offset != nil {
		return *x.Offset
	}
	return ""
}

func (x *GetOrganizationsEnvironmentsStatRequest) GetRealtime() bool {
	if x != nil && x.Realtime != nil {
		return *x.Realtime
	}
	return false
}

func (x *GetOrganizationsEnvironmentsStatRequest) GetSelect() string {
	if x != nil && x.Select != nil {
		return *x.Select
	}
	return ""
}

func (x *GetOrganizationsEnvironmentsStatRequest) GetSonar() bool {
	if x != nil && x.Sonar != nil {
		return *x.Sonar
	}
	return false
}

func (x *GetOrganizationsEnvironmentsStatRequest) GetSort() string {
	if x != nil && x.Sort != nil {
		return *x.Sort
	}
	return ""
}

func (x *GetOrganizationsEnvironmentsStatRequest) GetSortby() string {
	if x != nil && x.Sortby != nil {
		return *x.Sortby
	}
	return ""
}

func (x *GetOrganizationsEnvironmentsStatRequest) GetTimeRange() string {
	if x != nil && x.TimeRange != nil {
		return *x.TimeRange
	}
	return ""
}

func (x *GetOrganizationsEnvironmentsStatRequest) GetTimeUnit() string {
	if x != nil && x.TimeUnit != nil {
		return *x.TimeUnit
	}
	return ""
}

func (x *GetOrganizationsEnvironmentsStatRequest) GetTopk() string {
	if x != nil && x.Topk != nil {
		return *x.Topk
	}
	return ""
}

func (x *GetOrganizationsEnvironmentsStatRequest) GetTsAscending() bool {
	if x != nil && x.TsAscending != nil {
		return *x.TsAscending
	}
	return false
}

func (x *GetOrganizationsEnvironmentsStatRequest) GetTzo() string {
	if x != nil && x.Tzo != nil {
		return *x.Tzo
	}
	return ""
}

type CreateOrganizationsEnvironmentsTargetserverRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                                  *string                          `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Parent                                *string                          `protobuf:"bytes,2,opt,name=parent" json:"parent,omitempty"`
	OrganizationsEnvironmentsTargetserver *GoogleCloudApigeeV1TargetServer `protobuf:"bytes,3,opt,name=organizations_environments_targetserver,json=organizationsEnvironmentsTargetserver" json:"organizations_environments_targetserver,omitempty"`
}

func (x *CreateOrganizationsEnvironmentsTargetserverRequest) Reset() {
	*x = CreateOrganizationsEnvironmentsTargetserverRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[521]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrganizationsEnvironmentsTargetserverRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrganizationsEnvironmentsTargetserverRequest) ProtoMessage() {}

func (x *CreateOrganizationsEnvironmentsTargetserverRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[521]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrganizationsEnvironmentsTargetserverRequest.ProtoReflect.Descriptor instead.
func (*CreateOrganizationsEnvironmentsTargetserverRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{521}
}

func (x *CreateOrganizationsEnvironmentsTargetserverRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CreateOrganizationsEnvironmentsTargetserverRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

func (x *CreateOrganizationsEnvironmentsTargetserverRequest) GetOrganizationsEnvironmentsTargetserver() *GoogleCloudApigeeV1TargetServer {
	if x != nil {
		return x.OrganizationsEnvironmentsTargetserver
	}
	return nil
}

type DeleteOrganizationsEnvironmentsTargetserverRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *DeleteOrganizationsEnvironmentsTargetserverRequest) Reset() {
	*x = DeleteOrganizationsEnvironmentsTargetserverRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[522]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrganizationsEnvironmentsTargetserverRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrganizationsEnvironmentsTargetserverRequest) ProtoMessage() {}

func (x *DeleteOrganizationsEnvironmentsTargetserverRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[522]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrganizationsEnvironmentsTargetserverRequest.ProtoReflect.Descriptor instead.
func (*DeleteOrganizationsEnvironmentsTargetserverRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{522}
}

func (x *DeleteOrganizationsEnvironmentsTargetserverRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GetOrganizationsEnvironmentsTargetserverRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *GetOrganizationsEnvironmentsTargetserverRequest) Reset() {
	*x = GetOrganizationsEnvironmentsTargetserverRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[523]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrganizationsEnvironmentsTargetserverRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrganizationsEnvironmentsTargetserverRequest) ProtoMessage() {}

func (x *GetOrganizationsEnvironmentsTargetserverRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[523]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrganizationsEnvironmentsTargetserverRequest.ProtoReflect.Descriptor instead.
func (*GetOrganizationsEnvironmentsTargetserverRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{523}
}

func (x *GetOrganizationsEnvironmentsTargetserverRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type UpdateOrganizationsEnvironmentsTargetserverRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                                  *string                          `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	OrganizationsEnvironmentsTargetserver *GoogleCloudApigeeV1TargetServer `protobuf:"bytes,2,opt,name=organizations_environments_targetserver,json=organizationsEnvironmentsTargetserver" json:"organizations_environments_targetserver,omitempty"`
}

func (x *UpdateOrganizationsEnvironmentsTargetserverRequest) Reset() {
	*x = UpdateOrganizationsEnvironmentsTargetserverRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[524]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrganizationsEnvironmentsTargetserverRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrganizationsEnvironmentsTargetserverRequest) ProtoMessage() {}

func (x *UpdateOrganizationsEnvironmentsTargetserverRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[524]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrganizationsEnvironmentsTargetserverRequest.ProtoReflect.Descriptor instead.
func (*UpdateOrganizationsEnvironmentsTargetserverRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{524}
}

func (x *UpdateOrganizationsEnvironmentsTargetserverRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UpdateOrganizationsEnvironmentsTargetserverRequest) GetOrganizationsEnvironmentsTargetserver() *GoogleCloudApigeeV1TargetServer {
	if x != nil {
		return x.OrganizationsEnvironmentsTargetserver
	}
	return nil
}

type CreateOrganizationsEnvironmentsTraceConfigOverrideRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent                                       *string                                 `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
	OrganizationsEnvironmentsTraceConfigOverride *GoogleCloudApigeeV1TraceConfigOverride `protobuf:"bytes,2,opt,name=organizations_environments_trace_config_override,json=organizationsEnvironmentsTraceConfigOverride" json:"organizations_environments_trace_config_override,omitempty"`
}

func (x *CreateOrganizationsEnvironmentsTraceConfigOverrideRequest) Reset() {
	*x = CreateOrganizationsEnvironmentsTraceConfigOverrideRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[525]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrganizationsEnvironmentsTraceConfigOverrideRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrganizationsEnvironmentsTraceConfigOverrideRequest) ProtoMessage() {}

func (x *CreateOrganizationsEnvironmentsTraceConfigOverrideRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[525]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrganizationsEnvironmentsTraceConfigOverrideRequest.ProtoReflect.Descriptor instead.
func (*CreateOrganizationsEnvironmentsTraceConfigOverrideRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{525}
}

func (x *CreateOrganizationsEnvironmentsTraceConfigOverrideRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

func (x *CreateOrganizationsEnvironmentsTraceConfigOverrideRequest) GetOrganizationsEnvironmentsTraceConfigOverride() *GoogleCloudApigeeV1TraceConfigOverride {
	if x != nil {
		return x.OrganizationsEnvironmentsTraceConfigOverride
	}
	return nil
}

type DeleteOrganizationsEnvironmentsTraceConfigOverrideRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *DeleteOrganizationsEnvironmentsTraceConfigOverrideRequest) Reset() {
	*x = DeleteOrganizationsEnvironmentsTraceConfigOverrideRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[526]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrganizationsEnvironmentsTraceConfigOverrideRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrganizationsEnvironmentsTraceConfigOverrideRequest) ProtoMessage() {}

func (x *DeleteOrganizationsEnvironmentsTraceConfigOverrideRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[526]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrganizationsEnvironmentsTraceConfigOverrideRequest.ProtoReflect.Descriptor instead.
func (*DeleteOrganizationsEnvironmentsTraceConfigOverrideRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{526}
}

func (x *DeleteOrganizationsEnvironmentsTraceConfigOverrideRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GetOrganizationsEnvironmentsTraceConfigOverrideRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *GetOrganizationsEnvironmentsTraceConfigOverrideRequest) Reset() {
	*x = GetOrganizationsEnvironmentsTraceConfigOverrideRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[527]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrganizationsEnvironmentsTraceConfigOverrideRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrganizationsEnvironmentsTraceConfigOverrideRequest) ProtoMessage() {}

func (x *GetOrganizationsEnvironmentsTraceConfigOverrideRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[527]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrganizationsEnvironmentsTraceConfigOverrideRequest.ProtoReflect.Descriptor instead.
func (*GetOrganizationsEnvironmentsTraceConfigOverrideRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{527}
}

func (x *GetOrganizationsEnvironmentsTraceConfigOverrideRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type ListOrganizationsEnvironmentsTraceConfigOverridesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize  *int32  `protobuf:"varint,1,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	PageToken *string `protobuf:"bytes,2,opt,name=page_token,json=pageToken" json:"page_token,omitempty"`
	Parent    *string `protobuf:"bytes,3,opt,name=parent" json:"parent,omitempty"`
}

func (x *ListOrganizationsEnvironmentsTraceConfigOverridesRequest) Reset() {
	*x = ListOrganizationsEnvironmentsTraceConfigOverridesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[528]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrganizationsEnvironmentsTraceConfigOverridesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrganizationsEnvironmentsTraceConfigOverridesRequest) ProtoMessage() {}

func (x *ListOrganizationsEnvironmentsTraceConfigOverridesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[528]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrganizationsEnvironmentsTraceConfigOverridesRequest.ProtoReflect.Descriptor instead.
func (*ListOrganizationsEnvironmentsTraceConfigOverridesRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{528}
}

func (x *ListOrganizationsEnvironmentsTraceConfigOverridesRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *ListOrganizationsEnvironmentsTraceConfigOverridesRequest) GetPageToken() string {
	if x != nil && x.PageToken != nil {
		return *x.PageToken
	}
	return ""
}

func (x *ListOrganizationsEnvironmentsTraceConfigOverridesRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

type PatchOrganizationsEnvironmentsTraceConfigOverrideRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                                         *string                                 `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	UpdateMask                                   *string                                 `protobuf:"bytes,2,opt,name=update_mask,json=updateMask" json:"update_mask,omitempty"`
	OrganizationsEnvironmentsTraceConfigOverride *GoogleCloudApigeeV1TraceConfigOverride `protobuf:"bytes,3,opt,name=organizations_environments_trace_config_override,json=organizationsEnvironmentsTraceConfigOverride" json:"organizations_environments_trace_config_override,omitempty"`
}

func (x *PatchOrganizationsEnvironmentsTraceConfigOverrideRequest) Reset() {
	*x = PatchOrganizationsEnvironmentsTraceConfigOverrideRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[529]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PatchOrganizationsEnvironmentsTraceConfigOverrideRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatchOrganizationsEnvironmentsTraceConfigOverrideRequest) ProtoMessage() {}

func (x *PatchOrganizationsEnvironmentsTraceConfigOverrideRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[529]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatchOrganizationsEnvironmentsTraceConfigOverrideRequest.ProtoReflect.Descriptor instead.
func (*PatchOrganizationsEnvironmentsTraceConfigOverrideRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{529}
}

func (x *PatchOrganizationsEnvironmentsTraceConfigOverrideRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *PatchOrganizationsEnvironmentsTraceConfigOverrideRequest) GetUpdateMask() string {
	if x != nil && x.UpdateMask != nil {
		return *x.UpdateMask
	}
	return ""
}

func (x *PatchOrganizationsEnvironmentsTraceConfigOverrideRequest) GetOrganizationsEnvironmentsTraceConfigOverride() *GoogleCloudApigeeV1TraceConfigOverride {
	if x != nil {
		return x.OrganizationsEnvironmentsTraceConfigOverride
	}
	return nil
}

type CreateOrganizationsHostQueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent                 *string                   `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
	OrganizationsHostQuery *GoogleCloudApigeeV1Query `protobuf:"bytes,2,opt,name=organizations_host_query,json=organizationsHostQuery" json:"organizations_host_query,omitempty"`
}

func (x *CreateOrganizationsHostQueryRequest) Reset() {
	*x = CreateOrganizationsHostQueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[530]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrganizationsHostQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrganizationsHostQueryRequest) ProtoMessage() {}

func (x *CreateOrganizationsHostQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[530]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrganizationsHostQueryRequest.ProtoReflect.Descriptor instead.
func (*CreateOrganizationsHostQueryRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{530}
}

func (x *CreateOrganizationsHostQueryRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

func (x *CreateOrganizationsHostQueryRequest) GetOrganizationsHostQuery() *GoogleCloudApigeeV1Query {
	if x != nil {
		return x.OrganizationsHostQuery
	}
	return nil
}

type GetOrganizationsHostQueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *GetOrganizationsHostQueryRequest) Reset() {
	*x = GetOrganizationsHostQueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[531]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrganizationsHostQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrganizationsHostQueryRequest) ProtoMessage() {}

func (x *GetOrganizationsHostQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[531]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrganizationsHostQueryRequest.ProtoReflect.Descriptor instead.
func (*GetOrganizationsHostQueryRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{531}
}

func (x *GetOrganizationsHostQueryRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GetResultOrganizationsHostQueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *GetResultOrganizationsHostQueryRequest) Reset() {
	*x = GetResultOrganizationsHostQueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[532]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResultOrganizationsHostQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResultOrganizationsHostQueryRequest) ProtoMessage() {}

func (x *GetResultOrganizationsHostQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[532]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResultOrganizationsHostQueryRequest.ProtoReflect.Descriptor instead.
func (*GetResultOrganizationsHostQueryRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{532}
}

func (x *GetResultOrganizationsHostQueryRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GetResultViewOrganizationsHostQueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *GetResultViewOrganizationsHostQueryRequest) Reset() {
	*x = GetResultViewOrganizationsHostQueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[533]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResultViewOrganizationsHostQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResultViewOrganizationsHostQueryRequest) ProtoMessage() {}

func (x *GetResultViewOrganizationsHostQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[533]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResultViewOrganizationsHostQueryRequest.ProtoReflect.Descriptor instead.
func (*GetResultViewOrganizationsHostQueryRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{533}
}

func (x *GetResultViewOrganizationsHostQueryRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type ListOrganizationsHostQueriesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dataset                  *string `protobuf:"bytes,1,opt,name=dataset" json:"dataset,omitempty"`
	EnvgroupHostname         *string `protobuf:"bytes,2,opt,name=envgroup_hostname,json=envgroupHostname" json:"envgroup_hostname,omitempty"`
	From                     *string `protobuf:"bytes,3,opt,name=from" json:"from,omitempty"`
	InclQueriesWithoutReport *string `protobuf:"bytes,4,opt,name=incl_queries_without_report,json=inclQueriesWithoutReport" json:"incl_queries_without_report,omitempty"`
	Parent                   *string `protobuf:"bytes,5,opt,name=parent" json:"parent,omitempty"`
	Status                   *string `protobuf:"bytes,6,opt,name=status" json:"status,omitempty"`
	SubmittedBy              *string `protobuf:"bytes,7,opt,name=submitted_by,json=submittedBy" json:"submitted_by,omitempty"`
	To                       *string `protobuf:"bytes,8,opt,name=to" json:"to,omitempty"`
}

func (x *ListOrganizationsHostQueriesRequest) Reset() {
	*x = ListOrganizationsHostQueriesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[534]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrganizationsHostQueriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrganizationsHostQueriesRequest) ProtoMessage() {}

func (x *ListOrganizationsHostQueriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[534]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrganizationsHostQueriesRequest.ProtoReflect.Descriptor instead.
func (*ListOrganizationsHostQueriesRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{534}
}

func (x *ListOrganizationsHostQueriesRequest) GetDataset() string {
	if x != nil && x.Dataset != nil {
		return *x.Dataset
	}
	return ""
}

func (x *ListOrganizationsHostQueriesRequest) GetEnvgroupHostname() string {
	if x != nil && x.EnvgroupHostname != nil {
		return *x.EnvgroupHostname
	}
	return ""
}

func (x *ListOrganizationsHostQueriesRequest) GetFrom() string {
	if x != nil && x.From != nil {
		return *x.From
	}
	return ""
}

func (x *ListOrganizationsHostQueriesRequest) GetInclQueriesWithoutReport() string {
	if x != nil && x.InclQueriesWithoutReport != nil {
		return *x.InclQueriesWithoutReport
	}
	return ""
}

func (x *ListOrganizationsHostQueriesRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

func (x *ListOrganizationsHostQueriesRequest) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

func (x *ListOrganizationsHostQueriesRequest) GetSubmittedBy() string {
	if x != nil && x.SubmittedBy != nil {
		return *x.SubmittedBy
	}
	return ""
}

func (x *ListOrganizationsHostQueriesRequest) GetTo() string {
	if x != nil && x.To != nil {
		return *x.To
	}
	return ""
}

type CreateOrganizationsHostSecurityReportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent                          *string                                 `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
	OrganizationsHostSecurityReport *GoogleCloudApigeeV1SecurityReportQuery `protobuf:"bytes,2,opt,name=organizations_host_security_report,json=organizationsHostSecurityReport" json:"organizations_host_security_report,omitempty"`
}

func (x *CreateOrganizationsHostSecurityReportRequest) Reset() {
	*x = CreateOrganizationsHostSecurityReportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[535]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrganizationsHostSecurityReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrganizationsHostSecurityReportRequest) ProtoMessage() {}

func (x *CreateOrganizationsHostSecurityReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[535]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrganizationsHostSecurityReportRequest.ProtoReflect.Descriptor instead.
func (*CreateOrganizationsHostSecurityReportRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{535}
}

func (x *CreateOrganizationsHostSecurityReportRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

func (x *CreateOrganizationsHostSecurityReportRequest) GetOrganizationsHostSecurityReport() *GoogleCloudApigeeV1SecurityReportQuery {
	if x != nil {
		return x.OrganizationsHostSecurityReport
	}
	return nil
}

type GetOrganizationsHostSecurityReportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *GetOrganizationsHostSecurityReportRequest) Reset() {
	*x = GetOrganizationsHostSecurityReportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[536]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrganizationsHostSecurityReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrganizationsHostSecurityReportRequest) ProtoMessage() {}

func (x *GetOrganizationsHostSecurityReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[536]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrganizationsHostSecurityReportRequest.ProtoReflect.Descriptor instead.
func (*GetOrganizationsHostSecurityReportRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{536}
}

func (x *GetOrganizationsHostSecurityReportRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GetResultOrganizationsHostSecurityReportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *GetResultOrganizationsHostSecurityReportRequest) Reset() {
	*x = GetResultOrganizationsHostSecurityReportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[537]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResultOrganizationsHostSecurityReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResultOrganizationsHostSecurityReportRequest) ProtoMessage() {}

func (x *GetResultOrganizationsHostSecurityReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[537]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResultOrganizationsHostSecurityReportRequest.ProtoReflect.Descriptor instead.
func (*GetResultOrganizationsHostSecurityReportRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{537}
}

func (x *GetResultOrganizationsHostSecurityReportRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GetResultViewOrganizationsHostSecurityReportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *GetResultViewOrganizationsHostSecurityReportRequest) Reset() {
	*x = GetResultViewOrganizationsHostSecurityReportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[538]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResultViewOrganizationsHostSecurityReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResultViewOrganizationsHostSecurityReportRequest) ProtoMessage() {}

func (x *GetResultViewOrganizationsHostSecurityReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[538]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResultViewOrganizationsHostSecurityReportRequest.ProtoReflect.Descriptor instead.
func (*GetResultViewOrganizationsHostSecurityReportRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{538}
}

func (x *GetResultViewOrganizationsHostSecurityReportRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type ListOrganizationsHostSecurityReportsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dataset          *string `protobuf:"bytes,1,opt,name=dataset" json:"dataset,omitempty"`
	EnvgroupHostname *string `protobuf:"bytes,2,opt,name=envgroup_hostname,json=envgroupHostname" json:"envgroup_hostname,omitempty"`
	From             *string `protobuf:"bytes,3,opt,name=from" json:"from,omitempty"`
	PageSize         *int32  `protobuf:"varint,4,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	PageToken        *string `protobuf:"bytes,5,opt,name=page_token,json=pageToken" json:"page_token,omitempty"`
	Parent           *string `protobuf:"bytes,6,opt,name=parent" json:"parent,omitempty"`
	Status           *string `protobuf:"bytes,7,opt,name=status" json:"status,omitempty"`
	SubmittedBy      *string `protobuf:"bytes,8,opt,name=submitted_by,json=submittedBy" json:"submitted_by,omitempty"`
	To               *string `protobuf:"bytes,9,opt,name=to" json:"to,omitempty"`
}

func (x *ListOrganizationsHostSecurityReportsRequest) Reset() {
	*x = ListOrganizationsHostSecurityReportsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[539]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrganizationsHostSecurityReportsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrganizationsHostSecurityReportsRequest) ProtoMessage() {}

func (x *ListOrganizationsHostSecurityReportsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[539]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrganizationsHostSecurityReportsRequest.ProtoReflect.Descriptor instead.
func (*ListOrganizationsHostSecurityReportsRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{539}
}

func (x *ListOrganizationsHostSecurityReportsRequest) GetDataset() string {
	if x != nil && x.Dataset != nil {
		return *x.Dataset
	}
	return ""
}

func (x *ListOrganizationsHostSecurityReportsRequest) GetEnvgroupHostname() string {
	if x != nil && x.EnvgroupHostname != nil {
		return *x.EnvgroupHostname
	}
	return ""
}

func (x *ListOrganizationsHostSecurityReportsRequest) GetFrom() string {
	if x != nil && x.From != nil {
		return *x.From
	}
	return ""
}

func (x *ListOrganizationsHostSecurityReportsRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *ListOrganizationsHostSecurityReportsRequest) GetPageToken() string {
	if x != nil && x.PageToken != nil {
		return *x.PageToken
	}
	return ""
}

func (x *ListOrganizationsHostSecurityReportsRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

func (x *ListOrganizationsHostSecurityReportsRequest) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

func (x *ListOrganizationsHostSecurityReportsRequest) GetSubmittedBy() string {
	if x != nil && x.SubmittedBy != nil {
		return *x.SubmittedBy
	}
	return ""
}

func (x *ListOrganizationsHostSecurityReportsRequest) GetTo() string {
	if x != nil && x.To != nil {
		return *x.To
	}
	return ""
}

type GetOrganizationsHostStatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accuracy         *string `protobuf:"bytes,1,opt,name=accuracy" json:"accuracy,omitempty"`
	EnvgroupHostname *string `protobuf:"bytes,2,opt,name=envgroup_hostname,json=envgroupHostname" json:"envgroup_hostname,omitempty"`
	Filter           *string `protobuf:"bytes,3,opt,name=filter" json:"filter,omitempty"`
	Limit            *string `protobuf:"bytes,4,opt,name=limit" json:"limit,omitempty"`
	Name             *string `protobuf:"bytes,5,opt,name=name" json:"name,omitempty"`
	Offset           *string `protobuf:"bytes,6,opt,name=offset" json:"offset,omitempty"`
	Realtime         *bool   `protobuf:"varint,7,opt,name=realtime" json:"realtime,omitempty"`
	Select           *string `protobuf:"bytes,8,opt,name=select" json:"select,omitempty"`
	Sort             *string `protobuf:"bytes,9,opt,name=sort" json:"sort,omitempty"`
	Sortby           *string `protobuf:"bytes,10,opt,name=sortby" json:"sortby,omitempty"`
	TimeRange        *string `protobuf:"bytes,11,opt,name=time_range,json=timeRange" json:"time_range,omitempty"`
	TimeUnit         *string `protobuf:"bytes,12,opt,name=time_unit,json=timeUnit" json:"time_unit,omitempty"`
	Topk             *string `protobuf:"bytes,13,opt,name=topk" json:"topk,omitempty"`
	TsAscending      *bool   `protobuf:"varint,14,opt,name=ts_ascending,json=tsAscending" json:"ts_ascending,omitempty"`
	Tzo              *string `protobuf:"bytes,15,opt,name=tzo" json:"tzo,omitempty"`
}

func (x *GetOrganizationsHostStatRequest) Reset() {
	*x = GetOrganizationsHostStatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[540]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrganizationsHostStatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrganizationsHostStatRequest) ProtoMessage() {}

func (x *GetOrganizationsHostStatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[540]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrganizationsHostStatRequest.ProtoReflect.Descriptor instead.
func (*GetOrganizationsHostStatRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{540}
}

func (x *GetOrganizationsHostStatRequest) GetAccuracy() string {
	if x != nil && x.Accuracy != nil {
		return *x.Accuracy
	}
	return ""
}

func (x *GetOrganizationsHostStatRequest) GetEnvgroupHostname() string {
	if x != nil && x.EnvgroupHostname != nil {
		return *x.EnvgroupHostname
	}
	return ""
}

func (x *GetOrganizationsHostStatRequest) GetFilter() string {
	if x != nil && x.Filter != nil {
		return *x.Filter
	}
	return ""
}

func (x *GetOrganizationsHostStatRequest) GetLimit() string {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return ""
}

func (x *GetOrganizationsHostStatRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GetOrganizationsHostStatRequest) GetOffset() string {
	if x != nil && x.Offset != nil {
		return *x.Offset
	}
	return ""
}

func (x *GetOrganizationsHostStatRequest) GetRealtime() bool {
	if x != nil && x.Realtime != nil {
		return *x.Realtime
	}
	return false
}

func (x *GetOrganizationsHostStatRequest) GetSelect() string {
	if x != nil && x.Select != nil {
		return *x.Select
	}
	return ""
}

func (x *GetOrganizationsHostStatRequest) GetSort() string {
	if x != nil && x.Sort != nil {
		return *x.Sort
	}
	return ""
}

func (x *GetOrganizationsHostStatRequest) GetSortby() string {
	if x != nil && x.Sortby != nil {
		return *x.Sortby
	}
	return ""
}

func (x *GetOrganizationsHostStatRequest) GetTimeRange() string {
	if x != nil && x.TimeRange != nil {
		return *x.TimeRange
	}
	return ""
}

func (x *GetOrganizationsHostStatRequest) GetTimeUnit() string {
	if x != nil && x.TimeUnit != nil {
		return *x.TimeUnit
	}
	return ""
}

func (x *GetOrganizationsHostStatRequest) GetTopk() string {
	if x != nil && x.Topk != nil {
		return *x.Topk
	}
	return ""
}

func (x *GetOrganizationsHostStatRequest) GetTsAscending() bool {
	if x != nil && x.TsAscending != nil {
		return *x.TsAscending
	}
	return false
}

func (x *GetOrganizationsHostStatRequest) GetTzo() string {
	if x != nil && x.Tzo != nil {
		return *x.Tzo
	}
	return ""
}

type CreateOrganizationsInstanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent                *string                      `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
	OrganizationsInstance *GoogleCloudApigeeV1Instance `protobuf:"bytes,2,opt,name=organizations_instance,json=organizationsInstance" json:"organizations_instance,omitempty"`
}

func (x *CreateOrganizationsInstanceRequest) Reset() {
	*x = CreateOrganizationsInstanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[541]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrganizationsInstanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrganizationsInstanceRequest) ProtoMessage() {}

func (x *CreateOrganizationsInstanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[541]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrganizationsInstanceRequest.ProtoReflect.Descriptor instead.
func (*CreateOrganizationsInstanceRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{541}
}

func (x *CreateOrganizationsInstanceRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

func (x *CreateOrganizationsInstanceRequest) GetOrganizationsInstance() *GoogleCloudApigeeV1Instance {
	if x != nil {
		return x.OrganizationsInstance
	}
	return nil
}

type DeleteOrganizationsInstanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *DeleteOrganizationsInstanceRequest) Reset() {
	*x = DeleteOrganizationsInstanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[542]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrganizationsInstanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrganizationsInstanceRequest) ProtoMessage() {}

func (x *DeleteOrganizationsInstanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[542]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrganizationsInstanceRequest.ProtoReflect.Descriptor instead.
func (*DeleteOrganizationsInstanceRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{542}
}

func (x *DeleteOrganizationsInstanceRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GetOrganizationsInstanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *GetOrganizationsInstanceRequest) Reset() {
	*x = GetOrganizationsInstanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[543]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrganizationsInstanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrganizationsInstanceRequest) ProtoMessage() {}

func (x *GetOrganizationsInstanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[543]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrganizationsInstanceRequest.ProtoReflect.Descriptor instead.
func (*GetOrganizationsInstanceRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{543}
}

func (x *GetOrganizationsInstanceRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type ListOrganizationsInstancesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize  *int32  `protobuf:"varint,1,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	PageToken *string `protobuf:"bytes,2,opt,name=page_token,json=pageToken" json:"page_token,omitempty"`
	Parent    *string `protobuf:"bytes,3,opt,name=parent" json:"parent,omitempty"`
}

func (x *ListOrganizationsInstancesRequest) Reset() {
	*x = ListOrganizationsInstancesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[544]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrganizationsInstancesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrganizationsInstancesRequest) ProtoMessage() {}

func (x *ListOrganizationsInstancesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[544]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrganizationsInstancesRequest.ProtoReflect.Descriptor instead.
func (*ListOrganizationsInstancesRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{544}
}

func (x *ListOrganizationsInstancesRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *ListOrganizationsInstancesRequest) GetPageToken() string {
	if x != nil && x.PageToken != nil {
		return *x.PageToken
	}
	return ""
}

func (x *ListOrganizationsInstancesRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

type PatchOrganizationsInstanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                  *string                      `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	UpdateMask            *string                      `protobuf:"bytes,2,opt,name=update_mask,json=updateMask" json:"update_mask,omitempty"`
	OrganizationsInstance *GoogleCloudApigeeV1Instance `protobuf:"bytes,3,opt,name=organizations_instance,json=organizationsInstance" json:"organizations_instance,omitempty"`
}

func (x *PatchOrganizationsInstanceRequest) Reset() {
	*x = PatchOrganizationsInstanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[545]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PatchOrganizationsInstanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatchOrganizationsInstanceRequest) ProtoMessage() {}

func (x *PatchOrganizationsInstanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[545]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatchOrganizationsInstanceRequest.ProtoReflect.Descriptor instead.
func (*PatchOrganizationsInstanceRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{545}
}

func (x *PatchOrganizationsInstanceRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *PatchOrganizationsInstanceRequest) GetUpdateMask() string {
	if x != nil && x.UpdateMask != nil {
		return *x.UpdateMask
	}
	return ""
}

func (x *PatchOrganizationsInstanceRequest) GetOrganizationsInstance() *GoogleCloudApigeeV1Instance {
	if x != nil {
		return x.OrganizationsInstance
	}
	return nil
}

type ReportStatusOrganizationsInstanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Instance              *string                                         `protobuf:"bytes,1,opt,name=instance" json:"instance,omitempty"`
	OrganizationsInstance *GoogleCloudApigeeV1ReportInstanceStatusRequest `protobuf:"bytes,2,opt,name=organizations_instance,json=organizationsInstance" json:"organizations_instance,omitempty"`
}

func (x *ReportStatusOrganizationsInstanceRequest) Reset() {
	*x = ReportStatusOrganizationsInstanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[546]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportStatusOrganizationsInstanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportStatusOrganizationsInstanceRequest) ProtoMessage() {}

func (x *ReportStatusOrganizationsInstanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[546]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportStatusOrganizationsInstanceRequest.ProtoReflect.Descriptor instead.
func (*ReportStatusOrganizationsInstanceRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{546}
}

func (x *ReportStatusOrganizationsInstanceRequest) GetInstance() string {
	if x != nil && x.Instance != nil {
		return *x.Instance
	}
	return ""
}

func (x *ReportStatusOrganizationsInstanceRequest) GetOrganizationsInstance() *GoogleCloudApigeeV1ReportInstanceStatusRequest {
	if x != nil {
		return x.OrganizationsInstance
	}
	return nil
}

type CreateOrganizationsInstancesAttachmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent                           *string                                `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
	OrganizationsInstancesAttachment *GoogleCloudApigeeV1InstanceAttachment `protobuf:"bytes,2,opt,name=organizations_instances_attachment,json=organizationsInstancesAttachment" json:"organizations_instances_attachment,omitempty"`
}

func (x *CreateOrganizationsInstancesAttachmentRequest) Reset() {
	*x = CreateOrganizationsInstancesAttachmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[547]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrganizationsInstancesAttachmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrganizationsInstancesAttachmentRequest) ProtoMessage() {}

func (x *CreateOrganizationsInstancesAttachmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[547]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrganizationsInstancesAttachmentRequest.ProtoReflect.Descriptor instead.
func (*CreateOrganizationsInstancesAttachmentRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{547}
}

func (x *CreateOrganizationsInstancesAttachmentRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

func (x *CreateOrganizationsInstancesAttachmentRequest) GetOrganizationsInstancesAttachment() *GoogleCloudApigeeV1InstanceAttachment {
	if x != nil {
		return x.OrganizationsInstancesAttachment
	}
	return nil
}

type DeleteOrganizationsInstancesAttachmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *DeleteOrganizationsInstancesAttachmentRequest) Reset() {
	*x = DeleteOrganizationsInstancesAttachmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[548]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrganizationsInstancesAttachmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrganizationsInstancesAttachmentRequest) ProtoMessage() {}

func (x *DeleteOrganizationsInstancesAttachmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[548]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrganizationsInstancesAttachmentRequest.ProtoReflect.Descriptor instead.
func (*DeleteOrganizationsInstancesAttachmentRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{548}
}

func (x *DeleteOrganizationsInstancesAttachmentRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GetOrganizationsInstancesAttachmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *GetOrganizationsInstancesAttachmentRequest) Reset() {
	*x = GetOrganizationsInstancesAttachmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[549]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrganizationsInstancesAttachmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrganizationsInstancesAttachmentRequest) ProtoMessage() {}

func (x *GetOrganizationsInstancesAttachmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[549]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrganizationsInstancesAttachmentRequest.ProtoReflect.Descriptor instead.
func (*GetOrganizationsInstancesAttachmentRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{549}
}

func (x *GetOrganizationsInstancesAttachmentRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type ListOrganizationsInstancesAttachmentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize  *int32  `protobuf:"varint,1,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	PageToken *string `protobuf:"bytes,2,opt,name=page_token,json=pageToken" json:"page_token,omitempty"`
	Parent    *string `protobuf:"bytes,3,opt,name=parent" json:"parent,omitempty"`
}

func (x *ListOrganizationsInstancesAttachmentsRequest) Reset() {
	*x = ListOrganizationsInstancesAttachmentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[550]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrganizationsInstancesAttachmentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrganizationsInstancesAttachmentsRequest) ProtoMessage() {}

func (x *ListOrganizationsInstancesAttachmentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[550]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrganizationsInstancesAttachmentsRequest.ProtoReflect.Descriptor instead.
func (*ListOrganizationsInstancesAttachmentsRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{550}
}

func (x *ListOrganizationsInstancesAttachmentsRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *ListOrganizationsInstancesAttachmentsRequest) GetPageToken() string {
	if x != nil && x.PageToken != nil {
		return *x.PageToken
	}
	return ""
}

func (x *ListOrganizationsInstancesAttachmentsRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

type CreateOrganizationsInstancesCanaryevaluationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent                                 *string                              `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
	OrganizationsInstancesCanaryevaluation *GoogleCloudApigeeV1CanaryEvaluation `protobuf:"bytes,2,opt,name=organizations_instances_canaryevaluation,json=organizationsInstancesCanaryevaluation" json:"organizations_instances_canaryevaluation,omitempty"`
}

func (x *CreateOrganizationsInstancesCanaryevaluationRequest) Reset() {
	*x = CreateOrganizationsInstancesCanaryevaluationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[551]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrganizationsInstancesCanaryevaluationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrganizationsInstancesCanaryevaluationRequest) ProtoMessage() {}

func (x *CreateOrganizationsInstancesCanaryevaluationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[551]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrganizationsInstancesCanaryevaluationRequest.ProtoReflect.Descriptor instead.
func (*CreateOrganizationsInstancesCanaryevaluationRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{551}
}

func (x *CreateOrganizationsInstancesCanaryevaluationRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

func (x *CreateOrganizationsInstancesCanaryevaluationRequest) GetOrganizationsInstancesCanaryevaluation() *GoogleCloudApigeeV1CanaryEvaluation {
	if x != nil {
		return x.OrganizationsInstancesCanaryevaluation
	}
	return nil
}

type GetOrganizationsInstancesCanaryevaluationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *GetOrganizationsInstancesCanaryevaluationRequest) Reset() {
	*x = GetOrganizationsInstancesCanaryevaluationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[552]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrganizationsInstancesCanaryevaluationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrganizationsInstancesCanaryevaluationRequest) ProtoMessage() {}

func (x *GetOrganizationsInstancesCanaryevaluationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[552]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrganizationsInstancesCanaryevaluationRequest.ProtoReflect.Descriptor instead.
func (*GetOrganizationsInstancesCanaryevaluationRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{552}
}

func (x *GetOrganizationsInstancesCanaryevaluationRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type ActivateOrganizationsInstancesNatAddresseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                              *string                                       `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	OrganizationsInstancesNatAddresse *GoogleCloudApigeeV1ActivateNatAddressRequest `protobuf:"bytes,2,opt,name=organizations_instances_nat_addresse,json=organizationsInstancesNatAddresse" json:"organizations_instances_nat_addresse,omitempty"`
}

func (x *ActivateOrganizationsInstancesNatAddresseRequest) Reset() {
	*x = ActivateOrganizationsInstancesNatAddresseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[553]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivateOrganizationsInstancesNatAddresseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivateOrganizationsInstancesNatAddresseRequest) ProtoMessage() {}

func (x *ActivateOrganizationsInstancesNatAddresseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[553]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivateOrganizationsInstancesNatAddresseRequest.ProtoReflect.Descriptor instead.
func (*ActivateOrganizationsInstancesNatAddresseRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{553}
}

func (x *ActivateOrganizationsInstancesNatAddresseRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ActivateOrganizationsInstancesNatAddresseRequest) GetOrganizationsInstancesNatAddresse() *GoogleCloudApigeeV1ActivateNatAddressRequest {
	if x != nil {
		return x.OrganizationsInstancesNatAddresse
	}
	return nil
}

type CreateOrganizationsInstancesNatAddresseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent                            *string                        `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
	OrganizationsInstancesNatAddresse *GoogleCloudApigeeV1NatAddress `protobuf:"bytes,2,opt,name=organizations_instances_nat_addresse,json=organizationsInstancesNatAddresse" json:"organizations_instances_nat_addresse,omitempty"`
}

func (x *CreateOrganizationsInstancesNatAddresseRequest) Reset() {
	*x = CreateOrganizationsInstancesNatAddresseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[554]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrganizationsInstancesNatAddresseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrganizationsInstancesNatAddresseRequest) ProtoMessage() {}

func (x *CreateOrganizationsInstancesNatAddresseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[554]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrganizationsInstancesNatAddresseRequest.ProtoReflect.Descriptor instead.
func (*CreateOrganizationsInstancesNatAddresseRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{554}
}

func (x *CreateOrganizationsInstancesNatAddresseRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

func (x *CreateOrganizationsInstancesNatAddresseRequest) GetOrganizationsInstancesNatAddresse() *GoogleCloudApigeeV1NatAddress {
	if x != nil {
		return x.OrganizationsInstancesNatAddresse
	}
	return nil
}

type DeleteOrganizationsInstancesNatAddresseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *DeleteOrganizationsInstancesNatAddresseRequest) Reset() {
	*x = DeleteOrganizationsInstancesNatAddresseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[555]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrganizationsInstancesNatAddresseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrganizationsInstancesNatAddresseRequest) ProtoMessage() {}

func (x *DeleteOrganizationsInstancesNatAddresseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[555]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrganizationsInstancesNatAddresseRequest.ProtoReflect.Descriptor instead.
func (*DeleteOrganizationsInstancesNatAddresseRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{555}
}

func (x *DeleteOrganizationsInstancesNatAddresseRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GetOrganizationsInstancesNatAddresseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *GetOrganizationsInstancesNatAddresseRequest) Reset() {
	*x = GetOrganizationsInstancesNatAddresseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[556]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrganizationsInstancesNatAddresseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrganizationsInstancesNatAddresseRequest) ProtoMessage() {}

func (x *GetOrganizationsInstancesNatAddresseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[556]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrganizationsInstancesNatAddresseRequest.ProtoReflect.Descriptor instead.
func (*GetOrganizationsInstancesNatAddresseRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{556}
}

func (x *GetOrganizationsInstancesNatAddresseRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type ListOrganizationsInstancesNatAddressesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize  *int32  `protobuf:"varint,1,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	PageToken *string `protobuf:"bytes,2,opt,name=page_token,json=pageToken" json:"page_token,omitempty"`
	Parent    *string `protobuf:"bytes,3,opt,name=parent" json:"parent,omitempty"`
}

func (x *ListOrganizationsInstancesNatAddressesRequest) Reset() {
	*x = ListOrganizationsInstancesNatAddressesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[557]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrganizationsInstancesNatAddressesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrganizationsInstancesNatAddressesRequest) ProtoMessage() {}

func (x *ListOrganizationsInstancesNatAddressesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[557]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrganizationsInstancesNatAddressesRequest.ProtoReflect.Descriptor instead.
func (*ListOrganizationsInstancesNatAddressesRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{557}
}

func (x *ListOrganizationsInstancesNatAddressesRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *ListOrganizationsInstancesNatAddressesRequest) GetPageToken() string {
	if x != nil && x.PageToken != nil {
		return *x.PageToken
	}
	return ""
}

func (x *ListOrganizationsInstancesNatAddressesRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

type CreateOrganizationsKeyvaluemapRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent                   *string                         `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
	OrganizationsKeyvaluemap *GoogleCloudApigeeV1KeyValueMap `protobuf:"bytes,2,opt,name=organizations_keyvaluemap,json=organizationsKeyvaluemap" json:"organizations_keyvaluemap,omitempty"`
}

func (x *CreateOrganizationsKeyvaluemapRequest) Reset() {
	*x = CreateOrganizationsKeyvaluemapRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[558]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrganizationsKeyvaluemapRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrganizationsKeyvaluemapRequest) ProtoMessage() {}

func (x *CreateOrganizationsKeyvaluemapRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[558]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrganizationsKeyvaluemapRequest.ProtoReflect.Descriptor instead.
func (*CreateOrganizationsKeyvaluemapRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{558}
}

func (x *CreateOrganizationsKeyvaluemapRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

func (x *CreateOrganizationsKeyvaluemapRequest) GetOrganizationsKeyvaluemap() *GoogleCloudApigeeV1KeyValueMap {
	if x != nil {
		return x.OrganizationsKeyvaluemap
	}
	return nil
}

type DeleteOrganizationsKeyvaluemapRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *DeleteOrganizationsKeyvaluemapRequest) Reset() {
	*x = DeleteOrganizationsKeyvaluemapRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[559]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrganizationsKeyvaluemapRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrganizationsKeyvaluemapRequest) ProtoMessage() {}

func (x *DeleteOrganizationsKeyvaluemapRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[559]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrganizationsKeyvaluemapRequest.ProtoReflect.Descriptor instead.
func (*DeleteOrganizationsKeyvaluemapRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{559}
}

func (x *DeleteOrganizationsKeyvaluemapRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type CreateOrganizationsKeyvaluemapsEntryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent                         *string                           `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
	OrganizationsKeyvaluemapsEntry *GoogleCloudApigeeV1KeyValueEntry `protobuf:"bytes,2,opt,name=organizations_keyvaluemaps_entry,json=organizationsKeyvaluemapsEntry" json:"organizations_keyvaluemaps_entry,omitempty"`
}

func (x *CreateOrganizationsKeyvaluemapsEntryRequest) Reset() {
	*x = CreateOrganizationsKeyvaluemapsEntryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[560]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrganizationsKeyvaluemapsEntryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrganizationsKeyvaluemapsEntryRequest) ProtoMessage() {}

func (x *CreateOrganizationsKeyvaluemapsEntryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[560]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrganizationsKeyvaluemapsEntryRequest.ProtoReflect.Descriptor instead.
func (*CreateOrganizationsKeyvaluemapsEntryRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{560}
}

func (x *CreateOrganizationsKeyvaluemapsEntryRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

func (x *CreateOrganizationsKeyvaluemapsEntryRequest) GetOrganizationsKeyvaluemapsEntry() *GoogleCloudApigeeV1KeyValueEntry {
	if x != nil {
		return x.OrganizationsKeyvaluemapsEntry
	}
	return nil
}

type DeleteOrganizationsKeyvaluemapsEntryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *DeleteOrganizationsKeyvaluemapsEntryRequest) Reset() {
	*x = DeleteOrganizationsKeyvaluemapsEntryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[561]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrganizationsKeyvaluemapsEntryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrganizationsKeyvaluemapsEntryRequest) ProtoMessage() {}

func (x *DeleteOrganizationsKeyvaluemapsEntryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[561]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrganizationsKeyvaluemapsEntryRequest.ProtoReflect.Descriptor instead.
func (*DeleteOrganizationsKeyvaluemapsEntryRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{561}
}

func (x *DeleteOrganizationsKeyvaluemapsEntryRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GetOrganizationsKeyvaluemapsEntryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *GetOrganizationsKeyvaluemapsEntryRequest) Reset() {
	*x = GetOrganizationsKeyvaluemapsEntryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[562]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrganizationsKeyvaluemapsEntryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrganizationsKeyvaluemapsEntryRequest) ProtoMessage() {}

func (x *GetOrganizationsKeyvaluemapsEntryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[562]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrganizationsKeyvaluemapsEntryRequest.ProtoReflect.Descriptor instead.
func (*GetOrganizationsKeyvaluemapsEntryRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{562}
}

func (x *GetOrganizationsKeyvaluemapsEntryRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type ListOrganizationsKeyvaluemapsEntriesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize  *int32  `protobuf:"varint,1,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	PageToken *string `protobuf:"bytes,2,opt,name=page_token,json=pageToken" json:"page_token,omitempty"`
	Parent    *string `protobuf:"bytes,3,opt,name=parent" json:"parent,omitempty"`
}

func (x *ListOrganizationsKeyvaluemapsEntriesRequest) Reset() {
	*x = ListOrganizationsKeyvaluemapsEntriesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[563]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrganizationsKeyvaluemapsEntriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrganizationsKeyvaluemapsEntriesRequest) ProtoMessage() {}

func (x *ListOrganizationsKeyvaluemapsEntriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[563]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrganizationsKeyvaluemapsEntriesRequest.ProtoReflect.Descriptor instead.
func (*ListOrganizationsKeyvaluemapsEntriesRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{563}
}

func (x *ListOrganizationsKeyvaluemapsEntriesRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *ListOrganizationsKeyvaluemapsEntriesRequest) GetPageToken() string {
	if x != nil && x.PageToken != nil {
		return *x.PageToken
	}
	return ""
}

func (x *ListOrganizationsKeyvaluemapsEntriesRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

type UpdateOrganizationsKeyvaluemapsEntryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                           *string                           `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	OrganizationsKeyvaluemapsEntry *GoogleCloudApigeeV1KeyValueEntry `protobuf:"bytes,2,opt,name=organizations_keyvaluemaps_entry,json=organizationsKeyvaluemapsEntry" json:"organizations_keyvaluemaps_entry,omitempty"`
}

func (x *UpdateOrganizationsKeyvaluemapsEntryRequest) Reset() {
	*x = UpdateOrganizationsKeyvaluemapsEntryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[564]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrganizationsKeyvaluemapsEntryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrganizationsKeyvaluemapsEntryRequest) ProtoMessage() {}

func (x *UpdateOrganizationsKeyvaluemapsEntryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[564]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrganizationsKeyvaluemapsEntryRequest.ProtoReflect.Descriptor instead.
func (*UpdateOrganizationsKeyvaluemapsEntryRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{564}
}

func (x *UpdateOrganizationsKeyvaluemapsEntryRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UpdateOrganizationsKeyvaluemapsEntryRequest) GetOrganizationsKeyvaluemapsEntry() *GoogleCloudApigeeV1KeyValueEntry {
	if x != nil {
		return x.OrganizationsKeyvaluemapsEntry
	}
	return nil
}

type GetOrganizationsOptimizedHostStatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accuracy         *string `protobuf:"bytes,1,opt,name=accuracy" json:"accuracy,omitempty"`
	EnvgroupHostname *string `protobuf:"bytes,2,opt,name=envgroup_hostname,json=envgroupHostname" json:"envgroup_hostname,omitempty"`
	Filter           *string `protobuf:"bytes,3,opt,name=filter" json:"filter,omitempty"`
	Limit            *string `protobuf:"bytes,4,opt,name=limit" json:"limit,omitempty"`
	Name             *string `protobuf:"bytes,5,opt,name=name" json:"name,omitempty"`
	Offset           *string `protobuf:"bytes,6,opt,name=offset" json:"offset,omitempty"`
	Realtime         *bool   `protobuf:"varint,7,opt,name=realtime" json:"realtime,omitempty"`
	Select           *string `protobuf:"bytes,8,opt,name=select" json:"select,omitempty"`
	Sort             *string `protobuf:"bytes,9,opt,name=sort" json:"sort,omitempty"`
	Sortby           *string `protobuf:"bytes,10,opt,name=sortby" json:"sortby,omitempty"`
	TimeRange        *string `protobuf:"bytes,11,opt,name=time_range,json=timeRange" json:"time_range,omitempty"`
	TimeUnit         *string `protobuf:"bytes,12,opt,name=time_unit,json=timeUnit" json:"time_unit,omitempty"`
	Topk             *string `protobuf:"bytes,13,opt,name=topk" json:"topk,omitempty"`
	TsAscending      *bool   `protobuf:"varint,14,opt,name=ts_ascending,json=tsAscending" json:"ts_ascending,omitempty"`
	Tzo              *string `protobuf:"bytes,15,opt,name=tzo" json:"tzo,omitempty"`
}

func (x *GetOrganizationsOptimizedHostStatRequest) Reset() {
	*x = GetOrganizationsOptimizedHostStatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[565]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrganizationsOptimizedHostStatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrganizationsOptimizedHostStatRequest) ProtoMessage() {}

func (x *GetOrganizationsOptimizedHostStatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[565]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrganizationsOptimizedHostStatRequest.ProtoReflect.Descriptor instead.
func (*GetOrganizationsOptimizedHostStatRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{565}
}

func (x *GetOrganizationsOptimizedHostStatRequest) GetAccuracy() string {
	if x != nil && x.Accuracy != nil {
		return *x.Accuracy
	}
	return ""
}

func (x *GetOrganizationsOptimizedHostStatRequest) GetEnvgroupHostname() string {
	if x != nil && x.EnvgroupHostname != nil {
		return *x.EnvgroupHostname
	}
	return ""
}

func (x *GetOrganizationsOptimizedHostStatRequest) GetFilter() string {
	if x != nil && x.Filter != nil {
		return *x.Filter
	}
	return ""
}

func (x *GetOrganizationsOptimizedHostStatRequest) GetLimit() string {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return ""
}

func (x *GetOrganizationsOptimizedHostStatRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GetOrganizationsOptimizedHostStatRequest) GetOffset() string {
	if x != nil && x.Offset != nil {
		return *x.Offset
	}
	return ""
}

func (x *GetOrganizationsOptimizedHostStatRequest) GetRealtime() bool {
	if x != nil && x.Realtime != nil {
		return *x.Realtime
	}
	return false
}

func (x *GetOrganizationsOptimizedHostStatRequest) GetSelect() string {
	if x != nil && x.Select != nil {
		return *x.Select
	}
	return ""
}

func (x *GetOrganizationsOptimizedHostStatRequest) GetSort() string {
	if x != nil && x.Sort != nil {
		return *x.Sort
	}
	return ""
}

func (x *GetOrganizationsOptimizedHostStatRequest) GetSortby() string {
	if x != nil && x.Sortby != nil {
		return *x.Sortby
	}
	return ""
}

func (x *GetOrganizationsOptimizedHostStatRequest) GetTimeRange() string {
	if x != nil && x.TimeRange != nil {
		return *x.TimeRange
	}
	return ""
}

func (x *GetOrganizationsOptimizedHostStatRequest) GetTimeUnit() string {
	if x != nil && x.TimeUnit != nil {
		return *x.TimeUnit
	}
	return ""
}

func (x *GetOrganizationsOptimizedHostStatRequest) GetTopk() string {
	if x != nil && x.Topk != nil {
		return *x.Topk
	}
	return ""
}

func (x *GetOrganizationsOptimizedHostStatRequest) GetTsAscending() bool {
	if x != nil && x.TsAscending != nil {
		return *x.TsAscending
	}
	return false
}

func (x *GetOrganizationsOptimizedHostStatRequest) GetTzo() string {
	if x != nil && x.Tzo != nil {
		return *x.Tzo
	}
	return ""
}

type CreateOrganizationsReportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent              *string                          `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
	OrganizationsReport *GoogleCloudApigeeV1CustomReport `protobuf:"bytes,2,opt,name=organizations_report,json=organizationsReport" json:"organizations_report,omitempty"`
}

func (x *CreateOrganizationsReportRequest) Reset() {
	*x = CreateOrganizationsReportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[566]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrganizationsReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrganizationsReportRequest) ProtoMessage() {}

func (x *CreateOrganizationsReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[566]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrganizationsReportRequest.ProtoReflect.Descriptor instead.
func (*CreateOrganizationsReportRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{566}
}

func (x *CreateOrganizationsReportRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

func (x *CreateOrganizationsReportRequest) GetOrganizationsReport() *GoogleCloudApigeeV1CustomReport {
	if x != nil {
		return x.OrganizationsReport
	}
	return nil
}

type DeleteOrganizationsReportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *DeleteOrganizationsReportRequest) Reset() {
	*x = DeleteOrganizationsReportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[567]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrganizationsReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrganizationsReportRequest) ProtoMessage() {}

func (x *DeleteOrganizationsReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[567]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrganizationsReportRequest.ProtoReflect.Descriptor instead.
func (*DeleteOrganizationsReportRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{567}
}

func (x *DeleteOrganizationsReportRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GetOrganizationsReportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *GetOrganizationsReportRequest) Reset() {
	*x = GetOrganizationsReportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[568]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrganizationsReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrganizationsReportRequest) ProtoMessage() {}

func (x *GetOrganizationsReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[568]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrganizationsReportRequest.ProtoReflect.Descriptor instead.
func (*GetOrganizationsReportRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{568}
}

func (x *GetOrganizationsReportRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type ListOrganizationsReportsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Expand *bool   `protobuf:"varint,1,opt,name=expand" json:"expand,omitempty"`
	Parent *string `protobuf:"bytes,2,opt,name=parent" json:"parent,omitempty"`
}

func (x *ListOrganizationsReportsRequest) Reset() {
	*x = ListOrganizationsReportsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[569]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrganizationsReportsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrganizationsReportsRequest) ProtoMessage() {}

func (x *ListOrganizationsReportsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[569]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrganizationsReportsRequest.ProtoReflect.Descriptor instead.
func (*ListOrganizationsReportsRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{569}
}

func (x *ListOrganizationsReportsRequest) GetExpand() bool {
	if x != nil && x.Expand != nil {
		return *x.Expand
	}
	return false
}

func (x *ListOrganizationsReportsRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

type UpdateOrganizationsReportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                *string                          `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	OrganizationsReport *GoogleCloudApigeeV1CustomReport `protobuf:"bytes,2,opt,name=organizations_report,json=organizationsReport" json:"organizations_report,omitempty"`
}

func (x *UpdateOrganizationsReportRequest) Reset() {
	*x = UpdateOrganizationsReportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[570]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrganizationsReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrganizationsReportRequest) ProtoMessage() {}

func (x *UpdateOrganizationsReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[570]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrganizationsReportRequest.ProtoReflect.Descriptor instead.
func (*UpdateOrganizationsReportRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{570}
}

func (x *UpdateOrganizationsReportRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UpdateOrganizationsReportRequest) GetOrganizationsReport() *GoogleCloudApigeeV1CustomReport {
	if x != nil {
		return x.OrganizationsReport
	}
	return nil
}

type BatchComputeOrganizationsSecurityAssessmentResultRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                                  *string                                                          `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	OrganizationsSecurityAssessmentResult *GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsRequest `protobuf:"bytes,2,opt,name=organizations_security_assessment_result,json=organizationsSecurityAssessmentResult" json:"organizations_security_assessment_result,omitempty"`
}

func (x *BatchComputeOrganizationsSecurityAssessmentResultRequest) Reset() {
	*x = BatchComputeOrganizationsSecurityAssessmentResultRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[571]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchComputeOrganizationsSecurityAssessmentResultRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchComputeOrganizationsSecurityAssessmentResultRequest) ProtoMessage() {}

func (x *BatchComputeOrganizationsSecurityAssessmentResultRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[571]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchComputeOrganizationsSecurityAssessmentResultRequest.ProtoReflect.Descriptor instead.
func (*BatchComputeOrganizationsSecurityAssessmentResultRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{571}
}

func (x *BatchComputeOrganizationsSecurityAssessmentResultRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *BatchComputeOrganizationsSecurityAssessmentResultRequest) GetOrganizationsSecurityAssessmentResult() *GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsRequest {
	if x != nil {
		return x.OrganizationsSecurityAssessmentResult
	}
	return nil
}

type CreateOrganizationsSecurityProfileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent                       *string                             `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
	SecurityProfileId            *string                             `protobuf:"bytes,2,opt,name=security_profile_id,json=securityProfileId" json:"security_profile_id,omitempty"`
	OrganizationsSecurityProfile *GoogleCloudApigeeV1SecurityProfile `protobuf:"bytes,3,opt,name=organizations_security_profile,json=organizationsSecurityProfile" json:"organizations_security_profile,omitempty"`
}

func (x *CreateOrganizationsSecurityProfileRequest) Reset() {
	*x = CreateOrganizationsSecurityProfileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[572]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrganizationsSecurityProfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrganizationsSecurityProfileRequest) ProtoMessage() {}

func (x *CreateOrganizationsSecurityProfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[572]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrganizationsSecurityProfileRequest.ProtoReflect.Descriptor instead.
func (*CreateOrganizationsSecurityProfileRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{572}
}

func (x *CreateOrganizationsSecurityProfileRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

func (x *CreateOrganizationsSecurityProfileRequest) GetSecurityProfileId() string {
	if x != nil && x.SecurityProfileId != nil {
		return *x.SecurityProfileId
	}
	return ""
}

func (x *CreateOrganizationsSecurityProfileRequest) GetOrganizationsSecurityProfile() *GoogleCloudApigeeV1SecurityProfile {
	if x != nil {
		return x.OrganizationsSecurityProfile
	}
	return nil
}

type DeleteOrganizationsSecurityProfileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *DeleteOrganizationsSecurityProfileRequest) Reset() {
	*x = DeleteOrganizationsSecurityProfileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[573]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrganizationsSecurityProfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrganizationsSecurityProfileRequest) ProtoMessage() {}

func (x *DeleteOrganizationsSecurityProfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[573]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrganizationsSecurityProfileRequest.ProtoReflect.Descriptor instead.
func (*DeleteOrganizationsSecurityProfileRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{573}
}

func (x *DeleteOrganizationsSecurityProfileRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GetOrganizationsSecurityProfileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *GetOrganizationsSecurityProfileRequest) Reset() {
	*x = GetOrganizationsSecurityProfileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[574]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrganizationsSecurityProfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrganizationsSecurityProfileRequest) ProtoMessage() {}

func (x *GetOrganizationsSecurityProfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[574]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrganizationsSecurityProfileRequest.ProtoReflect.Descriptor instead.
func (*GetOrganizationsSecurityProfileRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{574}
}

func (x *GetOrganizationsSecurityProfileRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type ListOrganizationsSecurityProfilesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize  *int32  `protobuf:"varint,1,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	PageToken *string `protobuf:"bytes,2,opt,name=page_token,json=pageToken" json:"page_token,omitempty"`
	Parent    *string `protobuf:"bytes,3,opt,name=parent" json:"parent,omitempty"`
}

func (x *ListOrganizationsSecurityProfilesRequest) Reset() {
	*x = ListOrganizationsSecurityProfilesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[575]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrganizationsSecurityProfilesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrganizationsSecurityProfilesRequest) ProtoMessage() {}

func (x *ListOrganizationsSecurityProfilesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[575]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrganizationsSecurityProfilesRequest.ProtoReflect.Descriptor instead.
func (*ListOrganizationsSecurityProfilesRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{575}
}

func (x *ListOrganizationsSecurityProfilesRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *ListOrganizationsSecurityProfilesRequest) GetPageToken() string {
	if x != nil && x.PageToken != nil {
		return *x.PageToken
	}
	return ""
}

func (x *ListOrganizationsSecurityProfilesRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

type ListRevisionsOrganizationsSecurityProfileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	PageSize  *int32  `protobuf:"varint,2,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	PageToken *string `protobuf:"bytes,3,opt,name=page_token,json=pageToken" json:"page_token,omitempty"`
}

func (x *ListRevisionsOrganizationsSecurityProfileRequest) Reset() {
	*x = ListRevisionsOrganizationsSecurityProfileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[576]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRevisionsOrganizationsSecurityProfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRevisionsOrganizationsSecurityProfileRequest) ProtoMessage() {}

func (x *ListRevisionsOrganizationsSecurityProfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[576]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRevisionsOrganizationsSecurityProfileRequest.ProtoReflect.Descriptor instead.
func (*ListRevisionsOrganizationsSecurityProfileRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{576}
}

func (x *ListRevisionsOrganizationsSecurityProfileRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ListRevisionsOrganizationsSecurityProfileRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *ListRevisionsOrganizationsSecurityProfileRequest) GetPageToken() string {
	if x != nil && x.PageToken != nil {
		return *x.PageToken
	}
	return ""
}

type PatchOrganizationsSecurityProfileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                         *string                             `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	UpdateMask                   *string                             `protobuf:"bytes,2,opt,name=update_mask,json=updateMask" json:"update_mask,omitempty"`
	OrganizationsSecurityProfile *GoogleCloudApigeeV1SecurityProfile `protobuf:"bytes,3,opt,name=organizations_security_profile,json=organizationsSecurityProfile" json:"organizations_security_profile,omitempty"`
}

func (x *PatchOrganizationsSecurityProfileRequest) Reset() {
	*x = PatchOrganizationsSecurityProfileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[577]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PatchOrganizationsSecurityProfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatchOrganizationsSecurityProfileRequest) ProtoMessage() {}

func (x *PatchOrganizationsSecurityProfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[577]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatchOrganizationsSecurityProfileRequest.ProtoReflect.Descriptor instead.
func (*PatchOrganizationsSecurityProfileRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{577}
}

func (x *PatchOrganizationsSecurityProfileRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *PatchOrganizationsSecurityProfileRequest) GetUpdateMask() string {
	if x != nil && x.UpdateMask != nil {
		return *x.UpdateMask
	}
	return ""
}

func (x *PatchOrganizationsSecurityProfileRequest) GetOrganizationsSecurityProfile() *GoogleCloudApigeeV1SecurityProfile {
	if x != nil {
		return x.OrganizationsSecurityProfile
	}
	return nil
}

type ComputeEnvironmentScoresOrganizationsSecurityProfilesEnvironmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProfileEnvironment                       *string                                             `protobuf:"bytes,1,opt,name=profile_environment,json=profileEnvironment" json:"profile_environment,omitempty"`
	OrganizationsSecurityProfilesEnvironment *GoogleCloudApigeeV1ComputeEnvironmentScoresRequest `protobuf:"bytes,2,opt,name=organizations_security_profiles_environment,json=organizationsSecurityProfilesEnvironment" json:"organizations_security_profiles_environment,omitempty"`
}

func (x *ComputeEnvironmentScoresOrganizationsSecurityProfilesEnvironmentRequest) Reset() {
	*x = ComputeEnvironmentScoresOrganizationsSecurityProfilesEnvironmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[578]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComputeEnvironmentScoresOrganizationsSecurityProfilesEnvironmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComputeEnvironmentScoresOrganizationsSecurityProfilesEnvironmentRequest) ProtoMessage() {}

func (x *ComputeEnvironmentScoresOrganizationsSecurityProfilesEnvironmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[578]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComputeEnvironmentScoresOrganizationsSecurityProfilesEnvironmentRequest.ProtoReflect.Descriptor instead.
func (*ComputeEnvironmentScoresOrganizationsSecurityProfilesEnvironmentRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{578}
}

func (x *ComputeEnvironmentScoresOrganizationsSecurityProfilesEnvironmentRequest) GetProfileEnvironment() string {
	if x != nil && x.ProfileEnvironment != nil {
		return *x.ProfileEnvironment
	}
	return ""
}

func (x *ComputeEnvironmentScoresOrganizationsSecurityProfilesEnvironmentRequest) GetOrganizationsSecurityProfilesEnvironment() *GoogleCloudApigeeV1ComputeEnvironmentScoresRequest {
	if x != nil {
		return x.OrganizationsSecurityProfilesEnvironment
	}
	return nil
}

type CreateOrganizationsSecurityProfilesEnvironmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent                                   *string                                                   `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
	OrganizationsSecurityProfilesEnvironment *GoogleCloudApigeeV1SecurityProfileEnvironmentAssociation `protobuf:"bytes,2,opt,name=organizations_security_profiles_environment,json=organizationsSecurityProfilesEnvironment" json:"organizations_security_profiles_environment,omitempty"`
}

func (x *CreateOrganizationsSecurityProfilesEnvironmentRequest) Reset() {
	*x = CreateOrganizationsSecurityProfilesEnvironmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[579]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrganizationsSecurityProfilesEnvironmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrganizationsSecurityProfilesEnvironmentRequest) ProtoMessage() {}

func (x *CreateOrganizationsSecurityProfilesEnvironmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[579]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrganizationsSecurityProfilesEnvironmentRequest.ProtoReflect.Descriptor instead.
func (*CreateOrganizationsSecurityProfilesEnvironmentRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{579}
}

func (x *CreateOrganizationsSecurityProfilesEnvironmentRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

func (x *CreateOrganizationsSecurityProfilesEnvironmentRequest) GetOrganizationsSecurityProfilesEnvironment() *GoogleCloudApigeeV1SecurityProfileEnvironmentAssociation {
	if x != nil {
		return x.OrganizationsSecurityProfilesEnvironment
	}
	return nil
}

type DeleteOrganizationsSecurityProfilesEnvironmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *DeleteOrganizationsSecurityProfilesEnvironmentRequest) Reset() {
	*x = DeleteOrganizationsSecurityProfilesEnvironmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[580]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrganizationsSecurityProfilesEnvironmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrganizationsSecurityProfilesEnvironmentRequest) ProtoMessage() {}

func (x *DeleteOrganizationsSecurityProfilesEnvironmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[580]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrganizationsSecurityProfilesEnvironmentRequest.ProtoReflect.Descriptor instead.
func (*DeleteOrganizationsSecurityProfilesEnvironmentRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{580}
}

func (x *DeleteOrganizationsSecurityProfilesEnvironmentRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type CreateOrganizationsSharedflowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action                  *string            `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	Name                    *string            `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Parent                  *string            `protobuf:"bytes,3,opt,name=parent" json:"parent,omitempty"`
	OrganizationsSharedflow *GoogleApiHttpBody `protobuf:"bytes,4,opt,name=organizations_sharedflow,json=organizationsSharedflow" json:"organizations_sharedflow,omitempty"`
}

func (x *CreateOrganizationsSharedflowRequest) Reset() {
	*x = CreateOrganizationsSharedflowRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[581]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrganizationsSharedflowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrganizationsSharedflowRequest) ProtoMessage() {}

func (x *CreateOrganizationsSharedflowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[581]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrganizationsSharedflowRequest.ProtoReflect.Descriptor instead.
func (*CreateOrganizationsSharedflowRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{581}
}

func (x *CreateOrganizationsSharedflowRequest) GetAction() string {
	if x != nil && x.Action != nil {
		return *x.Action
	}
	return ""
}

func (x *CreateOrganizationsSharedflowRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CreateOrganizationsSharedflowRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

func (x *CreateOrganizationsSharedflowRequest) GetOrganizationsSharedflow() *GoogleApiHttpBody {
	if x != nil {
		return x.OrganizationsSharedflow
	}
	return nil
}

type DeleteOrganizationsSharedflowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *DeleteOrganizationsSharedflowRequest) Reset() {
	*x = DeleteOrganizationsSharedflowRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[582]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrganizationsSharedflowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrganizationsSharedflowRequest) ProtoMessage() {}

func (x *DeleteOrganizationsSharedflowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[582]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrganizationsSharedflowRequest.ProtoReflect.Descriptor instead.
func (*DeleteOrganizationsSharedflowRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{582}
}

func (x *DeleteOrganizationsSharedflowRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GetOrganizationsSharedflowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *GetOrganizationsSharedflowRequest) Reset() {
	*x = GetOrganizationsSharedflowRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[583]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrganizationsSharedflowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrganizationsSharedflowRequest) ProtoMessage() {}

func (x *GetOrganizationsSharedflowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[583]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrganizationsSharedflowRequest.ProtoReflect.Descriptor instead.
func (*GetOrganizationsSharedflowRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{583}
}

func (x *GetOrganizationsSharedflowRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type ListOrganizationsSharedflowsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IncludeMetaData  *bool   `protobuf:"varint,1,opt,name=include_meta_data,json=includeMetaData" json:"include_meta_data,omitempty"`
	IncludeRevisions *bool   `protobuf:"varint,2,opt,name=include_revisions,json=includeRevisions" json:"include_revisions,omitempty"`
	Parent           *string `protobuf:"bytes,3,opt,name=parent" json:"parent,omitempty"`
}

func (x *ListOrganizationsSharedflowsRequest) Reset() {
	*x = ListOrganizationsSharedflowsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[584]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrganizationsSharedflowsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrganizationsSharedflowsRequest) ProtoMessage() {}

func (x *ListOrganizationsSharedflowsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[584]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrganizationsSharedflowsRequest.ProtoReflect.Descriptor instead.
func (*ListOrganizationsSharedflowsRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{584}
}

func (x *ListOrganizationsSharedflowsRequest) GetIncludeMetaData() bool {
	if x != nil && x.IncludeMetaData != nil {
		return *x.IncludeMetaData
	}
	return false
}

func (x *ListOrganizationsSharedflowsRequest) GetIncludeRevisions() bool {
	if x != nil && x.IncludeRevisions != nil {
		return *x.IncludeRevisions
	}
	return false
}

func (x *ListOrganizationsSharedflowsRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

type ListOrganizationsSharedflowsDeploymentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent *string `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
}

func (x *ListOrganizationsSharedflowsDeploymentsRequest) Reset() {
	*x = ListOrganizationsSharedflowsDeploymentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[585]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrganizationsSharedflowsDeploymentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrganizationsSharedflowsDeploymentsRequest) ProtoMessage() {}

func (x *ListOrganizationsSharedflowsDeploymentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[585]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrganizationsSharedflowsDeploymentsRequest.ProtoReflect.Descriptor instead.
func (*ListOrganizationsSharedflowsDeploymentsRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{585}
}

func (x *ListOrganizationsSharedflowsDeploymentsRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

type DeleteOrganizationsSharedflowsRevisionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *DeleteOrganizationsSharedflowsRevisionRequest) Reset() {
	*x = DeleteOrganizationsSharedflowsRevisionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[586]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrganizationsSharedflowsRevisionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrganizationsSharedflowsRevisionRequest) ProtoMessage() {}

func (x *DeleteOrganizationsSharedflowsRevisionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[586]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrganizationsSharedflowsRevisionRequest.ProtoReflect.Descriptor instead.
func (*DeleteOrganizationsSharedflowsRevisionRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{586}
}

func (x *DeleteOrganizationsSharedflowsRevisionRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GetOrganizationsSharedflowsRevisionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Format *string `protobuf:"bytes,1,opt,name=format" json:"format,omitempty"`
	Name   *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (x *GetOrganizationsSharedflowsRevisionRequest) Reset() {
	*x = GetOrganizationsSharedflowsRevisionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[587]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrganizationsSharedflowsRevisionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrganizationsSharedflowsRevisionRequest) ProtoMessage() {}

func (x *GetOrganizationsSharedflowsRevisionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[587]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrganizationsSharedflowsRevisionRequest.ProtoReflect.Descriptor instead.
func (*GetOrganizationsSharedflowsRevisionRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{587}
}

func (x *GetOrganizationsSharedflowsRevisionRequest) GetFormat() string {
	if x != nil && x.Format != nil {
		return *x.Format
	}
	return ""
}

func (x *GetOrganizationsSharedflowsRevisionRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type UpdateSharedFlowRevisionOrganizationsSharedflowsRevisionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                             *string            `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Validate                         *bool              `protobuf:"varint,2,opt,name=validate" json:"validate,omitempty"`
	OrganizationsSharedflowsRevision *GoogleApiHttpBody `protobuf:"bytes,3,opt,name=organizations_sharedflows_revision,json=organizationsSharedflowsRevision" json:"organizations_sharedflows_revision,omitempty"`
}

func (x *UpdateSharedFlowRevisionOrganizationsSharedflowsRevisionRequest) Reset() {
	*x = UpdateSharedFlowRevisionOrganizationsSharedflowsRevisionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[588]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSharedFlowRevisionOrganizationsSharedflowsRevisionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSharedFlowRevisionOrganizationsSharedflowsRevisionRequest) ProtoMessage() {}

func (x *UpdateSharedFlowRevisionOrganizationsSharedflowsRevisionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[588]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSharedFlowRevisionOrganizationsSharedflowsRevisionRequest.ProtoReflect.Descriptor instead.
func (*UpdateSharedFlowRevisionOrganizationsSharedflowsRevisionRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{588}
}

func (x *UpdateSharedFlowRevisionOrganizationsSharedflowsRevisionRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UpdateSharedFlowRevisionOrganizationsSharedflowsRevisionRequest) GetValidate() bool {
	if x != nil && x.Validate != nil {
		return *x.Validate
	}
	return false
}

func (x *UpdateSharedFlowRevisionOrganizationsSharedflowsRevisionRequest) GetOrganizationsSharedflowsRevision() *GoogleApiHttpBody {
	if x != nil {
		return x.OrganizationsSharedflowsRevision
	}
	return nil
}

type ListOrganizationsSharedflowsRevisionsDeploymentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent *string `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
}

func (x *ListOrganizationsSharedflowsRevisionsDeploymentsRequest) Reset() {
	*x = ListOrganizationsSharedflowsRevisionsDeploymentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[589]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrganizationsSharedflowsRevisionsDeploymentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrganizationsSharedflowsRevisionsDeploymentsRequest) ProtoMessage() {}

func (x *ListOrganizationsSharedflowsRevisionsDeploymentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[589]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrganizationsSharedflowsRevisionsDeploymentsRequest.ProtoReflect.Descriptor instead.
func (*ListOrganizationsSharedflowsRevisionsDeploymentsRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{589}
}

func (x *ListOrganizationsSharedflowsRevisionsDeploymentsRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

type CreateOrganizationsSitesApicategoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent                        *string                         `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
	OrganizationsSitesApicategory *GoogleCloudApigeeV1ApiCategory `protobuf:"bytes,2,opt,name=organizations_sites_apicategory,json=organizationsSitesApicategory" json:"organizations_sites_apicategory,omitempty"`
}

func (x *CreateOrganizationsSitesApicategoryRequest) Reset() {
	*x = CreateOrganizationsSitesApicategoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[590]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrganizationsSitesApicategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrganizationsSitesApicategoryRequest) ProtoMessage() {}

func (x *CreateOrganizationsSitesApicategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[590]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrganizationsSitesApicategoryRequest.ProtoReflect.Descriptor instead.
func (*CreateOrganizationsSitesApicategoryRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{590}
}

func (x *CreateOrganizationsSitesApicategoryRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

func (x *CreateOrganizationsSitesApicategoryRequest) GetOrganizationsSitesApicategory() *GoogleCloudApigeeV1ApiCategory {
	if x != nil {
		return x.OrganizationsSitesApicategory
	}
	return nil
}

type DeleteOrganizationsSitesApicategoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *DeleteOrganizationsSitesApicategoryRequest) Reset() {
	*x = DeleteOrganizationsSitesApicategoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[591]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrganizationsSitesApicategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrganizationsSitesApicategoryRequest) ProtoMessage() {}

func (x *DeleteOrganizationsSitesApicategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[591]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrganizationsSitesApicategoryRequest.ProtoReflect.Descriptor instead.
func (*DeleteOrganizationsSitesApicategoryRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{591}
}

func (x *DeleteOrganizationsSitesApicategoryRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GetOrganizationsSitesApicategoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *GetOrganizationsSitesApicategoryRequest) Reset() {
	*x = GetOrganizationsSitesApicategoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[592]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrganizationsSitesApicategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrganizationsSitesApicategoryRequest) ProtoMessage() {}

func (x *GetOrganizationsSitesApicategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[592]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrganizationsSitesApicategoryRequest.ProtoReflect.Descriptor instead.
func (*GetOrganizationsSitesApicategoryRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{592}
}

func (x *GetOrganizationsSitesApicategoryRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type ListOrganizationsSitesApicategoriesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent *string `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
}

func (x *ListOrganizationsSitesApicategoriesRequest) Reset() {
	*x = ListOrganizationsSitesApicategoriesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[593]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrganizationsSitesApicategoriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrganizationsSitesApicategoriesRequest) ProtoMessage() {}

func (x *ListOrganizationsSitesApicategoriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[593]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrganizationsSitesApicategoriesRequest.ProtoReflect.Descriptor instead.
func (*ListOrganizationsSitesApicategoriesRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{593}
}

func (x *ListOrganizationsSitesApicategoriesRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

type PatchOrganizationsSitesApicategoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                          *string                         `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	OrganizationsSitesApicategory *GoogleCloudApigeeV1ApiCategory `protobuf:"bytes,2,opt,name=organizations_sites_apicategory,json=organizationsSitesApicategory" json:"organizations_sites_apicategory,omitempty"`
}

func (x *PatchOrganizationsSitesApicategoryRequest) Reset() {
	*x = PatchOrganizationsSitesApicategoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[594]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PatchOrganizationsSitesApicategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatchOrganizationsSitesApicategoryRequest) ProtoMessage() {}

func (x *PatchOrganizationsSitesApicategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[594]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatchOrganizationsSitesApicategoryRequest.ProtoReflect.Descriptor instead.
func (*PatchOrganizationsSitesApicategoryRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{594}
}

func (x *PatchOrganizationsSitesApicategoryRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *PatchOrganizationsSitesApicategoryRequest) GetOrganizationsSitesApicategory() *GoogleCloudApigeeV1ApiCategory {
	if x != nil {
		return x.OrganizationsSitesApicategory
	}
	return nil
}

type CreateOrganizationsSitesApidocRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent                   *string                    `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
	OrganizationsSitesApidoc *GoogleCloudApigeeV1ApiDoc `protobuf:"bytes,2,opt,name=organizations_sites_apidoc,json=organizationsSitesApidoc" json:"organizations_sites_apidoc,omitempty"`
}

func (x *CreateOrganizationsSitesApidocRequest) Reset() {
	*x = CreateOrganizationsSitesApidocRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[595]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrganizationsSitesApidocRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrganizationsSitesApidocRequest) ProtoMessage() {}

func (x *CreateOrganizationsSitesApidocRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[595]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrganizationsSitesApidocRequest.ProtoReflect.Descriptor instead.
func (*CreateOrganizationsSitesApidocRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{595}
}

func (x *CreateOrganizationsSitesApidocRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

func (x *CreateOrganizationsSitesApidocRequest) GetOrganizationsSitesApidoc() *GoogleCloudApigeeV1ApiDoc {
	if x != nil {
		return x.OrganizationsSitesApidoc
	}
	return nil
}

type DeleteOrganizationsSitesApidocRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *DeleteOrganizationsSitesApidocRequest) Reset() {
	*x = DeleteOrganizationsSitesApidocRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[596]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrganizationsSitesApidocRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrganizationsSitesApidocRequest) ProtoMessage() {}

func (x *DeleteOrganizationsSitesApidocRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[596]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrganizationsSitesApidocRequest.ProtoReflect.Descriptor instead.
func (*DeleteOrganizationsSitesApidocRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{596}
}

func (x *DeleteOrganizationsSitesApidocRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GetOrganizationsSitesApidocRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *GetOrganizationsSitesApidocRequest) Reset() {
	*x = GetOrganizationsSitesApidocRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[597]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrganizationsSitesApidocRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrganizationsSitesApidocRequest) ProtoMessage() {}

func (x *GetOrganizationsSitesApidocRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[597]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrganizationsSitesApidocRequest.ProtoReflect.Descriptor instead.
func (*GetOrganizationsSitesApidocRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{597}
}

func (x *GetOrganizationsSitesApidocRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GetDocumentationOrganizationsSitesApidocRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *GetDocumentationOrganizationsSitesApidocRequest) Reset() {
	*x = GetDocumentationOrganizationsSitesApidocRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[598]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDocumentationOrganizationsSitesApidocRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDocumentationOrganizationsSitesApidocRequest) ProtoMessage() {}

func (x *GetDocumentationOrganizationsSitesApidocRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[598]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDocumentationOrganizationsSitesApidocRequest.ProtoReflect.Descriptor instead.
func (*GetDocumentationOrganizationsSitesApidocRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{598}
}

func (x *GetDocumentationOrganizationsSitesApidocRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type ListOrganizationsSitesApidocsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize  *int32  `protobuf:"varint,1,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	PageToken *string `protobuf:"bytes,2,opt,name=page_token,json=pageToken" json:"page_token,omitempty"`
	Parent    *string `protobuf:"bytes,3,opt,name=parent" json:"parent,omitempty"`
}

func (x *ListOrganizationsSitesApidocsRequest) Reset() {
	*x = ListOrganizationsSitesApidocsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[599]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrganizationsSitesApidocsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrganizationsSitesApidocsRequest) ProtoMessage() {}

func (x *ListOrganizationsSitesApidocsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[599]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrganizationsSitesApidocsRequest.ProtoReflect.Descriptor instead.
func (*ListOrganizationsSitesApidocsRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{599}
}

func (x *ListOrganizationsSitesApidocsRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *ListOrganizationsSitesApidocsRequest) GetPageToken() string {
	if x != nil && x.PageToken != nil {
		return *x.PageToken
	}
	return ""
}

func (x *ListOrganizationsSitesApidocsRequest) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

type UpdateOrganizationsSitesApidocRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                     *string                    `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	OrganizationsSitesApidoc *GoogleCloudApigeeV1ApiDoc `protobuf:"bytes,2,opt,name=organizations_sites_apidoc,json=organizationsSitesApidoc" json:"organizations_sites_apidoc,omitempty"`
}

func (x *UpdateOrganizationsSitesApidocRequest) Reset() {
	*x = UpdateOrganizationsSitesApidocRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[600]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrganizationsSitesApidocRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrganizationsSitesApidocRequest) ProtoMessage() {}

func (x *UpdateOrganizationsSitesApidocRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[600]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrganizationsSitesApidocRequest.ProtoReflect.Descriptor instead.
func (*UpdateOrganizationsSitesApidocRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{600}
}

func (x *UpdateOrganizationsSitesApidocRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UpdateOrganizationsSitesApidocRequest) GetOrganizationsSitesApidoc() *GoogleCloudApigeeV1ApiDoc {
	if x != nil {
		return x.OrganizationsSitesApidoc
	}
	return nil
}

type UpdateDocumentationOrganizationsSitesApidocRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                     *string                                 `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	OrganizationsSitesApidoc *GoogleCloudApigeeV1ApiDocDocumentation `protobuf:"bytes,2,opt,name=organizations_sites_apidoc,json=organizationsSitesApidoc" json:"organizations_sites_apidoc,omitempty"`
}

func (x *UpdateDocumentationOrganizationsSitesApidocRequest) Reset() {
	*x = UpdateDocumentationOrganizationsSitesApidocRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[601]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDocumentationOrganizationsSitesApidocRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDocumentationOrganizationsSitesApidocRequest) ProtoMessage() {}

func (x *UpdateDocumentationOrganizationsSitesApidocRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[601]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDocumentationOrganizationsSitesApidocRequest.ProtoReflect.Descriptor instead.
func (*UpdateDocumentationOrganizationsSitesApidocRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{601}
}

func (x *UpdateDocumentationOrganizationsSitesApidocRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UpdateDocumentationOrganizationsSitesApidocRequest) GetOrganizationsSitesApidoc() *GoogleCloudApigeeV1ApiDocDocumentation {
	if x != nil {
		return x.OrganizationsSitesApidoc
	}
	return nil
}

type ProvisionOrganizationProjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Project     *string                                          `protobuf:"bytes,1,opt,name=project" json:"project,omitempty"`
	ProjectBody *GoogleCloudApigeeV1ProvisionOrganizationRequest `protobuf:"bytes,2,opt,name=project_body,json=projectBody" json:"project_body,omitempty"`
}

func (x *ProvisionOrganizationProjectRequest) Reset() {
	*x = ProvisionOrganizationProjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[602]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProvisionOrganizationProjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProvisionOrganizationProjectRequest) ProtoMessage() {}

func (x *ProvisionOrganizationProjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[602]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProvisionOrganizationProjectRequest.ProtoReflect.Descriptor instead.
func (*ProvisionOrganizationProjectRequest) Descriptor() ([]byte, []int) {
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP(), []int{602}
}

func (x *ProvisionOrganizationProjectRequest) GetProject() string {
	if x != nil && x.Project != nil {
		return *x.Project
	}
	return ""
}

func (x *ProvisionOrganizationProjectRequest) GetProjectBody() *GoogleCloudApigeeV1ProvisionOrganizationRequest {
	if x != nil {
		return x.ProjectBody
	}
	return nil
}

var File_mockgcp_cloud_apigee_v1_service_proto protoreflect.FileDescriptor

var file_mockgcp_cloud_apigee_v1_service_proto_rawDesc = []byte{
	0x0a, 0x25, 0x6d, 0x6f, 0x63, 0x6b, 0x67, 0x63, 0x70, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f,
	0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x1a,
	0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x6c, 0x6f, 0x6e, 0x67, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e,
	0x67, 0x2f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x81,
	0x01, 0x0a, 0x1e, 0x45, 0x64, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x42, 0x61, 0x64, 0x42, 0x75, 0x6e, 0x64, 0x6c,
	0x65, 0x12, 0x5f, 0x0a, 0x0a, 0x76, 0x69, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45,
	0x64, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x42, 0x75,
	0x6e, 0x64, 0x6c, 0x65, 0x42, 0x61, 0x64, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x56, 0x69, 0x6f,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x76, 0x69, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0x67, 0x0a, 0x27, 0x45, 0x64, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x42, 0x61, 0x64, 0x42, 0x75,
	0x6e, 0x64, 0x6c, 0x65, 0x56, 0x69, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x80, 0x01, 0x0a, 0x11,
	0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x41, 0x70, 0x69, 0x48, 0x74, 0x74, 0x70, 0x42, 0x6f, 0x64,
	0x79, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x34, 0x0a, 0x0a, 0x65, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41,
	0x6e, 0x79, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x62,
	0x0a, 0x28, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x50, 0x49, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41,
	0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x70,
	0x69, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x61, 0x70, 0x69, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0xfc, 0x01, 0x0a, 0x19, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x46, 0x0a, 0x03, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x47, 0x65, 0x74, 0x52, 0x03, 0x47, 0x65, 0x74, 0x12, 0x4f, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x52, 0x06, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x12, 0x46, 0x0a, 0x03, 0x73, 0x65, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x56, 0x31, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x53, 0x65, 0x74, 0x52, 0x03, 0x53, 0x65,
	0x74, 0x22, 0x48, 0x0a, 0x1c, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x47, 0x65,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x5a, 0x0a, 0x26, 0x47,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x56, 0x31, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x4f, 0x0a, 0x1f, 0x47, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x62, 0x0a, 0x1c, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x53, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2e, 0x0a, 0x2c,
	0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x56, 0x31, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x74, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xcf, 0x05, 0x0a,
	0x1f, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x56, 0x31, 0x41, 0x64, 0x64, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x76, 0x0a, 0x17, 0x61, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x5f, 0x61, 0x70, 0x69,
	0x5f, 0x6f, 0x70, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x3f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x64,
	0x76, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x41, 0x70, 0x69, 0x4f, 0x70, 0x73, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x14, 0x61, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x41, 0x70, 0x69, 0x4f,
	0x70, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x65, 0x0a, 0x10, 0x61, 0x6e, 0x61, 0x6c,
	0x79, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41,
	0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0f,
	0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x6c, 0x0a, 0x13, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x70, 0x69, 0x53, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x11, 0x61, 0x70, 0x69, 0x53,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x81, 0x01,
	0x0a, 0x1a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x5f, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x43, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x18, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x73, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x6b, 0x0a, 0x12, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x11, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x6e,
	0x0a, 0x13, 0x6d, 0x6f, 0x6e, 0x65, 0x74, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4d, 0x6f, 0x6e, 0x65, 0x74, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x12, 0x6d, 0x6f, 0x6e, 0x65,
	0x74, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x7b,
	0x0a, 0x30, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x44, 0x65, 0x76, 0x65, 0x6c,
	0x6f, 0x70, 0x65, 0x72, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x47, 0x0a, 0x0a, 0x61, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52,
	0x0a, 0x61, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x43, 0x0a, 0x27, 0x47,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x56, 0x31, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x41, 0x70, 0x69, 0x4f, 0x70, 0x73,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x22, 0x9b, 0x01, 0x0a, 0x18, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c,
	0x69, 0x61, 0x73, 0x12, 0x55, 0x0a, 0x0a, 0x63, 0x65, 0x72, 0x74, 0x73, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x56, 0x31, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52,
	0x09, 0x63, 0x65, 0x72, 0x74, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x6c,
	0x0a, 0x26, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xbf, 0x01, 0x0a,
	0x22, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x56, 0x31, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x2c, 0x0a,
	0x12, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6d, 0x69, 0x6c,
	0x6c, 0x69, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x7e,
	0x0a, 0x1e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x70, 0x69, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x69, 0x74, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xe4,
	0x01, 0x0a, 0x26, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x70, 0x69, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x56, 0x31, 0x41, 0x70, 0x69, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xfb, 0x04, 0x0a, 0x19, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x70, 0x69,
	0x44, 0x6f, 0x63, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x6e, 0x6f, 0x6e, 0x5f, 0x61, 0x6c, 0x6c, 0x6f,
	0x77, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x61, 0x6e, 0x6f, 0x6e, 0x41,
	0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x61, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x49, 0x64, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x33, 0x0a, 0x17, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x61, 0x5f,
	0x70, 0x5f, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x65, 0x64, 0x67, 0x65, 0x41, 0x50, 0x49, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x67, 0x72,
	0x61, 0x70, 0x68, 0x71, 0x6c, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71,
	0x6c, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x25, 0x0a, 0x0e,
	0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x53, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x12, 0x3d, 0x0a, 0x1b, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x5f, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71,
	0x6c, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12,
	0x1a, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x72, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x55, 0x72, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x73,
	0x69, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x69,
	0x74, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x69, 0x64, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x70, 0x65, 0x63, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x22, 0x88, 0x02, 0x0a, 0x26, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x70, 0x69, 0x44, 0x6f,
	0x63, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x74,
	0x0a, 0x15, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x5f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x47, 0x72, 0x61, 0x70, 0x68, 0x71,
	0x6c, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x14,
	0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x68, 0x0a, 0x11, 0x6f, 0x61, 0x73, 0x5f, 0x64, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x3b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4f, 0x41, 0x53, 0x44,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x10, 0x6f, 0x61,
	0x73, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xf4,
	0x01, 0x0a, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x70, 0x69, 0x44, 0x6f, 0x63, 0x44, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x52, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x3e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x70, 0x69, 0x44,
	0x6f, 0x63, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xda, 0x01, 0x0a, 0x21, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x70, 0x69,
	0x44, 0x6f, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x70, 0x69, 0x44, 0x6f, 0x63, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x9b, 0x07, 0x0a, 0x1d, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x70, 0x69, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x70, 0x69, 0x5f, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x70, 0x69,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x70, 0x70,
	0x72, 0x6f, 0x76, 0x61, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x54,
	0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x34, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c,
	0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x78, 0x0a, 0x17,
	0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x47, 0x72, 0x61, 0x70, 0x68, 0x51,
	0x4c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x15, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x6f, 0x0a, 0x14, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56,
	0x31, 0x47, 0x72, 0x70, 0x63, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x12, 0x67, 0x72, 0x70, 0x63, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x28, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x5f,
	0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x62, 0x0a, 0x0f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f,
	0x78, 0x69, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x78,
	0x69, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x12, 0x2e, 0x0a, 0x13, 0x71, 0x75, 0x6f,
	0x74, 0x61, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x63, 0x6f, 0x70, 0x65,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x65, 0x72, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x71, 0x75, 0x6f,
	0x74, 0x61, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c,
	0x12, 0x26, 0x0a, 0x0f, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x75,
	0x6e, 0x69, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x71, 0x75, 0x6f, 0x74, 0x61,
	0x54, 0x69, 0x6d, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x6f, 0x70,
	0x65, 0x73, 0x18, 0x12, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73,
	0x22, 0x5a, 0x0a, 0x20, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x52, 0x65, 0x66, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x70, 0x69, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x70, 0x69, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xaa, 0x03, 0x0a,
	0x1b, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x56, 0x31, 0x41, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x12, 0x24, 0x0a, 0x0e,
	0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x57, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41,
	0x70, 0x69, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x6c,
	0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x52,
	0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x56, 0x0a, 0x09, 0x6d, 0x65, 0x74,
	0x61, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x6f, 0x6e,
	0x6c, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x61, 0x64, 0x4f, 0x6e,
	0x6c, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0x39,
	0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xb2, 0x09, 0x0a, 0x23, 0x47, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56,
	0x31, 0x41, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x62,
	0x61, 0x73, 0x65, 0x70, 0x61, 0x74, 0x68, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09,
	0x62, 0x61, 0x73, 0x65, 0x70, 0x61, 0x74, 0x68, 0x73, 0x12, 0x6d, 0x0a, 0x15, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x56, 0x31, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x14, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c,
	0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x9f, 0x01, 0x0a, 0x1e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x61, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69,
	0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x5b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x52, 0x65, 0x76,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4d, 0x65, 0x74, 0x61,
	0x44, 0x61, 0x74, 0x61, 0x41, 0x73, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x1a, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4d, 0x65, 0x74,
	0x61, 0x44, 0x61, 0x74, 0x61, 0x41, 0x73, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65,
	0x73, 0x12, 0x32, 0x0a, 0x15, 0x68, 0x61, 0x73, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69,
	0x62, 0x6c, 0x65, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x13, 0x68, 0x61, 0x73, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x33, 0x0a, 0x15, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x0a,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x14, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x6c, 0x61,
	0x73, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x69, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x69, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x78, 0x69, 0x65, 0x73, 0x18,
	0x0e, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x78, 0x69, 0x65, 0x73, 0x12, 0x27,
	0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x45, 0x6e,
	0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x5f, 0x0a, 0x0e, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x38, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x11, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x5f, 0x66, 0x6c, 0x6f,
	0x77, 0x73, 0x18, 0x13, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64,
	0x46, 0x6c, 0x6f, 0x77, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x15, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x45, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x18, 0x16, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x18, 0x17, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x65, 0x61, 0x6d, 0x73, 0x18, 0x18,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x74, 0x65, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x1a,
	0x4d, 0x0a, 0x1f, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74,
	0x61, 0x41, 0x73, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x5f,
	0x0a, 0x24, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x70, 0x69, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x61, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x22,
	0xcd, 0x01, 0x0a, 0x2b, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x70, 0x69, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69,
	0x74, 0x79, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x12, 0x3b, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22,
	0x9d, 0x05, 0x0a, 0x16, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x70, 0x70, 0x12, 0x5b, 0x0a, 0x0c, 0x61, 0x70,
	0x69, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x38, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x70, 0x69,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x66, 0x52, 0x0b, 0x61, 0x70, 0x69, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x70, 0x70, 0x5f, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x70, 0x70, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x54, 0x0a, 0x0a, 0x61,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x34, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63,
	0x6b, 0x55, 0x72, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x57, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x12,
	0x27, 0x0a, 0x0f, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f,
	0x70, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x76, 0x65,
	0x6c, 0x6f, 0x70, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x6b,
	0x65, 0x79, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x69, 0x6e, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0c, 0x6b, 0x65, 0x79, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x49,
	0x6e, 0x12, 0x28, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6c, 0x61, 0x73,
	0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x41, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x91, 0x03, 0x0a, 0x1b, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x70, 0x70, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12,
	0x20, 0x0a, 0x0c, 0x61, 0x70, 0x70, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x70, 0x70, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x64, 0x12, 0x54, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x56, 0x31, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x0a, 0x61, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x55, 0x72, 0x69, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x6c, 0x61, 0x73,
	0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0xfc, 0x03, 0x0a, 0x1e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x70, 0x70, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x70,
	0x69, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x70, 0x70,
	0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x70,
	0x70, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x54, 0x0a,
	0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x34, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x61, 0x6c, 0x6c, 0x62,
	0x61, 0x63, 0x6b, 0x55, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x57, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x12, 0x24,
	0x0a, 0x0e, 0x6b, 0x65, 0x79, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x69, 0x6e,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6b, 0x65, 0x79, 0x45, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x73, 0x49, 0x6e, 0x12, 0x28, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6d, 0x6f, 0x64,
	0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e,
	0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x41, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0xc4, 0x03, 0x0a, 0x21, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x70, 0x70, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x41, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x12, 0x63, 0x0a, 0x0c, 0x61, 0x70, 0x69, 0x5f,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x40,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x50, 0x49, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0b, 0x61, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x12, 0x54, 0x0a,
	0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x34, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x75,
	0x6d, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d,
	0x65, 0x72, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x12, 0x2c,
	0x0a, 0x12, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x73, 0x49, 0x6e, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x1b, 0x0a, 0x09,
	0x69, 0x73, 0x73, 0x75, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x69, 0x73, 0x73, 0x75, 0x65, 0x64, 0x41, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x6f,
	0x70, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63, 0x6f, 0x70, 0x65,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xcc, 0x02, 0x0a, 0x24, 0x47, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56,
	0x31, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x63, 0x73, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x67, 0x63, 0x73, 0x55, 0x72, 0x69, 0x12, 0x60, 0x0a, 0x06, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x48, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x44, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d,
	0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x1a, 0x39, 0x0a,
	0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xaa, 0x04, 0x0a, 0x1d, 0x47, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31,
	0x41, 0x73, 0x79, 0x6e, 0x63, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x12, 0x2b, 0x0a, 0x11, 0x65, 0x6e, 0x76, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x65, 0x6e, 0x76, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x48, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x5b, 0x0a, 0x0c, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x56, 0x31, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x52, 0x0b, 0x71, 0x75, 0x65, 0x72, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12,
	0x30, 0x0a, 0x14, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x53, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x3b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x73,
	0x79, 0x6e, 0x63, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x72, 0x6f, 0x77, 0x73, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x6f, 0x77,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x6c, 0x66, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x73, 0x65, 0x6c, 0x66, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x22, 0x53, 0x0a, 0x23, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x73, 0x79, 0x6e,
	0x63, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x6c, 0x66, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x65, 0x6c, 0x66, 0x22, 0xe9, 0x01, 0x0a, 0x27, 0x47,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x56, 0x31, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x56, 0x69, 0x65, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x54, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x38, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x28, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x48, 0x0a, 0x1c, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x73, 0x0a, 0x1d, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x12, 0x52, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56,
	0x31, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x09, 0x61, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x22, 0xc5, 0x03, 0x0a, 0x3f, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74,
	0x79, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x7e, 0x0a, 0x07, 0x69, 0x6e, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x64, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6d, 0x70,
	0x75, 0x74, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x41, 0x73, 0x73, 0x65, 0x73,
	0x73, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x72, 0x72, 0x61, 0x79,
	0x52, 0x07, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x12, 0x95, 0x01, 0x0a, 0x15, 0x69, 0x6e,
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x61, 0x6c, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x61, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6d, 0x70, 0x75,
	0x74, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x41, 0x6c, 0x6c, 0x52, 0x13, 0x69, 0x6e,
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x18, 0x0a,
	0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x22, 0x4b, 0x0a,
	0x49, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x56, 0x31, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65,
	0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x41, 0x6c, 0x6c, 0x22, 0xdb, 0x01, 0x0a, 0x4c, 0x47,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x56, 0x31, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x53, 0x65,
	0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x72, 0x72, 0x61, 0x79, 0x12, 0x8a, 0x01, 0x0a, 0x09,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x6c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x41, 0x72, 0x72, 0x61, 0x79, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x09, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x22, 0x7e, 0x0a, 0x54, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72,
	0x69, 0x74, 0x79, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x41, 0x72, 0x72, 0x61, 0x79, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xb5, 0x02, 0x0a, 0x40, 0x47, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x53, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a,
	0x0f, 0x61, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0e, 0x61, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78,
	0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x83, 0x01, 0x0a, 0x1b, 0x73,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x43, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x53, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x19, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x41,
	0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x22, 0x9e, 0x01, 0x0a, 0x36, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x42, 0x61, 0x74, 0x63, 0x68, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x63, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x64, 0x0a, 0x08, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x48, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x73, 0x22, 0xa5, 0x01, 0x0a, 0x37, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x42, 0x61, 0x74, 0x63, 0x68, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x63, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6a, 0x0a,
	0x12, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x6e, 0x63, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x49, 0x6e,
	0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x11, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x49, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xbe, 0x03, 0x0a, 0x23, 0x47, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56,
	0x31, 0x43, 0x61, 0x6e, 0x61, 0x72, 0x79, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x3b, 0x0a, 0x0b, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x6c, 0x0a, 0x0d, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x47, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x56, 0x31, 0x43, 0x61, 0x6e, 0x61, 0x72, 0x79, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x52,
	0x0c, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x72, 0x65, 0x61, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x72, 0x65, 0x61, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x64, 0x69, 0x63, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x64, 0x69, 0x63, 0x74, 0x22, 0x81, 0x01, 0x0a, 0x2f, 0x47,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x56, 0x31, 0x43, 0x61, 0x6e, 0x61, 0x72, 0x79, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x10,
	0x0a, 0x03, 0x65, 0x6e, 0x76, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x6e, 0x76,
	0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x93,
	0x03, 0x0a, 0x1b, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x43, 0x65, 0x72, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2b,
	0x0a, 0x11, 0x62, 0x61, 0x73, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69,
	0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x62, 0x61, 0x73, 0x69, 0x63,
	0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x79, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x44, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x69, 0x73, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x69, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x23,
	0x0a, 0x0d, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0c, 0x73, 0x69, 0x67, 0x5f, 0x61, 0x6c, 0x67, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x69, 0x67, 0x41, 0x6c,
	0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12,
	0x3a, 0x0a, 0x19, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x61, 0x6c, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x17, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x41, 0x6c, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x22, 0x72, 0x0a, 0x1e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x43, 0x65, 0x72, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x50, 0x0a, 0x09, 0x63, 0x65, 0x72, 0x74, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x43, 0x65, 0x72, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08,
	0x63, 0x65, 0x72, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x63, 0x0a, 0x23, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x28, 0x0a, 0x10, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x77, 0x69, 0x6c, 0x64, 0x5f, 0x63, 0x61,
	0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x57, 0x69, 0x6c, 0x64, 0x43, 0x61, 0x72, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xa7, 0x02,
	0x0a, 0x32, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x56, 0x31, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x45, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x6a, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x50, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x56, 0x31, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73,
	0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x49, 0x0a, 0x0a,
	0x74, 0x69, 0x6d, 0x65, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x22, 0x59, 0x0a, 0x38, 0x47, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x43, 0x6f,
	0x6d, 0x70, 0x75, 0x74, 0x65, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x50, 0x61,
	0x74, 0x68, 0x22, 0xa7, 0x01, 0x0a, 0x33, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74,
	0x65, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65,
	0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x48, 0x0a, 0x06, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x30, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x52, 0x06, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x22, 0x6c, 0x0a, 0x20,
	0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x56, 0x31, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6d, 0x69,
	0x6e, 0x6f, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x66, 0x0a, 0x2b, 0x47, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56,
	0x31, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x50, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x61,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73,
	0x41, 0x74, 0x22, 0x8a, 0x03, 0x0a, 0x1d, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x12, 0x5b, 0x0a, 0x0c, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x52, 0x65, 0x66, 0x52, 0x0b, 0x61, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x73, 0x12, 0x54, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x56, 0x31, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x0a, 0x61, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x73, 0x75,
	0x6d, 0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63,
	0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f,
	0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x53, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x61,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73,
	0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x73, 0x75, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x69, 0x73, 0x73, 0x75, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0xb1, 0x01, 0x0a, 0x30, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x44, 0x65, 0x76,
	0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x56, 0x0a, 0x12, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x11, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x22, 0x9e, 0x06, 0x0a, 0x1f, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x72, 0x74,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61,
	0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x1b,
	0x0a, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x6c,
	0x61, 0x73, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66,
	0x69, 0x65, 0x64, 0x41, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x76, 0x69,
	0x65, 0x77, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6c,
	0x61, 0x73, 0x74, 0x56, 0x69, 0x65, 0x77, 0x65, 0x64, 0x41, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x12, 0x57, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x0c, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x59, 0x0a, 0x0a, 0x70, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0c, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x62, 0x79,
	0x5f, 0x63, 0x6f, 0x6c, 0x73, 0x18, 0x11, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6f, 0x72,
	0x74, 0x42, 0x79, 0x43, 0x6f, 0x6c, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x6f, 0x72, 0x74, 0x5f,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x72,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x13,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74,
	0x69, 0x6d, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x6f, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x6f, 0x70, 0x6b, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x6f, 0x70, 0x6b, 0x22, 0x57, 0x0a, 0x25, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x12, 0x1a, 0x0a,
	0x08, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xb5, 0x01,
	0x0a, 0x20, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x56, 0x31, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x69,
	0x66, 0x69, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6c,
	0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x41, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x50, 0x0a, 0x26, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x44, 0x61, 0x74, 0x61,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xba, 0x02, 0x0a, 0x1c, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x44,
	0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x65, 0x0a, 0x10, 0x64, 0x61, 0x74,
	0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31,
	0x44, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x0f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6c,
	0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x6f, 0x72, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6f, 0x72, 0x67, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x65, 0x6c, 0x66, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73,
	0x65, 0x6c, 0x66, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x22, 0xbe, 0x01, 0x0a, 0x22, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x44, 0x61, 0x74, 0x61,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x62,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x70, 0x72, 0x65, 0x66,
	0x69, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x50,
	0x72, 0x65, 0x66, 0x69, 0x78, 0x22, 0x46, 0x0a, 0x1c, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x44, 0x61, 0x74, 0x65,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x22, 0xfc, 0x03,
	0x0a, 0x1c, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x56, 0x31, 0x44, 0x65, 0x62, 0x75, 0x67, 0x4d, 0x61, 0x73, 0x6b, 0x12, 0x2b,
	0x0a, 0x13, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x6a, 0x5f, 0x73, 0x5f, 0x6f, 0x5f, 0x6e, 0x5f,
	0x70, 0x61, 0x74, 0x68, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x4a, 0x53, 0x4f, 0x4e, 0x50, 0x61, 0x74, 0x68, 0x73, 0x12, 0x22, 0x0a, 0x0d, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x5f, 0x78, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0b, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x58, 0x50, 0x61, 0x74, 0x68, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x64, 0x0a, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x56, 0x31, 0x44, 0x65, 0x62, 0x75, 0x67, 0x4d, 0x61, 0x73, 0x6b, 0x2e, 0x4e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x12, 0x2f, 0x0a, 0x15, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x5f, 0x6a, 0x5f, 0x73, 0x5f, 0x6f, 0x5f, 0x6e, 0x5f, 0x70, 0x61, 0x74,
	0x68, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x4a, 0x53, 0x4f, 0x4e, 0x50, 0x61, 0x74, 0x68, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x78, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x58, 0x50, 0x61, 0x74,
	0x68, 0x73, 0x12, 0x31, 0x0a, 0x16, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x6a,
	0x5f, 0x73, 0x5f, 0x6f, 0x5f, 0x6e, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x73, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x11, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4a, 0x53, 0x4f, 0x4e,
	0x50, 0x61, 0x74, 0x68, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x5f, 0x78, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x58, 0x50, 0x61, 0x74, 0x68, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x09, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x1a, 0x3d, 0x0a,
	0x0f, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xf4, 0x01, 0x0a,
	0x1f, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x56, 0x31, 0x44, 0x65, 0x62, 0x75, 0x67, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x72, 0x61,
	0x63, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x72,
	0x61, 0x63, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x69, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x69, 0x74, 0x79, 0x22, 0x92, 0x01, 0x0a, 0x2a, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x44, 0x65, 0x62, 0x75, 0x67,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x12, 0x46, 0x0a, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x30, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x52, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x49, 0x0a, 0x2d, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0xb6, 0x01, 0x0a, 0x21, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x67, 0x63, 0x70, 0x5f,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x67, 0x63, 0x70, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x82, 0x05, 0x0a,
	0x1d, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x56, 0x31, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x61, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x12, 0x2a, 0x0a, 0x11, 0x64,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x3f, 0x0a, 0x06, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x52, 0x70, 0x63, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x12, 0x61, 0x0a, 0x09, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x43, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x09, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x48, 0x0a,
	0x04, 0x70, 0x6f, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x50, 0x6f, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x04, 0x70, 0x6f, 0x64, 0x73, 0x12, 0x32, 0x0a, 0x15, 0x70, 0x72, 0x6f, 0x78, 0x79,
	0x5f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x44, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72,
	0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72,
	0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x79, 0x0a, 0x0f, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x50, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x44, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x6c, 0x69,
	0x63, 0x74, 0x52, 0x0e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63,
	0x74, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x22, 0x86, 0x03, 0x0a, 0x29, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12,
	0x77, 0x0a, 0x0f, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x56, 0x31, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x69,
	0x6e, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x0e, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e,
	0x67, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x12, 0x7d, 0x0a, 0x11, 0x72, 0x6f, 0x75, 0x74,
	0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x50, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31,
	0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e,
	0x66, 0x6c, 0x69, 0x63, 0x74, 0x52, 0x10, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f,
	0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x73, 0x12, 0x61, 0x0a, 0x11, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x34, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x52, 0x70, 0x63, 0x50, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x52, 0x10, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x22, 0xb5, 0x03, 0x0a, 0x36, 0x47,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x56, 0x31, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x11, 0x65, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x12, 0x7b, 0x0a, 0x0f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x64, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x52, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x0e, 0x66, 0x72, 0x6f, 0x6d, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x36, 0x0a, 0x17, 0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x5f, 0x73, 0x65, 0x71, 0x75,
	0x65, 0x6e, 0x63, 0x65, 0x5f, 0x72, 0x6f, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x15, 0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e,
	0x63, 0x65, 0x52, 0x6f, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x12, 0x77, 0x0a, 0x0d, 0x74, 0x6f, 0x5f,
	0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x52, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x44, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0c, 0x74, 0x6f, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x22, 0x95, 0x02, 0x0a, 0x38, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x12,
	0x89, 0x01, 0x0a, 0x16, 0x63, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x69, 0x6e, 0x67, 0x5f,
	0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x52, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x44, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x15, 0x63, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x69, 0x6e,
	0x67, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a,
	0x11, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x22, 0xb3, 0x01, 0x0a, 0x3a, 0x47,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x56, 0x31, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x70, 0x69,
	0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x70,
	0x69, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x61, 0x73, 0x65, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x61, 0x73, 0x65, 0x70, 0x61,
	0x74, 0x68, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x22, 0xcb, 0x04, 0x0a, 0x23, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x6b, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4b, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x61, 0x73, 0x65, 0x50, 0x61,
	0x74, 0x68, 0x12, 0x2b, 0x0a, 0x11, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x64,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12,
	0x68, 0x0a, 0x09, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x4a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09,
	0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x72, 0x6f,
	0x78, 0x79, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72,
	0x6f, 0x78, 0x79, 0x55, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69,
	0x64, 0x1a, 0x3d, 0x0a, 0x0f, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x1a, 0x3c, 0x0a, 0x0e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xa5,
	0x01, 0x0a, 0x28, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x32, 0x0a, 0x15, 0x64,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x64, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x86, 0x04, 0x0a, 0x1c, 0x47, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x44, 0x65,
	0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x70, 0x70, 0x5f,
	0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x70,
	0x70, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x70, 0x70, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x61, 0x70, 0x70, 0x73, 0x12, 0x54, 0x0a, 0x0a, 0x61,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x34, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x65, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x65, 0x73, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x21,
	0x0a, 0x0c, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72,
	0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6d,
	0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a,
	0x11, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0xa2, 0x04, 0x0a, 0x1f, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72,
	0x41, 0x70, 0x70, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x70, 0x69, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x70, 0x70, 0x5f, 0x66, 0x61,
	0x6d, 0x69, 0x6c, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x70, 0x70, 0x46,
	0x61, 0x6d, 0x69, 0x6c, 0x79, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x54, 0x0a, 0x0a,
	0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x34, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61,
	0x63, 0x6b, 0x55, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x57, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x52, 0x0b, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x12, 0x21, 0x0a,
	0x0c, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x24, 0x0a, 0x0e, 0x6b, 0x65, 0x79, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f,
	0x69, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6b, 0x65, 0x79, 0x45, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x73, 0x49, 0x6e, 0x12, 0x28, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6d,
	0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x18, 0x0c,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x99, 0x03, 0x0a, 0x22, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x44, 0x65, 0x76, 0x65,
	0x6c, 0x6f, 0x70, 0x65, 0x72, 0x41, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x12, 0x37, 0x0a, 0x0c, 0x61,
	0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x0b, 0x61, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x73, 0x12, 0x54, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x0a,
	0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f,
	0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x12, 0x27, 0x0a,
	0x0f, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72,
	0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x73, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x73, 0x41, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73,
	0x5f, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x10, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x49, 0x6e, 0x53, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x73, 0x75, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x69, 0x73, 0x73, 0x75, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x82, 0x01, 0x0a, 0x23, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65,
	0x72, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x5b, 0x0a, 0x07, 0x77, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x07, 0x77, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x73, 0x22, 0x98, 0x01, 0x0a, 0x29, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x44, 0x65, 0x76,
	0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x57, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x12, 0x41, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x07, 0x62,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x63,
	0x72, 0x65, 0x64, 0x69, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x22, 0x53, 0x0a, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72,
	0x4d, 0x6f, 0x6e, 0x65, 0x74, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e,
	0x67, 0x54, 0x79, 0x70, 0x65, 0x22, 0xe1, 0x01, 0x0a, 0x28, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x44, 0x65, 0x76,
	0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x70, 0x69, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x70, 0x69, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10,
	0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69,
	0x66, 0x69, 0x65, 0x64, 0x41, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xb0, 0x01, 0x0a, 0x22, 0x47, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56,
	0x31, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x12, 0x29, 0x0a, 0x10, 0x69, 0x6e, 0x64, 0x69, 0x76, 0x69, 0x64, 0x75, 0x61, 0x6c, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x69, 0x6e, 0x64, 0x69,
	0x76, 0x69, 0x64, 0x75, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x4b, 0x0a, 0x07, 0x6d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52,
	0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x31, 0x0a, 0x2f,
	0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x56, 0x31, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69,
	0x74, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x65, 0x0a, 0x24, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x30, 0x0a, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xdb, 0x01, 0x0a, 0x25, 0x47, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31,
	0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x2d, 0x0a, 0x12, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x71, 0x0a, 0x27, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x45, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x75, 0x6c,
	0x65, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x49, 0x64, 0x73, 0x22, 0x87, 0x01, 0x0a, 0x21, 0x47, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56,
	0x31, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x28,
	0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f,
	0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x41, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x54,
	0x79, 0x70, 0x65, 0x22, 0xcd, 0x04, 0x0a, 0x1e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x45, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72,
	0x6f, 0x78, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x61, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x64,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x66, 0x6f, 0x72,
	0x77, 0x61, 0x72, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x50, 0x72, 0x6f,
	0x78, 0x79, 0x55, 0x72, 0x69, 0x12, 0x35, 0x0a, 0x17, 0x68, 0x61, 0x73, 0x5f, 0x61, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x65, 0x64, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x68, 0x6f, 0x6f, 0x6b, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x68, 0x61, 0x73, 0x41, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x65, 0x64, 0x46, 0x6c, 0x6f, 0x77, 0x48, 0x6f, 0x6f, 0x6b, 0x73, 0x12, 0x28, 0x0a, 0x10,
	0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69,
	0x66, 0x69, 0x65, 0x64, 0x41, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x56, 0x0a, 0x0b, 0x6e, 0x6f,
	0x64, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x35, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4e, 0x6f, 0x64, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x55, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x56, 0x31, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x0a, 0x70,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x22, 0xb5, 0x0d, 0x0a, 0x24, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x45, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x63, 0x0a, 0x0d,
	0x61, 0x64, 0x64, 0x6f, 0x6e, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31,
	0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x41, 0x64, 0x64, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x0c, 0x61, 0x64, 0x64, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x2e, 0x0a, 0x13, 0x61, 0x72, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x61, 0x72, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x67,
	0x0a, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x56, 0x31, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x53, 0x0a, 0x0a, 0x64, 0x65, 0x62, 0x75, 0x67,
	0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x44, 0x65, 0x62, 0x75, 0x67, 0x4d, 0x61, 0x73,
	0x6b, 0x52, 0x09, 0x64, 0x65, 0x62, 0x75, 0x67, 0x4d, 0x61, 0x73, 0x6b, 0x12, 0x6d, 0x0a, 0x11,
	0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x56, 0x31, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x10, 0x64, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x5d, 0x0a, 0x0b, 0x64,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x3b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x44, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0b, 0x64,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x33, 0x0a, 0x16, 0x65, 0x6e,
	0x76, 0x5f, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x65, 0x6e, 0x76, 0x53,
	0x63, 0x6f, 0x70, 0x65, 0x64, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x73, 0x0a, 0x0d, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x73,
	0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x56, 0x31, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x46, 0x6c, 0x61, 0x67,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x46,
	0x6c, 0x61, 0x67, 0x73, 0x12, 0x57, 0x0a, 0x09, 0x66, 0x6c, 0x6f, 0x77, 0x68, 0x6f, 0x6f, 0x6b,
	0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x56, 0x31, 0x46, 0x6c, 0x6f, 0x77, 0x48, 0x6f, 0x6f, 0x6b, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x09, 0x66, 0x6c, 0x6f, 0x77, 0x68, 0x6f, 0x6f, 0x6b, 0x73, 0x12, 0x2a, 0x0a,
	0x11, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x75,
	0x72, 0x69, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72,
	0x64, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x55, 0x72, 0x69, 0x12, 0x36, 0x0a, 0x17, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x57, 0x0a, 0x09, 0x6b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x0d,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56,
	0x31, 0x4b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x09, 0x6b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x75,
	0x62, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x70, 0x75, 0x62, 0x73, 0x75, 0x62, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x6b, 0x0a,
	0x13, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x73, 0x18, 0x11, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x12, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x57, 0x0a, 0x09, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65,
	0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x73,
	0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x57, 0x0a,
	0x07, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x18, 0x15, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3d,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x07, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x12, 0x60, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65,
	0x54, 0x72, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0b, 0x74, 0x72, 0x61,
	0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18,
	0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x1a, 0x3f, 0x0a, 0x11, 0x46, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xb6, 0x01, 0x0a, 0x23,
	0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x56, 0x31, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x12, 0x28, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74,
	0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x41, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x22, 0xb6, 0x01, 0x0a, 0x2d, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x45, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x65, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x82, 0x03,
	0x0a, 0x29, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x56, 0x31, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x77, 0x0a, 0x17, 0x65,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67,
	0x5f, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x15, 0x65,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x52,
	0x75, 0x6c, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x5b, 0x0a, 0x0d, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x72,
	0x75, 0x6c, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x75,
	0x6c, 0x65, 0x52, 0x0c, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x75, 0x6c, 0x65, 0x73,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x22, 0x37, 0x0a, 0x35, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x44,
	0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x93, 0x02, 0x0a, 0x19,
	0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x56, 0x31, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x61, 0x74,
	0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x65, 0x6c, 0x66, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x65, 0x6c,
	0x66, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x22, 0x9e, 0x02, 0x0a, 0x20, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x73, 0x76, 0x5f, 0x64, 0x65,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63,
	0x73, 0x76, 0x44, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x64,
	0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x53, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x56, 0x31, 0x44, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x09, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x46, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x22, 0xb4, 0x01, 0x0a, 0x1b, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x46, 0x6c, 0x6f, 0x77, 0x48, 0x6f,
	0x6f, 0x6b, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x5f, 0x6f,
	0x6e, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x63,
	0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x4f, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x26, 0x0a, 0x0f, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x66, 0x6c, 0x6f, 0x77, 0x48,
	0x6f, 0x6f, 0x6b, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x64, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x64, 0x46, 0x6c, 0x6f, 0x77, 0x22, 0x8d, 0x01, 0x0a, 0x21, 0x47, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56,
	0x31, 0x46, 0x6c, 0x6f, 0x77, 0x48, 0x6f, 0x6f, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x2a, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x5f, 0x6f, 0x6e, 0x5f, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74,
	0x69, 0x6e, 0x75, 0x65, 0x4f, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x28, 0x0a, 0x10, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x64, 0x46, 0x6c, 0x6f, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x2f, 0x0a, 0x2d, 0x47, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x55, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x53, 0x0a, 0x2e, 0x47, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56,
	0x31, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x69, 0x22,
	0x2d, 0x0a, 0x2b, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x4d,
	0x0a, 0x2c, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x56, 0x31, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x69, 0x22, 0x99, 0x01,
	0x0a, 0x31, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x56, 0x31, 0x47, 0x65, 0x74, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x64, 0x0a, 0x04, 0x75, 0x72, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x50, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x47, 0x65,
	0x74, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x55, 0x52, 0x4c, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x04, 0x75, 0x72, 0x6c, 0x73, 0x22, 0x7d, 0x0a, 0x38, 0x47, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31,
	0x47, 0x65, 0x74, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x55, 0x52,
	0x4c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x64, 0x35, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x64, 0x35, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x69, 0x7a, 0x65, 0x5f,
	0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x69, 0x7a,
	0x65, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x22, 0x30, 0x0a, 0x2e, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x47,
	0x65, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x6c, 0x0a, 0x23, 0x47, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56,
	0x31, 0x47, 0x72, 0x61, 0x70, 0x68, 0x51, 0x4c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x27, 0x0a, 0x0f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x73, 0x22, 0xc5, 0x02, 0x0a, 0x29, 0x47, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31,
	0x47, 0x72, 0x61, 0x70, 0x68, 0x51, 0x4c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x70, 0x69, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x54, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52,
	0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x5b, 0x0a, 0x0a, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x3b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x47, 0x72, 0x61, 0x70,
	0x68, 0x51, 0x4c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x46, 0x0a, 0x05, 0x71, 0x75, 0x6f, 0x74,
	0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x56, 0x31, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x52, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x61,
	0x22, 0xce, 0x01, 0x0a, 0x28, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x47, 0x72, 0x61, 0x70, 0x68, 0x51, 0x4c, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x32, 0x0a,
	0x15, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x6e, 0x0a, 0x11, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x47, 0x72, 0x61, 0x70, 0x68, 0x51, 0x4c,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x10, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x73, 0x22, 0xa2, 0x01, 0x0a, 0x27, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x47, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c,
	0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a,
	0x0c, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x55, 0x72, 0x69,
	0x12, 0x54, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x3c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x44, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x06,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x22, 0x99, 0x02, 0x0a, 0x26, 0x47, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x47, 0x72,
	0x70, 0x63, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x70, 0x69, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x12, 0x54, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56,
	0x31, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73,
	0x12, 0x46, 0x0a, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x30, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x51, 0x75, 0x6f, 0x74,
	0x61, 0x52, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x22, 0x94, 0x01, 0x0a, 0x25, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x47, 0x72, 0x70, 0x63, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x6b, 0x0a, 0x11,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x56, 0x31, 0x47, 0x72, 0x70, 0x63, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x10, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x22, 0xa9, 0x02, 0x0a, 0x20, 0x47, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56,
	0x31, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x70,
	0x0a, 0x12, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x11, 0x65,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x4c, 0x0a, 0x14, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x12,
	0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x99, 0x05, 0x0a, 0x1b, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x72, 0x0a, 0x15, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f,
	0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56,
	0x31, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x13, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x6f, 0x67, 0x67,
	0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x30, 0x0a, 0x14, 0x63, 0x6f, 0x6e,
	0x73, 0x75, 0x6d, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x12, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65,
	0x72, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x18,
	0x64, 0x69, 0x73, 0x6b, 0x5f, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x6b, 0x65, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15,
	0x64, 0x69, 0x73, 0x6b, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x69, 0x70, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x69, 0x70, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x5f,
	0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x2c, 0x0a, 0x12, 0x70, 0x65, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x69, 0x64,
	0x72, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x70,
	0x65, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x43, 0x69, 0x64, 0x72, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x6f, 0x72, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x75,
	0x6e, 0x74, 0x69, 0x6d, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x12,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x22, 0x7c, 0x0a, 0x25, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0xc9, 0x02, 0x0a, 0x2b, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x82, 0x01, 0x0a, 0x12, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x76,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x53, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x11, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x52, 0x65, 0x76, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x79, 0x0a, 0x0f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64,
	0x5f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x50, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52,
	0x0e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x12,
	0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x79, 0x0a, 0x3b, 0x47,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x56, 0x31, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x65, 0x64, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65,
	0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65,
	0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65,
	0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xb4, 0x01, 0x0a, 0x38, 0x47, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x61, 0x73, 0x65, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x61, 0x73, 0x65, 0x70, 0x61, 0x74, 0x68, 0x12,
	0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x76, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x65, 0x6e, 0x76, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x65,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x22, 0x40, 0x0a,
	0x24, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x56, 0x31, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22,
	0x5f, 0x0a, 0x24, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4b, 0x65, 0x79, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x52, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x6c, 0x69, 0x61, 0x73,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x6c, 0x69, 0x61, 0x73,
	0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x22, 0x4c, 0x0a, 0x20, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x52,
	0x0a, 0x1e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x56, 0x31, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4d, 0x61, 0x70,
	0x12, 0x1c, 0x0a, 0x09, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0x4b, 0x0a, 0x1b, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x91, 0x01, 0x0a, 0x21, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x58, 0x0a, 0x07, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x56, 0x31, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x07, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x65, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0xea, 0x01, 0x0a, 0x2c, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4c, 0x69, 0x73, 0x74, 0x41,
	0x70, 0x69, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x36, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41,
	0x70, 0x69, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x87, 0x02, 0x0a, 0x26, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x69, 0x44,
	0x6f, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x70, 0x69, 0x44, 0x6f, 0x63, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x6e,
	0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x84, 0x01, 0x0a, 0x2a, 0x47,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x56, 0x31, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x0b, 0x61, 0x70, 0x69,
	0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x70, 0x69, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x0a, 0x61, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x22, 0x7a, 0x0a, 0x29, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x69, 0x50,
	0x72, 0x6f, 0x78, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d,
	0x0a, 0x07, 0x70, 0x72, 0x6f, 0x78, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x33, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x70, 0x69, 0x50,
	0x72, 0x6f, 0x78, 0x79, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x78, 0x69, 0x65, 0x73, 0x22, 0xb3, 0x01,
	0x0a, 0x2b, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x56, 0x31, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x41, 0x70, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a,
	0x0e, 0x61, 0x70, 0x70, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x61, 0x70, 0x70, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x56, 0x31, 0x41, 0x70, 0x70, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x52, 0x0c, 0x61,
	0x70, 0x70, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e,
	0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x22, 0xc5, 0x01, 0x0a, 0x28, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4c, 0x69, 0x73, 0x74, 0x41,
	0x70, 0x70, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x52, 0x0a, 0x0a, 0x61, 0x70, 0x70, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56,
	0x31, 0x41, 0x70, 0x70, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x09, 0x61, 0x70, 0x70, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e,
	0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1d, 0x0a, 0x0a,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xae, 0x01, 0x0a, 0x23,
	0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x56, 0x31, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x03, 0x61, 0x70, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x70, 0x70,
	0x52, 0x03, 0x61, 0x70, 0x70, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1d, 0x0a,
	0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xca, 0x01, 0x0a,
	0x31, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x56, 0x31, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x6d, 0x0a, 0x13, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x5f, 0x64, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x3c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x72, 0x63, 0x68,
	0x69, 0x76, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x12, 0x61,
	0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74,
	0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x7e, 0x0a, 0x2b, 0x47, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31,
	0x4c, 0x69, 0x73, 0x74, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x51, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x07, 0x71, 0x75, 0x65, 0x72,
	0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x52, 0x07, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x22, 0x85, 0x01, 0x0a, 0x2c, 0x47, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56,
	0x31, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x09, 0x71, 0x75,
	0x61, 0x6c, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x09, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x22, 0xba, 0x01, 0x0a, 0x2d, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x81,
	0x01, 0x0a, 0x29, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x0a,
	0x64, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x34, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x44, 0x61, 0x74,
	0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x73, 0x22, 0xa6, 0x01, 0x0a, 0x2c, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65,
	0x62, 0x75, 0x67, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65,
	0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x4e, 0x0a, 0x08, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x08, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x85, 0x01, 0x0a, 0x2a,
	0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x56, 0x31, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x0b, 0x64, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x35, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x44, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x22, 0x79, 0x0a, 0x2c, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65,
	0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x41, 0x70, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x03, 0x61, 0x70, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x37, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x44, 0x65, 0x76,
	0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x41, 0x70, 0x70, 0x52, 0x03, 0x61, 0x70, 0x70, 0x22, 0xd8,
	0x01, 0x0a, 0x35, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f,
	0x70, 0x65, 0x72, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x79, 0x0a, 0x17, 0x64, 0x65, 0x76, 0x65,
	0x6c, 0x6f, 0x70, 0x65, 0x72, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x16, 0x64, 0x65, 0x76,
	0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6e, 0x65, 0x78,
	0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x22, 0xce, 0x01, 0x0a, 0x32, 0x47, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56,
	0x31, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x70, 0x0a, 0x14, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x61, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3d,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x45, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x13, 0x65,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78,
	0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xf0, 0x01, 0x0a, 0x3a, 0x47,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x56, 0x31, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x89, 0x01, 0x0a, 0x1d, 0x65, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x45, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x45, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x1b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xc6, 0x01,
	0x0a, 0x30, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x56, 0x31, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x6a, 0x0a, 0x12, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x45, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x11, 0x65, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x26,
	0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67,
	0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x93, 0x01, 0x0a, 0x33, 0x47, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4c, 0x69,
	0x73, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c,
	0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x56, 0x31, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x0c,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x22, 0x75, 0x0a, 0x26,
	0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x56, 0x31, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x07, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x56, 0x31, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x07, 0x65, 0x78, 0x70, 0x6f,
	0x72, 0x74, 0x73, 0x22, 0x8a, 0x01, 0x0a, 0x2c, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4c, 0x69, 0x73, 0x74, 0x48,
	0x79, 0x62, 0x72, 0x69, 0x64, 0x49, 0x73, 0x73, 0x75, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x07, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x56, 0x31, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x73, 0x73, 0x75, 0x65, 0x72, 0x73,
	0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x73,
	0x22, 0xbd, 0x01, 0x0a, 0x32, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x61, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74,
	0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x22, 0xa5, 0x01, 0x0a, 0x28, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a,
	0x09, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x33, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x09, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73,
	0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50,
	0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xbe, 0x01, 0x0a, 0x2e, 0x47, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31,
	0x4c, 0x69, 0x73, 0x74, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x45, 0x6e, 0x74, 0x72,
	0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x64, 0x0a, 0x11, 0x6b,
	0x65, 0x79, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x56, 0x31, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x0f, 0x6b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65,
	0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74,
	0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xb1, 0x01, 0x0a, 0x2b, 0x47, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56,
	0x31, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x61, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x0d, 0x6e, 0x61, 0x74,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x35, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4e, 0x61, 0x74,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0c, 0x6e, 0x61, 0x74, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x81, 0x01,
	0x0a, 0x2b, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x56, 0x31, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x44, 0x65, 0x76, 0x65, 0x6c,
	0x6f, 0x70, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a,
	0x09, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x34, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x44, 0x65, 0x76,
	0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x52, 0x09, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65,
	0x72, 0x22, 0x9b, 0x01, 0x0a, 0x2c, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x6b, 0x0a, 0x0d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67,
	0x52, 0x0d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22,
	0xa4, 0x01, 0x0a, 0x28, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x50,
	0x6c, 0x61, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x0e,
	0x6e, 0x65, 0x78, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6e, 0x65, 0x78, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4b,
	0x65, 0x79, 0x12, 0x52, 0x0a, 0x0a, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x56, 0x31, 0x52, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x09, 0x72, 0x61, 0x74,
	0x65, 0x50, 0x6c, 0x61, 0x6e, 0x73, 0x22, 0xbe, 0x01, 0x0a, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78,
	0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x64, 0x0a, 0x10, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xc6, 0x01, 0x0a, 0x30, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x63, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x0f,
	0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x6a, 0x0a, 0x12, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x5f, 0x69, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x3b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x53, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x11, 0x73,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x73,
	0x22, 0xca, 0x01, 0x0a, 0x37, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x76, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x0f,
	0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x67, 0x0a, 0x11, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x3a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x53, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x10, 0x73, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x22, 0xc2, 0x01,
	0x0a, 0x2f, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x56, 0x31, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74,
	0x79, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74,
	0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x67, 0x0a, 0x11, 0x73, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56,
	0x31, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x52, 0x10, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x73, 0x22, 0xbe, 0x01, 0x0a, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65,
	0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x64, 0x0a,
	0x10, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x56, 0x31, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x52, 0x0f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x73, 0x22, 0x86, 0x01, 0x0a, 0x2a, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4c, 0x69, 0x73, 0x74, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x64, 0x46, 0x6c, 0x6f, 0x77, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x58, 0x0a, 0x0c, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x5f, 0x66, 0x6c, 0x6f,
	0x77, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x56, 0x31, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x46, 0x6c, 0x6f, 0x77, 0x52,
	0x0b, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x46, 0x6c, 0x6f, 0x77, 0x73, 0x22, 0xd3, 0x01, 0x0a,
	0x33, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x56, 0x31, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e,
	0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x74, 0x0a, 0x16,
	0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x6f, 0x76, 0x65,
	0x72, 0x72, 0x69, 0x64, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x54, 0x72, 0x61, 0x63, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x52, 0x14, 0x74, 0x72,
	0x61, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64,
	0x65, 0x73, 0x22, 0x4f, 0x0a, 0x1b, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x6f, 0x74,
	0x69, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x73, 0x22, 0x5d, 0x0a, 0x19, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x22, 0x72, 0x0a, 0x24, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x41,
	0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x67,
	0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x41, 0x0a, 0x25, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4d, 0x6f, 0x6e,
	0x65, 0x74, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x68, 0x0a, 0x1d, 0x47, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31,
	0x4e, 0x61, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x70,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x22, 0xac, 0x01, 0x0a, 0x1d, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4e, 0x6f, 0x64, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x3f, 0x0a, 0x1c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x5f, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x19, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64,
	0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x61, 0x78, 0x5f, 0x6e, 0x6f,
	0x64, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c,
	0x6d, 0x61, 0x78, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0e,
	0x6d, 0x69, 0x6e, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6d, 0x69, 0x6e, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x8f, 0x01, 0x0a, 0x23, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4f, 0x41, 0x53, 0x44, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x12, 0x50, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x3c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x44, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x04,
	0x73, 0x70, 0x65, 0x63, 0x22, 0x54, 0x0a, 0x1c, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0xb7, 0x02, 0x0a, 0x22, 0x47,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x56, 0x31, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x70, 0x69, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x12, 0x54, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56,
	0x31, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x54, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x46, 0x0a, 0x05,
	0x71, 0x75, 0x6f, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x52, 0x05, 0x71,
	0x75, 0x6f, 0x74, 0x61, 0x22, 0xc0, 0x01, 0x0a, 0x21, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x32, 0x0a, 0x15, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x67,
	0x0a, 0x11, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x10, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x22, 0x93, 0x02, 0x0a, 0x24, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x25, 0x0a, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x60, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x30, 0x0a, 0x14, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x08, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x22, 0xc8, 0x02,
	0x0a, 0x2c, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x56, 0x31, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x6b, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x51, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x50,
	0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x21, 0x0a,
	0x0c, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x44, 0x6f, 0x6e, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x1a, 0x50, 0x0a, 0x0c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x82, 0x01, 0x0a, 0x21, 0x47, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31,
	0x4f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x5d,
	0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x41, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4f, 0x70, 0x74,
	0x69, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x51, 0x0a,
	0x25, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x56, 0x31, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x9a, 0x02, 0x0a, 0x29, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x65,
	0x64, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x03, 0x52, 0x08, 0x54, 0x69, 0x6d, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x50, 0x0a, 0x09, 0x6d,
	0x65, 0x74, 0x61, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x12, 0x29, 0x0a,
	0x10, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x74, 0x72, 0x75, 0x6e, 0x63, 0x61, 0x74, 0x65,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x54,
	0x72, 0x75, 0x6e, 0x63, 0x61, 0x74, 0x65, 0x64, 0x12, 0x53, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x56, 0x31, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x22, 0x97, 0x0a,
	0x0a, 0x1f, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x56, 0x31, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x5c, 0x0a, 0x0d, 0x61, 0x64, 0x64, 0x6f, 0x6e, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x64, 0x64, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x0c, 0x61, 0x64, 0x64, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x29, 0x0a, 0x10, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x72, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x6e, 0x61, 0x6c, 0x79,
	0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x4f, 0x0a, 0x25, 0x61, 0x70,
	0x69, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x20, 0x61, 0x70, 0x69, 0x43, 0x6f,
	0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x1a, 0x61,
	0x70, 0x69, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x17, 0x61, 0x70, 0x69, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x11, 0x61, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x12, 0x2d, 0x0a, 0x12, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a,
	0x65, 0x64, 0x5f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x4e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x69, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x61, 0x5f, 0x63, 0x65, 0x72,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d,
	0x63, 0x61, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x48, 0x0a,
	0x21, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x5f, 0x65,
	0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x4b, 0x65, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a,
	0x13, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x76, 0x70, 0x63, 0x5f, 0x70, 0x65, 0x65,
	0x72, 0x69, 0x6e, 0x67, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x64, 0x69, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x56, 0x70, 0x63, 0x50, 0x65, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x21, 0x0a,
	0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x10, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f,
	0x61, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x73, 0x41, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x69,
	0x66, 0x69, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6c,
	0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x41, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x5f, 0x64, 0x69, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x70, 0x6f, 0x72, 0x74,
	0x61, 0x6c, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x55, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x69, 0x65, 0x73, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73,
	0x12, 0x4e, 0x0a, 0x24, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x62, 0x61, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x6b, 0x65, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x20,
	0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x45,
	0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x19, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x18, 0x1a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x2b, 0x0a, 0x11, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x1c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xaf, 0x01, 0x0a, 0x2d, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x73, 0x22, 0xfe, 0x02, 0x0a, 0x1c, 0x47, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56,
	0x31, 0x50, 0x6f, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x70,
	0x70, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x61, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x11, 0x64,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x34, 0x0a, 0x16, 0x64, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x27,
	0x0a, 0x0f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x6f, 0x64, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x6f, 0x64, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x6f, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x6f, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x6f, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x70, 0x6f, 0x64, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43,
	0x6f, 0x64, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x77, 0x0a, 0x18, 0x47, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56,
	0x31, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x4b, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x56, 0x31, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x73, 0x22, 0x84, 0x01, 0x0a, 0x20, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x60, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x0a,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x22, 0x27, 0x0a, 0x25, 0x47, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56,
	0x31, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x62,
	0x75, 0x73, 0x65, 0x22, 0x2f, 0x0a, 0x2d, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x26, 0x0a, 0x24, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x43, 0x4f, 0x52, 0x53, 0x22, 0xc9, 0x04, 0x0a,
	0x28, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x56, 0x31, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x53, 0x0a, 0x05, 0x61, 0x62, 0x75,
	0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x56, 0x31, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x41, 0x62, 0x75, 0x73, 0x65, 0x52, 0x05, 0x61, 0x62, 0x75, 0x73, 0x65, 0x12, 0x6b,
	0x0a, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x56, 0x31, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x61, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x50, 0x0a, 0x04, 0x63,
	0x6f, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x43, 0x4f, 0x52, 0x53, 0x52, 0x04, 0x63, 0x6f, 0x72, 0x73, 0x12, 0x5f, 0x0a,
	0x09, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x41, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x09, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x50,
	0x0a, 0x04, 0x6d, 0x74, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x54, 0x4c, 0x53, 0x52, 0x04, 0x6d, 0x74, 0x6c, 0x73,
	0x12, 0x56, 0x0a, 0x06, 0x74, 0x68, 0x72, 0x65, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x3e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x68, 0x72, 0x65, 0x61, 0x74,
	0x52, 0x06, 0x74, 0x68, 0x72, 0x65, 0x61, 0x74, 0x22, 0x26, 0x0a, 0x24, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x54, 0x4c, 0x53,
	0x22, 0x2b, 0x0a, 0x29, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x28, 0x0a,
	0x26, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x56, 0x31, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x54, 0x68, 0x72, 0x65, 0x61, 0x74, 0x22, 0x70, 0x0a, 0x1d, 0x47, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x50, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x4f, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52,
	0x08, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x22, 0x47, 0x0a, 0x1b, 0x47, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31,
	0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0xe6, 0x01, 0x0a, 0x2f, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74,
	0x69, 0x63, 0x73, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x12, 0x2d, 0x0a, 0x12, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x5f,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x61,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x12, 0x2e, 0x0a, 0x13, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x76, 0x70, 0x63, 0x5f,
	0x70, 0x65, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x64,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x56, 0x70, 0x63, 0x50, 0x65, 0x65, 0x72, 0x69, 0x6e, 0x67,
	0x12, 0x29, 0x0a, 0x10, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x75, 0x6e, 0x74,
	0x69, 0x6d, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xd9, 0x03, 0x0a, 0x18,
	0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x56, 0x31, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x73, 0x76, 0x5f,
	0x64, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x63, 0x73, 0x76, 0x44, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x12, 0x1e, 0x0a,
	0x0a, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0a, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2b, 0x0a,
	0x11, 0x65, 0x6e, 0x76, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x65, 0x6e, 0x76, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x48, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x12, 0x2b, 0x0a, 0x12, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x62, 0x79, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x50, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x56, 0x31, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x07,
	0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x12, 0x30, 0x0a, 0x14, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x33, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x22, 0xec, 0x01, 0x0a, 0x20, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1e, 0x0a, 0x0a,
	0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0a, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x23, 0x0a, 0x0d,
	0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x6f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x12, 0x27, 0x0a, 0x0f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69,
	0x6d, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x22, 0x98, 0x01, 0x0a, 0x1e, 0x47, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69,
	0x61, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x12,
	0x1a, 0x0a, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0xc4, 0x02, 0x0a, 0x2b, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x61,
	0x62, 0x75, 0x6c, 0x61, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x56, 0x0a, 0x07, 0x6d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x41, 0x67, 0x67,
	0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x73, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x49, 0x0a,
	0x0a, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x52, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x22, 0x9e, 0x01, 0x0a, 0x2c, 0x47, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65,
	0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2c, 0x0a, 0x06, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e,
	0x79, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x91, 0x03, 0x0a, 0x2e, 0x47, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56,
	0x31, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0a, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x12, 0x56, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x56, 0x31, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x49, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65,
	0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b,
	0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xdc, 0x01,
	0x0a, 0x2f, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x56, 0x31, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65,
	0x72, 0x69, 0x65, 0x73, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e,
	0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x67, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x4f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x65, 0x71, 0x75,
	0x65, 0x6e, 0x63, 0x65, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0xa7, 0x02, 0x0a,
	0x37, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x56, 0x31, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72,
	0x69, 0x65, 0x73, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x7f, 0x0a, 0x0a, 0x64, 0x69, 0x6d, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x5f, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x69,
	0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x44, 0x69,
	0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x64,
	0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2c, 0x0a, 0x06, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52,
	0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x1a, 0x3d, 0x0a, 0x0f, 0x44, 0x69, 0x6d, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x69, 0x0a, 0x18, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x51, 0x75, 0x6f,
	0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x75, 0x6e, 0x69,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x55, 0x6e, 0x69,
	0x74, 0x22, 0xc6, 0x07, 0x0a, 0x1b, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x52, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61,
	0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x70, 0x69, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x70, 0x69, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x65, 0x72,
	0x69, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x69, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x70, 0x0a, 0x19, 0x63, 0x6f, 0x6e, 0x73,
	0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x69, 0x6e, 0x67, 0x5f,
	0x72, 0x61, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x52, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x67,
	0x65, 0x52, 0x17, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72,
	0x69, 0x63, 0x69, 0x6e, 0x67, 0x52, 0x61, 0x74, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x18, 0x63, 0x6f,
	0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x69, 0x6e,
	0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x63, 0x6f,
	0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x69, 0x6e, 0x67,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x66, 0x69, 0x78, 0x65,
	0x64, 0x5f, 0x66, 0x65, 0x65, 0x5f, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x66, 0x69, 0x78, 0x65, 0x64, 0x46, 0x65, 0x65, 0x46,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x57, 0x0a, 0x13, 0x66, 0x69, 0x78, 0x65,
	0x64, 0x5f, 0x72, 0x65, 0x63, 0x75, 0x72, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x66, 0x65, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x11,
	0x66, 0x69, 0x78, 0x65, 0x64, 0x52, 0x65, 0x63, 0x75, 0x72, 0x72, 0x69, 0x6e, 0x67, 0x46, 0x65,
	0x65, 0x12, 0x28, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6c, 0x61, 0x73,
	0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x41, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x32, 0x0a, 0x15, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x66, 0x75, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x12, 0x6c, 0x0a, 0x13, 0x72, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x5f, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x3c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x52, 0x65, 0x76,
	0x65, 0x6e, 0x75, 0x65, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x11,
	0x72, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x61, 0x74, 0x65,
	0x73, 0x12, 0x2c, 0x0a, 0x12, 0x72, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x5f, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72,
	0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x53, 0x68, 0x61, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x44, 0x0a, 0x09, 0x73, 0x65, 0x74, 0x75, 0x70, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x08, 0x73, 0x65, 0x74,
	0x75, 0x70, 0x46, 0x65, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x81, 0x01, 0x0a, 0x1c, 0x47,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x56, 0x31, 0x52, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x65,
	0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x39, 0x0a,
	0x03, 0x66, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x6f,
	0x6e, 0x65, 0x79, 0x52, 0x03, 0x66, 0x65, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x22, 0x91,
	0x01, 0x0a, 0x1c, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x66, 0x65, 0x72, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x66, 0x65, 0x72, 0x73, 0x12, 0x23, 0x0a,
	0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x22, 0x5d, 0x0a, 0x22, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0xe9, 0x01, 0x0a, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x55, 0x69, 0x64, 0x12, 0x3b, 0x0a, 0x0b, 0x72, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x57, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x56, 0x31, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x22, 0x31, 0x0a,
	0x2f, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x56, 0x31, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x8b, 0x01, 0x0a, 0x21, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x79, 0x12, 0x4a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x34, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x53,
	0x0a, 0x21, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x56, 0x31, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x49, 0x0a, 0x1f, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x80,
	0x01, 0x0a, 0x20, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x46, 0x69,
	0x6c, 0x65, 0x73, 0x12, 0x5c, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f,
	0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x46,
	0x69, 0x6c, 0x65, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x46, 0x69, 0x6c,
	0x65, 0x22, 0xd1, 0x01, 0x0a, 0x21, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x12, 0x57, 0x0a, 0x09, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x56, 0x31, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x09, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x25, 0x0a, 0x0e,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0xe0, 0x03, 0x0a, 0x19, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x52, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x4d, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x56, 0x31, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x07, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x55, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x69, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73,
	0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x50, 0x68, 0x72, 0x61, 0x73,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x12, 0x12, 0x0a, 0x05, 0x75, 0x5f, 0x72, 0x5f, 0x69, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x52, 0x49, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x65, 0x72, 0x62, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x76, 0x65, 0x72, 0x62, 0x22, 0x79, 0x0a, 0x24, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x52,
	0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x65,
	0x6e, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x22, 0xcd, 0x01, 0x0a, 0x21, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x52, 0x65, 0x76, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x4e, 0x0a, 0x06, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6a, 0x73, 0x6f,
	0x6e, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6a, 0x73,
	0x6f, 0x6e, 0x53, 0x70, 0x65, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x22, 0xb5, 0x02, 0x0a, 0x1e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x52, 0x6f, 0x75, 0x74, 0x69,
	0x6e, 0x67, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x61, 0x73, 0x65, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x61, 0x73, 0x65, 0x70, 0x61,
	0x74, 0x68, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x2c, 0x0a,
	0x12, 0x65, 0x6e, 0x76, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x72, 0x65, 0x76, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x65, 0x6e, 0x76, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x65,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x23, 0x0a,
	0x0d, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x12, 0x3b,
	0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xd2, 0x02, 0x0a, 0x26,
	0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x56, 0x31, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x41, 0x64, 0x64, 0x6f, 0x6e, 0x73,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x6c, 0x0a, 0x10, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74,
	0x69, 0x63, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x41, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x52, 0x75, 0x6e,
	0x74, 0x69, 0x6d, 0x65, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x0f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x73, 0x0a, 0x13, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x43, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x52, 0x75,
	0x6e, 0x74, 0x69, 0x6d, 0x65, 0x41, 0x70, 0x69, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x11, 0x61, 0x70, 0x69, 0x53, 0x65, 0x63, 0x75, 0x72,
	0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64,
	0x22, 0x7f, 0x0a, 0x29, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x41, 0x6e,
	0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x38, 0x0a,
	0x18, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x16, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x22, 0x47, 0x0a, 0x2b, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x41,
	0x70, 0x69, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0xb0, 0x01, 0x0a, 0x20, 0x47,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x56, 0x31, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x29, 0x0a, 0x10, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x62, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x6e, 0x61, 0x6c, 0x79,
	0x74, 0x69, 0x63, 0x73, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2a,
	0x0a, 0x11, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x72,
	0x61, 0x63, 0x65, 0x5f, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x74, 0x72, 0x61, 0x63, 0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x22, 0xb7, 0x03,
	0x0a, 0x25, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x56, 0x31, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x54, 0x72, 0x61, 0x63,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x63, 0x0a, 0x09, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x56, 0x31, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x54, 0x72, 0x61, 0x63, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x52, 0x09, 0x6f,
	0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x73, 0x12, 0x4c, 0x0a, 0x14, 0x72, 0x65, 0x76, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x12, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x76,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x6e, 0x0a, 0x0f, 0x73, 0x61, 0x6d, 0x70, 0x6c,
	0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x45, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x52, 0x75, 0x6e,
	0x74, 0x69, 0x6d, 0x65, 0x54, 0x72, 0x61, 0x63, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x69, 0x6e,
	0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x69, 0x6e,
	0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0xd1, 0x02, 0x0a, 0x2d, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x52,
	0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x54, 0x72, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x70, 0x69,
	0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x70,
	0x69, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x4c, 0x0a, 0x14, 0x72, 0x65,
	0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x12, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x76, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72,
	0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x6e, 0x0a, 0x0f, 0x73, 0x61, 0x6d,
	0x70, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x45, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x52,
	0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x54, 0x72, 0x61, 0x63, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c,
	0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0e, 0x73, 0x61, 0x6d, 0x70, 0x6c,
	0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x6e, 0x0a, 0x2d, 0x47,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x56, 0x31, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x54, 0x72, 0x61, 0x63, 0x65, 0x53, 0x61,
	0x6d, 0x70, 0x6c, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x69,
	0x6e, 0x67, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x73,
	0x61, 0x6d, 0x70, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x61, 0x74, 0x65, 0x22, 0xe9, 0x01, 0x0a, 0x19,
	0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x56, 0x31, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x5e, 0x0a, 0x0a, 0x64, 0x69, 0x6d,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3e, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x64,
	0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x65, 0x74,
	0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x58, 0x0a,
	0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3e,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x53, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x07,
	0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x22, 0x9d, 0x01, 0x0a, 0x26, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x53,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x45, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x5f, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x53, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x0a, 0x70, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x22, 0x76, 0x0a, 0x27, 0x47, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x53, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22,
	0x9f, 0x02, 0x0a, 0x18, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x57, 0x0a, 0x09,
	0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x39, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x5f, 0x0a, 0x0d, 0x73, 0x75, 0x62, 0x63, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x43, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x0d, 0x73, 0x75, 0x62, 0x63, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x49, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x72,
	0x61, 0x6e, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67,
	0x65, 0x22, 0xff, 0x02, 0x0a, 0x21, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x43, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x41, 0x0a, 0x0e, 0x63, 0x61, 0x6c, 0x63, 0x75,
	0x6c, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x63, 0x61, 0x6c,
	0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x46, 0x0a, 0x11, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x63, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x43, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x72, 0x69, 0x6c, 0x6c, 0x64, 0x6f, 0x77, 0x6e, 0x5f,
	0x70, 0x61, 0x74, 0x68, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x72, 0x69,
	0x6c, 0x6c, 0x64, 0x6f, 0x77, 0x6e, 0x50, 0x61, 0x74, 0x68, 0x73, 0x12, 0x71, 0x0a, 0x0f, 0x72,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x47, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56,
	0x31, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x72,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x50,
	0x61, 0x74, 0x68, 0x22, 0xea, 0x01, 0x0a, 0x2f, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x67, 0x0a, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x56, 0x31, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x69, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x22, 0xdd, 0x01, 0x0a, 0x35, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x81, 0x01, 0x0a, 0x0e, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x5a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52,
	0x0d, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x73, 0x0a, 0x42, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x2d, 0x0a, 0x12, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4c, 0x69, 0x6e, 0x6b, 0x22, 0xc4, 0x05, 0x0a, 0x21, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x53, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x54, 0x0a, 0x05, 0x61,
	0x6c, 0x6c, 0x6f, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x05, 0x61, 0x6c, 0x6c, 0x6f,
	0x77, 0x12, 0x73, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x48, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x51, 0x0a, 0x04, 0x64, 0x65, 0x6e, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x3d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x53, 0x65,
	0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6e, 0x79,
	0x52, 0x04, 0x64, 0x65, 0x6e, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3b, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x51, 0x0a, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31,
	0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6c,
	0x61, 0x67, 0x52, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x2b, 0x0a, 0x03, 0x74, 0x74, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x74, 0x74, 0x6c, 0x12,
	0x3b, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x28, 0x0a, 0x26,
	0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x56, 0x31, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x22, 0xa4, 0x03, 0x0a, 0x30, 0x47, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x53, 0x65,
	0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x23, 0x0a, 0x0d, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73,
	0x12, 0x19, 0x0a, 0x08, 0x61, 0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x61,
	0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0b, 0x61, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x61, 0x73, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x03, 0x52, 0x04, 0x61, 0x73,
	0x6e, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x6f, 0x74, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x6f, 0x74, 0x52, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72,
	0x5f, 0x61, 0x70, 0x70, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x65, 0x76,
	0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x41, 0x70, 0x70, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65,
	0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a,
	0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x68, 0x74,
	0x74, 0x70, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0b, 0x68, 0x74, 0x74, 0x70, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x12, 0x2a, 0x0a,
	0x11, 0x69, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x72, 0x61, 0x6e, 0x67,
	0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0b, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x4c, 0x0a,
	0x25, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x56, 0x31, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x65, 0x6e, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x86, 0x01, 0x0a, 0x25,
	0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x56, 0x31, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x5d, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x56, 0x31, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x48, 0x74, 0x74, 0x70, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x07, 0x68, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x73, 0x22, 0x57, 0x0a, 0x2b, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x53, 0x65, 0x63, 0x75, 0x72,
	0x69, 0x74, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x74, 0x74, 0x70, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x95, 0x01,
	0x0a, 0x28, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x56, 0x31, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x8b, 0x03, 0x0a, 0x2b, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x53, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x3d, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x52, 0x70, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x67, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x4b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31,
	0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x77, 0x0a, 0x0e, 0x73, 0x63,
	0x6f, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x50, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x53,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x0d, 0x73, 0x63, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0x8f, 0x01, 0x0a, 0x33, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x53, 0x65, 0x63, 0x75, 0x72,
	0x69, 0x74, 0x79, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x30, 0x0a, 0x14, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x76, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x9c, 0x04, 0x0a, 0x38, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x53, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0xae, 0x01, 0x0a, 0x1a, 0x61, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x6f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x56, 0x31, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x41, 0x73, 0x73, 0x65,
	0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x53, 0x63, 0x6f, 0x72,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x19, 0x61, 0x73, 0x73, 0x65, 0x73, 0x73,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x44, 0x0a, 0x10, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x1a, 0xb6, 0x01, 0x0a, 0x1e,
	0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x7e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x68, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x53, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0xed, 0x02, 0x0a, 0x50, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x53, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0xa0, 0x01, 0x0a,
	0x0f, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x76, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x56, 0x31, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x41, 0x73, 0x73, 0x65, 0x73,
	0x73, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f,
	0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x21, 0x0a, 0x0c, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x49, 0x6d, 0x70, 0x61,
	0x63, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x64, 0x69, 0x63, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x64, 0x69, 0x63, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x77, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x22, 0x93, 0x02, 0x0a, 0x5e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x53, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x8e, 0x01, 0x0a, 0x04, 0x6c, 0x69,
	0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x7a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x56, 0x31, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x41, 0x73, 0x73,
	0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x53, 0x63, 0x6f,
	0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x22, 0x8a, 0x01, 0x0a, 0x62, 0x47,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x56, 0x31, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x6e,
	0x6b, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x22, 0xe6, 0x03, 0x0a, 0x23, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x53,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x12,
	0x27, 0x0a, 0x0f, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x4a, 0x0a, 0x13, 0x66,
	0x69, 0x72, 0x73, 0x74, 0x5f, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x11, 0x66, 0x69, 0x72, 0x73, 0x74, 0x44, 0x65, 0x74, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x48, 0x0a, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x5f,
	0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x10, 0x6c, 0x61, 0x73, 0x74, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x5f, 0x0a, 0x1e, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x1b, 0x6c, 0x61, 0x73, 0x74, 0x4f, 0x62, 0x73, 0x65, 0x72,
	0x76, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6f,
	0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x1d, 0x0a, 0x0a,
	0x72, 0x69, 0x73, 0x6b, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x72, 0x69, 0x73, 0x6b, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x74,
	0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x82, 0x06, 0x0a, 0x22, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x69, 0x0a, 0x0c,
	0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x45, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x53,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x45, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0c, 0x65, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x63, 0x6f, 0x72,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x5f, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x4c, 0x0a, 0x14, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x12, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x76, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x4e, 0x0a, 0x15, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x13, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x4c, 0x0a, 0x14, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x12, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x70, 0x0a, 0x0f, 0x73, 0x63, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x47, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74,
	0x79, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0e, 0x73, 0x63, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x73, 0x22, 0x8e, 0x01, 0x0a, 0x2d, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x53, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x45, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x3b, 0x0a, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0xcc, 0x01, 0x0a, 0x38, 0x47, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x53, 0x65,
	0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x45, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x3b, 0x0a, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3f, 0x0a, 0x1c, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x19, 0x73, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x76, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x88, 0x01, 0x0a, 0x2f, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x53, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x63, 0x6f, 0x72,
	0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x22, 0xd2, 0x04, 0x0a, 0x21, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x65, 0x6e, 0x76, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x65, 0x6e, 0x76, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x48, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x64, 0x0a,
	0x0c, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31,
	0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x0b, 0x71, 0x75, 0x65, 0x72, 0x79, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x12, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x5f, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x47, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x56, 0x31, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x72, 0x6f, 0x77, 0x73, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x6f, 0x77,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x6c, 0x66, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x73, 0x65, 0x6c, 0x66, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x22, 0xa5, 0x02, 0x0a, 0x29, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x53, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x3f, 0x0a, 0x0d, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x1b,
	0x0a, 0x09, 0x6d, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x43, 0x0a, 0x0f, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x22, 0xfc, 0x03,
	0x0a, 0x26, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x56, 0x31, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x73, 0x76, 0x5f,
	0x64, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x63, 0x73, 0x76, 0x44, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x12, 0x1e, 0x0a,
	0x0a, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0a, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x21, 0x0a,
	0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x2b, 0x0a, 0x11, 0x65, 0x6e, 0x76, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x68, 0x6f, 0x73,
	0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x65, 0x6e, 0x76,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x48, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x12, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x62,
	0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x55, 0x6e,
	0x69, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x5e, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52,
	0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x69, 0x6d, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x69, 0x6d,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x12, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x5f,
	0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e,
	0x79, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x22, 0xbd, 0x01, 0x0a,
	0x2c, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x56, 0x31, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x12, 0x31, 0x0a,
	0x14, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x61, 0x67, 0x67,
	0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x5f, 0x0a, 0x2f,
	0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x56, 0x31, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x18, 0x0a, 0x07, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x6c,
	0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x65, 0x6c, 0x66, 0x22, 0xf6, 0x01,
	0x0a, 0x2b, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x56, 0x31, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x56, 0x69, 0x65, 0x77, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x5d, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x28, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x7e, 0x0a, 0x23, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x53, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x43, 0x0a,
	0x1e, 0x6d, 0x6c, 0x5f, 0x72, 0x65, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x66,
	0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1b, 0x6d, 0x6c, 0x52, 0x65, 0x74, 0x72, 0x61, 0x69, 0x6e,
	0x69, 0x6e, 0x67, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x45, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x61, 0x0a, 0x28, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x73, 0x73, 0x75, 0x65, 0x72, 0x73, 0x4d, 0x61, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x69, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x49, 0x64, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0x4f, 0x0a, 0x1a, 0x47, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x5f, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x4d, 0x73, 0x22, 0x8d, 0x01, 0x0a, 0x2c, 0x47,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x56, 0x31, 0x53, 0x65, 0x74, 0x41, 0x64, 0x64, 0x6f, 0x6e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x11, 0x61,
	0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63,
	0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x61, 0x70, 0x69, 0x5f,
	0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x61, 0x70, 0x69, 0x53, 0x65, 0x63, 0x75, 0x72,
	0x69, 0x74, 0x79, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x83, 0x01, 0x0a, 0x23, 0x47,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x56, 0x31, 0x53, 0x65, 0x74, 0x41, 0x64, 0x64, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x5c, 0x0a, 0x0d, 0x61, 0x64, 0x64, 0x6f, 0x6e, 0x73, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x64, 0x64, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x0c, 0x61, 0x64, 0x64, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x22, 0xd5, 0x01, 0x0a, 0x1d, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x46, 0x6c,
	0x6f, 0x77, 0x12, 0x2c, 0x0a, 0x12, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x76,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x56, 0x0a, 0x09, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08,
	0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xbc, 0x06, 0x0a, 0x25, 0x47, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x6d, 0x0a, 0x15, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x38, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x14, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0xa1, 0x01, 0x0a, 0x1e, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x61, 0x73,
	0x5f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x5d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x64, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x41,
	0x73, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x1a, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61,
	0x41, 0x73, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x10,
	0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69,
	0x66, 0x69, 0x65, 0x64, 0x41, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f,
	0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f,
	0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x12, 0x5f, 0x0a, 0x0e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x5f, 0x66, 0x6c, 0x6f, 0x77,
	0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x46,
	0x6c, 0x6f, 0x77, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x1a, 0x4d, 0x0a, 0x1f, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x41, 0x73, 0x50, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xa3, 0x02, 0x0a, 0x18, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x12, 0x64, 0x0a, 0x0c, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x53, 0x74, 0x61, 0x74, 0x73, 0x45, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x0c, 0x65, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x4f, 0x0a, 0x05, 0x68, 0x6f,
	0x73, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x53, 0x74, 0x61, 0x74, 0x73, 0x48, 0x6f, 0x73, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x52, 0x05, 0x68, 0x6f, 0x73, 0x74, 0x73, 0x12, 0x50, 0x0a, 0x09, 0x6d,
	0x65, 0x74, 0x61, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x22, 0xe7, 0x01,
	0x0a, 0x28, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x56, 0x31, 0x53, 0x74, 0x61, 0x74, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x5a, 0x0a, 0x0a, 0x64, 0x69,
	0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x44, 0x69, 0x6d, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x0a, 0x64, 0x69, 0x6d, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x4b, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x56, 0x31, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xe0, 0x01, 0x0a, 0x21, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x5a, 0x0a,
	0x0a, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x3a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x44, 0x69,
	0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x0a, 0x64,
	0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x4b, 0x0a, 0x07, 0x6d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x07, 0x6d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x35, 0x0a, 0x1f, 0x47, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56,
	0x31, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x5a, 0x0a, 0x24, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x53, 0x79, 0x6e, 0x63, 0x41, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x65, 0x74, 0x61,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x65, 0x74, 0x61, 0x67, 0x12, 0x1e, 0x0a,
	0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22, 0x8b, 0x02,
	0x0a, 0x1f, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x56, 0x31, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f,
	0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x4f, 0x0a, 0x0a, 0x73, 0x5f,
	0x73, 0x5f, 0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x54, 0x6c, 0x73, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x07, 0x73, 0x53, 0x4c, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xee, 0x01, 0x0a, 0x25,
	0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x56, 0x31, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68,
	0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x53, 0x0a, 0x08, 0x74, 0x6c, 0x73, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x54, 0x6c, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x07, 0x74, 0x6c, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x56, 0x0a, 0x28,
	0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x56, 0x31, 0x54, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x22, 0xac, 0x03, 0x0a, 0x1a, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x54, 0x6c, 0x73, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x69, 0x70, 0x68, 0x65, 0x72, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x63, 0x69, 0x70, 0x68, 0x65, 0x72, 0x73, 0x12, 0x2e, 0x0a,
	0x13, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x41, 0x75, 0x74, 0x68, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x5d, 0x0a,
	0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x54,
	0x6c, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x66, 0x6f, 0x72, 0x63,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x66, 0x6f, 0x72, 0x63, 0x65,
	0x12, 0x38, 0x0a, 0x18, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x16, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6b, 0x65,
	0x79, 0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6b,
	0x65, 0x79, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6b, 0x65, 0x79, 0x5f, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5f, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x72, 0x75, 0x73, 0x74, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x22, 0x63, 0x0a, 0x24, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x54, 0x6c, 0x73, 0x49, 0x6e, 0x66,
	0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x25, 0x0a, 0x0e, 0x77, 0x69, 0x6c, 0x64, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x77, 0x69, 0x6c, 0x64, 0x63,
	0x61, 0x72, 0x64, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x22, 0x82, 0x04, 0x0a, 0x20, 0x47, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31,
	0x54, 0x6c, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x69, 0x70, 0x68, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x69, 0x70, 0x68, 0x65, 0x72, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x41, 0x75, 0x74, 0x68,
	0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x5c, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x65, 0x6e, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x65, 0x6e, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x12, 0x38, 0x0a, 0x18, 0x69, 0x67, 0x6e,
	0x6f, 0x72, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x69, 0x67, 0x6e,
	0x6f, 0x72, 0x65, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6b, 0x65, 0x79, 0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x41, 0x6c, 0x69, 0x61, 0x73,
	0x12, 0x6c, 0x0a, 0x13, 0x6b, 0x65, 0x79, 0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x5f, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4b, 0x65, 0x79, 0x41, 0x6c, 0x69,
	0x61, 0x73, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x11, 0x6b, 0x65, 0x79,
	0x41, 0x6c, 0x69, 0x61, 0x73, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x12, 0x1f, 0x0a, 0x0b,
	0x74, 0x72, 0x75, 0x73, 0x74, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x74, 0x72, 0x75, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x22, 0xc1, 0x01,
	0x0a, 0x1e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x56, 0x31, 0x54, 0x72, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x12, 0x67, 0x0a, 0x0f, 0x73, 0x61, 0x6d, 0x70,
	0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x3e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x54, 0x72,
	0x61, 0x63, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x0e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x22, 0xc2, 0x01, 0x0a, 0x26, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x54, 0x72, 0x61, 0x63, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x61, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x67, 0x0a,
	0x0f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x56, 0x31, 0x54, 0x72, 0x61, 0x63, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x69, 0x6e, 0x67,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x69, 0x6e, 0x67,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x67, 0x0a, 0x26, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x54, 0x72, 0x61,
	0x63, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x61,
	0x6d, 0x70, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x0c, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x61, 0x74, 0x65, 0x22,
	0xd1, 0x01, 0x0a, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x70,
	0x69, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0b, 0x61, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x12, 0x64, 0x0a,
	0x11, 0x61, 0x70, 0x70, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x70, 0x70, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70,
	0x4b, 0x65, 0x79, 0x52, 0x0e, 0x61, 0x70, 0x70, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70,
	0x4b, 0x65, 0x79, 0x22, 0x7e, 0x0a, 0x1e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x22, 0xbd, 0x01, 0x0a, 0x30, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x68, 0x0a, 0x11, 0x73, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31,
	0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x52, 0x10, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x63, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x73,
	0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d,
	0x61, 0x73, 0x6b, 0x22, 0x91, 0x01, 0x0a, 0x16, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x49, 0x61,
	0x6d, 0x56, 0x31, 0x41, 0x75, 0x64, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x5d,
	0x0a, 0x11, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x49, 0x61, 0x6d, 0x56, 0x31, 0x41, 0x75,
	0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0f, 0x61, 0x75,
	0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0x61, 0x0a, 0x19, 0x47, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x49, 0x61, 0x6d, 0x56, 0x31, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x29, 0x0a, 0x10, 0x65, 0x78, 0x65, 0x6d, 0x70, 0x74, 0x65, 0x64,
	0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f,
	0x65, 0x78, 0x65, 0x6d, 0x70, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12,
	0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x54, 0x79, 0x70, 0x65, 0x22, 0x88, 0x01, 0x0a, 0x12, 0x47,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x49, 0x61, 0x6d, 0x56, 0x31, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x12, 0x44, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x45, 0x78, 0x70, 0x72, 0x52, 0x09, 0x63, 0x6f,
	0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0xde, 0x01, 0x0a, 0x11, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x49, 0x61, 0x6d, 0x56, 0x31, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x53, 0x0a, 0x0d, 0x61,
	0x75, 0x64, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x49, 0x61, 0x6d, 0x56, 0x31, 0x41, 0x75, 0x64, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x0c, 0x61, 0x75, 0x64, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73,
	0x12, 0x46, 0x0a, 0x08, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x49, 0x61, 0x6d, 0x56, 0x31, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x08,
	0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x65, 0x74, 0x61, 0x67,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x65, 0x74, 0x61, 0x67, 0x12, 0x18, 0x0a, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x84, 0x01, 0x0a, 0x1e, 0x47, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x49, 0x61, 0x6d, 0x56, 0x31, 0x53, 0x65, 0x74, 0x49, 0x61, 0x6d, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x06, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x49, 0x61, 0x6d, 0x56, 0x31, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x52, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x1f, 0x0a, 0x0b,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x73, 0x6b, 0x22, 0x48, 0x0a,
	0x24, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x49, 0x61, 0x6d, 0x56, 0x31, 0x54, 0x65, 0x73, 0x74,
	0x49, 0x61, 0x6d, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x49, 0x0a, 0x25, 0x47, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x49, 0x61, 0x6d, 0x56, 0x31, 0x54, 0x65, 0x73, 0x74, 0x49, 0x61, 0x6d, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0x90, 0x01, 0x0a, 0x27, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x4c, 0x6f, 0x6e,
	0x67, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26,
	0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67,
	0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x3d, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x6c, 0x6f, 0x6e, 0x67, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xe5, 0x03, 0x0a, 0x1a, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x4c, 0x6f, 0x6e, 0x67, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x04, 0x64, 0x6f, 0x6e, 0x65, 0x12, 0x3d, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x52, 0x70, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x5c, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x4c, 0x6f, 0x6e, 0x67, 0x72, 0x75, 0x6e,
	0x6e, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x5c, 0x0a, 0x08, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x4c, 0x6f, 0x6e, 0x67, 0x72,
	0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x51, 0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x51, 0x0a, 0x0d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41,
	0x6e, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x15, 0x0a,
	0x13, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x7d, 0x0a, 0x1c, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x52, 0x70,
	0x63, 0x50, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x61, 0x69,
	0x6c, 0x75, 0x72, 0x65, 0x12, 0x5d, 0x0a, 0x0a, 0x76, 0x69, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x52, 0x70, 0x63, 0x50, 0x72, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x56, 0x69,
	0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x76, 0x69, 0x6f, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x22, 0x77, 0x0a, 0x25, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x52, 0x70, 0x63,
	0x50, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x61, 0x69, 0x6c,
	0x75, 0x72, 0x65, 0x56, 0x69, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x6f, 0x0a, 0x0f,
	0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x52, 0x70, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x2e, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x84, 0x01,
	0x0a, 0x0e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x45, 0x78, 0x70, 0x72,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x22, 0x86, 0x01, 0x0a, 0x12, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x35, 0x0a, 0x08, 0x65,
	0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x62, 0x0a,
	0x0f, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x6f, 0x6e, 0x65, 0x79,
	0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x61, 0x6e, 0x6f, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6e, 0x61, 0x6e, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x75,
	0x6e, 0x69, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x75, 0x6e, 0x69, 0x74,
	0x73, 0x22, 0x2e, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x79, 0x62, 0x72, 0x69, 0x64, 0x49,
	0x73, 0x73, 0x75, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x90, 0x01, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x5b, 0x0a, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x4d, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x74, 0x65, 0x6e, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x2c, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x55, 0x0a, 0x2b, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64,
	0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x22, 0x3a, 0x0a, 0x24, 0x47, 0x65, 0x74, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0x39, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x52, 0x75, 0x6e, 0x74, 0x69,
	0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x3c, 0x0a, 0x26, 0x47, 0x65, 0x74, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xa9, 0x01,
	0x0a, 0x27, 0x47, 0x65, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x6a, 0x0a,
	0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x46, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31,
	0x47, 0x65, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0c, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x18, 0x4c, 0x69, 0x73,
	0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x22, 0x91, 0x01,
	0x0a, 0x1c, 0x53, 0x65, 0x74, 0x41, 0x64, 0x64, 0x6f, 0x6e, 0x73, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x6f, 0x72, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6f, 0x72, 0x67,
	0x12, 0x5f, 0x0a, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x56, 0x31, 0x53, 0x65, 0x74, 0x41, 0x64, 0x64, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x9f, 0x01, 0x0a, 0x27, 0x53, 0x65, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x41, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x60, 0x0a, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x56, 0x31, 0x53, 0x79, 0x6e, 0x63, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x8c, 0x01, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x5b, 0x0a, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0xc1, 0x01, 0x0a, 0x29, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d,
	0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4d, 0x61, 0x73, 0x6b, 0x12, 0x5f, 0x0a, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xc9, 0x01, 0x0a, 0x2c, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x6e,
	0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x44, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12,
	0x80, 0x01, 0x0a, 0x21, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x5f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x44, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x52, 0x1f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x41, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x44, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x22, 0x42, 0x0a, 0x2c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69,
	0x63, 0x73, 0x44, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3f, 0x0a, 0x29, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x74,
	0x69, 0x63, 0x73, 0x44, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x66, 0x0a, 0x2b, 0x4c, 0x69, 0x73, 0x74, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x6e, 0x61, 0x6c,
	0x79, 0x74, 0x69, 0x63, 0x73, 0x44, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22,
	0xc7, 0x01, 0x0a, 0x2a, 0x54, 0x65, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x44, 0x61,
	0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x80, 0x01, 0x0a, 0x21, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69,
	0x63, 0x73, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x34, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x44,
	0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x1f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73,
	0x44, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x22, 0xc5, 0x01, 0x0a, 0x2c, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x44, 0x61, 0x74, 0x61, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x80,
	0x01, 0x0a, 0x21, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x5f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x44, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x52, 0x1f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41,
	0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x44, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x22, 0xb0, 0x01, 0x0a, 0x28, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x69,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x70, 0x0a, 0x18, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x5f, 0x61, 0x70, 0x69, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56,
	0x31, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x17, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x69, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x22, 0xb0, 0x01, 0x0a, 0x24, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x69, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x70, 0x0a, 0x18, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x61, 0x70, 0x69, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x56, 0x31, 0x41, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x17,
	0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x69,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x22, 0x3a, 0x0a, 0x24, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70,
	0x69, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x37, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x69, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xd6, 0x01, 0x0a,
	0x23, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x41, 0x70, 0x69, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x70, 0x61,
	0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x78, 0x70, 0x61, 0x6e, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x4b, 0x65, 0x79, 0x22, 0xac, 0x01, 0x0a, 0x24, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x69,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x70, 0x0a, 0x18, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x5f, 0x61, 0x70, 0x69, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56,
	0x31, 0x41, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x17, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x69, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x22, 0x44, 0x0a, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x69, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x41, 0x0a, 0x2b, 0x47, 0x65,
	0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70,
	0x69, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x47, 0x0a,
	0x2d, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x41, 0x70, 0x69, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x22, 0xde, 0x01, 0x0a, 0x41, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x41, 0x70, 0x69, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x84, 0x01, 0x0a, 0x23, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x5f, 0x61, 0x70, 0x69, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x5f, 0x61,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x52, 0x21, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x41, 0x70, 0x69, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x22, 0xcb, 0x01, 0x0a, 0x2d, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41,
	0x70, 0x69, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x70, 0x6c,
	0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x12, 0x81, 0x01, 0x0a, 0x22, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x5f, 0x61, 0x70, 0x69, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x5f,
	0x72, 0x61, 0x74, 0x65, 0x70, 0x6c, 0x61, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x52, 0x61, 0x74, 0x65, 0x50,
	0x6c, 0x61, 0x6e, 0x52, 0x20, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x41, 0x70, 0x69, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x61, 0x74,
	0x65, 0x70, 0x6c, 0x61, 0x6e, 0x22, 0x43, 0x0a, 0x2d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x69, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x70, 0x6c, 0x61, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x40, 0x0a, 0x2a, 0x47, 0x65,
	0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70,
	0x69, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x70, 0x6c, 0x61,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xc2, 0x01, 0x0a,
	0x2c, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x41, 0x70, 0x69, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x61, 0x74,
	0x65, 0x70, 0x6c, 0x61, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x22, 0xc7, 0x01, 0x0a, 0x2d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x69, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x70, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x81, 0x01, 0x0a, 0x22, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x61, 0x70, 0x69, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x73, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x70, 0x6c, 0x61, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56,
	0x31, 0x52, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x20, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x69, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x70, 0x6c, 0x61, 0x6e, 0x22, 0xd7, 0x01, 0x0a, 0x1d,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x41, 0x70, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x12, 0x56, 0x0a,
	0x11, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x61,
	0x70, 0x69, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x41, 0x70, 0x69, 0x48, 0x74, 0x74, 0x70, 0x42,
	0x6f, 0x64, 0x79, 0x52, 0x10, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x41, 0x70, 0x69, 0x22, 0x33, 0x0a, 0x1d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x69, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x30, 0x0a, 0x1a, 0x47, 0x65,
	0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70,
	0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x8f, 0x01, 0x0a,
	0x1c, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x41, 0x70, 0x69, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a,
	0x11, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2b, 0x0a, 0x11, 0x69, 0x6e, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x5f, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x52, 0x65, 0x76,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x22, 0xb5,
	0x01, 0x0a, 0x1c, 0x50, 0x61, 0x74, 0x63, 0x68, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61,
	0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4d, 0x61, 0x73, 0x6b, 0x12, 0x60, 0x0a, 0x11, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x61, 0x70, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x33, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x70, 0x69, 0x50,
	0x72, 0x6f, 0x78, 0x79, 0x52, 0x10, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x41, 0x70, 0x69, 0x22, 0x41, 0x0a, 0x27, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x69, 0x73, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x22, 0xc1, 0x01, 0x0a, 0x29, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x41, 0x70, 0x69, 0x73, 0x4b, 0x65, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x6d, 0x61, 0x70,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12,
	0x7c, 0x0a, 0x1e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x5f, 0x61, 0x70, 0x69, 0x73, 0x5f, 0x6b, 0x65, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x6d, 0x61,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x56, 0x31, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4d, 0x61, 0x70, 0x52,
	0x1c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70,
	0x69, 0x73, 0x4b, 0x65, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x6d, 0x61, 0x70, 0x22, 0x3f, 0x0a,
	0x29, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x69, 0x73, 0x4b, 0x65, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x6d, 0x61, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xd7,
	0x01, 0x0a, 0x2f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x69, 0x73, 0x4b, 0x65, 0x79, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x6d, 0x61, 0x70, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x8b, 0x01, 0x0a, 0x25, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x61, 0x70, 0x69,
	0x73, 0x5f, 0x6b, 0x65, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x6d, 0x61, 0x70, 0x73, 0x5f, 0x65,
	0x6e, 0x74, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x22, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x41, 0x70, 0x69, 0x73, 0x4b, 0x65, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x6d,
	0x61, 0x70, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x45, 0x0a, 0x2f, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41,
	0x70, 0x69, 0x73, 0x4b, 0x65, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x6d, 0x61, 0x70, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x42, 0x0a, 0x2c, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x41, 0x70, 0x69, 0x73, 0x4b, 0x65, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x6d,
	0x61, 0x70, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x85, 0x01, 0x0a, 0x2f, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x69, 0x73, 0x4b, 0x65, 0x79,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x6d, 0x61, 0x70, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x22, 0xd3, 0x01, 0x0a, 0x2f,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x41, 0x70, 0x69, 0x73, 0x4b, 0x65, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x6d,
	0x61, 0x70, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x8b, 0x01, 0x0a, 0x25, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x61, 0x70, 0x69, 0x73, 0x5f, 0x6b, 0x65, 0x79, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x6d, 0x61, 0x70, 0x73, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31,
	0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x22, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x69, 0x73,
	0x4b, 0x65, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x6d, 0x61, 0x70, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x22, 0x3c, 0x0a, 0x26, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x69, 0x73, 0x52, 0x65, 0x76, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x51, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x41, 0x70, 0x69, 0x73, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0xd3, 0x01, 0x0a, 0x36, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x69,
	0x50, 0x72, 0x6f, 0x78, 0x79, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x69, 0x73, 0x52, 0x65,
	0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x12, 0x69, 0x0a,
	0x1b, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x61,
	0x70, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x41, 0x70, 0x69, 0x48, 0x74, 0x74, 0x70, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x19, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x69, 0x73,
	0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x4a, 0x0a, 0x30, 0x4c, 0x69, 0x73, 0x74,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x69,
	0x73, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x22, 0xa8, 0x01, 0x0a, 0x22, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x70, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x12, 0x6a, 0x0a, 0x16, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31,
	0x41, 0x70, 0x70, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x15, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x70, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x22,
	0x38, 0x0a, 0x22, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x70, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x35, 0x0a, 0x1f, 0x47, 0x65, 0x74,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x70,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x8f, 0x01, 0x0a, 0x21, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x70, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x22, 0xbc, 0x01, 0x0a, 0x22, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x70, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x6a, 0x0a, 0x16, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x56, 0x31, 0x41, 0x70, 0x70, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x15, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x70, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x22, 0xb8, 0x01, 0x0a, 0x26, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x70, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x12, 0x76, 0x0a, 0x1b, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x5f,
	0x61, 0x70, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x70, 0x70, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70,
	0x70, 0x52, 0x19, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x41, 0x70, 0x70, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x41, 0x70, 0x70, 0x22, 0x3c, 0x0a, 0x26,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x41, 0x70, 0x70, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x41, 0x70, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x39, 0x0a, 0x23, 0x47, 0x65,
	0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70,
	0x70, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x7b, 0x0a, 0x25, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x70, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x41, 0x70, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x22, 0xcc, 0x01, 0x0a, 0x26, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x70, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x76, 0x0a, 0x1b, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x70, 0x70, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x52, 0x19, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x70, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x41, 0x70,
	0x70, 0x22, 0xc9, 0x01, 0x0a, 0x2a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x70, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x41, 0x70, 0x70, 0x73, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x82, 0x01, 0x0a, 0x20, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x73, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31,
	0x41, 0x70, 0x70, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x52, 0x1d,
	0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x70,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x41, 0x70, 0x70, 0x73, 0x4b, 0x65, 0x79, 0x22, 0x40, 0x0a,
	0x2a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x70, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x41, 0x70, 0x70,
	0x73, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x3d, 0x0a, 0x27, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x41, 0x70, 0x70, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x41, 0x70, 0x70, 0x73,
	0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xe0,
	0x01, 0x0a, 0x38, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x41, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x70, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x41, 0x70, 0x70,
	0x73, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x8f, 0x01, 0x0a, 0x20, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x5f, 0x61, 0x70, 0x70, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x73,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x46, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x1d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x41, 0x70, 0x70, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x41, 0x70, 0x70, 0x73, 0x4b, 0x65,
	0x79, 0x22, 0x4b, 0x0a, 0x35, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x70, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x41, 0x70, 0x70, 0x73, 0x4b, 0x65, 0x79, 0x73, 0x41, 0x70, 0x69, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x7b,
	0x0a, 0x4d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x41, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x41, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x70,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x41, 0x70, 0x70, 0x73, 0x4b, 0x65, 0x79, 0x73, 0x41, 0x70,
	0x69, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x30, 0x0a, 0x1a, 0x47,
	0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41,
	0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xfa, 0x02,
	0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x41, 0x70, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x70, 0x70, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x70,
	0x61, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x78, 0x70, 0x61, 0x6e,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x69,
	0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0b, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x43, 0x72, 0x65, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x6b, 0x65, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6b, 0x65, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x72, 0x6f, 0x77, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4b,
	0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xe8, 0x01, 0x0a, 0x27, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x44, 0x61, 0x74, 0x61, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x79, 0x0a, 0x1b, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x38, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x44, 0x61, 0x74, 0x61,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x1a, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x61, 0x74, 0x61, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x22, 0x3d, 0x0a, 0x27, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x61, 0x74, 0x61,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3a, 0x0a, 0x24, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x61, 0x74, 0x61, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x7c, 0x0a, 0x26, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x61, 0x74, 0x61, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67,
	0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x22, 0xd8,
	0x01, 0x0a, 0x26, 0x50, 0x61, 0x74, 0x63, 0x68, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x61, 0x74, 0x61, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x73, 0x6b, 0x12, 0x79,
	0x0a, 0x1b, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31,
	0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x1a, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x61, 0x74, 0x61,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x22, 0x60, 0x0a, 0x23, 0x4c, 0x69, 0x73,
	0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x64, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x46, 0x6c, 0x6f, 0x77, 0x73, 0x22, 0xb1, 0x01, 0x0a, 0x27,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12,
	0x6e, 0x0a, 0x17, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x5f, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x35, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x16, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x22,
	0xac, 0x01, 0x0a, 0x23, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12,
	0x6d, 0x0a, 0x17, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x5f, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x34, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x44, 0x65, 0x76,
	0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x52, 0x16, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x22, 0x39,
	0x0a, 0x23, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x4e, 0x0a, 0x20, 0x47, 0x65, 0x74,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76,
	0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3d, 0x0a, 0x27, 0x47, 0x65, 0x74,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x48, 0x0a, 0x32, 0x47, 0x65, 0x74, 0x4d,
	0x6f, 0x6e, 0x65, 0x74, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65,
	0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0xd4, 0x01, 0x0a, 0x22, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x70, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x70, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x65, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x69,
	0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x22, 0x5d, 0x0a, 0x2f, 0x53, 0x65, 0x74,
	0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65,
	0x6c, 0x6f, 0x70, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xa8, 0x01, 0x0a, 0x23, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x6d, 0x0a, 0x17, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x56, 0x31, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x52, 0x16, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f,
	0x70, 0x65, 0x72, 0x22, 0xcc, 0x01, 0x0a, 0x35, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f,
	0x6e, 0x65, 0x74, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76,
	0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x7f, 0x0a, 0x17, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x46, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x44,
	0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x4d, 0x6f, 0x6e, 0x65, 0x74, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x16, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70,
	0x65, 0x72, 0x22, 0xba, 0x01, 0x0a, 0x2b, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65,
	0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x77, 0x0a, 0x1c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65,
	0x72, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x52, 0x1a, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x41, 0x70, 0x70, 0x22,
	0xbc, 0x01, 0x0a, 0x27, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72,
	0x73, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x12, 0x79, 0x0a, 0x1c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x5f,
	0x61, 0x70, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x41,
	0x70, 0x70, 0x52, 0x1a, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x41, 0x70, 0x70, 0x22, 0x3d,
	0x0a, 0x27, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x41,
	0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xf3, 0x01,
	0x0a, 0x4a, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x50, 0x61, 0x69,
	0x72, 0x4f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70,
	0x65, 0x72, 0x41, 0x70, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65,
	0x72, 0x73, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x79, 0x0a, 0x1c, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f,
	0x70, 0x65, 0x72, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x44, 0x65, 0x76, 0x65, 0x6c,
	0x6f, 0x70, 0x65, 0x72, 0x41, 0x70, 0x70, 0x52, 0x1a, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73,
	0x41, 0x70, 0x70, 0x22, 0x68, 0x0a, 0x24, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72,
	0x73, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0xb2, 0x01,
	0x0a, 0x26, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x41, 0x70, 0x70,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x65, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x65, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x25,
	0x0a, 0x0e, 0x73, 0x68, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x65, 0x78, 0x70, 0x61, 0x6e, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x73, 0x68, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x45,
	0x78, 0x70, 0x61, 0x6e, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4b,
	0x65, 0x79, 0x22, 0xb8, 0x01, 0x0a, 0x27, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f,
	0x70, 0x65, 0x72, 0x73, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x79, 0x0a, 0x1c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x5f, 0x61,
	0x70, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x56, 0x31, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x41, 0x70,
	0x70, 0x52, 0x1a, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x41, 0x70, 0x70, 0x22, 0x47, 0x0a,
	0x31, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x41, 0x70,
	0x70, 0x73, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x44, 0x0a, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f,
	0x70, 0x65, 0x72, 0x73, 0x41, 0x70, 0x70, 0x73, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x4a, 0x0a, 0x30,
	0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x41, 0x70, 0x70, 0x73, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x22, 0xea, 0x01, 0x0a, 0x46, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x41, 0x70, 0x70, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x41,
	0x70, 0x70, 0x73, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x8b, 0x01, 0x0a, 0x27, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f,
	0x70, 0x65, 0x72, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x73, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52,
	0x24, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65,
	0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x41, 0x70, 0x70, 0x73, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x22, 0xcd, 0x01, 0x0a, 0x2b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76,
	0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x41, 0x70, 0x70, 0x73, 0x4b, 0x65, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x85, 0x01,
	0x0a, 0x21, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f,
	0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x73, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x41,
	0x70, 0x70, 0x4b, 0x65, 0x79, 0x52, 0x1e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x41, 0x70,
	0x70, 0x73, 0x4b, 0x65, 0x79, 0x22, 0x41, 0x0a, 0x2b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65,
	0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x41, 0x70, 0x70, 0x73, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3e, 0x0a, 0x28, 0x47, 0x65, 0x74, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65,
	0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x41, 0x70, 0x70, 0x73, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xd9, 0x01, 0x0a, 0x3b, 0x52, 0x65, 0x70,
	0x6c, 0x61, 0x63, 0x65, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x41, 0x70, 0x70,
	0x4b, 0x65, 0x79, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x41, 0x70, 0x70, 0x73, 0x4b, 0x65,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x85, 0x01, 0x0a,
	0x21, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x64,
	0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x73, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x56, 0x31, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x41, 0x70,
	0x70, 0x4b, 0x65, 0x79, 0x52, 0x1e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x41, 0x70, 0x70,
	0x73, 0x4b, 0x65, 0x79, 0x22, 0xf0, 0x01, 0x0a, 0x3a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44,
	0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x41, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c,
	0x6f, 0x70, 0x65, 0x72, 0x73, 0x41, 0x70, 0x70, 0x73, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x85, 0x01, 0x0a, 0x21, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x5f, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x5f, 0x61, 0x70, 0x70,
	0x73, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65,
	0x72, 0x41, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x52, 0x1e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73,
	0x41, 0x70, 0x70, 0x73, 0x4b, 0x65, 0x79, 0x22, 0x4c, 0x0a, 0x36, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65,
	0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x41, 0x70, 0x70, 0x73, 0x4b, 0x65, 0x79, 0x73,
	0x41, 0x70, 0x69, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x7d, 0x0a, 0x4f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44,
	0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x41, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x41, 0x70,
	0x69, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x41,
	0x70, 0x70, 0x73, 0x4b, 0x65, 0x79, 0x73, 0x41, 0x70, 0x69, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0xe3, 0x01, 0x0a, 0x32, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65,
	0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x41, 0x70, 0x70, 0x73, 0x4b, 0x65, 0x79, 0x73, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x12, 0x94, 0x01, 0x0a, 0x29, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73,
	0x5f, 0x61, 0x70, 0x70, 0x73, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x56, 0x31, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x41, 0x70, 0x70,
	0x4b, 0x65, 0x79, 0x52, 0x25, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x41, 0x70, 0x70, 0x73,
	0x4b, 0x65, 0x79, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x22, 0x43, 0x0a, 0x2d, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x40, 0x0a, 0x2a, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x46, 0x0a, 0x2c, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x22, 0xda, 0x01, 0x0a, 0x3f, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x82, 0x01, 0x0a, 0x22, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x5f, 0x61,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x52, 0x20, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x22, 0xd6, 0x01, 0x0a, 0x2b, 0x41, 0x64, 0x6a, 0x75, 0x73,
	0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65,
	0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x92, 0x01, 0x0a, 0x20, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x64, 0x65, 0x76,
	0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x48, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x56, 0x31, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65,
	0x72, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x1e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65,
	0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22,
	0xd6, 0x01, 0x0a, 0x2b, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72,
	0x73, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x92, 0x01, 0x0a, 0x20, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73,
	0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x48,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x43, 0x72, 0x65, 0x64, 0x69,
	0x74, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x1e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72,
	0x73, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22, 0xe1, 0x01, 0x0a, 0x30, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x94, 0x01, 0x0a, 0x25, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65,
	0x72, 0x73, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x56, 0x31, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x23, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xea, 0x01, 0x0a,
	0x30, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0xa1, 0x01, 0x0a, 0x25, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65,
	0x72, 0x73, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x56, 0x31, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65,
	0x72, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x23, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x43, 0x0a, 0x2d, 0x47, 0x65, 0x74,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76,
	0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x7c,
	0x0a, 0x2f, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x22, 0x88, 0x02, 0x0a,
	0x2c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a,
	0x16, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x65,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x89, 0x01, 0x0a, 0x21,
	0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x65, 0x6e,
	0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x56, 0x31, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x1f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x42, 0x0a, 0x2c, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e,
	0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3f, 0x0a, 0x29, 0x47,
	0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x81, 0x01, 0x0a,
	0x2b, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x22, 0xc4, 0x01, 0x0a, 0x22, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x12, 0x72, 0x0a, 0x16, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x65, 0x6e, 0x76, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31,
	0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x15, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45,
	0x6e, 0x76, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x38, 0x0a, 0x22, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e,
	0x76, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x35, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x5e, 0x0a, 0x34, 0x47, 0x65, 0x74, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x45, 0x6e, 0x76, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x22, 0x77, 0x0a, 0x21, 0x4c, 0x69, 0x73, 0x74,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x22, 0xcc, 0x01, 0x0a, 0x21, 0x50, 0x61, 0x74, 0x63, 0x68, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x73, 0x6b, 0x12, 0x72, 0x0a, 0x16,
	0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x65, 0x6e,
	0x76, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x15, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x22, 0xdd, 0x01, 0x0a, 0x2d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x93, 0x01, 0x0a, 0x22, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x65, 0x6e, 0x76,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x5f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x56, 0x31, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x20,
	0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74,
	0x22, 0x43, 0x0a, 0x2d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x40, 0x0a, 0x2a, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x82, 0x01, 0x0a, 0x2c, 0x4c, 0x69, 0x73, 0x74,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x22, 0xc8, 0x01, 0x0a,
	0x25, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x12, 0x73, 0x0a, 0x19, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x56, 0x31, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x18, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x3b, 0x0a, 0x25, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0x38, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x44,
	0x0a, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x64, 0x64, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0x50, 0x0a, 0x3a, 0x47, 0x65, 0x74, 0x41, 0x70, 0x69, 0x53, 0x65,
	0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x41, 0x0a, 0x2b, 0x47, 0x65, 0x74, 0x44, 0x65, 0x62,
	0x75, 0x67, 0x6d, 0x61, 0x73, 0x6b, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x46, 0x0a, 0x30, 0x47, 0x65, 0x74,
	0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x4d, 0x0a, 0x37, 0x47, 0x65, 0x74, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x43, 0x0a, 0x2d, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xdc, 0x01, 0x0a, 0x30, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79,
	0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x73, 0x6b, 0x12,
	0x73, 0x0a, 0x19, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x36, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x45,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x18, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x22, 0x42, 0x0a, 0x28, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x22, 0xba, 0x01, 0x0a, 0x2a, 0x55, 0x6e, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12,
	0x74, 0x0a, 0x19, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x37, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x18, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0xb0, 0x01, 0x0a, 0x25, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x73, 0x0a, 0x19, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x56, 0x31, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x18,
	0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x90, 0x02, 0x0a, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x44, 0x65, 0x62, 0x75, 0x67, 0x6d, 0x61, 0x73, 0x6b, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x36, 0x0a, 0x17, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x70, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x15, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x73, 0x6b, 0x12, 0x71, 0x0a, 0x19, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x44, 0x65, 0x62, 0x75, 0x67, 0x4d, 0x61, 0x73,
	0x6b, 0x52, 0x18, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0xbb, 0x01, 0x0a, 0x30,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x73, 0x0a, 0x19, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x56, 0x31, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x18, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0xf0, 0x01, 0x0a, 0x3a, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x73, 0x6b, 0x12, 0x7d, 0x0a,
	0x19, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x65,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x40, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x53, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x18, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0xdc, 0x01, 0x0a,
	0x30, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x6d, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4d, 0x61, 0x73, 0x6b, 0x12, 0x73, 0x0a, 0x19, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x54, 0x72, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x18, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0xf4, 0x01, 0x0a, 0x3e,
	0x53, 0x65, 0x74, 0x41, 0x64, 0x64, 0x6f, 0x6e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x41, 0x64, 0x64, 0x6f, 0x6e,
	0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x9d, 0x01, 0x0a, 0x28, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x5f, 0x61, 0x64, 0x64, 0x6f, 0x6e, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x56, 0x31, 0x53, 0x65, 0x74, 0x41, 0x64, 0x64, 0x6f, 0x6e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x25, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x41, 0x64, 0x64, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x22, 0x88, 0x01, 0x0a, 0x39, 0x47, 0x65, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x76, 0x32, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x41, 0x6e, 0x61, 0x6c, 0x79,
	0x74, 0x69, 0x63, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x23, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x61, 0x63, 0x68,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xe9, 0x01,
	0x0a, 0x35, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12,
	0x97, 0x01, 0x0a, 0x2b, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x61,
	0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x56, 0x31, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x28, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x74,
	0x69, 0x63, 0x73, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x48, 0x0a, 0x32, 0x47, 0x65, 0x74,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69,
	0x63, 0x73, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x4e, 0x0a, 0x34, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x45, 0x78, 0x70,
	0x6f, 0x72, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x22, 0x4d, 0x0a, 0x33, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x41, 0x70, 0x69, 0x73, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x22, 0xba, 0x01, 0x0a, 0x32, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x41, 0x70, 0x69, 0x73, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x73, 0x65, 0x71,
	0x75, 0x65, 0x6e, 0x63, 0x65, 0x64, 0x5f, 0x72, 0x6f, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x64, 0x52,
	0x6f, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x50, 0x0a, 0x3a, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x41, 0x70, 0x69, 0x73, 0x52, 0x65,
	0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x77, 0x0a, 0x34, 0x55, 0x6e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x41, 0x70, 0x69, 0x73, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a,
	0x11, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x64, 0x5f, 0x72, 0x6f, 0x6c, 0x6c, 0x6f,
	0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e,
	0x63, 0x65, 0x64, 0x52, 0x6f, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x22, 0xa1, 0x02, 0x0a, 0x3f, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x41, 0x70,
	0x69, 0x73, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x62, 0x75, 0x67,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x12, 0xab, 0x01, 0x0a, 0x36, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f,
	0x61, 0x70, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x64,
	0x65, 0x62, 0x75, 0x67, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x37, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x44, 0x65,
	0x62, 0x75, 0x67, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x32, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x41, 0x70, 0x69, 0x73, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x44, 0x65, 0x62, 0x75, 0x67, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x59,
	0x0a, 0x43, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x41, 0x70, 0x69, 0x73, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x44, 0x65, 0x62, 0x75, 0x67, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x52, 0x0a, 0x3c, 0x47, 0x65, 0x74,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x41, 0x70, 0x69, 0x73, 0x52, 0x65, 0x76,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x62, 0x75, 0x67, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x94, 0x01,
	0x0a, 0x3e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x41,
	0x70, 0x69, 0x73, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x62, 0x75,
	0x67, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x22, 0x57, 0x0a, 0x41, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x41, 0x70, 0x69, 0x73, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x44, 0x65, 0x62, 0x75, 0x67, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x83, 0x01,
	0x0a, 0x51, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x41, 0x70, 0x69, 0x73, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x76, 0x65, 0x72, 0x72,
	0x69, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6f, 0x76, 0x65, 0x72, 0x72,
	0x69, 0x64, 0x65, 0x22, 0x69, 0x0a, 0x53, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x55,
	0x6e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x41, 0x70, 0x69, 0x73,
	0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xf3,
	0x01, 0x0a, 0x37, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x12, 0x9f, 0x01, 0x0a, 0x2d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x5f, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x5f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x44, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x2a, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x22, 0x4d, 0x0a, 0x37, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x44, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x85, 0x02, 0x0a, 0x44, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0xa8, 0x01, 0x0a, 0x2d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f,
	0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x5f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x56, 0x31, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x77,
	0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x2a, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x85, 0x02, 0x0a, 0x42,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72,
	0x6c, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0xa6, 0x01, 0x0a, 0x2d, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x65, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x5f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x43, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x2a, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x22, 0x4a, 0x0a, 0x34, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0xa4, 0x01, 0x0a, 0x36, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x22, 0x8f, 0x02, 0x0a, 0x36, 0x50, 0x61, 0x74, 0x63, 0x68,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65,
	0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x6d, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4d, 0x61, 0x73, 0x6b, 0x12, 0x9f, 0x01, 0x0a, 0x2d, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x5f, 0x64, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x72, 0x63, 0x68, 0x69,
	0x76, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x2a, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x44, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x41, 0x0a, 0x2b, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x43, 0x61, 0x63, 0x68, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x6c, 0x0a, 0x2f, 0x4c,
	0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x44, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64,
	0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x64, 0x46, 0x6c, 0x6f, 0x77, 0x73, 0x22, 0xde, 0x01, 0x0a, 0x42, 0x41, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x46, 0x6c, 0x6f, 0x77, 0x54, 0x6f,
	0x46, 0x6c, 0x6f, 0x77, 0x48, 0x6f, 0x6f, 0x6b, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x46, 0x6c, 0x6f, 0x77, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x83, 0x01, 0x0a, 0x23, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x68, 0x6f, 0x6f, 0x6b, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x33, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x46,
	0x6c, 0x6f, 0x77, 0x48, 0x6f, 0x6f, 0x6b, 0x52, 0x21, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x68, 0x6f, 0x6f, 0x6b, 0x22, 0x5a, 0x0a, 0x44, 0x44, 0x65,
	0x74, 0x61, 0x63, 0x68, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x46, 0x6c, 0x6f, 0x77, 0x46, 0x72,
	0x6f, 0x6d, 0x46, 0x6c, 0x6f, 0x77, 0x48, 0x6f, 0x6f, 0x6b, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x41, 0x0a, 0x2b, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xe2, 0x01, 0x0a, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4b, 0x65, 0x79,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x83, 0x01, 0x0a, 0x23, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x56, 0x31, 0x4b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x21, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x22, 0x44,
	0x0a, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x4b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0x41, 0x0a, 0x2b, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x4b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x9b, 0x03, 0x0a, 0x35, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4b, 0x65, 0x79, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x73, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61,
	0x6c, 0x69, 0x61, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x38, 0x0a, 0x18,
	0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x5f, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16,
	0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x45, 0x78, 0x70, 0x69, 0x72, 0x79, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3a, 0x0a, 0x19, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65,
	0x5f, 0x6e, 0x65, 0x77, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x69, 0x67, 0x6e, 0x6f, 0x72,
	0x65, 0x4e, 0x65, 0x77, 0x6c, 0x69, 0x6e, 0x65, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x88, 0x01, 0x0a, 0x2b, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x65, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x73, 0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x41, 0x70, 0x69, 0x48, 0x74, 0x74, 0x70, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x28, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x41,
	0x6c, 0x69, 0x61, 0x73, 0x65, 0x22, 0x48, 0x0a, 0x32, 0x43, 0x73, 0x72, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x41, 0x6c,
	0x69, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x4b, 0x0a, 0x35, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x4b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x41, 0x6c, 0x69, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x48, 0x0a, 0x32,
	0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4b, 0x65, 0x79, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x73, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x53, 0x0a, 0x3d, 0x47, 0x65, 0x74, 0x43, 0x65, 0x72,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x4b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xcc, 0x02, 0x0a, 0x35,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4b,
	0x65, 0x79, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x18, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x5f,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x45,
	0x78, 0x70, 0x69, 0x72, 0x79, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x3a, 0x0a, 0x19, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x5f, 0x6e, 0x65, 0x77, 0x6c, 0x69, 0x6e,
	0x65, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x17, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x4e, 0x65, 0x77, 0x6c, 0x69, 0x6e,
	0x65, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x88, 0x01, 0x0a, 0x2b, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x6b,
	0x65, 0x79, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x41, 0x70, 0x69, 0x48, 0x74, 0x74, 0x70, 0x42, 0x6f, 0x64, 0x79,
	0x52, 0x28, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4b, 0x65, 0x79, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x73, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x65, 0x22, 0xda, 0x01, 0x0a, 0x31, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4b, 0x65,
	0x79, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x6d, 0x61, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x8c, 0x01, 0x0a, 0x26, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x6b, 0x65, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x6d, 0x61, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4d, 0x61,
	0x70, 0x52, 0x24, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4b, 0x65, 0x79, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x6d, 0x61, 0x70, 0x22, 0x47, 0x0a, 0x31, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4b, 0x65, 0x79, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x6d, 0x61, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0xef, 0x01, 0x0a, 0x37, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x4b, 0x65, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x6d, 0x61, 0x70, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x12, 0x9b, 0x01, 0x0a, 0x2d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x5f, 0x6b, 0x65, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x6d, 0x61, 0x70, 0x73,
	0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x2a, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x4b, 0x65, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x6d, 0x61, 0x70, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x22, 0x4d, 0x0a, 0x37, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4b, 0x65, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x6d, 0x61, 0x70,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x4a, 0x0a, 0x34, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x4b, 0x65, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x6d, 0x61, 0x70, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x8d, 0x01,
	0x0a, 0x37, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4b,
	0x65, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x6d, 0x61, 0x70, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x69,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x22, 0xeb, 0x01,
	0x0a, 0x37, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x4b, 0x65, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x6d, 0x61, 0x70, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x9b, 0x01,
	0x0a, 0x2d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f,
	0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x6b, 0x65, 0x79,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x6d, 0x61, 0x70, 0x73, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x56, 0x31, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x2a, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4b, 0x65, 0x79, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x6d, 0x61, 0x70, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x22, 0xc0, 0x03, 0x0a, 0x30,
	0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4f, 0x70, 0x74, 0x69,
	0x6d, 0x69, 0x7a, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x61, 0x63, 0x63, 0x75, 0x72, 0x61, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x61, 0x63, 0x63, 0x75, 0x72, 0x61, 0x63, 0x79, 0x12, 0x1b, 0x0a, 0x09,
	0x61, 0x67, 0x67, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x61, 0x67, 0x67, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x6f, 0x6e, 0x61, 0x72,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x73, 0x6f, 0x6e, 0x61, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6f, 0x72,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x62, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x62, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x69, 0x6d,
	0x65, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x6d,
	0x65, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x6f, 0x70, 0x6b, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x6f, 0x70, 0x6b, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x73, 0x5f,
	0x61, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0b, 0x74, 0x73, 0x41, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x10, 0x0a, 0x03,
	0x74, 0x7a, 0x6f, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x7a, 0x6f, 0x22, 0xc1,
	0x01, 0x0a, 0x2b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x7a, 0x0a, 0x20, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x30, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x52, 0x1e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x22, 0x3e, 0x0a, 0x28, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0x44, 0x0a, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x47, 0x0a, 0x31, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x75, 0x72, 0x6c, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0xfd, 0x01, 0x0a, 0x2b, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x51, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x66,
	0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12,
	0x3d, 0x0a, 0x1b, 0x69, 0x6e, 0x63, 0x6c, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x5f,
	0x77, 0x69, 0x74, 0x68, 0x6f, 0x75, 0x74, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x69, 0x6e, 0x63, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x69, 0x65,
	0x73, 0x57, 0x69, 0x74, 0x68, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x21,
	0x0a, 0x0c, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x42,
	0x79, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74,
	0x6f, 0x22, 0xd2, 0x01, 0x0a, 0x2f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x86, 0x01,
	0x0a, 0x24, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f,
	0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x52, 0x22, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x22, 0x45, 0x0a, 0x2f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x42, 0x0a,
	0x2c, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0xce, 0x01, 0x0a, 0x2f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x86, 0x01, 0x0a, 0x24, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x65, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x56, 0x31, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x22,
	0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x22, 0xf8, 0x01, 0x0a, 0x32, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x66, 0x69,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x81, 0x01, 0x0a, 0x27, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x65, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x41, 0x70, 0x69, 0x48, 0x74,
	0x74, 0x70, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x25, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x74, 0x0a,
	0x32, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x22, 0x71, 0x0a, 0x2f, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x66, 0x69, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x5f, 0x0a, 0x31, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x66,
	0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x72, 0x0a, 0x44, 0x4c, 0x69, 0x73, 0x74, 0x45,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xf8, 0x01, 0x0a, 0x32,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x81, 0x01, 0x0a, 0x27, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x41, 0x70, 0x69, 0x48, 0x74, 0x74, 0x70, 0x42, 0x6f, 0x64, 0x79, 0x52,
	0x25, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x95, 0x02, 0x0a, 0x34, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69,
	0x74, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x65, 0x63, 0x75, 0x72,
	0x69, 0x74, 0x79, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x96, 0x01, 0x0a, 0x2a, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x5f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x27, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xf2,
	0x01, 0x0a, 0x35, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0xa4, 0x01, 0x0a,
	0x2a, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x65,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x73, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x47, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x44, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x27, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0xf0, 0x01, 0x0a, 0x34, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0xa3, 0x01, 0x0a, 0x2a, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f,
	0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x46, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x56, 0x31, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x27, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x47, 0x0a, 0x31, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0xa1, 0x01, 0x0a, 0x33, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x22, 0x87, 0x02, 0x0a, 0x3b, 0x42, 0x61, 0x74, 0x63, 0x68, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0xaf, 0x01, 0x0a, 0x2c,
	0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x65, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x73, 0x65, 0x63, 0x75, 0x72,
	0x69, 0x74, 0x79, 0x5f, 0x69, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x4e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69,
	0x74, 0x79, 0x49, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x29, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x22, 0x49, 0x0a,
	0x33, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xa3, 0x01, 0x0a, 0x35, 0x4c, 0x69, 0x73,
	0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69,
	0x74, 0x79, 0x49, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67,
	0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x22, 0x8b,
	0x02, 0x0a, 0x35, 0x50, 0x61, 0x74, 0x63, 0x68, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x73, 0x6b, 0x12, 0x9c, 0x01,
	0x0a, 0x2c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f,
	0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x73, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56,
	0x31, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x52, 0x29, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x22, 0xec, 0x01, 0x0a,
	0x34, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x9b, 0x01,
	0x0a, 0x2a, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f,
	0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x73, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x53,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x52, 0x27, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x47, 0x0a, 0x31, 0x47,
	0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x63, 0x75, 0x72,
	0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0x4d, 0x0a, 0x37, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69,
	0x74, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x51, 0x0a, 0x3b, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x56, 0x69, 0x65, 0x77, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x82, 0x02, 0x0a, 0x33, 0x4c, 0x69, 0x73, 0x74, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x6d,
	0x69, 0x74, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x74,
	0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x22, 0xf6, 0x01, 0x0a, 0x3d,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69,
	0x74, 0x79, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x6f, 0x72, 0x67, 0x65, 0x6e, 0x76, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f,
	0x72, 0x67, 0x65, 0x6e, 0x76, 0x12, 0x9c, 0x01, 0x0a, 0x28, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x5f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x56, 0x31, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x61, 0x62, 0x75, 0x6c, 0x61,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x25, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x53, 0x74, 0x61, 0x74, 0x22, 0xfc, 0x01, 0x0a, 0x40, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x69,
	0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x53, 0x74, 0x61, 0x74, 0x73, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x53, 0x74,
	0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x72, 0x67,
	0x65, 0x6e, 0x76, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x72, 0x67, 0x65, 0x6e,
	0x76, 0x12, 0x9f, 0x01, 0x0a, 0x28, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x5f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x46, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56,
	0x31, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x25, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x53,
	0x74, 0x61, 0x74, 0x22, 0x54, 0x0a, 0x3a, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x22, 0x94, 0x01, 0x0a, 0x39, 0x44, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x64, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6f,
	0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6f,
	0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x57, 0x0a, 0x41, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x64, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x51, 0x0a, 0x3b, 0x55, 0x6e, 0x64,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x64, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xb7, 0x03, 0x0a,
	0x27, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x74, 0x61,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x63, 0x63, 0x75,
	0x72, 0x61, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x63, 0x63, 0x75,
	0x72, 0x61, 0x63, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x67, 0x67, 0x5f, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x67, 0x67, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x72,
	0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72,
	0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x6f, 0x6e, 0x61, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x73, 0x6f, 0x6e, 0x61, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x72,
	0x74, 0x62, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x62,
	0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x6f, 0x70, 0x6b, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x6f, 0x70,
	0x6b, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x73, 0x5f, 0x61, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x74, 0x73, 0x41, 0x73, 0x63, 0x65, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x7a, 0x6f, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x74, 0x7a, 0x6f, 0x22, 0xf2, 0x01, 0x0a, 0x32, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x8f, 0x01, 0x0a, 0x27, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x65, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x52, 0x25, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x22, 0x48, 0x0a, 0x32, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x45, 0x0a, 0x2f, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xda, 0x01, 0x0a,
	0x32, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x8f, 0x01, 0x0a, 0x27, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x52, 0x25, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x22, 0xfc, 0x01, 0x0a, 0x39, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x54, 0x72, 0x61,
	0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12,
	0xa6, 0x01, 0x0a, 0x30, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x74,
	0x72, 0x61, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x6f, 0x76, 0x65, 0x72,
	0x72, 0x69, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x54, 0x72, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x52, 0x2c, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x54, 0x72, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x22, 0x4f, 0x0a, 0x39, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x54, 0x72, 0x61, 0x63, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x4c, 0x0a, 0x36, 0x47, 0x65, 0x74,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x54, 0x72, 0x61, 0x63, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x8e, 0x01, 0x0a, 0x38, 0x4c, 0x69, 0x73, 0x74,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x54, 0x72, 0x61, 0x63, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x22, 0x98, 0x02, 0x0a, 0x38, 0x50, 0x61, 0x74,
	0x63, 0x68, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x54, 0x72, 0x61, 0x63, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x73, 0x6b, 0x12, 0xa6, 0x01, 0x0a, 0x30, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x65, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x56, 0x31, 0x54, 0x72, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4f, 0x76, 0x65,
	0x72, 0x72, 0x69, 0x64, 0x65, 0x52, 0x2c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x54, 0x72, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4f, 0x76, 0x65, 0x72, 0x72,
	0x69, 0x64, 0x65, 0x22, 0xa9, 0x01, 0x0a, 0x23, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x6f, 0x73, 0x74, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x12, 0x6a, 0x0a, 0x18, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x56, 0x31, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x16, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x6f, 0x73, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x22,
	0x36, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x48, 0x6f, 0x73, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3c, 0x0a, 0x26, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x48, 0x6f, 0x73, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x40, 0x0a, 0x2a, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x56, 0x69, 0x65, 0x77, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x48, 0x6f, 0x73, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xa2, 0x02, 0x0a, 0x23, 0x4c, 0x69, 0x73, 0x74,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x6f, 0x73,
	0x74, 0x51, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x12, 0x2b, 0x0a, 0x11, 0x65, 0x6e, 0x76,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x65, 0x6e, 0x76, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x48, 0x6f,
	0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x3d, 0x0a, 0x1b, 0x69, 0x6e,
	0x63, 0x6c, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x6f,
	0x75, 0x74, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x18, 0x69, 0x6e, 0x63, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x57, 0x69, 0x74, 0x68,
	0x6f, 0x75, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x75, 0x62,
	0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x0e, 0x0a, 0x02,
	0x74, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x22, 0xd4, 0x01, 0x0a,
	0x2c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x8b, 0x01, 0x0a, 0x22, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x73, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x53,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x52, 0x1f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x22, 0x3f, 0x0a, 0x29, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x63, 0x75, 0x72,
	0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0x45, 0x0a, 0x2f, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x6f,
	0x73, 0x74, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x49, 0x0a, 0x33, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x56, 0x69, 0x65, 0x77, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xa7, 0x02, 0x0a, 0x2b, 0x4c, 0x69, 0x73, 0x74, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x6f, 0x73, 0x74,
	0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74,
	0x12, 0x2b, 0x0a, 0x11, 0x65, 0x6e, 0x76, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x68, 0x6f, 0x73,
	0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x65, 0x6e, 0x76,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x48, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f,
	0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x0a,
	0x0c, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x42, 0x79,
	0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f,
	0x22, 0xa9, 0x03, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x63, 0x63, 0x75, 0x72, 0x61, 0x63, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x63, 0x63, 0x75, 0x72, 0x61, 0x63, 0x79,
	0x12, 0x2b, 0x0a, 0x11, 0x65, 0x6e, 0x76, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x68, 0x6f, 0x73,
	0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x65, 0x6e, 0x76,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x48, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x74,
	0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x6f, 0x72, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x62, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x6f, 0x72, 0x74, 0x62, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x5f,
	0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x75,
	0x6e, 0x69, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x55,
	0x6e, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x6f, 0x70, 0x6b, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x6f, 0x70, 0x6b, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x73, 0x5f, 0x61, 0x73,
	0x63, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x74,
	0x73, 0x41, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x7a,
	0x6f, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x7a, 0x6f, 0x22, 0xa8, 0x01, 0x0a,
	0x22, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x6a, 0x0a, 0x16, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x52, 0x15, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x38, 0x0a, 0x22, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x35, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x77, 0x0a, 0x21, 0x4c, 0x69, 0x73, 0x74,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x22, 0xc4, 0x01, 0x0a, 0x21, 0x50, 0x61, 0x74, 0x63, 0x68, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x73, 0x6b, 0x12, 0x6a, 0x0a, 0x16,
	0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x52, 0x15, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x22, 0xc5, 0x01, 0x0a, 0x28, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x12, 0x7d, 0x0a, 0x16, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x46, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x15, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x22, 0xd5, 0x01, 0x0a, 0x2d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x73, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x8b, 0x01, 0x0a, 0x22, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x5f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x56, 0x31, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x20, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x41, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x43, 0x0a, 0x2d, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x40, 0x0a,
	0x2a, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x82, 0x01, 0x0a, 0x2c, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x41, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x22, 0xe5, 0x01, 0x0a, 0x33, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x73, 0x43, 0x61, 0x6e, 0x61, 0x72, 0x79, 0x65, 0x76, 0x61, 0x6c, 0x75,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x12, 0x95, 0x01, 0x0a, 0x28, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73,
	0x5f, 0x63, 0x61, 0x6e, 0x61, 0x72, 0x79, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x56, 0x31, 0x43, 0x61, 0x6e, 0x61, 0x72, 0x79, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x26, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x43, 0x61, 0x6e, 0x61,
	0x72, 0x79, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x46, 0x0a, 0x30,
	0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x43, 0x61, 0x6e, 0x61, 0x72, 0x79, 0x65,
	0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0xde, 0x01, 0x0a, 0x30, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x4e, 0x61, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x95, 0x01,
	0x0a, 0x24, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x5f, 0x6e, 0x61, 0x74, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x4e, 0x61, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x21, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x4e, 0x61, 0x74, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x65, 0x22, 0xd1, 0x01, 0x0a, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x4e, 0x61, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x12, 0x86, 0x01, 0x0a, 0x24, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x5f, 0x6e, 0x61, 0x74,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x35, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4e, 0x61, 0x74, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x21, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x4e, 0x61,
	0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x22, 0x44, 0x0a, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x4e, 0x61, 0x74, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x41, 0x0a, 0x2b, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x4e, 0x61, 0x74, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0x83, 0x01, 0x0a, 0x2d, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x73, 0x4e, 0x61, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x22, 0xb4, 0x01, 0x0a, 0x25, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x4b, 0x65, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x6d, 0x61, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x73, 0x0a, 0x19, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x6b, 0x65, 0x79, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x6d, 0x61, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x4d, 0x61, 0x70, 0x52, 0x18, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x4b, 0x65, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x6d, 0x61, 0x70, 0x22,
	0x3b, 0x0a, 0x25, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4b, 0x65, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x6d, 0x61,
	0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xca, 0x01, 0x0a,
	0x2b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x4b, 0x65, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x6d, 0x61, 0x70, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x12, 0x82, 0x01, 0x0a, 0x20, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x6b, 0x65, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x6d,
	0x61, 0x70, 0x73, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x38, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4b, 0x65, 0x79, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x1e, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4b, 0x65, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x6d, 0x61, 0x70, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x41, 0x0a, 0x2b, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x4b, 0x65, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x6d, 0x61, 0x70, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3e, 0x0a, 0x28,
	0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x4b, 0x65, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x6d, 0x61, 0x70, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x81, 0x01, 0x0a,
	0x2b, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x4b, 0x65, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x6d, 0x61, 0x70, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x22, 0xc6, 0x01, 0x0a, 0x2b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4b, 0x65, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x6d, 0x61, 0x70, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x82, 0x01, 0x0a, 0x20, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x6b, 0x65, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x6d,
	0x61, 0x70, 0x73, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x38, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4b, 0x65, 0x79, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x1e, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4b, 0x65, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x6d, 0x61, 0x70, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x22, 0xb2, 0x03, 0x0a, 0x28, 0x47, 0x65,
	0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4f, 0x70,
	0x74, 0x69, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x63, 0x63, 0x75, 0x72, 0x61,
	0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x63, 0x63, 0x75, 0x72, 0x61,
	0x63, 0x79, 0x12, 0x2b, 0x0a, 0x11, 0x65, 0x6e, 0x76, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x68,
	0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x65,
	0x6e, 0x76, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x48, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x61,
	0x6c, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x61,
	0x6c, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6f, 0x72,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x62, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x62, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x69, 0x6d,
	0x65, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x6d,
	0x65, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x6f, 0x70, 0x6b, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x6f, 0x70, 0x6b, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x73, 0x5f,
	0x61, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0b, 0x74, 0x73, 0x41, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x10, 0x0a, 0x03,
	0x74, 0x7a, 0x6f, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x7a, 0x6f, 0x22, 0xa6,
	0x01, 0x0a, 0x20, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x6a, 0x0a, 0x14, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x72, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x52, 0x13, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x36, 0x0a, 0x20, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x33, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0x51, 0x0a, 0x1f, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x70, 0x61, 0x6e,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x22, 0xa2, 0x01, 0x0a, 0x20, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x6a, 0x0a, 0x14, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x13, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x81, 0x02, 0x0a,
	0x38, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69,
	0x74, 0x79, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0xb0, 0x01,
	0x0a, 0x28, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f,
	0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x57, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74,
	0x79, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x25, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0xf6, 0x01, 0x0a, 0x29, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69,
	0x74, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x80, 0x01, 0x0a, 0x1e, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74,
	0x79, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x3a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x53, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x1c, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69,
	0x74, 0x79, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x3f, 0x0a, 0x29, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3c, 0x0a, 0x26, 0x47, 0x65,
	0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x65,
	0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x7e, 0x0a, 0x28, 0x4c, 0x69, 0x73, 0x74,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x22, 0x82, 0x01, 0x0a, 0x30, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xe2, 0x01,
	0x0a, 0x28, 0x50, 0x61, 0x74, 0x63, 0x68, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x73, 0x6b, 0x12,
	0x80, 0x01, 0x0a, 0x1e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x5f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x56, 0x31, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x52, 0x1c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x22, 0xa6, 0x02, 0x0a, 0x47, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x45, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f,
	0x0a, 0x13, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x70, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0xa9, 0x01, 0x0a, 0x2b, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x5f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x73, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x56, 0x31, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x28, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73,
	0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x81, 0x02, 0x0a, 0x35,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0xaf, 0x01,
	0x0a, 0x2b, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f,
	0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x73, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x50, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31,
	0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x45,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x69,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x28, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x22,
	0x4b, 0x0a, 0x35, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xd0, 0x01, 0x0a,
	0x24, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x64, 0x0a, 0x18, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x64, 0x66, 0x6c, 0x6f, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x41, 0x70, 0x69, 0x48, 0x74,
	0x74, 0x70, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x17, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x66, 0x6c, 0x6f, 0x77, 0x22,
	0x3a, 0x0a, 0x24, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x66, 0x6c, 0x6f, 0x77,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x37, 0x0a, 0x21, 0x47,
	0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x64, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0x96, 0x01, 0x0a, 0x23, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64,
	0x66, 0x6c, 0x6f, 0x77, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x11,
	0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2b, 0x0a, 0x11, 0x69, 0x6e, 0x63, 0x6c,
	0x75, 0x64, 0x65, 0x5f, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x10, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x52, 0x65, 0x76, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x22, 0x48, 0x0a,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x44, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x22, 0x43, 0x0a, 0x2d, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x64, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x58, 0x0a, 0x2a,
	0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x52, 0x65, 0x76, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xea, 0x01, 0x0a, 0x3f, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x76, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x52, 0x65, 0x76, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x12, 0x77, 0x0a, 0x22, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x64, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x5f, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x41, 0x70, 0x69, 0x48, 0x74, 0x74, 0x70, 0x42, 0x6f, 0x64,
	0x79, 0x52, 0x20, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x52, 0x65, 0x76, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x22, 0x51, 0x0a, 0x37, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x66, 0x6c,
	0x6f, 0x77, 0x73, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x22, 0xc4, 0x01, 0x0a, 0x2a, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x69,
	0x74, 0x65, 0x73, 0x41, 0x70, 0x69, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x7e, 0x0a,
	0x1f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x73,
	0x69, 0x74, 0x65, 0x73, 0x5f, 0x61, 0x70, 0x69, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x56, 0x31, 0x41, 0x70, 0x69, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x1d,
	0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x69, 0x74,
	0x65, 0x73, 0x41, 0x70, 0x69, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x22, 0x40, 0x0a,
	0x2a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x53, 0x69, 0x74, 0x65, 0x73, 0x41, 0x70, 0x69, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x3d, 0x0a, 0x27, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x53, 0x69, 0x74, 0x65, 0x73, 0x41, 0x70, 0x69, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x44,
	0x0a, 0x2a, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x53, 0x69, 0x74, 0x65, 0x73, 0x41, 0x70, 0x69, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x22, 0xbf, 0x01, 0x0a, 0x29, 0x50, 0x61, 0x74, 0x63, 0x68, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x69, 0x74, 0x65, 0x73,
	0x41, 0x70, 0x69, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x7e, 0x0a, 0x1f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x73, 0x69, 0x74, 0x65, 0x73, 0x5f, 0x61, 0x70,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x36, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x70, 0x69, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x1d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x69, 0x74, 0x65, 0x73, 0x41, 0x70, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x22, 0xb0, 0x01, 0x0a, 0x25, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x69,
	0x74, 0x65, 0x73, 0x41, 0x70, 0x69, 0x64, 0x6f, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x6f, 0x0a, 0x1a, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x73, 0x69, 0x74, 0x65, 0x73, 0x5f,
	0x61, 0x70, 0x69, 0x64, 0x6f, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x70, 0x69, 0x44, 0x6f, 0x63, 0x52,
	0x18, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x69,
	0x74, 0x65, 0x73, 0x41, 0x70, 0x69, 0x64, 0x6f, 0x63, 0x22, 0x3b, 0x0a, 0x25, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x53, 0x69, 0x74, 0x65, 0x73, 0x41, 0x70, 0x69, 0x64, 0x6f, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x38, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x69, 0x74, 0x65, 0x73, 0x41,
	0x70, 0x69, 0x64, 0x6f, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x45, 0x0a, 0x2f, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x53, 0x69, 0x74, 0x65, 0x73, 0x41, 0x70, 0x69, 0x64, 0x6f, 0x63, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x7a, 0x0a, 0x24, 0x4c, 0x69, 0x73, 0x74, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x69, 0x74, 0x65,
	0x73, 0x41, 0x70, 0x69, 0x64, 0x6f, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x22, 0xac, 0x01, 0x0a, 0x25, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x69, 0x74, 0x65, 0x73,
	0x41, 0x70, 0x69, 0x64, 0x6f, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x6f, 0x0a, 0x1a, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x5f, 0x73, 0x69, 0x74, 0x65, 0x73, 0x5f, 0x61, 0x70, 0x69, 0x64, 0x6f, 0x63, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x56, 0x31, 0x41, 0x70, 0x69, 0x44, 0x6f, 0x63, 0x52, 0x18, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x69, 0x74, 0x65, 0x73, 0x41, 0x70, 0x69, 0x64,
	0x6f, 0x63, 0x22, 0xc6, 0x01, 0x0a, 0x32, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x69, 0x74, 0x65, 0x73, 0x41, 0x70, 0x69, 0x64,
	0x6f, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x7c, 0x0a,
	0x1a, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x73,
	0x69, 0x74, 0x65, 0x73, 0x5f, 0x61, 0x70, 0x69, 0x64, 0x6f, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x3e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x70,
	0x69, 0x44, 0x6f, 0x63, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x18, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x53, 0x69, 0x74, 0x65, 0x73, 0x41, 0x70, 0x69, 0x64, 0x6f, 0x63, 0x22, 0xab, 0x01, 0x0a, 0x23,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x6a, 0x0a,
	0x0c, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x47, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0b, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x6f, 0x64, 0x79, 0x32, 0x0e, 0x0a, 0x0c, 0x48, 0x79, 0x62,
	0x72, 0x69, 0x64, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x32, 0xc6, 0x01, 0x0a, 0x13, 0x48, 0x79,
	0x62, 0x72, 0x69, 0x64, 0x49, 0x73, 0x73, 0x75, 0x65, 0x72, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x12, 0xae, 0x01, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x79, 0x62, 0x72, 0x69, 0x64,
	0x49, 0x73, 0x73, 0x75, 0x65, 0x72, 0x73, 0x12, 0x30, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x79, 0x62, 0x72, 0x69, 0x64, 0x49, 0x73, 0x73, 0x75, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x44, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x79, 0x62, 0x72, 0x69, 0x64,
	0x49, 0x73, 0x73, 0x75, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x12, 0x19, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61,
	0x6d, 0x65, 0x3d, 0x68, 0x79, 0x62, 0x72, 0x69, 0x64, 0x2f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72,
	0x73, 0x7d, 0x32, 0x85, 0x14, 0x0a, 0x13, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x8f, 0x01, 0x0a, 0x12, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x31, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x6c, 0x6f,
	0x6e, 0x67, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x22, 0x11, 0x2f, 0x76, 0x31,
	0x2f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x3a, 0x0c,
	0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x8a, 0x01, 0x0a,
	0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x31, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x6c, 0x6f, 0x6e, 0x67, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x2a, 0x1a, 0x2f,
	0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x7d, 0x12, 0x9e, 0x01, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x12, 0x1a,
	0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x7d, 0x12, 0xdf, 0x01, 0x0a, 0x24, 0x47,
	0x65, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x43, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x56, 0x31, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x22, 0x38, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x32, 0x12, 0x30, 0x2f, 0x76, 0x31, 0x2f,
	0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x49, 0x6e,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x7d, 0x12, 0xda, 0x01, 0x0a,
	0x1d, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x61, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x45, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x61, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x22, 0x34, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2e, 0x12, 0x2c, 0x2f, 0x76, 0x31,
	0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x7d, 0x3a, 0x67, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x12, 0xc7, 0x01, 0x0a, 0x1c, 0x47, 0x65,
	0x74, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3b, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x56, 0x31, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x22, 0x30, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x12, 0x28, 0x2f, 0x76, 0x31, 0x2f, 0x7b,
	0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x7d, 0x12, 0xd3, 0x01, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x53, 0x65, 0x63, 0x75, 0x72,
	0x69, 0x74, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x56, 0x31, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x22, 0x33, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2d, 0x12, 0x2b, 0x2f, 0x76,
	0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x7d, 0x12, 0xe8, 0x01, 0x0a, 0x20, 0x47, 0x65,
	0x74, 0x53, 0x79, 0x6e, 0x63, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3f,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x41,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x3c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x53, 0x79, 0x6e, 0x63,
	0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x45, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x3f, 0x22, 0x2f, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65,
	0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a,
	0x7d, 0x3a, 0x67, 0x65, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0xaf, 0x01, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x30, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x44, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x12, 0x1a, 0x2f, 0x76, 0x31, 0x2f,
	0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x7d, 0x12, 0xa7, 0x01, 0x0a, 0x15, 0x53, 0x65, 0x74, 0x41, 0x64,
	0x64, 0x6f, 0x6e, 0x73, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x34, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x41, 0x64, 0x64,
	0x6f, 0x6e, 0x73, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x6c, 0x6f, 0x6e, 0x67, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x39, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x33, 0x22, 0x23, 0x2f,
	0x76, 0x31, 0x2f, 0x7b, 0x6f, 0x72, 0x67, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x7d, 0x3a, 0x73, 0x65, 0x74, 0x41, 0x64, 0x64, 0x6f,
	0x6e, 0x73, 0x3a, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0xe8, 0x01, 0x0a, 0x20, 0x53, 0x65, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x41, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x65, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x56, 0x31, 0x53, 0x79, 0x6e, 0x63, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x45, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3f, 0x22, 0x2f, 0x2f, 0x76,
	0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x7d, 0x3a, 0x73, 0x65, 0x74, 0x53, 0x79, 0x6e, 0x63,
	0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x0c, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0xb2, 0x01, 0x0a, 0x12,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x31, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x56, 0x31, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x30,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x1a, 0x1a, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d,
	0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f,
	0x2a, 0x7d, 0x3a, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0xe7, 0x01, 0x0a, 0x22, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72,
	0x69, 0x74, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x41, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3b, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x41, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3b, 0x32,
	0x2b, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x73, 0x65, 0x63, 0x75, 0x72,
	0x69, 0x74, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x7d, 0x3a, 0x0c, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0x1e, 0x0a, 0x1c, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x6e, 0x61, 0x6c, 0x79,
	0x74, 0x69, 0x63, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x32, 0xe0, 0x0b, 0x0a, 0x26, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x6e, 0x61, 0x6c,
	0x79, 0x74, 0x69, 0x63, 0x73, 0x44, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x81, 0x02, 0x0a, 0x25, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x6e, 0x61,
	0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x44, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x12,
	0x44, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x6e, 0x61, 0x6c,
	0x79, 0x74, 0x69, 0x63, 0x73, 0x44, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x56, 0x31, 0x44, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x22, 0x5c, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x56, 0x22, 0x31, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a,
	0x7d, 0x2f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2f, 0x64, 0x61, 0x74, 0x61,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x3a, 0x21, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x12, 0xd5, 0x01, 0x0a, 0x25, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x44, 0x61, 0x74, 0x61, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x12, 0x44, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x41, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x44, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x39, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x33, 0x2a, 0x31,
	0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74,
	0x69, 0x63, 0x73, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x2f, 0x2a,
	0x7d, 0x12, 0xd8, 0x01, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x44,
	0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x41, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x44, 0x61, 0x74, 0x61, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x44, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x22, 0x39, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x33, 0x12, 0x31, 0x2f, 0x76, 0x31, 0x2f, 0x7b,
	0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2f, 0x64,
	0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x2f, 0x2a, 0x7d, 0x12, 0xe9, 0x01, 0x0a,
	0x24, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x44, 0x61, 0x74, 0x61, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x43, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x41, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x44, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x41, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x39, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x33, 0x12, 0x31, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x2a, 0x7d, 0x2f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2f, 0x64, 0x61,
	0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x8e, 0x02, 0x0a, 0x23, 0x54, 0x65, 0x73,
	0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x6e,
	0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x44, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x12, 0x42, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x6e, 0x61, 0x6c, 0x79,
	0x74, 0x69, 0x63, 0x73, 0x44, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x40, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56,
	0x31, 0x54, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x61, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x5b, 0x22, 0x36,
	0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x61, 0x6e, 0x61,
	0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x73, 0x3a, 0x74, 0x65, 0x73, 0x74, 0x3a, 0x21, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x81, 0x02, 0x0a, 0x25, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x44, 0x61, 0x74, 0x61, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x12, 0x44, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x41, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x44, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x44, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x22,
	0x5c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x56, 0x1a, 0x31, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61,
	0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x2a, 0x2f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2f, 0x64, 0x61, 0x74,
	0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x2f, 0x2a, 0x7d, 0x3a, 0x21, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74,
	0x69, 0x63, 0x73, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x32, 0xbc, 0x0a,
	0x0a, 0x1e, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41,
	0x70, 0x69, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x12, 0xf3, 0x01, 0x0a, 0x21, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x69, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x40, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x69, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x22,
	0x55, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x4f, 0x22, 0x33, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61,
	0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x2a, 0x2f, 0x61, 0x70, 0x69, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x2f, 0x2a,
	0x7d, 0x2f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x3a, 0x18, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x61, 0x70, 0x69, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0xe0, 0x01, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70,
	0x69, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x3c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x69, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x56, 0x31, 0x41, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x22, 0x4a, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x44, 0x22, 0x28, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x2a, 0x7d, 0x2f, 0x61, 0x70, 0x69, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x3a,
	0x18, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x61,
	0x70, 0x69, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0xc6, 0x01, 0x0a, 0x1d, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x41, 0x70, 0x69, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x3c, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x69, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x22, 0x30, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x2a, 0x28, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e,
	0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x70, 0x69, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x2f,
	0x2a, 0x7d, 0x12, 0xc0, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x69, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x12, 0x39, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x69, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x22, 0x30, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x12, 0x28, 0x2f, 0x76, 0x31,
	0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x70, 0x69, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x73, 0x2f, 0x2a, 0x7d, 0x12, 0xd1, 0x01, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x69, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x12, 0x3b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x41, 0x70, 0x69, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x42, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31,
	0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x30, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x12,
	0x28, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x61, 0x70,
	0x69, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x12, 0xe0, 0x01, 0x0a, 0x1d, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x41, 0x70, 0x69, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x3c, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x69, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x22, 0x4a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x44, 0x1a, 0x28, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e,
	0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x70, 0x69, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x2f,
	0x2a, 0x7d, 0x3a, 0x18, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x5f, 0x61, 0x70, 0x69, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x32, 0x92, 0x08, 0x0a,
	0x28, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70,
	0x69, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0xe6, 0x01, 0x0a, 0x27, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x41, 0x70, 0x69, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x46, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x41, 0x70, 0x69, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x22, 0x3d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x37, 0x2a, 0x35, 0x2f, 0x76, 0x31,
	0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x70, 0x69, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x2f,
	0x2a, 0x7d, 0x12, 0xe0, 0x01, 0x0a, 0x24, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x69, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x73, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x43, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x69, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x34, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x22, 0x3d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x37, 0x12, 0x35,
	0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x70, 0x69, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x2f, 0x2a, 0x7d, 0x12, 0xe5, 0x01, 0x0a, 0x26, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x69, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x12, 0x45, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x69, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x56, 0x31, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x22, 0x3d,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x37, 0x12, 0x35, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x70, 0x69, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x2f,
	0x2a, 0x7d, 0x2f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0xb1, 0x02,
	0x0a, 0x3a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x69, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x73, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x59, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x69, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x69, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x56, 0x31, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x22, 0x62, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x5c, 0x22, 0x35, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65,
	0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a,
	0x2f, 0x61, 0x70, 0x69, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x2f, 0x2a, 0x2f, 0x61,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x2f, 0x2a, 0x7d, 0x3a, 0x23, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x61, 0x70, 0x69, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x32, 0xef, 0x09, 0x0a, 0x27, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x41, 0x70, 0x69, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x61,
	0x74, 0x65, 0x70, 0x6c, 0x61, 0x6e, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x86, 0x02,
	0x0a, 0x26, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x69, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73,
	0x52, 0x61, 0x74, 0x65, 0x70, 0x6c, 0x61, 0x6e, 0x12, 0x45, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x69, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73,
	0x52, 0x61, 0x74, 0x65, 0x70, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x33, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x52, 0x61, 0x74, 0x65,
	0x50, 0x6c, 0x61, 0x6e, 0x22, 0x60, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x5a, 0x22, 0x34, 0x2f, 0x76,
	0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x70, 0x69, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x72, 0x61, 0x74, 0x65, 0x70, 0x6c, 0x61,
	0x6e, 0x73, 0x3a, 0x22, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x5f, 0x61, 0x70, 0x69, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x5f, 0x72, 0x61,
	0x74, 0x65, 0x70, 0x6c, 0x61, 0x6e, 0x12, 0xe2, 0x01, 0x0a, 0x26, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70,
	0x69, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x70, 0x6c, 0x61,
	0x6e, 0x12, 0x45, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70,
	0x69, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x70, 0x6c, 0x61,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x56, 0x31, 0x52, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x22, 0x3c, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x36, 0x2a, 0x34, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65,
	0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a,
	0x2f, 0x61, 0x70, 0x69, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x2f, 0x2a, 0x2f, 0x72,
	0x61, 0x74, 0x65, 0x70, 0x6c, 0x61, 0x6e, 0x73, 0x2f, 0x2a, 0x7d, 0x12, 0xdc, 0x01, 0x0a, 0x23,
	0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x41, 0x70, 0x69, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x70,
	0x6c, 0x61, 0x6e, 0x12, 0x42, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x69,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x70, 0x6c, 0x61, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x56, 0x31, 0x52, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x22, 0x3c, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x36, 0x12, 0x34, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d,
	0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f,
	0x61, 0x70, 0x69, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x2f, 0x2a, 0x2f, 0x72, 0x61,
	0x74, 0x65, 0x70, 0x6c, 0x61, 0x6e, 0x73, 0x2f, 0x2a, 0x7d, 0x12, 0xed, 0x01, 0x0a, 0x25, 0x4c,
	0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x41, 0x70, 0x69, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x70,
	0x6c, 0x61, 0x6e, 0x73, 0x12, 0x44, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41,
	0x70, 0x69, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x70, 0x6c,
	0x61, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x40, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x50,
	0x6c, 0x61, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3c, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x36, 0x12, 0x34, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f,
	0x2a, 0x2f, 0x61, 0x70, 0x69, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x2f, 0x2a, 0x7d,
	0x2f, 0x72, 0x61, 0x74, 0x65, 0x70, 0x6c, 0x61, 0x6e, 0x73, 0x12, 0x86, 0x02, 0x0a, 0x26, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x41, 0x70, 0x69, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x61, 0x74,
	0x65, 0x70, 0x6c, 0x61, 0x6e, 0x12, 0x45, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x41, 0x70, 0x69, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x61, 0x74,
	0x65, 0x70, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x52, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61,
	0x6e, 0x22, 0x60, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x5a, 0x1a, 0x34, 0x2f, 0x76, 0x31, 0x2f, 0x7b,
	0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x70, 0x69, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73,
	0x2f, 0x2a, 0x2f, 0x72, 0x61, 0x74, 0x65, 0x70, 0x6c, 0x61, 0x6e, 0x73, 0x2f, 0x2a, 0x7d, 0x3a,
	0x22, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x61,
	0x70, 0x69, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x70,
	0x6c, 0x61, 0x6e, 0x32, 0xc5, 0x07, 0x0a, 0x17, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x69, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12,
	0xca, 0x01, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x69, 0x12, 0x35, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x3b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x70,
	0x69, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x3c,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x36, 0x22, 0x21, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x3a, 0x11, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x61, 0x70, 0x69, 0x12, 0xaf, 0x01, 0x0a,
	0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x69, 0x12, 0x35, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x70, 0x69, 0x50, 0x72,
	0x6f, 0x78, 0x79, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x2a, 0x21, 0x2f, 0x76, 0x31,
	0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x2a, 0x7d, 0x12, 0xa9,
	0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x41, 0x70, 0x69, 0x12, 0x32, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x41, 0x70, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x22,
	0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x12, 0x21, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61,
	0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x2a, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x2a, 0x7d, 0x12, 0xbb, 0x01, 0x0a, 0x15, 0x4c,
	0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x41, 0x70, 0x69, 0x73, 0x12, 0x34, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41,
	0x70, 0x69, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x41, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x69, 0x50, 0x72,
	0x6f, 0x78, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x23, 0x12, 0x21, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x2a, 0x7d, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x12, 0xc0, 0x01, 0x0a, 0x15, 0x50, 0x61, 0x74,
	0x63, 0x68, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41,
	0x70, 0x69, 0x12, 0x34, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x74, 0x63,
	0x68, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70,
	0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x22, 0x3c, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x36, 0x32, 0x21, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65,
	0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a,
	0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x2a, 0x7d, 0x3a, 0x11, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x61, 0x70, 0x69, 0x32, 0x87, 0x02, 0x0a, 0x22,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x69,
	0x73, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x12, 0xe0, 0x01, 0x0a, 0x20, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x69, 0x73, 0x44, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x3f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x41, 0x70, 0x69, 0x73, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x42, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x56, 0x31, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x37, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x31, 0x12, 0x2f, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f,
	0x2a, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x32, 0xfd, 0x03, 0x0a, 0x23, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x69, 0x73, 0x4b, 0x65, 0x79, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x6d, 0x61, 0x70, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0xf9, 0x01,
	0x0a, 0x22, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x69, 0x73, 0x4b, 0x65, 0x79, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x6d, 0x61, 0x70, 0x12, 0x41, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x41, 0x70, 0x69, 0x73, 0x4b, 0x65, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x6d, 0x61, 0x70,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x56, 0x31, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4d, 0x61, 0x70, 0x22,
	0x58, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x52, 0x22, 0x30, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x6b, 0x65, 0x79,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x6d, 0x61, 0x70, 0x73, 0x3a, 0x1e, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x61, 0x70, 0x69, 0x73, 0x5f, 0x6b, 0x65,
	0x79, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x6d, 0x61, 0x70, 0x12, 0xd9, 0x01, 0x0a, 0x22, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x41, 0x70, 0x69, 0x73, 0x4b, 0x65, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x6d, 0x61, 0x70,
	0x12, 0x41, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x69,
	0x73, 0x4b, 0x65, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x6d, 0x61, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31,
	0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4d, 0x61, 0x70, 0x22, 0x38, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x32, 0x2a, 0x30, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x61,
	0x70, 0x69, 0x73, 0x2f, 0x2a, 0x2f, 0x6b, 0x65, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x6d, 0x61,
	0x70, 0x73, 0x2f, 0x2a, 0x7d, 0x32, 0xc6, 0x0a, 0x0a, 0x2a, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x69, 0x73, 0x4b, 0x65, 0x79, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x6d, 0x61, 0x70, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x12, 0x98, 0x02, 0x0a, 0x28, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x69, 0x73,
	0x4b, 0x65, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x6d, 0x61, 0x70, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x47, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70,
	0x69, 0x73, 0x4b, 0x65, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x6d, 0x61, 0x70, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x22, 0x69, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x63, 0x22, 0x3a, 0x2f, 0x76,
	0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x2a,
	0x2f, 0x6b, 0x65, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x6d, 0x61, 0x70, 0x73, 0x2f, 0x2a, 0x7d,
	0x2f, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x3a, 0x25, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x61, 0x70, 0x69, 0x73, 0x5f, 0x6b, 0x65, 0x79,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x6d, 0x61, 0x70, 0x73, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0xf1, 0x01, 0x0a, 0x28, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x69, 0x73, 0x4b, 0x65, 0x79, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x6d, 0x61, 0x70, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x47, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x69, 0x73, 0x4b, 0x65, 0x79,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x6d, 0x61, 0x70, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x56, 0x31, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x22,
	0x42, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3c, 0x2a, 0x3a, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61,
	0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x2a, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x2a, 0x2f, 0x6b, 0x65, 0x79, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x6d, 0x61, 0x70, 0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73,
	0x2f, 0x2a, 0x7d, 0x12, 0xeb, 0x01, 0x0a, 0x25, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x69, 0x73, 0x4b, 0x65, 0x79, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x6d, 0x61, 0x70, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x44, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x69, 0x73, 0x4b, 0x65, 0x79, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x6d, 0x61, 0x70, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31,
	0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x42, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x3c, 0x12, 0x3a, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65,
	0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a,
	0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x2a, 0x2f, 0x6b, 0x65, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x6d, 0x61, 0x70, 0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x2f, 0x2a,
	0x7d, 0x12, 0xff, 0x01, 0x0a, 0x28, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x69, 0x73, 0x4b, 0x65, 0x79, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x6d, 0x61, 0x70, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x47,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x69, 0x73, 0x4b, 0x65, 0x79,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x6d, 0x61, 0x70, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x46, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x56, 0x31, 0x4c, 0x69, 0x73, 0x74, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x42, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3c, 0x12, 0x3a, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x2a, 0x2f, 0x6b, 0x65, 0x79, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x6d, 0x61, 0x70, 0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x65, 0x6e, 0x74, 0x72,
	0x69, 0x65, 0x73, 0x12, 0x98, 0x02, 0x0a, 0x28, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x69, 0x73, 0x4b,
	0x65, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x6d, 0x61, 0x70, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x47, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x69,
	0x73, 0x4b, 0x65, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x6d, 0x61, 0x70, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x22, 0x69, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x63, 0x1a, 0x3a, 0x2f, 0x76, 0x31,
	0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x2a, 0x2f, 0x6b, 0x65,
	0x79, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x6d, 0x61, 0x70, 0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x74,
	0x72, 0x69, 0x65, 0x73, 0x2f, 0x2a, 0x7d, 0x3a, 0x25, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x61, 0x70, 0x69, 0x73, 0x5f, 0x6b, 0x65, 0x79, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x6d, 0x61, 0x70, 0x73, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x32, 0xcf,
	0x05, 0x0a, 0x20, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x41, 0x70, 0x69, 0x73, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x12, 0xd5, 0x01, 0x0a, 0x1f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x69, 0x73, 0x52,
	0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x69, 0x73, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x56, 0x31, 0x41, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x52, 0x65, 0x76, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x22, 0x35, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2f, 0x2a, 0x2d, 0x2f, 0x76,
	0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x2a, 0x2f, 0x72,
	0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x7d, 0x12, 0xbd, 0x01, 0x0a, 0x1c,
	0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x41, 0x70, 0x69, 0x73, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3b, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x69, 0x73, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x41, 0x70, 0x69, 0x48, 0x74, 0x74, 0x70,
	0x42, 0x6f, 0x64, 0x79, 0x22, 0x35, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2f, 0x12, 0x2d, 0x2f, 0x76,
	0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x2a, 0x2f, 0x72,
	0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x7d, 0x12, 0x92, 0x02, 0x0a, 0x2f,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x52, 0x65,
	0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x41, 0x70, 0x69, 0x73, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x4e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41,
	0x70, 0x69, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x69, 0x73,
	0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x3b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x70, 0x69, 0x50,
	0x72, 0x6f, 0x78, 0x79, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x52, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x4c, 0x22, 0x2d, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d,
	0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f,
	0x61, 0x70, 0x69, 0x73, 0x2f, 0x2a, 0x2f, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x2a, 0x7d, 0x3a, 0x1b, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x5f, 0x61, 0x70, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x32, 0xae, 0x02, 0x0a, 0x2b, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x41, 0x70, 0x69, 0x73, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x12, 0xfe, 0x01, 0x0a, 0x29, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x69, 0x73, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x48,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x69, 0x73, 0x52, 0x65, 0x76,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x42, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x56, 0x31, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x43, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x3d, 0x12, 0x3b, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f,
	0x2a, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x2a, 0x2f, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x32, 0x98, 0x08, 0x0a, 0x1c, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x41, 0x70, 0x70, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x12, 0xd6, 0x01, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x70, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x12, 0x3a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41,
	0x70, 0x70, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x70, 0x70, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x22, 0x46, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x40, 0x22, 0x26, 0x2f, 0x76, 0x31,
	0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x61, 0x70, 0x70, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x3a, 0x16, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0xbe, 0x01, 0x0a, 0x1b,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x41, 0x70, 0x70, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x3a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x70, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x56, 0x31, 0x41, 0x70, 0x70, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x2e, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x28, 0x2a, 0x26, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d,
	0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f,
	0x61, 0x70, 0x70, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2f, 0x2a, 0x7d, 0x12, 0xb8, 0x01, 0x0a,
	0x18, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x41, 0x70, 0x70, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x37, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x41, 0x70, 0x70, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x33, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41,
	0x70, 0x70, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28, 0x12,
	0x26, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x70, 0x70, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x2f, 0x2a, 0x7d, 0x12, 0xc9, 0x01, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x70,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x39, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x41, 0x70, 0x70, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x40, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4c, 0x69,
	0x73, 0x74, 0x41, 0x70, 0x70, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28, 0x12, 0x26, 0x2f, 0x76, 0x31,
	0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x61, 0x70, 0x70, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x12, 0xd6, 0x01, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x70, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x3a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x41, 0x70, 0x70, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x33, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x70, 0x70, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x22, 0x46, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x40, 0x1a, 0x26, 0x2f, 0x76,
	0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x70, 0x70, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x2f, 0x2a, 0x7d, 0x3a, 0x16, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x32, 0x80, 0x09, 0x0a,
	0x20, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70,
	0x70, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x41, 0x70, 0x70, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x12, 0xed, 0x01, 0x0a, 0x1f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x70, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x41, 0x70, 0x70, 0x12, 0x3e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x41, 0x70, 0x70, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x41, 0x70, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x56, 0x31, 0x41, 0x70, 0x70, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x22, 0x52, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x4c, 0x22, 0x2d, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x2a, 0x2f, 0x61, 0x70, 0x70, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2f, 0x2a, 0x7d, 0x2f,
	0x61, 0x70, 0x70, 0x73, 0x3a, 0x1b, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x5f, 0x61, 0x70,
	0x70, 0x12, 0xd0, 0x01, 0x0a, 0x1f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x70, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x41, 0x70, 0x70, 0x12, 0x3e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x41, 0x70, 0x70, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x41, 0x70, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x56, 0x31, 0x41, 0x70, 0x70, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x22, 0x35, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x2f, 0x2a, 0x2d, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65,
	0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a,
	0x2f, 0x61, 0x70, 0x70, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x70, 0x70,
	0x73, 0x2f, 0x2a, 0x7d, 0x12, 0xca, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x70, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x41, 0x70, 0x70, 0x12, 0x3b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41,
	0x70, 0x70, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x36, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41,
	0x70, 0x70, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x22, 0x35, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x2f, 0x12, 0x2d, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x70,
	0x70, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x70, 0x70, 0x73, 0x2f, 0x2a,
	0x7d, 0x12, 0xdb, 0x01, 0x0a, 0x1e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x70, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x41, 0x70, 0x70, 0x73, 0x12, 0x3d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41,
	0x70, 0x70, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x41, 0x70, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x43, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31,
	0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x35, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2f,
	0x12, 0x2d, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x70,
	0x70, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x61, 0x70, 0x70, 0x73, 0x12,
	0xed, 0x01, 0x0a, 0x1f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x70, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x41, 0x70, 0x70, 0x12, 0x3e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x41, 0x70, 0x70, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31,
	0x41, 0x70, 0x70, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x22, 0x52, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x4c, 0x1a, 0x2d, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x61,
	0x70, 0x70, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x70, 0x70, 0x73, 0x2f,
	0x2a, 0x7d, 0x3a, 0x1b, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x5f, 0x61, 0x70, 0x70, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x32,
	0x94, 0x08, 0x0a, 0x24, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x41, 0x70, 0x70, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x41, 0x70, 0x70, 0x73, 0x4b, 0x65,
	0x79, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x84, 0x02, 0x0a, 0x23, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x41, 0x70, 0x70, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x41, 0x70, 0x70, 0x73, 0x4b, 0x65, 0x79,
	0x12, 0x42, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x70,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x41, 0x70, 0x70, 0x73, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56,
	0x31, 0x41, 0x70, 0x70, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x22,
	0x5e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x58, 0x22, 0x34, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x70, 0x70, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2f, 0x2a,
	0x2f, 0x61, 0x70, 0x70, 0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x6b, 0x65, 0x79, 0x73, 0x3a, 0x20, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x61, 0x70, 0x70,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x73, 0x5f, 0x6b, 0x65, 0x79, 0x12,
	0xe2, 0x01, 0x0a, 0x23, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x70, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x41, 0x70, 0x70, 0x73, 0x4b, 0x65, 0x79, 0x12, 0x42, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x70, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x41, 0x70, 0x70,
	0x73, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x70, 0x70, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x41, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x22, 0x3c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x36, 0x2a, 0x34,
	0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x70, 0x70, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x70, 0x70, 0x73, 0x2f, 0x2a, 0x2f, 0x6b, 0x65, 0x79,
	0x73, 0x2f, 0x2a, 0x7d, 0x12, 0xdc, 0x01, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x70, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x41, 0x70, 0x70, 0x73, 0x4b, 0x65, 0x79, 0x12, 0x3f, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x41, 0x70, 0x70, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x41, 0x70, 0x70, 0x73,
	0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x70, 0x70, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41,
	0x70, 0x70, 0x4b, 0x65, 0x79, 0x22, 0x3c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x36, 0x12, 0x34, 0x2f,
	0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x70, 0x70, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x70, 0x70, 0x73, 0x2f, 0x2a, 0x2f, 0x6b, 0x65, 0x79, 0x73,
	0x2f, 0x2a, 0x7d, 0x12, 0xa0, 0x02, 0x0a, 0x31, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70,
	0x70, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x70, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x41, 0x70, 0x70, 0x73, 0x4b, 0x65, 0x79, 0x12, 0x50, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x41, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x70, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x41, 0x70, 0x70,
	0x73, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x70, 0x70, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x41, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x22, 0x5e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x58, 0x22, 0x34,
	0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x70, 0x70, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x70, 0x70, 0x73, 0x2f, 0x2a, 0x2f, 0x6b, 0x65, 0x79,
	0x73, 0x2f, 0x2a, 0x7d, 0x3a, 0x20, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x5f, 0x61, 0x70,
	0x70, 0x73, 0x5f, 0x6b, 0x65, 0x79, 0x32, 0xe5, 0x04, 0x0a, 0x2f, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x70, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x41, 0x70, 0x70, 0x73, 0x4b, 0x65, 0x79, 0x73, 0x41, 0x70, 0x69, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x86, 0x02, 0x0a, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x41, 0x70, 0x70, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x41, 0x70, 0x70, 0x73, 0x4b,
	0x65, 0x79, 0x73, 0x41, 0x70, 0x69, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x4d, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x70, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x41, 0x70, 0x70, 0x73, 0x4b, 0x65, 0x79, 0x73, 0x41, 0x70, 0x69, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x70, 0x70, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x41, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x22, 0x4a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x44, 0x2a,
	0x42, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x70, 0x70, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x70, 0x70, 0x73, 0x2f, 0x2a, 0x2f, 0x6b, 0x65,
	0x79, 0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x70, 0x69, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73,
	0x2f, 0x2a, 0x7d, 0x12, 0xa8, 0x02, 0x0a, 0x46, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70,
	0x70, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x41, 0x70, 0x69, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x41, 0x70, 0x70, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x41, 0x70, 0x70, 0x73,
	0x4b, 0x65, 0x79, 0x73, 0x41, 0x70, 0x69, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x65,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70,
	0x70, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x41, 0x70, 0x69, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x41, 0x70, 0x70, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x41, 0x70, 0x70, 0x73,
	0x4b, 0x65, 0x79, 0x73, 0x41, 0x70, 0x69, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x4a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x44, 0x22, 0x42, 0x2f, 0x76, 0x31, 0x2f,
	0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x70, 0x70, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2f,
	0x2a, 0x2f, 0x61, 0x70, 0x70, 0x73, 0x2f, 0x2a, 0x2f, 0x6b, 0x65, 0x79, 0x73, 0x2f, 0x2a, 0x2f,
	0x61, 0x70, 0x69, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x2f, 0x2a, 0x7d, 0x32, 0xf8,
	0x02, 0x0a, 0x17, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x41, 0x70, 0x70, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0xa4, 0x01, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41,
	0x70, 0x70, 0x12, 0x32, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x56, 0x31, 0x41, 0x70, 0x70, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x12, 0x21,
	0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x70, 0x70, 0x73, 0x2f, 0x2a,
	0x7d, 0x12, 0xb5, 0x01, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x70, 0x73, 0x12, 0x34, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x3b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4c, 0x69,
	0x73, 0x74, 0x41, 0x70, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x12, 0x21, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x61, 0x70, 0x70, 0x73, 0x32, 0xfc, 0x08, 0x0a, 0x21, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x61, 0x74, 0x61, 0x63,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12,
	0xef, 0x01, 0x0a, 0x20, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x61, 0x74, 0x61, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x12, 0x3f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x44, 0x61, 0x74, 0x61, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x56, 0x31, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x22,
	0x50, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x4a, 0x22, 0x2b, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x73, 0x3a, 0x1b, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x12, 0xc5, 0x01, 0x0a, 0x20, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x61, 0x74, 0x61, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x3f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x44, 0x61, 0x74, 0x61, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x33, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2d, 0x2a, 0x2b, 0x2f, 0x76,
	0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x2f, 0x2a, 0x7d, 0x12, 0xcc, 0x01, 0x0a, 0x1d, 0x47, 0x65,
	0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x61,
	0x74, 0x61, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x3c, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x61, 0x74, 0x61, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x22, 0x33, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2d, 0x12, 0x2b, 0x2f, 0x76, 0x31,
	0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x73, 0x2f, 0x2a, 0x7d, 0x12, 0xdd, 0x01, 0x0a, 0x1f, 0x4c, 0x69, 0x73,
	0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x61,
	0x74, 0x61, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x3e, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x61, 0x74, 0x61, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x45, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x33, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2d, 0x12, 0x2b, 0x2f, 0x76, 0x31,
	0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x12, 0xed, 0x01, 0x0a, 0x1f, 0x50, 0x61, 0x74,
	0x63, 0x68, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44,
	0x61, 0x74, 0x61, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x3e, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x74, 0x63, 0x68, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x61, 0x74, 0x61, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x22, 0x50, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x4a, 0x32, 0x2b,
	0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x2f, 0x2a, 0x7d, 0x3a, 0x1b, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x63,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x32, 0xf4, 0x01, 0x0a, 0x1e, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0xd1, 0x01, 0x0a, 0x1c,
	0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x3b, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x42, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x30, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x12, 0x28, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x2a, 0x7d, 0x2f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x32,
	0x84, 0x12, 0x0a, 0x1d, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x12, 0xf1, 0x01, 0x0a, 0x20, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76,
	0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x12, 0x3f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x56, 0x31, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x22, 0x55,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x4f, 0x22, 0x34, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x2a, 0x2f, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x2f, 0x2a,
	0x7d, 0x2f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x3a, 0x17, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x65,
	0x6c, 0x6f, 0x70, 0x65, 0x72, 0x12, 0xdb, 0x01, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76,
	0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x12, 0x3b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31,
	0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x22, 0x48, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x42, 0x22, 0x27, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x7d, 0x2f,
	0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x3a, 0x17, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f,
	0x70, 0x65, 0x72, 0x12, 0xc2, 0x01, 0x0a, 0x1c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c,
	0x6f, 0x70, 0x65, 0x72, 0x12, 0x3b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x34, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x44, 0x65,
	0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x22, 0x2f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x2a,
	0x27, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x64, 0x65, 0x76, 0x65, 0x6c,
	0x6f, 0x70, 0x65, 0x72, 0x73, 0x2f, 0x2a, 0x7d, 0x12, 0xbc, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76,
	0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x12, 0x38, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x34, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x44, 0x65, 0x76,
	0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x22, 0x2f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x12, 0x27,
	0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f,
	0x70, 0x65, 0x72, 0x73, 0x2f, 0x2a, 0x7d, 0x12, 0xd9, 0x01, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x12, 0x3f, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76,
	0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3b, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f,
	0x70, 0x65, 0x72, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x37, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x31, 0x12, 0x2f, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x64, 0x65,
	0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x2f, 0x2a, 0x2f, 0x62, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x7d, 0x12, 0x85, 0x02, 0x0a, 0x2b, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x6e, 0x65, 0x74,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f,
	0x70, 0x65, 0x72, 0x12, 0x4a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x4d, 0x6f, 0x6e, 0x65, 0x74, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44,
	0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x46, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x44, 0x65, 0x76, 0x65,
	0x6c, 0x6f, 0x70, 0x65, 0x72, 0x4d, 0x6f, 0x6e, 0x65, 0x74, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x42, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3c, 0x12,
	0x3a, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x64, 0x65, 0x76, 0x65, 0x6c,
	0x6f, 0x70, 0x65, 0x72, 0x73, 0x2f, 0x2a, 0x2f, 0x6d, 0x6f, 0x6e, 0x65, 0x74, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x7d, 0x12, 0xcf, 0x01, 0x0a, 0x1b,
	0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x12, 0x3a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x43, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x56, 0x31, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f,
	0x70, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2f, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x29, 0x12, 0x27, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f,
	0x2a, 0x7d, 0x2f, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x12, 0xd1, 0x01,
	0x0a, 0x28, 0x53, 0x65, 0x74, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x12, 0x47, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x2f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x22, 0x27, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e,
	0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x2a, 0x2f, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x2f, 0x2a,
	0x7d, 0x12, 0xdb, 0x01, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70,
	0x65, 0x72, 0x12, 0x3b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44,
	0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x34, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x44, 0x65, 0x76, 0x65,
	0x6c, 0x6f, 0x70, 0x65, 0x72, 0x22, 0x48, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x42, 0x1a, 0x27, 0x2f,
	0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70,
	0x65, 0x72, 0x73, 0x2f, 0x2a, 0x7d, 0x3a, 0x17, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x12,
	0xa4, 0x02, 0x0a, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x6e, 0x65, 0x74, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70,
	0x65, 0x72, 0x12, 0x4d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4d, 0x6f, 0x6e, 0x65, 0x74, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x46, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x44, 0x65,
	0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x4d, 0x6f, 0x6e, 0x65, 0x74, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x5b, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x55, 0x1a, 0x3a, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x64, 0x65, 0x76,
	0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x2f, 0x2a, 0x2f, 0x6d, 0x6f, 0x6e, 0x65, 0x74, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x7d, 0x3a, 0x17, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x64, 0x65, 0x76,
	0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x32, 0xd8, 0x0d, 0x0a, 0x21, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65,
	0x72, 0x73, 0x41, 0x70, 0x70, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x83, 0x02, 0x0a,
	0x24, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65,
	0x72, 0x73, 0x41, 0x70, 0x70, 0x12, 0x43, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73,
	0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x22, 0x5f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x59, 0x22, 0x39, 0x2f, 0x76, 0x31, 0x2f, 0x7b,
	0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x2f,
	0x2a, 0x2f, 0x61, 0x70, 0x70, 0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x3a, 0x1c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x5f, 0x61,
	0x70, 0x70, 0x12, 0xf2, 0x01, 0x0a, 0x20, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f,
	0x70, 0x65, 0x72, 0x73, 0x41, 0x70, 0x70, 0x12, 0x3f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x41, 0x70,
	0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x56, 0x31, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x41, 0x70,
	0x70, 0x22, 0x54, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x4e, 0x22, 0x2e, 0x2f, 0x76, 0x31, 0x2f, 0x7b,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72,
	0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x61, 0x70, 0x70, 0x73, 0x3a, 0x1c, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70,
	0x65, 0x72, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x12, 0xd4, 0x01, 0x0a, 0x20, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44,
	0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x41, 0x70, 0x70, 0x12, 0x3f, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70,
	0x65, 0x72, 0x73, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f,
	0x70, 0x65, 0x72, 0x41, 0x70, 0x70, 0x22, 0x36, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x30, 0x2a, 0x2e,
	0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f,
	0x70, 0x65, 0x72, 0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x70, 0x70, 0x73, 0x2f, 0x2a, 0x7d, 0x12, 0xb8,
	0x02, 0x0a, 0x43, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x50, 0x61,
	0x69, 0x72, 0x4f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f,
	0x70, 0x65, 0x72, 0x41, 0x70, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70,
	0x65, 0x72, 0x73, 0x41, 0x70, 0x70, 0x12, 0x62, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x50, 0x61, 0x69, 0x72, 0x4f,
	0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72,
	0x41, 0x70, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73,
	0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72,
	0x41, 0x70, 0x70, 0x22, 0x54, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x4e, 0x22, 0x2e, 0x2f, 0x76, 0x31,
	0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72,
	0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x70, 0x70, 0x73, 0x2f, 0x2a, 0x7d, 0x3a, 0x1c, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x65, 0x6c,
	0x6f, 0x70, 0x65, 0x72, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x12, 0xce, 0x01, 0x0a, 0x1d, 0x47, 0x65,
	0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65,
	0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x41, 0x70, 0x70, 0x12, 0x3c, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x41,
	0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x41,
	0x70, 0x70, 0x22, 0x36, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x30, 0x12, 0x2e, 0x2f, 0x76, 0x31, 0x2f,
	0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73,
	0x2f, 0x2a, 0x2f, 0x61, 0x70, 0x70, 0x73, 0x2f, 0x2a, 0x7d, 0x12, 0xdf, 0x01, 0x0a, 0x1f, 0x4c,
	0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x41, 0x70, 0x70, 0x73, 0x12, 0x3e,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70,
	0x65, 0x72, 0x73, 0x41, 0x70, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x44,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4c, 0x69, 0x73, 0x74, 0x44,
	0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x41, 0x70, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x36, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x30, 0x12, 0x2e, 0x2f, 0x76,
	0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f,
	0x70, 0x65, 0x72, 0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x61, 0x70, 0x70, 0x73, 0x12, 0xf2, 0x01, 0x0a,
	0x20, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x41, 0x70,
	0x70, 0x12, 0x3f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65,
	0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x37, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x44,
	0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x41, 0x70, 0x70, 0x22, 0x54, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x4e, 0x1a, 0x2e, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x64,
	0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x70, 0x70, 0x73,
	0x2f, 0x2a, 0x7d, 0x3a, 0x1c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x5f, 0x61, 0x70,
	0x70, 0x32, 0xcd, 0x08, 0x0a, 0x2b, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x41, 0x70, 0x70,
	0x73, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x12, 0xf2, 0x01, 0x0a, 0x2a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70,
	0x65, 0x72, 0x73, 0x41, 0x70, 0x70, 0x73, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x12, 0x49, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76,
	0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x41, 0x70, 0x70, 0x73, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x22, 0x43, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3d, 0x2a, 0x3b, 0x2f, 0x76, 0x31, 0x2f, 0x7b,
	0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x2f,
	0x2a, 0x2f, 0x61, 0x70, 0x70, 0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x2f, 0x2a, 0x7d, 0x12, 0xec, 0x01, 0x0a, 0x27, 0x47, 0x65, 0x74, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c,
	0x6f, 0x70, 0x65, 0x72, 0x73, 0x41, 0x70, 0x70, 0x73, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x12, 0x46, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65,
	0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x41, 0x70, 0x70, 0x73, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x22, 0x43, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3d, 0x12, 0x3b, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e,
	0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x2a, 0x2f, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x2f, 0x2a,
	0x2f, 0x61, 0x70, 0x70, 0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x2f, 0x2a, 0x7d, 0x12, 0xf1, 0x01, 0x0a, 0x29, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c,
	0x6f, 0x70, 0x65, 0x72, 0x73, 0x41, 0x70, 0x70, 0x73, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x12, 0x48, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65,
	0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x41, 0x70, 0x70, 0x73, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x22, 0x43, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3d, 0x12, 0x3b, 0x2f, 0x76,
	0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f,
	0x70, 0x65, 0x72, 0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x70, 0x70, 0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x61,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0xc5, 0x02, 0x0a, 0x3f, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x41, 0x70, 0x70,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73,
	0x41, 0x70, 0x70, 0x73, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x5e, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76,
	0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x41, 0x70, 0x70, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44,
	0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x41, 0x70, 0x70, 0x73, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x22, 0x6c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x66, 0x22, 0x3b, 0x2f, 0x76, 0x31,
	0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72,
	0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x70, 0x70, 0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x2f, 0x2a, 0x7d, 0x3a, 0x27, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65,
	0x72, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x73, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x32, 0xd5, 0x0a, 0x0a, 0x25, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x41, 0x70, 0x70,
	0x73, 0x4b, 0x65, 0x79, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x89, 0x02, 0x0a, 0x24,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x41, 0x70, 0x70,
	0x73, 0x4b, 0x65, 0x79, 0x12, 0x43, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x41, 0x70, 0x70, 0x73, 0x4b,
	0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x41,
	0x70, 0x70, 0x4b, 0x65, 0x79, 0x22, 0x60, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x5a, 0x22, 0x35, 0x2f,
	0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x64, 0x65, 0x76, 0x65, 0x6c,
	0x6f, 0x70, 0x65, 0x72, 0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x70, 0x70, 0x73, 0x2f, 0x2a, 0x7d, 0x2f,
	0x6b, 0x65, 0x79, 0x73, 0x3a, 0x21, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x5f, 0x61,
	0x70, 0x70, 0x73, 0x5f, 0x6b, 0x65, 0x79, 0x12, 0xe6, 0x01, 0x0a, 0x24, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44,
	0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x41, 0x70, 0x70, 0x73, 0x4b, 0x65, 0x79,
	0x12, 0x43, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76,
	0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x41, 0x70, 0x70, 0x73, 0x4b, 0x65, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x56, 0x31, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x41, 0x70, 0x70, 0x4b, 0x65,
	0x79, 0x22, 0x3d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x37, 0x2a, 0x35, 0x2f, 0x76, 0x31, 0x2f, 0x7b,
	0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x2f,
	0x2a, 0x2f, 0x61, 0x70, 0x70, 0x73, 0x2f, 0x2a, 0x2f, 0x6b, 0x65, 0x79, 0x73, 0x2f, 0x2a, 0x7d,
	0x12, 0xe0, 0x01, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x41,
	0x70, 0x70, 0x73, 0x4b, 0x65, 0x79, 0x12, 0x40, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x41, 0x70, 0x70, 0x73, 0x4b, 0x65,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x56, 0x31, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x41, 0x70,
	0x70, 0x4b, 0x65, 0x79, 0x22, 0x3d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x37, 0x12, 0x35, 0x2f, 0x76,
	0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65,
	0x72, 0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x70, 0x70, 0x73, 0x2f, 0x2a, 0x2f, 0x6b, 0x65, 0x79, 0x73,
	0x2f, 0x2a, 0x7d, 0x12, 0xa9, 0x02, 0x0a, 0x34, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x44,
	0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x41, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c,
	0x6f, 0x70, 0x65, 0x72, 0x73, 0x41, 0x70, 0x70, 0x73, 0x4b, 0x65, 0x79, 0x12, 0x53, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x44, 0x65, 0x76,
	0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x41, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70,
	0x65, 0x72, 0x73, 0x41, 0x70, 0x70, 0x73, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x3a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x44, 0x65,
	0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x41, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x22, 0x60, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x5a, 0x1a, 0x35, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65,
	0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a,
	0x2f, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x70,
	0x70, 0x73, 0x2f, 0x2a, 0x2f, 0x6b, 0x65, 0x79, 0x73, 0x2f, 0x2a, 0x7d, 0x3a, 0x21, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x65,
	0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x73, 0x5f, 0x6b, 0x65, 0x79, 0x12,
	0xa7, 0x02, 0x0a, 0x33, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f,
	0x70, 0x65, 0x72, 0x41, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73,
	0x41, 0x70, 0x70, 0x73, 0x4b, 0x65, 0x79, 0x12, 0x52, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72,
	0x41, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x41, 0x70, 0x70,
	0x73, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65,
	0x72, 0x41, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x22, 0x60, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x5a, 0x22,
	0x35, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x64, 0x65, 0x76, 0x65, 0x6c,
	0x6f, 0x70, 0x65, 0x72, 0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x70, 0x70, 0x73, 0x2f, 0x2a, 0x2f, 0x6b,
	0x65, 0x79, 0x73, 0x2f, 0x2a, 0x7d, 0x3a, 0x21, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73,
	0x5f, 0x61, 0x70, 0x70, 0x73, 0x5f, 0x6b, 0x65, 0x79, 0x32, 0xef, 0x04, 0x0a, 0x30, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c,
	0x6f, 0x70, 0x65, 0x72, 0x73, 0x41, 0x70, 0x70, 0x73, 0x4b, 0x65, 0x79, 0x73, 0x41, 0x70, 0x69,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x8a,
	0x02, 0x0a, 0x2f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73,
	0x41, 0x70, 0x70, 0x73, 0x4b, 0x65, 0x79, 0x73, 0x41, 0x70, 0x69, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x12, 0x4e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44,
	0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x41, 0x70, 0x70, 0x73, 0x4b, 0x65, 0x79,
	0x73, 0x41, 0x70, 0x69, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x44,
	0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x41, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x22, 0x4b,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x45, 0x2a, 0x43, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d,
	0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f,
	0x2a, 0x2f, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x2f, 0x2a, 0x2f, 0x61,
	0x70, 0x70, 0x73, 0x2f, 0x2a, 0x2f, 0x6b, 0x65, 0x79, 0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x70, 0x69,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x2f, 0x2a, 0x7d, 0x12, 0xad, 0x02, 0x0a, 0x48,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x41,
	0x70, 0x70, 0x4b, 0x65, 0x79, 0x41, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65,
	0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x41, 0x70, 0x70, 0x73, 0x4b, 0x65, 0x79, 0x73, 0x41, 0x70,
	0x69, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x67, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65,
	0x72, 0x41, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x41, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65,
	0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x41, 0x70, 0x70, 0x73, 0x4b, 0x65, 0x79, 0x73,
	0x41, 0x70, 0x69, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x4b,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x45, 0x22, 0x43, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d,
	0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f,
	0x2a, 0x2f, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x2f, 0x2a, 0x2f, 0x61,
	0x70, 0x70, 0x73, 0x2f, 0x2a, 0x2f, 0x6b, 0x65, 0x79, 0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x70, 0x69,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x2f, 0x2a, 0x7d, 0x32, 0xd6, 0x02, 0x0a, 0x2b,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76,
	0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x41, 0x70, 0x70, 0x73, 0x4b, 0x65, 0x79, 0x73, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0xa6, 0x02, 0x0a, 0x2b,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x41, 0x70, 0x70,
	0x73, 0x4b, 0x65, 0x79, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x4a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65,
	0x72, 0x73, 0x41, 0x70, 0x70, 0x73, 0x4b, 0x65, 0x79, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x56, 0x31, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x41, 0x70, 0x70,
	0x4b, 0x65, 0x79, 0x22, 0x6f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x69, 0x22, 0x3c, 0x2f, 0x76, 0x31,
	0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70,
	0x65, 0x72, 0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x70, 0x70, 0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x6b, 0x65,
	0x79, 0x73, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x3a, 0x29, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70,
	0x65, 0x72, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x73, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x5f, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x32, 0x82, 0x08, 0x0a, 0x27, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x12, 0xe3, 0x01, 0x0a, 0x26, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65,
	0x72, 0x73, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x45, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65,
	0x72, 0x73, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x34, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x22, 0x3c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x36,
	0x2a, 0x34, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x64, 0x65, 0x76, 0x65,
	0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x2f, 0x2a, 0x7d, 0x12, 0xdd, 0x01, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c,
	0x6f, 0x70, 0x65, 0x72, 0x73, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x42,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65,
	0x72, 0x73, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x34, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x22, 0x3c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x36,
	0x12, 0x34, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x64, 0x65, 0x76, 0x65,
	0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x2f, 0x2a, 0x7d, 0x12, 0xe2, 0x01, 0x0a, 0x25, 0x4c, 0x69, 0x73, 0x74, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65,
	0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x12, 0x44, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c,
	0x6f, 0x70, 0x65, 0x72, 0x73, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x56, 0x31, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x22, 0x3c, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x36, 0x12, 0x34, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x2a, 0x2f, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x2f, 0x2a, 0x7d,
	0x2f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0xab, 0x02, 0x0a, 0x38,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x57, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65,
	0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72,
	0x73, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x34, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x22, 0x60, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x5a, 0x22,
	0x34, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x64, 0x65, 0x76, 0x65, 0x6c,
	0x6f, 0x70, 0x65, 0x72, 0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x2f, 0x2a, 0x7d, 0x3a, 0x22, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x5f,
	0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x32, 0xc0, 0x04, 0x0a, 0x24, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c,
	0x6f, 0x70, 0x65, 0x72, 0x73, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x12, 0x8a, 0x02, 0x0a, 0x24, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f,
	0x70, 0x65, 0x72, 0x73, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x43, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65,
	0x72, 0x73, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x3b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x44, 0x65, 0x76,
	0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x60, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x5a, 0x22, 0x36, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65,
	0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a,
	0x2f, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x2f, 0x2a, 0x2f, 0x62, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x7d, 0x3a, 0x61, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x3a, 0x20, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x64, 0x65, 0x76,
	0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12,
	0x8a, 0x02, 0x0a, 0x24, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72,
	0x73, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x43, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3b, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f,
	0x70, 0x65, 0x72, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x60, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x5a, 0x22, 0x36, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x64, 0x65,
	0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x2f, 0x2a, 0x2f, 0x62, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x7d, 0x3a, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x3a, 0x20, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f,
	0x70, 0x65, 0x72, 0x73, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x32, 0xf2, 0x08, 0x0a,
	0x2a, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65,
	0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x9f, 0x02, 0x0a, 0x29,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x48, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x40, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31,
	0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x66, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x60, 0x22, 0x37, 0x2f,
	0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x64, 0x65, 0x76, 0x65, 0x6c,
	0x6f, 0x70, 0x65, 0x72, 0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x3a, 0x25, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73,
	0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0xa6, 0x02,
	0x0a, 0x29, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x48, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65,
	0x72, 0x73, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x40, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x56, 0x31, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x6d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x67, 0x22,
	0x3e, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x64, 0x65, 0x76, 0x65, 0x6c,
	0x6f, 0x70, 0x65, 0x72, 0x73, 0x2f, 0x2a, 0x2f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x7d, 0x3a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x3a,
	0x25, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x64,
	0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0xf2, 0x01, 0x0a, 0x26, 0x47, 0x65, 0x74, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c,
	0x6f, 0x70, 0x65, 0x72, 0x73, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x45, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c,
	0x6f, 0x70, 0x65, 0x72, 0x73, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x40, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x56, 0x31, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3f, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x39, 0x12, 0x37, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x64, 0x65,
	0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x2f, 0x2a, 0x2f, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x7d, 0x12, 0x83, 0x02, 0x0a, 0x28,
	0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x47, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x4d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4c, 0x69,
	0x73, 0x74, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x3f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x39, 0x12, 0x37, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73,
	0x2f, 0x2a, 0x7d, 0x2f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x32, 0xb4, 0x07, 0x0a, 0x26, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0xe9, 0x01, 0x0a,
	0x25, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x44, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x6c, 0x6f, 0x6e, 0x67, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e,
	0x67, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x5b, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x55, 0x22, 0x30, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a,
	0x7d, 0x2f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x3a, 0x21, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x61, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0xc6, 0x01, 0x0a, 0x25, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x44, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x6c, 0x6f, 0x6e, 0x67, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x38, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x32, 0x2a,
	0x30, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a,
	0x7d, 0x12, 0xe0, 0x01, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x41, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x38, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x32, 0x12, 0x30, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e,
	0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x2f, 0x2a, 0x7d, 0x12, 0xf1, 0x01, 0x0a, 0x24, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x43, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x4a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4c,
	0x69, 0x73, 0x74, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x38,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x32, 0x12, 0x30, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x32, 0xed, 0x09, 0x0a, 0x1c, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0xc0, 0x01, 0x0a, 0x1b, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x45, 0x6e, 0x76, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x3a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x6c,
	0x6f, 0x6e, 0x67, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x46, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x40, 0x22, 0x26, 0x2f, 0x76,
	0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x65, 0x6e, 0x76, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x3a, 0x16, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x5f, 0x65, 0x6e, 0x76, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0xa8, 0x01, 0x0a,
	0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x3a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x6c, 0x6f, 0x6e, 0x67, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28, 0x2a,
	0x26, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x76, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x2f, 0x2a, 0x7d, 0x12, 0xc0, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x12, 0x37, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e,
	0x76, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3b, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x2e, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x28, 0x12, 0x26, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e,
	0x76, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2f, 0x2a, 0x7d, 0x12, 0x86, 0x02, 0x0a, 0x2d, 0x47,
	0x65, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x4c, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65,
	0x64, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x41, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x44, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x3e, 0x12, 0x3c, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65,
	0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a,
	0x2f, 0x65, 0x6e, 0x76, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2f, 0x2a, 0x2f, 0x64, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x65, 0x64, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x7d, 0x12, 0xd1, 0x01, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x12, 0x39, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x48, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28, 0x12,
	0x26, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x65, 0x6e,
	0x76, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0xbe, 0x01, 0x0a, 0x1a, 0x50, 0x61, 0x74, 0x63,
	0x68, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e,
	0x76, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x39, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x61, 0x74, 0x63, 0x68, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x45, 0x6e, 0x76, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x6c, 0x6f, 0x6e, 0x67, 0x72,
	0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x46, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x40, 0x32, 0x26, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e,
	0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x76, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2f, 0x2a, 0x7d,
	0x3a, 0x16, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f,
	0x65, 0x6e, 0x76, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x32, 0xde, 0x07, 0x0a, 0x27, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x12, 0xf0, 0x01, 0x0a, 0x26, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x45, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x6c, 0x6f, 0x6e, 0x67, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x60, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x5a, 0x22, 0x34, 0x2f,
	0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x76, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x3a, 0x22, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x5f, 0x65, 0x6e, 0x76, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x5f, 0x61, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0xcc, 0x01, 0x0a, 0x26, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45,
	0x6e, 0x76, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x45, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45,
	0x6e, 0x76, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x6c, 0x6f, 0x6e, 0x67, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x36,
	0x2a, 0x34, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x76, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x7d, 0x12, 0xee, 0x01, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x42,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x45, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x45,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41,
	0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x3c, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x36, 0x12, 0x34, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x76,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x7d, 0x12, 0xff, 0x01, 0x0a, 0x25, 0x4c, 0x69, 0x73, 0x74,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x44, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x52, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x56, 0x31, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3c, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x36, 0x12, 0x34, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a,
	0x2f, 0x65, 0x6e, 0x76, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x61, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x32, 0xa6, 0x20, 0x0a, 0x1f, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0xcc, 0x01,
	0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x3d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x6c, 0x6f, 0x6e, 0x67, 0x72, 0x75, 0x6e,
	0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x4c,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x46, 0x22, 0x29, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x3a, 0x19, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0xb1, 0x01, 0x0a,
	0x1e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x3d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x6c, 0x6f, 0x6e, 0x67, 0x72, 0x75, 0x6e, 0x6e,
	0x69, 0x6e, 0x67, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x31, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x2a, 0x29, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65,
	0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a,
	0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x7d,
	0x12, 0xc4, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x3a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x22, 0x31, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x12, 0x29, 0x2f, 0x76,
	0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x7d, 0x12, 0xea, 0x01, 0x0a, 0x27, 0x47, 0x65, 0x74, 0x41,
	0x64, 0x64, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x46, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x64, 0x64, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x64, 0x64, 0x6f, 0x6e, 0x73, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x22, 0x3e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x38, 0x12, 0x36, 0x2f, 0x76,
	0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x64, 0x64, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x7d, 0x12, 0x9a, 0x02, 0x0a, 0x33, 0x47, 0x65, 0x74, 0x41, 0x70, 0x69, 0x53,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x52, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x69, 0x53, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x43, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x70, 0x69,
	0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x4a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x44, 0x12, 0x42, 0x2f,
	0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x70, 0x69, 0x53, 0x65, 0x63, 0x75, 0x72,
	0x69, 0x74, 0x79, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x7d, 0x12, 0xde, 0x01, 0x0a, 0x24, 0x47, 0x65, 0x74, 0x44, 0x65, 0x62, 0x75, 0x67, 0x6d, 0x61,
	0x73, 0x6b, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x43, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x62, 0x75, 0x67, 0x6d, 0x61, 0x73, 0x6b,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x34, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x44, 0x65, 0x62, 0x75,
	0x67, 0x4d, 0x61, 0x73, 0x6b, 0x22, 0x3b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x35, 0x12, 0x33, 0x2f,
	0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x2f, 0x64, 0x65, 0x62, 0x75, 0x67, 0x6d, 0x61, 0x73,
	0x6b, 0x7d, 0x12, 0xf5, 0x01, 0x0a, 0x29, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x65, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x48, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3c, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x40, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3a,
	0x12, 0x38, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x2f, 0x64, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x7d, 0x12, 0x8e, 0x02, 0x0a, 0x30, 0x47,
	0x65, 0x74, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x4f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x40, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x53, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x22, 0x47, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x41, 0x12, 0x3f, 0x2f, 0x76, 0x31, 0x2f,
	0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x2f, 0x2a, 0x2f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x7d, 0x12, 0xe6, 0x01, 0x0a, 0x26,
	0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x45, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x54, 0x72, 0x61, 0x63, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x3d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x37, 0x12, 0x35, 0x2f,
	0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x2f, 0x74, 0x72, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x7d, 0x12, 0xe2, 0x01, 0x0a, 0x29, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x45,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x48, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x69,
	0x66, 0x79, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x6c, 0x6f, 0x6e, 0x67, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e,
	0x67, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x4c, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x46, 0x32, 0x29, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x65,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x7d, 0x3a, 0x19,
	0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x65, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0xdd, 0x01, 0x0a, 0x21, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x40, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x37, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3d, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x37, 0x22, 0x35, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d,
	0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f,
	0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x7d, 0x3a,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0xf2, 0x01, 0x0a, 0x23, 0x55, 0x6e,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x42, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x5a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x54, 0x22, 0x37, 0x2f, 0x76, 0x31, 0x2f,
	0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x7d, 0x3a, 0x75, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x3a, 0x19, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0xe5,
	0x01, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x3d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x36, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x45, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x4c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x46,
	0x1a, 0x29, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x7d, 0x3a, 0x19, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0xff, 0x01, 0x0a, 0x27, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x44, 0x65, 0x62, 0x75, 0x67, 0x6d, 0x61, 0x73, 0x6b, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x46, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x44, 0x65, 0x62, 0x75, 0x67, 0x6d, 0x61, 0x73, 0x6b, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x44, 0x65, 0x62, 0x75, 0x67, 0x4d, 0x61, 0x73, 0x6b,
	0x22, 0x56, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x50, 0x32, 0x33, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e,
	0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x2f, 0x2a, 0x2f, 0x64, 0x65, 0x62, 0x75, 0x67, 0x6d, 0x61, 0x73, 0x6b, 0x7d, 0x3a, 0x19, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x65, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0xfb, 0x01, 0x0a, 0x29, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x48, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x36, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x45, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x4c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x46,
	0x22, 0x29, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x7d, 0x3a, 0x19, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0xaf, 0x02, 0x0a, 0x33, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x52,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65,
	0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x40, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x53,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x22, 0x62, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x5c, 0x32, 0x3f, 0x2f, 0x76,
	0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x2f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x7d, 0x3a, 0x19, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x65, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x87, 0x02, 0x0a, 0x29, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x48, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x36, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x54, 0x72, 0x61,
	0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x58, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x52,
	0x32, 0x35, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x2f, 0x74, 0x72, 0x61, 0x63, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x7d, 0x3a, 0x19, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x32, 0xdd, 0x02, 0x0a, 0x2b, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x41, 0x64, 0x64, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x12, 0xad, 0x02, 0x0a, 0x37, 0x53, 0x65, 0x74, 0x41, 0x64, 0x64, 0x6f, 0x6e, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x41, 0x64, 0x64, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x56,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x41, 0x64, 0x64, 0x6f, 0x6e,
	0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x41, 0x64, 0x64, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x6c, 0x6f, 0x6e, 0x67, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x7b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x75, 0x22, 0x49, 0x2f,
	0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x64, 0x64, 0x6f, 0x6e, 0x73, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x7d, 0x3a, 0x73, 0x65, 0x74, 0x41, 0x64, 0x64, 0x6f, 0x6e, 0x45, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x3a, 0x28, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x5f, 0x61, 0x64, 0x64, 0x6f, 0x6e, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x32, 0x2a, 0x0a, 0x28, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x41,
	0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x32, 0xb8,
	0x02, 0x0a, 0x2d, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x41, 0x6e, 0x61, 0x6c,
	0x79, 0x74, 0x69, 0x63, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x12, 0x86, 0x02, 0x0a, 0x32, 0x47, 0x65, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x76, 0x32,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69,
	0x63, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x51, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x76, 0x32, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x22, 0x4a, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x44, 0x12, 0x42, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65,
	0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a,
	0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x2f,
	0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x76, 0x32, 0x7d, 0x32, 0xd7, 0x06, 0x0a, 0x2f, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73,
	0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0xa6, 0x02,
	0x0a, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74,
	0x12, 0x4d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69,
	0x63, 0x73, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x31, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x45, 0x78, 0x70, 0x6f,
	0x72, 0x74, 0x22, 0x72, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x6c, 0x22, 0x3d, 0x2f, 0x76, 0x31, 0x2f,
	0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63,
	0x73, 0x2f, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x3a, 0x2b, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x5f,
	0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x12, 0xf3, 0x01, 0x0a, 0x2b, 0x47, 0x65, 0x74, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73,
	0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x4a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x41, 0x6e, 0x61, 0x6c,
	0x79, 0x74, 0x69, 0x63, 0x73, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x31, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x45,
	0x78, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x45, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3f, 0x12, 0x3d, 0x2f,
	0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63,
	0x73, 0x2f, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2f, 0x2a, 0x7d, 0x12, 0x84, 0x02, 0x0a,
	0x2d, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x41, 0x6e,
	0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x4c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x45, 0x78,
	0x70, 0x6f, 0x72, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3e, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x78, 0x70,
	0x6f, 0x72, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x45, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x3f, 0x12, 0x3d, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f,
	0x2a, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a,
	0x7d, 0x2f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2f, 0x65, 0x78, 0x70, 0x6f,
	0x72, 0x74, 0x73, 0x32, 0x25, 0x0a, 0x23, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x41, 0x70, 0x69, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x32, 0xba, 0x02, 0x0a, 0x2e, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x41, 0x70, 0x69, 0x73, 0x44, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x87, 0x02,
	0x0a, 0x2c, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x41,
	0x70, 0x69, 0x73, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x4b,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x41, 0x70, 0x69, 0x73, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x42, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x46, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x40, 0x12, 0x3e, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x64, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x32, 0xc7, 0x06, 0x0a, 0x2c, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x41, 0x70, 0x69, 0x73, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x82, 0x02, 0x0a, 0x2b, 0x44, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x41, 0x70, 0x69, 0x73,
	0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x4a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x41, 0x70, 0x69, 0x73, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56,
	0x31, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x50, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x4a, 0x22, 0x48, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x65,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x70,
	0x69, 0x73, 0x2f, 0x2a, 0x2f, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a,
	0x7d, 0x2f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x92, 0x02,
	0x0a, 0x33, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x41, 0x70, 0x69, 0x73, 0x52, 0x65, 0x76,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x52, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x41, 0x70, 0x69, 0x73, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x22, 0x50, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x4a, 0x12, 0x48, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e,
	0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x2f, 0x2a, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x2a, 0x2f, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x12, 0xfc, 0x01, 0x0a, 0x2d, 0x55, 0x6e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x41, 0x70, 0x69, 0x73, 0x52, 0x65, 0x76, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x4c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e,
	0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x41,
	0x70, 0x69, 0x73, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x50, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x4a, 0x2a, 0x48, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61,
	0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f,
	0x2a, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x2a, 0x2f, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x32, 0x8f, 0x0a, 0x0a, 0x39, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x41,
	0x70, 0x69, 0x73, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x62, 0x75,
	0x67, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12,
	0xdc, 0x02, 0x0a, 0x38, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x41, 0x70, 0x69, 0x73, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x44, 0x65, 0x62, 0x75, 0x67, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x57, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x41, 0x70, 0x69, 0x73, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x44, 0x65, 0x62, 0x75, 0x67, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x56, 0x31, 0x44, 0x65, 0x62, 0x75, 0x67, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x8d,
	0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x86, 0x01, 0x22, 0x4c, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x2a, 0x2f, 0x72, 0x65, 0x76, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x64, 0x65, 0x62, 0x75, 0x67, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x3a, 0x36, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x5f, 0x61, 0x70, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x5f, 0x64, 0x65, 0x62, 0x75, 0x67, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0xa3,
	0x02, 0x0a, 0x3c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x41, 0x70, 0x69, 0x73, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x44, 0x65, 0x62, 0x75, 0x67, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x5b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x41, 0x70, 0x69, 0x73,
	0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x62, 0x75, 0x67, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x59, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x53, 0x2a, 0x51, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x70, 0x69, 0x73,
	0x2f, 0x2a, 0x2f, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x64,
	0x65, 0x62, 0x75, 0x67, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x7d, 0x2f,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x9c, 0x02, 0x0a, 0x35, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x41, 0x70, 0x69, 0x73, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x44, 0x65, 0x62, 0x75, 0x67, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x54,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x41, 0x70, 0x69, 0x73, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x44, 0x65, 0x62, 0x75, 0x67, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56,
	0x31, 0x44, 0x65, 0x62, 0x75, 0x67, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x54, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x4e, 0x12, 0x4c, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65,
	0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a,
	0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x2f,
	0x61, 0x70, 0x69, 0x73, 0x2f, 0x2a, 0x2f, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x2a, 0x2f, 0x64, 0x65, 0x62, 0x75, 0x67, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x2a, 0x7d, 0x12, 0xad, 0x02, 0x0a, 0x37, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x41, 0x70, 0x69, 0x73, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x44, 0x65, 0x62, 0x75, 0x67, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x56, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x41, 0x70, 0x69, 0x73, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x44, 0x65, 0x62, 0x75, 0x67, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x44, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x56, 0x31, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x62, 0x75, 0x67, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x54, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x4e, 0x12, 0x4c, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f,
	0x2a, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x2a, 0x2f, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x64, 0x65, 0x62, 0x75, 0x67, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x32, 0xfa, 0x02, 0x0a, 0x3d, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x41, 0x70, 0x69, 0x73, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65,
	0x62, 0x75, 0x67, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x61, 0x74, 0x61, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0xb8, 0x02, 0x0a, 0x3a, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x41, 0x70, 0x69, 0x73, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x44, 0x65, 0x62, 0x75, 0x67, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x59, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x41, 0x70, 0x69, 0x73, 0x52, 0x65,
	0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x62, 0x75, 0x67, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x42, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x44, 0x65, 0x62, 0x75,
	0x67, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x5b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x55, 0x12, 0x53, 0x2f, 0x76, 0x31,
	0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x2a, 0x2f, 0x72, 0x65, 0x76,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x64, 0x65, 0x62, 0x75, 0x67, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x2a, 0x7d,
	0x32, 0x93, 0x06, 0x0a, 0x37, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x41, 0x70,
	0x69, 0x73, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0xe7, 0x02, 0x0a,
	0x4a, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x41, 0x70, 0x69, 0x73, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x69, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x41, 0x70, 0x69, 0x73, 0x52, 0x65, 0x76, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x41, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x56, 0x31, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x6b, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x65, 0x22, 0x63, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x70, 0x69, 0x73,
	0x2f, 0x2a, 0x2f, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x7d, 0x2f,
	0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x3a, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0xed, 0x02, 0x0a, 0x4c, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x41, 0x70, 0x69, 0x73, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x6b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x41, 0x70, 0x69, 0x73, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x41, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56,
	0x31, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x6d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x67, 0x22,
	0x65, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x2a,
	0x2f, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x64, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x3a, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x32, 0x82, 0x11, 0x0a, 0x31, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x99, 0x02, 0x0a,
	0x30, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x4f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x6c, 0x6f, 0x6e, 0x67,
	0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x75, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x6f, 0x22, 0x3e, 0x2f, 0x76, 0x31, 0x2f, 0x7b,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x44, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x3a, 0x2d, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x5f, 0x64, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0xf8, 0x01, 0x0a, 0x30, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x41, 0x72, 0x63, 0x68,
	0x69, 0x76, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x4f, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x44, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x46, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x40, 0x2a, 0x3e, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x65,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x72,
	0x63, 0x68, 0x69, 0x76, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x2f, 0x2a, 0x7d, 0x12, 0xf2, 0x02, 0x0a, 0x3d, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x5c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55,
	0x72, 0x6c, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x41, 0x72, 0x63, 0x68, 0x69,
	0x76, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x46, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x55, 0x72, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x8a, 0x01, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x83, 0x01, 0x22, 0x52, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65,
	0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a,
	0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x2f,
	0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x2f, 0x2a, 0x7d, 0x3a, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x44, 0x6f,
	0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x3a, 0x2d, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x5f, 0x64, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0xea, 0x02, 0x0a, 0x3b, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x44, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x5a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x55, 0x72, 0x6c, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x41, 0x72, 0x63, 0x68,
	0x69, 0x76, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x44, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56,
	0x31, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x55,
	0x72, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x88, 0x01, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x81, 0x01, 0x22, 0x50, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f,
	0x2a, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a,
	0x7d, 0x2f, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x3a, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x3a, 0x2d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x5f, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x5f, 0x64, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x83, 0x02, 0x0a, 0x2d, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x44, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x4c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x41, 0x72, 0x63,
	0x68, 0x69, 0x76, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x56, 0x31, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x22, 0x46, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x40, 0x12, 0x3e, 0x2f, 0x76, 0x31,
	0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x44, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x7d, 0x12, 0x94, 0x02, 0x0a, 0x2f,
	0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x41, 0x72, 0x63,
	0x68, 0x69, 0x76, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x4e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x44, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x49, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4c, 0x69, 0x73, 0x74,
	0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x46, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x40, 0x12, 0x3e, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d,
	0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f,
	0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x7d, 0x2f,
	0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x12, 0xb6, 0x02, 0x0a, 0x2f, 0x50, 0x61, 0x74, 0x63, 0x68, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x44, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x4e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x61, 0x74, 0x63, 0x68, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x41, 0x72,
	0x63, 0x68, 0x69, 0x76, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x56, 0x31, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x22, 0x75, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x6f, 0x32, 0x3e, 0x2f, 0x76,
	0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x44, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x7d, 0x3a, 0x2d, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x65, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65,
	0x5f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x32, 0xfe, 0x01, 0x0a, 0x25,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x43, 0x61, 0x63, 0x68, 0x65, 0x73, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0xd4, 0x01, 0x0a, 0x24, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x43,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x3a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x34, 0x2a, 0x32, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e,
	0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x2f, 0x2a, 0x2f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x73, 0x2f, 0x2a, 0x7d, 0x32, 0xa7, 0x02, 0x0a,
	0x2a, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0xf8, 0x01, 0x0a, 0x28,
	0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x44, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x47, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x42, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4c, 0x69,
	0x73, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x39, 0x12, 0x37, 0x2f,
	0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x64, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x32, 0xd5, 0x06, 0x0a, 0x28, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x68, 0x6f, 0x6f, 0x6b, 0x73, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x12, 0xb2, 0x02, 0x0a, 0x3b, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x64, 0x46, 0x6c, 0x6f, 0x77, 0x54, 0x6f, 0x46, 0x6c, 0x6f, 0x77, 0x48, 0x6f,
	0x6f, 0x6b, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x68,
	0x6f, 0x6f, 0x6b, 0x12, 0x5a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x46, 0x6c, 0x6f, 0x77, 0x54, 0x6f, 0x46,
	0x6c, 0x6f, 0x77, 0x48, 0x6f, 0x6f, 0x6b, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x46, 0x6c, 0x6f, 0x77, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x33, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x46, 0x6c, 0x6f, 0x77,
	0x48, 0x6f, 0x6f, 0x6b, 0x22, 0x62, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x5c, 0x1a, 0x35, 0x2f, 0x76,
	0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x2f, 0x66, 0x6c, 0x6f, 0x77, 0x68, 0x6f, 0x6f, 0x6b, 0x73,
	0x2f, 0x2a, 0x7d, 0x3a, 0x23, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f,
	0x66, 0x6c, 0x6f, 0x77, 0x68, 0x6f, 0x6f, 0x6b, 0x12, 0x91, 0x02, 0x0a, 0x3d, 0x44, 0x65, 0x74,
	0x61, 0x63, 0x68, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x46, 0x6c, 0x6f, 0x77, 0x46, 0x72, 0x6f,
	0x6d, 0x46, 0x6c, 0x6f, 0x77, 0x48, 0x6f, 0x6f, 0x6b, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x68, 0x6f, 0x6f, 0x6b, 0x12, 0x5c, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x63, 0x68, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64,
	0x46, 0x6c, 0x6f, 0x77, 0x46, 0x72, 0x6f, 0x6d, 0x46, 0x6c, 0x6f, 0x77, 0x48, 0x6f, 0x6f, 0x6b,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x68, 0x6f, 0x6f,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x56, 0x31, 0x46, 0x6c, 0x6f, 0x77, 0x48, 0x6f, 0x6f, 0x6b, 0x22, 0x3d, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x37, 0x2a, 0x35, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65,
	0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a,
	0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x2f,
	0x66, 0x6c, 0x6f, 0x77, 0x68, 0x6f, 0x6f, 0x6b, 0x73, 0x2f, 0x2a, 0x7d, 0x12, 0xdf, 0x01, 0x0a,
	0x24, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x46, 0x6c, 0x6f,
	0x77, 0x68, 0x6f, 0x6f, 0x6b, 0x12, 0x43, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x68,
	0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x46, 0x6c, 0x6f, 0x77, 0x48, 0x6f, 0x6f, 0x6b, 0x22,
	0x3d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x37, 0x12, 0x35, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61,
	0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f,
	0x2a, 0x2f, 0x66, 0x6c, 0x6f, 0x77, 0x68, 0x6f, 0x6f, 0x6b, 0x73, 0x2f, 0x2a, 0x7d, 0x32, 0x81,
	0x06, 0x0a, 0x28, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4b, 0x65, 0x79, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x8a, 0x02, 0x0a, 0x27,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4b,
	0x65, 0x79, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x46, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x4b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x33, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4b, 0x65, 0x79, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x22, 0x62, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x5c, 0x22, 0x35, 0x2f, 0x76,
	0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x6b, 0x65, 0x79, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x73, 0x3a, 0x23, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f,
	0x6b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x12, 0xe5, 0x01, 0x0a, 0x27, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4b, 0x65, 0x79, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x12, 0x46, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4b, 0x65, 0x79,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x22, 0x3d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x37, 0x2a, 0x35, 0x2f, 0x76, 0x31, 0x2f, 0x7b,
	0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x2f, 0x2a, 0x2f, 0x6b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x2f, 0x2a, 0x7d,
	0x12, 0xdf, 0x01, 0x0a, 0x24, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x4b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x43, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4b,
	0x65, 0x79, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4b, 0x65, 0x79, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x22, 0x3d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x37, 0x12, 0x35, 0x2f, 0x76, 0x31,
	0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x2f, 0x6b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x2f,
	0x2a, 0x7d, 0x32, 0xff, 0x0c, 0x0a, 0x2f, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x4b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x65, 0x73,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0xa7, 0x02, 0x0a, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4b, 0x65, 0x79, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x73, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x65, 0x12, 0x4d, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x4b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x41, 0x6c, 0x69, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x22, 0x74, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x6e, 0x22, 0x3f, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d,
	0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f,
	0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x2f, 0x6b,
	0x65, 0x79, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x61, 0x6c, 0x69, 0x61,
	0x73, 0x65, 0x73, 0x3a, 0x2b, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f,
	0x6b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x65,
	0x12, 0xf1, 0x01, 0x0a, 0x2b, 0x43, 0x73, 0x72, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x4b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x65,
	0x12, 0x4a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x73, 0x72, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x41,
	0x6c, 0x69, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x41, 0x70, 0x69, 0x48,
	0x74, 0x74, 0x70, 0x42, 0x6f, 0x64, 0x79, 0x22, 0x4b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x45, 0x12,
	0x43, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x2f, 0x6b, 0x65, 0x79, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x65, 0x73, 0x2f, 0x2a, 0x7d,
	0x2f, 0x63, 0x73, 0x72, 0x12, 0xfa, 0x01, 0x0a, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x73, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x65, 0x12, 0x4d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x4b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x56, 0x31, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x22, 0x47, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x41,
	0x2a, 0x3f, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x2f, 0x6b, 0x65, 0x79, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x65, 0x73, 0x2f, 0x2a,
	0x7d, 0x12, 0xf4, 0x01, 0x0a, 0x2b, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x4b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x41, 0x6c, 0x69, 0x61, 0x73,
	0x65, 0x12, 0x4a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x73,
	0x41, 0x6c, 0x69, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x22,
	0x47, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x41, 0x12, 0x3f, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61,
	0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f,
	0x2a, 0x2f, 0x6b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x6c,
	0x69, 0x61, 0x73, 0x65, 0x73, 0x2f, 0x2a, 0x7d, 0x12, 0x8f, 0x02, 0x0a, 0x36, 0x47, 0x65, 0x74,
	0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x4b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x41, 0x6c, 0x69,
	0x61, 0x73, 0x65, 0x12, 0x55, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x4b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x41, 0x6c, 0x69,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x41, 0x70, 0x69, 0x48, 0x74, 0x74,
	0x70, 0x42, 0x6f, 0x64, 0x79, 0x22, 0x53, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x4d, 0x12, 0x4b, 0x2f,
	0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x2f, 0x6b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x65, 0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x63,
	0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0xa7, 0x02, 0x0a, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4b, 0x65,
	0x79, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x65, 0x12, 0x4d, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x41,
	0x6c, 0x69, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x22, 0x74,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x6e, 0x1a, 0x3f, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d,
	0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f,
	0x2a, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a,
	0x2f, 0x6b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x6c, 0x69,
	0x61, 0x73, 0x65, 0x73, 0x2f, 0x2a, 0x7d, 0x3a, 0x2b, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x5f, 0x61, 0x6c,
	0x69, 0x61, 0x73, 0x65, 0x32, 0xbd, 0x04, 0x0a, 0x2b, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x4b, 0x65, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x6d, 0x61, 0x70, 0x73, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x12, 0x99, 0x02, 0x0a, 0x2a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4b, 0x65, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x6d, 0x61, 0x70, 0x12, 0x49, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4b, 0x65, 0x79, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x6d, 0x61, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4b, 0x65, 0x79, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x4d, 0x61, 0x70, 0x22, 0x68, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x62, 0x22, 0x38,
	0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x6b, 0x65, 0x79, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x6d, 0x61, 0x70, 0x73, 0x3a, 0x26, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x5f, 0x6b, 0x65, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x6d, 0x61, 0x70,
	0x12, 0xf1, 0x01, 0x0a, 0x2a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x4b, 0x65, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x6d, 0x61, 0x70, 0x12,
	0x49, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4b, 0x65, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x6d, 0x61, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4d,
	0x61, 0x70, 0x22, 0x40, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3a, 0x2a, 0x38, 0x2f, 0x76, 0x31, 0x2f,
	0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x2f, 0x2a, 0x2f, 0x6b, 0x65, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x6d, 0x61, 0x70,
	0x73, 0x2f, 0x2a, 0x7d, 0x32, 0xd6, 0x0b, 0x0a, 0x32, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x4b, 0x65, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x6d, 0x61, 0x70, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x69, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0xb8, 0x02, 0x0a, 0x30,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4b,
	0x65, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x6d, 0x61, 0x70, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x4f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4b, 0x65, 0x79, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x6d, 0x61, 0x70, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x38, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4b, 0x65,
	0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x79, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x73, 0x22, 0x42, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a,
	0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x2f,
	0x6b, 0x65, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x6d, 0x61, 0x70, 0x73, 0x2f, 0x2a, 0x7d, 0x2f,
	0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x3a, 0x2d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x5f, 0x6b, 0x65, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x6d, 0x61, 0x70, 0x73,
	0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x89, 0x02, 0x0a, 0x30, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4b, 0x65, 0x79, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x6d, 0x61, 0x70, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x4f, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x4b, 0x65, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x6d, 0x61, 0x70, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x4a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x44, 0x2a, 0x42,
	0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x2f, 0x6b, 0x65, 0x79, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x6d, 0x61, 0x70, 0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x2f,
	0x2a, 0x7d, 0x12, 0x83, 0x02, 0x0a, 0x2d, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x4b, 0x65, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x6d, 0x61, 0x70, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x4c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4b, 0x65, 0x79, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x6d, 0x61, 0x70, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x38, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4b,
	0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x4a, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x44, 0x12, 0x42, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d,
	0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f,
	0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x2f, 0x6b,
	0x65, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x6d, 0x61, 0x70, 0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e,
	0x74, 0x72, 0x69, 0x65, 0x73, 0x2f, 0x2a, 0x7d, 0x12, 0x97, 0x02, 0x0a, 0x30, 0x4c, 0x69, 0x73,
	0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4b, 0x65, 0x79, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x6d, 0x61, 0x70, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x4f, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x4b, 0x65, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x6d, 0x61, 0x70, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x46,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4c, 0x69, 0x73, 0x74, 0x4b,
	0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x44, 0x12, 0x42,
	0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x2f, 0x6b, 0x65, 0x79, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x6d, 0x61, 0x70, 0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x65, 0x6e, 0x74, 0x72, 0x69,
	0x65, 0x73, 0x12, 0xb8, 0x02, 0x0a, 0x30, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4b, 0x65, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x6d, 0x61,
	0x70, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x4f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x4b, 0x65, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x6d, 0x61, 0x70, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x56, 0x31, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x22, 0x79, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x73, 0x1a, 0x42, 0x2f, 0x76, 0x31, 0x2f,
	0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x2f, 0x2a, 0x2f, 0x6b, 0x65, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x6d, 0x61, 0x70,
	0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x2f, 0x2a, 0x7d, 0x3a, 0x2d,
	0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x65, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x6b, 0x65, 0x79, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x6d, 0x61, 0x70, 0x73, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x32, 0xa7, 0x02,
	0x0a, 0x2d, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4f, 0x70, 0x74, 0x69, 0x6d,
	0x69, 0x7a, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12,
	0xf5, 0x01, 0x0a, 0x29, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x4f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x12, 0x48, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x56, 0x31, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x22, 0x43, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3d, 0x12, 0x3b, 0x2f, 0x76, 0x31, 0x2f,
	0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x2f, 0x2a, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x2f, 0x2e, 0x2a, 0x7d, 0x32, 0xe7, 0x09, 0x0a, 0x26, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x51, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x12, 0x81, 0x02, 0x0a, 0x24, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x43, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x35, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x73, 0x79,
	0x6e, 0x63, 0x51, 0x75, 0x65, 0x72, 0x79, 0x22, 0x5d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x57, 0x22,
	0x33, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x71, 0x75, 0x65,
	0x72, 0x69, 0x65, 0x73, 0x3a, 0x20, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0xd9, 0x01, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x40, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x73, 0x79, 0x6e, 0x63,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x22, 0x3b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x35, 0x12, 0x33, 0x2f,
	0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x2f,
	0x2a, 0x7d, 0x12, 0xe0, 0x01, 0x0a, 0x27, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x46,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x41, 0x70, 0x69, 0x48, 0x74, 0x74, 0x70, 0x42, 0x6f, 0x64,
	0x79, 0x22, 0x42, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3c, 0x12, 0x3a, 0x2f, 0x76, 0x31, 0x2f, 0x7b,
	0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x2f, 0x2a, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x2f, 0x2a, 0x2f, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x7d, 0x12, 0x89, 0x02, 0x0a, 0x2a, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x75, 0x72, 0x6c, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x12, 0x49, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x75, 0x72, 0x6c, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x49, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x47, 0x65, 0x74, 0x41,
	0x73, 0x79, 0x6e, 0x63, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x55,
	0x72, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x45, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x3f, 0x12, 0x3d, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x2f, 0x71, 0x75, 0x65,
	0x72, 0x69, 0x65, 0x73, 0x2f, 0x2a, 0x2f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x75, 0x72, 0x6c,
	0x7d, 0x12, 0xed, 0x01, 0x0a, 0x24, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x51, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0x43, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x51, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x43, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4c, 0x69, 0x73, 0x74,
	0x41, 0x73, 0x79, 0x6e, 0x63, 0x51, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x35, 0x12, 0x33, 0x2f, 0x76,
	0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65,
	0x73, 0x32, 0xa1, 0x08, 0x0a, 0x29, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12,
	0x8f, 0x02, 0x0a, 0x28, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x47, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x56, 0x31, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x22, 0x64, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x5e, 0x22, 0x36, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a,
	0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x7d,
	0x2f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x3a, 0x24, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x12, 0xe9, 0x01, 0x0a, 0x28, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x47,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x56, 0x31, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x22, 0x3e, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x38, 0x2a, 0x36, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65,
	0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a,
	0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x2f,
	0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x2f, 0x2a, 0x7d, 0x12, 0xe3, 0x01,
	0x0a, 0x25, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x44, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x22, 0x3e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x38, 0x12, 0x36, 0x2f, 0x76, 0x31,
	0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x2f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73,
	0x2f, 0x2a, 0x7d, 0x12, 0x8f, 0x02, 0x0a, 0x28, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x12, 0x47, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x22,
	0x64, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x5e, 0x1a, 0x36, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61,
	0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f,
	0x2a, 0x2f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x2f, 0x2a, 0x7d, 0x3a,
	0x24, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x65,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x32, 0xb7, 0x0d, 0x0a, 0x2c, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x66, 0x69, 0x6c, 0x65, 0x73,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x9e, 0x02, 0x0a, 0x2b, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x4a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x37, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x22, 0x6a, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x64, 0x22, 0x39, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a,
	0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x7d,
	0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x3a, 0x27,
	0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x65, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x83, 0x02, 0x0a, 0x2b, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x4a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x22, 0x4f, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x49, 0x2a, 0x47, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f,
	0x2a, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a,
	0x7d, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2f,
	0x7b, 0x74, 0x79, 0x70, 0x65, 0x7d, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x12, 0xef, 0x01,
	0x0a, 0x28, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x47, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x41, 0x70, 0x69, 0x48, 0x74, 0x74, 0x70, 0x42, 0x6f, 0x64, 0x79, 0x22, 0x4f,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x49, 0x12, 0x47, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x2f, 0x2a, 0x7d, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x66, 0x69, 0x6c, 0x65,
	0x73, 0x2f, 0x7b, 0x74, 0x79, 0x70, 0x65, 0x7d, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x12,
	0x87, 0x02, 0x0a, 0x2a, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x49,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x66, 0x69, 0x6c,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4b, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x41, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3b, 0x12, 0x39,
	0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x12, 0xb4, 0x02, 0x0a, 0x3d, 0x4c, 0x69,
	0x73, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x5c, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x66, 0x69,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4b, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x48, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x42, 0x12, 0x40,
	0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2f, 0x7b, 0x74, 0x79, 0x70, 0x65, 0x7d,
	0x12, 0xac, 0x02, 0x0a, 0x2b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x66, 0x69, 0x6c, 0x65,
	0x12, 0x4a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x46, 0x69, 0x6c, 0x65, 0x22, 0x78, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x72, 0x1a, 0x47, 0x2f,
	0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2f, 0x7b, 0x74, 0x79, 0x70, 0x65, 0x7d, 0x2f,
	0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x3a, 0x27, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x66, 0x69, 0x6c, 0x65, 0x32,
	0xca, 0x0b, 0x0a, 0x2e, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x12, 0xa9, 0x02, 0x0a, 0x2d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x39, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x53,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x6f, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x69, 0x22, 0x3b, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f,
	0x2a, 0x7d, 0x2f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x3a, 0x2a, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x73,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0xb3,
	0x02, 0x0a, 0x2e, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x4d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x63, 0x75, 0x72,
	0x69, 0x74, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x39, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x53, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x77, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x71, 0x22, 0x43, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x65,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x2f, 0x73, 0x65,
	0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x7d,
	0x3a, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x3a, 0x2a, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x5f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0xb0, 0x02, 0x0a, 0x2d, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56,
	0x31, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x76, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x70, 0x22, 0x42, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61,
	0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f,
	0x2a, 0x2f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x2a, 0x7d, 0x3a, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x3a, 0x2a, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0xf7, 0x01, 0x0a, 0x2a, 0x47, 0x65, 0x74, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x49, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x39, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x53, 0x65,
	0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x43, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x3d, 0x12, 0x3b, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d,
	0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f,
	0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x2f, 0x73,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a,
	0x7d, 0x12, 0x88, 0x02, 0x0a, 0x2c, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x4b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74,
	0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x46, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x43, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3d, 0x12,
	0x3b, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x73, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x32, 0xdb, 0x09, 0x0a,
	0x30, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69,
	0x74, 0x79, 0x49, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x12, 0xdd, 0x02, 0x0a, 0x34, 0x42, 0x61, 0x74, 0x63, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69,
	0x74, 0x79, 0x49, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x12, 0x53, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x49, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x4f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x49,
	0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x7f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x79, 0x22, 0x49, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x49, 0x6e,
	0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x3a, 0x62, 0x61, 0x74, 0x63, 0x68, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x3a, 0x2c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f,
	0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x12, 0xff, 0x01, 0x0a, 0x2c, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x63, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x12, 0x4b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x49, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x3b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x53, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x22, 0x45, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x3f, 0x12, 0x3d, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d,
	0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f,
	0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x2f, 0x73,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x73,
	0x2f, 0x2a, 0x7d, 0x12, 0x90, 0x02, 0x0a, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x63,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x4d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x48, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x56, 0x31, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x49, 0x6e,
	0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x45, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3f, 0x12, 0x3d, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x63,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x12, 0xb1, 0x02, 0x0a, 0x2e, 0x50, 0x61, 0x74, 0x63, 0x68,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74,
	0x79, 0x49, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x12, 0x4d, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x61, 0x74, 0x63, 0x68, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x56, 0x31, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x63,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x22, 0x73, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x6d, 0x32, 0x3d, 0x2f,
	0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x2f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x49, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x7d, 0x3a, 0x2c, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x65, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74,
	0x79, 0x5f, 0x69, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x32, 0x81, 0x0b, 0x0a, 0x2e, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0xa9, 0x02,
	0x0a, 0x2d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12,
	0x4c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69,
	0x74, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x6f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x69,
	0x22, 0x3b, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x73, 0x65,
	0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x3a, 0x2a, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x65, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69,
	0x74, 0x79, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0xf7, 0x01, 0x0a, 0x2a, 0x47, 0x65,
	0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69,
	0x74, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x49, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65,
	0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31,
	0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x43,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3d, 0x12, 0x3b, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d,
	0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f,
	0x2a, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a,
	0x2f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73,
	0x2f, 0x2a, 0x7d, 0x12, 0xfa, 0x01, 0x0a, 0x30, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69,
	0x74, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x4f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x41, 0x70, 0x69, 0x48, 0x74, 0x74, 0x70,
	0x42, 0x6f, 0x64, 0x79, 0x22, 0x4a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x44, 0x12, 0x42, 0x2f, 0x76,
	0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x2f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2f, 0x2a, 0x2f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x7d,
	0x12, 0xa0, 0x02, 0x0a, 0x34, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x56, 0x69,
	0x65, 0x77, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x63, 0x75, 0x72,
	0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x53, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x56, 0x69, 0x65, 0x77,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74,
	0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x43,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x53, 0x65, 0x63, 0x75, 0x72,
	0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x56,
	0x69, 0x65, 0x77, 0x22, 0x4e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x48, 0x12, 0x46, 0x2f, 0x76, 0x31,
	0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x2f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x73, 0x2f, 0x2a, 0x2f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x56, 0x69,
	0x65, 0x77, 0x7d, 0x12, 0x88, 0x02, 0x0a, 0x2c, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x73, 0x12, 0x4b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x63, 0x75, 0x72,
	0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x46, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x43, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x3d, 0x12, 0x3b, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x65,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x73,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x32, 0xe9,
	0x05, 0x0a, 0x2c, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x74, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12,
	0xd4, 0x02, 0x0a, 0x36, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65,
	0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x74, 0x12, 0x55, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65,
	0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x44, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x54, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x7d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x77, 0x22,
	0x4b, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6f, 0x72, 0x67, 0x65, 0x6e, 0x76, 0x3d, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x73, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x74, 0x73, 0x3a, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x54, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x3a, 0x28, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x65, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74,
	0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x12, 0xe1, 0x02, 0x0a, 0x39, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x53, 0x74, 0x61, 0x74, 0x73, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x53, 0x74, 0x61, 0x74, 0x12, 0x58, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x63, 0x75, 0x72,
	0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x47,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x80, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x7a,
	0x22, 0x4e, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6f, 0x72, 0x67, 0x65, 0x6e, 0x76, 0x3d, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x73, 0x65,
	0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x74, 0x73, 0x3a, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x53, 0x74, 0x61, 0x74, 0x73,
	0x3a, 0x28, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f,
	0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x73, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x32, 0x2c, 0x0a, 0x2a, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x66, 0x6c, 0x6f,
	0x77, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x32, 0xd6, 0x02, 0x0a, 0x35, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x66, 0x6c, 0x6f, 0x77,
	0x73, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x12, 0x9c, 0x02, 0x0a, 0x33, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x52, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x44, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x42,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4c, 0x69, 0x73, 0x74, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x4d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x47, 0x12, 0x45, 0x2f, 0x76, 0x31, 0x2f,
	0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x66, 0x6c, 0x6f,
	0x77, 0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x32, 0x8d, 0x07, 0x0a, 0x33, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x64, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x97, 0x02, 0x0a, 0x32, 0x44, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x64, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x51, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x66,
	0x6c, 0x6f, 0x77, 0x73, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31,
	0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x57, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x51, 0x22, 0x4f, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x2f, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x64, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x2f, 0x2a, 0x2f, 0x72, 0x65, 0x76, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x12, 0xa7, 0x02, 0x0a, 0x3a, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x64, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x59, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x52, 0x65,
	0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x22, 0x57, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x51, 0x12, 0x4f, 0x2f, 0x76,
	0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x66, 0x6c, 0x6f,
	0x77, 0x73, 0x2f, 0x2a, 0x2f, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a,
	0x7d, 0x2f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x91, 0x02,
	0x0a, 0x34, 0x55, 0x6e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x52, 0x65,
	0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x53, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x6e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x52, 0x65, 0x76, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x57, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x51,
	0x2a, 0x4f, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x64, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x2f, 0x2a, 0x2f, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x32, 0xfa, 0x01, 0x0a, 0x24, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0xd1, 0x01, 0x0a, 0x20, 0x47,
	0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x74, 0x61, 0x74, 0x12,
	0x3f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x30, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x22, 0x3a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x34, 0x12, 0x32, 0x2f, 0x76, 0x31, 0x2f,
	0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x2f, 0x2a, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2f, 0x2e, 0x2a, 0x7d, 0x32, 0xda,
	0x08, 0x0a, 0x2c, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x54, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12,
	0x9e, 0x02, 0x0a, 0x2b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12,
	0x4a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x22, 0x6a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x64, 0x22, 0x39, 0x2f, 0x76,
	0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x3a, 0x27, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x12, 0xf5, 0x01, 0x0a, 0x2b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x12, 0x4a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x22, 0x41, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3b, 0x2a, 0x39, 0x2f,
	0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x2f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x73, 0x2f, 0x2a, 0x7d, 0x12, 0xef, 0x01, 0x0a, 0x28, 0x47, 0x65, 0x74,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x47, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x22, 0x41, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3b, 0x12,
	0x39, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x2f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x2f, 0x2a, 0x7d, 0x12, 0x9e, 0x02, 0x0a, 0x2b, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x4a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x56, 0x31, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x22,
	0x6a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x64, 0x1a, 0x39, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61,
	0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f,
	0x2a, 0x2f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x2f,
	0x2a, 0x7d, 0x3a, 0x27, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x32, 0x2c, 0x0a, 0x2a, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x54, 0x72, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x32, 0xf2, 0x0b, 0x0a, 0x33, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x54, 0x72, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x12, 0xc4, 0x02, 0x0a, 0x32, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x54, 0x72, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x12, 0x51, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x54, 0x72, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4f, 0x76, 0x65, 0x72,
	0x72, 0x69, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3e, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x54, 0x72, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x22, 0x7b, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x75, 0x22, 0x41, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a,
	0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x2f,
	0x74, 0x72, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x7d, 0x2f, 0x6f, 0x76, 0x65,
	0x72, 0x72, 0x69, 0x64, 0x65, 0x73, 0x3a, 0x30, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f,
	0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x12, 0xff, 0x01, 0x0a, 0x32, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x54, 0x72, 0x61, 0x63,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x12,
	0x51, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x54, 0x72, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x49, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x43, 0x2a, 0x41, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61,
	0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f,
	0x2a, 0x2f, 0x74, 0x72, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x6f, 0x76,
	0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x73, 0x2f, 0x2a, 0x7d, 0x12, 0x8c, 0x02, 0x0a, 0x2f, 0x47,
	0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x54, 0x72, 0x61, 0x63, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x12, 0x4e,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x54, 0x72, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4f,
	0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3e,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x54, 0x72, 0x61, 0x63, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x22, 0x49,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x43, 0x12, 0x41, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d,
	0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f,
	0x2a, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a,
	0x2f, 0x74, 0x72, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x6f, 0x76, 0x65,
	0x72, 0x72, 0x69, 0x64, 0x65, 0x73, 0x2f, 0x2a, 0x7d, 0x12, 0x9d, 0x02, 0x0a, 0x31, 0x4c, 0x69,
	0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x54, 0x72, 0x61, 0x63, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x73, 0x12,
	0x50, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x54, 0x72, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x4b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4c, 0x69,
	0x73, 0x74, 0x54, 0x72, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4f, 0x76, 0x65,
	0x72, 0x72, 0x69, 0x64, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x49,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x43, 0x12, 0x41, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x2f, 0x2a, 0x2f, 0x74, 0x72, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x7d, 0x2f,
	0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x73, 0x12, 0xc2, 0x02, 0x0a, 0x31, 0x50, 0x61,
	0x74, 0x63, 0x68, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x54, 0x72, 0x61, 0x63,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x12,
	0x50, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x74, 0x63, 0x68, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x54, 0x72, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x3e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x54, 0x72,
	0x61, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64,
	0x65, 0x22, 0x7b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x75, 0x32, 0x41, 0x2f, 0x76, 0x31, 0x2f, 0x7b,
	0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x2f, 0x2a, 0x2f, 0x74, 0x72, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f,
	0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x73, 0x2f, 0x2a, 0x7d, 0x3a, 0x30, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x65, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x32, 0xc9,
	0x08, 0x0a, 0x1e, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x48, 0x6f, 0x73, 0x74, 0x51, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x12, 0xde, 0x01, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x6f, 0x73, 0x74, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x12, 0x3b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48,
	0x6f, 0x73, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x35, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x73, 0x79, 0x6e,
	0x63, 0x51, 0x75, 0x65, 0x72, 0x79, 0x22, 0x4a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x44, 0x22, 0x28,
	0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x68, 0x6f, 0x73,
	0x74, 0x51, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x3a, 0x18, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x12, 0xbe, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x6f, 0x73, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x12, 0x38, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x6f, 0x73, 0x74, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x22, 0x30, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x12, 0x28, 0x2f, 0x76, 0x31, 0x2f, 0x7b,
	0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x68, 0x6f, 0x73, 0x74, 0x51, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73,
	0x2f, 0x2a, 0x7d, 0x12, 0xc5, 0x01, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x6f,
	0x73, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x3e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x6f, 0x73, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x41, 0x70, 0x69, 0x48, 0x74, 0x74, 0x70, 0x42, 0x6f,
	0x64, 0x79, 0x22, 0x37, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x31, 0x12, 0x2f, 0x2f, 0x76, 0x31, 0x2f,
	0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x68, 0x6f, 0x73, 0x74, 0x51, 0x75, 0x65, 0x72, 0x69, 0x65,
	0x73, 0x2f, 0x2a, 0x2f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x7d, 0x12, 0xe7, 0x01, 0x0a, 0x23,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x56, 0x69, 0x65, 0x77, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x6f, 0x73, 0x74, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x12, 0x42, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x56, 0x69, 0x65, 0x77, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x6f, 0x73, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x56, 0x31, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x56, 0x69, 0x65, 0x77, 0x22, 0x3b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x35,
	0x12, 0x33, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x68, 0x6f, 0x73, 0x74,
	0x51, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x2f, 0x2a, 0x2f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x56, 0x69, 0x65, 0x77, 0x7d, 0x12, 0xd2, 0x01, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x6f, 0x73, 0x74, 0x51,
	0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0x3b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x48, 0x6f, 0x73, 0x74, 0x51, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x43, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31,
	0x4c, 0x69, 0x73, 0x74, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x51, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x30, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a,
	0x12, 0x28, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x68,
	0x6f, 0x73, 0x74, 0x51, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x32, 0xea, 0x09, 0x0a, 0x26, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x6f, 0x73, 0x74,
	0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x86, 0x02, 0x0a, 0x25, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x6f, 0x73,
	0x74, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12,
	0x44, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x6f, 0x73, 0x74,
	0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x56, 0x31, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x22, 0x5c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x56, 0x22, 0x30, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x68, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x63, 0x75, 0x72,
	0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x3a, 0x22, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x73,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0xdc,
	0x01, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x41, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48,
	0x6f, 0x73, 0x74, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x56, 0x31, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x22, 0x38, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x32, 0x12, 0x30, 0x2f, 0x76, 0x31,
	0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x68, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x63, 0x75, 0x72,
	0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2f, 0x2a, 0x7d, 0x12, 0xdf, 0x01,
	0x0a, 0x28, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x47, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x65,
	0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x41, 0x70, 0x69, 0x48, 0x74, 0x74, 0x70, 0x42, 0x6f, 0x64, 0x79, 0x22, 0x3f,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x39, 0x12, 0x37, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d,
	0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f,
	0x2a, 0x2f, 0x68, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x73, 0x2f, 0x2a, 0x2f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x7d, 0x12,
	0x85, 0x02, 0x0a, 0x2c, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x56, 0x69, 0x65,
	0x77, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x6f,
	0x73, 0x74, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x12, 0x4b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x56, 0x69, 0x65, 0x77, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x43, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69,
	0x74, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x56, 0x69,
	0x65, 0x77, 0x22, 0x43, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3d, 0x12, 0x3b, 0x2f, 0x76, 0x31, 0x2f,
	0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x68, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69,
	0x74, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2f, 0x2a, 0x2f, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x56, 0x69, 0x65, 0x77, 0x7d, 0x12, 0xed, 0x01, 0x0a, 0x24, 0x4c, 0x69, 0x73, 0x74,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x6f, 0x73,
	0x74, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73,
	0x12, 0x43, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x6f, 0x73, 0x74, 0x53,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x46, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x56, 0x31, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x38, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x32, 0x12, 0x30, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x2a, 0x7d, 0x2f, 0x68, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x32, 0xd7, 0x01, 0x0a, 0x1c, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0xb6, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x6f, 0x73,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x12, 0x37, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48,
	0x6f, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x53, 0x74, 0x61, 0x74, 0x73,
	0x22, 0x2f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x12, 0x27, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e,
	0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x2a, 0x2f, 0x68, 0x6f, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x73, 0x2f, 0x2e, 0x2a,
	0x7d, 0x32, 0xde, 0x09, 0x0a, 0x1c, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x12, 0xc0, 0x01, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x12, 0x3a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x6c, 0x6f, 0x6e, 0x67, 0x72, 0x75, 0x6e, 0x6e,
	0x69, 0x6e, 0x67, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x46, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x40, 0x22, 0x26, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x2a, 0x7d, 0x2f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x3a, 0x16, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0xa8, 0x01, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x3a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x6c, 0x6f, 0x6e, 0x67, 0x72,
	0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28, 0x2a, 0x26, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e,
	0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x2a, 0x2f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2f, 0x2a, 0x7d,
	0x12, 0xb8, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x37, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x56, 0x31, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x2e, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x28, 0x12, 0x26, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2f, 0x2a, 0x7d, 0x12, 0xc9, 0x01, 0x0a, 0x1a,
	0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x39, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x40, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x56, 0x31, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28, 0x12,
	0x26, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12, 0xbe, 0x01, 0x0a, 0x1a, 0x50, 0x61, 0x74, 0x63,
	0x68, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x39, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x61, 0x74, 0x63, 0x68, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x6c, 0x6f, 0x6e, 0x67, 0x72,
	0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x46, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x40, 0x32, 0x26, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e,
	0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x2a, 0x2f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2f, 0x2a, 0x7d,
	0x3a, 0x16, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x87, 0x02, 0x0a, 0x21, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x40,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x47, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x57, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x51, 0x22, 0x37, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a,
	0x2f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2f, 0x2a, 0x7d, 0x3a, 0x72, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x3a, 0x16, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x32, 0xce, 0x07, 0x0a, 0x27, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x41, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0xf0,
	0x01, 0x0a, 0x26, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x41,
	0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x45, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x41,
	0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x6c, 0x6f, 0x6e, 0x67, 0x72, 0x75,
	0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x60, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x5a, 0x22, 0x34, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2f, 0x2a,
	0x7d, 0x2f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x3a, 0x22, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x5f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0xcc, 0x01, 0x0a, 0x26, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x73, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x45, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x73, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x6c, 0x6f, 0x6e,
	0x67, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x3c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x36, 0x2a, 0x34, 0x2f, 0x76, 0x31, 0x2f,
	0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2f,
	0x2a, 0x2f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x7d,
	0x12, 0xe6, 0x01, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x41, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x42, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x41, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x3c, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x36, 0x12, 0x34, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x7d, 0x12, 0xf7, 0x01, 0x0a, 0x25, 0x4c, 0x69,
	0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x12, 0x44, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x36, 0x12, 0x34, 0x2f,
	0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x32, 0xb3, 0x04, 0x0a, 0x2d, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x43, 0x61,
	0x6e, 0x61, 0x72, 0x79, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x88, 0x02, 0x0a, 0x2c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x43, 0x61, 0x6e, 0x61, 0x72, 0x79, 0x65, 0x76, 0x61, 0x6c,
	0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x43, 0x61, 0x6e, 0x61,
	0x72, 0x79, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x6c, 0x6f, 0x6e,
	0x67, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x6c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x66, 0x22, 0x3a, 0x2f, 0x76, 0x31, 0x2f,
	0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x63, 0x61, 0x6e, 0x61, 0x72, 0x79, 0x65, 0x76, 0x61, 0x6c, 0x75,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x3a, 0x28, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x5f,
	0x63, 0x61, 0x6e, 0x61, 0x72, 0x79, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0xf6, 0x01, 0x0a, 0x29, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x43, 0x61,
	0x6e, 0x61, 0x72, 0x79, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x48,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x73, 0x43, 0x61, 0x6e, 0x61, 0x72, 0x79, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x56, 0x31, 0x43, 0x61, 0x6e, 0x61, 0x72, 0x79, 0x45, 0x76, 0x61, 0x6c, 0x75,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x42, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3c, 0x12, 0x3a, 0x2f,
	0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x73, 0x2f, 0x2a, 0x2f, 0x63, 0x61, 0x6e, 0x61, 0x72, 0x79, 0x65, 0x76, 0x61, 0x6c, 0x75,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x7d, 0x32, 0xd3, 0x09, 0x0a, 0x28, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x73, 0x4e, 0x61, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x82, 0x02, 0x0a, 0x29, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x4e, 0x61, 0x74, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x65, 0x12, 0x48, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x4e, 0x61, 0x74, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x6c, 0x6f, 0x6e, 0x67, 0x72, 0x75, 0x6e, 0x6e,
	0x69, 0x6e, 0x67, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x6c, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x66, 0x22, 0x3e, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65,
	0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a,
	0x2f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2f, 0x2a, 0x2f, 0x6e, 0x61, 0x74,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x2f, 0x2a, 0x7d, 0x3a, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x3a, 0x24, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x5f, 0x6e,
	0x61, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x12, 0xf5, 0x01, 0x0a, 0x27,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x4e, 0x61, 0x74, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x12, 0x46, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x4e, 0x61, 0x74,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x6c, 0x6f, 0x6e, 0x67, 0x72, 0x75, 0x6e,
	0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x63,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x5d, 0x22, 0x35, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x2a, 0x2f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2f, 0x2a, 0x7d,
	0x2f, 0x6e, 0x61, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x3a, 0x24, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x5f, 0x6e, 0x61, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x65, 0x12, 0xcf, 0x01, 0x0a, 0x27, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x73, 0x4e, 0x61, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x12,
	0x46, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x73, 0x4e, 0x61, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x6c, 0x6f, 0x6e, 0x67, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x37, 0x2a, 0x35,
	0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x73, 0x2f, 0x2a, 0x2f, 0x6e, 0x61, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x65, 0x73, 0x2f, 0x2a, 0x7d, 0x12, 0xe1, 0x01, 0x0a, 0x24, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x73, 0x4e, 0x61, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x12, 0x43,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x73, 0x4e, 0x61, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31,
	0x4e, 0x61, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x3d, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x37, 0x12, 0x35, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2f, 0x2a, 0x2f, 0x6e, 0x61, 0x74, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x2f, 0x2a, 0x7d, 0x12, 0xf3, 0x01, 0x0a, 0x26, 0x4c, 0x69,
	0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x4e, 0x61, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x65, 0x73, 0x12, 0x45, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x4e, 0x61, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x43, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x61, 0x74, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x3d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x37, 0x12, 0x35, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2f,
	0x2a, 0x7d, 0x2f, 0x6e, 0x61, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x32,
	0xd6, 0x03, 0x0a, 0x1f, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x4b, 0x65, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x6d, 0x61, 0x70, 0x73, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x12, 0xe5, 0x01, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4b, 0x65, 0x79, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x6d, 0x61, 0x70, 0x12, 0x3d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x4b, 0x65, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x6d, 0x61, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x56, 0x31, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4d, 0x61, 0x70, 0x22, 0x4c, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x46, 0x22, 0x29, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x2a, 0x7d, 0x2f, 0x6b, 0x65, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x6d, 0x61, 0x70, 0x73,
	0x3a, 0x19, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f,
	0x6b, 0x65, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x6d, 0x61, 0x70, 0x12, 0xca, 0x01, 0x0a, 0x1e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x4b, 0x65, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x6d, 0x61, 0x70, 0x12, 0x3d,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4b, 0x65, 0x79, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x6d, 0x61, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x4d, 0x61, 0x70, 0x22, 0x31, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x2a, 0x29, 0x2f,
	0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x6b, 0x65, 0x79, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x6d, 0x61, 0x70, 0x73, 0x2f, 0x2a, 0x7d, 0x32, 0xed, 0x09, 0x0a, 0x26, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4b, 0x65, 0x79, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x6d, 0x61, 0x70, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x12, 0x84, 0x02, 0x0a, 0x24, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4b, 0x65, 0x79, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x6d, 0x61, 0x70, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x43, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4b, 0x65, 0x79, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x6d, 0x61, 0x70, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x38, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4b, 0x65,
	0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x5d, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x57, 0x22, 0x33, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a,
	0x2f, 0x6b, 0x65, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x6d, 0x61, 0x70, 0x73, 0x2f, 0x2a, 0x7d,
	0x2f, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x3a, 0x20, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x6b, 0x65, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x6d, 0x61, 0x70, 0x73, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x12, 0xe2, 0x01, 0x0a, 0x24, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x4b, 0x65, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x6d, 0x61, 0x70, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x43, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x4b, 0x65, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x6d, 0x61, 0x70, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x56, 0x31, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x22, 0x3b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x35, 0x2a, 0x33, 0x2f, 0x76, 0x31, 0x2f,
	0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x6b, 0x65, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x6d, 0x61,
	0x70, 0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x2f, 0x2a, 0x7d, 0x12,
	0xdc, 0x01, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x4b, 0x65, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x6d, 0x61, 0x70, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x40, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4b,
	0x65, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x6d, 0x61, 0x70, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x56, 0x31, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x22, 0x3b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x35, 0x12, 0x33, 0x2f, 0x76, 0x31, 0x2f, 0x7b,
	0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x6b, 0x65, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x6d, 0x61, 0x70,
	0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x2f, 0x2a, 0x7d, 0x12, 0xf0,
	0x01, 0x0a, 0x24, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x4b, 0x65, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x6d, 0x61, 0x70, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x43, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x4b, 0x65, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x6d, 0x61, 0x70, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x46, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4c, 0x69, 0x73, 0x74, 0x4b, 0x65, 0x79,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x35, 0x12, 0x33, 0x2f, 0x76,
	0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x6b, 0x65, 0x79, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x6d, 0x61, 0x70, 0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65,
	0x73, 0x12, 0x84, 0x02, 0x0a, 0x24, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4b, 0x65, 0x79, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x6d, 0x61, 0x70, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x43, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4b, 0x65, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x6d,
	0x61, 0x70, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x38, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4b, 0x65, 0x79, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x5d, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x57, 0x1a, 0x33, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x6b, 0x65, 0x79,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x6d, 0x61, 0x70, 0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x74, 0x72,
	0x69, 0x65, 0x73, 0x2f, 0x2a, 0x7d, 0x3a, 0x20, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x6b, 0x65, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x6d, 0x61,
	0x70, 0x73, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x32, 0x84, 0x02, 0x0a, 0x25, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x69,
	0x7a, 0x65, 0x64, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x73, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x12, 0xda, 0x01, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x65, 0x64,
	0x48, 0x6f, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x12, 0x40, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x48, 0x6f, 0x73, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x65, 0x64,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x22, 0x38, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x32, 0x12, 0x30, 0x2f,
	0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a,
	0x65, 0x64, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x73, 0x2f, 0x2e, 0x2a, 0x7d, 0x32,
	0x96, 0x08, 0x0a, 0x1a, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0xd2,
	0x01, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x38, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x56, 0x31, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x22,
	0x42, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3c, 0x22, 0x24, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x3a, 0x14, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x72, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x12, 0xca, 0x01, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x12, 0x38, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x45, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x2c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x2a, 0x24, 0x2f, 0x76, 0x31, 0x2f,
	0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2f, 0x2a, 0x7d,
	0x12, 0xb6, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x35, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x37, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x2c, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x26, 0x12, 0x24, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2f, 0x2a, 0x7d, 0x12, 0xc7, 0x01, 0x0a, 0x18, 0x4c, 0x69,
	0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x37, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x44, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x12, 0x24, 0x2f,
	0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x72, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x73, 0x12, 0xd2, 0x01, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x12, 0x38, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x22, 0x42, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3c, 0x1a, 0x24, 0x2f, 0x76,
	0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2f,
	0x2a, 0x7d, 0x3a, 0x14, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x32, 0x85, 0x03, 0x0a, 0x2c, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69,
	0x74, 0x79, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0xd4, 0x02, 0x0a, 0x31, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x41,
	0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x50, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x6f,
	0x6d, 0x70, 0x75, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x58, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69,
	0x74, 0x79, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x73, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x6d, 0x22, 0x41, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x73,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x7d, 0x3a, 0x62, 0x61, 0x74, 0x63, 0x68, 0x43,
	0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x3a, 0x28, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x61,
	0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x32, 0xb8, 0x0b, 0x0a, 0x23, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0xfa, 0x01, 0x0a, 0x22, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12,
	0x41, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x53,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x55,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x4f, 0x22, 0x2d, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x73, 0x3a, 0x1e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0xcb, 0x01, 0x0a, 0x22, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x41, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74,
	0x79, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x35, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x2f, 0x2a, 0x2d, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d,
	0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f,
	0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73,
	0x2f, 0x2a, 0x7d, 0x12, 0xd4, 0x01, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x3e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x56, 0x31, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x22, 0x35, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2f, 0x12, 0x2d, 0x2f, 0x76, 0x31,
	0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2f, 0x2a, 0x7d, 0x12, 0xe5, 0x01, 0x0a, 0x21, 0x4c,
	0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73,
	0x12, 0x40, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x65, 0x63, 0x75, 0x72,
	0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x47, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x35, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x2f, 0x12, 0x2d, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a,
	0x7d, 0x2f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x73, 0x12, 0x8b, 0x02, 0x0a, 0x29, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x76, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x12, 0x48, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4f, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x63, 0x75, 0x72,
	0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x43, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x3d, 0x12, 0x3b, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x73,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2f,
	0x2a, 0x7d, 0x3a, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0xf8, 0x01, 0x0a, 0x21, 0x50, 0x61, 0x74, 0x63, 0x68, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x40, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x61, 0x74, 0x63, 0x68, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x56, 0x31, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x22, 0x55, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x4f, 0x32, 0x2d, 0x2f, 0x76,
	0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2f, 0x2a, 0x7d, 0x3a, 0x1e, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x73, 0x65, 0x63, 0x75, 0x72,
	0x69, 0x74, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x32, 0xcb, 0x07, 0x0a, 0x2f,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12,
	0xdb, 0x02, 0x0a, 0x40, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x45, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74,
	0x79, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x5f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f,
	0x6d, 0x70, 0x75, 0x74, 0x65, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x56, 0x31, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x69, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x63, 0x22, 0x34, 0x2f, 0x76, 0x31, 0x2f,
	0x7b, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x3d, 0x2a, 0x7d, 0x3a, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x45,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73,
	0x3a, 0x2b, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f,
	0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x73, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0xc4, 0x02,
	0x0a, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x4d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x50, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x53, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x45, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x71, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x6b, 0x22, 0x3c, 0x2f, 0x76, 0x31, 0x2f, 0x7b,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x3a, 0x2b, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0xf2, 0x01, 0x0a, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x4d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x44, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3e, 0x2a, 0x3c, 0x2f, 0x76, 0x31,
	0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2f, 0x2a, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x7d, 0x32, 0xeb, 0x06, 0x0a, 0x1e, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x64, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0xe8, 0x01, 0x0a,
	0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x66, 0x6c, 0x6f, 0x77, 0x12, 0x3c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x64, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x46,
	0x6c, 0x6f, 0x77, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x4a, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x44, 0x22, 0x28, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a,
	0x7d, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x3a, 0x18, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x64, 0x66, 0x6c, 0x6f, 0x77, 0x12, 0xc6, 0x01, 0x0a, 0x1d, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x64, 0x66, 0x6c, 0x6f, 0x77, 0x12, 0x3c, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x66, 0x6c, 0x6f, 0x77,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x56, 0x31, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x46, 0x6c, 0x6f, 0x77, 0x22, 0x30,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x2a, 0x28, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d,
	0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f,
	0x2a, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x2f, 0x2a, 0x7d,
	0x12, 0xc0, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x66, 0x6c, 0x6f, 0x77, 0x12,
	0x39, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x66,
	0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x46, 0x6c, 0x6f,
	0x77, 0x22, 0x30, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x12, 0x28, 0x2f, 0x76, 0x31, 0x2f, 0x7b,
	0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x66, 0x6c, 0x6f, 0x77, 0x73,
	0x2f, 0x2a, 0x7d, 0x12, 0xd1, 0x01, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x66,
	0x6c, 0x6f, 0x77, 0x73, 0x12, 0x3b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x64, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x42, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x46, 0x6c, 0x6f, 0x77, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x30, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x12, 0x28, 0x2f,
	0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x64, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x32, 0xa3, 0x02, 0x0a, 0x29, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x66,
	0x6c, 0x6f, 0x77, 0x73, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0xf5, 0x01, 0x0a, 0x27, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x64, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x46, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x64, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x42, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3e, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x38, 0x12, 0x36, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x2a, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x2f, 0x2a,
	0x7d, 0x2f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x32, 0xa4, 0x06,
	0x0a, 0x27, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x64, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0xec, 0x01, 0x0a, 0x26, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x52, 0x65, 0x76, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x45, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x52, 0x65, 0x76, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x46, 0x6c,
	0x6f, 0x77, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x3c, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x36, 0x2a, 0x34, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x64, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x2f, 0x2a, 0x2f, 0x72, 0x65, 0x76, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x7d, 0x12, 0xd2, 0x01, 0x0a, 0x23, 0x47, 0x65, 0x74,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x64, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x42, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64,
	0x66, 0x6c, 0x6f, 0x77, 0x73, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x41, 0x70, 0x69, 0x48, 0x74, 0x74, 0x70, 0x42, 0x6f, 0x64, 0x79, 0x22,
	0x3c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x36, 0x12, 0x34, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61,
	0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x2a, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x2f, 0x2a,
	0x2f, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x7d, 0x12, 0xb4, 0x02,
	0x0a, 0x38, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x46, 0x6c,
	0x6f, 0x77, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x66, 0x6c, 0x6f,
	0x77, 0x73, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x57, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64,
	0x46, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x66,
	0x6c, 0x6f, 0x77, 0x73, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x22, 0x60, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x5a, 0x22, 0x34, 0x2f, 0x76, 0x31, 0x2f,
	0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x66, 0x6c, 0x6f, 0x77,
	0x73, 0x2f, 0x2a, 0x2f, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x7d,
	0x3a, 0x22, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x5f, 0x72, 0x65, 0x76, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x32, 0xca, 0x02, 0x0a, 0x32, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x66, 0x6c, 0x6f, 0x77,
	0x73, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x93, 0x02, 0x0a, 0x30,
	0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x52, 0x65, 0x76, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x12, 0x4f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x64, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x42, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4c, 0x69,
	0x73, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x44, 0x12, 0x42, 0x2f,
	0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x64, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x2f, 0x2a, 0x2f, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x32, 0x1a, 0x0a, 0x18, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x53, 0x69, 0x74, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x32, 0xea, 0x09,
	0x0a, 0x25, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53,
	0x69, 0x74, 0x65, 0x73, 0x41, 0x70, 0x69, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65,
	0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x86, 0x02, 0x0a, 0x23, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53,
	0x69, 0x74, 0x65, 0x73, 0x41, 0x70, 0x69, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12,
	0x42, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x69, 0x74, 0x65,
	0x73, 0x41, 0x70, 0x69, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x3e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31,
	0x41, 0x70, 0x69, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x5b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x55, 0x22, 0x32, 0x2f, 0x76, 0x31,
	0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x73, 0x69, 0x74, 0x65, 0x73, 0x2f, 0x2a,
	0x7d, 0x2f, 0x61, 0x70, 0x69, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x3a,
	0x1f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x73,
	0x69, 0x74, 0x65, 0x73, 0x5f, 0x61, 0x70, 0x69, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x12, 0xe0, 0x01, 0x0a, 0x23, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x69, 0x74, 0x65, 0x73, 0x41, 0x70, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x42, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x69, 0x74, 0x65, 0x73, 0x41, 0x70, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x34, 0x2a,
	0x32, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x73, 0x69, 0x74, 0x65, 0x73,
	0x2f, 0x2a, 0x2f, 0x61, 0x70, 0x69, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73,
	0x2f, 0x2a, 0x7d, 0x12, 0xdf, 0x01, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x69, 0x74, 0x65, 0x73, 0x41, 0x70, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x3f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x53, 0x69, 0x74, 0x65, 0x73, 0x41, 0x70, 0x69, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3e, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x70, 0x69, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3a, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x34, 0x12, 0x32, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x73, 0x69, 0x74,
	0x65, 0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x70, 0x69, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69,
	0x65, 0x73, 0x2f, 0x2a, 0x7d, 0x12, 0xeb, 0x01, 0x0a, 0x23, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x69, 0x74, 0x65, 0x73,
	0x41, 0x70, 0x69, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x42, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x69, 0x74, 0x65, 0x73, 0x41, 0x70, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x44, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4c, 0x69,
	0x73, 0x74, 0x41, 0x70, 0x69, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x34, 0x12,
	0x32, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x73, 0x69, 0x74,
	0x65, 0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x61, 0x70, 0x69, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x69, 0x65, 0x73, 0x12, 0x84, 0x02, 0x0a, 0x22, 0x50, 0x61, 0x74, 0x63, 0x68, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x69, 0x74, 0x65, 0x73, 0x41,
	0x70, 0x69, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x41, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x74, 0x63, 0x68, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x69, 0x74, 0x65, 0x73, 0x41, 0x70, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3e, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x70, 0x69, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5b, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x55, 0x32, 0x32, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65,
	0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a,
	0x2f, 0x73, 0x69, 0x74, 0x65, 0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x70, 0x69, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x2f, 0x2a, 0x7d, 0x3a, 0x1f, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x73, 0x69, 0x74, 0x65, 0x73, 0x5f, 0x61,
	0x70, 0x69, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x32, 0x9b, 0x0d, 0x0a, 0x1f, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x69, 0x74, 0x65,
	0x73, 0x41, 0x70, 0x69, 0x64, 0x6f, 0x63, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0xec,
	0x01, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x69, 0x74, 0x65, 0x73, 0x41, 0x70, 0x69, 0x64, 0x6f,
	0x63, 0x12, 0x3d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x69,
	0x74, 0x65, 0x73, 0x41, 0x70, 0x69, 0x64, 0x6f, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x39, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x70, 0x69,
	0x44, 0x6f, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x50, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x4a, 0x22, 0x2c, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a,
	0x2f, 0x73, 0x69, 0x74, 0x65, 0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x61, 0x70, 0x69, 0x64, 0x6f, 0x63,
	0x73, 0x3a, 0x1a, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x5f, 0x73, 0x69, 0x74, 0x65, 0x73, 0x5f, 0x61, 0x70, 0x69, 0x64, 0x6f, 0x63, 0x12, 0xd0, 0x01,
	0x0a, 0x1e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x69, 0x74, 0x65, 0x73, 0x41, 0x70, 0x69, 0x64, 0x6f, 0x63,
	0x12, 0x3d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x69, 0x74,
	0x65, 0x73, 0x41, 0x70, 0x69, 0x64, 0x6f, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x39, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x34, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x2e, 0x2a, 0x2c, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x73, 0x69,
	0x74, 0x65, 0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x70, 0x69, 0x64, 0x6f, 0x63, 0x73, 0x2f, 0x2a, 0x7d,
	0x12, 0xca, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x69, 0x74, 0x65, 0x73, 0x41, 0x70, 0x69, 0x64, 0x6f, 0x63,
	0x12, 0x3a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x69, 0x74, 0x65, 0x73, 0x41,
	0x70, 0x69, 0x64, 0x6f, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x70, 0x69, 0x44, 0x6f, 0x63, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x34, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2e, 0x12,
	0x2c, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x73, 0x69, 0x74, 0x65, 0x73,
	0x2f, 0x2a, 0x2f, 0x61, 0x70, 0x69, 0x64, 0x6f, 0x63, 0x73, 0x2f, 0x2a, 0x7d, 0x12, 0xff, 0x01,
	0x0a, 0x28, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53,
	0x69, 0x74, 0x65, 0x73, 0x41, 0x70, 0x69, 0x64, 0x6f, 0x63, 0x12, 0x47, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x53, 0x69, 0x74, 0x65, 0x73, 0x41, 0x70, 0x69, 0x64, 0x6f, 0x63, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x46, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31,
	0x41, 0x70, 0x69, 0x44, 0x6f, 0x63, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x42, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x3c, 0x12, 0x3a, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x73,
	0x69, 0x74, 0x65, 0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x70, 0x69, 0x64, 0x6f, 0x63, 0x73, 0x2f, 0x2a,
	0x2f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x7d, 0x12,
	0xd3, 0x01, 0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x69, 0x74, 0x65, 0x73, 0x41, 0x70, 0x69, 0x64, 0x6f, 0x63,
	0x73, 0x12, 0x3c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x69, 0x74, 0x65,
	0x73, 0x41, 0x70, 0x69, 0x64, 0x6f, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x3e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x4c, 0x69, 0x73, 0x74,
	0x41, 0x70, 0x69, 0x44, 0x6f, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x34, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2e, 0x12, 0x2c, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x73, 0x69, 0x74, 0x65, 0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x61, 0x70,
	0x69, 0x64, 0x6f, 0x63, 0x73, 0x12, 0xec, 0x01, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x69, 0x74,
	0x65, 0x73, 0x41, 0x70, 0x69, 0x64, 0x6f, 0x63, 0x12, 0x3d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x69, 0x74, 0x65, 0x73, 0x41, 0x70, 0x69, 0x64, 0x6f, 0x63,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x56, 0x31, 0x41, 0x70, 0x69, 0x44, 0x6f, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x50, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x4a, 0x1a, 0x2c, 0x2f, 0x76, 0x31, 0x2f,
	0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x73, 0x69, 0x74, 0x65, 0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x70,
	0x69, 0x64, 0x6f, 0x63, 0x73, 0x2f, 0x2a, 0x7d, 0x3a, 0x1a, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x73, 0x69, 0x74, 0x65, 0x73, 0x5f, 0x61, 0x70,
	0x69, 0x64, 0x6f, 0x63, 0x12, 0xa1, 0x02, 0x0a, 0x2b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x69, 0x74, 0x65, 0x73, 0x41, 0x70,
	0x69, 0x64, 0x6f, 0x63, 0x12, 0x4a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x69,
	0x74, 0x65, 0x73, 0x41, 0x70, 0x69, 0x64, 0x6f, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x46, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x70, 0x69, 0x67, 0x65, 0x65, 0x56, 0x31, 0x41, 0x70, 0x69,
	0x44, 0x6f, 0x63, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x58,
	0x32, 0x3a, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x73, 0x69, 0x74, 0x65,
	0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x70, 0x69, 0x64, 0x6f, 0x63, 0x73, 0x2f, 0x2a, 0x2f, 0x64, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x7d, 0x3a, 0x1a, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x73, 0x69, 0x74, 0x65,
	0x73, 0x5f, 0x61, 0x70, 0x69, 0x64, 0x6f, 0x63, 0x32, 0xd3, 0x01, 0x0a, 0x0e, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0xc0, 0x01, 0x0a, 0x1c,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x3b, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x6c, 0x6f, 0x6e, 0x67, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x44, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3e,
	0x22, 0x2e, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x3d, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x2a, 0x7d, 0x3a, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x3a, 0x0c, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x42, 0x34,
	0x5a, 0x32, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x67, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x76, 0x31, 0x2f, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x70, 0x62, 0x3b, 0x61, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x70, 0x62,
}

var (
	file_mockgcp_cloud_apigee_v1_service_proto_rawDescOnce sync.Once
	file_mockgcp_cloud_apigee_v1_service_proto_rawDescData = file_mockgcp_cloud_apigee_v1_service_proto_rawDesc
)

func file_mockgcp_cloud_apigee_v1_service_proto_rawDescGZIP() []byte {
	file_mockgcp_cloud_apigee_v1_service_proto_rawDescOnce.Do(func() {
		file_mockgcp_cloud_apigee_v1_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_mockgcp_cloud_apigee_v1_service_proto_rawDescData)
	})
	return file_mockgcp_cloud_apigee_v1_service_proto_rawDescData
}

var file_mockgcp_cloud_apigee_v1_service_proto_msgTypes = make([]protoimpl.MessageInfo, 616)
var file_mockgcp_cloud_apigee_v1_service_proto_goTypes = []interface{}{
	(*EdgeConfigstoreBundleBadBundle)(nil),                                                                     // 0: google.cloud.apigee.v1.EdgeConfigstoreBundleBadBundle
	(*EdgeConfigstoreBundleBadBundleViolation)(nil),                                                            // 1: google.cloud.apigee.v1.EdgeConfigstoreBundleBadBundleViolation
	(*GoogleApiHttpBody)(nil),                                                                                  // 2: google.cloud.apigee.v1.GoogleApiHttpBody
	(*GoogleCloudApigeeV1APIProductAssociation)(nil),                                                           // 3: google.cloud.apigee.v1.GoogleCloudApigeeV1APIProductAssociation
	(*GoogleCloudApigeeV1Access)(nil),                                                                          // 4: google.cloud.apigee.v1.GoogleCloudApigeeV1Access
	(*GoogleCloudApigeeV1AccessGet)(nil),                                                                       // 5: google.cloud.apigee.v1.GoogleCloudApigeeV1AccessGet
	(*GoogleCloudApigeeV1AccessLoggingConfig)(nil),                                                             // 6: google.cloud.apigee.v1.GoogleCloudApigeeV1AccessLoggingConfig
	(*GoogleCloudApigeeV1AccessRemove)(nil),                                                                    // 7: google.cloud.apigee.v1.GoogleCloudApigeeV1AccessRemove
	(*GoogleCloudApigeeV1AccessSet)(nil),                                                                       // 8: google.cloud.apigee.v1.GoogleCloudApigeeV1AccessSet
	(*GoogleCloudApigeeV1ActivateNatAddressRequest)(nil),                                                       // 9: google.cloud.apigee.v1.GoogleCloudApigeeV1ActivateNatAddressRequest
	(*GoogleCloudApigeeV1AddonsConfig)(nil),                                                                    // 10: google.cloud.apigee.v1.GoogleCloudApigeeV1AddonsConfig
	(*GoogleCloudApigeeV1AdjustDeveloperBalanceRequest)(nil),                                                   // 11: google.cloud.apigee.v1.GoogleCloudApigeeV1AdjustDeveloperBalanceRequest
	(*GoogleCloudApigeeV1AdvancedApiOpsConfig)(nil),                                                            // 12: google.cloud.apigee.v1.GoogleCloudApigeeV1AdvancedApiOpsConfig
	(*GoogleCloudApigeeV1Alias)(nil),                                                                           // 13: google.cloud.apigee.v1.GoogleCloudApigeeV1Alias
	(*GoogleCloudApigeeV1AliasRevisionConfig)(nil),                                                             // 14: google.cloud.apigee.v1.GoogleCloudApigeeV1AliasRevisionConfig
	(*GoogleCloudApigeeV1AnalyticsConfig)(nil),                                                                 // 15: google.cloud.apigee.v1.GoogleCloudApigeeV1AnalyticsConfig
	(*GoogleCloudApigeeV1ApiCategory)(nil),                                                                     // 16: google.cloud.apigee.v1.GoogleCloudApigeeV1ApiCategory
	(*GoogleCloudApigeeV1ApiCategoryResponse)(nil),                                                             // 17: google.cloud.apigee.v1.GoogleCloudApigeeV1ApiCategoryResponse
	(*GoogleCloudApigeeV1ApiDoc)(nil),                                                                          // 18: google.cloud.apigee.v1.GoogleCloudApigeeV1ApiDoc
	(*GoogleCloudApigeeV1ApiDocDocumentation)(nil),                                                             // 19: google.cloud.apigee.v1.GoogleCloudApigeeV1ApiDocDocumentation
	(*GoogleCloudApigeeV1ApiDocDocumentationResponse)(nil),                                                     // 20: google.cloud.apigee.v1.GoogleCloudApigeeV1ApiDocDocumentationResponse
	(*GoogleCloudApigeeV1ApiDocResponse)(nil),                                                                  // 21: google.cloud.apigee.v1.GoogleCloudApigeeV1ApiDocResponse
	(*GoogleCloudApigeeV1ApiProduct)(nil),                                                                      // 22: google.cloud.apigee.v1.GoogleCloudApigeeV1ApiProduct
	(*GoogleCloudApigeeV1ApiProductRef)(nil),                                                                   // 23: google.cloud.apigee.v1.GoogleCloudApigeeV1ApiProductRef
	(*GoogleCloudApigeeV1ApiProxy)(nil),                                                                        // 24: google.cloud.apigee.v1.GoogleCloudApigeeV1ApiProxy
	(*GoogleCloudApigeeV1ApiProxyRevision)(nil),                                                                // 25: google.cloud.apigee.v1.GoogleCloudApigeeV1ApiProxyRevision
	(*GoogleCloudApigeeV1ApiSecurityConfig)(nil),                                                               // 26: google.cloud.apigee.v1.GoogleCloudApigeeV1ApiSecurityConfig
	(*GoogleCloudApigeeV1ApiSecurityRuntimeConfig)(nil),                                                        // 27: google.cloud.apigee.v1.GoogleCloudApigeeV1ApiSecurityRuntimeConfig
	(*GoogleCloudApigeeV1App)(nil),                                                                             // 28: google.cloud.apigee.v1.GoogleCloudApigeeV1App
	(*GoogleCloudApigeeV1AppGroup)(nil),                                                                        // 29: google.cloud.apigee.v1.GoogleCloudApigeeV1AppGroup
	(*GoogleCloudApigeeV1AppGroupApp)(nil),                                                                     // 30: google.cloud.apigee.v1.GoogleCloudApigeeV1AppGroupApp
	(*GoogleCloudApigeeV1AppGroupAppKey)(nil),                                                                  // 31: google.cloud.apigee.v1.GoogleCloudApigeeV1AppGroupAppKey
	(*GoogleCloudApigeeV1ArchiveDeployment)(nil),                                                               // 32: google.cloud.apigee.v1.GoogleCloudApigeeV1ArchiveDeployment
	(*GoogleCloudApigeeV1AsyncQuery)(nil),                                                                      // 33: google.cloud.apigee.v1.GoogleCloudApigeeV1AsyncQuery
	(*GoogleCloudApigeeV1AsyncQueryResult)(nil),                                                                // 34: google.cloud.apigee.v1.GoogleCloudApigeeV1AsyncQueryResult
	(*GoogleCloudApigeeV1AsyncQueryResultView)(nil),                                                            // 35: google.cloud.apigee.v1.GoogleCloudApigeeV1AsyncQueryResultView
	(*GoogleCloudApigeeV1Attribute)(nil),                                                                       // 36: google.cloud.apigee.v1.GoogleCloudApigeeV1Attribute
	(*GoogleCloudApigeeV1Attributes)(nil),                                                                      // 37: google.cloud.apigee.v1.GoogleCloudApigeeV1Attributes
	(*GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsRequest)(nil),                                    // 38: google.cloud.apigee.v1.GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsRequest
	(*GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsRequestIncludeAll)(nil),                          // 39: google.cloud.apigee.v1.GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsRequestIncludeAll
	(*GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsRequestResourceArray)(nil),                       // 40: google.cloud.apigee.v1.GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsRequestResourceArray
	(*GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsRequestResourceArrayResource)(nil),               // 41: google.cloud.apigee.v1.GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsRequestResourceArrayResource
	(*GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsResponse)(nil),                                   // 42: google.cloud.apigee.v1.GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsResponse
	(*GoogleCloudApigeeV1BatchUpdateSecurityIncidentsRequest)(nil),                                             // 43: google.cloud.apigee.v1.GoogleCloudApigeeV1BatchUpdateSecurityIncidentsRequest
	(*GoogleCloudApigeeV1BatchUpdateSecurityIncidentsResponse)(nil),                                            // 44: google.cloud.apigee.v1.GoogleCloudApigeeV1BatchUpdateSecurityIncidentsResponse
	(*GoogleCloudApigeeV1CanaryEvaluation)(nil),                                                                // 45: google.cloud.apigee.v1.GoogleCloudApigeeV1CanaryEvaluation
	(*GoogleCloudApigeeV1CanaryEvaluationMetricLabels)(nil),                                                    // 46: google.cloud.apigee.v1.GoogleCloudApigeeV1CanaryEvaluationMetricLabels
	(*GoogleCloudApigeeV1CertInfo)(nil),                                                                        // 47: google.cloud.apigee.v1.GoogleCloudApigeeV1CertInfo
	(*GoogleCloudApigeeV1Certificate)(nil),                                                                     // 48: google.cloud.apigee.v1.GoogleCloudApigeeV1Certificate
	(*GoogleCloudApigeeV1CommonNameConfig)(nil),                                                                // 49: google.cloud.apigee.v1.GoogleCloudApigeeV1CommonNameConfig
	(*GoogleCloudApigeeV1ComputeEnvironmentScoresRequest)(nil),                                                 // 50: google.cloud.apigee.v1.GoogleCloudApigeeV1ComputeEnvironmentScoresRequest
	(*GoogleCloudApigeeV1ComputeEnvironmentScoresRequestFilter)(nil),                                           // 51: google.cloud.apigee.v1.GoogleCloudApigeeV1ComputeEnvironmentScoresRequestFilter
	(*GoogleCloudApigeeV1ComputeEnvironmentScoresResponse)(nil),                                                // 52: google.cloud.apigee.v1.GoogleCloudApigeeV1ComputeEnvironmentScoresResponse
	(*GoogleCloudApigeeV1ConfigVersion)(nil),                                                                   // 53: google.cloud.apigee.v1.GoogleCloudApigeeV1ConfigVersion
	(*GoogleCloudApigeeV1ConnectorsPlatformConfig)(nil),                                                        // 54: google.cloud.apigee.v1.GoogleCloudApigeeV1ConnectorsPlatformConfig
	(*GoogleCloudApigeeV1Credential)(nil),                                                                      // 55: google.cloud.apigee.v1.GoogleCloudApigeeV1Credential
	(*GoogleCloudApigeeV1CreditDeveloperBalanceRequest)(nil),                                                   // 56: google.cloud.apigee.v1.GoogleCloudApigeeV1CreditDeveloperBalanceRequest
	(*GoogleCloudApigeeV1CustomReport)(nil),                                                                    // 57: google.cloud.apigee.v1.GoogleCloudApigeeV1CustomReport
	(*GoogleCloudApigeeV1CustomReportMetric)(nil),                                                              // 58: google.cloud.apigee.v1.GoogleCloudApigeeV1CustomReportMetric
	(*GoogleCloudApigeeV1DataCollector)(nil),                                                                   // 59: google.cloud.apigee.v1.GoogleCloudApigeeV1DataCollector
	(*GoogleCloudApigeeV1DataCollectorConfig)(nil),                                                             // 60: google.cloud.apigee.v1.GoogleCloudApigeeV1DataCollectorConfig
	(*GoogleCloudApigeeV1Datastore)(nil),                                                                       // 61: google.cloud.apigee.v1.GoogleCloudApigeeV1Datastore
	(*GoogleCloudApigeeV1DatastoreConfig)(nil),                                                                 // 62: google.cloud.apigee.v1.GoogleCloudApigeeV1DatastoreConfig
	(*GoogleCloudApigeeV1DateRange)(nil),                                                                       // 63: google.cloud.apigee.v1.GoogleCloudApigeeV1DateRange
	(*GoogleCloudApigeeV1DebugMask)(nil),                                                                       // 64: google.cloud.apigee.v1.GoogleCloudApigeeV1DebugMask
	(*GoogleCloudApigeeV1DebugSession)(nil),                                                                    // 65: google.cloud.apigee.v1.GoogleCloudApigeeV1DebugSession
	(*GoogleCloudApigeeV1DebugSessionTransaction)(nil),                                                         // 66: google.cloud.apigee.v1.GoogleCloudApigeeV1DebugSessionTransaction
	(*GoogleCloudApigeeV1DeleteCustomReportResponse)(nil),                                                      // 67: google.cloud.apigee.v1.GoogleCloudApigeeV1DeleteCustomReportResponse
	(*GoogleCloudApigeeV1DeleteResponse)(nil),                                                                  // 68: google.cloud.apigee.v1.GoogleCloudApigeeV1DeleteResponse
	(*GoogleCloudApigeeV1Deployment)(nil),                                                                      // 69: google.cloud.apigee.v1.GoogleCloudApigeeV1Deployment
	(*GoogleCloudApigeeV1DeploymentChangeReport)(nil),                                                          // 70: google.cloud.apigee.v1.GoogleCloudApigeeV1DeploymentChangeReport
	(*GoogleCloudApigeeV1DeploymentChangeReportRoutingChange)(nil),                                             // 71: google.cloud.apigee.v1.GoogleCloudApigeeV1DeploymentChangeReportRoutingChange
	(*GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict)(nil),                                           // 72: google.cloud.apigee.v1.GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict
	(*GoogleCloudApigeeV1DeploymentChangeReportRoutingDeployment)(nil),                                         // 73: google.cloud.apigee.v1.GoogleCloudApigeeV1DeploymentChangeReportRoutingDeployment
	(*GoogleCloudApigeeV1DeploymentConfig)(nil),                                                                // 74: google.cloud.apigee.v1.GoogleCloudApigeeV1DeploymentConfig
	(*GoogleCloudApigeeV1DeploymentGroupConfig)(nil),                                                           // 75: google.cloud.apigee.v1.GoogleCloudApigeeV1DeploymentGroupConfig
	(*GoogleCloudApigeeV1Developer)(nil),                                                                       // 76: google.cloud.apigee.v1.GoogleCloudApigeeV1Developer
	(*GoogleCloudApigeeV1DeveloperApp)(nil),                                                                    // 77: google.cloud.apigee.v1.GoogleCloudApigeeV1DeveloperApp
	(*GoogleCloudApigeeV1DeveloperAppKey)(nil),                                                                 // 78: google.cloud.apigee.v1.GoogleCloudApigeeV1DeveloperAppKey
	(*GoogleCloudApigeeV1DeveloperBalance)(nil),                                                                // 79: google.cloud.apigee.v1.GoogleCloudApigeeV1DeveloperBalance
	(*GoogleCloudApigeeV1DeveloperBalanceWallet)(nil),                                                          // 80: google.cloud.apigee.v1.GoogleCloudApigeeV1DeveloperBalanceWallet
	(*GoogleCloudApigeeV1DeveloperMonetizationConfig)(nil),                                                     // 81: google.cloud.apigee.v1.GoogleCloudApigeeV1DeveloperMonetizationConfig
	(*GoogleCloudApigeeV1DeveloperSubscription)(nil),                                                           // 82: google.cloud.apigee.v1.GoogleCloudApigeeV1DeveloperSubscription
	(*GoogleCloudApigeeV1DimensionMetric)(nil),                                                                 // 83: google.cloud.apigee.v1.GoogleCloudApigeeV1DimensionMetric
	(*GoogleCloudApigeeV1DisableSecurityActionRequest)(nil),                                                    // 84: google.cloud.apigee.v1.GoogleCloudApigeeV1DisableSecurityActionRequest
	(*GoogleCloudApigeeV1DocumentationFile)(nil),                                                               // 85: google.cloud.apigee.v1.GoogleCloudApigeeV1DocumentationFile
	(*GoogleCloudApigeeV1EnableSecurityActionRequest)(nil),                                                     // 86: google.cloud.apigee.v1.GoogleCloudApigeeV1EnableSecurityActionRequest
	(*GoogleCloudApigeeV1EndpointAttachment)(nil),                                                              // 87: google.cloud.apigee.v1.GoogleCloudApigeeV1EndpointAttachment
	(*GoogleCloudApigeeV1EndpointChainingRule)(nil),                                                            // 88: google.cloud.apigee.v1.GoogleCloudApigeeV1EndpointChainingRule
	(*GoogleCloudApigeeV1EntityMetadata)(nil),                                                                  // 89: google.cloud.apigee.v1.GoogleCloudApigeeV1EntityMetadata
	(*GoogleCloudApigeeV1Environment)(nil),                                                                     // 90: google.cloud.apigee.v1.GoogleCloudApigeeV1Environment
	(*GoogleCloudApigeeV1EnvironmentConfig)(nil),                                                               // 91: google.cloud.apigee.v1.GoogleCloudApigeeV1EnvironmentConfig
	(*GoogleCloudApigeeV1EnvironmentGroup)(nil),                                                                // 92: google.cloud.apigee.v1.GoogleCloudApigeeV1EnvironmentGroup
	(*GoogleCloudApigeeV1EnvironmentGroupAttachment)(nil),                                                      // 93: google.cloud.apigee.v1.GoogleCloudApigeeV1EnvironmentGroupAttachment
	(*GoogleCloudApigeeV1EnvironmentGroupConfig)(nil),                                                          // 94: google.cloud.apigee.v1.GoogleCloudApigeeV1EnvironmentGroupConfig
	(*GoogleCloudApigeeV1ExpireDeveloperSubscriptionRequest)(nil),                                              // 95: google.cloud.apigee.v1.GoogleCloudApigeeV1ExpireDeveloperSubscriptionRequest
	(*GoogleCloudApigeeV1Export)(nil),                                                                          // 96: google.cloud.apigee.v1.GoogleCloudApigeeV1Export
	(*GoogleCloudApigeeV1ExportRequest)(nil),                                                                   // 97: google.cloud.apigee.v1.GoogleCloudApigeeV1ExportRequest
	(*GoogleCloudApigeeV1FlowHook)(nil),                                                                        // 98: google.cloud.apigee.v1.GoogleCloudApigeeV1FlowHook
	(*GoogleCloudApigeeV1FlowHookConfig)(nil),                                                                  // 99: google.cloud.apigee.v1.GoogleCloudApigeeV1FlowHookConfig
	(*GoogleCloudApigeeV1GenerateDownloadUrlRequest)(nil),                                                      // 100: google.cloud.apigee.v1.GoogleCloudApigeeV1GenerateDownloadUrlRequest
	(*GoogleCloudApigeeV1GenerateDownloadUrlResponse)(nil),                                                     // 101: google.cloud.apigee.v1.GoogleCloudApigeeV1GenerateDownloadUrlResponse
	(*GoogleCloudApigeeV1GenerateUploadUrlRequest)(nil),                                                        // 102: google.cloud.apigee.v1.GoogleCloudApigeeV1GenerateUploadUrlRequest
	(*GoogleCloudApigeeV1GenerateUploadUrlResponse)(nil),                                                       // 103: google.cloud.apigee.v1.GoogleCloudApigeeV1GenerateUploadUrlResponse
	(*GoogleCloudApigeeV1GetAsyncQueryResultUrlResponse)(nil),                                                  // 104: google.cloud.apigee.v1.GoogleCloudApigeeV1GetAsyncQueryResultUrlResponse
	(*GoogleCloudApigeeV1GetAsyncQueryResultUrlResponseURLInfo)(nil),                                           // 105: google.cloud.apigee.v1.GoogleCloudApigeeV1GetAsyncQueryResultUrlResponseURLInfo
	(*GoogleCloudApigeeV1GetSyncAuthorizationRequest)(nil),                                                     // 106: google.cloud.apigee.v1.GoogleCloudApigeeV1GetSyncAuthorizationRequest
	(*GoogleCloudApigeeV1GraphQLOperation)(nil),                                                                // 107: google.cloud.apigee.v1.GoogleCloudApigeeV1GraphQLOperation
	(*GoogleCloudApigeeV1GraphQLOperationConfig)(nil),                                                          // 108: google.cloud.apigee.v1.GoogleCloudApigeeV1GraphQLOperationConfig
	(*GoogleCloudApigeeV1GraphQLOperationGroup)(nil),                                                           // 109: google.cloud.apigee.v1.GoogleCloudApigeeV1GraphQLOperationGroup
	(*GoogleCloudApigeeV1GraphqlDocumentation)(nil),                                                            // 110: google.cloud.apigee.v1.GoogleCloudApigeeV1GraphqlDocumentation
	(*GoogleCloudApigeeV1GrpcOperationConfig)(nil),                                                             // 111: google.cloud.apigee.v1.GoogleCloudApigeeV1GrpcOperationConfig
	(*GoogleCloudApigeeV1GrpcOperationGroup)(nil),                                                              // 112: google.cloud.apigee.v1.GoogleCloudApigeeV1GrpcOperationGroup
	(*GoogleCloudApigeeV1IngressConfig)(nil),                                                                   // 113: google.cloud.apigee.v1.GoogleCloudApigeeV1IngressConfig
	(*GoogleCloudApigeeV1Instance)(nil),                                                                        // 114: google.cloud.apigee.v1.GoogleCloudApigeeV1Instance
	(*GoogleCloudApigeeV1InstanceAttachment)(nil),                                                              // 115: google.cloud.apigee.v1.GoogleCloudApigeeV1InstanceAttachment
	(*GoogleCloudApigeeV1InstanceDeploymentStatus)(nil),                                                        // 116: google.cloud.apigee.v1.GoogleCloudApigeeV1InstanceDeploymentStatus
	(*GoogleCloudApigeeV1InstanceDeploymentStatusDeployedRevision)(nil),                                        // 117: google.cloud.apigee.v1.GoogleCloudApigeeV1InstanceDeploymentStatusDeployedRevision
	(*GoogleCloudApigeeV1InstanceDeploymentStatusDeployedRoute)(nil),                                           // 118: google.cloud.apigee.v1.GoogleCloudApigeeV1InstanceDeploymentStatusDeployedRoute
	(*GoogleCloudApigeeV1IntegrationConfig)(nil),                                                               // 119: google.cloud.apigee.v1.GoogleCloudApigeeV1IntegrationConfig
	(*GoogleCloudApigeeV1KeyAliasReference)(nil),                                                               // 120: google.cloud.apigee.v1.GoogleCloudApigeeV1KeyAliasReference
	(*GoogleCloudApigeeV1KeyValueEntry)(nil),                                                                   // 121: google.cloud.apigee.v1.GoogleCloudApigeeV1KeyValueEntry
	(*GoogleCloudApigeeV1KeyValueMap)(nil),                                                                     // 122: google.cloud.apigee.v1.GoogleCloudApigeeV1KeyValueMap
	(*GoogleCloudApigeeV1Keystore)(nil),                                                                        // 123: google.cloud.apigee.v1.GoogleCloudApigeeV1Keystore
	(*GoogleCloudApigeeV1KeystoreConfig)(nil),                                                                  // 124: google.cloud.apigee.v1.GoogleCloudApigeeV1KeystoreConfig
	(*GoogleCloudApigeeV1ListApiCategoriesResponse)(nil),                                                       // 125: google.cloud.apigee.v1.GoogleCloudApigeeV1ListApiCategoriesResponse
	(*GoogleCloudApigeeV1ListApiDocsResponse)(nil),                                                             // 126: google.cloud.apigee.v1.GoogleCloudApigeeV1ListApiDocsResponse
	(*GoogleCloudApigeeV1ListApiProductsResponse)(nil),                                                         // 127: google.cloud.apigee.v1.GoogleCloudApigeeV1ListApiProductsResponse
	(*GoogleCloudApigeeV1ListApiProxiesResponse)(nil),                                                          // 128: google.cloud.apigee.v1.GoogleCloudApigeeV1ListApiProxiesResponse
	(*GoogleCloudApigeeV1ListAppGroupAppsResponse)(nil),                                                        // 129: google.cloud.apigee.v1.GoogleCloudApigeeV1ListAppGroupAppsResponse
	(*GoogleCloudApigeeV1ListAppGroupsResponse)(nil),                                                           // 130: google.cloud.apigee.v1.GoogleCloudApigeeV1ListAppGroupsResponse
	(*GoogleCloudApigeeV1ListAppsResponse)(nil),                                                                // 131: google.cloud.apigee.v1.GoogleCloudApigeeV1ListAppsResponse
	(*GoogleCloudApigeeV1ListArchiveDeploymentsResponse)(nil),                                                  // 132: google.cloud.apigee.v1.GoogleCloudApigeeV1ListArchiveDeploymentsResponse
	(*GoogleCloudApigeeV1ListAsyncQueriesResponse)(nil),                                                        // 133: google.cloud.apigee.v1.GoogleCloudApigeeV1ListAsyncQueriesResponse
	(*GoogleCloudApigeeV1ListCustomReportsResponse)(nil),                                                       // 134: google.cloud.apigee.v1.GoogleCloudApigeeV1ListCustomReportsResponse
	(*GoogleCloudApigeeV1ListDataCollectorsResponse)(nil),                                                      // 135: google.cloud.apigee.v1.GoogleCloudApigeeV1ListDataCollectorsResponse
	(*GoogleCloudApigeeV1ListDatastoresResponse)(nil),                                                          // 136: google.cloud.apigee.v1.GoogleCloudApigeeV1ListDatastoresResponse
	(*GoogleCloudApigeeV1ListDebugSessionsResponse)(nil),                                                       // 137: google.cloud.apigee.v1.GoogleCloudApigeeV1ListDebugSessionsResponse
	(*GoogleCloudApigeeV1ListDeploymentsResponse)(nil),                                                         // 138: google.cloud.apigee.v1.GoogleCloudApigeeV1ListDeploymentsResponse
	(*GoogleCloudApigeeV1ListDeveloperAppsResponse)(nil),                                                       // 139: google.cloud.apigee.v1.GoogleCloudApigeeV1ListDeveloperAppsResponse
	(*GoogleCloudApigeeV1ListDeveloperSubscriptionsResponse)(nil),                                              // 140: google.cloud.apigee.v1.GoogleCloudApigeeV1ListDeveloperSubscriptionsResponse
	(*GoogleCloudApigeeV1ListEndpointAttachmentsResponse)(nil),                                                 // 141: google.cloud.apigee.v1.GoogleCloudApigeeV1ListEndpointAttachmentsResponse
	(*GoogleCloudApigeeV1ListEnvironmentGroupAttachmentsResponse)(nil),                                         // 142: google.cloud.apigee.v1.GoogleCloudApigeeV1ListEnvironmentGroupAttachmentsResponse
	(*GoogleCloudApigeeV1ListEnvironmentGroupsResponse)(nil),                                                   // 143: google.cloud.apigee.v1.GoogleCloudApigeeV1ListEnvironmentGroupsResponse
	(*GoogleCloudApigeeV1ListEnvironmentResourcesResponse)(nil),                                                // 144: google.cloud.apigee.v1.GoogleCloudApigeeV1ListEnvironmentResourcesResponse
	(*GoogleCloudApigeeV1ListExportsResponse)(nil),                                                             // 145: google.cloud.apigee.v1.GoogleCloudApigeeV1ListExportsResponse
	(*GoogleCloudApigeeV1ListHybridIssuersResponse)(nil),                                                       // 146: google.cloud.apigee.v1.GoogleCloudApigeeV1ListHybridIssuersResponse
	(*GoogleCloudApigeeV1ListInstanceAttachmentsResponse)(nil),                                                 // 147: google.cloud.apigee.v1.GoogleCloudApigeeV1ListInstanceAttachmentsResponse
	(*GoogleCloudApigeeV1ListInstancesResponse)(nil),                                                           // 148: google.cloud.apigee.v1.GoogleCloudApigeeV1ListInstancesResponse
	(*GoogleCloudApigeeV1ListKeyValueEntriesResponse)(nil),                                                     // 149: google.cloud.apigee.v1.GoogleCloudApigeeV1ListKeyValueEntriesResponse
	(*GoogleCloudApigeeV1ListNatAddressesResponse)(nil),                                                        // 150: google.cloud.apigee.v1.GoogleCloudApigeeV1ListNatAddressesResponse
	(*GoogleCloudApigeeV1ListOfDevelopersResponse)(nil),                                                        // 151: google.cloud.apigee.v1.GoogleCloudApigeeV1ListOfDevelopersResponse
	(*GoogleCloudApigeeV1ListOrganizationsResponse)(nil),                                                       // 152: google.cloud.apigee.v1.GoogleCloudApigeeV1ListOrganizationsResponse
	(*GoogleCloudApigeeV1ListRatePlansResponse)(nil),                                                           // 153: google.cloud.apigee.v1.GoogleCloudApigeeV1ListRatePlansResponse
	(*GoogleCloudApigeeV1ListSecurityActionsResponse)(nil),                                                     // 154: google.cloud.apigee.v1.GoogleCloudApigeeV1ListSecurityActionsResponse
	(*GoogleCloudApigeeV1ListSecurityIncidentsResponse)(nil),                                                   // 155: google.cloud.apigee.v1.GoogleCloudApigeeV1ListSecurityIncidentsResponse
	(*GoogleCloudApigeeV1ListSecurityProfileRevisionsResponse)(nil),                                            // 156: google.cloud.apigee.v1.GoogleCloudApigeeV1ListSecurityProfileRevisionsResponse
	(*GoogleCloudApigeeV1ListSecurityProfilesResponse)(nil),                                                    // 157: google.cloud.apigee.v1.GoogleCloudApigeeV1ListSecurityProfilesResponse
	(*GoogleCloudApigeeV1ListSecurityReportsResponse)(nil),                                                     // 158: google.cloud.apigee.v1.GoogleCloudApigeeV1ListSecurityReportsResponse
	(*GoogleCloudApigeeV1ListSharedFlowsResponse)(nil),                                                         // 159: google.cloud.apigee.v1.GoogleCloudApigeeV1ListSharedFlowsResponse
	(*GoogleCloudApigeeV1ListTraceConfigOverridesResponse)(nil),                                                // 160: google.cloud.apigee.v1.GoogleCloudApigeeV1ListTraceConfigOverridesResponse
	(*GoogleCloudApigeeV1Metadata)(nil),                                                                        // 161: google.cloud.apigee.v1.GoogleCloudApigeeV1Metadata
	(*GoogleCloudApigeeV1Metric)(nil),                                                                          // 162: google.cloud.apigee.v1.GoogleCloudApigeeV1Metric
	(*GoogleCloudApigeeV1MetricAggregation)(nil),                                                               // 163: google.cloud.apigee.v1.GoogleCloudApigeeV1MetricAggregation
	(*GoogleCloudApigeeV1MonetizationConfig)(nil),                                                              // 164: google.cloud.apigee.v1.GoogleCloudApigeeV1MonetizationConfig
	(*GoogleCloudApigeeV1NatAddress)(nil),                                                                      // 165: google.cloud.apigee.v1.GoogleCloudApigeeV1NatAddress
	(*GoogleCloudApigeeV1NodeConfig)(nil),                                                                      // 166: google.cloud.apigee.v1.GoogleCloudApigeeV1NodeConfig
	(*GoogleCloudApigeeV1OASDocumentation)(nil),                                                                // 167: google.cloud.apigee.v1.GoogleCloudApigeeV1OASDocumentation
	(*GoogleCloudApigeeV1Operation)(nil),                                                                       // 168: google.cloud.apigee.v1.GoogleCloudApigeeV1Operation
	(*GoogleCloudApigeeV1OperationConfig)(nil),                                                                 // 169: google.cloud.apigee.v1.GoogleCloudApigeeV1OperationConfig
	(*GoogleCloudApigeeV1OperationGroup)(nil),                                                                  // 170: google.cloud.apigee.v1.GoogleCloudApigeeV1OperationGroup
	(*GoogleCloudApigeeV1OperationMetadata)(nil),                                                               // 171: google.cloud.apigee.v1.GoogleCloudApigeeV1OperationMetadata
	(*GoogleCloudApigeeV1OperationMetadataProgress)(nil),                                                       // 172: google.cloud.apigee.v1.GoogleCloudApigeeV1OperationMetadataProgress
	(*GoogleCloudApigeeV1OptimizedStats)(nil),                                                                  // 173: google.cloud.apigee.v1.GoogleCloudApigeeV1OptimizedStats
	(*GoogleCloudApigeeV1OptimizedStatsNode)(nil),                                                              // 174: google.cloud.apigee.v1.GoogleCloudApigeeV1OptimizedStatsNode
	(*GoogleCloudApigeeV1OptimizedStatsResponse)(nil),                                                          // 175: google.cloud.apigee.v1.GoogleCloudApigeeV1OptimizedStatsResponse
	(*GoogleCloudApigeeV1Organization)(nil),                                                                    // 176: google.cloud.apigee.v1.GoogleCloudApigeeV1Organization
	(*GoogleCloudApigeeV1OrganizationProjectMapping)(nil),                                                      // 177: google.cloud.apigee.v1.GoogleCloudApigeeV1OrganizationProjectMapping
	(*GoogleCloudApigeeV1PodStatus)(nil),                                                                       // 178: google.cloud.apigee.v1.GoogleCloudApigeeV1PodStatus
	(*GoogleCloudApigeeV1Point)(nil),                                                                           // 179: google.cloud.apigee.v1.GoogleCloudApigeeV1Point
	(*GoogleCloudApigeeV1ProfileConfig)(nil),                                                                   // 180: google.cloud.apigee.v1.GoogleCloudApigeeV1ProfileConfig
	(*GoogleCloudApigeeV1ProfileConfigAbuse)(nil),                                                              // 181: google.cloud.apigee.v1.GoogleCloudApigeeV1ProfileConfigAbuse
	(*GoogleCloudApigeeV1ProfileConfigAuthorization)(nil),                                                      // 182: google.cloud.apigee.v1.GoogleCloudApigeeV1ProfileConfigAuthorization
	(*GoogleCloudApigeeV1ProfileConfigCORS)(nil),                                                               // 183: google.cloud.apigee.v1.GoogleCloudApigeeV1ProfileConfigCORS
	(*GoogleCloudApigeeV1ProfileConfigCategory)(nil),                                                           // 184: google.cloud.apigee.v1.GoogleCloudApigeeV1ProfileConfigCategory
	(*GoogleCloudApigeeV1ProfileConfigMTLS)(nil),                                                               // 185: google.cloud.apigee.v1.GoogleCloudApigeeV1ProfileConfigMTLS
	(*GoogleCloudApigeeV1ProfileConfigMediation)(nil),                                                          // 186: google.cloud.apigee.v1.GoogleCloudApigeeV1ProfileConfigMediation
	(*GoogleCloudApigeeV1ProfileConfigThreat)(nil),                                                             // 187: google.cloud.apigee.v1.GoogleCloudApigeeV1ProfileConfigThreat
	(*GoogleCloudApigeeV1Properties)(nil),                                                                      // 188: google.cloud.apigee.v1.GoogleCloudApigeeV1Properties
	(*GoogleCloudApigeeV1Property)(nil),                                                                        // 189: google.cloud.apigee.v1.GoogleCloudApigeeV1Property
	(*GoogleCloudApigeeV1ProvisionOrganizationRequest)(nil),                                                    // 190: google.cloud.apigee.v1.GoogleCloudApigeeV1ProvisionOrganizationRequest
	(*GoogleCloudApigeeV1Query)(nil),                                                                           // 191: google.cloud.apigee.v1.GoogleCloudApigeeV1Query
	(*GoogleCloudApigeeV1QueryMetadata)(nil),                                                                   // 192: google.cloud.apigee.v1.GoogleCloudApigeeV1QueryMetadata
	(*GoogleCloudApigeeV1QueryMetric)(nil),                                                                     // 193: google.cloud.apigee.v1.GoogleCloudApigeeV1QueryMetric
	(*GoogleCloudApigeeV1QueryTabularStatsRequest)(nil),                                                        // 194: google.cloud.apigee.v1.GoogleCloudApigeeV1QueryTabularStatsRequest
	(*GoogleCloudApigeeV1QueryTabularStatsResponse)(nil),                                                       // 195: google.cloud.apigee.v1.GoogleCloudApigeeV1QueryTabularStatsResponse
	(*GoogleCloudApigeeV1QueryTimeSeriesStatsRequest)(nil),                                                     // 196: google.cloud.apigee.v1.GoogleCloudApigeeV1QueryTimeSeriesStatsRequest
	(*GoogleCloudApigeeV1QueryTimeSeriesStatsResponse)(nil),                                                    // 197: google.cloud.apigee.v1.GoogleCloudApigeeV1QueryTimeSeriesStatsResponse
	(*GoogleCloudApigeeV1QueryTimeSeriesStatsResponseSequence)(nil),                                            // 198: google.cloud.apigee.v1.GoogleCloudApigeeV1QueryTimeSeriesStatsResponseSequence
	(*GoogleCloudApigeeV1Quota)(nil),                                                                           // 199: google.cloud.apigee.v1.GoogleCloudApigeeV1Quota
	(*GoogleCloudApigeeV1RatePlan)(nil),                                                                        // 200: google.cloud.apigee.v1.GoogleCloudApigeeV1RatePlan
	(*GoogleCloudApigeeV1RateRange)(nil),                                                                       // 201: google.cloud.apigee.v1.GoogleCloudApigeeV1RateRange
	(*GoogleCloudApigeeV1Reference)(nil),                                                                       // 202: google.cloud.apigee.v1.GoogleCloudApigeeV1Reference
	(*GoogleCloudApigeeV1ReferenceConfig)(nil),                                                                 // 203: google.cloud.apigee.v1.GoogleCloudApigeeV1ReferenceConfig
	(*GoogleCloudApigeeV1ReportInstanceStatusRequest)(nil),                                                     // 204: google.cloud.apigee.v1.GoogleCloudApigeeV1ReportInstanceStatusRequest
	(*GoogleCloudApigeeV1ReportInstanceStatusResponse)(nil),                                                    // 205: google.cloud.apigee.v1.GoogleCloudApigeeV1ReportInstanceStatusResponse
	(*GoogleCloudApigeeV1ReportProperty)(nil),                                                                  // 206: google.cloud.apigee.v1.GoogleCloudApigeeV1ReportProperty
	(*GoogleCloudApigeeV1ResourceConfig)(nil),                                                                  // 207: google.cloud.apigee.v1.GoogleCloudApigeeV1ResourceConfig
	(*GoogleCloudApigeeV1ResourceFile)(nil),                                                                    // 208: google.cloud.apigee.v1.GoogleCloudApigeeV1ResourceFile
	(*GoogleCloudApigeeV1ResourceFiles)(nil),                                                                   // 209: google.cloud.apigee.v1.GoogleCloudApigeeV1ResourceFiles
	(*GoogleCloudApigeeV1ResourceStatus)(nil),                                                                  // 210: google.cloud.apigee.v1.GoogleCloudApigeeV1ResourceStatus
	(*GoogleCloudApigeeV1Result)(nil),                                                                          // 211: google.cloud.apigee.v1.GoogleCloudApigeeV1Result
	(*GoogleCloudApigeeV1RevenueShareRange)(nil),                                                               // 212: google.cloud.apigee.v1.GoogleCloudApigeeV1RevenueShareRange
	(*GoogleCloudApigeeV1RevisionStatus)(nil),                                                                  // 213: google.cloud.apigee.v1.GoogleCloudApigeeV1RevisionStatus
	(*GoogleCloudApigeeV1RoutingRule)(nil),                                                                     // 214: google.cloud.apigee.v1.GoogleCloudApigeeV1RoutingRule
	(*GoogleCloudApigeeV1RuntimeAddonsConfig)(nil),                                                             // 215: google.cloud.apigee.v1.GoogleCloudApigeeV1RuntimeAddonsConfig
	(*GoogleCloudApigeeV1RuntimeAnalyticsConfig)(nil),                                                          // 216: google.cloud.apigee.v1.GoogleCloudApigeeV1RuntimeAnalyticsConfig
	(*GoogleCloudApigeeV1RuntimeApiSecurityConfig)(nil),                                                        // 217: google.cloud.apigee.v1.GoogleCloudApigeeV1RuntimeApiSecurityConfig
	(*GoogleCloudApigeeV1RuntimeConfig)(nil),                                                                   // 218: google.cloud.apigee.v1.GoogleCloudApigeeV1RuntimeConfig
	(*GoogleCloudApigeeV1RuntimeTraceConfig)(nil),                                                              // 219: google.cloud.apigee.v1.GoogleCloudApigeeV1RuntimeTraceConfig
	(*GoogleCloudApigeeV1RuntimeTraceConfigOverride)(nil),                                                      // 220: google.cloud.apigee.v1.GoogleCloudApigeeV1RuntimeTraceConfigOverride
	(*GoogleCloudApigeeV1RuntimeTraceSamplingConfig)(nil),                                                      // 221: google.cloud.apigee.v1.GoogleCloudApigeeV1RuntimeTraceSamplingConfig
	(*GoogleCloudApigeeV1Schema)(nil),                                                                          // 222: google.cloud.apigee.v1.GoogleCloudApigeeV1Schema
	(*GoogleCloudApigeeV1SchemaSchemaElement)(nil),                                                             // 223: google.cloud.apigee.v1.GoogleCloudApigeeV1SchemaSchemaElement
	(*GoogleCloudApigeeV1SchemaSchemaProperty)(nil),                                                            // 224: google.cloud.apigee.v1.GoogleCloudApigeeV1SchemaSchemaProperty
	(*GoogleCloudApigeeV1Score)(nil),                                                                           // 225: google.cloud.apigee.v1.GoogleCloudApigeeV1Score
	(*GoogleCloudApigeeV1ScoreComponent)(nil),                                                                  // 226: google.cloud.apigee.v1.GoogleCloudApigeeV1ScoreComponent
	(*GoogleCloudApigeeV1ScoreComponentRecommendation)(nil),                                                    // 227: google.cloud.apigee.v1.GoogleCloudApigeeV1ScoreComponentRecommendation
	(*GoogleCloudApigeeV1ScoreComponentRecommendationAction)(nil),                                              // 228: google.cloud.apigee.v1.GoogleCloudApigeeV1ScoreComponentRecommendationAction
	(*GoogleCloudApigeeV1ScoreComponentRecommendationActionActionContext)(nil),                                 // 229: google.cloud.apigee.v1.GoogleCloudApigeeV1ScoreComponentRecommendationActionActionContext
	(*GoogleCloudApigeeV1SecurityAction)(nil),                                                                  // 230: google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityAction
	(*GoogleCloudApigeeV1SecurityActionAllow)(nil),                                                             // 231: google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityActionAllow
	(*GoogleCloudApigeeV1SecurityActionConditionConfig)(nil),                                                   // 232: google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityActionConditionConfig
	(*GoogleCloudApigeeV1SecurityActionDeny)(nil),                                                              // 233: google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityActionDeny
	(*GoogleCloudApigeeV1SecurityActionFlag)(nil),                                                              // 234: google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityActionFlag
	(*GoogleCloudApigeeV1SecurityActionHttpHeader)(nil),                                                        // 235: google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityActionHttpHeader
	(*GoogleCloudApigeeV1SecurityActionsConfig)(nil),                                                           // 236: google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityActionsConfig
	(*GoogleCloudApigeeV1SecurityAssessmentResult)(nil),                                                        // 237: google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityAssessmentResult
	(*GoogleCloudApigeeV1SecurityAssessmentResultResource)(nil),                                                // 238: google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityAssessmentResultResource
	(*GoogleCloudApigeeV1SecurityAssessmentResultScoringResult)(nil),                                           // 239: google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityAssessmentResultScoringResult
	(*GoogleCloudApigeeV1SecurityAssessmentResultScoringResultAssessmentRecommendation)(nil),                   // 240: google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityAssessmentResultScoringResultAssessmentRecommendation
	(*GoogleCloudApigeeV1SecurityAssessmentResultScoringResultAssessmentRecommendationRecommendation)(nil),     // 241: google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityAssessmentResultScoringResultAssessmentRecommendationRecommendation
	(*GoogleCloudApigeeV1SecurityAssessmentResultScoringResultAssessmentRecommendationRecommendationLink)(nil), // 242: google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityAssessmentResultScoringResultAssessmentRecommendationRecommendationLink
	(*GoogleCloudApigeeV1SecurityIncident)(nil),                                                                // 243: google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityIncident
	(*GoogleCloudApigeeV1SecurityProfile)(nil),                                                                 // 244: google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityProfile
	(*GoogleCloudApigeeV1SecurityProfileEnvironment)(nil),                                                      // 245: google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityProfileEnvironment
	(*GoogleCloudApigeeV1SecurityProfileEnvironmentAssociation)(nil),                                           // 246: google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityProfileEnvironmentAssociation
	(*GoogleCloudApigeeV1SecurityProfileScoringConfig)(nil),                                                    // 247: google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityProfileScoringConfig
	(*GoogleCloudApigeeV1SecurityReport)(nil),                                                                  // 248: google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityReport
	(*GoogleCloudApigeeV1SecurityReportMetadata)(nil),                                                          // 249: google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityReportMetadata
	(*GoogleCloudApigeeV1SecurityReportQuery)(nil),                                                             // 250: google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityReportQuery
	(*GoogleCloudApigeeV1SecurityReportQueryMetric)(nil),                                                       // 251: google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityReportQueryMetric
	(*GoogleCloudApigeeV1SecurityReportResultMetadata)(nil),                                                    // 252: google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityReportResultMetadata
	(*GoogleCloudApigeeV1SecurityReportResultView)(nil),                                                        // 253: google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityReportResultView
	(*GoogleCloudApigeeV1SecuritySettings)(nil),                                                                // 254: google.cloud.apigee.v1.GoogleCloudApigeeV1SecuritySettings
	(*GoogleCloudApigeeV1ServiceIssuersMapping)(nil),                                                           // 255: google.cloud.apigee.v1.GoogleCloudApigeeV1ServiceIssuersMapping
	(*GoogleCloudApigeeV1Session)(nil),                                                                         // 256: google.cloud.apigee.v1.GoogleCloudApigeeV1Session
	(*GoogleCloudApigeeV1SetAddonEnablementRequest)(nil),                                                       // 257: google.cloud.apigee.v1.GoogleCloudApigeeV1SetAddonEnablementRequest
	(*GoogleCloudApigeeV1SetAddonsRequest)(nil),                                                                // 258: google.cloud.apigee.v1.GoogleCloudApigeeV1SetAddonsRequest
	(*GoogleCloudApigeeV1SharedFlow)(nil),                                                                      // 259: google.cloud.apigee.v1.GoogleCloudApigeeV1SharedFlow
	(*GoogleCloudApigeeV1SharedFlowRevision)(nil),                                                              // 260: google.cloud.apigee.v1.GoogleCloudApigeeV1SharedFlowRevision
	(*GoogleCloudApigeeV1Stats)(nil),                                                                           // 261: google.cloud.apigee.v1.GoogleCloudApigeeV1Stats
	(*GoogleCloudApigeeV1StatsEnvironmentStats)(nil),                                                           // 262: google.cloud.apigee.v1.GoogleCloudApigeeV1StatsEnvironmentStats
	(*GoogleCloudApigeeV1StatsHostStats)(nil),                                                                  // 263: google.cloud.apigee.v1.GoogleCloudApigeeV1StatsHostStats
	(*GoogleCloudApigeeV1Subscription)(nil),                                                                    // 264: google.cloud.apigee.v1.GoogleCloudApigeeV1Subscription
	(*GoogleCloudApigeeV1SyncAuthorization)(nil),                                                               // 265: google.cloud.apigee.v1.GoogleCloudApigeeV1SyncAuthorization
	(*GoogleCloudApigeeV1TargetServer)(nil),                                                                    // 266: google.cloud.apigee.v1.GoogleCloudApigeeV1TargetServer
	(*GoogleCloudApigeeV1TargetServerConfig)(nil),                                                              // 267: google.cloud.apigee.v1.GoogleCloudApigeeV1TargetServerConfig
	(*GoogleCloudApigeeV1TestDatastoreResponse)(nil),                                                           // 268: google.cloud.apigee.v1.GoogleCloudApigeeV1TestDatastoreResponse
	(*GoogleCloudApigeeV1TlsInfo)(nil),                                                                         // 269: google.cloud.apigee.v1.GoogleCloudApigeeV1TlsInfo
	(*GoogleCloudApigeeV1TlsInfoCommonName)(nil),                                                               // 270: google.cloud.apigee.v1.GoogleCloudApigeeV1TlsInfoCommonName
	(*GoogleCloudApigeeV1TlsInfoConfig)(nil),                                                                   // 271: google.cloud.apigee.v1.GoogleCloudApigeeV1TlsInfoConfig
	(*GoogleCloudApigeeV1TraceConfig)(nil),                                                                     // 272: google.cloud.apigee.v1.GoogleCloudApigeeV1TraceConfig
	(*GoogleCloudApigeeV1TraceConfigOverride)(nil),                                                             // 273: google.cloud.apigee.v1.GoogleCloudApigeeV1TraceConfigOverride
	(*GoogleCloudApigeeV1TraceSamplingConfig)(nil),                                                             // 274: google.cloud.apigee.v1.GoogleCloudApigeeV1TraceSamplingConfig
	(*GoogleCloudApigeeV1UpdateAppGroupAppKeyRequest)(nil),                                                     // 275: google.cloud.apigee.v1.GoogleCloudApigeeV1UpdateAppGroupAppKeyRequest
	(*GoogleCloudApigeeV1UpdateError)(nil),                                                                     // 276: google.cloud.apigee.v1.GoogleCloudApigeeV1UpdateError
	(*GoogleCloudApigeeV1UpdateSecurityIncidentRequest)(nil),                                                   // 277: google.cloud.apigee.v1.GoogleCloudApigeeV1UpdateSecurityIncidentRequest
	(*GoogleIamV1AuditConfig)(nil),                                                                             // 278: google.cloud.apigee.v1.GoogleIamV1AuditConfig
	(*GoogleIamV1AuditLogConfig)(nil),                                                                          // 279: google.cloud.apigee.v1.GoogleIamV1AuditLogConfig
	(*GoogleIamV1Binding)(nil),                                                                                 // 280: google.cloud.apigee.v1.GoogleIamV1Binding
	(*GoogleIamV1Policy)(nil),                                                                                  // 281: google.cloud.apigee.v1.GoogleIamV1Policy
	(*GoogleIamV1SetIamPolicyRequest)(nil),                                                                     // 282: google.cloud.apigee.v1.GoogleIamV1SetIamPolicyRequest
	(*GoogleIamV1TestIamPermissionsRequest)(nil),                                                               // 283: google.cloud.apigee.v1.GoogleIamV1TestIamPermissionsRequest
	(*GoogleIamV1TestIamPermissionsResponse)(nil),                                                              // 284: google.cloud.apigee.v1.GoogleIamV1TestIamPermissionsResponse
	(*GoogleLongrunningListOperationsResponse)(nil),                                                            // 285: google.cloud.apigee.v1.GoogleLongrunningListOperationsResponse
	(*GoogleLongrunningOperation)(nil),                                                                         // 286: google.cloud.apigee.v1.GoogleLongrunningOperation
	(*GoogleProtobufEmpty)(nil),                                                                                // 287: google.cloud.apigee.v1.GoogleProtobufEmpty
	(*GoogleRpcPreconditionFailure)(nil),                                                                       // 288: google.cloud.apigee.v1.GoogleRpcPreconditionFailure
	(*GoogleRpcPreconditionFailureViolation)(nil),                                                              // 289: google.cloud.apigee.v1.GoogleRpcPreconditionFailureViolation
	(*GoogleRpcStatus)(nil),                                                                                    // 290: google.cloud.apigee.v1.GoogleRpcStatus
	(*GoogleTypeExpr)(nil),                                                                                     // 291: google.cloud.apigee.v1.GoogleTypeExpr
	(*GoogleTypeInterval)(nil),                                                                                 // 292: google.cloud.apigee.v1.GoogleTypeInterval
	(*GoogleTypeMoney)(nil),                                                                                    // 293: google.cloud.apigee.v1.GoogleTypeMoney
	(*ListHybridIssuersRequest)(nil),                                                                           // 294: google.cloud.apigee.v1.ListHybridIssuersRequest
	(*CreateOrganizationRequest)(nil),                                                                          // 295: google.cloud.apigee.v1.CreateOrganizationRequest
	(*DeleteOrganizationRequest)(nil),                                                                          // 296: google.cloud.apigee.v1.DeleteOrganizationRequest
	(*GetOrganizationRequest)(nil),                                                                             // 297: google.cloud.apigee.v1.GetOrganizationRequest
	(*GetDeployedIngressConfigOrganizationRequest)(nil),                                                        // 298: google.cloud.apigee.v1.GetDeployedIngressConfigOrganizationRequest
	(*GetProjectMappingOrganizationRequest)(nil),                                                               // 299: google.cloud.apigee.v1.GetProjectMappingOrganizationRequest
	(*GetRuntimeConfigOrganizationRequest)(nil),                                                                // 300: google.cloud.apigee.v1.GetRuntimeConfigOrganizationRequest
	(*GetSecuritySettingsOrganizationRequest)(nil),                                                             // 301: google.cloud.apigee.v1.GetSecuritySettingsOrganizationRequest
	(*GetSyncAuthorizationOrganizationRequest)(nil),                                                            // 302: google.cloud.apigee.v1.GetSyncAuthorizationOrganizationRequest
	(*ListOrganizationsRequest)(nil),                                                                           // 303: google.cloud.apigee.v1.ListOrganizationsRequest
	(*SetAddonsOrganizationRequest)(nil),                                                                       // 304: google.cloud.apigee.v1.SetAddonsOrganizationRequest
	(*SetSyncAuthorizationOrganizationRequest)(nil),                                                            // 305: google.cloud.apigee.v1.SetSyncAuthorizationOrganizationRequest
	(*UpdateOrganizationRequest)(nil),                                                                          // 306: google.cloud.apigee.v1.UpdateOrganizationRequest
	(*UpdateSecuritySettingsOrganizationRequest)(nil),                                                          // 307: google.cloud.apigee.v1.UpdateSecuritySettingsOrganizationRequest
	(*CreateOrganizationsAnalyticsDatastoreRequest)(nil),                                                       // 308: google.cloud.apigee.v1.CreateOrganizationsAnalyticsDatastoreRequest
	(*DeleteOrganizationsAnalyticsDatastoreRequest)(nil),                                                       // 309: google.cloud.apigee.v1.DeleteOrganizationsAnalyticsDatastoreRequest
	(*GetOrganizationsAnalyticsDatastoreRequest)(nil),                                                          // 310: google.cloud.apigee.v1.GetOrganizationsAnalyticsDatastoreRequest
	(*ListOrganizationsAnalyticsDatastoresRequest)(nil),                                                        // 311: google.cloud.apigee.v1.ListOrganizationsAnalyticsDatastoresRequest
	(*TestOrganizationsAnalyticsDatastoreRequest)(nil),                                                         // 312: google.cloud.apigee.v1.TestOrganizationsAnalyticsDatastoreRequest
	(*UpdateOrganizationsAnalyticsDatastoreRequest)(nil),                                                       // 313: google.cloud.apigee.v1.UpdateOrganizationsAnalyticsDatastoreRequest
	(*AttributesOrganizationsApiproductRequest)(nil),                                                           // 314: google.cloud.apigee.v1.AttributesOrganizationsApiproductRequest
	(*CreateOrganizationsApiproductRequest)(nil),                                                               // 315: google.cloud.apigee.v1.CreateOrganizationsApiproductRequest
	(*DeleteOrganizationsApiproductRequest)(nil),                                                               // 316: google.cloud.apigee.v1.DeleteOrganizationsApiproductRequest
	(*GetOrganizationsApiproductRequest)(nil),                                                                  // 317: google.cloud.apigee.v1.GetOrganizationsApiproductRequest
	(*ListOrganizationsApiproductsRequest)(nil),                                                                // 318: google.cloud.apigee.v1.ListOrganizationsApiproductsRequest
	(*UpdateOrganizationsApiproductRequest)(nil),                                                               // 319: google.cloud.apigee.v1.UpdateOrganizationsApiproductRequest
	(*DeleteOrganizationsApiproductsAttributeRequest)(nil),                                                     // 320: google.cloud.apigee.v1.DeleteOrganizationsApiproductsAttributeRequest
	(*GetOrganizationsApiproductsAttributeRequest)(nil),                                                        // 321: google.cloud.apigee.v1.GetOrganizationsApiproductsAttributeRequest
	(*ListOrganizationsApiproductsAttributesRequest)(nil),                                                      // 322: google.cloud.apigee.v1.ListOrganizationsApiproductsAttributesRequest
	(*UpdateApiProductAttributeOrganizationsApiproductsAttributeRequest)(nil),                                  // 323: google.cloud.apigee.v1.UpdateApiProductAttributeOrganizationsApiproductsAttributeRequest
	(*CreateOrganizationsApiproductsRateplanRequest)(nil),                                                      // 324: google.cloud.apigee.v1.CreateOrganizationsApiproductsRateplanRequest
	(*DeleteOrganizationsApiproductsRateplanRequest)(nil),                                                      // 325: google.cloud.apigee.v1.DeleteOrganizationsApiproductsRateplanRequest
	(*GetOrganizationsApiproductsRateplanRequest)(nil),                                                         // 326: google.cloud.apigee.v1.GetOrganizationsApiproductsRateplanRequest
	(*ListOrganizationsApiproductsRateplansRequest)(nil),                                                       // 327: google.cloud.apigee.v1.ListOrganizationsApiproductsRateplansRequest
	(*UpdateOrganizationsApiproductsRateplanRequest)(nil),                                                      // 328: google.cloud.apigee.v1.UpdateOrganizationsApiproductsRateplanRequest
	(*CreateOrganizationsApiRequest)(nil),                                                                      // 329: google.cloud.apigee.v1.CreateOrganizationsApiRequest
	(*DeleteOrganizationsApiRequest)(nil),                                                                      // 330: google.cloud.apigee.v1.DeleteOrganizationsApiRequest
	(*GetOrganizationsApiRequest)(nil),                                                                         // 331: google.cloud.apigee.v1.GetOrganizationsApiRequest
	(*ListOrganizationsApisRequest)(nil),                                                                       // 332: google.cloud.apigee.v1.ListOrganizationsApisRequest
	(*PatchOrganizationsApiRequest)(nil),                                                                       // 333: google.cloud.apigee.v1.PatchOrganizationsApiRequest
	(*ListOrganizationsApisDeploymentsRequest)(nil),                                                            // 334: google.cloud.apigee.v1.ListOrganizationsApisDeploymentsRequest
	(*CreateOrganizationsApisKeyvaluemapRequest)(nil),                                                          // 335: google.cloud.apigee.v1.CreateOrganizationsApisKeyvaluemapRequest
	(*DeleteOrganizationsApisKeyvaluemapRequest)(nil),                                                          // 336: google.cloud.apigee.v1.DeleteOrganizationsApisKeyvaluemapRequest
	(*CreateOrganizationsApisKeyvaluemapsEntryRequest)(nil),                                                    // 337: google.cloud.apigee.v1.CreateOrganizationsApisKeyvaluemapsEntryRequest
	(*DeleteOrganizationsApisKeyvaluemapsEntryRequest)(nil),                                                    // 338: google.cloud.apigee.v1.DeleteOrganizationsApisKeyvaluemapsEntryRequest
	(*GetOrganizationsApisKeyvaluemapsEntryRequest)(nil),                                                       // 339: google.cloud.apigee.v1.GetOrganizationsApisKeyvaluemapsEntryRequest
	(*ListOrganizationsApisKeyvaluemapsEntriesRequest)(nil),                                                    // 340: google.cloud.apigee.v1.ListOrganizationsApisKeyvaluemapsEntriesRequest
	(*UpdateOrganizationsApisKeyvaluemapsEntryRequest)(nil),                                                    // 341: google.cloud.apigee.v1.UpdateOrganizationsApisKeyvaluemapsEntryRequest
	(*DeleteOrganizationsApisRevisionRequest)(nil),                                                             // 342: google.cloud.apigee.v1.DeleteOrganizationsApisRevisionRequest
	(*GetOrganizationsApisRevisionRequest)(nil),                                                                // 343: google.cloud.apigee.v1.GetOrganizationsApisRevisionRequest
	(*UpdateApiProxyRevisionOrganizationsApisRevisionRequest)(nil),                                             // 344: google.cloud.apigee.v1.UpdateApiProxyRevisionOrganizationsApisRevisionRequest
	(*ListOrganizationsApisRevisionsDeploymentsRequest)(nil),                                                   // 345: google.cloud.apigee.v1.ListOrganizationsApisRevisionsDeploymentsRequest
	(*CreateOrganizationsAppgroupRequest)(nil),                                                                 // 346: google.cloud.apigee.v1.CreateOrganizationsAppgroupRequest
	(*DeleteOrganizationsAppgroupRequest)(nil),                                                                 // 347: google.cloud.apigee.v1.DeleteOrganizationsAppgroupRequest
	(*GetOrganizationsAppgroupRequest)(nil),                                                                    // 348: google.cloud.apigee.v1.GetOrganizationsAppgroupRequest
	(*ListOrganizationsAppgroupsRequest)(nil),                                                                  // 349: google.cloud.apigee.v1.ListOrganizationsAppgroupsRequest
	(*UpdateOrganizationsAppgroupRequest)(nil),                                                                 // 350: google.cloud.apigee.v1.UpdateOrganizationsAppgroupRequest
	(*CreateOrganizationsAppgroupsAppRequest)(nil),                                                             // 351: google.cloud.apigee.v1.CreateOrganizationsAppgroupsAppRequest
	(*DeleteOrganizationsAppgroupsAppRequest)(nil),                                                             // 352: google.cloud.apigee.v1.DeleteOrganizationsAppgroupsAppRequest
	(*GetOrganizationsAppgroupsAppRequest)(nil),                                                                // 353: google.cloud.apigee.v1.GetOrganizationsAppgroupsAppRequest
	(*ListOrganizationsAppgroupsAppsRequest)(nil),                                                              // 354: google.cloud.apigee.v1.ListOrganizationsAppgroupsAppsRequest
	(*UpdateOrganizationsAppgroupsAppRequest)(nil),                                                             // 355: google.cloud.apigee.v1.UpdateOrganizationsAppgroupsAppRequest
	(*CreateOrganizationsAppgroupsAppsKeyRequest)(nil),                                                         // 356: google.cloud.apigee.v1.CreateOrganizationsAppgroupsAppsKeyRequest
	(*DeleteOrganizationsAppgroupsAppsKeyRequest)(nil),                                                         // 357: google.cloud.apigee.v1.DeleteOrganizationsAppgroupsAppsKeyRequest
	(*GetOrganizationsAppgroupsAppsKeyRequest)(nil),                                                            // 358: google.cloud.apigee.v1.GetOrganizationsAppgroupsAppsKeyRequest
	(*UpdateAppGroupAppKeyOrganizationsAppgroupsAppsKeyRequest)(nil),                                           // 359: google.cloud.apigee.v1.UpdateAppGroupAppKeyOrganizationsAppgroupsAppsKeyRequest
	(*DeleteOrganizationsAppgroupsAppsKeysApiproductRequest)(nil),                                              // 360: google.cloud.apigee.v1.DeleteOrganizationsAppgroupsAppsKeysApiproductRequest
	(*UpdateAppGroupAppKeyApiProductOrganizationsAppgroupsAppsKeysApiproductRequest)(nil),                      // 361: google.cloud.apigee.v1.UpdateAppGroupAppKeyApiProductOrganizationsAppgroupsAppsKeysApiproductRequest
	(*GetOrganizationsAppRequest)(nil),                                                                         // 362: google.cloud.apigee.v1.GetOrganizationsAppRequest
	(*ListOrganizationsAppsRequest)(nil),                                                                       // 363: google.cloud.apigee.v1.ListOrganizationsAppsRequest
	(*CreateOrganizationsDatacollectorRequest)(nil),                                                            // 364: google.cloud.apigee.v1.CreateOrganizationsDatacollectorRequest
	(*DeleteOrganizationsDatacollectorRequest)(nil),                                                            // 365: google.cloud.apigee.v1.DeleteOrganizationsDatacollectorRequest
	(*GetOrganizationsDatacollectorRequest)(nil),                                                               // 366: google.cloud.apigee.v1.GetOrganizationsDatacollectorRequest
	(*ListOrganizationsDatacollectorsRequest)(nil),                                                             // 367: google.cloud.apigee.v1.ListOrganizationsDatacollectorsRequest
	(*PatchOrganizationsDatacollectorRequest)(nil),                                                             // 368: google.cloud.apigee.v1.PatchOrganizationsDatacollectorRequest
	(*ListOrganizationsDeploymentsRequest)(nil),                                                                // 369: google.cloud.apigee.v1.ListOrganizationsDeploymentsRequest
	(*AttributesOrganizationsDeveloperRequest)(nil),                                                            // 370: google.cloud.apigee.v1.AttributesOrganizationsDeveloperRequest
	(*CreateOrganizationsDeveloperRequest)(nil),                                                                // 371: google.cloud.apigee.v1.CreateOrganizationsDeveloperRequest
	(*DeleteOrganizationsDeveloperRequest)(nil),                                                                // 372: google.cloud.apigee.v1.DeleteOrganizationsDeveloperRequest
	(*GetOrganizationsDeveloperRequest)(nil),                                                                   // 373: google.cloud.apigee.v1.GetOrganizationsDeveloperRequest
	(*GetBalanceOrganizationsDeveloperRequest)(nil),                                                            // 374: google.cloud.apigee.v1.GetBalanceOrganizationsDeveloperRequest
	(*GetMonetizationConfigOrganizationsDeveloperRequest)(nil),                                                 // 375: google.cloud.apigee.v1.GetMonetizationConfigOrganizationsDeveloperRequest
	(*ListOrganizationsDevelopersRequest)(nil),                                                                 // 376: google.cloud.apigee.v1.ListOrganizationsDevelopersRequest
	(*SetDeveloperStatusOrganizationsDeveloperRequest)(nil),                                                    // 377: google.cloud.apigee.v1.SetDeveloperStatusOrganizationsDeveloperRequest
	(*UpdateOrganizationsDeveloperRequest)(nil),                                                                // 378: google.cloud.apigee.v1.UpdateOrganizationsDeveloperRequest
	(*UpdateMonetizationConfigOrganizationsDeveloperRequest)(nil),                                              // 379: google.cloud.apigee.v1.UpdateMonetizationConfigOrganizationsDeveloperRequest
	(*AttributesOrganizationsDevelopersAppRequest)(nil),                                                        // 380: google.cloud.apigee.v1.AttributesOrganizationsDevelopersAppRequest
	(*CreateOrganizationsDevelopersAppRequest)(nil),                                                            // 381: google.cloud.apigee.v1.CreateOrganizationsDevelopersAppRequest
	(*DeleteOrganizationsDevelopersAppRequest)(nil),                                                            // 382: google.cloud.apigee.v1.DeleteOrganizationsDevelopersAppRequest
	(*GenerateKeyPairOrUpdateDeveloperAppStatusOrganizationsDevelopersAppRequest)(nil),                         // 383: google.cloud.apigee.v1.GenerateKeyPairOrUpdateDeveloperAppStatusOrganizationsDevelopersAppRequest
	(*GetOrganizationsDevelopersAppRequest)(nil),                                                               // 384: google.cloud.apigee.v1.GetOrganizationsDevelopersAppRequest
	(*ListOrganizationsDevelopersAppsRequest)(nil),                                                             // 385: google.cloud.apigee.v1.ListOrganizationsDevelopersAppsRequest
	(*UpdateOrganizationsDevelopersAppRequest)(nil),                                                            // 386: google.cloud.apigee.v1.UpdateOrganizationsDevelopersAppRequest
	(*DeleteOrganizationsDevelopersAppsAttributeRequest)(nil),                                                  // 387: google.cloud.apigee.v1.DeleteOrganizationsDevelopersAppsAttributeRequest
	(*GetOrganizationsDevelopersAppsAttributeRequest)(nil),                                                     // 388: google.cloud.apigee.v1.GetOrganizationsDevelopersAppsAttributeRequest
	(*ListOrganizationsDevelopersAppsAttributesRequest)(nil),                                                   // 389: google.cloud.apigee.v1.ListOrganizationsDevelopersAppsAttributesRequest
	(*UpdateDeveloperAppAttributeOrganizationsDevelopersAppsAttributeRequest)(nil),                             // 390: google.cloud.apigee.v1.UpdateDeveloperAppAttributeOrganizationsDevelopersAppsAttributeRequest
	(*CreateOrganizationsDevelopersAppsKeyRequest)(nil),                                                        // 391: google.cloud.apigee.v1.CreateOrganizationsDevelopersAppsKeyRequest
	(*DeleteOrganizationsDevelopersAppsKeyRequest)(nil),                                                        // 392: google.cloud.apigee.v1.DeleteOrganizationsDevelopersAppsKeyRequest
	(*GetOrganizationsDevelopersAppsKeyRequest)(nil),                                                           // 393: google.cloud.apigee.v1.GetOrganizationsDevelopersAppsKeyRequest
	(*ReplaceDeveloperAppKeyOrganizationsDevelopersAppsKeyRequest)(nil),                                        // 394: google.cloud.apigee.v1.ReplaceDeveloperAppKeyOrganizationsDevelopersAppsKeyRequest
	(*UpdateDeveloperAppKeyOrganizationsDevelopersAppsKeyRequest)(nil),                                         // 395: google.cloud.apigee.v1.UpdateDeveloperAppKeyOrganizationsDevelopersAppsKeyRequest
	(*DeleteOrganizationsDevelopersAppsKeysApiproductRequest)(nil),                                             // 396: google.cloud.apigee.v1.DeleteOrganizationsDevelopersAppsKeysApiproductRequest
	(*UpdateDeveloperAppKeyApiProductOrganizationsDevelopersAppsKeysApiproductRequest)(nil),                    // 397: google.cloud.apigee.v1.UpdateDeveloperAppKeyApiProductOrganizationsDevelopersAppsKeysApiproductRequest
	(*CreateOrganizationsDevelopersAppsKeysCreateRequest)(nil),                                                 // 398: google.cloud.apigee.v1.CreateOrganizationsDevelopersAppsKeysCreateRequest
	(*DeleteOrganizationsDevelopersAttributeRequest)(nil),                                                      // 399: google.cloud.apigee.v1.DeleteOrganizationsDevelopersAttributeRequest
	(*GetOrganizationsDevelopersAttributeRequest)(nil),                                                         // 400: google.cloud.apigee.v1.GetOrganizationsDevelopersAttributeRequest
	(*ListOrganizationsDevelopersAttributesRequest)(nil),                                                       // 401: google.cloud.apigee.v1.ListOrganizationsDevelopersAttributesRequest
	(*UpdateDeveloperAttributeOrganizationsDevelopersAttributeRequest)(nil),                                    // 402: google.cloud.apigee.v1.UpdateDeveloperAttributeOrganizationsDevelopersAttributeRequest
	(*AdjustOrganizationsDevelopersBalanceRequest)(nil),                                                        // 403: google.cloud.apigee.v1.AdjustOrganizationsDevelopersBalanceRequest
	(*CreditOrganizationsDevelopersBalanceRequest)(nil),                                                        // 404: google.cloud.apigee.v1.CreditOrganizationsDevelopersBalanceRequest
	(*CreateOrganizationsDevelopersSubscriptionRequest)(nil),                                                   // 405: google.cloud.apigee.v1.CreateOrganizationsDevelopersSubscriptionRequest
	(*ExpireOrganizationsDevelopersSubscriptionRequest)(nil),                                                   // 406: google.cloud.apigee.v1.ExpireOrganizationsDevelopersSubscriptionRequest
	(*GetOrganizationsDevelopersSubscriptionRequest)(nil),                                                      // 407: google.cloud.apigee.v1.GetOrganizationsDevelopersSubscriptionRequest
	(*ListOrganizationsDevelopersSubscriptionsRequest)(nil),                                                    // 408: google.cloud.apigee.v1.ListOrganizationsDevelopersSubscriptionsRequest
	(*CreateOrganizationsEndpointAttachmentRequest)(nil),                                                       // 409: google.cloud.apigee.v1.CreateOrganizationsEndpointAttachmentRequest
	(*DeleteOrganizationsEndpointAttachmentRequest)(nil),                                                       // 410: google.cloud.apigee.v1.DeleteOrganizationsEndpointAttachmentRequest
	(*GetOrganizationsEndpointAttachmentRequest)(nil),                                                          // 411: google.cloud.apigee.v1.GetOrganizationsEndpointAttachmentRequest
	(*ListOrganizationsEndpointAttachmentsRequest)(nil),                                                        // 412: google.cloud.apigee.v1.ListOrganizationsEndpointAttachmentsRequest
	(*CreateOrganizationsEnvgroupRequest)(nil),                                                                 // 413: google.cloud.apigee.v1.CreateOrganizationsEnvgroupRequest
	(*DeleteOrganizationsEnvgroupRequest)(nil),                                                                 // 414: google.cloud.apigee.v1.DeleteOrganizationsEnvgroupRequest
	(*GetOrganizationsEnvgroupRequest)(nil),                                                                    // 415: google.cloud.apigee.v1.GetOrganizationsEnvgroupRequest
	(*GetDeployedIngressConfigOrganizationsEnvgroupRequest)(nil),                                               // 416: google.cloud.apigee.v1.GetDeployedIngressConfigOrganizationsEnvgroupRequest
	(*ListOrganizationsEnvgroupsRequest)(nil),                                                                  // 417: google.cloud.apigee.v1.ListOrganizationsEnvgroupsRequest
	(*PatchOrganizationsEnvgroupRequest)(nil),                                                                  // 418: google.cloud.apigee.v1.PatchOrganizationsEnvgroupRequest
	(*CreateOrganizationsEnvgroupsAttachmentRequest)(nil),                                                      // 419: google.cloud.apigee.v1.CreateOrganizationsEnvgroupsAttachmentRequest
	(*DeleteOrganizationsEnvgroupsAttachmentRequest)(nil),                                                      // 420: google.cloud.apigee.v1.DeleteOrganizationsEnvgroupsAttachmentRequest
	(*GetOrganizationsEnvgroupsAttachmentRequest)(nil),                                                         // 421: google.cloud.apigee.v1.GetOrganizationsEnvgroupsAttachmentRequest
	(*ListOrganizationsEnvgroupsAttachmentsRequest)(nil),                                                       // 422: google.cloud.apigee.v1.ListOrganizationsEnvgroupsAttachmentsRequest
	(*CreateOrganizationsEnvironmentRequest)(nil),                                                              // 423: google.cloud.apigee.v1.CreateOrganizationsEnvironmentRequest
	(*DeleteOrganizationsEnvironmentRequest)(nil),                                                              // 424: google.cloud.apigee.v1.DeleteOrganizationsEnvironmentRequest
	(*GetOrganizationsEnvironmentRequest)(nil),                                                                 // 425: google.cloud.apigee.v1.GetOrganizationsEnvironmentRequest
	(*GetAddonsConfigOrganizationsEnvironmentRequest)(nil),                                                     // 426: google.cloud.apigee.v1.GetAddonsConfigOrganizationsEnvironmentRequest
	(*GetApiSecurityRuntimeConfigOrganizationsEnvironmentRequest)(nil),                                         // 427: google.cloud.apigee.v1.GetApiSecurityRuntimeConfigOrganizationsEnvironmentRequest
	(*GetDebugmaskOrganizationsEnvironmentRequest)(nil),                                                        // 428: google.cloud.apigee.v1.GetDebugmaskOrganizationsEnvironmentRequest
	(*GetDeployedConfigOrganizationsEnvironmentRequest)(nil),                                                   // 429: google.cloud.apigee.v1.GetDeployedConfigOrganizationsEnvironmentRequest
	(*GetSecurityActionsConfigOrganizationsEnvironmentRequest)(nil),                                            // 430: google.cloud.apigee.v1.GetSecurityActionsConfigOrganizationsEnvironmentRequest
	(*GetTraceConfigOrganizationsEnvironmentRequest)(nil),                                                      // 431: google.cloud.apigee.v1.GetTraceConfigOrganizationsEnvironmentRequest
	(*ModifyEnvironmentOrganizationsEnvironmentRequest)(nil),                                                   // 432: google.cloud.apigee.v1.ModifyEnvironmentOrganizationsEnvironmentRequest
	(*SubscribeOrganizationsEnvironmentRequest)(nil),                                                           // 433: google.cloud.apigee.v1.SubscribeOrganizationsEnvironmentRequest
	(*UnsubscribeOrganizationsEnvironmentRequest)(nil),                                                         // 434: google.cloud.apigee.v1.UnsubscribeOrganizationsEnvironmentRequest
	(*UpdateOrganizationsEnvironmentRequest)(nil),                                                              // 435: google.cloud.apigee.v1.UpdateOrganizationsEnvironmentRequest
	(*UpdateDebugmaskOrganizationsEnvironmentRequest)(nil),                                                     // 436: google.cloud.apigee.v1.UpdateDebugmaskOrganizationsEnvironmentRequest
	(*UpdateEnvironmentOrganizationsEnvironmentRequest)(nil),                                                   // 437: google.cloud.apigee.v1.UpdateEnvironmentOrganizationsEnvironmentRequest
	(*UpdateSecurityActionsConfigOrganizationsEnvironmentRequest)(nil),                                         // 438: google.cloud.apigee.v1.UpdateSecurityActionsConfigOrganizationsEnvironmentRequest
	(*UpdateTraceConfigOrganizationsEnvironmentRequest)(nil),                                                   // 439: google.cloud.apigee.v1.UpdateTraceConfigOrganizationsEnvironmentRequest
	(*SetAddonEnablementOrganizationsEnvironmentsAddonsConfigRequest)(nil),                                     // 440: google.cloud.apigee.v1.SetAddonEnablementOrganizationsEnvironmentsAddonsConfigRequest
	(*GetSchemav2OrganizationsEnvironmentsAnalyticsAdminRequest)(nil),                                          // 441: google.cloud.apigee.v1.GetSchemav2OrganizationsEnvironmentsAnalyticsAdminRequest
	(*CreateOrganizationsEnvironmentsAnalyticsExportRequest)(nil),                                              // 442: google.cloud.apigee.v1.CreateOrganizationsEnvironmentsAnalyticsExportRequest
	(*GetOrganizationsEnvironmentsAnalyticsExportRequest)(nil),                                                 // 443: google.cloud.apigee.v1.GetOrganizationsEnvironmentsAnalyticsExportRequest
	(*ListOrganizationsEnvironmentsAnalyticsExportsRequest)(nil),                                               // 444: google.cloud.apigee.v1.ListOrganizationsEnvironmentsAnalyticsExportsRequest
	(*ListOrganizationsEnvironmentsApisDeploymentsRequest)(nil),                                                // 445: google.cloud.apigee.v1.ListOrganizationsEnvironmentsApisDeploymentsRequest
	(*DeployOrganizationsEnvironmentsApisRevisionRequest)(nil),                                                 // 446: google.cloud.apigee.v1.DeployOrganizationsEnvironmentsApisRevisionRequest
	(*GetDeploymentsOrganizationsEnvironmentsApisRevisionRequest)(nil),                                         // 447: google.cloud.apigee.v1.GetDeploymentsOrganizationsEnvironmentsApisRevisionRequest
	(*UndeployOrganizationsEnvironmentsApisRevisionRequest)(nil),                                               // 448: google.cloud.apigee.v1.UndeployOrganizationsEnvironmentsApisRevisionRequest
	(*CreateOrganizationsEnvironmentsApisRevisionsDebugsessionRequest)(nil),                                    // 449: google.cloud.apigee.v1.CreateOrganizationsEnvironmentsApisRevisionsDebugsessionRequest
	(*DeleteDataOrganizationsEnvironmentsApisRevisionsDebugsessionRequest)(nil),                                // 450: google.cloud.apigee.v1.DeleteDataOrganizationsEnvironmentsApisRevisionsDebugsessionRequest
	(*GetOrganizationsEnvironmentsApisRevisionsDebugsessionRequest)(nil),                                       // 451: google.cloud.apigee.v1.GetOrganizationsEnvironmentsApisRevisionsDebugsessionRequest
	(*ListOrganizationsEnvironmentsApisRevisionsDebugsessionsRequest)(nil),                                     // 452: google.cloud.apigee.v1.ListOrganizationsEnvironmentsApisRevisionsDebugsessionsRequest
	(*GetOrganizationsEnvironmentsApisRevisionsDebugsessionsDataRequest)(nil),                                  // 453: google.cloud.apigee.v1.GetOrganizationsEnvironmentsApisRevisionsDebugsessionsDataRequest
	(*GenerateDeployChangeReportOrganizationsEnvironmentsApisRevisionsDeploymentRequest)(nil),                  // 454: google.cloud.apigee.v1.GenerateDeployChangeReportOrganizationsEnvironmentsApisRevisionsDeploymentRequest
	(*GenerateUndeployChangeReportOrganizationsEnvironmentsApisRevisionsDeploymentRequest)(nil),                // 455: google.cloud.apigee.v1.GenerateUndeployChangeReportOrganizationsEnvironmentsApisRevisionsDeploymentRequest
	(*CreateOrganizationsEnvironmentsArchiveDeploymentRequest)(nil),                                            // 456: google.cloud.apigee.v1.CreateOrganizationsEnvironmentsArchiveDeploymentRequest
	(*DeleteOrganizationsEnvironmentsArchiveDeploymentRequest)(nil),                                            // 457: google.cloud.apigee.v1.DeleteOrganizationsEnvironmentsArchiveDeploymentRequest
	(*GenerateDownloadUrlOrganizationsEnvironmentsArchiveDeploymentRequest)(nil),                               // 458: google.cloud.apigee.v1.GenerateDownloadUrlOrganizationsEnvironmentsArchiveDeploymentRequest
	(*GenerateUploadUrlOrganizationsEnvironmentsArchiveDeploymentRequest)(nil),                                 // 459: google.cloud.apigee.v1.GenerateUploadUrlOrganizationsEnvironmentsArchiveDeploymentRequest
	(*GetOrganizationsEnvironmentsArchiveDeploymentRequest)(nil),                                               // 460: google.cloud.apigee.v1.GetOrganizationsEnvironmentsArchiveDeploymentRequest
	(*ListOrganizationsEnvironmentsArchiveDeploymentsRequest)(nil),                                             // 461: google.cloud.apigee.v1.ListOrganizationsEnvironmentsArchiveDeploymentsRequest
	(*PatchOrganizationsEnvironmentsArchiveDeploymentRequest)(nil),                                             // 462: google.cloud.apigee.v1.PatchOrganizationsEnvironmentsArchiveDeploymentRequest
	(*DeleteOrganizationsEnvironmentsCacheRequest)(nil),                                                        // 463: google.cloud.apigee.v1.DeleteOrganizationsEnvironmentsCacheRequest
	(*ListOrganizationsEnvironmentsDeploymentsRequest)(nil),                                                    // 464: google.cloud.apigee.v1.ListOrganizationsEnvironmentsDeploymentsRequest
	(*AttachSharedFlowToFlowHookOrganizationsEnvironmentsFlowhookRequest)(nil),                                 // 465: google.cloud.apigee.v1.AttachSharedFlowToFlowHookOrganizationsEnvironmentsFlowhookRequest
	(*DetachSharedFlowFromFlowHookOrganizationsEnvironmentsFlowhookRequest)(nil),                               // 466: google.cloud.apigee.v1.DetachSharedFlowFromFlowHookOrganizationsEnvironmentsFlowhookRequest
	(*GetOrganizationsEnvironmentsFlowhookRequest)(nil),                                                        // 467: google.cloud.apigee.v1.GetOrganizationsEnvironmentsFlowhookRequest
	(*CreateOrganizationsEnvironmentsKeystoreRequest)(nil),                                                     // 468: google.cloud.apigee.v1.CreateOrganizationsEnvironmentsKeystoreRequest
	(*DeleteOrganizationsEnvironmentsKeystoreRequest)(nil),                                                     // 469: google.cloud.apigee.v1.DeleteOrganizationsEnvironmentsKeystoreRequest
	(*GetOrganizationsEnvironmentsKeystoreRequest)(nil),                                                        // 470: google.cloud.apigee.v1.GetOrganizationsEnvironmentsKeystoreRequest
	(*CreateOrganizationsEnvironmentsKeystoresAliaseRequest)(nil),                                              // 471: google.cloud.apigee.v1.CreateOrganizationsEnvironmentsKeystoresAliaseRequest
	(*CsrOrganizationsEnvironmentsKeystoresAliaseRequest)(nil),                                                 // 472: google.cloud.apigee.v1.CsrOrganizationsEnvironmentsKeystoresAliaseRequest
	(*DeleteOrganizationsEnvironmentsKeystoresAliaseRequest)(nil),                                              // 473: google.cloud.apigee.v1.DeleteOrganizationsEnvironmentsKeystoresAliaseRequest
	(*GetOrganizationsEnvironmentsKeystoresAliaseRequest)(nil),                                                 // 474: google.cloud.apigee.v1.GetOrganizationsEnvironmentsKeystoresAliaseRequest
	(*GetCertificateOrganizationsEnvironmentsKeystoresAliaseRequest)(nil),                                      // 475: google.cloud.apigee.v1.GetCertificateOrganizationsEnvironmentsKeystoresAliaseRequest
	(*UpdateOrganizationsEnvironmentsKeystoresAliaseRequest)(nil),                                              // 476: google.cloud.apigee.v1.UpdateOrganizationsEnvironmentsKeystoresAliaseRequest
	(*CreateOrganizationsEnvironmentsKeyvaluemapRequest)(nil),                                                  // 477: google.cloud.apigee.v1.CreateOrganizationsEnvironmentsKeyvaluemapRequest
	(*DeleteOrganizationsEnvironmentsKeyvaluemapRequest)(nil),                                                  // 478: google.cloud.apigee.v1.DeleteOrganizationsEnvironmentsKeyvaluemapRequest
	(*CreateOrganizationsEnvironmentsKeyvaluemapsEntryRequest)(nil),                                            // 479: google.cloud.apigee.v1.CreateOrganizationsEnvironmentsKeyvaluemapsEntryRequest
	(*DeleteOrganizationsEnvironmentsKeyvaluemapsEntryRequest)(nil),                                            // 480: google.cloud.apigee.v1.DeleteOrganizationsEnvironmentsKeyvaluemapsEntryRequest
	(*GetOrganizationsEnvironmentsKeyvaluemapsEntryRequest)(nil),                                               // 481: google.cloud.apigee.v1.GetOrganizationsEnvironmentsKeyvaluemapsEntryRequest
	(*ListOrganizationsEnvironmentsKeyvaluemapsEntriesRequest)(nil),                                            // 482: google.cloud.apigee.v1.ListOrganizationsEnvironmentsKeyvaluemapsEntriesRequest
	(*UpdateOrganizationsEnvironmentsKeyvaluemapsEntryRequest)(nil),                                            // 483: google.cloud.apigee.v1.UpdateOrganizationsEnvironmentsKeyvaluemapsEntryRequest
	(*GetOrganizationsEnvironmentsOptimizedStatRequest)(nil),                                                   // 484: google.cloud.apigee.v1.GetOrganizationsEnvironmentsOptimizedStatRequest
	(*CreateOrganizationsEnvironmentsQueryRequest)(nil),                                                        // 485: google.cloud.apigee.v1.CreateOrganizationsEnvironmentsQueryRequest
	(*GetOrganizationsEnvironmentsQueryRequest)(nil),                                                           // 486: google.cloud.apigee.v1.GetOrganizationsEnvironmentsQueryRequest
	(*GetResultOrganizationsEnvironmentsQueryRequest)(nil),                                                     // 487: google.cloud.apigee.v1.GetResultOrganizationsEnvironmentsQueryRequest
	(*GetResulturlOrganizationsEnvironmentsQueryRequest)(nil),                                                  // 488: google.cloud.apigee.v1.GetResulturlOrganizationsEnvironmentsQueryRequest
	(*ListOrganizationsEnvironmentsQueriesRequest)(nil),                                                        // 489: google.cloud.apigee.v1.ListOrganizationsEnvironmentsQueriesRequest
	(*CreateOrganizationsEnvironmentsReferenceRequest)(nil),                                                    // 490: google.cloud.apigee.v1.CreateOrganizationsEnvironmentsReferenceRequest
	(*DeleteOrganizationsEnvironmentsReferenceRequest)(nil),                                                    // 491: google.cloud.apigee.v1.DeleteOrganizationsEnvironmentsReferenceRequest
	(*GetOrganizationsEnvironmentsReferenceRequest)(nil),                                                       // 492: google.cloud.apigee.v1.GetOrganizationsEnvironmentsReferenceRequest
	(*UpdateOrganizationsEnvironmentsReferenceRequest)(nil),                                                    // 493: google.cloud.apigee.v1.UpdateOrganizationsEnvironmentsReferenceRequest
	(*CreateOrganizationsEnvironmentsResourcefileRequest)(nil),                                                 // 494: google.cloud.apigee.v1.CreateOrganizationsEnvironmentsResourcefileRequest
	(*DeleteOrganizationsEnvironmentsResourcefileRequest)(nil),                                                 // 495: google.cloud.apigee.v1.DeleteOrganizationsEnvironmentsResourcefileRequest
	(*GetOrganizationsEnvironmentsResourcefileRequest)(nil),                                                    // 496: google.cloud.apigee.v1.GetOrganizationsEnvironmentsResourcefileRequest
	(*ListOrganizationsEnvironmentsResourcefilesRequest)(nil),                                                  // 497: google.cloud.apigee.v1.ListOrganizationsEnvironmentsResourcefilesRequest
	(*ListEnvironmentResourcesOrganizationsEnvironmentsResourcefileRequest)(nil),                               // 498: google.cloud.apigee.v1.ListEnvironmentResourcesOrganizationsEnvironmentsResourcefileRequest
	(*UpdateOrganizationsEnvironmentsResourcefileRequest)(nil),                                                 // 499: google.cloud.apigee.v1.UpdateOrganizationsEnvironmentsResourcefileRequest
	(*CreateOrganizationsEnvironmentsSecurityActionRequest)(nil),                                               // 500: google.cloud.apigee.v1.CreateOrganizationsEnvironmentsSecurityActionRequest
	(*DisableOrganizationsEnvironmentsSecurityActionRequest)(nil),                                              // 501: google.cloud.apigee.v1.DisableOrganizationsEnvironmentsSecurityActionRequest
	(*EnableOrganizationsEnvironmentsSecurityActionRequest)(nil),                                               // 502: google.cloud.apigee.v1.EnableOrganizationsEnvironmentsSecurityActionRequest
	(*GetOrganizationsEnvironmentsSecurityActionRequest)(nil),                                                  // 503: google.cloud.apigee.v1.GetOrganizationsEnvironmentsSecurityActionRequest
	(*ListOrganizationsEnvironmentsSecurityActionsRequest)(nil),                                                // 504: google.cloud.apigee.v1.ListOrganizationsEnvironmentsSecurityActionsRequest
	(*BatchUpdateOrganizationsEnvironmentsSecurityIncidentRequest)(nil),                                        // 505: google.cloud.apigee.v1.BatchUpdateOrganizationsEnvironmentsSecurityIncidentRequest
	(*GetOrganizationsEnvironmentsSecurityIncidentRequest)(nil),                                                // 506: google.cloud.apigee.v1.GetOrganizationsEnvironmentsSecurityIncidentRequest
	(*ListOrganizationsEnvironmentsSecurityIncidentsRequest)(nil),                                              // 507: google.cloud.apigee.v1.ListOrganizationsEnvironmentsSecurityIncidentsRequest
	(*PatchOrganizationsEnvironmentsSecurityIncidentRequest)(nil),                                              // 508: google.cloud.apigee.v1.PatchOrganizationsEnvironmentsSecurityIncidentRequest
	(*CreateOrganizationsEnvironmentsSecurityReportRequest)(nil),                                               // 509: google.cloud.apigee.v1.CreateOrganizationsEnvironmentsSecurityReportRequest
	(*GetOrganizationsEnvironmentsSecurityReportRequest)(nil),                                                  // 510: google.cloud.apigee.v1.GetOrganizationsEnvironmentsSecurityReportRequest
	(*GetResultOrganizationsEnvironmentsSecurityReportRequest)(nil),                                            // 511: google.cloud.apigee.v1.GetResultOrganizationsEnvironmentsSecurityReportRequest
	(*GetResultViewOrganizationsEnvironmentsSecurityReportRequest)(nil),                                        // 512: google.cloud.apigee.v1.GetResultViewOrganizationsEnvironmentsSecurityReportRequest
	(*ListOrganizationsEnvironmentsSecurityReportsRequest)(nil),                                                // 513: google.cloud.apigee.v1.ListOrganizationsEnvironmentsSecurityReportsRequest
	(*QueryTabularStatsOrganizationsEnvironmentsSecurityStatRequest)(nil),                                      // 514: google.cloud.apigee.v1.QueryTabularStatsOrganizationsEnvironmentsSecurityStatRequest
	(*QueryTimeSeriesStatsOrganizationsEnvironmentsSecurityStatRequest)(nil),                                   // 515: google.cloud.apigee.v1.QueryTimeSeriesStatsOrganizationsEnvironmentsSecurityStatRequest
	(*ListOrganizationsEnvironmentsSharedflowsDeploymentsRequest)(nil),                                         // 516: google.cloud.apigee.v1.ListOrganizationsEnvironmentsSharedflowsDeploymentsRequest
	(*DeployOrganizationsEnvironmentsSharedflowsRevisionRequest)(nil),                                          // 517: google.cloud.apigee.v1.DeployOrganizationsEnvironmentsSharedflowsRevisionRequest
	(*GetDeploymentsOrganizationsEnvironmentsSharedflowsRevisionRequest)(nil),                                  // 518: google.cloud.apigee.v1.GetDeploymentsOrganizationsEnvironmentsSharedflowsRevisionRequest
	(*UndeployOrganizationsEnvironmentsSharedflowsRevisionRequest)(nil),                                        // 519: google.cloud.apigee.v1.UndeployOrganizationsEnvironmentsSharedflowsRevisionRequest
	(*GetOrganizationsEnvironmentsStatRequest)(nil),                                                            // 520: google.cloud.apigee.v1.GetOrganizationsEnvironmentsStatRequest
	(*CreateOrganizationsEnvironmentsTargetserverRequest)(nil),                                                 // 521: google.cloud.apigee.v1.CreateOrganizationsEnvironmentsTargetserverRequest
	(*DeleteOrganizationsEnvironmentsTargetserverRequest)(nil),                                                 // 522: google.cloud.apigee.v1.DeleteOrganizationsEnvironmentsTargetserverRequest
	(*GetOrganizationsEnvironmentsTargetserverRequest)(nil),                                                    // 523: google.cloud.apigee.v1.GetOrganizationsEnvironmentsTargetserverRequest
	(*UpdateOrganizationsEnvironmentsTargetserverRequest)(nil),                                                 // 524: google.cloud.apigee.v1.UpdateOrganizationsEnvironmentsTargetserverRequest
	(*CreateOrganizationsEnvironmentsTraceConfigOverrideRequest)(nil),                                          // 525: google.cloud.apigee.v1.CreateOrganizationsEnvironmentsTraceConfigOverrideRequest
	(*DeleteOrganizationsEnvironmentsTraceConfigOverrideRequest)(nil),                                          // 526: google.cloud.apigee.v1.DeleteOrganizationsEnvironmentsTraceConfigOverrideRequest
	(*GetOrganizationsEnvironmentsTraceConfigOverrideRequest)(nil),                                             // 527: google.cloud.apigee.v1.GetOrganizationsEnvironmentsTraceConfigOverrideRequest
	(*ListOrganizationsEnvironmentsTraceConfigOverridesRequest)(nil),                                           // 528: google.cloud.apigee.v1.ListOrganizationsEnvironmentsTraceConfigOverridesRequest
	(*PatchOrganizationsEnvironmentsTraceConfigOverrideRequest)(nil),                                           // 529: google.cloud.apigee.v1.PatchOrganizationsEnvironmentsTraceConfigOverrideRequest
	(*CreateOrganizationsHostQueryRequest)(nil),                                                                // 530: google.cloud.apigee.v1.CreateOrganizationsHostQueryRequest
	(*GetOrganizationsHostQueryRequest)(nil),                                                                   // 531: google.cloud.apigee.v1.GetOrganizationsHostQueryRequest
	(*GetResultOrganizationsHostQueryRequest)(nil),                                                             // 532: google.cloud.apigee.v1.GetResultOrganizationsHostQueryRequest
	(*GetResultViewOrganizationsHostQueryRequest)(nil),                                                         // 533: google.cloud.apigee.v1.GetResultViewOrganizationsHostQueryRequest
	(*ListOrganizationsHostQueriesRequest)(nil),                                                                // 534: google.cloud.apigee.v1.ListOrganizationsHostQueriesRequest
	(*CreateOrganizationsHostSecurityReportRequest)(nil),                                                       // 535: google.cloud.apigee.v1.CreateOrganizationsHostSecurityReportRequest
	(*GetOrganizationsHostSecurityReportRequest)(nil),                                                          // 536: google.cloud.apigee.v1.GetOrganizationsHostSecurityReportRequest
	(*GetResultOrganizationsHostSecurityReportRequest)(nil),                                                    // 537: google.cloud.apigee.v1.GetResultOrganizationsHostSecurityReportRequest
	(*GetResultViewOrganizationsHostSecurityReportRequest)(nil),                                                // 538: google.cloud.apigee.v1.GetResultViewOrganizationsHostSecurityReportRequest
	(*ListOrganizationsHostSecurityReportsRequest)(nil),                                                        // 539: google.cloud.apigee.v1.ListOrganizationsHostSecurityReportsRequest
	(*GetOrganizationsHostStatRequest)(nil),                                                                    // 540: google.cloud.apigee.v1.GetOrganizationsHostStatRequest
	(*CreateOrganizationsInstanceRequest)(nil),                                                                 // 541: google.cloud.apigee.v1.CreateOrganizationsInstanceRequest
	(*DeleteOrganizationsInstanceRequest)(nil),                                                                 // 542: google.cloud.apigee.v1.DeleteOrganizationsInstanceRequest
	(*GetOrganizationsInstanceRequest)(nil),                                                                    // 543: google.cloud.apigee.v1.GetOrganizationsInstanceRequest
	(*ListOrganizationsInstancesRequest)(nil),                                                                  // 544: google.cloud.apigee.v1.ListOrganizationsInstancesRequest
	(*PatchOrganizationsInstanceRequest)(nil),                                                                  // 545: google.cloud.apigee.v1.PatchOrganizationsInstanceRequest
	(*ReportStatusOrganizationsInstanceRequest)(nil),                                                           // 546: google.cloud.apigee.v1.ReportStatusOrganizationsInstanceRequest
	(*CreateOrganizationsInstancesAttachmentRequest)(nil),                                                      // 547: google.cloud.apigee.v1.CreateOrganizationsInstancesAttachmentRequest
	(*DeleteOrganizationsInstancesAttachmentRequest)(nil),                                                      // 548: google.cloud.apigee.v1.DeleteOrganizationsInstancesAttachmentRequest
	(*GetOrganizationsInstancesAttachmentRequest)(nil),                                                         // 549: google.cloud.apigee.v1.GetOrganizationsInstancesAttachmentRequest
	(*ListOrganizationsInstancesAttachmentsRequest)(nil),                                                       // 550: google.cloud.apigee.v1.ListOrganizationsInstancesAttachmentsRequest
	(*CreateOrganizationsInstancesCanaryevaluationRequest)(nil),                                                // 551: google.cloud.apigee.v1.CreateOrganizationsInstancesCanaryevaluationRequest
	(*GetOrganizationsInstancesCanaryevaluationRequest)(nil),                                                   // 552: google.cloud.apigee.v1.GetOrganizationsInstancesCanaryevaluationRequest
	(*ActivateOrganizationsInstancesNatAddresseRequest)(nil),                                                   // 553: google.cloud.apigee.v1.ActivateOrganizationsInstancesNatAddresseRequest
	(*CreateOrganizationsInstancesNatAddresseRequest)(nil),                                                     // 554: google.cloud.apigee.v1.CreateOrganizationsInstancesNatAddresseRequest
	(*DeleteOrganizationsInstancesNatAddresseRequest)(nil),                                                     // 555: google.cloud.apigee.v1.DeleteOrganizationsInstancesNatAddresseRequest
	(*GetOrganizationsInstancesNatAddresseRequest)(nil),                                                        // 556: google.cloud.apigee.v1.GetOrganizationsInstancesNatAddresseRequest
	(*ListOrganizationsInstancesNatAddressesRequest)(nil),                                                      // 557: google.cloud.apigee.v1.ListOrganizationsInstancesNatAddressesRequest
	(*CreateOrganizationsKeyvaluemapRequest)(nil),                                                              // 558: google.cloud.apigee.v1.CreateOrganizationsKeyvaluemapRequest
	(*DeleteOrganizationsKeyvaluemapRequest)(nil),                                                              // 559: google.cloud.apigee.v1.DeleteOrganizationsKeyvaluemapRequest
	(*CreateOrganizationsKeyvaluemapsEntryRequest)(nil),                                                        // 560: google.cloud.apigee.v1.CreateOrganizationsKeyvaluemapsEntryRequest
	(*DeleteOrganizationsKeyvaluemapsEntryRequest)(nil),                                                        // 561: google.cloud.apigee.v1.DeleteOrganizationsKeyvaluemapsEntryRequest
	(*GetOrganizationsKeyvaluemapsEntryRequest)(nil),                                                           // 562: google.cloud.apigee.v1.GetOrganizationsKeyvaluemapsEntryRequest
	(*ListOrganizationsKeyvaluemapsEntriesRequest)(nil),                                                        // 563: google.cloud.apigee.v1.ListOrganizationsKeyvaluemapsEntriesRequest
	(*UpdateOrganizationsKeyvaluemapsEntryRequest)(nil),                                                        // 564: google.cloud.apigee.v1.UpdateOrganizationsKeyvaluemapsEntryRequest
	(*GetOrganizationsOptimizedHostStatRequest)(nil),                                                           // 565: google.cloud.apigee.v1.GetOrganizationsOptimizedHostStatRequest
	(*CreateOrganizationsReportRequest)(nil),                                                                   // 566: google.cloud.apigee.v1.CreateOrganizationsReportRequest
	(*DeleteOrganizationsReportRequest)(nil),                                                                   // 567: google.cloud.apigee.v1.DeleteOrganizationsReportRequest
	(*GetOrganizationsReportRequest)(nil),                                                                      // 568: google.cloud.apigee.v1.GetOrganizationsReportRequest
	(*ListOrganizationsReportsRequest)(nil),                                                                    // 569: google.cloud.apigee.v1.ListOrganizationsReportsRequest
	(*UpdateOrganizationsReportRequest)(nil),                                                                   // 570: google.cloud.apigee.v1.UpdateOrganizationsReportRequest
	(*BatchComputeOrganizationsSecurityAssessmentResultRequest)(nil),                                           // 571: google.cloud.apigee.v1.BatchComputeOrganizationsSecurityAssessmentResultRequest
	(*CreateOrganizationsSecurityProfileRequest)(nil),                                                          // 572: google.cloud.apigee.v1.CreateOrganizationsSecurityProfileRequest
	(*DeleteOrganizationsSecurityProfileRequest)(nil),                                                          // 573: google.cloud.apigee.v1.DeleteOrganizationsSecurityProfileRequest
	(*GetOrganizationsSecurityProfileRequest)(nil),                                                             // 574: google.cloud.apigee.v1.GetOrganizationsSecurityProfileRequest
	(*ListOrganizationsSecurityProfilesRequest)(nil),                                                           // 575: google.cloud.apigee.v1.ListOrganizationsSecurityProfilesRequest
	(*ListRevisionsOrganizationsSecurityProfileRequest)(nil),                                                   // 576: google.cloud.apigee.v1.ListRevisionsOrganizationsSecurityProfileRequest
	(*PatchOrganizationsSecurityProfileRequest)(nil),                                                           // 577: google.cloud.apigee.v1.PatchOrganizationsSecurityProfileRequest
	(*ComputeEnvironmentScoresOrganizationsSecurityProfilesEnvironmentRequest)(nil),                            // 578: google.cloud.apigee.v1.ComputeEnvironmentScoresOrganizationsSecurityProfilesEnvironmentRequest
	(*CreateOrganizationsSecurityProfilesEnvironmentRequest)(nil),                                              // 579: google.cloud.apigee.v1.CreateOrganizationsSecurityProfilesEnvironmentRequest
	(*DeleteOrganizationsSecurityProfilesEnvironmentRequest)(nil),                                              // 580: google.cloud.apigee.v1.DeleteOrganizationsSecurityProfilesEnvironmentRequest
	(*CreateOrganizationsSharedflowRequest)(nil),                                                               // 581: google.cloud.apigee.v1.CreateOrganizationsSharedflowRequest
	(*DeleteOrganizationsSharedflowRequest)(nil),                                                               // 582: google.cloud.apigee.v1.DeleteOrganizationsSharedflowRequest
	(*GetOrganizationsSharedflowRequest)(nil),                                                                  // 583: google.cloud.apigee.v1.GetOrganizationsSharedflowRequest
	(*ListOrganizationsSharedflowsRequest)(nil),                                                                // 584: google.cloud.apigee.v1.ListOrganizationsSharedflowsRequest
	(*ListOrganizationsSharedflowsDeploymentsRequest)(nil),                                                     // 585: google.cloud.apigee.v1.ListOrganizationsSharedflowsDeploymentsRequest
	(*DeleteOrganizationsSharedflowsRevisionRequest)(nil),                                                      // 586: google.cloud.apigee.v1.DeleteOrganizationsSharedflowsRevisionRequest
	(*GetOrganizationsSharedflowsRevisionRequest)(nil),                                                         // 587: google.cloud.apigee.v1.GetOrganizationsSharedflowsRevisionRequest
	(*UpdateSharedFlowRevisionOrganizationsSharedflowsRevisionRequest)(nil),                                    // 588: google.cloud.apigee.v1.UpdateSharedFlowRevisionOrganizationsSharedflowsRevisionRequest
	(*ListOrganizationsSharedflowsRevisionsDeploymentsRequest)(nil),                                            // 589: google.cloud.apigee.v1.ListOrganizationsSharedflowsRevisionsDeploymentsRequest
	(*CreateOrganizationsSitesApicategoryRequest)(nil),                                                         // 590: google.cloud.apigee.v1.CreateOrganizationsSitesApicategoryRequest
	(*DeleteOrganizationsSitesApicategoryRequest)(nil),                                                         // 591: google.cloud.apigee.v1.DeleteOrganizationsSitesApicategoryRequest
	(*GetOrganizationsSitesApicategoryRequest)(nil),                                                            // 592: google.cloud.apigee.v1.GetOrganizationsSitesApicategoryRequest
	(*ListOrganizationsSitesApicategoriesRequest)(nil),                                                         // 593: google.cloud.apigee.v1.ListOrganizationsSitesApicategoriesRequest
	(*PatchOrganizationsSitesApicategoryRequest)(nil),                                                          // 594: google.cloud.apigee.v1.PatchOrganizationsSitesApicategoryRequest
	(*CreateOrganizationsSitesApidocRequest)(nil),                                                              // 595: google.cloud.apigee.v1.CreateOrganizationsSitesApidocRequest
	(*DeleteOrganizationsSitesApidocRequest)(nil),                                                              // 596: google.cloud.apigee.v1.DeleteOrganizationsSitesApidocRequest
	(*GetOrganizationsSitesApidocRequest)(nil),                                                                 // 597: google.cloud.apigee.v1.GetOrganizationsSitesApidocRequest
	(*GetDocumentationOrganizationsSitesApidocRequest)(nil),                                                    // 598: google.cloud.apigee.v1.GetDocumentationOrganizationsSitesApidocRequest
	(*ListOrganizationsSitesApidocsRequest)(nil),                                                               // 599: google.cloud.apigee.v1.ListOrganizationsSitesApidocsRequest
	(*UpdateOrganizationsSitesApidocRequest)(nil),                                                              // 600: google.cloud.apigee.v1.UpdateOrganizationsSitesApidocRequest
	(*UpdateDocumentationOrganizationsSitesApidocRequest)(nil),                                                 // 601: google.cloud.apigee.v1.UpdateDocumentationOrganizationsSitesApidocRequest
	(*ProvisionOrganizationProjectRequest)(nil),                                                                // 602: google.cloud.apigee.v1.ProvisionOrganizationProjectRequest
	nil,                             // 603: google.cloud.apigee.v1.GoogleCloudApigeeV1ApiProxy.LabelsEntry
	nil,                             // 604: google.cloud.apigee.v1.GoogleCloudApigeeV1ApiProxyRevision.EntityMetaDataAsPropertiesEntry
	nil,                             // 605: google.cloud.apigee.v1.GoogleCloudApigeeV1ArchiveDeployment.LabelsEntry
	nil,                             // 606: google.cloud.apigee.v1.GoogleCloudApigeeV1DebugMask.NamespacesEntry
	nil,                             // 607: google.cloud.apigee.v1.GoogleCloudApigeeV1DeploymentConfig.AttributesEntry
	nil,                             // 608: google.cloud.apigee.v1.GoogleCloudApigeeV1DeploymentConfig.EndpointsEntry
	nil,                             // 609: google.cloud.apigee.v1.GoogleCloudApigeeV1EnvironmentConfig.FeatureFlagsEntry
	nil,                             // 610: google.cloud.apigee.v1.GoogleCloudApigeeV1OperationMetadataProgress.DetailsEntry
	nil,                             // 611: google.cloud.apigee.v1.GoogleCloudApigeeV1QueryTimeSeriesStatsResponseSequence.DimensionsEntry
	nil,                             // 612: google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityAssessmentResultScoringResult.AssessmentRecommendationsEntry
	nil,                             // 613: google.cloud.apigee.v1.GoogleCloudApigeeV1SharedFlowRevision.EntityMetaDataAsPropertiesEntry
	nil,                             // 614: google.cloud.apigee.v1.GoogleLongrunningOperation.MetadataEntry
	nil,                             // 615: google.cloud.apigee.v1.GoogleLongrunningOperation.ResponseEntry
	(*any1.Any)(nil),                // 616: google.protobuf.Any
	(*timestamp.Timestamp)(nil),     // 617: google.protobuf.Timestamp
	(*duration.Duration)(nil),       // 618: google.protobuf.Duration
	(*longrunningpb.Operation)(nil), // 619: google.longrunning.Operation
}
var file_mockgcp_cloud_apigee_v1_service_proto_depIdxs = []int32{
	1,   // 0: google.cloud.apigee.v1.EdgeConfigstoreBundleBadBundle.violations:type_name -> google.cloud.apigee.v1.EdgeConfigstoreBundleBadBundleViolation
	616, // 1: google.cloud.apigee.v1.GoogleApiHttpBody.extensions:type_name -> google.protobuf.Any
	5,   // 2: google.cloud.apigee.v1.GoogleCloudApigeeV1Access.get:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1AccessGet
	7,   // 3: google.cloud.apigee.v1.GoogleCloudApigeeV1Access.remove:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1AccessRemove
	8,   // 4: google.cloud.apigee.v1.GoogleCloudApigeeV1Access.set:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1AccessSet
	12,  // 5: google.cloud.apigee.v1.GoogleCloudApigeeV1AddonsConfig.advanced_api_ops_config:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1AdvancedApiOpsConfig
	15,  // 6: google.cloud.apigee.v1.GoogleCloudApigeeV1AddonsConfig.analytics_config:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1AnalyticsConfig
	26,  // 7: google.cloud.apigee.v1.GoogleCloudApigeeV1AddonsConfig.api_security_config:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1ApiSecurityConfig
	54,  // 8: google.cloud.apigee.v1.GoogleCloudApigeeV1AddonsConfig.connectors_platform_config:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1ConnectorsPlatformConfig
	119, // 9: google.cloud.apigee.v1.GoogleCloudApigeeV1AddonsConfig.integration_config:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1IntegrationConfig
	164, // 10: google.cloud.apigee.v1.GoogleCloudApigeeV1AddonsConfig.monetization_config:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1MonetizationConfig
	293, // 11: google.cloud.apigee.v1.GoogleCloudApigeeV1AdjustDeveloperBalanceRequest.adjustment:type_name -> google.cloud.apigee.v1.GoogleTypeMoney
	48,  // 12: google.cloud.apigee.v1.GoogleCloudApigeeV1Alias.certs_info:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1Certificate
	617, // 13: google.cloud.apigee.v1.GoogleCloudApigeeV1AnalyticsConfig.update_time:type_name -> google.protobuf.Timestamp
	16,  // 14: google.cloud.apigee.v1.GoogleCloudApigeeV1ApiCategoryResponse.data:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1ApiCategory
	110, // 15: google.cloud.apigee.v1.GoogleCloudApigeeV1ApiDocDocumentation.graphql_documentation:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1GraphqlDocumentation
	167, // 16: google.cloud.apigee.v1.GoogleCloudApigeeV1ApiDocDocumentation.oas_documentation:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1OASDocumentation
	19,  // 17: google.cloud.apigee.v1.GoogleCloudApigeeV1ApiDocDocumentationResponse.data:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1ApiDocDocumentation
	18,  // 18: google.cloud.apigee.v1.GoogleCloudApigeeV1ApiDocResponse.data:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1ApiDoc
	36,  // 19: google.cloud.apigee.v1.GoogleCloudApigeeV1ApiProduct.attributes:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1Attribute
	109, // 20: google.cloud.apigee.v1.GoogleCloudApigeeV1ApiProduct.graphql_operation_group:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1GraphQLOperationGroup
	112, // 21: google.cloud.apigee.v1.GoogleCloudApigeeV1ApiProduct.grpc_operation_group:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1GrpcOperationGroup
	170, // 22: google.cloud.apigee.v1.GoogleCloudApigeeV1ApiProduct.operation_group:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1OperationGroup
	603, // 23: google.cloud.apigee.v1.GoogleCloudApigeeV1ApiProxy.labels:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1ApiProxy.LabelsEntry
	89,  // 24: google.cloud.apigee.v1.GoogleCloudApigeeV1ApiProxy.meta_data:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1EntityMetadata
	53,  // 25: google.cloud.apigee.v1.GoogleCloudApigeeV1ApiProxyRevision.configuration_version:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1ConfigVersion
	604, // 26: google.cloud.apigee.v1.GoogleCloudApigeeV1ApiProxyRevision.entity_meta_data_as_properties:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1ApiProxyRevision.EntityMetaDataAsPropertiesEntry
	209, // 27: google.cloud.apigee.v1.GoogleCloudApigeeV1ApiProxyRevision.resource_files:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1ResourceFiles
	617, // 28: google.cloud.apigee.v1.GoogleCloudApigeeV1ApiSecurityRuntimeConfig.update_time:type_name -> google.protobuf.Timestamp
	23,  // 29: google.cloud.apigee.v1.GoogleCloudApigeeV1App.api_products:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1ApiProductRef
	36,  // 30: google.cloud.apigee.v1.GoogleCloudApigeeV1App.attributes:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1Attribute
	55,  // 31: google.cloud.apigee.v1.GoogleCloudApigeeV1App.credentials:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1Credential
	36,  // 32: google.cloud.apigee.v1.GoogleCloudApigeeV1AppGroup.attributes:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1Attribute
	36,  // 33: google.cloud.apigee.v1.GoogleCloudApigeeV1AppGroupApp.attributes:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1Attribute
	55,  // 34: google.cloud.apigee.v1.GoogleCloudApigeeV1AppGroupApp.credentials:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1Credential
	3,   // 35: google.cloud.apigee.v1.GoogleCloudApigeeV1AppGroupAppKey.api_products:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1APIProductAssociation
	36,  // 36: google.cloud.apigee.v1.GoogleCloudApigeeV1AppGroupAppKey.attributes:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1Attribute
	605, // 37: google.cloud.apigee.v1.GoogleCloudApigeeV1ArchiveDeployment.labels:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1ArchiveDeployment.LabelsEntry
	192, // 38: google.cloud.apigee.v1.GoogleCloudApigeeV1AsyncQuery.query_params:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1QueryMetadata
	34,  // 39: google.cloud.apigee.v1.GoogleCloudApigeeV1AsyncQuery.result:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1AsyncQueryResult
	192, // 40: google.cloud.apigee.v1.GoogleCloudApigeeV1AsyncQueryResultView.metadata:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1QueryMetadata
	616, // 41: google.cloud.apigee.v1.GoogleCloudApigeeV1AsyncQueryResultView.rows:type_name -> google.protobuf.Any
	36,  // 42: google.cloud.apigee.v1.GoogleCloudApigeeV1Attributes.attribute:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1Attribute
	40,  // 43: google.cloud.apigee.v1.GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsRequest.include:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsRequestResourceArray
	39,  // 44: google.cloud.apigee.v1.GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsRequest.include_all_resources:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsRequestIncludeAll
	41,  // 45: google.cloud.apigee.v1.GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsRequestResourceArray.resources:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsRequestResourceArrayResource
	617, // 46: google.cloud.apigee.v1.GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsResponse.assessment_time:type_name -> google.protobuf.Timestamp
	237, // 47: google.cloud.apigee.v1.GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsResponse.security_assessment_results:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityAssessmentResult
	277, // 48: google.cloud.apigee.v1.GoogleCloudApigeeV1BatchUpdateSecurityIncidentsRequest.requests:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1UpdateSecurityIncidentRequest
	243, // 49: google.cloud.apigee.v1.GoogleCloudApigeeV1BatchUpdateSecurityIncidentsResponse.security_incidents:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityIncident
	617, // 50: google.cloud.apigee.v1.GoogleCloudApigeeV1CanaryEvaluation.create_time:type_name -> google.protobuf.Timestamp
	617, // 51: google.cloud.apigee.v1.GoogleCloudApigeeV1CanaryEvaluation.end_time:type_name -> google.protobuf.Timestamp
	46,  // 52: google.cloud.apigee.v1.GoogleCloudApigeeV1CanaryEvaluation.metric_labels:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1CanaryEvaluationMetricLabels
	617, // 53: google.cloud.apigee.v1.GoogleCloudApigeeV1CanaryEvaluation.start_time:type_name -> google.protobuf.Timestamp
	47,  // 54: google.cloud.apigee.v1.GoogleCloudApigeeV1Certificate.cert_info:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1CertInfo
	51,  // 55: google.cloud.apigee.v1.GoogleCloudApigeeV1ComputeEnvironmentScoresRequest.filters:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1ComputeEnvironmentScoresRequestFilter
	292, // 56: google.cloud.apigee.v1.GoogleCloudApigeeV1ComputeEnvironmentScoresRequest.time_range:type_name -> google.cloud.apigee.v1.GoogleTypeInterval
	225, // 57: google.cloud.apigee.v1.GoogleCloudApigeeV1ComputeEnvironmentScoresResponse.scores:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1Score
	23,  // 58: google.cloud.apigee.v1.GoogleCloudApigeeV1Credential.api_products:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1ApiProductRef
	36,  // 59: google.cloud.apigee.v1.GoogleCloudApigeeV1Credential.attributes:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1Attribute
	293, // 60: google.cloud.apigee.v1.GoogleCloudApigeeV1CreditDeveloperBalanceRequest.transaction_amount:type_name -> google.cloud.apigee.v1.GoogleTypeMoney
	58,  // 61: google.cloud.apigee.v1.GoogleCloudApigeeV1CustomReport.metrics:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1CustomReportMetric
	206, // 62: google.cloud.apigee.v1.GoogleCloudApigeeV1CustomReport.properties:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1ReportProperty
	62,  // 63: google.cloud.apigee.v1.GoogleCloudApigeeV1Datastore.datastore_config:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1DatastoreConfig
	606, // 64: google.cloud.apigee.v1.GoogleCloudApigeeV1DebugMask.namespaces:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1DebugMask.NamespacesEntry
	617, // 65: google.cloud.apigee.v1.GoogleCloudApigeeV1DebugSession.create_time:type_name -> google.protobuf.Timestamp
	179, // 66: google.cloud.apigee.v1.GoogleCloudApigeeV1DebugSessionTransaction.point:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1Point
	290, // 67: google.cloud.apigee.v1.GoogleCloudApigeeV1Deployment.errors:type_name -> google.cloud.apigee.v1.GoogleRpcStatus
	116, // 68: google.cloud.apigee.v1.GoogleCloudApigeeV1Deployment.instances:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1InstanceDeploymentStatus
	178, // 69: google.cloud.apigee.v1.GoogleCloudApigeeV1Deployment.pods:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1PodStatus
	72,  // 70: google.cloud.apigee.v1.GoogleCloudApigeeV1Deployment.route_conflicts:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict
	71,  // 71: google.cloud.apigee.v1.GoogleCloudApigeeV1DeploymentChangeReport.routing_changes:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1DeploymentChangeReportRoutingChange
	72,  // 72: google.cloud.apigee.v1.GoogleCloudApigeeV1DeploymentChangeReport.routing_conflicts:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict
	288, // 73: google.cloud.apigee.v1.GoogleCloudApigeeV1DeploymentChangeReport.validation_errors:type_name -> google.cloud.apigee.v1.GoogleRpcPreconditionFailure
	73,  // 74: google.cloud.apigee.v1.GoogleCloudApigeeV1DeploymentChangeReportRoutingChange.from_deployment:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1DeploymentChangeReportRoutingDeployment
	73,  // 75: google.cloud.apigee.v1.GoogleCloudApigeeV1DeploymentChangeReportRoutingChange.to_deployment:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1DeploymentChangeReportRoutingDeployment
	73,  // 76: google.cloud.apigee.v1.GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict.conflicting_deployment:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1DeploymentChangeReportRoutingDeployment
	607, // 77: google.cloud.apigee.v1.GoogleCloudApigeeV1DeploymentConfig.attributes:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1DeploymentConfig.AttributesEntry
	608, // 78: google.cloud.apigee.v1.GoogleCloudApigeeV1DeploymentConfig.endpoints:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1DeploymentConfig.EndpointsEntry
	36,  // 79: google.cloud.apigee.v1.GoogleCloudApigeeV1Developer.attributes:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1Attribute
	36,  // 80: google.cloud.apigee.v1.GoogleCloudApigeeV1DeveloperApp.attributes:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1Attribute
	55,  // 81: google.cloud.apigee.v1.GoogleCloudApigeeV1DeveloperApp.credentials:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1Credential
	616, // 82: google.cloud.apigee.v1.GoogleCloudApigeeV1DeveloperAppKey.api_products:type_name -> google.protobuf.Any
	36,  // 83: google.cloud.apigee.v1.GoogleCloudApigeeV1DeveloperAppKey.attributes:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1Attribute
	80,  // 84: google.cloud.apigee.v1.GoogleCloudApigeeV1DeveloperBalance.wallets:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1DeveloperBalanceWallet
	293, // 85: google.cloud.apigee.v1.GoogleCloudApigeeV1DeveloperBalanceWallet.balance:type_name -> google.cloud.apigee.v1.GoogleTypeMoney
	162, // 86: google.cloud.apigee.v1.GoogleCloudApigeeV1DimensionMetric.metrics:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1Metric
	166, // 87: google.cloud.apigee.v1.GoogleCloudApigeeV1Environment.node_config:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1NodeConfig
	188, // 88: google.cloud.apigee.v1.GoogleCloudApigeeV1Environment.properties:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1Properties
	215, // 89: google.cloud.apigee.v1.GoogleCloudApigeeV1EnvironmentConfig.addons_config:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1RuntimeAddonsConfig
	617, // 90: google.cloud.apigee.v1.GoogleCloudApigeeV1EnvironmentConfig.create_time:type_name -> google.protobuf.Timestamp
	60,  // 91: google.cloud.apigee.v1.GoogleCloudApigeeV1EnvironmentConfig.data_collectors:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1DataCollectorConfig
	64,  // 92: google.cloud.apigee.v1.GoogleCloudApigeeV1EnvironmentConfig.debug_mask:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1DebugMask
	75,  // 93: google.cloud.apigee.v1.GoogleCloudApigeeV1EnvironmentConfig.deployment_groups:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1DeploymentGroupConfig
	74,  // 94: google.cloud.apigee.v1.GoogleCloudApigeeV1EnvironmentConfig.deployments:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1DeploymentConfig
	609, // 95: google.cloud.apigee.v1.GoogleCloudApigeeV1EnvironmentConfig.feature_flags:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1EnvironmentConfig.FeatureFlagsEntry
	99,  // 96: google.cloud.apigee.v1.GoogleCloudApigeeV1EnvironmentConfig.flowhooks:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1FlowHookConfig
	124, // 97: google.cloud.apigee.v1.GoogleCloudApigeeV1EnvironmentConfig.keystores:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1KeystoreConfig
	203, // 98: google.cloud.apigee.v1.GoogleCloudApigeeV1EnvironmentConfig.resource_references:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1ReferenceConfig
	207, // 99: google.cloud.apigee.v1.GoogleCloudApigeeV1EnvironmentConfig.resources:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1ResourceConfig
	267, // 100: google.cloud.apigee.v1.GoogleCloudApigeeV1EnvironmentConfig.targets:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1TargetServerConfig
	219, // 101: google.cloud.apigee.v1.GoogleCloudApigeeV1EnvironmentConfig.trace_config:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1RuntimeTraceConfig
	88,  // 102: google.cloud.apigee.v1.GoogleCloudApigeeV1EnvironmentGroupConfig.endpoint_chaining_rules:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1EndpointChainingRule
	214, // 103: google.cloud.apigee.v1.GoogleCloudApigeeV1EnvironmentGroupConfig.routing_rules:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1RoutingRule
	63,  // 104: google.cloud.apigee.v1.GoogleCloudApigeeV1ExportRequest.date_range:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1DateRange
	105, // 105: google.cloud.apigee.v1.GoogleCloudApigeeV1GetAsyncQueryResultUrlResponse.urls:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1GetAsyncQueryResultUrlResponseURLInfo
	36,  // 106: google.cloud.apigee.v1.GoogleCloudApigeeV1GraphQLOperationConfig.attributes:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1Attribute
	107, // 107: google.cloud.apigee.v1.GoogleCloudApigeeV1GraphQLOperationConfig.operations:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1GraphQLOperation
	199, // 108: google.cloud.apigee.v1.GoogleCloudApigeeV1GraphQLOperationConfig.quota:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1Quota
	108, // 109: google.cloud.apigee.v1.GoogleCloudApigeeV1GraphQLOperationGroup.operation_configs:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1GraphQLOperationConfig
	85,  // 110: google.cloud.apigee.v1.GoogleCloudApigeeV1GraphqlDocumentation.schema:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1DocumentationFile
	36,  // 111: google.cloud.apigee.v1.GoogleCloudApigeeV1GrpcOperationConfig.attributes:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1Attribute
	199, // 112: google.cloud.apigee.v1.GoogleCloudApigeeV1GrpcOperationConfig.quota:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1Quota
	111, // 113: google.cloud.apigee.v1.GoogleCloudApigeeV1GrpcOperationGroup.operation_configs:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1GrpcOperationConfig
	94,  // 114: google.cloud.apigee.v1.GoogleCloudApigeeV1IngressConfig.environment_groups:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1EnvironmentGroupConfig
	617, // 115: google.cloud.apigee.v1.GoogleCloudApigeeV1IngressConfig.revision_create_time:type_name -> google.protobuf.Timestamp
	6,   // 116: google.cloud.apigee.v1.GoogleCloudApigeeV1Instance.access_logging_config:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1AccessLoggingConfig
	117, // 117: google.cloud.apigee.v1.GoogleCloudApigeeV1InstanceDeploymentStatus.deployed_revisions:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1InstanceDeploymentStatusDeployedRevision
	118, // 118: google.cloud.apigee.v1.GoogleCloudApigeeV1InstanceDeploymentStatus.deployed_routes:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1InstanceDeploymentStatusDeployedRoute
	14,  // 119: google.cloud.apigee.v1.GoogleCloudApigeeV1KeystoreConfig.aliases:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1AliasRevisionConfig
	16,  // 120: google.cloud.apigee.v1.GoogleCloudApigeeV1ListApiCategoriesResponse.data:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1ApiCategory
	18,  // 121: google.cloud.apigee.v1.GoogleCloudApigeeV1ListApiDocsResponse.data:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1ApiDoc
	22,  // 122: google.cloud.apigee.v1.GoogleCloudApigeeV1ListApiProductsResponse.api_product:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1ApiProduct
	24,  // 123: google.cloud.apigee.v1.GoogleCloudApigeeV1ListApiProxiesResponse.proxies:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1ApiProxy
	30,  // 124: google.cloud.apigee.v1.GoogleCloudApigeeV1ListAppGroupAppsResponse.app_group_apps:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1AppGroupApp
	29,  // 125: google.cloud.apigee.v1.GoogleCloudApigeeV1ListAppGroupsResponse.app_groups:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1AppGroup
	28,  // 126: google.cloud.apigee.v1.GoogleCloudApigeeV1ListAppsResponse.app:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1App
	32,  // 127: google.cloud.apigee.v1.GoogleCloudApigeeV1ListArchiveDeploymentsResponse.archive_deployments:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1ArchiveDeployment
	33,  // 128: google.cloud.apigee.v1.GoogleCloudApigeeV1ListAsyncQueriesResponse.queries:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1AsyncQuery
	57,  // 129: google.cloud.apigee.v1.GoogleCloudApigeeV1ListCustomReportsResponse.qualifier:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1CustomReport
	59,  // 130: google.cloud.apigee.v1.GoogleCloudApigeeV1ListDataCollectorsResponse.data_collectors:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1DataCollector
	61,  // 131: google.cloud.apigee.v1.GoogleCloudApigeeV1ListDatastoresResponse.datastores:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1Datastore
	256, // 132: google.cloud.apigee.v1.GoogleCloudApigeeV1ListDebugSessionsResponse.sessions:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1Session
	69,  // 133: google.cloud.apigee.v1.GoogleCloudApigeeV1ListDeploymentsResponse.deployments:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1Deployment
	77,  // 134: google.cloud.apigee.v1.GoogleCloudApigeeV1ListDeveloperAppsResponse.app:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1DeveloperApp
	82,  // 135: google.cloud.apigee.v1.GoogleCloudApigeeV1ListDeveloperSubscriptionsResponse.developer_subscriptions:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1DeveloperSubscription
	87,  // 136: google.cloud.apigee.v1.GoogleCloudApigeeV1ListEndpointAttachmentsResponse.endpoint_attachments:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1EndpointAttachment
	93,  // 137: google.cloud.apigee.v1.GoogleCloudApigeeV1ListEnvironmentGroupAttachmentsResponse.environment_group_attachments:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1EnvironmentGroupAttachment
	92,  // 138: google.cloud.apigee.v1.GoogleCloudApigeeV1ListEnvironmentGroupsResponse.environment_groups:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1EnvironmentGroup
	208, // 139: google.cloud.apigee.v1.GoogleCloudApigeeV1ListEnvironmentResourcesResponse.resource_file:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1ResourceFile
	96,  // 140: google.cloud.apigee.v1.GoogleCloudApigeeV1ListExportsResponse.exports:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1Export
	255, // 141: google.cloud.apigee.v1.GoogleCloudApigeeV1ListHybridIssuersResponse.issuers:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1ServiceIssuersMapping
	115, // 142: google.cloud.apigee.v1.GoogleCloudApigeeV1ListInstanceAttachmentsResponse.attachments:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1InstanceAttachment
	114, // 143: google.cloud.apigee.v1.GoogleCloudApigeeV1ListInstancesResponse.instances:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1Instance
	121, // 144: google.cloud.apigee.v1.GoogleCloudApigeeV1ListKeyValueEntriesResponse.key_value_entries:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1KeyValueEntry
	165, // 145: google.cloud.apigee.v1.GoogleCloudApigeeV1ListNatAddressesResponse.nat_addresses:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1NatAddress
	76,  // 146: google.cloud.apigee.v1.GoogleCloudApigeeV1ListOfDevelopersResponse.developer:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1Developer
	177, // 147: google.cloud.apigee.v1.GoogleCloudApigeeV1ListOrganizationsResponse.organizations:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1OrganizationProjectMapping
	200, // 148: google.cloud.apigee.v1.GoogleCloudApigeeV1ListRatePlansResponse.rate_plans:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1RatePlan
	230, // 149: google.cloud.apigee.v1.GoogleCloudApigeeV1ListSecurityActionsResponse.security_actions:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityAction
	243, // 150: google.cloud.apigee.v1.GoogleCloudApigeeV1ListSecurityIncidentsResponse.security_incidents:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityIncident
	244, // 151: google.cloud.apigee.v1.GoogleCloudApigeeV1ListSecurityProfileRevisionsResponse.security_profiles:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityProfile
	244, // 152: google.cloud.apigee.v1.GoogleCloudApigeeV1ListSecurityProfilesResponse.security_profiles:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityProfile
	248, // 153: google.cloud.apigee.v1.GoogleCloudApigeeV1ListSecurityReportsResponse.security_reports:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityReport
	259, // 154: google.cloud.apigee.v1.GoogleCloudApigeeV1ListSharedFlowsResponse.shared_flows:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1SharedFlow
	273, // 155: google.cloud.apigee.v1.GoogleCloudApigeeV1ListTraceConfigOverridesResponse.trace_config_overrides:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1TraceConfigOverride
	616, // 156: google.cloud.apigee.v1.GoogleCloudApigeeV1Metric.values:type_name -> google.protobuf.Any
	85,  // 157: google.cloud.apigee.v1.GoogleCloudApigeeV1OASDocumentation.spec:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1DocumentationFile
	36,  // 158: google.cloud.apigee.v1.GoogleCloudApigeeV1OperationConfig.attributes:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1Attribute
	168, // 159: google.cloud.apigee.v1.GoogleCloudApigeeV1OperationConfig.operations:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1Operation
	199, // 160: google.cloud.apigee.v1.GoogleCloudApigeeV1OperationConfig.quota:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1Quota
	169, // 161: google.cloud.apigee.v1.GoogleCloudApigeeV1OperationGroup.operation_configs:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1OperationConfig
	172, // 162: google.cloud.apigee.v1.GoogleCloudApigeeV1OperationMetadata.progress:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1OperationMetadataProgress
	610, // 163: google.cloud.apigee.v1.GoogleCloudApigeeV1OperationMetadataProgress.details:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1OperationMetadataProgress.DetailsEntry
	175, // 164: google.cloud.apigee.v1.GoogleCloudApigeeV1OptimizedStats.response:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1OptimizedStatsResponse
	616, // 165: google.cloud.apigee.v1.GoogleCloudApigeeV1OptimizedStatsNode.data:type_name -> google.protobuf.Any
	161, // 166: google.cloud.apigee.v1.GoogleCloudApigeeV1OptimizedStatsResponse.meta_data:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1Metadata
	174, // 167: google.cloud.apigee.v1.GoogleCloudApigeeV1OptimizedStatsResponse.stats:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1OptimizedStatsNode
	10,  // 168: google.cloud.apigee.v1.GoogleCloudApigeeV1Organization.addons_config:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1AddonsConfig
	188, // 169: google.cloud.apigee.v1.GoogleCloudApigeeV1Organization.properties:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1Properties
	211, // 170: google.cloud.apigee.v1.GoogleCloudApigeeV1Point.results:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1Result
	184, // 171: google.cloud.apigee.v1.GoogleCloudApigeeV1ProfileConfig.categories:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1ProfileConfigCategory
	181, // 172: google.cloud.apigee.v1.GoogleCloudApigeeV1ProfileConfigCategory.abuse:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1ProfileConfigAbuse
	182, // 173: google.cloud.apigee.v1.GoogleCloudApigeeV1ProfileConfigCategory.authorization:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1ProfileConfigAuthorization
	183, // 174: google.cloud.apigee.v1.GoogleCloudApigeeV1ProfileConfigCategory.cors:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1ProfileConfigCORS
	186, // 175: google.cloud.apigee.v1.GoogleCloudApigeeV1ProfileConfigCategory.mediation:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1ProfileConfigMediation
	185, // 176: google.cloud.apigee.v1.GoogleCloudApigeeV1ProfileConfigCategory.mtls:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1ProfileConfigMTLS
	187, // 177: google.cloud.apigee.v1.GoogleCloudApigeeV1ProfileConfigCategory.threat:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1ProfileConfigThreat
	189, // 178: google.cloud.apigee.v1.GoogleCloudApigeeV1Properties.property:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1Property
	193, // 179: google.cloud.apigee.v1.GoogleCloudApigeeV1Query.metrics:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1QueryMetric
	616, // 180: google.cloud.apigee.v1.GoogleCloudApigeeV1Query.time_range:type_name -> google.protobuf.Any
	163, // 181: google.cloud.apigee.v1.GoogleCloudApigeeV1QueryTabularStatsRequest.metrics:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1MetricAggregation
	292, // 182: google.cloud.apigee.v1.GoogleCloudApigeeV1QueryTabularStatsRequest.time_range:type_name -> google.cloud.apigee.v1.GoogleTypeInterval
	616, // 183: google.cloud.apigee.v1.GoogleCloudApigeeV1QueryTabularStatsResponse.values:type_name -> google.protobuf.Any
	163, // 184: google.cloud.apigee.v1.GoogleCloudApigeeV1QueryTimeSeriesStatsRequest.metrics:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1MetricAggregation
	292, // 185: google.cloud.apigee.v1.GoogleCloudApigeeV1QueryTimeSeriesStatsRequest.time_range:type_name -> google.cloud.apigee.v1.GoogleTypeInterval
	198, // 186: google.cloud.apigee.v1.GoogleCloudApigeeV1QueryTimeSeriesStatsResponse.values:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1QueryTimeSeriesStatsResponseSequence
	611, // 187: google.cloud.apigee.v1.GoogleCloudApigeeV1QueryTimeSeriesStatsResponseSequence.dimensions:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1QueryTimeSeriesStatsResponseSequence.DimensionsEntry
	616, // 188: google.cloud.apigee.v1.GoogleCloudApigeeV1QueryTimeSeriesStatsResponseSequence.points:type_name -> google.protobuf.Any
	201, // 189: google.cloud.apigee.v1.GoogleCloudApigeeV1RatePlan.consumption_pricing_rates:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1RateRange
	293, // 190: google.cloud.apigee.v1.GoogleCloudApigeeV1RatePlan.fixed_recurring_fee:type_name -> google.cloud.apigee.v1.GoogleTypeMoney
	212, // 191: google.cloud.apigee.v1.GoogleCloudApigeeV1RatePlan.revenue_share_rates:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1RevenueShareRange
	293, // 192: google.cloud.apigee.v1.GoogleCloudApigeeV1RatePlan.setup_fee:type_name -> google.cloud.apigee.v1.GoogleTypeMoney
	293, // 193: google.cloud.apigee.v1.GoogleCloudApigeeV1RateRange.fee:type_name -> google.cloud.apigee.v1.GoogleTypeMoney
	617, // 194: google.cloud.apigee.v1.GoogleCloudApigeeV1ReportInstanceStatusRequest.report_time:type_name -> google.protobuf.Timestamp
	210, // 195: google.cloud.apigee.v1.GoogleCloudApigeeV1ReportInstanceStatusRequest.resources:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1ResourceStatus
	36,  // 196: google.cloud.apigee.v1.GoogleCloudApigeeV1ReportProperty.value:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1Attribute
	208, // 197: google.cloud.apigee.v1.GoogleCloudApigeeV1ResourceFiles.resource_file:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1ResourceFile
	213, // 198: google.cloud.apigee.v1.GoogleCloudApigeeV1ResourceStatus.revisions:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1RevisionStatus
	4,   // 199: google.cloud.apigee.v1.GoogleCloudApigeeV1Result.access_list:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1Access
	189, // 200: google.cloud.apigee.v1.GoogleCloudApigeeV1Result.headers:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1Property
	188, // 201: google.cloud.apigee.v1.GoogleCloudApigeeV1Result.properties:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1Properties
	276, // 202: google.cloud.apigee.v1.GoogleCloudApigeeV1RevisionStatus.errors:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1UpdateError
	617, // 203: google.cloud.apigee.v1.GoogleCloudApigeeV1RoutingRule.update_time:type_name -> google.protobuf.Timestamp
	216, // 204: google.cloud.apigee.v1.GoogleCloudApigeeV1RuntimeAddonsConfig.analytics_config:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1RuntimeAnalyticsConfig
	217, // 205: google.cloud.apigee.v1.GoogleCloudApigeeV1RuntimeAddonsConfig.api_security_config:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1RuntimeApiSecurityConfig
	220, // 206: google.cloud.apigee.v1.GoogleCloudApigeeV1RuntimeTraceConfig.overrides:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1RuntimeTraceConfigOverride
	617, // 207: google.cloud.apigee.v1.GoogleCloudApigeeV1RuntimeTraceConfig.revision_create_time:type_name -> google.protobuf.Timestamp
	221, // 208: google.cloud.apigee.v1.GoogleCloudApigeeV1RuntimeTraceConfig.sampling_config:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1RuntimeTraceSamplingConfig
	617, // 209: google.cloud.apigee.v1.GoogleCloudApigeeV1RuntimeTraceConfigOverride.revision_create_time:type_name -> google.protobuf.Timestamp
	221, // 210: google.cloud.apigee.v1.GoogleCloudApigeeV1RuntimeTraceConfigOverride.sampling_config:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1RuntimeTraceSamplingConfig
	223, // 211: google.cloud.apigee.v1.GoogleCloudApigeeV1Schema.dimensions:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1SchemaSchemaElement
	223, // 212: google.cloud.apigee.v1.GoogleCloudApigeeV1Schema.metrics:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1SchemaSchemaElement
	224, // 213: google.cloud.apigee.v1.GoogleCloudApigeeV1SchemaSchemaElement.properties:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1SchemaSchemaProperty
	226, // 214: google.cloud.apigee.v1.GoogleCloudApigeeV1Score.component:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1ScoreComponent
	226, // 215: google.cloud.apigee.v1.GoogleCloudApigeeV1Score.subcomponents:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1ScoreComponent
	292, // 216: google.cloud.apigee.v1.GoogleCloudApigeeV1Score.time_range:type_name -> google.cloud.apigee.v1.GoogleTypeInterval
	617, // 217: google.cloud.apigee.v1.GoogleCloudApigeeV1ScoreComponent.calculate_time:type_name -> google.protobuf.Timestamp
	617, // 218: google.cloud.apigee.v1.GoogleCloudApigeeV1ScoreComponent.data_capture_time:type_name -> google.protobuf.Timestamp
	227, // 219: google.cloud.apigee.v1.GoogleCloudApigeeV1ScoreComponent.recommendations:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1ScoreComponentRecommendation
	228, // 220: google.cloud.apigee.v1.GoogleCloudApigeeV1ScoreComponentRecommendation.actions:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1ScoreComponentRecommendationAction
	229, // 221: google.cloud.apigee.v1.GoogleCloudApigeeV1ScoreComponentRecommendationAction.action_context:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1ScoreComponentRecommendationActionActionContext
	231, // 222: google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityAction.allow:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityActionAllow
	232, // 223: google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityAction.condition_config:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityActionConditionConfig
	617, // 224: google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityAction.create_time:type_name -> google.protobuf.Timestamp
	233, // 225: google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityAction.deny:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityActionDeny
	617, // 226: google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityAction.expire_time:type_name -> google.protobuf.Timestamp
	234, // 227: google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityAction.flag:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityActionFlag
	618, // 228: google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityAction.ttl:type_name -> google.protobuf.Duration
	617, // 229: google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityAction.update_time:type_name -> google.protobuf.Timestamp
	235, // 230: google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityActionFlag.headers:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityActionHttpHeader
	617, // 231: google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityActionsConfig.update_time:type_name -> google.protobuf.Timestamp
	617, // 232: google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityAssessmentResult.create_time:type_name -> google.protobuf.Timestamp
	290, // 233: google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityAssessmentResult.error:type_name -> google.cloud.apigee.v1.GoogleRpcStatus
	238, // 234: google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityAssessmentResult.resource:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityAssessmentResultResource
	239, // 235: google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityAssessmentResult.scoring_result:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityAssessmentResultScoringResult
	612, // 236: google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityAssessmentResultScoringResult.assessment_recommendations:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityAssessmentResultScoringResult.AssessmentRecommendationsEntry
	617, // 237: google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityAssessmentResultScoringResult.data_update_time:type_name -> google.protobuf.Timestamp
	241, // 238: google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityAssessmentResultScoringResultAssessmentRecommendation.recommendations:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityAssessmentResultScoringResultAssessmentRecommendationRecommendation
	242, // 239: google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityAssessmentResultScoringResultAssessmentRecommendationRecommendation.link:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityAssessmentResultScoringResultAssessmentRecommendationRecommendationLink
	617, // 240: google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityIncident.first_detected_time:type_name -> google.protobuf.Timestamp
	617, // 241: google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityIncident.last_detected_time:type_name -> google.protobuf.Timestamp
	617, // 242: google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityIncident.last_observability_change_time:type_name -> google.protobuf.Timestamp
	245, // 243: google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityProfile.environments:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityProfileEnvironment
	180, // 244: google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityProfile.profile_config:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1ProfileConfig
	617, // 245: google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityProfile.revision_create_time:type_name -> google.protobuf.Timestamp
	617, // 246: google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityProfile.revision_publish_time:type_name -> google.protobuf.Timestamp
	617, // 247: google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityProfile.revision_update_time:type_name -> google.protobuf.Timestamp
	247, // 248: google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityProfile.scoring_configs:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityProfileScoringConfig
	617, // 249: google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityProfileEnvironment.attach_time:type_name -> google.protobuf.Timestamp
	617, // 250: google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityProfileEnvironmentAssociation.attach_time:type_name -> google.protobuf.Timestamp
	249, // 251: google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityReport.query_params:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityReportMetadata
	252, // 252: google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityReport.result:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityReportResultMetadata
	617, // 253: google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityReportMetadata.end_timestamp:type_name -> google.protobuf.Timestamp
	617, // 254: google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityReportMetadata.start_timestamp:type_name -> google.protobuf.Timestamp
	251, // 255: google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityReportQuery.metrics:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityReportQueryMetric
	616, // 256: google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityReportQuery.time_range:type_name -> google.protobuf.Any
	249, // 257: google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityReportResultView.metadata:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityReportMetadata
	616, // 258: google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityReportResultView.rows:type_name -> google.protobuf.Any
	10,  // 259: google.cloud.apigee.v1.GoogleCloudApigeeV1SetAddonsRequest.addons_config:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1AddonsConfig
	89,  // 260: google.cloud.apigee.v1.GoogleCloudApigeeV1SharedFlow.meta_data:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1EntityMetadata
	53,  // 261: google.cloud.apigee.v1.GoogleCloudApigeeV1SharedFlowRevision.configuration_version:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1ConfigVersion
	613, // 262: google.cloud.apigee.v1.GoogleCloudApigeeV1SharedFlowRevision.entity_meta_data_as_properties:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1SharedFlowRevision.EntityMetaDataAsPropertiesEntry
	209, // 263: google.cloud.apigee.v1.GoogleCloudApigeeV1SharedFlowRevision.resource_files:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1ResourceFiles
	262, // 264: google.cloud.apigee.v1.GoogleCloudApigeeV1Stats.environments:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1StatsEnvironmentStats
	263, // 265: google.cloud.apigee.v1.GoogleCloudApigeeV1Stats.hosts:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1StatsHostStats
	161, // 266: google.cloud.apigee.v1.GoogleCloudApigeeV1Stats.meta_data:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1Metadata
	83,  // 267: google.cloud.apigee.v1.GoogleCloudApigeeV1StatsEnvironmentStats.dimensions:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1DimensionMetric
	162, // 268: google.cloud.apigee.v1.GoogleCloudApigeeV1StatsEnvironmentStats.metrics:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1Metric
	83,  // 269: google.cloud.apigee.v1.GoogleCloudApigeeV1StatsHostStats.dimensions:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1DimensionMetric
	162, // 270: google.cloud.apigee.v1.GoogleCloudApigeeV1StatsHostStats.metrics:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1Metric
	269, // 271: google.cloud.apigee.v1.GoogleCloudApigeeV1TargetServer.s_s_l_info:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1TlsInfo
	271, // 272: google.cloud.apigee.v1.GoogleCloudApigeeV1TargetServerConfig.tls_info:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1TlsInfoConfig
	270, // 273: google.cloud.apigee.v1.GoogleCloudApigeeV1TlsInfo.common_name:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1TlsInfoCommonName
	49,  // 274: google.cloud.apigee.v1.GoogleCloudApigeeV1TlsInfoConfig.common_name:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1CommonNameConfig
	120, // 275: google.cloud.apigee.v1.GoogleCloudApigeeV1TlsInfoConfig.key_alias_reference:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1KeyAliasReference
	274, // 276: google.cloud.apigee.v1.GoogleCloudApigeeV1TraceConfig.sampling_config:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1TraceSamplingConfig
	274, // 277: google.cloud.apigee.v1.GoogleCloudApigeeV1TraceConfigOverride.sampling_config:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1TraceSamplingConfig
	31,  // 278: google.cloud.apigee.v1.GoogleCloudApigeeV1UpdateAppGroupAppKeyRequest.app_group_app_key:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1AppGroupAppKey
	243, // 279: google.cloud.apigee.v1.GoogleCloudApigeeV1UpdateSecurityIncidentRequest.security_incident:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityIncident
	279, // 280: google.cloud.apigee.v1.GoogleIamV1AuditConfig.audit_log_configs:type_name -> google.cloud.apigee.v1.GoogleIamV1AuditLogConfig
	291, // 281: google.cloud.apigee.v1.GoogleIamV1Binding.condition:type_name -> google.cloud.apigee.v1.GoogleTypeExpr
	278, // 282: google.cloud.apigee.v1.GoogleIamV1Policy.audit_configs:type_name -> google.cloud.apigee.v1.GoogleIamV1AuditConfig
	280, // 283: google.cloud.apigee.v1.GoogleIamV1Policy.bindings:type_name -> google.cloud.apigee.v1.GoogleIamV1Binding
	281, // 284: google.cloud.apigee.v1.GoogleIamV1SetIamPolicyRequest.policy:type_name -> google.cloud.apigee.v1.GoogleIamV1Policy
	619, // 285: google.cloud.apigee.v1.GoogleLongrunningListOperationsResponse.operations:type_name -> google.longrunning.Operation
	290, // 286: google.cloud.apigee.v1.GoogleLongrunningOperation.error:type_name -> google.cloud.apigee.v1.GoogleRpcStatus
	614, // 287: google.cloud.apigee.v1.GoogleLongrunningOperation.metadata:type_name -> google.cloud.apigee.v1.GoogleLongrunningOperation.MetadataEntry
	615, // 288: google.cloud.apigee.v1.GoogleLongrunningOperation.response:type_name -> google.cloud.apigee.v1.GoogleLongrunningOperation.ResponseEntry
	289, // 289: google.cloud.apigee.v1.GoogleRpcPreconditionFailure.violations:type_name -> google.cloud.apigee.v1.GoogleRpcPreconditionFailureViolation
	616, // 290: google.cloud.apigee.v1.GoogleRpcStatus.details:type_name -> google.protobuf.Any
	617, // 291: google.cloud.apigee.v1.GoogleTypeInterval.end_time:type_name -> google.protobuf.Timestamp
	617, // 292: google.cloud.apigee.v1.GoogleTypeInterval.start_time:type_name -> google.protobuf.Timestamp
	176, // 293: google.cloud.apigee.v1.CreateOrganizationRequest.organization:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1Organization
	106, // 294: google.cloud.apigee.v1.GetSyncAuthorizationOrganizationRequest.organization:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1GetSyncAuthorizationRequest
	258, // 295: google.cloud.apigee.v1.SetAddonsOrganizationRequest.organization:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1SetAddonsRequest
	265, // 296: google.cloud.apigee.v1.SetSyncAuthorizationOrganizationRequest.organization:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1SyncAuthorization
	176, // 297: google.cloud.apigee.v1.UpdateOrganizationRequest.organization:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1Organization
	254, // 298: google.cloud.apigee.v1.UpdateSecuritySettingsOrganizationRequest.organization:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1SecuritySettings
	61,  // 299: google.cloud.apigee.v1.CreateOrganizationsAnalyticsDatastoreRequest.organizations_analytics_datastore:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1Datastore
	61,  // 300: google.cloud.apigee.v1.TestOrganizationsAnalyticsDatastoreRequest.organizations_analytics_datastore:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1Datastore
	61,  // 301: google.cloud.apigee.v1.UpdateOrganizationsAnalyticsDatastoreRequest.organizations_analytics_datastore:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1Datastore
	37,  // 302: google.cloud.apigee.v1.AttributesOrganizationsApiproductRequest.organizations_apiproduct:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1Attributes
	22,  // 303: google.cloud.apigee.v1.CreateOrganizationsApiproductRequest.organizations_apiproduct:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1ApiProduct
	22,  // 304: google.cloud.apigee.v1.UpdateOrganizationsApiproductRequest.organizations_apiproduct:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1ApiProduct
	36,  // 305: google.cloud.apigee.v1.UpdateApiProductAttributeOrganizationsApiproductsAttributeRequest.organizations_apiproducts_attribute:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1Attribute
	200, // 306: google.cloud.apigee.v1.CreateOrganizationsApiproductsRateplanRequest.organizations_apiproducts_rateplan:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1RatePlan
	200, // 307: google.cloud.apigee.v1.UpdateOrganizationsApiproductsRateplanRequest.organizations_apiproducts_rateplan:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1RatePlan
	2,   // 308: google.cloud.apigee.v1.CreateOrganizationsApiRequest.organizations_api:type_name -> google.cloud.apigee.v1.GoogleApiHttpBody
	24,  // 309: google.cloud.apigee.v1.PatchOrganizationsApiRequest.organizations_api:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1ApiProxy
	122, // 310: google.cloud.apigee.v1.CreateOrganizationsApisKeyvaluemapRequest.organizations_apis_keyvaluemap:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1KeyValueMap
	121, // 311: google.cloud.apigee.v1.CreateOrganizationsApisKeyvaluemapsEntryRequest.organizations_apis_keyvaluemaps_entry:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1KeyValueEntry
	121, // 312: google.cloud.apigee.v1.UpdateOrganizationsApisKeyvaluemapsEntryRequest.organizations_apis_keyvaluemaps_entry:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1KeyValueEntry
	2,   // 313: google.cloud.apigee.v1.UpdateApiProxyRevisionOrganizationsApisRevisionRequest.organizations_apis_revision:type_name -> google.cloud.apigee.v1.GoogleApiHttpBody
	29,  // 314: google.cloud.apigee.v1.CreateOrganizationsAppgroupRequest.organizations_appgroup:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1AppGroup
	29,  // 315: google.cloud.apigee.v1.UpdateOrganizationsAppgroupRequest.organizations_appgroup:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1AppGroup
	30,  // 316: google.cloud.apigee.v1.CreateOrganizationsAppgroupsAppRequest.organizations_appgroups_app:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1AppGroupApp
	30,  // 317: google.cloud.apigee.v1.UpdateOrganizationsAppgroupsAppRequest.organizations_appgroups_app:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1AppGroupApp
	31,  // 318: google.cloud.apigee.v1.CreateOrganizationsAppgroupsAppsKeyRequest.organizations_appgroups_apps_key:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1AppGroupAppKey
	275, // 319: google.cloud.apigee.v1.UpdateAppGroupAppKeyOrganizationsAppgroupsAppsKeyRequest.organizations_appgroups_apps_key:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1UpdateAppGroupAppKeyRequest
	59,  // 320: google.cloud.apigee.v1.CreateOrganizationsDatacollectorRequest.organizations_datacollector:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1DataCollector
	59,  // 321: google.cloud.apigee.v1.PatchOrganizationsDatacollectorRequest.organizations_datacollector:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1DataCollector
	37,  // 322: google.cloud.apigee.v1.AttributesOrganizationsDeveloperRequest.organizations_developer:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1Attributes
	76,  // 323: google.cloud.apigee.v1.CreateOrganizationsDeveloperRequest.organizations_developer:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1Developer
	76,  // 324: google.cloud.apigee.v1.UpdateOrganizationsDeveloperRequest.organizations_developer:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1Developer
	81,  // 325: google.cloud.apigee.v1.UpdateMonetizationConfigOrganizationsDeveloperRequest.organizations_developer:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1DeveloperMonetizationConfig
	37,  // 326: google.cloud.apigee.v1.AttributesOrganizationsDevelopersAppRequest.organizations_developers_app:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1Attributes
	77,  // 327: google.cloud.apigee.v1.CreateOrganizationsDevelopersAppRequest.organizations_developers_app:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1DeveloperApp
	77,  // 328: google.cloud.apigee.v1.GenerateKeyPairOrUpdateDeveloperAppStatusOrganizationsDevelopersAppRequest.organizations_developers_app:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1DeveloperApp
	77,  // 329: google.cloud.apigee.v1.UpdateOrganizationsDevelopersAppRequest.organizations_developers_app:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1DeveloperApp
	36,  // 330: google.cloud.apigee.v1.UpdateDeveloperAppAttributeOrganizationsDevelopersAppsAttributeRequest.organizations_developers_apps_attribute:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1Attribute
	78,  // 331: google.cloud.apigee.v1.CreateOrganizationsDevelopersAppsKeyRequest.organizations_developers_apps_key:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1DeveloperAppKey
	78,  // 332: google.cloud.apigee.v1.ReplaceDeveloperAppKeyOrganizationsDevelopersAppsKeyRequest.organizations_developers_apps_key:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1DeveloperAppKey
	78,  // 333: google.cloud.apigee.v1.UpdateDeveloperAppKeyOrganizationsDevelopersAppsKeyRequest.organizations_developers_apps_key:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1DeveloperAppKey
	78,  // 334: google.cloud.apigee.v1.CreateOrganizationsDevelopersAppsKeysCreateRequest.organizations_developers_apps_keys_create:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1DeveloperAppKey
	36,  // 335: google.cloud.apigee.v1.UpdateDeveloperAttributeOrganizationsDevelopersAttributeRequest.organizations_developers_attribute:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1Attribute
	11,  // 336: google.cloud.apigee.v1.AdjustOrganizationsDevelopersBalanceRequest.organizations_developers_balance:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1AdjustDeveloperBalanceRequest
	56,  // 337: google.cloud.apigee.v1.CreditOrganizationsDevelopersBalanceRequest.organizations_developers_balance:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1CreditDeveloperBalanceRequest
	82,  // 338: google.cloud.apigee.v1.CreateOrganizationsDevelopersSubscriptionRequest.organizations_developers_subscription:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1DeveloperSubscription
	95,  // 339: google.cloud.apigee.v1.ExpireOrganizationsDevelopersSubscriptionRequest.organizations_developers_subscription:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1ExpireDeveloperSubscriptionRequest
	87,  // 340: google.cloud.apigee.v1.CreateOrganizationsEndpointAttachmentRequest.organizations_endpoint_attachment:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1EndpointAttachment
	92,  // 341: google.cloud.apigee.v1.CreateOrganizationsEnvgroupRequest.organizations_envgroup:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1EnvironmentGroup
	92,  // 342: google.cloud.apigee.v1.PatchOrganizationsEnvgroupRequest.organizations_envgroup:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1EnvironmentGroup
	93,  // 343: google.cloud.apigee.v1.CreateOrganizationsEnvgroupsAttachmentRequest.organizations_envgroups_attachment:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1EnvironmentGroupAttachment
	90,  // 344: google.cloud.apigee.v1.CreateOrganizationsEnvironmentRequest.organizations_environment:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1Environment
	90,  // 345: google.cloud.apigee.v1.ModifyEnvironmentOrganizationsEnvironmentRequest.organizations_environment:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1Environment
	264, // 346: google.cloud.apigee.v1.UnsubscribeOrganizationsEnvironmentRequest.organizations_environment:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1Subscription
	90,  // 347: google.cloud.apigee.v1.UpdateOrganizationsEnvironmentRequest.organizations_environment:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1Environment
	64,  // 348: google.cloud.apigee.v1.UpdateDebugmaskOrganizationsEnvironmentRequest.organizations_environment:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1DebugMask
	90,  // 349: google.cloud.apigee.v1.UpdateEnvironmentOrganizationsEnvironmentRequest.organizations_environment:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1Environment
	236, // 350: google.cloud.apigee.v1.UpdateSecurityActionsConfigOrganizationsEnvironmentRequest.organizations_environment:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityActionsConfig
	272, // 351: google.cloud.apigee.v1.UpdateTraceConfigOrganizationsEnvironmentRequest.organizations_environment:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1TraceConfig
	257, // 352: google.cloud.apigee.v1.SetAddonEnablementOrganizationsEnvironmentsAddonsConfigRequest.organizations_environments_addons_config:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1SetAddonEnablementRequest
	97,  // 353: google.cloud.apigee.v1.CreateOrganizationsEnvironmentsAnalyticsExportRequest.organizations_environments_analytics_export:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1ExportRequest
	65,  // 354: google.cloud.apigee.v1.CreateOrganizationsEnvironmentsApisRevisionsDebugsessionRequest.organizations_environments_apis_revisions_debugsession:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1DebugSession
	32,  // 355: google.cloud.apigee.v1.CreateOrganizationsEnvironmentsArchiveDeploymentRequest.organizations_environments_archive_deployment:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1ArchiveDeployment
	100, // 356: google.cloud.apigee.v1.GenerateDownloadUrlOrganizationsEnvironmentsArchiveDeploymentRequest.organizations_environments_archive_deployment:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1GenerateDownloadUrlRequest
	102, // 357: google.cloud.apigee.v1.GenerateUploadUrlOrganizationsEnvironmentsArchiveDeploymentRequest.organizations_environments_archive_deployment:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1GenerateUploadUrlRequest
	32,  // 358: google.cloud.apigee.v1.PatchOrganizationsEnvironmentsArchiveDeploymentRequest.organizations_environments_archive_deployment:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1ArchiveDeployment
	98,  // 359: google.cloud.apigee.v1.AttachSharedFlowToFlowHookOrganizationsEnvironmentsFlowhookRequest.organizations_environments_flowhook:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1FlowHook
	123, // 360: google.cloud.apigee.v1.CreateOrganizationsEnvironmentsKeystoreRequest.organizations_environments_keystore:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1Keystore
	2,   // 361: google.cloud.apigee.v1.CreateOrganizationsEnvironmentsKeystoresAliaseRequest.organizations_environments_keystores_aliase:type_name -> google.cloud.apigee.v1.GoogleApiHttpBody
	2,   // 362: google.cloud.apigee.v1.UpdateOrganizationsEnvironmentsKeystoresAliaseRequest.organizations_environments_keystores_aliase:type_name -> google.cloud.apigee.v1.GoogleApiHttpBody
	122, // 363: google.cloud.apigee.v1.CreateOrganizationsEnvironmentsKeyvaluemapRequest.organizations_environments_keyvaluemap:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1KeyValueMap
	121, // 364: google.cloud.apigee.v1.CreateOrganizationsEnvironmentsKeyvaluemapsEntryRequest.organizations_environments_keyvaluemaps_entry:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1KeyValueEntry
	121, // 365: google.cloud.apigee.v1.UpdateOrganizationsEnvironmentsKeyvaluemapsEntryRequest.organizations_environments_keyvaluemaps_entry:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1KeyValueEntry
	191, // 366: google.cloud.apigee.v1.CreateOrganizationsEnvironmentsQueryRequest.organizations_environments_query:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1Query
	202, // 367: google.cloud.apigee.v1.CreateOrganizationsEnvironmentsReferenceRequest.organizations_environments_reference:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1Reference
	202, // 368: google.cloud.apigee.v1.UpdateOrganizationsEnvironmentsReferenceRequest.organizations_environments_reference:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1Reference
	2,   // 369: google.cloud.apigee.v1.CreateOrganizationsEnvironmentsResourcefileRequest.organizations_environments_resourcefile:type_name -> google.cloud.apigee.v1.GoogleApiHttpBody
	2,   // 370: google.cloud.apigee.v1.UpdateOrganizationsEnvironmentsResourcefileRequest.organizations_environments_resourcefile:type_name -> google.cloud.apigee.v1.GoogleApiHttpBody
	230, // 371: google.cloud.apigee.v1.CreateOrganizationsEnvironmentsSecurityActionRequest.organizations_environments_security_action:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityAction
	84,  // 372: google.cloud.apigee.v1.DisableOrganizationsEnvironmentsSecurityActionRequest.organizations_environments_security_action:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1DisableSecurityActionRequest
	86,  // 373: google.cloud.apigee.v1.EnableOrganizationsEnvironmentsSecurityActionRequest.organizations_environments_security_action:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1EnableSecurityActionRequest
	43,  // 374: google.cloud.apigee.v1.BatchUpdateOrganizationsEnvironmentsSecurityIncidentRequest.organizations_environments_security_incident:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1BatchUpdateSecurityIncidentsRequest
	243, // 375: google.cloud.apigee.v1.PatchOrganizationsEnvironmentsSecurityIncidentRequest.organizations_environments_security_incident:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityIncident
	250, // 376: google.cloud.apigee.v1.CreateOrganizationsEnvironmentsSecurityReportRequest.organizations_environments_security_report:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityReportQuery
	194, // 377: google.cloud.apigee.v1.QueryTabularStatsOrganizationsEnvironmentsSecurityStatRequest.organizations_environments_security_stat:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1QueryTabularStatsRequest
	196, // 378: google.cloud.apigee.v1.QueryTimeSeriesStatsOrganizationsEnvironmentsSecurityStatRequest.organizations_environments_security_stat:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1QueryTimeSeriesStatsRequest
	266, // 379: google.cloud.apigee.v1.CreateOrganizationsEnvironmentsTargetserverRequest.organizations_environments_targetserver:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1TargetServer
	266, // 380: google.cloud.apigee.v1.UpdateOrganizationsEnvironmentsTargetserverRequest.organizations_environments_targetserver:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1TargetServer
	273, // 381: google.cloud.apigee.v1.CreateOrganizationsEnvironmentsTraceConfigOverrideRequest.organizations_environments_trace_config_override:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1TraceConfigOverride
	273, // 382: google.cloud.apigee.v1.PatchOrganizationsEnvironmentsTraceConfigOverrideRequest.organizations_environments_trace_config_override:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1TraceConfigOverride
	191, // 383: google.cloud.apigee.v1.CreateOrganizationsHostQueryRequest.organizations_host_query:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1Query
	250, // 384: google.cloud.apigee.v1.CreateOrganizationsHostSecurityReportRequest.organizations_host_security_report:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityReportQuery
	114, // 385: google.cloud.apigee.v1.CreateOrganizationsInstanceRequest.organizations_instance:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1Instance
	114, // 386: google.cloud.apigee.v1.PatchOrganizationsInstanceRequest.organizations_instance:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1Instance
	204, // 387: google.cloud.apigee.v1.ReportStatusOrganizationsInstanceRequest.organizations_instance:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1ReportInstanceStatusRequest
	115, // 388: google.cloud.apigee.v1.CreateOrganizationsInstancesAttachmentRequest.organizations_instances_attachment:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1InstanceAttachment
	45,  // 389: google.cloud.apigee.v1.CreateOrganizationsInstancesCanaryevaluationRequest.organizations_instances_canaryevaluation:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1CanaryEvaluation
	9,   // 390: google.cloud.apigee.v1.ActivateOrganizationsInstancesNatAddresseRequest.organizations_instances_nat_addresse:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1ActivateNatAddressRequest
	165, // 391: google.cloud.apigee.v1.CreateOrganizationsInstancesNatAddresseRequest.organizations_instances_nat_addresse:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1NatAddress
	122, // 392: google.cloud.apigee.v1.CreateOrganizationsKeyvaluemapRequest.organizations_keyvaluemap:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1KeyValueMap
	121, // 393: google.cloud.apigee.v1.CreateOrganizationsKeyvaluemapsEntryRequest.organizations_keyvaluemaps_entry:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1KeyValueEntry
	121, // 394: google.cloud.apigee.v1.UpdateOrganizationsKeyvaluemapsEntryRequest.organizations_keyvaluemaps_entry:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1KeyValueEntry
	57,  // 395: google.cloud.apigee.v1.CreateOrganizationsReportRequest.organizations_report:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1CustomReport
	57,  // 396: google.cloud.apigee.v1.UpdateOrganizationsReportRequest.organizations_report:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1CustomReport
	38,  // 397: google.cloud.apigee.v1.BatchComputeOrganizationsSecurityAssessmentResultRequest.organizations_security_assessment_result:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsRequest
	244, // 398: google.cloud.apigee.v1.CreateOrganizationsSecurityProfileRequest.organizations_security_profile:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityProfile
	244, // 399: google.cloud.apigee.v1.PatchOrganizationsSecurityProfileRequest.organizations_security_profile:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityProfile
	50,  // 400: google.cloud.apigee.v1.ComputeEnvironmentScoresOrganizationsSecurityProfilesEnvironmentRequest.organizations_security_profiles_environment:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1ComputeEnvironmentScoresRequest
	246, // 401: google.cloud.apigee.v1.CreateOrganizationsSecurityProfilesEnvironmentRequest.organizations_security_profiles_environment:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityProfileEnvironmentAssociation
	2,   // 402: google.cloud.apigee.v1.CreateOrganizationsSharedflowRequest.organizations_sharedflow:type_name -> google.cloud.apigee.v1.GoogleApiHttpBody
	2,   // 403: google.cloud.apigee.v1.UpdateSharedFlowRevisionOrganizationsSharedflowsRevisionRequest.organizations_sharedflows_revision:type_name -> google.cloud.apigee.v1.GoogleApiHttpBody
	16,  // 404: google.cloud.apigee.v1.CreateOrganizationsSitesApicategoryRequest.organizations_sites_apicategory:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1ApiCategory
	16,  // 405: google.cloud.apigee.v1.PatchOrganizationsSitesApicategoryRequest.organizations_sites_apicategory:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1ApiCategory
	18,  // 406: google.cloud.apigee.v1.CreateOrganizationsSitesApidocRequest.organizations_sites_apidoc:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1ApiDoc
	18,  // 407: google.cloud.apigee.v1.UpdateOrganizationsSitesApidocRequest.organizations_sites_apidoc:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1ApiDoc
	19,  // 408: google.cloud.apigee.v1.UpdateDocumentationOrganizationsSitesApidocRequest.organizations_sites_apidoc:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1ApiDocDocumentation
	190, // 409: google.cloud.apigee.v1.ProvisionOrganizationProjectRequest.project_body:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1ProvisionOrganizationRequest
	616, // 410: google.cloud.apigee.v1.GoogleCloudApigeeV1OperationMetadataProgress.DetailsEntry.value:type_name -> google.protobuf.Any
	240, // 411: google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityAssessmentResultScoringResult.AssessmentRecommendationsEntry.value:type_name -> google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityAssessmentResultScoringResultAssessmentRecommendation
	616, // 412: google.cloud.apigee.v1.GoogleLongrunningOperation.MetadataEntry.value:type_name -> google.protobuf.Any
	616, // 413: google.cloud.apigee.v1.GoogleLongrunningOperation.ResponseEntry.value:type_name -> google.protobuf.Any
	294, // 414: google.cloud.apigee.v1.HybridIssuersServer.ListHybridIssuers:input_type -> google.cloud.apigee.v1.ListHybridIssuersRequest
	295, // 415: google.cloud.apigee.v1.OrganizationsServer.CreateOrganization:input_type -> google.cloud.apigee.v1.CreateOrganizationRequest
	296, // 416: google.cloud.apigee.v1.OrganizationsServer.DeleteOrganization:input_type -> google.cloud.apigee.v1.DeleteOrganizationRequest
	297, // 417: google.cloud.apigee.v1.OrganizationsServer.GetOrganization:input_type -> google.cloud.apigee.v1.GetOrganizationRequest
	298, // 418: google.cloud.apigee.v1.OrganizationsServer.GetDeployedIngressConfigOrganization:input_type -> google.cloud.apigee.v1.GetDeployedIngressConfigOrganizationRequest
	299, // 419: google.cloud.apigee.v1.OrganizationsServer.GetProjectMappingOrganization:input_type -> google.cloud.apigee.v1.GetProjectMappingOrganizationRequest
	300, // 420: google.cloud.apigee.v1.OrganizationsServer.GetRuntimeConfigOrganization:input_type -> google.cloud.apigee.v1.GetRuntimeConfigOrganizationRequest
	301, // 421: google.cloud.apigee.v1.OrganizationsServer.GetSecuritySettingsOrganization:input_type -> google.cloud.apigee.v1.GetSecuritySettingsOrganizationRequest
	302, // 422: google.cloud.apigee.v1.OrganizationsServer.GetSyncAuthorizationOrganization:input_type -> google.cloud.apigee.v1.GetSyncAuthorizationOrganizationRequest
	303, // 423: google.cloud.apigee.v1.OrganizationsServer.ListOrganizations:input_type -> google.cloud.apigee.v1.ListOrganizationsRequest
	304, // 424: google.cloud.apigee.v1.OrganizationsServer.SetAddonsOrganization:input_type -> google.cloud.apigee.v1.SetAddonsOrganizationRequest
	305, // 425: google.cloud.apigee.v1.OrganizationsServer.SetSyncAuthorizationOrganization:input_type -> google.cloud.apigee.v1.SetSyncAuthorizationOrganizationRequest
	306, // 426: google.cloud.apigee.v1.OrganizationsServer.UpdateOrganization:input_type -> google.cloud.apigee.v1.UpdateOrganizationRequest
	307, // 427: google.cloud.apigee.v1.OrganizationsServer.UpdateSecuritySettingsOrganization:input_type -> google.cloud.apigee.v1.UpdateSecuritySettingsOrganizationRequest
	308, // 428: google.cloud.apigee.v1.OrganizationsAnalyticsDatastoresServer.CreateOrganizationsAnalyticsDatastore:input_type -> google.cloud.apigee.v1.CreateOrganizationsAnalyticsDatastoreRequest
	309, // 429: google.cloud.apigee.v1.OrganizationsAnalyticsDatastoresServer.DeleteOrganizationsAnalyticsDatastore:input_type -> google.cloud.apigee.v1.DeleteOrganizationsAnalyticsDatastoreRequest
	310, // 430: google.cloud.apigee.v1.OrganizationsAnalyticsDatastoresServer.GetOrganizationsAnalyticsDatastore:input_type -> google.cloud.apigee.v1.GetOrganizationsAnalyticsDatastoreRequest
	311, // 431: google.cloud.apigee.v1.OrganizationsAnalyticsDatastoresServer.ListOrganizationsAnalyticsDatastores:input_type -> google.cloud.apigee.v1.ListOrganizationsAnalyticsDatastoresRequest
	312, // 432: google.cloud.apigee.v1.OrganizationsAnalyticsDatastoresServer.TestOrganizationsAnalyticsDatastore:input_type -> google.cloud.apigee.v1.TestOrganizationsAnalyticsDatastoreRequest
	313, // 433: google.cloud.apigee.v1.OrganizationsAnalyticsDatastoresServer.UpdateOrganizationsAnalyticsDatastore:input_type -> google.cloud.apigee.v1.UpdateOrganizationsAnalyticsDatastoreRequest
	314, // 434: google.cloud.apigee.v1.OrganizationsApiproductsServer.AttributesOrganizationsApiproduct:input_type -> google.cloud.apigee.v1.AttributesOrganizationsApiproductRequest
	315, // 435: google.cloud.apigee.v1.OrganizationsApiproductsServer.CreateOrganizationsApiproduct:input_type -> google.cloud.apigee.v1.CreateOrganizationsApiproductRequest
	316, // 436: google.cloud.apigee.v1.OrganizationsApiproductsServer.DeleteOrganizationsApiproduct:input_type -> google.cloud.apigee.v1.DeleteOrganizationsApiproductRequest
	317, // 437: google.cloud.apigee.v1.OrganizationsApiproductsServer.GetOrganizationsApiproduct:input_type -> google.cloud.apigee.v1.GetOrganizationsApiproductRequest
	318, // 438: google.cloud.apigee.v1.OrganizationsApiproductsServer.ListOrganizationsApiproducts:input_type -> google.cloud.apigee.v1.ListOrganizationsApiproductsRequest
	319, // 439: google.cloud.apigee.v1.OrganizationsApiproductsServer.UpdateOrganizationsApiproduct:input_type -> google.cloud.apigee.v1.UpdateOrganizationsApiproductRequest
	320, // 440: google.cloud.apigee.v1.OrganizationsApiproductsAttributesServer.DeleteOrganizationsApiproductsAttribute:input_type -> google.cloud.apigee.v1.DeleteOrganizationsApiproductsAttributeRequest
	321, // 441: google.cloud.apigee.v1.OrganizationsApiproductsAttributesServer.GetOrganizationsApiproductsAttribute:input_type -> google.cloud.apigee.v1.GetOrganizationsApiproductsAttributeRequest
	322, // 442: google.cloud.apigee.v1.OrganizationsApiproductsAttributesServer.ListOrganizationsApiproductsAttributes:input_type -> google.cloud.apigee.v1.ListOrganizationsApiproductsAttributesRequest
	323, // 443: google.cloud.apigee.v1.OrganizationsApiproductsAttributesServer.UpdateApiProductAttributeOrganizationsApiproductsAttribute:input_type -> google.cloud.apigee.v1.UpdateApiProductAttributeOrganizationsApiproductsAttributeRequest
	324, // 444: google.cloud.apigee.v1.OrganizationsApiproductsRateplansServer.CreateOrganizationsApiproductsRateplan:input_type -> google.cloud.apigee.v1.CreateOrganizationsApiproductsRateplanRequest
	325, // 445: google.cloud.apigee.v1.OrganizationsApiproductsRateplansServer.DeleteOrganizationsApiproductsRateplan:input_type -> google.cloud.apigee.v1.DeleteOrganizationsApiproductsRateplanRequest
	326, // 446: google.cloud.apigee.v1.OrganizationsApiproductsRateplansServer.GetOrganizationsApiproductsRateplan:input_type -> google.cloud.apigee.v1.GetOrganizationsApiproductsRateplanRequest
	327, // 447: google.cloud.apigee.v1.OrganizationsApiproductsRateplansServer.ListOrganizationsApiproductsRateplans:input_type -> google.cloud.apigee.v1.ListOrganizationsApiproductsRateplansRequest
	328, // 448: google.cloud.apigee.v1.OrganizationsApiproductsRateplansServer.UpdateOrganizationsApiproductsRateplan:input_type -> google.cloud.apigee.v1.UpdateOrganizationsApiproductsRateplanRequest
	329, // 449: google.cloud.apigee.v1.OrganizationsApisServer.CreateOrganizationsApi:input_type -> google.cloud.apigee.v1.CreateOrganizationsApiRequest
	330, // 450: google.cloud.apigee.v1.OrganizationsApisServer.DeleteOrganizationsApi:input_type -> google.cloud.apigee.v1.DeleteOrganizationsApiRequest
	331, // 451: google.cloud.apigee.v1.OrganizationsApisServer.GetOrganizationsApi:input_type -> google.cloud.apigee.v1.GetOrganizationsApiRequest
	332, // 452: google.cloud.apigee.v1.OrganizationsApisServer.ListOrganizationsApis:input_type -> google.cloud.apigee.v1.ListOrganizationsApisRequest
	333, // 453: google.cloud.apigee.v1.OrganizationsApisServer.PatchOrganizationsApi:input_type -> google.cloud.apigee.v1.PatchOrganizationsApiRequest
	334, // 454: google.cloud.apigee.v1.OrganizationsApisDeploymentsServer.ListOrganizationsApisDeployments:input_type -> google.cloud.apigee.v1.ListOrganizationsApisDeploymentsRequest
	335, // 455: google.cloud.apigee.v1.OrganizationsApisKeyvaluemapsServer.CreateOrganizationsApisKeyvaluemap:input_type -> google.cloud.apigee.v1.CreateOrganizationsApisKeyvaluemapRequest
	336, // 456: google.cloud.apigee.v1.OrganizationsApisKeyvaluemapsServer.DeleteOrganizationsApisKeyvaluemap:input_type -> google.cloud.apigee.v1.DeleteOrganizationsApisKeyvaluemapRequest
	337, // 457: google.cloud.apigee.v1.OrganizationsApisKeyvaluemapsEntriesServer.CreateOrganizationsApisKeyvaluemapsEntry:input_type -> google.cloud.apigee.v1.CreateOrganizationsApisKeyvaluemapsEntryRequest
	338, // 458: google.cloud.apigee.v1.OrganizationsApisKeyvaluemapsEntriesServer.DeleteOrganizationsApisKeyvaluemapsEntry:input_type -> google.cloud.apigee.v1.DeleteOrganizationsApisKeyvaluemapsEntryRequest
	339, // 459: google.cloud.apigee.v1.OrganizationsApisKeyvaluemapsEntriesServer.GetOrganizationsApisKeyvaluemapsEntry:input_type -> google.cloud.apigee.v1.GetOrganizationsApisKeyvaluemapsEntryRequest
	340, // 460: google.cloud.apigee.v1.OrganizationsApisKeyvaluemapsEntriesServer.ListOrganizationsApisKeyvaluemapsEntries:input_type -> google.cloud.apigee.v1.ListOrganizationsApisKeyvaluemapsEntriesRequest
	341, // 461: google.cloud.apigee.v1.OrganizationsApisKeyvaluemapsEntriesServer.UpdateOrganizationsApisKeyvaluemapsEntry:input_type -> google.cloud.apigee.v1.UpdateOrganizationsApisKeyvaluemapsEntryRequest
	342, // 462: google.cloud.apigee.v1.OrganizationsApisRevisionsServer.DeleteOrganizationsApisRevision:input_type -> google.cloud.apigee.v1.DeleteOrganizationsApisRevisionRequest
	343, // 463: google.cloud.apigee.v1.OrganizationsApisRevisionsServer.GetOrganizationsApisRevision:input_type -> google.cloud.apigee.v1.GetOrganizationsApisRevisionRequest
	344, // 464: google.cloud.apigee.v1.OrganizationsApisRevisionsServer.UpdateApiProxyRevisionOrganizationsApisRevision:input_type -> google.cloud.apigee.v1.UpdateApiProxyRevisionOrganizationsApisRevisionRequest
	345, // 465: google.cloud.apigee.v1.OrganizationsApisRevisionsDeploymentsServer.ListOrganizationsApisRevisionsDeployments:input_type -> google.cloud.apigee.v1.ListOrganizationsApisRevisionsDeploymentsRequest
	346, // 466: google.cloud.apigee.v1.OrganizationsAppgroupsServer.CreateOrganizationsAppgroup:input_type -> google.cloud.apigee.v1.CreateOrganizationsAppgroupRequest
	347, // 467: google.cloud.apigee.v1.OrganizationsAppgroupsServer.DeleteOrganizationsAppgroup:input_type -> google.cloud.apigee.v1.DeleteOrganizationsAppgroupRequest
	348, // 468: google.cloud.apigee.v1.OrganizationsAppgroupsServer.GetOrganizationsAppgroup:input_type -> google.cloud.apigee.v1.GetOrganizationsAppgroupRequest
	349, // 469: google.cloud.apigee.v1.OrganizationsAppgroupsServer.ListOrganizationsAppgroups:input_type -> google.cloud.apigee.v1.ListOrganizationsAppgroupsRequest
	350, // 470: google.cloud.apigee.v1.OrganizationsAppgroupsServer.UpdateOrganizationsAppgroup:input_type -> google.cloud.apigee.v1.UpdateOrganizationsAppgroupRequest
	351, // 471: google.cloud.apigee.v1.OrganizationsAppgroupsAppsServer.CreateOrganizationsAppgroupsApp:input_type -> google.cloud.apigee.v1.CreateOrganizationsAppgroupsAppRequest
	352, // 472: google.cloud.apigee.v1.OrganizationsAppgroupsAppsServer.DeleteOrganizationsAppgroupsApp:input_type -> google.cloud.apigee.v1.DeleteOrganizationsAppgroupsAppRequest
	353, // 473: google.cloud.apigee.v1.OrganizationsAppgroupsAppsServer.GetOrganizationsAppgroupsApp:input_type -> google.cloud.apigee.v1.GetOrganizationsAppgroupsAppRequest
	354, // 474: google.cloud.apigee.v1.OrganizationsAppgroupsAppsServer.ListOrganizationsAppgroupsApps:input_type -> google.cloud.apigee.v1.ListOrganizationsAppgroupsAppsRequest
	355, // 475: google.cloud.apigee.v1.OrganizationsAppgroupsAppsServer.UpdateOrganizationsAppgroupsApp:input_type -> google.cloud.apigee.v1.UpdateOrganizationsAppgroupsAppRequest
	356, // 476: google.cloud.apigee.v1.OrganizationsAppgroupsAppsKeysServer.CreateOrganizationsAppgroupsAppsKey:input_type -> google.cloud.apigee.v1.CreateOrganizationsAppgroupsAppsKeyRequest
	357, // 477: google.cloud.apigee.v1.OrganizationsAppgroupsAppsKeysServer.DeleteOrganizationsAppgroupsAppsKey:input_type -> google.cloud.apigee.v1.DeleteOrganizationsAppgroupsAppsKeyRequest
	358, // 478: google.cloud.apigee.v1.OrganizationsAppgroupsAppsKeysServer.GetOrganizationsAppgroupsAppsKey:input_type -> google.cloud.apigee.v1.GetOrganizationsAppgroupsAppsKeyRequest
	359, // 479: google.cloud.apigee.v1.OrganizationsAppgroupsAppsKeysServer.UpdateAppGroupAppKeyOrganizationsAppgroupsAppsKey:input_type -> google.cloud.apigee.v1.UpdateAppGroupAppKeyOrganizationsAppgroupsAppsKeyRequest
	360, // 480: google.cloud.apigee.v1.OrganizationsAppgroupsAppsKeysApiproductsServer.DeleteOrganizationsAppgroupsAppsKeysApiproduct:input_type -> google.cloud.apigee.v1.DeleteOrganizationsAppgroupsAppsKeysApiproductRequest
	361, // 481: google.cloud.apigee.v1.OrganizationsAppgroupsAppsKeysApiproductsServer.UpdateAppGroupAppKeyApiProductOrganizationsAppgroupsAppsKeysApiproduct:input_type -> google.cloud.apigee.v1.UpdateAppGroupAppKeyApiProductOrganizationsAppgroupsAppsKeysApiproductRequest
	362, // 482: google.cloud.apigee.v1.OrganizationsAppsServer.GetOrganizationsApp:input_type -> google.cloud.apigee.v1.GetOrganizationsAppRequest
	363, // 483: google.cloud.apigee.v1.OrganizationsAppsServer.ListOrganizationsApps:input_type -> google.cloud.apigee.v1.ListOrganizationsAppsRequest
	364, // 484: google.cloud.apigee.v1.OrganizationsDatacollectorsServer.CreateOrganizationsDatacollector:input_type -> google.cloud.apigee.v1.CreateOrganizationsDatacollectorRequest
	365, // 485: google.cloud.apigee.v1.OrganizationsDatacollectorsServer.DeleteOrganizationsDatacollector:input_type -> google.cloud.apigee.v1.DeleteOrganizationsDatacollectorRequest
	366, // 486: google.cloud.apigee.v1.OrganizationsDatacollectorsServer.GetOrganizationsDatacollector:input_type -> google.cloud.apigee.v1.GetOrganizationsDatacollectorRequest
	367, // 487: google.cloud.apigee.v1.OrganizationsDatacollectorsServer.ListOrganizationsDatacollectors:input_type -> google.cloud.apigee.v1.ListOrganizationsDatacollectorsRequest
	368, // 488: google.cloud.apigee.v1.OrganizationsDatacollectorsServer.PatchOrganizationsDatacollector:input_type -> google.cloud.apigee.v1.PatchOrganizationsDatacollectorRequest
	369, // 489: google.cloud.apigee.v1.OrganizationsDeploymentsServer.ListOrganizationsDeployments:input_type -> google.cloud.apigee.v1.ListOrganizationsDeploymentsRequest
	370, // 490: google.cloud.apigee.v1.OrganizationsDevelopersServer.AttributesOrganizationsDeveloper:input_type -> google.cloud.apigee.v1.AttributesOrganizationsDeveloperRequest
	371, // 491: google.cloud.apigee.v1.OrganizationsDevelopersServer.CreateOrganizationsDeveloper:input_type -> google.cloud.apigee.v1.CreateOrganizationsDeveloperRequest
	372, // 492: google.cloud.apigee.v1.OrganizationsDevelopersServer.DeleteOrganizationsDeveloper:input_type -> google.cloud.apigee.v1.DeleteOrganizationsDeveloperRequest
	373, // 493: google.cloud.apigee.v1.OrganizationsDevelopersServer.GetOrganizationsDeveloper:input_type -> google.cloud.apigee.v1.GetOrganizationsDeveloperRequest
	374, // 494: google.cloud.apigee.v1.OrganizationsDevelopersServer.GetBalanceOrganizationsDeveloper:input_type -> google.cloud.apigee.v1.GetBalanceOrganizationsDeveloperRequest
	375, // 495: google.cloud.apigee.v1.OrganizationsDevelopersServer.GetMonetizationConfigOrganizationsDeveloper:input_type -> google.cloud.apigee.v1.GetMonetizationConfigOrganizationsDeveloperRequest
	376, // 496: google.cloud.apigee.v1.OrganizationsDevelopersServer.ListOrganizationsDevelopers:input_type -> google.cloud.apigee.v1.ListOrganizationsDevelopersRequest
	377, // 497: google.cloud.apigee.v1.OrganizationsDevelopersServer.SetDeveloperStatusOrganizationsDeveloper:input_type -> google.cloud.apigee.v1.SetDeveloperStatusOrganizationsDeveloperRequest
	378, // 498: google.cloud.apigee.v1.OrganizationsDevelopersServer.UpdateOrganizationsDeveloper:input_type -> google.cloud.apigee.v1.UpdateOrganizationsDeveloperRequest
	379, // 499: google.cloud.apigee.v1.OrganizationsDevelopersServer.UpdateMonetizationConfigOrganizationsDeveloper:input_type -> google.cloud.apigee.v1.UpdateMonetizationConfigOrganizationsDeveloperRequest
	380, // 500: google.cloud.apigee.v1.OrganizationsDevelopersAppsServer.AttributesOrganizationsDevelopersApp:input_type -> google.cloud.apigee.v1.AttributesOrganizationsDevelopersAppRequest
	381, // 501: google.cloud.apigee.v1.OrganizationsDevelopersAppsServer.CreateOrganizationsDevelopersApp:input_type -> google.cloud.apigee.v1.CreateOrganizationsDevelopersAppRequest
	382, // 502: google.cloud.apigee.v1.OrganizationsDevelopersAppsServer.DeleteOrganizationsDevelopersApp:input_type -> google.cloud.apigee.v1.DeleteOrganizationsDevelopersAppRequest
	383, // 503: google.cloud.apigee.v1.OrganizationsDevelopersAppsServer.GenerateKeyPairOrUpdateDeveloperAppStatusOrganizationsDevelopersApp:input_type -> google.cloud.apigee.v1.GenerateKeyPairOrUpdateDeveloperAppStatusOrganizationsDevelopersAppRequest
	384, // 504: google.cloud.apigee.v1.OrganizationsDevelopersAppsServer.GetOrganizationsDevelopersApp:input_type -> google.cloud.apigee.v1.GetOrganizationsDevelopersAppRequest
	385, // 505: google.cloud.apigee.v1.OrganizationsDevelopersAppsServer.ListOrganizationsDevelopersApps:input_type -> google.cloud.apigee.v1.ListOrganizationsDevelopersAppsRequest
	386, // 506: google.cloud.apigee.v1.OrganizationsDevelopersAppsServer.UpdateOrganizationsDevelopersApp:input_type -> google.cloud.apigee.v1.UpdateOrganizationsDevelopersAppRequest
	387, // 507: google.cloud.apigee.v1.OrganizationsDevelopersAppsAttributesServer.DeleteOrganizationsDevelopersAppsAttribute:input_type -> google.cloud.apigee.v1.DeleteOrganizationsDevelopersAppsAttributeRequest
	388, // 508: google.cloud.apigee.v1.OrganizationsDevelopersAppsAttributesServer.GetOrganizationsDevelopersAppsAttribute:input_type -> google.cloud.apigee.v1.GetOrganizationsDevelopersAppsAttributeRequest
	389, // 509: google.cloud.apigee.v1.OrganizationsDevelopersAppsAttributesServer.ListOrganizationsDevelopersAppsAttributes:input_type -> google.cloud.apigee.v1.ListOrganizationsDevelopersAppsAttributesRequest
	390, // 510: google.cloud.apigee.v1.OrganizationsDevelopersAppsAttributesServer.UpdateDeveloperAppAttributeOrganizationsDevelopersAppsAttribute:input_type -> google.cloud.apigee.v1.UpdateDeveloperAppAttributeOrganizationsDevelopersAppsAttributeRequest
	391, // 511: google.cloud.apigee.v1.OrganizationsDevelopersAppsKeysServer.CreateOrganizationsDevelopersAppsKey:input_type -> google.cloud.apigee.v1.CreateOrganizationsDevelopersAppsKeyRequest
	392, // 512: google.cloud.apigee.v1.OrganizationsDevelopersAppsKeysServer.DeleteOrganizationsDevelopersAppsKey:input_type -> google.cloud.apigee.v1.DeleteOrganizationsDevelopersAppsKeyRequest
	393, // 513: google.cloud.apigee.v1.OrganizationsDevelopersAppsKeysServer.GetOrganizationsDevelopersAppsKey:input_type -> google.cloud.apigee.v1.GetOrganizationsDevelopersAppsKeyRequest
	394, // 514: google.cloud.apigee.v1.OrganizationsDevelopersAppsKeysServer.ReplaceDeveloperAppKeyOrganizationsDevelopersAppsKey:input_type -> google.cloud.apigee.v1.ReplaceDeveloperAppKeyOrganizationsDevelopersAppsKeyRequest
	395, // 515: google.cloud.apigee.v1.OrganizationsDevelopersAppsKeysServer.UpdateDeveloperAppKeyOrganizationsDevelopersAppsKey:input_type -> google.cloud.apigee.v1.UpdateDeveloperAppKeyOrganizationsDevelopersAppsKeyRequest
	396, // 516: google.cloud.apigee.v1.OrganizationsDevelopersAppsKeysApiproductsServer.DeleteOrganizationsDevelopersAppsKeysApiproduct:input_type -> google.cloud.apigee.v1.DeleteOrganizationsDevelopersAppsKeysApiproductRequest
	397, // 517: google.cloud.apigee.v1.OrganizationsDevelopersAppsKeysApiproductsServer.UpdateDeveloperAppKeyApiProductOrganizationsDevelopersAppsKeysApiproduct:input_type -> google.cloud.apigee.v1.UpdateDeveloperAppKeyApiProductOrganizationsDevelopersAppsKeysApiproductRequest
	398, // 518: google.cloud.apigee.v1.OrganizationsDevelopersAppsKeysCreateServer.CreateOrganizationsDevelopersAppsKeysCreate:input_type -> google.cloud.apigee.v1.CreateOrganizationsDevelopersAppsKeysCreateRequest
	399, // 519: google.cloud.apigee.v1.OrganizationsDevelopersAttributesServer.DeleteOrganizationsDevelopersAttribute:input_type -> google.cloud.apigee.v1.DeleteOrganizationsDevelopersAttributeRequest
	400, // 520: google.cloud.apigee.v1.OrganizationsDevelopersAttributesServer.GetOrganizationsDevelopersAttribute:input_type -> google.cloud.apigee.v1.GetOrganizationsDevelopersAttributeRequest
	401, // 521: google.cloud.apigee.v1.OrganizationsDevelopersAttributesServer.ListOrganizationsDevelopersAttributes:input_type -> google.cloud.apigee.v1.ListOrganizationsDevelopersAttributesRequest
	402, // 522: google.cloud.apigee.v1.OrganizationsDevelopersAttributesServer.UpdateDeveloperAttributeOrganizationsDevelopersAttribute:input_type -> google.cloud.apigee.v1.UpdateDeveloperAttributeOrganizationsDevelopersAttributeRequest
	403, // 523: google.cloud.apigee.v1.OrganizationsDevelopersBalanceServer.AdjustOrganizationsDevelopersBalance:input_type -> google.cloud.apigee.v1.AdjustOrganizationsDevelopersBalanceRequest
	404, // 524: google.cloud.apigee.v1.OrganizationsDevelopersBalanceServer.CreditOrganizationsDevelopersBalance:input_type -> google.cloud.apigee.v1.CreditOrganizationsDevelopersBalanceRequest
	405, // 525: google.cloud.apigee.v1.OrganizationsDevelopersSubscriptionsServer.CreateOrganizationsDevelopersSubscription:input_type -> google.cloud.apigee.v1.CreateOrganizationsDevelopersSubscriptionRequest
	406, // 526: google.cloud.apigee.v1.OrganizationsDevelopersSubscriptionsServer.ExpireOrganizationsDevelopersSubscription:input_type -> google.cloud.apigee.v1.ExpireOrganizationsDevelopersSubscriptionRequest
	407, // 527: google.cloud.apigee.v1.OrganizationsDevelopersSubscriptionsServer.GetOrganizationsDevelopersSubscription:input_type -> google.cloud.apigee.v1.GetOrganizationsDevelopersSubscriptionRequest
	408, // 528: google.cloud.apigee.v1.OrganizationsDevelopersSubscriptionsServer.ListOrganizationsDevelopersSubscriptions:input_type -> google.cloud.apigee.v1.ListOrganizationsDevelopersSubscriptionsRequest
	409, // 529: google.cloud.apigee.v1.OrganizationsEndpointAttachmentsServer.CreateOrganizationsEndpointAttachment:input_type -> google.cloud.apigee.v1.CreateOrganizationsEndpointAttachmentRequest
	410, // 530: google.cloud.apigee.v1.OrganizationsEndpointAttachmentsServer.DeleteOrganizationsEndpointAttachment:input_type -> google.cloud.apigee.v1.DeleteOrganizationsEndpointAttachmentRequest
	411, // 531: google.cloud.apigee.v1.OrganizationsEndpointAttachmentsServer.GetOrganizationsEndpointAttachment:input_type -> google.cloud.apigee.v1.GetOrganizationsEndpointAttachmentRequest
	412, // 532: google.cloud.apigee.v1.OrganizationsEndpointAttachmentsServer.ListOrganizationsEndpointAttachments:input_type -> google.cloud.apigee.v1.ListOrganizationsEndpointAttachmentsRequest
	413, // 533: google.cloud.apigee.v1.OrganizationsEnvgroupsServer.CreateOrganizationsEnvgroup:input_type -> google.cloud.apigee.v1.CreateOrganizationsEnvgroupRequest
	414, // 534: google.cloud.apigee.v1.OrganizationsEnvgroupsServer.DeleteOrganizationsEnvgroup:input_type -> google.cloud.apigee.v1.DeleteOrganizationsEnvgroupRequest
	415, // 535: google.cloud.apigee.v1.OrganizationsEnvgroupsServer.GetOrganizationsEnvgroup:input_type -> google.cloud.apigee.v1.GetOrganizationsEnvgroupRequest
	416, // 536: google.cloud.apigee.v1.OrganizationsEnvgroupsServer.GetDeployedIngressConfigOrganizationsEnvgroup:input_type -> google.cloud.apigee.v1.GetDeployedIngressConfigOrganizationsEnvgroupRequest
	417, // 537: google.cloud.apigee.v1.OrganizationsEnvgroupsServer.ListOrganizationsEnvgroups:input_type -> google.cloud.apigee.v1.ListOrganizationsEnvgroupsRequest
	418, // 538: google.cloud.apigee.v1.OrganizationsEnvgroupsServer.PatchOrganizationsEnvgroup:input_type -> google.cloud.apigee.v1.PatchOrganizationsEnvgroupRequest
	419, // 539: google.cloud.apigee.v1.OrganizationsEnvgroupsAttachmentsServer.CreateOrganizationsEnvgroupsAttachment:input_type -> google.cloud.apigee.v1.CreateOrganizationsEnvgroupsAttachmentRequest
	420, // 540: google.cloud.apigee.v1.OrganizationsEnvgroupsAttachmentsServer.DeleteOrganizationsEnvgroupsAttachment:input_type -> google.cloud.apigee.v1.DeleteOrganizationsEnvgroupsAttachmentRequest
	421, // 541: google.cloud.apigee.v1.OrganizationsEnvgroupsAttachmentsServer.GetOrganizationsEnvgroupsAttachment:input_type -> google.cloud.apigee.v1.GetOrganizationsEnvgroupsAttachmentRequest
	422, // 542: google.cloud.apigee.v1.OrganizationsEnvgroupsAttachmentsServer.ListOrganizationsEnvgroupsAttachments:input_type -> google.cloud.apigee.v1.ListOrganizationsEnvgroupsAttachmentsRequest
	423, // 543: google.cloud.apigee.v1.OrganizationsEnvironmentsServer.CreateOrganizationsEnvironment:input_type -> google.cloud.apigee.v1.CreateOrganizationsEnvironmentRequest
	424, // 544: google.cloud.apigee.v1.OrganizationsEnvironmentsServer.DeleteOrganizationsEnvironment:input_type -> google.cloud.apigee.v1.DeleteOrganizationsEnvironmentRequest
	425, // 545: google.cloud.apigee.v1.OrganizationsEnvironmentsServer.GetOrganizationsEnvironment:input_type -> google.cloud.apigee.v1.GetOrganizationsEnvironmentRequest
	426, // 546: google.cloud.apigee.v1.OrganizationsEnvironmentsServer.GetAddonsConfigOrganizationsEnvironment:input_type -> google.cloud.apigee.v1.GetAddonsConfigOrganizationsEnvironmentRequest
	427, // 547: google.cloud.apigee.v1.OrganizationsEnvironmentsServer.GetApiSecurityRuntimeConfigOrganizationsEnvironment:input_type -> google.cloud.apigee.v1.GetApiSecurityRuntimeConfigOrganizationsEnvironmentRequest
	428, // 548: google.cloud.apigee.v1.OrganizationsEnvironmentsServer.GetDebugmaskOrganizationsEnvironment:input_type -> google.cloud.apigee.v1.GetDebugmaskOrganizationsEnvironmentRequest
	429, // 549: google.cloud.apigee.v1.OrganizationsEnvironmentsServer.GetDeployedConfigOrganizationsEnvironment:input_type -> google.cloud.apigee.v1.GetDeployedConfigOrganizationsEnvironmentRequest
	430, // 550: google.cloud.apigee.v1.OrganizationsEnvironmentsServer.GetSecurityActionsConfigOrganizationsEnvironment:input_type -> google.cloud.apigee.v1.GetSecurityActionsConfigOrganizationsEnvironmentRequest
	431, // 551: google.cloud.apigee.v1.OrganizationsEnvironmentsServer.GetTraceConfigOrganizationsEnvironment:input_type -> google.cloud.apigee.v1.GetTraceConfigOrganizationsEnvironmentRequest
	432, // 552: google.cloud.apigee.v1.OrganizationsEnvironmentsServer.ModifyEnvironmentOrganizationsEnvironment:input_type -> google.cloud.apigee.v1.ModifyEnvironmentOrganizationsEnvironmentRequest
	433, // 553: google.cloud.apigee.v1.OrganizationsEnvironmentsServer.SubscribeOrganizationsEnvironment:input_type -> google.cloud.apigee.v1.SubscribeOrganizationsEnvironmentRequest
	434, // 554: google.cloud.apigee.v1.OrganizationsEnvironmentsServer.UnsubscribeOrganizationsEnvironment:input_type -> google.cloud.apigee.v1.UnsubscribeOrganizationsEnvironmentRequest
	435, // 555: google.cloud.apigee.v1.OrganizationsEnvironmentsServer.UpdateOrganizationsEnvironment:input_type -> google.cloud.apigee.v1.UpdateOrganizationsEnvironmentRequest
	436, // 556: google.cloud.apigee.v1.OrganizationsEnvironmentsServer.UpdateDebugmaskOrganizationsEnvironment:input_type -> google.cloud.apigee.v1.UpdateDebugmaskOrganizationsEnvironmentRequest
	437, // 557: google.cloud.apigee.v1.OrganizationsEnvironmentsServer.UpdateEnvironmentOrganizationsEnvironment:input_type -> google.cloud.apigee.v1.UpdateEnvironmentOrganizationsEnvironmentRequest
	438, // 558: google.cloud.apigee.v1.OrganizationsEnvironmentsServer.UpdateSecurityActionsConfigOrganizationsEnvironment:input_type -> google.cloud.apigee.v1.UpdateSecurityActionsConfigOrganizationsEnvironmentRequest
	439, // 559: google.cloud.apigee.v1.OrganizationsEnvironmentsServer.UpdateTraceConfigOrganizationsEnvironment:input_type -> google.cloud.apigee.v1.UpdateTraceConfigOrganizationsEnvironmentRequest
	440, // 560: google.cloud.apigee.v1.OrganizationsEnvironmentsAddonsConfigServer.SetAddonEnablementOrganizationsEnvironmentsAddonsConfig:input_type -> google.cloud.apigee.v1.SetAddonEnablementOrganizationsEnvironmentsAddonsConfigRequest
	441, // 561: google.cloud.apigee.v1.OrganizationsEnvironmentsAnalyticsAdminServer.GetSchemav2OrganizationsEnvironmentsAnalyticsAdmin:input_type -> google.cloud.apigee.v1.GetSchemav2OrganizationsEnvironmentsAnalyticsAdminRequest
	442, // 562: google.cloud.apigee.v1.OrganizationsEnvironmentsAnalyticsExportsServer.CreateOrganizationsEnvironmentsAnalyticsExport:input_type -> google.cloud.apigee.v1.CreateOrganizationsEnvironmentsAnalyticsExportRequest
	443, // 563: google.cloud.apigee.v1.OrganizationsEnvironmentsAnalyticsExportsServer.GetOrganizationsEnvironmentsAnalyticsExport:input_type -> google.cloud.apigee.v1.GetOrganizationsEnvironmentsAnalyticsExportRequest
	444, // 564: google.cloud.apigee.v1.OrganizationsEnvironmentsAnalyticsExportsServer.ListOrganizationsEnvironmentsAnalyticsExports:input_type -> google.cloud.apigee.v1.ListOrganizationsEnvironmentsAnalyticsExportsRequest
	445, // 565: google.cloud.apigee.v1.OrganizationsEnvironmentsApisDeploymentsServer.ListOrganizationsEnvironmentsApisDeployments:input_type -> google.cloud.apigee.v1.ListOrganizationsEnvironmentsApisDeploymentsRequest
	446, // 566: google.cloud.apigee.v1.OrganizationsEnvironmentsApisRevisionsServer.DeployOrganizationsEnvironmentsApisRevision:input_type -> google.cloud.apigee.v1.DeployOrganizationsEnvironmentsApisRevisionRequest
	447, // 567: google.cloud.apigee.v1.OrganizationsEnvironmentsApisRevisionsServer.GetDeploymentsOrganizationsEnvironmentsApisRevision:input_type -> google.cloud.apigee.v1.GetDeploymentsOrganizationsEnvironmentsApisRevisionRequest
	448, // 568: google.cloud.apigee.v1.OrganizationsEnvironmentsApisRevisionsServer.UndeployOrganizationsEnvironmentsApisRevision:input_type -> google.cloud.apigee.v1.UndeployOrganizationsEnvironmentsApisRevisionRequest
	449, // 569: google.cloud.apigee.v1.OrganizationsEnvironmentsApisRevisionsDebugsessionsServer.CreateOrganizationsEnvironmentsApisRevisionsDebugsession:input_type -> google.cloud.apigee.v1.CreateOrganizationsEnvironmentsApisRevisionsDebugsessionRequest
	450, // 570: google.cloud.apigee.v1.OrganizationsEnvironmentsApisRevisionsDebugsessionsServer.DeleteDataOrganizationsEnvironmentsApisRevisionsDebugsession:input_type -> google.cloud.apigee.v1.DeleteDataOrganizationsEnvironmentsApisRevisionsDebugsessionRequest
	451, // 571: google.cloud.apigee.v1.OrganizationsEnvironmentsApisRevisionsDebugsessionsServer.GetOrganizationsEnvironmentsApisRevisionsDebugsession:input_type -> google.cloud.apigee.v1.GetOrganizationsEnvironmentsApisRevisionsDebugsessionRequest
	452, // 572: google.cloud.apigee.v1.OrganizationsEnvironmentsApisRevisionsDebugsessionsServer.ListOrganizationsEnvironmentsApisRevisionsDebugsessions:input_type -> google.cloud.apigee.v1.ListOrganizationsEnvironmentsApisRevisionsDebugsessionsRequest
	453, // 573: google.cloud.apigee.v1.OrganizationsEnvironmentsApisRevisionsDebugsessionsDataServer.GetOrganizationsEnvironmentsApisRevisionsDebugsessionsData:input_type -> google.cloud.apigee.v1.GetOrganizationsEnvironmentsApisRevisionsDebugsessionsDataRequest
	454, // 574: google.cloud.apigee.v1.OrganizationsEnvironmentsApisRevisionsDeploymentsServer.GenerateDeployChangeReportOrganizationsEnvironmentsApisRevisionsDeployment:input_type -> google.cloud.apigee.v1.GenerateDeployChangeReportOrganizationsEnvironmentsApisRevisionsDeploymentRequest
	455, // 575: google.cloud.apigee.v1.OrganizationsEnvironmentsApisRevisionsDeploymentsServer.GenerateUndeployChangeReportOrganizationsEnvironmentsApisRevisionsDeployment:input_type -> google.cloud.apigee.v1.GenerateUndeployChangeReportOrganizationsEnvironmentsApisRevisionsDeploymentRequest
	456, // 576: google.cloud.apigee.v1.OrganizationsEnvironmentsArchiveDeploymentsServer.CreateOrganizationsEnvironmentsArchiveDeployment:input_type -> google.cloud.apigee.v1.CreateOrganizationsEnvironmentsArchiveDeploymentRequest
	457, // 577: google.cloud.apigee.v1.OrganizationsEnvironmentsArchiveDeploymentsServer.DeleteOrganizationsEnvironmentsArchiveDeployment:input_type -> google.cloud.apigee.v1.DeleteOrganizationsEnvironmentsArchiveDeploymentRequest
	458, // 578: google.cloud.apigee.v1.OrganizationsEnvironmentsArchiveDeploymentsServer.GenerateDownloadUrlOrganizationsEnvironmentsArchiveDeployment:input_type -> google.cloud.apigee.v1.GenerateDownloadUrlOrganizationsEnvironmentsArchiveDeploymentRequest
	459, // 579: google.cloud.apigee.v1.OrganizationsEnvironmentsArchiveDeploymentsServer.GenerateUploadUrlOrganizationsEnvironmentsArchiveDeployment:input_type -> google.cloud.apigee.v1.GenerateUploadUrlOrganizationsEnvironmentsArchiveDeploymentRequest
	460, // 580: google.cloud.apigee.v1.OrganizationsEnvironmentsArchiveDeploymentsServer.GetOrganizationsEnvironmentsArchiveDeployment:input_type -> google.cloud.apigee.v1.GetOrganizationsEnvironmentsArchiveDeploymentRequest
	461, // 581: google.cloud.apigee.v1.OrganizationsEnvironmentsArchiveDeploymentsServer.ListOrganizationsEnvironmentsArchiveDeployments:input_type -> google.cloud.apigee.v1.ListOrganizationsEnvironmentsArchiveDeploymentsRequest
	462, // 582: google.cloud.apigee.v1.OrganizationsEnvironmentsArchiveDeploymentsServer.PatchOrganizationsEnvironmentsArchiveDeployment:input_type -> google.cloud.apigee.v1.PatchOrganizationsEnvironmentsArchiveDeploymentRequest
	463, // 583: google.cloud.apigee.v1.OrganizationsEnvironmentsCachesServer.DeleteOrganizationsEnvironmentsCache:input_type -> google.cloud.apigee.v1.DeleteOrganizationsEnvironmentsCacheRequest
	464, // 584: google.cloud.apigee.v1.OrganizationsEnvironmentsDeploymentsServer.ListOrganizationsEnvironmentsDeployments:input_type -> google.cloud.apigee.v1.ListOrganizationsEnvironmentsDeploymentsRequest
	465, // 585: google.cloud.apigee.v1.OrganizationsEnvironmentsFlowhooksServer.AttachSharedFlowToFlowHookOrganizationsEnvironmentsFlowhook:input_type -> google.cloud.apigee.v1.AttachSharedFlowToFlowHookOrganizationsEnvironmentsFlowhookRequest
	466, // 586: google.cloud.apigee.v1.OrganizationsEnvironmentsFlowhooksServer.DetachSharedFlowFromFlowHookOrganizationsEnvironmentsFlowhook:input_type -> google.cloud.apigee.v1.DetachSharedFlowFromFlowHookOrganizationsEnvironmentsFlowhookRequest
	467, // 587: google.cloud.apigee.v1.OrganizationsEnvironmentsFlowhooksServer.GetOrganizationsEnvironmentsFlowhook:input_type -> google.cloud.apigee.v1.GetOrganizationsEnvironmentsFlowhookRequest
	468, // 588: google.cloud.apigee.v1.OrganizationsEnvironmentsKeystoresServer.CreateOrganizationsEnvironmentsKeystore:input_type -> google.cloud.apigee.v1.CreateOrganizationsEnvironmentsKeystoreRequest
	469, // 589: google.cloud.apigee.v1.OrganizationsEnvironmentsKeystoresServer.DeleteOrganizationsEnvironmentsKeystore:input_type -> google.cloud.apigee.v1.DeleteOrganizationsEnvironmentsKeystoreRequest
	470, // 590: google.cloud.apigee.v1.OrganizationsEnvironmentsKeystoresServer.GetOrganizationsEnvironmentsKeystore:input_type -> google.cloud.apigee.v1.GetOrganizationsEnvironmentsKeystoreRequest
	471, // 591: google.cloud.apigee.v1.OrganizationsEnvironmentsKeystoresAliasesServer.CreateOrganizationsEnvironmentsKeystoresAliase:input_type -> google.cloud.apigee.v1.CreateOrganizationsEnvironmentsKeystoresAliaseRequest
	472, // 592: google.cloud.apigee.v1.OrganizationsEnvironmentsKeystoresAliasesServer.CsrOrganizationsEnvironmentsKeystoresAliase:input_type -> google.cloud.apigee.v1.CsrOrganizationsEnvironmentsKeystoresAliaseRequest
	473, // 593: google.cloud.apigee.v1.OrganizationsEnvironmentsKeystoresAliasesServer.DeleteOrganizationsEnvironmentsKeystoresAliase:input_type -> google.cloud.apigee.v1.DeleteOrganizationsEnvironmentsKeystoresAliaseRequest
	474, // 594: google.cloud.apigee.v1.OrganizationsEnvironmentsKeystoresAliasesServer.GetOrganizationsEnvironmentsKeystoresAliase:input_type -> google.cloud.apigee.v1.GetOrganizationsEnvironmentsKeystoresAliaseRequest
	475, // 595: google.cloud.apigee.v1.OrganizationsEnvironmentsKeystoresAliasesServer.GetCertificateOrganizationsEnvironmentsKeystoresAliase:input_type -> google.cloud.apigee.v1.GetCertificateOrganizationsEnvironmentsKeystoresAliaseRequest
	476, // 596: google.cloud.apigee.v1.OrganizationsEnvironmentsKeystoresAliasesServer.UpdateOrganizationsEnvironmentsKeystoresAliase:input_type -> google.cloud.apigee.v1.UpdateOrganizationsEnvironmentsKeystoresAliaseRequest
	477, // 597: google.cloud.apigee.v1.OrganizationsEnvironmentsKeyvaluemapsServer.CreateOrganizationsEnvironmentsKeyvaluemap:input_type -> google.cloud.apigee.v1.CreateOrganizationsEnvironmentsKeyvaluemapRequest
	478, // 598: google.cloud.apigee.v1.OrganizationsEnvironmentsKeyvaluemapsServer.DeleteOrganizationsEnvironmentsKeyvaluemap:input_type -> google.cloud.apigee.v1.DeleteOrganizationsEnvironmentsKeyvaluemapRequest
	479, // 599: google.cloud.apigee.v1.OrganizationsEnvironmentsKeyvaluemapsEntriesServer.CreateOrganizationsEnvironmentsKeyvaluemapsEntry:input_type -> google.cloud.apigee.v1.CreateOrganizationsEnvironmentsKeyvaluemapsEntryRequest
	480, // 600: google.cloud.apigee.v1.OrganizationsEnvironmentsKeyvaluemapsEntriesServer.DeleteOrganizationsEnvironmentsKeyvaluemapsEntry:input_type -> google.cloud.apigee.v1.DeleteOrganizationsEnvironmentsKeyvaluemapsEntryRequest
	481, // 601: google.cloud.apigee.v1.OrganizationsEnvironmentsKeyvaluemapsEntriesServer.GetOrganizationsEnvironmentsKeyvaluemapsEntry:input_type -> google.cloud.apigee.v1.GetOrganizationsEnvironmentsKeyvaluemapsEntryRequest
	482, // 602: google.cloud.apigee.v1.OrganizationsEnvironmentsKeyvaluemapsEntriesServer.ListOrganizationsEnvironmentsKeyvaluemapsEntries:input_type -> google.cloud.apigee.v1.ListOrganizationsEnvironmentsKeyvaluemapsEntriesRequest
	483, // 603: google.cloud.apigee.v1.OrganizationsEnvironmentsKeyvaluemapsEntriesServer.UpdateOrganizationsEnvironmentsKeyvaluemapsEntry:input_type -> google.cloud.apigee.v1.UpdateOrganizationsEnvironmentsKeyvaluemapsEntryRequest
	484, // 604: google.cloud.apigee.v1.OrganizationsEnvironmentsOptimizedStatsServer.GetOrganizationsEnvironmentsOptimizedStat:input_type -> google.cloud.apigee.v1.GetOrganizationsEnvironmentsOptimizedStatRequest
	485, // 605: google.cloud.apigee.v1.OrganizationsEnvironmentsQueriesServer.CreateOrganizationsEnvironmentsQuery:input_type -> google.cloud.apigee.v1.CreateOrganizationsEnvironmentsQueryRequest
	486, // 606: google.cloud.apigee.v1.OrganizationsEnvironmentsQueriesServer.GetOrganizationsEnvironmentsQuery:input_type -> google.cloud.apigee.v1.GetOrganizationsEnvironmentsQueryRequest
	487, // 607: google.cloud.apigee.v1.OrganizationsEnvironmentsQueriesServer.GetResultOrganizationsEnvironmentsQuery:input_type -> google.cloud.apigee.v1.GetResultOrganizationsEnvironmentsQueryRequest
	488, // 608: google.cloud.apigee.v1.OrganizationsEnvironmentsQueriesServer.GetResulturlOrganizationsEnvironmentsQuery:input_type -> google.cloud.apigee.v1.GetResulturlOrganizationsEnvironmentsQueryRequest
	489, // 609: google.cloud.apigee.v1.OrganizationsEnvironmentsQueriesServer.ListOrganizationsEnvironmentsQueries:input_type -> google.cloud.apigee.v1.ListOrganizationsEnvironmentsQueriesRequest
	490, // 610: google.cloud.apigee.v1.OrganizationsEnvironmentsReferencesServer.CreateOrganizationsEnvironmentsReference:input_type -> google.cloud.apigee.v1.CreateOrganizationsEnvironmentsReferenceRequest
	491, // 611: google.cloud.apigee.v1.OrganizationsEnvironmentsReferencesServer.DeleteOrganizationsEnvironmentsReference:input_type -> google.cloud.apigee.v1.DeleteOrganizationsEnvironmentsReferenceRequest
	492, // 612: google.cloud.apigee.v1.OrganizationsEnvironmentsReferencesServer.GetOrganizationsEnvironmentsReference:input_type -> google.cloud.apigee.v1.GetOrganizationsEnvironmentsReferenceRequest
	493, // 613: google.cloud.apigee.v1.OrganizationsEnvironmentsReferencesServer.UpdateOrganizationsEnvironmentsReference:input_type -> google.cloud.apigee.v1.UpdateOrganizationsEnvironmentsReferenceRequest
	494, // 614: google.cloud.apigee.v1.OrganizationsEnvironmentsResourcefilesServer.CreateOrganizationsEnvironmentsResourcefile:input_type -> google.cloud.apigee.v1.CreateOrganizationsEnvironmentsResourcefileRequest
	495, // 615: google.cloud.apigee.v1.OrganizationsEnvironmentsResourcefilesServer.DeleteOrganizationsEnvironmentsResourcefile:input_type -> google.cloud.apigee.v1.DeleteOrganizationsEnvironmentsResourcefileRequest
	496, // 616: google.cloud.apigee.v1.OrganizationsEnvironmentsResourcefilesServer.GetOrganizationsEnvironmentsResourcefile:input_type -> google.cloud.apigee.v1.GetOrganizationsEnvironmentsResourcefileRequest
	497, // 617: google.cloud.apigee.v1.OrganizationsEnvironmentsResourcefilesServer.ListOrganizationsEnvironmentsResourcefiles:input_type -> google.cloud.apigee.v1.ListOrganizationsEnvironmentsResourcefilesRequest
	498, // 618: google.cloud.apigee.v1.OrganizationsEnvironmentsResourcefilesServer.ListEnvironmentResourcesOrganizationsEnvironmentsResourcefile:input_type -> google.cloud.apigee.v1.ListEnvironmentResourcesOrganizationsEnvironmentsResourcefileRequest
	499, // 619: google.cloud.apigee.v1.OrganizationsEnvironmentsResourcefilesServer.UpdateOrganizationsEnvironmentsResourcefile:input_type -> google.cloud.apigee.v1.UpdateOrganizationsEnvironmentsResourcefileRequest
	500, // 620: google.cloud.apigee.v1.OrganizationsEnvironmentsSecurityActionsServer.CreateOrganizationsEnvironmentsSecurityAction:input_type -> google.cloud.apigee.v1.CreateOrganizationsEnvironmentsSecurityActionRequest
	501, // 621: google.cloud.apigee.v1.OrganizationsEnvironmentsSecurityActionsServer.DisableOrganizationsEnvironmentsSecurityAction:input_type -> google.cloud.apigee.v1.DisableOrganizationsEnvironmentsSecurityActionRequest
	502, // 622: google.cloud.apigee.v1.OrganizationsEnvironmentsSecurityActionsServer.EnableOrganizationsEnvironmentsSecurityAction:input_type -> google.cloud.apigee.v1.EnableOrganizationsEnvironmentsSecurityActionRequest
	503, // 623: google.cloud.apigee.v1.OrganizationsEnvironmentsSecurityActionsServer.GetOrganizationsEnvironmentsSecurityAction:input_type -> google.cloud.apigee.v1.GetOrganizationsEnvironmentsSecurityActionRequest
	504, // 624: google.cloud.apigee.v1.OrganizationsEnvironmentsSecurityActionsServer.ListOrganizationsEnvironmentsSecurityActions:input_type -> google.cloud.apigee.v1.ListOrganizationsEnvironmentsSecurityActionsRequest
	505, // 625: google.cloud.apigee.v1.OrganizationsEnvironmentsSecurityIncidentsServer.BatchUpdateOrganizationsEnvironmentsSecurityIncident:input_type -> google.cloud.apigee.v1.BatchUpdateOrganizationsEnvironmentsSecurityIncidentRequest
	506, // 626: google.cloud.apigee.v1.OrganizationsEnvironmentsSecurityIncidentsServer.GetOrganizationsEnvironmentsSecurityIncident:input_type -> google.cloud.apigee.v1.GetOrganizationsEnvironmentsSecurityIncidentRequest
	507, // 627: google.cloud.apigee.v1.OrganizationsEnvironmentsSecurityIncidentsServer.ListOrganizationsEnvironmentsSecurityIncidents:input_type -> google.cloud.apigee.v1.ListOrganizationsEnvironmentsSecurityIncidentsRequest
	508, // 628: google.cloud.apigee.v1.OrganizationsEnvironmentsSecurityIncidentsServer.PatchOrganizationsEnvironmentsSecurityIncident:input_type -> google.cloud.apigee.v1.PatchOrganizationsEnvironmentsSecurityIncidentRequest
	509, // 629: google.cloud.apigee.v1.OrganizationsEnvironmentsSecurityReportsServer.CreateOrganizationsEnvironmentsSecurityReport:input_type -> google.cloud.apigee.v1.CreateOrganizationsEnvironmentsSecurityReportRequest
	510, // 630: google.cloud.apigee.v1.OrganizationsEnvironmentsSecurityReportsServer.GetOrganizationsEnvironmentsSecurityReport:input_type -> google.cloud.apigee.v1.GetOrganizationsEnvironmentsSecurityReportRequest
	511, // 631: google.cloud.apigee.v1.OrganizationsEnvironmentsSecurityReportsServer.GetResultOrganizationsEnvironmentsSecurityReport:input_type -> google.cloud.apigee.v1.GetResultOrganizationsEnvironmentsSecurityReportRequest
	512, // 632: google.cloud.apigee.v1.OrganizationsEnvironmentsSecurityReportsServer.GetResultViewOrganizationsEnvironmentsSecurityReport:input_type -> google.cloud.apigee.v1.GetResultViewOrganizationsEnvironmentsSecurityReportRequest
	513, // 633: google.cloud.apigee.v1.OrganizationsEnvironmentsSecurityReportsServer.ListOrganizationsEnvironmentsSecurityReports:input_type -> google.cloud.apigee.v1.ListOrganizationsEnvironmentsSecurityReportsRequest
	514, // 634: google.cloud.apigee.v1.OrganizationsEnvironmentsSecurityStatsServer.QueryTabularStatsOrganizationsEnvironmentsSecurityStat:input_type -> google.cloud.apigee.v1.QueryTabularStatsOrganizationsEnvironmentsSecurityStatRequest
	515, // 635: google.cloud.apigee.v1.OrganizationsEnvironmentsSecurityStatsServer.QueryTimeSeriesStatsOrganizationsEnvironmentsSecurityStat:input_type -> google.cloud.apigee.v1.QueryTimeSeriesStatsOrganizationsEnvironmentsSecurityStatRequest
	516, // 636: google.cloud.apigee.v1.OrganizationsEnvironmentsSharedflowsDeploymentsServer.ListOrganizationsEnvironmentsSharedflowsDeployments:input_type -> google.cloud.apigee.v1.ListOrganizationsEnvironmentsSharedflowsDeploymentsRequest
	517, // 637: google.cloud.apigee.v1.OrganizationsEnvironmentsSharedflowsRevisionsServer.DeployOrganizationsEnvironmentsSharedflowsRevision:input_type -> google.cloud.apigee.v1.DeployOrganizationsEnvironmentsSharedflowsRevisionRequest
	518, // 638: google.cloud.apigee.v1.OrganizationsEnvironmentsSharedflowsRevisionsServer.GetDeploymentsOrganizationsEnvironmentsSharedflowsRevision:input_type -> google.cloud.apigee.v1.GetDeploymentsOrganizationsEnvironmentsSharedflowsRevisionRequest
	519, // 639: google.cloud.apigee.v1.OrganizationsEnvironmentsSharedflowsRevisionsServer.UndeployOrganizationsEnvironmentsSharedflowsRevision:input_type -> google.cloud.apigee.v1.UndeployOrganizationsEnvironmentsSharedflowsRevisionRequest
	520, // 640: google.cloud.apigee.v1.OrganizationsEnvironmentsStatsServer.GetOrganizationsEnvironmentsStat:input_type -> google.cloud.apigee.v1.GetOrganizationsEnvironmentsStatRequest
	521, // 641: google.cloud.apigee.v1.OrganizationsEnvironmentsTargetserversServer.CreateOrganizationsEnvironmentsTargetserver:input_type -> google.cloud.apigee.v1.CreateOrganizationsEnvironmentsTargetserverRequest
	522, // 642: google.cloud.apigee.v1.OrganizationsEnvironmentsTargetserversServer.DeleteOrganizationsEnvironmentsTargetserver:input_type -> google.cloud.apigee.v1.DeleteOrganizationsEnvironmentsTargetserverRequest
	523, // 643: google.cloud.apigee.v1.OrganizationsEnvironmentsTargetserversServer.GetOrganizationsEnvironmentsTargetserver:input_type -> google.cloud.apigee.v1.GetOrganizationsEnvironmentsTargetserverRequest
	524, // 644: google.cloud.apigee.v1.OrganizationsEnvironmentsTargetserversServer.UpdateOrganizationsEnvironmentsTargetserver:input_type -> google.cloud.apigee.v1.UpdateOrganizationsEnvironmentsTargetserverRequest
	525, // 645: google.cloud.apigee.v1.OrganizationsEnvironmentsTraceConfigOverridesServer.CreateOrganizationsEnvironmentsTraceConfigOverride:input_type -> google.cloud.apigee.v1.CreateOrganizationsEnvironmentsTraceConfigOverrideRequest
	526, // 646: google.cloud.apigee.v1.OrganizationsEnvironmentsTraceConfigOverridesServer.DeleteOrganizationsEnvironmentsTraceConfigOverride:input_type -> google.cloud.apigee.v1.DeleteOrganizationsEnvironmentsTraceConfigOverrideRequest
	527, // 647: google.cloud.apigee.v1.OrganizationsEnvironmentsTraceConfigOverridesServer.GetOrganizationsEnvironmentsTraceConfigOverride:input_type -> google.cloud.apigee.v1.GetOrganizationsEnvironmentsTraceConfigOverrideRequest
	528, // 648: google.cloud.apigee.v1.OrganizationsEnvironmentsTraceConfigOverridesServer.ListOrganizationsEnvironmentsTraceConfigOverrides:input_type -> google.cloud.apigee.v1.ListOrganizationsEnvironmentsTraceConfigOverridesRequest
	529, // 649: google.cloud.apigee.v1.OrganizationsEnvironmentsTraceConfigOverridesServer.PatchOrganizationsEnvironmentsTraceConfigOverride:input_type -> google.cloud.apigee.v1.PatchOrganizationsEnvironmentsTraceConfigOverrideRequest
	530, // 650: google.cloud.apigee.v1.OrganizationsHostQueriesServer.CreateOrganizationsHostQuery:input_type -> google.cloud.apigee.v1.CreateOrganizationsHostQueryRequest
	531, // 651: google.cloud.apigee.v1.OrganizationsHostQueriesServer.GetOrganizationsHostQuery:input_type -> google.cloud.apigee.v1.GetOrganizationsHostQueryRequest
	532, // 652: google.cloud.apigee.v1.OrganizationsHostQueriesServer.GetResultOrganizationsHostQuery:input_type -> google.cloud.apigee.v1.GetResultOrganizationsHostQueryRequest
	533, // 653: google.cloud.apigee.v1.OrganizationsHostQueriesServer.GetResultViewOrganizationsHostQuery:input_type -> google.cloud.apigee.v1.GetResultViewOrganizationsHostQueryRequest
	534, // 654: google.cloud.apigee.v1.OrganizationsHostQueriesServer.ListOrganizationsHostQueries:input_type -> google.cloud.apigee.v1.ListOrganizationsHostQueriesRequest
	535, // 655: google.cloud.apigee.v1.OrganizationsHostSecurityReportsServer.CreateOrganizationsHostSecurityReport:input_type -> google.cloud.apigee.v1.CreateOrganizationsHostSecurityReportRequest
	536, // 656: google.cloud.apigee.v1.OrganizationsHostSecurityReportsServer.GetOrganizationsHostSecurityReport:input_type -> google.cloud.apigee.v1.GetOrganizationsHostSecurityReportRequest
	537, // 657: google.cloud.apigee.v1.OrganizationsHostSecurityReportsServer.GetResultOrganizationsHostSecurityReport:input_type -> google.cloud.apigee.v1.GetResultOrganizationsHostSecurityReportRequest
	538, // 658: google.cloud.apigee.v1.OrganizationsHostSecurityReportsServer.GetResultViewOrganizationsHostSecurityReport:input_type -> google.cloud.apigee.v1.GetResultViewOrganizationsHostSecurityReportRequest
	539, // 659: google.cloud.apigee.v1.OrganizationsHostSecurityReportsServer.ListOrganizationsHostSecurityReports:input_type -> google.cloud.apigee.v1.ListOrganizationsHostSecurityReportsRequest
	540, // 660: google.cloud.apigee.v1.OrganizationsHostStatsServer.GetOrganizationsHostStat:input_type -> google.cloud.apigee.v1.GetOrganizationsHostStatRequest
	541, // 661: google.cloud.apigee.v1.OrganizationsInstancesServer.CreateOrganizationsInstance:input_type -> google.cloud.apigee.v1.CreateOrganizationsInstanceRequest
	542, // 662: google.cloud.apigee.v1.OrganizationsInstancesServer.DeleteOrganizationsInstance:input_type -> google.cloud.apigee.v1.DeleteOrganizationsInstanceRequest
	543, // 663: google.cloud.apigee.v1.OrganizationsInstancesServer.GetOrganizationsInstance:input_type -> google.cloud.apigee.v1.GetOrganizationsInstanceRequest
	544, // 664: google.cloud.apigee.v1.OrganizationsInstancesServer.ListOrganizationsInstances:input_type -> google.cloud.apigee.v1.ListOrganizationsInstancesRequest
	545, // 665: google.cloud.apigee.v1.OrganizationsInstancesServer.PatchOrganizationsInstance:input_type -> google.cloud.apigee.v1.PatchOrganizationsInstanceRequest
	546, // 666: google.cloud.apigee.v1.OrganizationsInstancesServer.ReportStatusOrganizationsInstance:input_type -> google.cloud.apigee.v1.ReportStatusOrganizationsInstanceRequest
	547, // 667: google.cloud.apigee.v1.OrganizationsInstancesAttachmentsServer.CreateOrganizationsInstancesAttachment:input_type -> google.cloud.apigee.v1.CreateOrganizationsInstancesAttachmentRequest
	548, // 668: google.cloud.apigee.v1.OrganizationsInstancesAttachmentsServer.DeleteOrganizationsInstancesAttachment:input_type -> google.cloud.apigee.v1.DeleteOrganizationsInstancesAttachmentRequest
	549, // 669: google.cloud.apigee.v1.OrganizationsInstancesAttachmentsServer.GetOrganizationsInstancesAttachment:input_type -> google.cloud.apigee.v1.GetOrganizationsInstancesAttachmentRequest
	550, // 670: google.cloud.apigee.v1.OrganizationsInstancesAttachmentsServer.ListOrganizationsInstancesAttachments:input_type -> google.cloud.apigee.v1.ListOrganizationsInstancesAttachmentsRequest
	551, // 671: google.cloud.apigee.v1.OrganizationsInstancesCanaryevaluationsServer.CreateOrganizationsInstancesCanaryevaluation:input_type -> google.cloud.apigee.v1.CreateOrganizationsInstancesCanaryevaluationRequest
	552, // 672: google.cloud.apigee.v1.OrganizationsInstancesCanaryevaluationsServer.GetOrganizationsInstancesCanaryevaluation:input_type -> google.cloud.apigee.v1.GetOrganizationsInstancesCanaryevaluationRequest
	553, // 673: google.cloud.apigee.v1.OrganizationsInstancesNatAddressesServer.ActivateOrganizationsInstancesNatAddresse:input_type -> google.cloud.apigee.v1.ActivateOrganizationsInstancesNatAddresseRequest
	554, // 674: google.cloud.apigee.v1.OrganizationsInstancesNatAddressesServer.CreateOrganizationsInstancesNatAddresse:input_type -> google.cloud.apigee.v1.CreateOrganizationsInstancesNatAddresseRequest
	555, // 675: google.cloud.apigee.v1.OrganizationsInstancesNatAddressesServer.DeleteOrganizationsInstancesNatAddresse:input_type -> google.cloud.apigee.v1.DeleteOrganizationsInstancesNatAddresseRequest
	556, // 676: google.cloud.apigee.v1.OrganizationsInstancesNatAddressesServer.GetOrganizationsInstancesNatAddresse:input_type -> google.cloud.apigee.v1.GetOrganizationsInstancesNatAddresseRequest
	557, // 677: google.cloud.apigee.v1.OrganizationsInstancesNatAddressesServer.ListOrganizationsInstancesNatAddresses:input_type -> google.cloud.apigee.v1.ListOrganizationsInstancesNatAddressesRequest
	558, // 678: google.cloud.apigee.v1.OrganizationsKeyvaluemapsServer.CreateOrganizationsKeyvaluemap:input_type -> google.cloud.apigee.v1.CreateOrganizationsKeyvaluemapRequest
	559, // 679: google.cloud.apigee.v1.OrganizationsKeyvaluemapsServer.DeleteOrganizationsKeyvaluemap:input_type -> google.cloud.apigee.v1.DeleteOrganizationsKeyvaluemapRequest
	560, // 680: google.cloud.apigee.v1.OrganizationsKeyvaluemapsEntriesServer.CreateOrganizationsKeyvaluemapsEntry:input_type -> google.cloud.apigee.v1.CreateOrganizationsKeyvaluemapsEntryRequest
	561, // 681: google.cloud.apigee.v1.OrganizationsKeyvaluemapsEntriesServer.DeleteOrganizationsKeyvaluemapsEntry:input_type -> google.cloud.apigee.v1.DeleteOrganizationsKeyvaluemapsEntryRequest
	562, // 682: google.cloud.apigee.v1.OrganizationsKeyvaluemapsEntriesServer.GetOrganizationsKeyvaluemapsEntry:input_type -> google.cloud.apigee.v1.GetOrganizationsKeyvaluemapsEntryRequest
	563, // 683: google.cloud.apigee.v1.OrganizationsKeyvaluemapsEntriesServer.ListOrganizationsKeyvaluemapsEntries:input_type -> google.cloud.apigee.v1.ListOrganizationsKeyvaluemapsEntriesRequest
	564, // 684: google.cloud.apigee.v1.OrganizationsKeyvaluemapsEntriesServer.UpdateOrganizationsKeyvaluemapsEntry:input_type -> google.cloud.apigee.v1.UpdateOrganizationsKeyvaluemapsEntryRequest
	565, // 685: google.cloud.apigee.v1.OrganizationsOptimizedHostStatsServer.GetOrganizationsOptimizedHostStat:input_type -> google.cloud.apigee.v1.GetOrganizationsOptimizedHostStatRequest
	566, // 686: google.cloud.apigee.v1.OrganizationsReportsServer.CreateOrganizationsReport:input_type -> google.cloud.apigee.v1.CreateOrganizationsReportRequest
	567, // 687: google.cloud.apigee.v1.OrganizationsReportsServer.DeleteOrganizationsReport:input_type -> google.cloud.apigee.v1.DeleteOrganizationsReportRequest
	568, // 688: google.cloud.apigee.v1.OrganizationsReportsServer.GetOrganizationsReport:input_type -> google.cloud.apigee.v1.GetOrganizationsReportRequest
	569, // 689: google.cloud.apigee.v1.OrganizationsReportsServer.ListOrganizationsReports:input_type -> google.cloud.apigee.v1.ListOrganizationsReportsRequest
	570, // 690: google.cloud.apigee.v1.OrganizationsReportsServer.UpdateOrganizationsReport:input_type -> google.cloud.apigee.v1.UpdateOrganizationsReportRequest
	571, // 691: google.cloud.apigee.v1.OrganizationsSecurityAssessmentResultsServer.BatchComputeOrganizationsSecurityAssessmentResult:input_type -> google.cloud.apigee.v1.BatchComputeOrganizationsSecurityAssessmentResultRequest
	572, // 692: google.cloud.apigee.v1.OrganizationsSecurityProfilesServer.CreateOrganizationsSecurityProfile:input_type -> google.cloud.apigee.v1.CreateOrganizationsSecurityProfileRequest
	573, // 693: google.cloud.apigee.v1.OrganizationsSecurityProfilesServer.DeleteOrganizationsSecurityProfile:input_type -> google.cloud.apigee.v1.DeleteOrganizationsSecurityProfileRequest
	574, // 694: google.cloud.apigee.v1.OrganizationsSecurityProfilesServer.GetOrganizationsSecurityProfile:input_type -> google.cloud.apigee.v1.GetOrganizationsSecurityProfileRequest
	575, // 695: google.cloud.apigee.v1.OrganizationsSecurityProfilesServer.ListOrganizationsSecurityProfiles:input_type -> google.cloud.apigee.v1.ListOrganizationsSecurityProfilesRequest
	576, // 696: google.cloud.apigee.v1.OrganizationsSecurityProfilesServer.ListRevisionsOrganizationsSecurityProfile:input_type -> google.cloud.apigee.v1.ListRevisionsOrganizationsSecurityProfileRequest
	577, // 697: google.cloud.apigee.v1.OrganizationsSecurityProfilesServer.PatchOrganizationsSecurityProfile:input_type -> google.cloud.apigee.v1.PatchOrganizationsSecurityProfileRequest
	578, // 698: google.cloud.apigee.v1.OrganizationsSecurityProfilesEnvironmentsServer.ComputeEnvironmentScoresOrganizationsSecurityProfilesEnvironment:input_type -> google.cloud.apigee.v1.ComputeEnvironmentScoresOrganizationsSecurityProfilesEnvironmentRequest
	579, // 699: google.cloud.apigee.v1.OrganizationsSecurityProfilesEnvironmentsServer.CreateOrganizationsSecurityProfilesEnvironment:input_type -> google.cloud.apigee.v1.CreateOrganizationsSecurityProfilesEnvironmentRequest
	580, // 700: google.cloud.apigee.v1.OrganizationsSecurityProfilesEnvironmentsServer.DeleteOrganizationsSecurityProfilesEnvironment:input_type -> google.cloud.apigee.v1.DeleteOrganizationsSecurityProfilesEnvironmentRequest
	581, // 701: google.cloud.apigee.v1.OrganizationsSharedflowsServer.CreateOrganizationsSharedflow:input_type -> google.cloud.apigee.v1.CreateOrganizationsSharedflowRequest
	582, // 702: google.cloud.apigee.v1.OrganizationsSharedflowsServer.DeleteOrganizationsSharedflow:input_type -> google.cloud.apigee.v1.DeleteOrganizationsSharedflowRequest
	583, // 703: google.cloud.apigee.v1.OrganizationsSharedflowsServer.GetOrganizationsSharedflow:input_type -> google.cloud.apigee.v1.GetOrganizationsSharedflowRequest
	584, // 704: google.cloud.apigee.v1.OrganizationsSharedflowsServer.ListOrganizationsSharedflows:input_type -> google.cloud.apigee.v1.ListOrganizationsSharedflowsRequest
	585, // 705: google.cloud.apigee.v1.OrganizationsSharedflowsDeploymentsServer.ListOrganizationsSharedflowsDeployments:input_type -> google.cloud.apigee.v1.ListOrganizationsSharedflowsDeploymentsRequest
	586, // 706: google.cloud.apigee.v1.OrganizationsSharedflowsRevisionsServer.DeleteOrganizationsSharedflowsRevision:input_type -> google.cloud.apigee.v1.DeleteOrganizationsSharedflowsRevisionRequest
	587, // 707: google.cloud.apigee.v1.OrganizationsSharedflowsRevisionsServer.GetOrganizationsSharedflowsRevision:input_type -> google.cloud.apigee.v1.GetOrganizationsSharedflowsRevisionRequest
	588, // 708: google.cloud.apigee.v1.OrganizationsSharedflowsRevisionsServer.UpdateSharedFlowRevisionOrganizationsSharedflowsRevision:input_type -> google.cloud.apigee.v1.UpdateSharedFlowRevisionOrganizationsSharedflowsRevisionRequest
	589, // 709: google.cloud.apigee.v1.OrganizationsSharedflowsRevisionsDeploymentsServer.ListOrganizationsSharedflowsRevisionsDeployments:input_type -> google.cloud.apigee.v1.ListOrganizationsSharedflowsRevisionsDeploymentsRequest
	590, // 710: google.cloud.apigee.v1.OrganizationsSitesApicategoriesServer.CreateOrganizationsSitesApicategory:input_type -> google.cloud.apigee.v1.CreateOrganizationsSitesApicategoryRequest
	591, // 711: google.cloud.apigee.v1.OrganizationsSitesApicategoriesServer.DeleteOrganizationsSitesApicategory:input_type -> google.cloud.apigee.v1.DeleteOrganizationsSitesApicategoryRequest
	592, // 712: google.cloud.apigee.v1.OrganizationsSitesApicategoriesServer.GetOrganizationsSitesApicategory:input_type -> google.cloud.apigee.v1.GetOrganizationsSitesApicategoryRequest
	593, // 713: google.cloud.apigee.v1.OrganizationsSitesApicategoriesServer.ListOrganizationsSitesApicategories:input_type -> google.cloud.apigee.v1.ListOrganizationsSitesApicategoriesRequest
	594, // 714: google.cloud.apigee.v1.OrganizationsSitesApicategoriesServer.PatchOrganizationsSitesApicategory:input_type -> google.cloud.apigee.v1.PatchOrganizationsSitesApicategoryRequest
	595, // 715: google.cloud.apigee.v1.OrganizationsSitesApidocsServer.CreateOrganizationsSitesApidoc:input_type -> google.cloud.apigee.v1.CreateOrganizationsSitesApidocRequest
	596, // 716: google.cloud.apigee.v1.OrganizationsSitesApidocsServer.DeleteOrganizationsSitesApidoc:input_type -> google.cloud.apigee.v1.DeleteOrganizationsSitesApidocRequest
	597, // 717: google.cloud.apigee.v1.OrganizationsSitesApidocsServer.GetOrganizationsSitesApidoc:input_type -> google.cloud.apigee.v1.GetOrganizationsSitesApidocRequest
	598, // 718: google.cloud.apigee.v1.OrganizationsSitesApidocsServer.GetDocumentationOrganizationsSitesApidoc:input_type -> google.cloud.apigee.v1.GetDocumentationOrganizationsSitesApidocRequest
	599, // 719: google.cloud.apigee.v1.OrganizationsSitesApidocsServer.ListOrganizationsSitesApidocs:input_type -> google.cloud.apigee.v1.ListOrganizationsSitesApidocsRequest
	600, // 720: google.cloud.apigee.v1.OrganizationsSitesApidocsServer.UpdateOrganizationsSitesApidoc:input_type -> google.cloud.apigee.v1.UpdateOrganizationsSitesApidocRequest
	601, // 721: google.cloud.apigee.v1.OrganizationsSitesApidocsServer.UpdateDocumentationOrganizationsSitesApidoc:input_type -> google.cloud.apigee.v1.UpdateDocumentationOrganizationsSitesApidocRequest
	602, // 722: google.cloud.apigee.v1.ProjectsServer.ProvisionOrganizationProject:input_type -> google.cloud.apigee.v1.ProvisionOrganizationProjectRequest
	146, // 723: google.cloud.apigee.v1.HybridIssuersServer.ListHybridIssuers:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1ListHybridIssuersResponse
	619, // 724: google.cloud.apigee.v1.OrganizationsServer.CreateOrganization:output_type -> google.longrunning.Operation
	619, // 725: google.cloud.apigee.v1.OrganizationsServer.DeleteOrganization:output_type -> google.longrunning.Operation
	176, // 726: google.cloud.apigee.v1.OrganizationsServer.GetOrganization:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1Organization
	113, // 727: google.cloud.apigee.v1.OrganizationsServer.GetDeployedIngressConfigOrganization:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1IngressConfig
	177, // 728: google.cloud.apigee.v1.OrganizationsServer.GetProjectMappingOrganization:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1OrganizationProjectMapping
	218, // 729: google.cloud.apigee.v1.OrganizationsServer.GetRuntimeConfigOrganization:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1RuntimeConfig
	254, // 730: google.cloud.apigee.v1.OrganizationsServer.GetSecuritySettingsOrganization:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1SecuritySettings
	265, // 731: google.cloud.apigee.v1.OrganizationsServer.GetSyncAuthorizationOrganization:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1SyncAuthorization
	152, // 732: google.cloud.apigee.v1.OrganizationsServer.ListOrganizations:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1ListOrganizationsResponse
	619, // 733: google.cloud.apigee.v1.OrganizationsServer.SetAddonsOrganization:output_type -> google.longrunning.Operation
	265, // 734: google.cloud.apigee.v1.OrganizationsServer.SetSyncAuthorizationOrganization:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1SyncAuthorization
	176, // 735: google.cloud.apigee.v1.OrganizationsServer.UpdateOrganization:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1Organization
	254, // 736: google.cloud.apigee.v1.OrganizationsServer.UpdateSecuritySettingsOrganization:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1SecuritySettings
	61,  // 737: google.cloud.apigee.v1.OrganizationsAnalyticsDatastoresServer.CreateOrganizationsAnalyticsDatastore:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1Datastore
	287, // 738: google.cloud.apigee.v1.OrganizationsAnalyticsDatastoresServer.DeleteOrganizationsAnalyticsDatastore:output_type -> google.cloud.apigee.v1.GoogleProtobufEmpty
	61,  // 739: google.cloud.apigee.v1.OrganizationsAnalyticsDatastoresServer.GetOrganizationsAnalyticsDatastore:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1Datastore
	136, // 740: google.cloud.apigee.v1.OrganizationsAnalyticsDatastoresServer.ListOrganizationsAnalyticsDatastores:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1ListDatastoresResponse
	268, // 741: google.cloud.apigee.v1.OrganizationsAnalyticsDatastoresServer.TestOrganizationsAnalyticsDatastore:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1TestDatastoreResponse
	61,  // 742: google.cloud.apigee.v1.OrganizationsAnalyticsDatastoresServer.UpdateOrganizationsAnalyticsDatastore:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1Datastore
	37,  // 743: google.cloud.apigee.v1.OrganizationsApiproductsServer.AttributesOrganizationsApiproduct:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1Attributes
	22,  // 744: google.cloud.apigee.v1.OrganizationsApiproductsServer.CreateOrganizationsApiproduct:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1ApiProduct
	22,  // 745: google.cloud.apigee.v1.OrganizationsApiproductsServer.DeleteOrganizationsApiproduct:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1ApiProduct
	22,  // 746: google.cloud.apigee.v1.OrganizationsApiproductsServer.GetOrganizationsApiproduct:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1ApiProduct
	127, // 747: google.cloud.apigee.v1.OrganizationsApiproductsServer.ListOrganizationsApiproducts:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1ListApiProductsResponse
	22,  // 748: google.cloud.apigee.v1.OrganizationsApiproductsServer.UpdateOrganizationsApiproduct:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1ApiProduct
	36,  // 749: google.cloud.apigee.v1.OrganizationsApiproductsAttributesServer.DeleteOrganizationsApiproductsAttribute:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1Attribute
	36,  // 750: google.cloud.apigee.v1.OrganizationsApiproductsAttributesServer.GetOrganizationsApiproductsAttribute:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1Attribute
	37,  // 751: google.cloud.apigee.v1.OrganizationsApiproductsAttributesServer.ListOrganizationsApiproductsAttributes:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1Attributes
	36,  // 752: google.cloud.apigee.v1.OrganizationsApiproductsAttributesServer.UpdateApiProductAttributeOrganizationsApiproductsAttribute:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1Attribute
	200, // 753: google.cloud.apigee.v1.OrganizationsApiproductsRateplansServer.CreateOrganizationsApiproductsRateplan:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1RatePlan
	200, // 754: google.cloud.apigee.v1.OrganizationsApiproductsRateplansServer.DeleteOrganizationsApiproductsRateplan:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1RatePlan
	200, // 755: google.cloud.apigee.v1.OrganizationsApiproductsRateplansServer.GetOrganizationsApiproductsRateplan:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1RatePlan
	153, // 756: google.cloud.apigee.v1.OrganizationsApiproductsRateplansServer.ListOrganizationsApiproductsRateplans:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1ListRatePlansResponse
	200, // 757: google.cloud.apigee.v1.OrganizationsApiproductsRateplansServer.UpdateOrganizationsApiproductsRateplan:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1RatePlan
	25,  // 758: google.cloud.apigee.v1.OrganizationsApisServer.CreateOrganizationsApi:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1ApiProxyRevision
	24,  // 759: google.cloud.apigee.v1.OrganizationsApisServer.DeleteOrganizationsApi:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1ApiProxy
	24,  // 760: google.cloud.apigee.v1.OrganizationsApisServer.GetOrganizationsApi:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1ApiProxy
	128, // 761: google.cloud.apigee.v1.OrganizationsApisServer.ListOrganizationsApis:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1ListApiProxiesResponse
	24,  // 762: google.cloud.apigee.v1.OrganizationsApisServer.PatchOrganizationsApi:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1ApiProxy
	138, // 763: google.cloud.apigee.v1.OrganizationsApisDeploymentsServer.ListOrganizationsApisDeployments:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1ListDeploymentsResponse
	122, // 764: google.cloud.apigee.v1.OrganizationsApisKeyvaluemapsServer.CreateOrganizationsApisKeyvaluemap:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1KeyValueMap
	122, // 765: google.cloud.apigee.v1.OrganizationsApisKeyvaluemapsServer.DeleteOrganizationsApisKeyvaluemap:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1KeyValueMap
	121, // 766: google.cloud.apigee.v1.OrganizationsApisKeyvaluemapsEntriesServer.CreateOrganizationsApisKeyvaluemapsEntry:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1KeyValueEntry
	121, // 767: google.cloud.apigee.v1.OrganizationsApisKeyvaluemapsEntriesServer.DeleteOrganizationsApisKeyvaluemapsEntry:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1KeyValueEntry
	121, // 768: google.cloud.apigee.v1.OrganizationsApisKeyvaluemapsEntriesServer.GetOrganizationsApisKeyvaluemapsEntry:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1KeyValueEntry
	149, // 769: google.cloud.apigee.v1.OrganizationsApisKeyvaluemapsEntriesServer.ListOrganizationsApisKeyvaluemapsEntries:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1ListKeyValueEntriesResponse
	121, // 770: google.cloud.apigee.v1.OrganizationsApisKeyvaluemapsEntriesServer.UpdateOrganizationsApisKeyvaluemapsEntry:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1KeyValueEntry
	25,  // 771: google.cloud.apigee.v1.OrganizationsApisRevisionsServer.DeleteOrganizationsApisRevision:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1ApiProxyRevision
	2,   // 772: google.cloud.apigee.v1.OrganizationsApisRevisionsServer.GetOrganizationsApisRevision:output_type -> google.cloud.apigee.v1.GoogleApiHttpBody
	25,  // 773: google.cloud.apigee.v1.OrganizationsApisRevisionsServer.UpdateApiProxyRevisionOrganizationsApisRevision:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1ApiProxyRevision
	138, // 774: google.cloud.apigee.v1.OrganizationsApisRevisionsDeploymentsServer.ListOrganizationsApisRevisionsDeployments:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1ListDeploymentsResponse
	29,  // 775: google.cloud.apigee.v1.OrganizationsAppgroupsServer.CreateOrganizationsAppgroup:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1AppGroup
	29,  // 776: google.cloud.apigee.v1.OrganizationsAppgroupsServer.DeleteOrganizationsAppgroup:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1AppGroup
	29,  // 777: google.cloud.apigee.v1.OrganizationsAppgroupsServer.GetOrganizationsAppgroup:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1AppGroup
	130, // 778: google.cloud.apigee.v1.OrganizationsAppgroupsServer.ListOrganizationsAppgroups:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1ListAppGroupsResponse
	29,  // 779: google.cloud.apigee.v1.OrganizationsAppgroupsServer.UpdateOrganizationsAppgroup:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1AppGroup
	30,  // 780: google.cloud.apigee.v1.OrganizationsAppgroupsAppsServer.CreateOrganizationsAppgroupsApp:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1AppGroupApp
	30,  // 781: google.cloud.apigee.v1.OrganizationsAppgroupsAppsServer.DeleteOrganizationsAppgroupsApp:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1AppGroupApp
	30,  // 782: google.cloud.apigee.v1.OrganizationsAppgroupsAppsServer.GetOrganizationsAppgroupsApp:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1AppGroupApp
	129, // 783: google.cloud.apigee.v1.OrganizationsAppgroupsAppsServer.ListOrganizationsAppgroupsApps:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1ListAppGroupAppsResponse
	30,  // 784: google.cloud.apigee.v1.OrganizationsAppgroupsAppsServer.UpdateOrganizationsAppgroupsApp:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1AppGroupApp
	31,  // 785: google.cloud.apigee.v1.OrganizationsAppgroupsAppsKeysServer.CreateOrganizationsAppgroupsAppsKey:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1AppGroupAppKey
	31,  // 786: google.cloud.apigee.v1.OrganizationsAppgroupsAppsKeysServer.DeleteOrganizationsAppgroupsAppsKey:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1AppGroupAppKey
	31,  // 787: google.cloud.apigee.v1.OrganizationsAppgroupsAppsKeysServer.GetOrganizationsAppgroupsAppsKey:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1AppGroupAppKey
	31,  // 788: google.cloud.apigee.v1.OrganizationsAppgroupsAppsKeysServer.UpdateAppGroupAppKeyOrganizationsAppgroupsAppsKey:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1AppGroupAppKey
	31,  // 789: google.cloud.apigee.v1.OrganizationsAppgroupsAppsKeysApiproductsServer.DeleteOrganizationsAppgroupsAppsKeysApiproduct:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1AppGroupAppKey
	287, // 790: google.cloud.apigee.v1.OrganizationsAppgroupsAppsKeysApiproductsServer.UpdateAppGroupAppKeyApiProductOrganizationsAppgroupsAppsKeysApiproduct:output_type -> google.cloud.apigee.v1.GoogleProtobufEmpty
	28,  // 791: google.cloud.apigee.v1.OrganizationsAppsServer.GetOrganizationsApp:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1App
	131, // 792: google.cloud.apigee.v1.OrganizationsAppsServer.ListOrganizationsApps:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1ListAppsResponse
	59,  // 793: google.cloud.apigee.v1.OrganizationsDatacollectorsServer.CreateOrganizationsDatacollector:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1DataCollector
	287, // 794: google.cloud.apigee.v1.OrganizationsDatacollectorsServer.DeleteOrganizationsDatacollector:output_type -> google.cloud.apigee.v1.GoogleProtobufEmpty
	59,  // 795: google.cloud.apigee.v1.OrganizationsDatacollectorsServer.GetOrganizationsDatacollector:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1DataCollector
	135, // 796: google.cloud.apigee.v1.OrganizationsDatacollectorsServer.ListOrganizationsDatacollectors:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1ListDataCollectorsResponse
	59,  // 797: google.cloud.apigee.v1.OrganizationsDatacollectorsServer.PatchOrganizationsDatacollector:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1DataCollector
	138, // 798: google.cloud.apigee.v1.OrganizationsDeploymentsServer.ListOrganizationsDeployments:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1ListDeploymentsResponse
	37,  // 799: google.cloud.apigee.v1.OrganizationsDevelopersServer.AttributesOrganizationsDeveloper:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1Attributes
	76,  // 800: google.cloud.apigee.v1.OrganizationsDevelopersServer.CreateOrganizationsDeveloper:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1Developer
	76,  // 801: google.cloud.apigee.v1.OrganizationsDevelopersServer.DeleteOrganizationsDeveloper:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1Developer
	76,  // 802: google.cloud.apigee.v1.OrganizationsDevelopersServer.GetOrganizationsDeveloper:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1Developer
	79,  // 803: google.cloud.apigee.v1.OrganizationsDevelopersServer.GetBalanceOrganizationsDeveloper:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1DeveloperBalance
	81,  // 804: google.cloud.apigee.v1.OrganizationsDevelopersServer.GetMonetizationConfigOrganizationsDeveloper:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1DeveloperMonetizationConfig
	151, // 805: google.cloud.apigee.v1.OrganizationsDevelopersServer.ListOrganizationsDevelopers:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1ListOfDevelopersResponse
	287, // 806: google.cloud.apigee.v1.OrganizationsDevelopersServer.SetDeveloperStatusOrganizationsDeveloper:output_type -> google.cloud.apigee.v1.GoogleProtobufEmpty
	76,  // 807: google.cloud.apigee.v1.OrganizationsDevelopersServer.UpdateOrganizationsDeveloper:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1Developer
	81,  // 808: google.cloud.apigee.v1.OrganizationsDevelopersServer.UpdateMonetizationConfigOrganizationsDeveloper:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1DeveloperMonetizationConfig
	37,  // 809: google.cloud.apigee.v1.OrganizationsDevelopersAppsServer.AttributesOrganizationsDevelopersApp:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1Attributes
	77,  // 810: google.cloud.apigee.v1.OrganizationsDevelopersAppsServer.CreateOrganizationsDevelopersApp:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1DeveloperApp
	77,  // 811: google.cloud.apigee.v1.OrganizationsDevelopersAppsServer.DeleteOrganizationsDevelopersApp:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1DeveloperApp
	77,  // 812: google.cloud.apigee.v1.OrganizationsDevelopersAppsServer.GenerateKeyPairOrUpdateDeveloperAppStatusOrganizationsDevelopersApp:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1DeveloperApp
	77,  // 813: google.cloud.apigee.v1.OrganizationsDevelopersAppsServer.GetOrganizationsDevelopersApp:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1DeveloperApp
	139, // 814: google.cloud.apigee.v1.OrganizationsDevelopersAppsServer.ListOrganizationsDevelopersApps:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1ListDeveloperAppsResponse
	77,  // 815: google.cloud.apigee.v1.OrganizationsDevelopersAppsServer.UpdateOrganizationsDevelopersApp:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1DeveloperApp
	36,  // 816: google.cloud.apigee.v1.OrganizationsDevelopersAppsAttributesServer.DeleteOrganizationsDevelopersAppsAttribute:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1Attribute
	36,  // 817: google.cloud.apigee.v1.OrganizationsDevelopersAppsAttributesServer.GetOrganizationsDevelopersAppsAttribute:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1Attribute
	37,  // 818: google.cloud.apigee.v1.OrganizationsDevelopersAppsAttributesServer.ListOrganizationsDevelopersAppsAttributes:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1Attributes
	36,  // 819: google.cloud.apigee.v1.OrganizationsDevelopersAppsAttributesServer.UpdateDeveloperAppAttributeOrganizationsDevelopersAppsAttribute:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1Attribute
	78,  // 820: google.cloud.apigee.v1.OrganizationsDevelopersAppsKeysServer.CreateOrganizationsDevelopersAppsKey:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1DeveloperAppKey
	78,  // 821: google.cloud.apigee.v1.OrganizationsDevelopersAppsKeysServer.DeleteOrganizationsDevelopersAppsKey:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1DeveloperAppKey
	78,  // 822: google.cloud.apigee.v1.OrganizationsDevelopersAppsKeysServer.GetOrganizationsDevelopersAppsKey:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1DeveloperAppKey
	78,  // 823: google.cloud.apigee.v1.OrganizationsDevelopersAppsKeysServer.ReplaceDeveloperAppKeyOrganizationsDevelopersAppsKey:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1DeveloperAppKey
	78,  // 824: google.cloud.apigee.v1.OrganizationsDevelopersAppsKeysServer.UpdateDeveloperAppKeyOrganizationsDevelopersAppsKey:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1DeveloperAppKey
	78,  // 825: google.cloud.apigee.v1.OrganizationsDevelopersAppsKeysApiproductsServer.DeleteOrganizationsDevelopersAppsKeysApiproduct:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1DeveloperAppKey
	287, // 826: google.cloud.apigee.v1.OrganizationsDevelopersAppsKeysApiproductsServer.UpdateDeveloperAppKeyApiProductOrganizationsDevelopersAppsKeysApiproduct:output_type -> google.cloud.apigee.v1.GoogleProtobufEmpty
	78,  // 827: google.cloud.apigee.v1.OrganizationsDevelopersAppsKeysCreateServer.CreateOrganizationsDevelopersAppsKeysCreate:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1DeveloperAppKey
	36,  // 828: google.cloud.apigee.v1.OrganizationsDevelopersAttributesServer.DeleteOrganizationsDevelopersAttribute:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1Attribute
	36,  // 829: google.cloud.apigee.v1.OrganizationsDevelopersAttributesServer.GetOrganizationsDevelopersAttribute:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1Attribute
	37,  // 830: google.cloud.apigee.v1.OrganizationsDevelopersAttributesServer.ListOrganizationsDevelopersAttributes:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1Attributes
	36,  // 831: google.cloud.apigee.v1.OrganizationsDevelopersAttributesServer.UpdateDeveloperAttributeOrganizationsDevelopersAttribute:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1Attribute
	79,  // 832: google.cloud.apigee.v1.OrganizationsDevelopersBalanceServer.AdjustOrganizationsDevelopersBalance:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1DeveloperBalance
	79,  // 833: google.cloud.apigee.v1.OrganizationsDevelopersBalanceServer.CreditOrganizationsDevelopersBalance:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1DeveloperBalance
	82,  // 834: google.cloud.apigee.v1.OrganizationsDevelopersSubscriptionsServer.CreateOrganizationsDevelopersSubscription:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1DeveloperSubscription
	82,  // 835: google.cloud.apigee.v1.OrganizationsDevelopersSubscriptionsServer.ExpireOrganizationsDevelopersSubscription:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1DeveloperSubscription
	82,  // 836: google.cloud.apigee.v1.OrganizationsDevelopersSubscriptionsServer.GetOrganizationsDevelopersSubscription:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1DeveloperSubscription
	140, // 837: google.cloud.apigee.v1.OrganizationsDevelopersSubscriptionsServer.ListOrganizationsDevelopersSubscriptions:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1ListDeveloperSubscriptionsResponse
	619, // 838: google.cloud.apigee.v1.OrganizationsEndpointAttachmentsServer.CreateOrganizationsEndpointAttachment:output_type -> google.longrunning.Operation
	619, // 839: google.cloud.apigee.v1.OrganizationsEndpointAttachmentsServer.DeleteOrganizationsEndpointAttachment:output_type -> google.longrunning.Operation
	87,  // 840: google.cloud.apigee.v1.OrganizationsEndpointAttachmentsServer.GetOrganizationsEndpointAttachment:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1EndpointAttachment
	141, // 841: google.cloud.apigee.v1.OrganizationsEndpointAttachmentsServer.ListOrganizationsEndpointAttachments:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1ListEndpointAttachmentsResponse
	619, // 842: google.cloud.apigee.v1.OrganizationsEnvgroupsServer.CreateOrganizationsEnvgroup:output_type -> google.longrunning.Operation
	619, // 843: google.cloud.apigee.v1.OrganizationsEnvgroupsServer.DeleteOrganizationsEnvgroup:output_type -> google.longrunning.Operation
	92,  // 844: google.cloud.apigee.v1.OrganizationsEnvgroupsServer.GetOrganizationsEnvgroup:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1EnvironmentGroup
	94,  // 845: google.cloud.apigee.v1.OrganizationsEnvgroupsServer.GetDeployedIngressConfigOrganizationsEnvgroup:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1EnvironmentGroupConfig
	143, // 846: google.cloud.apigee.v1.OrganizationsEnvgroupsServer.ListOrganizationsEnvgroups:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1ListEnvironmentGroupsResponse
	619, // 847: google.cloud.apigee.v1.OrganizationsEnvgroupsServer.PatchOrganizationsEnvgroup:output_type -> google.longrunning.Operation
	619, // 848: google.cloud.apigee.v1.OrganizationsEnvgroupsAttachmentsServer.CreateOrganizationsEnvgroupsAttachment:output_type -> google.longrunning.Operation
	619, // 849: google.cloud.apigee.v1.OrganizationsEnvgroupsAttachmentsServer.DeleteOrganizationsEnvgroupsAttachment:output_type -> google.longrunning.Operation
	93,  // 850: google.cloud.apigee.v1.OrganizationsEnvgroupsAttachmentsServer.GetOrganizationsEnvgroupsAttachment:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1EnvironmentGroupAttachment
	142, // 851: google.cloud.apigee.v1.OrganizationsEnvgroupsAttachmentsServer.ListOrganizationsEnvgroupsAttachments:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1ListEnvironmentGroupAttachmentsResponse
	619, // 852: google.cloud.apigee.v1.OrganizationsEnvironmentsServer.CreateOrganizationsEnvironment:output_type -> google.longrunning.Operation
	619, // 853: google.cloud.apigee.v1.OrganizationsEnvironmentsServer.DeleteOrganizationsEnvironment:output_type -> google.longrunning.Operation
	90,  // 854: google.cloud.apigee.v1.OrganizationsEnvironmentsServer.GetOrganizationsEnvironment:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1Environment
	10,  // 855: google.cloud.apigee.v1.OrganizationsEnvironmentsServer.GetAddonsConfigOrganizationsEnvironment:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1AddonsConfig
	27,  // 856: google.cloud.apigee.v1.OrganizationsEnvironmentsServer.GetApiSecurityRuntimeConfigOrganizationsEnvironment:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1ApiSecurityRuntimeConfig
	64,  // 857: google.cloud.apigee.v1.OrganizationsEnvironmentsServer.GetDebugmaskOrganizationsEnvironment:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1DebugMask
	91,  // 858: google.cloud.apigee.v1.OrganizationsEnvironmentsServer.GetDeployedConfigOrganizationsEnvironment:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1EnvironmentConfig
	236, // 859: google.cloud.apigee.v1.OrganizationsEnvironmentsServer.GetSecurityActionsConfigOrganizationsEnvironment:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityActionsConfig
	272, // 860: google.cloud.apigee.v1.OrganizationsEnvironmentsServer.GetTraceConfigOrganizationsEnvironment:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1TraceConfig
	619, // 861: google.cloud.apigee.v1.OrganizationsEnvironmentsServer.ModifyEnvironmentOrganizationsEnvironment:output_type -> google.longrunning.Operation
	264, // 862: google.cloud.apigee.v1.OrganizationsEnvironmentsServer.SubscribeOrganizationsEnvironment:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1Subscription
	287, // 863: google.cloud.apigee.v1.OrganizationsEnvironmentsServer.UnsubscribeOrganizationsEnvironment:output_type -> google.cloud.apigee.v1.GoogleProtobufEmpty
	90,  // 864: google.cloud.apigee.v1.OrganizationsEnvironmentsServer.UpdateOrganizationsEnvironment:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1Environment
	64,  // 865: google.cloud.apigee.v1.OrganizationsEnvironmentsServer.UpdateDebugmaskOrganizationsEnvironment:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1DebugMask
	90,  // 866: google.cloud.apigee.v1.OrganizationsEnvironmentsServer.UpdateEnvironmentOrganizationsEnvironment:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1Environment
	236, // 867: google.cloud.apigee.v1.OrganizationsEnvironmentsServer.UpdateSecurityActionsConfigOrganizationsEnvironment:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityActionsConfig
	272, // 868: google.cloud.apigee.v1.OrganizationsEnvironmentsServer.UpdateTraceConfigOrganizationsEnvironment:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1TraceConfig
	619, // 869: google.cloud.apigee.v1.OrganizationsEnvironmentsAddonsConfigServer.SetAddonEnablementOrganizationsEnvironmentsAddonsConfig:output_type -> google.longrunning.Operation
	222, // 870: google.cloud.apigee.v1.OrganizationsEnvironmentsAnalyticsAdminServer.GetSchemav2OrganizationsEnvironmentsAnalyticsAdmin:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1Schema
	96,  // 871: google.cloud.apigee.v1.OrganizationsEnvironmentsAnalyticsExportsServer.CreateOrganizationsEnvironmentsAnalyticsExport:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1Export
	96,  // 872: google.cloud.apigee.v1.OrganizationsEnvironmentsAnalyticsExportsServer.GetOrganizationsEnvironmentsAnalyticsExport:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1Export
	145, // 873: google.cloud.apigee.v1.OrganizationsEnvironmentsAnalyticsExportsServer.ListOrganizationsEnvironmentsAnalyticsExports:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1ListExportsResponse
	138, // 874: google.cloud.apigee.v1.OrganizationsEnvironmentsApisDeploymentsServer.ListOrganizationsEnvironmentsApisDeployments:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1ListDeploymentsResponse
	69,  // 875: google.cloud.apigee.v1.OrganizationsEnvironmentsApisRevisionsServer.DeployOrganizationsEnvironmentsApisRevision:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1Deployment
	69,  // 876: google.cloud.apigee.v1.OrganizationsEnvironmentsApisRevisionsServer.GetDeploymentsOrganizationsEnvironmentsApisRevision:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1Deployment
	287, // 877: google.cloud.apigee.v1.OrganizationsEnvironmentsApisRevisionsServer.UndeployOrganizationsEnvironmentsApisRevision:output_type -> google.cloud.apigee.v1.GoogleProtobufEmpty
	65,  // 878: google.cloud.apigee.v1.OrganizationsEnvironmentsApisRevisionsDebugsessionsServer.CreateOrganizationsEnvironmentsApisRevisionsDebugsession:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1DebugSession
	287, // 879: google.cloud.apigee.v1.OrganizationsEnvironmentsApisRevisionsDebugsessionsServer.DeleteDataOrganizationsEnvironmentsApisRevisionsDebugsession:output_type -> google.cloud.apigee.v1.GoogleProtobufEmpty
	65,  // 880: google.cloud.apigee.v1.OrganizationsEnvironmentsApisRevisionsDebugsessionsServer.GetOrganizationsEnvironmentsApisRevisionsDebugsession:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1DebugSession
	137, // 881: google.cloud.apigee.v1.OrganizationsEnvironmentsApisRevisionsDebugsessionsServer.ListOrganizationsEnvironmentsApisRevisionsDebugsessions:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1ListDebugSessionsResponse
	66,  // 882: google.cloud.apigee.v1.OrganizationsEnvironmentsApisRevisionsDebugsessionsDataServer.GetOrganizationsEnvironmentsApisRevisionsDebugsessionsData:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1DebugSessionTransaction
	70,  // 883: google.cloud.apigee.v1.OrganizationsEnvironmentsApisRevisionsDeploymentsServer.GenerateDeployChangeReportOrganizationsEnvironmentsApisRevisionsDeployment:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1DeploymentChangeReport
	70,  // 884: google.cloud.apigee.v1.OrganizationsEnvironmentsApisRevisionsDeploymentsServer.GenerateUndeployChangeReportOrganizationsEnvironmentsApisRevisionsDeployment:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1DeploymentChangeReport
	619, // 885: google.cloud.apigee.v1.OrganizationsEnvironmentsArchiveDeploymentsServer.CreateOrganizationsEnvironmentsArchiveDeployment:output_type -> google.longrunning.Operation
	287, // 886: google.cloud.apigee.v1.OrganizationsEnvironmentsArchiveDeploymentsServer.DeleteOrganizationsEnvironmentsArchiveDeployment:output_type -> google.cloud.apigee.v1.GoogleProtobufEmpty
	101, // 887: google.cloud.apigee.v1.OrganizationsEnvironmentsArchiveDeploymentsServer.GenerateDownloadUrlOrganizationsEnvironmentsArchiveDeployment:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1GenerateDownloadUrlResponse
	103, // 888: google.cloud.apigee.v1.OrganizationsEnvironmentsArchiveDeploymentsServer.GenerateUploadUrlOrganizationsEnvironmentsArchiveDeployment:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1GenerateUploadUrlResponse
	32,  // 889: google.cloud.apigee.v1.OrganizationsEnvironmentsArchiveDeploymentsServer.GetOrganizationsEnvironmentsArchiveDeployment:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1ArchiveDeployment
	132, // 890: google.cloud.apigee.v1.OrganizationsEnvironmentsArchiveDeploymentsServer.ListOrganizationsEnvironmentsArchiveDeployments:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1ListArchiveDeploymentsResponse
	32,  // 891: google.cloud.apigee.v1.OrganizationsEnvironmentsArchiveDeploymentsServer.PatchOrganizationsEnvironmentsArchiveDeployment:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1ArchiveDeployment
	287, // 892: google.cloud.apigee.v1.OrganizationsEnvironmentsCachesServer.DeleteOrganizationsEnvironmentsCache:output_type -> google.cloud.apigee.v1.GoogleProtobufEmpty
	138, // 893: google.cloud.apigee.v1.OrganizationsEnvironmentsDeploymentsServer.ListOrganizationsEnvironmentsDeployments:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1ListDeploymentsResponse
	98,  // 894: google.cloud.apigee.v1.OrganizationsEnvironmentsFlowhooksServer.AttachSharedFlowToFlowHookOrganizationsEnvironmentsFlowhook:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1FlowHook
	98,  // 895: google.cloud.apigee.v1.OrganizationsEnvironmentsFlowhooksServer.DetachSharedFlowFromFlowHookOrganizationsEnvironmentsFlowhook:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1FlowHook
	98,  // 896: google.cloud.apigee.v1.OrganizationsEnvironmentsFlowhooksServer.GetOrganizationsEnvironmentsFlowhook:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1FlowHook
	123, // 897: google.cloud.apigee.v1.OrganizationsEnvironmentsKeystoresServer.CreateOrganizationsEnvironmentsKeystore:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1Keystore
	123, // 898: google.cloud.apigee.v1.OrganizationsEnvironmentsKeystoresServer.DeleteOrganizationsEnvironmentsKeystore:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1Keystore
	123, // 899: google.cloud.apigee.v1.OrganizationsEnvironmentsKeystoresServer.GetOrganizationsEnvironmentsKeystore:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1Keystore
	13,  // 900: google.cloud.apigee.v1.OrganizationsEnvironmentsKeystoresAliasesServer.CreateOrganizationsEnvironmentsKeystoresAliase:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1Alias
	2,   // 901: google.cloud.apigee.v1.OrganizationsEnvironmentsKeystoresAliasesServer.CsrOrganizationsEnvironmentsKeystoresAliase:output_type -> google.cloud.apigee.v1.GoogleApiHttpBody
	13,  // 902: google.cloud.apigee.v1.OrganizationsEnvironmentsKeystoresAliasesServer.DeleteOrganizationsEnvironmentsKeystoresAliase:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1Alias
	13,  // 903: google.cloud.apigee.v1.OrganizationsEnvironmentsKeystoresAliasesServer.GetOrganizationsEnvironmentsKeystoresAliase:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1Alias
	2,   // 904: google.cloud.apigee.v1.OrganizationsEnvironmentsKeystoresAliasesServer.GetCertificateOrganizationsEnvironmentsKeystoresAliase:output_type -> google.cloud.apigee.v1.GoogleApiHttpBody
	13,  // 905: google.cloud.apigee.v1.OrganizationsEnvironmentsKeystoresAliasesServer.UpdateOrganizationsEnvironmentsKeystoresAliase:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1Alias
	122, // 906: google.cloud.apigee.v1.OrganizationsEnvironmentsKeyvaluemapsServer.CreateOrganizationsEnvironmentsKeyvaluemap:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1KeyValueMap
	122, // 907: google.cloud.apigee.v1.OrganizationsEnvironmentsKeyvaluemapsServer.DeleteOrganizationsEnvironmentsKeyvaluemap:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1KeyValueMap
	121, // 908: google.cloud.apigee.v1.OrganizationsEnvironmentsKeyvaluemapsEntriesServer.CreateOrganizationsEnvironmentsKeyvaluemapsEntry:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1KeyValueEntry
	121, // 909: google.cloud.apigee.v1.OrganizationsEnvironmentsKeyvaluemapsEntriesServer.DeleteOrganizationsEnvironmentsKeyvaluemapsEntry:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1KeyValueEntry
	121, // 910: google.cloud.apigee.v1.OrganizationsEnvironmentsKeyvaluemapsEntriesServer.GetOrganizationsEnvironmentsKeyvaluemapsEntry:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1KeyValueEntry
	149, // 911: google.cloud.apigee.v1.OrganizationsEnvironmentsKeyvaluemapsEntriesServer.ListOrganizationsEnvironmentsKeyvaluemapsEntries:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1ListKeyValueEntriesResponse
	121, // 912: google.cloud.apigee.v1.OrganizationsEnvironmentsKeyvaluemapsEntriesServer.UpdateOrganizationsEnvironmentsKeyvaluemapsEntry:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1KeyValueEntry
	173, // 913: google.cloud.apigee.v1.OrganizationsEnvironmentsOptimizedStatsServer.GetOrganizationsEnvironmentsOptimizedStat:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1OptimizedStats
	33,  // 914: google.cloud.apigee.v1.OrganizationsEnvironmentsQueriesServer.CreateOrganizationsEnvironmentsQuery:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1AsyncQuery
	33,  // 915: google.cloud.apigee.v1.OrganizationsEnvironmentsQueriesServer.GetOrganizationsEnvironmentsQuery:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1AsyncQuery
	2,   // 916: google.cloud.apigee.v1.OrganizationsEnvironmentsQueriesServer.GetResultOrganizationsEnvironmentsQuery:output_type -> google.cloud.apigee.v1.GoogleApiHttpBody
	104, // 917: google.cloud.apigee.v1.OrganizationsEnvironmentsQueriesServer.GetResulturlOrganizationsEnvironmentsQuery:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1GetAsyncQueryResultUrlResponse
	133, // 918: google.cloud.apigee.v1.OrganizationsEnvironmentsQueriesServer.ListOrganizationsEnvironmentsQueries:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1ListAsyncQueriesResponse
	202, // 919: google.cloud.apigee.v1.OrganizationsEnvironmentsReferencesServer.CreateOrganizationsEnvironmentsReference:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1Reference
	202, // 920: google.cloud.apigee.v1.OrganizationsEnvironmentsReferencesServer.DeleteOrganizationsEnvironmentsReference:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1Reference
	202, // 921: google.cloud.apigee.v1.OrganizationsEnvironmentsReferencesServer.GetOrganizationsEnvironmentsReference:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1Reference
	202, // 922: google.cloud.apigee.v1.OrganizationsEnvironmentsReferencesServer.UpdateOrganizationsEnvironmentsReference:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1Reference
	208, // 923: google.cloud.apigee.v1.OrganizationsEnvironmentsResourcefilesServer.CreateOrganizationsEnvironmentsResourcefile:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1ResourceFile
	208, // 924: google.cloud.apigee.v1.OrganizationsEnvironmentsResourcefilesServer.DeleteOrganizationsEnvironmentsResourcefile:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1ResourceFile
	2,   // 925: google.cloud.apigee.v1.OrganizationsEnvironmentsResourcefilesServer.GetOrganizationsEnvironmentsResourcefile:output_type -> google.cloud.apigee.v1.GoogleApiHttpBody
	144, // 926: google.cloud.apigee.v1.OrganizationsEnvironmentsResourcefilesServer.ListOrganizationsEnvironmentsResourcefiles:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1ListEnvironmentResourcesResponse
	144, // 927: google.cloud.apigee.v1.OrganizationsEnvironmentsResourcefilesServer.ListEnvironmentResourcesOrganizationsEnvironmentsResourcefile:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1ListEnvironmentResourcesResponse
	208, // 928: google.cloud.apigee.v1.OrganizationsEnvironmentsResourcefilesServer.UpdateOrganizationsEnvironmentsResourcefile:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1ResourceFile
	230, // 929: google.cloud.apigee.v1.OrganizationsEnvironmentsSecurityActionsServer.CreateOrganizationsEnvironmentsSecurityAction:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityAction
	230, // 930: google.cloud.apigee.v1.OrganizationsEnvironmentsSecurityActionsServer.DisableOrganizationsEnvironmentsSecurityAction:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityAction
	230, // 931: google.cloud.apigee.v1.OrganizationsEnvironmentsSecurityActionsServer.EnableOrganizationsEnvironmentsSecurityAction:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityAction
	230, // 932: google.cloud.apigee.v1.OrganizationsEnvironmentsSecurityActionsServer.GetOrganizationsEnvironmentsSecurityAction:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityAction
	154, // 933: google.cloud.apigee.v1.OrganizationsEnvironmentsSecurityActionsServer.ListOrganizationsEnvironmentsSecurityActions:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1ListSecurityActionsResponse
	44,  // 934: google.cloud.apigee.v1.OrganizationsEnvironmentsSecurityIncidentsServer.BatchUpdateOrganizationsEnvironmentsSecurityIncident:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1BatchUpdateSecurityIncidentsResponse
	243, // 935: google.cloud.apigee.v1.OrganizationsEnvironmentsSecurityIncidentsServer.GetOrganizationsEnvironmentsSecurityIncident:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityIncident
	155, // 936: google.cloud.apigee.v1.OrganizationsEnvironmentsSecurityIncidentsServer.ListOrganizationsEnvironmentsSecurityIncidents:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1ListSecurityIncidentsResponse
	243, // 937: google.cloud.apigee.v1.OrganizationsEnvironmentsSecurityIncidentsServer.PatchOrganizationsEnvironmentsSecurityIncident:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityIncident
	248, // 938: google.cloud.apigee.v1.OrganizationsEnvironmentsSecurityReportsServer.CreateOrganizationsEnvironmentsSecurityReport:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityReport
	248, // 939: google.cloud.apigee.v1.OrganizationsEnvironmentsSecurityReportsServer.GetOrganizationsEnvironmentsSecurityReport:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityReport
	2,   // 940: google.cloud.apigee.v1.OrganizationsEnvironmentsSecurityReportsServer.GetResultOrganizationsEnvironmentsSecurityReport:output_type -> google.cloud.apigee.v1.GoogleApiHttpBody
	253, // 941: google.cloud.apigee.v1.OrganizationsEnvironmentsSecurityReportsServer.GetResultViewOrganizationsEnvironmentsSecurityReport:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityReportResultView
	158, // 942: google.cloud.apigee.v1.OrganizationsEnvironmentsSecurityReportsServer.ListOrganizationsEnvironmentsSecurityReports:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1ListSecurityReportsResponse
	195, // 943: google.cloud.apigee.v1.OrganizationsEnvironmentsSecurityStatsServer.QueryTabularStatsOrganizationsEnvironmentsSecurityStat:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1QueryTabularStatsResponse
	197, // 944: google.cloud.apigee.v1.OrganizationsEnvironmentsSecurityStatsServer.QueryTimeSeriesStatsOrganizationsEnvironmentsSecurityStat:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1QueryTimeSeriesStatsResponse
	138, // 945: google.cloud.apigee.v1.OrganizationsEnvironmentsSharedflowsDeploymentsServer.ListOrganizationsEnvironmentsSharedflowsDeployments:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1ListDeploymentsResponse
	69,  // 946: google.cloud.apigee.v1.OrganizationsEnvironmentsSharedflowsRevisionsServer.DeployOrganizationsEnvironmentsSharedflowsRevision:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1Deployment
	69,  // 947: google.cloud.apigee.v1.OrganizationsEnvironmentsSharedflowsRevisionsServer.GetDeploymentsOrganizationsEnvironmentsSharedflowsRevision:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1Deployment
	287, // 948: google.cloud.apigee.v1.OrganizationsEnvironmentsSharedflowsRevisionsServer.UndeployOrganizationsEnvironmentsSharedflowsRevision:output_type -> google.cloud.apigee.v1.GoogleProtobufEmpty
	261, // 949: google.cloud.apigee.v1.OrganizationsEnvironmentsStatsServer.GetOrganizationsEnvironmentsStat:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1Stats
	266, // 950: google.cloud.apigee.v1.OrganizationsEnvironmentsTargetserversServer.CreateOrganizationsEnvironmentsTargetserver:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1TargetServer
	266, // 951: google.cloud.apigee.v1.OrganizationsEnvironmentsTargetserversServer.DeleteOrganizationsEnvironmentsTargetserver:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1TargetServer
	266, // 952: google.cloud.apigee.v1.OrganizationsEnvironmentsTargetserversServer.GetOrganizationsEnvironmentsTargetserver:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1TargetServer
	266, // 953: google.cloud.apigee.v1.OrganizationsEnvironmentsTargetserversServer.UpdateOrganizationsEnvironmentsTargetserver:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1TargetServer
	273, // 954: google.cloud.apigee.v1.OrganizationsEnvironmentsTraceConfigOverridesServer.CreateOrganizationsEnvironmentsTraceConfigOverride:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1TraceConfigOverride
	287, // 955: google.cloud.apigee.v1.OrganizationsEnvironmentsTraceConfigOverridesServer.DeleteOrganizationsEnvironmentsTraceConfigOverride:output_type -> google.cloud.apigee.v1.GoogleProtobufEmpty
	273, // 956: google.cloud.apigee.v1.OrganizationsEnvironmentsTraceConfigOverridesServer.GetOrganizationsEnvironmentsTraceConfigOverride:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1TraceConfigOverride
	160, // 957: google.cloud.apigee.v1.OrganizationsEnvironmentsTraceConfigOverridesServer.ListOrganizationsEnvironmentsTraceConfigOverrides:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1ListTraceConfigOverridesResponse
	273, // 958: google.cloud.apigee.v1.OrganizationsEnvironmentsTraceConfigOverridesServer.PatchOrganizationsEnvironmentsTraceConfigOverride:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1TraceConfigOverride
	33,  // 959: google.cloud.apigee.v1.OrganizationsHostQueriesServer.CreateOrganizationsHostQuery:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1AsyncQuery
	33,  // 960: google.cloud.apigee.v1.OrganizationsHostQueriesServer.GetOrganizationsHostQuery:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1AsyncQuery
	2,   // 961: google.cloud.apigee.v1.OrganizationsHostQueriesServer.GetResultOrganizationsHostQuery:output_type -> google.cloud.apigee.v1.GoogleApiHttpBody
	35,  // 962: google.cloud.apigee.v1.OrganizationsHostQueriesServer.GetResultViewOrganizationsHostQuery:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1AsyncQueryResultView
	133, // 963: google.cloud.apigee.v1.OrganizationsHostQueriesServer.ListOrganizationsHostQueries:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1ListAsyncQueriesResponse
	248, // 964: google.cloud.apigee.v1.OrganizationsHostSecurityReportsServer.CreateOrganizationsHostSecurityReport:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityReport
	248, // 965: google.cloud.apigee.v1.OrganizationsHostSecurityReportsServer.GetOrganizationsHostSecurityReport:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityReport
	2,   // 966: google.cloud.apigee.v1.OrganizationsHostSecurityReportsServer.GetResultOrganizationsHostSecurityReport:output_type -> google.cloud.apigee.v1.GoogleApiHttpBody
	253, // 967: google.cloud.apigee.v1.OrganizationsHostSecurityReportsServer.GetResultViewOrganizationsHostSecurityReport:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityReportResultView
	158, // 968: google.cloud.apigee.v1.OrganizationsHostSecurityReportsServer.ListOrganizationsHostSecurityReports:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1ListSecurityReportsResponse
	261, // 969: google.cloud.apigee.v1.OrganizationsHostStatsServer.GetOrganizationsHostStat:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1Stats
	619, // 970: google.cloud.apigee.v1.OrganizationsInstancesServer.CreateOrganizationsInstance:output_type -> google.longrunning.Operation
	619, // 971: google.cloud.apigee.v1.OrganizationsInstancesServer.DeleteOrganizationsInstance:output_type -> google.longrunning.Operation
	114, // 972: google.cloud.apigee.v1.OrganizationsInstancesServer.GetOrganizationsInstance:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1Instance
	148, // 973: google.cloud.apigee.v1.OrganizationsInstancesServer.ListOrganizationsInstances:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1ListInstancesResponse
	619, // 974: google.cloud.apigee.v1.OrganizationsInstancesServer.PatchOrganizationsInstance:output_type -> google.longrunning.Operation
	205, // 975: google.cloud.apigee.v1.OrganizationsInstancesServer.ReportStatusOrganizationsInstance:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1ReportInstanceStatusResponse
	619, // 976: google.cloud.apigee.v1.OrganizationsInstancesAttachmentsServer.CreateOrganizationsInstancesAttachment:output_type -> google.longrunning.Operation
	619, // 977: google.cloud.apigee.v1.OrganizationsInstancesAttachmentsServer.DeleteOrganizationsInstancesAttachment:output_type -> google.longrunning.Operation
	115, // 978: google.cloud.apigee.v1.OrganizationsInstancesAttachmentsServer.GetOrganizationsInstancesAttachment:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1InstanceAttachment
	147, // 979: google.cloud.apigee.v1.OrganizationsInstancesAttachmentsServer.ListOrganizationsInstancesAttachments:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1ListInstanceAttachmentsResponse
	619, // 980: google.cloud.apigee.v1.OrganizationsInstancesCanaryevaluationsServer.CreateOrganizationsInstancesCanaryevaluation:output_type -> google.longrunning.Operation
	45,  // 981: google.cloud.apigee.v1.OrganizationsInstancesCanaryevaluationsServer.GetOrganizationsInstancesCanaryevaluation:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1CanaryEvaluation
	619, // 982: google.cloud.apigee.v1.OrganizationsInstancesNatAddressesServer.ActivateOrganizationsInstancesNatAddresse:output_type -> google.longrunning.Operation
	619, // 983: google.cloud.apigee.v1.OrganizationsInstancesNatAddressesServer.CreateOrganizationsInstancesNatAddresse:output_type -> google.longrunning.Operation
	619, // 984: google.cloud.apigee.v1.OrganizationsInstancesNatAddressesServer.DeleteOrganizationsInstancesNatAddresse:output_type -> google.longrunning.Operation
	165, // 985: google.cloud.apigee.v1.OrganizationsInstancesNatAddressesServer.GetOrganizationsInstancesNatAddresse:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1NatAddress
	150, // 986: google.cloud.apigee.v1.OrganizationsInstancesNatAddressesServer.ListOrganizationsInstancesNatAddresses:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1ListNatAddressesResponse
	122, // 987: google.cloud.apigee.v1.OrganizationsKeyvaluemapsServer.CreateOrganizationsKeyvaluemap:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1KeyValueMap
	122, // 988: google.cloud.apigee.v1.OrganizationsKeyvaluemapsServer.DeleteOrganizationsKeyvaluemap:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1KeyValueMap
	121, // 989: google.cloud.apigee.v1.OrganizationsKeyvaluemapsEntriesServer.CreateOrganizationsKeyvaluemapsEntry:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1KeyValueEntry
	121, // 990: google.cloud.apigee.v1.OrganizationsKeyvaluemapsEntriesServer.DeleteOrganizationsKeyvaluemapsEntry:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1KeyValueEntry
	121, // 991: google.cloud.apigee.v1.OrganizationsKeyvaluemapsEntriesServer.GetOrganizationsKeyvaluemapsEntry:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1KeyValueEntry
	149, // 992: google.cloud.apigee.v1.OrganizationsKeyvaluemapsEntriesServer.ListOrganizationsKeyvaluemapsEntries:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1ListKeyValueEntriesResponse
	121, // 993: google.cloud.apigee.v1.OrganizationsKeyvaluemapsEntriesServer.UpdateOrganizationsKeyvaluemapsEntry:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1KeyValueEntry
	173, // 994: google.cloud.apigee.v1.OrganizationsOptimizedHostStatsServer.GetOrganizationsOptimizedHostStat:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1OptimizedStats
	57,  // 995: google.cloud.apigee.v1.OrganizationsReportsServer.CreateOrganizationsReport:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1CustomReport
	67,  // 996: google.cloud.apigee.v1.OrganizationsReportsServer.DeleteOrganizationsReport:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1DeleteCustomReportResponse
	57,  // 997: google.cloud.apigee.v1.OrganizationsReportsServer.GetOrganizationsReport:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1CustomReport
	134, // 998: google.cloud.apigee.v1.OrganizationsReportsServer.ListOrganizationsReports:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1ListCustomReportsResponse
	57,  // 999: google.cloud.apigee.v1.OrganizationsReportsServer.UpdateOrganizationsReport:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1CustomReport
	42,  // 1000: google.cloud.apigee.v1.OrganizationsSecurityAssessmentResultsServer.BatchComputeOrganizationsSecurityAssessmentResult:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsResponse
	244, // 1001: google.cloud.apigee.v1.OrganizationsSecurityProfilesServer.CreateOrganizationsSecurityProfile:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityProfile
	287, // 1002: google.cloud.apigee.v1.OrganizationsSecurityProfilesServer.DeleteOrganizationsSecurityProfile:output_type -> google.cloud.apigee.v1.GoogleProtobufEmpty
	244, // 1003: google.cloud.apigee.v1.OrganizationsSecurityProfilesServer.GetOrganizationsSecurityProfile:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityProfile
	157, // 1004: google.cloud.apigee.v1.OrganizationsSecurityProfilesServer.ListOrganizationsSecurityProfiles:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1ListSecurityProfilesResponse
	156, // 1005: google.cloud.apigee.v1.OrganizationsSecurityProfilesServer.ListRevisionsOrganizationsSecurityProfile:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1ListSecurityProfileRevisionsResponse
	244, // 1006: google.cloud.apigee.v1.OrganizationsSecurityProfilesServer.PatchOrganizationsSecurityProfile:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityProfile
	52,  // 1007: google.cloud.apigee.v1.OrganizationsSecurityProfilesEnvironmentsServer.ComputeEnvironmentScoresOrganizationsSecurityProfilesEnvironment:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1ComputeEnvironmentScoresResponse
	246, // 1008: google.cloud.apigee.v1.OrganizationsSecurityProfilesEnvironmentsServer.CreateOrganizationsSecurityProfilesEnvironment:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1SecurityProfileEnvironmentAssociation
	287, // 1009: google.cloud.apigee.v1.OrganizationsSecurityProfilesEnvironmentsServer.DeleteOrganizationsSecurityProfilesEnvironment:output_type -> google.cloud.apigee.v1.GoogleProtobufEmpty
	260, // 1010: google.cloud.apigee.v1.OrganizationsSharedflowsServer.CreateOrganizationsSharedflow:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1SharedFlowRevision
	259, // 1011: google.cloud.apigee.v1.OrganizationsSharedflowsServer.DeleteOrganizationsSharedflow:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1SharedFlow
	259, // 1012: google.cloud.apigee.v1.OrganizationsSharedflowsServer.GetOrganizationsSharedflow:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1SharedFlow
	159, // 1013: google.cloud.apigee.v1.OrganizationsSharedflowsServer.ListOrganizationsSharedflows:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1ListSharedFlowsResponse
	138, // 1014: google.cloud.apigee.v1.OrganizationsSharedflowsDeploymentsServer.ListOrganizationsSharedflowsDeployments:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1ListDeploymentsResponse
	260, // 1015: google.cloud.apigee.v1.OrganizationsSharedflowsRevisionsServer.DeleteOrganizationsSharedflowsRevision:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1SharedFlowRevision
	2,   // 1016: google.cloud.apigee.v1.OrganizationsSharedflowsRevisionsServer.GetOrganizationsSharedflowsRevision:output_type -> google.cloud.apigee.v1.GoogleApiHttpBody
	260, // 1017: google.cloud.apigee.v1.OrganizationsSharedflowsRevisionsServer.UpdateSharedFlowRevisionOrganizationsSharedflowsRevision:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1SharedFlowRevision
	138, // 1018: google.cloud.apigee.v1.OrganizationsSharedflowsRevisionsDeploymentsServer.ListOrganizationsSharedflowsRevisionsDeployments:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1ListDeploymentsResponse
	17,  // 1019: google.cloud.apigee.v1.OrganizationsSitesApicategoriesServer.CreateOrganizationsSitesApicategory:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1ApiCategoryResponse
	68,  // 1020: google.cloud.apigee.v1.OrganizationsSitesApicategoriesServer.DeleteOrganizationsSitesApicategory:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1DeleteResponse
	17,  // 1021: google.cloud.apigee.v1.OrganizationsSitesApicategoriesServer.GetOrganizationsSitesApicategory:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1ApiCategoryResponse
	125, // 1022: google.cloud.apigee.v1.OrganizationsSitesApicategoriesServer.ListOrganizationsSitesApicategories:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1ListApiCategoriesResponse
	17,  // 1023: google.cloud.apigee.v1.OrganizationsSitesApicategoriesServer.PatchOrganizationsSitesApicategory:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1ApiCategoryResponse
	21,  // 1024: google.cloud.apigee.v1.OrganizationsSitesApidocsServer.CreateOrganizationsSitesApidoc:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1ApiDocResponse
	68,  // 1025: google.cloud.apigee.v1.OrganizationsSitesApidocsServer.DeleteOrganizationsSitesApidoc:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1DeleteResponse
	21,  // 1026: google.cloud.apigee.v1.OrganizationsSitesApidocsServer.GetOrganizationsSitesApidoc:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1ApiDocResponse
	20,  // 1027: google.cloud.apigee.v1.OrganizationsSitesApidocsServer.GetDocumentationOrganizationsSitesApidoc:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1ApiDocDocumentationResponse
	126, // 1028: google.cloud.apigee.v1.OrganizationsSitesApidocsServer.ListOrganizationsSitesApidocs:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1ListApiDocsResponse
	21,  // 1029: google.cloud.apigee.v1.OrganizationsSitesApidocsServer.UpdateOrganizationsSitesApidoc:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1ApiDocResponse
	20,  // 1030: google.cloud.apigee.v1.OrganizationsSitesApidocsServer.UpdateDocumentationOrganizationsSitesApidoc:output_type -> google.cloud.apigee.v1.GoogleCloudApigeeV1ApiDocDocumentationResponse
	619, // 1031: google.cloud.apigee.v1.ProjectsServer.ProvisionOrganizationProject:output_type -> google.longrunning.Operation
	723, // [723:1032] is the sub-list for method output_type
	414, // [414:723] is the sub-list for method input_type
	414, // [414:414] is the sub-list for extension type_name
	414, // [414:414] is the sub-list for extension extendee
	0,   // [0:414] is the sub-list for field type_name
}

func init() { file_mockgcp_cloud_apigee_v1_service_proto_init() }
func file_mockgcp_cloud_apigee_v1_service_proto_init() {
	if File_mockgcp_cloud_apigee_v1_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EdgeConfigstoreBundleBadBundle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EdgeConfigstoreBundleBadBundleViolation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleApiHttpBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1APIProductAssociation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1Access); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1AccessGet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1AccessLoggingConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1AccessRemove); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1AccessSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1ActivateNatAddressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1AddonsConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1AdjustDeveloperBalanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1AdvancedApiOpsConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1Alias); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1AliasRevisionConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1AnalyticsConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1ApiCategory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1ApiCategoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1ApiDoc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1ApiDocDocumentation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1ApiDocDocumentationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1ApiDocResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1ApiProduct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1ApiProductRef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1ApiProxy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1ApiProxyRevision); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1ApiSecurityConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1ApiSecurityRuntimeConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1App); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1AppGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1AppGroupApp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1AppGroupAppKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1ArchiveDeployment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1AsyncQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1AsyncQueryResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1AsyncQueryResultView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1Attribute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1Attributes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsRequestIncludeAll); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsRequestResourceArray); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsRequestResourceArrayResource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1BatchUpdateSecurityIncidentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1BatchUpdateSecurityIncidentsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1CanaryEvaluation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1CanaryEvaluationMetricLabels); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1CertInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1Certificate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1CommonNameConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1ComputeEnvironmentScoresRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1ComputeEnvironmentScoresRequestFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1ComputeEnvironmentScoresResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1ConfigVersion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1ConnectorsPlatformConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1Credential); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1CreditDeveloperBalanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1CustomReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1CustomReportMetric); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1DataCollector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1DataCollectorConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1Datastore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1DatastoreConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1DateRange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1DebugMask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1DebugSession); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1DebugSessionTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1DeleteCustomReportResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1DeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1Deployment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1DeploymentChangeReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1DeploymentChangeReportRoutingChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1DeploymentChangeReportRoutingDeployment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1DeploymentConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1DeploymentGroupConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1Developer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1DeveloperApp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1DeveloperAppKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1DeveloperBalance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1DeveloperBalanceWallet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1DeveloperMonetizationConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1DeveloperSubscription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1DimensionMetric); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1DisableSecurityActionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1DocumentationFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1EnableSecurityActionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1EndpointAttachment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1EndpointChainingRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1EntityMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1Environment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1EnvironmentConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1EnvironmentGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1EnvironmentGroupAttachment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1EnvironmentGroupConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1ExpireDeveloperSubscriptionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1Export); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1ExportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1FlowHook); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1FlowHookConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1GenerateDownloadUrlRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1GenerateDownloadUrlResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1GenerateUploadUrlRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1GenerateUploadUrlResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1GetAsyncQueryResultUrlResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1GetAsyncQueryResultUrlResponseURLInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1GetSyncAuthorizationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1GraphQLOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1GraphQLOperationConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1GraphQLOperationGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1GraphqlDocumentation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1GrpcOperationConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1GrpcOperationGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1IngressConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1Instance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1InstanceAttachment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[116].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1InstanceDeploymentStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[117].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1InstanceDeploymentStatusDeployedRevision); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[118].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1InstanceDeploymentStatusDeployedRoute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[119].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1IntegrationConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[120].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1KeyAliasReference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[121].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1KeyValueEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[122].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1KeyValueMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[123].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1Keystore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[124].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1KeystoreConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[125].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1ListApiCategoriesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[126].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1ListApiDocsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[127].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1ListApiProductsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[128].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1ListApiProxiesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[129].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1ListAppGroupAppsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[130].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1ListAppGroupsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[131].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1ListAppsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[132].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1ListArchiveDeploymentsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[133].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1ListAsyncQueriesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[134].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1ListCustomReportsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[135].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1ListDataCollectorsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[136].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1ListDatastoresResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[137].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1ListDebugSessionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[138].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1ListDeploymentsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[139].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1ListDeveloperAppsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[140].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1ListDeveloperSubscriptionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[141].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1ListEndpointAttachmentsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[142].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1ListEnvironmentGroupAttachmentsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[143].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1ListEnvironmentGroupsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[144].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1ListEnvironmentResourcesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[145].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1ListExportsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[146].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1ListHybridIssuersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[147].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1ListInstanceAttachmentsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[148].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1ListInstancesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[149].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1ListKeyValueEntriesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[150].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1ListNatAddressesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[151].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1ListOfDevelopersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[152].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1ListOrganizationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[153].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1ListRatePlansResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[154].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1ListSecurityActionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[155].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1ListSecurityIncidentsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[156].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1ListSecurityProfileRevisionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[157].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1ListSecurityProfilesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[158].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1ListSecurityReportsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[159].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1ListSharedFlowsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[160].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1ListTraceConfigOverridesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[161].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1Metadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[162].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1Metric); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[163].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1MetricAggregation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[164].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1MonetizationConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[165].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1NatAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[166].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1NodeConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[167].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1OASDocumentation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[168].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1Operation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[169].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1OperationConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[170].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1OperationGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[171].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1OperationMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[172].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1OperationMetadataProgress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[173].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1OptimizedStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[174].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1OptimizedStatsNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[175].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1OptimizedStatsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[176].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1Organization); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[177].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1OrganizationProjectMapping); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[178].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1PodStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[179].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1Point); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[180].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1ProfileConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[181].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1ProfileConfigAbuse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[182].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1ProfileConfigAuthorization); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[183].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1ProfileConfigCORS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[184].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1ProfileConfigCategory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[185].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1ProfileConfigMTLS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[186].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1ProfileConfigMediation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[187].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1ProfileConfigThreat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[188].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1Properties); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[189].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1Property); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[190].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1ProvisionOrganizationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[191].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1Query); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[192].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1QueryMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[193].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1QueryMetric); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[194].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1QueryTabularStatsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[195].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1QueryTabularStatsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[196].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1QueryTimeSeriesStatsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[197].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1QueryTimeSeriesStatsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[198].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1QueryTimeSeriesStatsResponseSequence); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[199].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1Quota); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[200].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1RatePlan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[201].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1RateRange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[202].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1Reference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[203].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1ReferenceConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[204].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1ReportInstanceStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[205].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1ReportInstanceStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[206].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1ReportProperty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[207].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1ResourceConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[208].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1ResourceFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[209].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1ResourceFiles); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[210].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1ResourceStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[211].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[212].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1RevenueShareRange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[213].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1RevisionStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[214].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1RoutingRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[215].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1RuntimeAddonsConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[216].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1RuntimeAnalyticsConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[217].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1RuntimeApiSecurityConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[218].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1RuntimeConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[219].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1RuntimeTraceConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[220].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1RuntimeTraceConfigOverride); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[221].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1RuntimeTraceSamplingConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[222].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1Schema); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[223].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1SchemaSchemaElement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[224].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1SchemaSchemaProperty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[225].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1Score); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[226].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1ScoreComponent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[227].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1ScoreComponentRecommendation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[228].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1ScoreComponentRecommendationAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[229].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1ScoreComponentRecommendationActionActionContext); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[230].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1SecurityAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[231].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1SecurityActionAllow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[232].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1SecurityActionConditionConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[233].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1SecurityActionDeny); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[234].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1SecurityActionFlag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[235].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1SecurityActionHttpHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[236].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1SecurityActionsConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[237].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1SecurityAssessmentResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[238].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1SecurityAssessmentResultResource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[239].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1SecurityAssessmentResultScoringResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[240].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1SecurityAssessmentResultScoringResultAssessmentRecommendation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[241].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1SecurityAssessmentResultScoringResultAssessmentRecommendationRecommendation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[242].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1SecurityAssessmentResultScoringResultAssessmentRecommendationRecommendationLink); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[243].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1SecurityIncident); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[244].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1SecurityProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[245].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1SecurityProfileEnvironment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[246].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1SecurityProfileEnvironmentAssociation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[247].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1SecurityProfileScoringConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[248].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1SecurityReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[249].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1SecurityReportMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[250].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1SecurityReportQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[251].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1SecurityReportQueryMetric); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[252].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1SecurityReportResultMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[253].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1SecurityReportResultView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[254].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1SecuritySettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[255].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1ServiceIssuersMapping); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[256].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1Session); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[257].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1SetAddonEnablementRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[258].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1SetAddonsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[259].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1SharedFlow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[260].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1SharedFlowRevision); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[261].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1Stats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[262].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1StatsEnvironmentStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[263].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1StatsHostStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[264].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1Subscription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[265].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1SyncAuthorization); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[266].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1TargetServer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[267].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1TargetServerConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[268].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1TestDatastoreResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[269].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1TlsInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[270].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1TlsInfoCommonName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[271].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1TlsInfoConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[272].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1TraceConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[273].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1TraceConfigOverride); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[274].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1TraceSamplingConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[275].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1UpdateAppGroupAppKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[276].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1UpdateError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[277].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleCloudApigeeV1UpdateSecurityIncidentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[278].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleIamV1AuditConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[279].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleIamV1AuditLogConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[280].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleIamV1Binding); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[281].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleIamV1Policy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[282].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleIamV1SetIamPolicyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[283].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleIamV1TestIamPermissionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[284].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleIamV1TestIamPermissionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[285].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleLongrunningListOperationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[286].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleLongrunningOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[287].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleProtobufEmpty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[288].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleRpcPreconditionFailure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[289].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleRpcPreconditionFailureViolation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[290].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleRpcStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[291].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleTypeExpr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[292].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleTypeInterval); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[293].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleTypeMoney); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[294].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListHybridIssuersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[295].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrganizationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[296].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrganizationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[297].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrganizationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[298].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeployedIngressConfigOrganizationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[299].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProjectMappingOrganizationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[300].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRuntimeConfigOrganizationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[301].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSecuritySettingsOrganizationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[302].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSyncAuthorizationOrganizationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[303].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrganizationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[304].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetAddonsOrganizationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[305].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetSyncAuthorizationOrganizationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[306].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrganizationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[307].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSecuritySettingsOrganizationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[308].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrganizationsAnalyticsDatastoreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[309].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrganizationsAnalyticsDatastoreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[310].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrganizationsAnalyticsDatastoreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[311].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrganizationsAnalyticsDatastoresRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[312].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestOrganizationsAnalyticsDatastoreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[313].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrganizationsAnalyticsDatastoreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[314].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttributesOrganizationsApiproductRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[315].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrganizationsApiproductRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[316].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrganizationsApiproductRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[317].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrganizationsApiproductRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[318].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrganizationsApiproductsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[319].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrganizationsApiproductRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[320].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrganizationsApiproductsAttributeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[321].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrganizationsApiproductsAttributeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[322].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrganizationsApiproductsAttributesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[323].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateApiProductAttributeOrganizationsApiproductsAttributeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[324].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrganizationsApiproductsRateplanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[325].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrganizationsApiproductsRateplanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[326].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrganizationsApiproductsRateplanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[327].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrganizationsApiproductsRateplansRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[328].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrganizationsApiproductsRateplanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[329].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrganizationsApiRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[330].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrganizationsApiRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[331].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrganizationsApiRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[332].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrganizationsApisRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[333].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PatchOrganizationsApiRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[334].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrganizationsApisDeploymentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[335].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrganizationsApisKeyvaluemapRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[336].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrganizationsApisKeyvaluemapRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[337].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrganizationsApisKeyvaluemapsEntryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[338].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrganizationsApisKeyvaluemapsEntryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[339].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrganizationsApisKeyvaluemapsEntryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[340].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrganizationsApisKeyvaluemapsEntriesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[341].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrganizationsApisKeyvaluemapsEntryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[342].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrganizationsApisRevisionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[343].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrganizationsApisRevisionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[344].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateApiProxyRevisionOrganizationsApisRevisionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[345].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrganizationsApisRevisionsDeploymentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[346].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrganizationsAppgroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[347].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrganizationsAppgroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[348].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrganizationsAppgroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[349].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrganizationsAppgroupsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[350].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrganizationsAppgroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[351].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrganizationsAppgroupsAppRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[352].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrganizationsAppgroupsAppRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[353].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrganizationsAppgroupsAppRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[354].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrganizationsAppgroupsAppsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[355].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrganizationsAppgroupsAppRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[356].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrganizationsAppgroupsAppsKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[357].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrganizationsAppgroupsAppsKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[358].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrganizationsAppgroupsAppsKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[359].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAppGroupAppKeyOrganizationsAppgroupsAppsKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[360].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrganizationsAppgroupsAppsKeysApiproductRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[361].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAppGroupAppKeyApiProductOrganizationsAppgroupsAppsKeysApiproductRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[362].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrganizationsAppRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[363].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrganizationsAppsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[364].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrganizationsDatacollectorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[365].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrganizationsDatacollectorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[366].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrganizationsDatacollectorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[367].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrganizationsDatacollectorsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[368].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PatchOrganizationsDatacollectorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[369].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrganizationsDeploymentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[370].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttributesOrganizationsDeveloperRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[371].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrganizationsDeveloperRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[372].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrganizationsDeveloperRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[373].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrganizationsDeveloperRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[374].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBalanceOrganizationsDeveloperRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[375].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMonetizationConfigOrganizationsDeveloperRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[376].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrganizationsDevelopersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[377].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetDeveloperStatusOrganizationsDeveloperRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[378].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrganizationsDeveloperRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[379].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMonetizationConfigOrganizationsDeveloperRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[380].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttributesOrganizationsDevelopersAppRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[381].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrganizationsDevelopersAppRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[382].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrganizationsDevelopersAppRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[383].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateKeyPairOrUpdateDeveloperAppStatusOrganizationsDevelopersAppRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[384].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrganizationsDevelopersAppRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[385].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrganizationsDevelopersAppsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[386].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrganizationsDevelopersAppRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[387].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrganizationsDevelopersAppsAttributeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[388].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrganizationsDevelopersAppsAttributeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[389].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrganizationsDevelopersAppsAttributesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[390].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDeveloperAppAttributeOrganizationsDevelopersAppsAttributeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[391].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrganizationsDevelopersAppsKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[392].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrganizationsDevelopersAppsKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[393].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrganizationsDevelopersAppsKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[394].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplaceDeveloperAppKeyOrganizationsDevelopersAppsKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[395].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDeveloperAppKeyOrganizationsDevelopersAppsKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[396].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrganizationsDevelopersAppsKeysApiproductRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[397].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDeveloperAppKeyApiProductOrganizationsDevelopersAppsKeysApiproductRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[398].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrganizationsDevelopersAppsKeysCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[399].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrganizationsDevelopersAttributeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[400].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrganizationsDevelopersAttributeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[401].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrganizationsDevelopersAttributesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[402].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDeveloperAttributeOrganizationsDevelopersAttributeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[403].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdjustOrganizationsDevelopersBalanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[404].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreditOrganizationsDevelopersBalanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[405].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrganizationsDevelopersSubscriptionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[406].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExpireOrganizationsDevelopersSubscriptionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[407].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrganizationsDevelopersSubscriptionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[408].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrganizationsDevelopersSubscriptionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[409].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrganizationsEndpointAttachmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[410].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrganizationsEndpointAttachmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[411].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrganizationsEndpointAttachmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[412].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrganizationsEndpointAttachmentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[413].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrganizationsEnvgroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[414].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrganizationsEnvgroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[415].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrganizationsEnvgroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[416].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeployedIngressConfigOrganizationsEnvgroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[417].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrganizationsEnvgroupsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[418].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PatchOrganizationsEnvgroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[419].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrganizationsEnvgroupsAttachmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[420].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrganizationsEnvgroupsAttachmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[421].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrganizationsEnvgroupsAttachmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[422].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrganizationsEnvgroupsAttachmentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[423].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrganizationsEnvironmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[424].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrganizationsEnvironmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[425].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrganizationsEnvironmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[426].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAddonsConfigOrganizationsEnvironmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[427].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetApiSecurityRuntimeConfigOrganizationsEnvironmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[428].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDebugmaskOrganizationsEnvironmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[429].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeployedConfigOrganizationsEnvironmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[430].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSecurityActionsConfigOrganizationsEnvironmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[431].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTraceConfigOrganizationsEnvironmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[432].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyEnvironmentOrganizationsEnvironmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[433].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeOrganizationsEnvironmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[434].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsubscribeOrganizationsEnvironmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[435].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrganizationsEnvironmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[436].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDebugmaskOrganizationsEnvironmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[437].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateEnvironmentOrganizationsEnvironmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[438].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSecurityActionsConfigOrganizationsEnvironmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[439].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTraceConfigOrganizationsEnvironmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[440].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetAddonEnablementOrganizationsEnvironmentsAddonsConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[441].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSchemav2OrganizationsEnvironmentsAnalyticsAdminRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[442].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrganizationsEnvironmentsAnalyticsExportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[443].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrganizationsEnvironmentsAnalyticsExportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[444].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrganizationsEnvironmentsAnalyticsExportsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[445].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrganizationsEnvironmentsApisDeploymentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[446].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeployOrganizationsEnvironmentsApisRevisionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[447].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeploymentsOrganizationsEnvironmentsApisRevisionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[448].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UndeployOrganizationsEnvironmentsApisRevisionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[449].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrganizationsEnvironmentsApisRevisionsDebugsessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[450].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDataOrganizationsEnvironmentsApisRevisionsDebugsessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[451].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrganizationsEnvironmentsApisRevisionsDebugsessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[452].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrganizationsEnvironmentsApisRevisionsDebugsessionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[453].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrganizationsEnvironmentsApisRevisionsDebugsessionsDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[454].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateDeployChangeReportOrganizationsEnvironmentsApisRevisionsDeploymentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[455].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateUndeployChangeReportOrganizationsEnvironmentsApisRevisionsDeploymentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[456].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrganizationsEnvironmentsArchiveDeploymentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[457].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrganizationsEnvironmentsArchiveDeploymentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[458].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateDownloadUrlOrganizationsEnvironmentsArchiveDeploymentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[459].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateUploadUrlOrganizationsEnvironmentsArchiveDeploymentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[460].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrganizationsEnvironmentsArchiveDeploymentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[461].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrganizationsEnvironmentsArchiveDeploymentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[462].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PatchOrganizationsEnvironmentsArchiveDeploymentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[463].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrganizationsEnvironmentsCacheRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[464].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrganizationsEnvironmentsDeploymentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[465].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttachSharedFlowToFlowHookOrganizationsEnvironmentsFlowhookRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[466].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DetachSharedFlowFromFlowHookOrganizationsEnvironmentsFlowhookRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[467].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrganizationsEnvironmentsFlowhookRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[468].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrganizationsEnvironmentsKeystoreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[469].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrganizationsEnvironmentsKeystoreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[470].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrganizationsEnvironmentsKeystoreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[471].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrganizationsEnvironmentsKeystoresAliaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[472].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CsrOrganizationsEnvironmentsKeystoresAliaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[473].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrganizationsEnvironmentsKeystoresAliaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[474].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrganizationsEnvironmentsKeystoresAliaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[475].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCertificateOrganizationsEnvironmentsKeystoresAliaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[476].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrganizationsEnvironmentsKeystoresAliaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[477].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrganizationsEnvironmentsKeyvaluemapRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[478].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrganizationsEnvironmentsKeyvaluemapRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[479].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrganizationsEnvironmentsKeyvaluemapsEntryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[480].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrganizationsEnvironmentsKeyvaluemapsEntryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[481].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrganizationsEnvironmentsKeyvaluemapsEntryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[482].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrganizationsEnvironmentsKeyvaluemapsEntriesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[483].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrganizationsEnvironmentsKeyvaluemapsEntryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[484].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrganizationsEnvironmentsOptimizedStatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[485].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrganizationsEnvironmentsQueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[486].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrganizationsEnvironmentsQueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[487].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResultOrganizationsEnvironmentsQueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[488].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResulturlOrganizationsEnvironmentsQueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[489].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrganizationsEnvironmentsQueriesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[490].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrganizationsEnvironmentsReferenceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[491].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrganizationsEnvironmentsReferenceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[492].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrganizationsEnvironmentsReferenceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[493].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrganizationsEnvironmentsReferenceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[494].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrganizationsEnvironmentsResourcefileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[495].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrganizationsEnvironmentsResourcefileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[496].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrganizationsEnvironmentsResourcefileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[497].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrganizationsEnvironmentsResourcefilesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[498].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListEnvironmentResourcesOrganizationsEnvironmentsResourcefileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[499].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrganizationsEnvironmentsResourcefileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[500].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrganizationsEnvironmentsSecurityActionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[501].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisableOrganizationsEnvironmentsSecurityActionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[502].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnableOrganizationsEnvironmentsSecurityActionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[503].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrganizationsEnvironmentsSecurityActionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[504].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrganizationsEnvironmentsSecurityActionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[505].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchUpdateOrganizationsEnvironmentsSecurityIncidentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[506].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrganizationsEnvironmentsSecurityIncidentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[507].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrganizationsEnvironmentsSecurityIncidentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[508].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PatchOrganizationsEnvironmentsSecurityIncidentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[509].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrganizationsEnvironmentsSecurityReportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[510].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrganizationsEnvironmentsSecurityReportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[511].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResultOrganizationsEnvironmentsSecurityReportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[512].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResultViewOrganizationsEnvironmentsSecurityReportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[513].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrganizationsEnvironmentsSecurityReportsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[514].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryTabularStatsOrganizationsEnvironmentsSecurityStatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[515].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryTimeSeriesStatsOrganizationsEnvironmentsSecurityStatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[516].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrganizationsEnvironmentsSharedflowsDeploymentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[517].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeployOrganizationsEnvironmentsSharedflowsRevisionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[518].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeploymentsOrganizationsEnvironmentsSharedflowsRevisionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[519].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UndeployOrganizationsEnvironmentsSharedflowsRevisionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[520].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrganizationsEnvironmentsStatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[521].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrganizationsEnvironmentsTargetserverRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[522].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrganizationsEnvironmentsTargetserverRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[523].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrganizationsEnvironmentsTargetserverRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[524].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrganizationsEnvironmentsTargetserverRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[525].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrganizationsEnvironmentsTraceConfigOverrideRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[526].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrganizationsEnvironmentsTraceConfigOverrideRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[527].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrganizationsEnvironmentsTraceConfigOverrideRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[528].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrganizationsEnvironmentsTraceConfigOverridesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[529].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PatchOrganizationsEnvironmentsTraceConfigOverrideRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[530].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrganizationsHostQueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[531].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrganizationsHostQueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[532].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResultOrganizationsHostQueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[533].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResultViewOrganizationsHostQueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[534].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrganizationsHostQueriesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[535].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrganizationsHostSecurityReportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[536].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrganizationsHostSecurityReportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[537].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResultOrganizationsHostSecurityReportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[538].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResultViewOrganizationsHostSecurityReportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[539].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrganizationsHostSecurityReportsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[540].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrganizationsHostStatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[541].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrganizationsInstanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[542].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrganizationsInstanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[543].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrganizationsInstanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[544].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrganizationsInstancesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[545].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PatchOrganizationsInstanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[546].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportStatusOrganizationsInstanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[547].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrganizationsInstancesAttachmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[548].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrganizationsInstancesAttachmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[549].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrganizationsInstancesAttachmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[550].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrganizationsInstancesAttachmentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[551].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrganizationsInstancesCanaryevaluationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[552].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrganizationsInstancesCanaryevaluationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[553].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivateOrganizationsInstancesNatAddresseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[554].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrganizationsInstancesNatAddresseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[555].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrganizationsInstancesNatAddresseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[556].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrganizationsInstancesNatAddresseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[557].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrganizationsInstancesNatAddressesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[558].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrganizationsKeyvaluemapRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[559].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrganizationsKeyvaluemapRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[560].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrganizationsKeyvaluemapsEntryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[561].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrganizationsKeyvaluemapsEntryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[562].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrganizationsKeyvaluemapsEntryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[563].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrganizationsKeyvaluemapsEntriesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[564].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrganizationsKeyvaluemapsEntryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[565].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrganizationsOptimizedHostStatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[566].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrganizationsReportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[567].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrganizationsReportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[568].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrganizationsReportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[569].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrganizationsReportsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[570].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrganizationsReportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[571].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchComputeOrganizationsSecurityAssessmentResultRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[572].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrganizationsSecurityProfileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[573].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrganizationsSecurityProfileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[574].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrganizationsSecurityProfileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[575].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrganizationsSecurityProfilesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[576].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRevisionsOrganizationsSecurityProfileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[577].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PatchOrganizationsSecurityProfileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[578].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComputeEnvironmentScoresOrganizationsSecurityProfilesEnvironmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[579].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrganizationsSecurityProfilesEnvironmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[580].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrganizationsSecurityProfilesEnvironmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[581].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrganizationsSharedflowRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[582].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrganizationsSharedflowRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[583].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrganizationsSharedflowRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[584].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrganizationsSharedflowsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[585].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrganizationsSharedflowsDeploymentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[586].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrganizationsSharedflowsRevisionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[587].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrganizationsSharedflowsRevisionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[588].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSharedFlowRevisionOrganizationsSharedflowsRevisionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[589].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrganizationsSharedflowsRevisionsDeploymentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[590].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrganizationsSitesApicategoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[591].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrganizationsSitesApicategoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[592].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrganizationsSitesApicategoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[593].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrganizationsSitesApicategoriesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[594].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PatchOrganizationsSitesApicategoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[595].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrganizationsSitesApidocRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[596].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrganizationsSitesApidocRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[597].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrganizationsSitesApidocRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[598].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDocumentationOrganizationsSitesApidocRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[599].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrganizationsSitesApidocsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[600].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrganizationsSitesApidocRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[601].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDocumentationOrganizationsSitesApidocRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mockgcp_cloud_apigee_v1_service_proto_msgTypes[602].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProvisionOrganizationProjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mockgcp_cloud_apigee_v1_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   616,
			NumExtensions: 0,
			NumServices:   89,
		},
		GoTypes:           file_mockgcp_cloud_apigee_v1_service_proto_goTypes,
		DependencyIndexes: file_mockgcp_cloud_apigee_v1_service_proto_depIdxs,
		MessageInfos:      file_mockgcp_cloud_apigee_v1_service_proto_msgTypes,
	}.Build()
	File_mockgcp_cloud_apigee_v1_service_proto = out.File
	file_mockgcp_cloud_apigee_v1_service_proto_rawDesc = nil
	file_mockgcp_cloud_apigee_v1_service_proto_goTypes = nil
	file_mockgcp_cloud_apigee_v1_service_proto_depIdxs = nil
}
