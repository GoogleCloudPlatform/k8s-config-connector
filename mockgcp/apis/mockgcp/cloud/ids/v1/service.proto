// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto2";
package mockgcp.cloud.ids.v1;
import "google/api/annotations.proto";
import "google/longrunning/operations.proto";
import "google/protobuf/any.proto";
import "google/protobuf/timestamp.proto";
option go_package = "cloud.google.com/go/ids/apiv1/idspb;idspb";

service ProjectsServer {
}

service ProjectsLocationsServer {

  // Gets information about a location.
  rpc GetProjectsLocation(GetProjectsLocationRequest) returns (Location) {
    option (google.api.http) = {
      get: "/v1/{name=projects/*/locations/*}"
    };
  };

  // Lists information about the supported locations for this service.
  rpc ListProjectsLocations(ListProjectsLocationsRequest) returns (ListLocationsResponse) {
    option (google.api.http) = {
      get: "/v1/{name=projects/*}/locations"
    };
  };
}

service ProjectsLocationsEndpointsServer {

  // Creates a new Endpoint in a given project and location.
  rpc CreateProjectsLocationsEndpoint(CreateProjectsLocationsEndpointRequest) returns (.google.longrunning.Operation) {
    option (google.api.http) = {
      post: "/v1/{parent=projects/*/locations/*}/endpoints"
      body: "projects_locations_endpoint"
    };
  };

  // Deletes a single Endpoint.
  rpc DeleteProjectsLocationsEndpoint(DeleteProjectsLocationsEndpointRequest) returns (.google.longrunning.Operation) {
    option (google.api.http) = {
      delete: "/v1/{name=projects/*/locations/*/endpoints/*}"
    };
  };

  // Gets details of a single Endpoint.
  rpc GetProjectsLocationsEndpoint(GetProjectsLocationsEndpointRequest) returns (Endpoint) {
    option (google.api.http) = {
      get: "/v1/{name=projects/*/locations/*/endpoints/*}"
    };
  };

  // Lists Endpoints in a given project and location.
  rpc ListProjectsLocationsEndpoints(ListProjectsLocationsEndpointsRequest) returns (ListEndpointsResponse) {
    option (google.api.http) = {
      get: "/v1/{parent=projects/*/locations/*}/endpoints"
    };
  };

  // Updates the parameters of a single Endpoint.
  rpc PatchProjectsLocationsEndpoint(PatchProjectsLocationsEndpointRequest) returns (.google.longrunning.Operation) {
    option (google.api.http) = {
      patch: "/v1/{name=projects/*/locations/*/endpoints/*}"
      body: "projects_locations_endpoint"
    };
  };
}

// Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.
message AuditConfig {
  // The configuration for logging of each type of permission.
  repeated AuditLogConfig audit_log_configs = 1 [json_name="auditLogConfigs"];
  // Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
  optional string service = 2 [json_name="service"];
}

// Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.
message AuditLogConfig {
  // Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
  repeated string exempted_members = 1 [json_name="exemptedMembers"];
  // The log type that this config enables.
  optional string log_type = 2 [json_name="logType"];
}

// Associates `members`, or principals, with a `role`.
message Binding {
  // The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
  optional Expr condition = 1 [json_name="condition"];
  // Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`: A single identity in a workforce identity pool. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/group/{group_id}`: All workforce identities in a group. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/attribute.{attribute_name}/{attribute_value}`: All workforce identities with a specific attribute value. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/*`: All identities in a workforce identity pool. * `principal://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/subject/{subject_attribute_value}`: A single identity in a workload identity pool. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/group/{group_id}`: A workload identity pool group. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/attribute.{attribute_name}/{attribute_value}`: All identities in a workload identity pool with a certain attribute. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/*`: All identities in a workload identity pool. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `deleted:principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`: Deleted single identity in a workforce identity pool. For example, `deleted:principal://iam.googleapis.com/locations/global/workforcePools/my-pool-id/subject/my-subject-attribute-value`.
  repeated string members = 2 [json_name="members"];
  // Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`. For an overview of the IAM roles and permissions, see the [IAM documentation](https://cloud.google.com/iam/docs/roles-overview). For a list of the available pre-defined roles, see [here](https://cloud.google.com/iam/docs/understanding-roles).
  optional string role = 3 [json_name="role"];
}

// The request message for Operations.CancelOperation.
message CancelOperationRequest {
}

// A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
message Empty {
}

// Endpoint describes a single IDS endpoint. It defines a forwarding rule to which packets can be sent for IDS inspection.
message Endpoint {
  // Output only. The create time timestamp.
  optional .google.protobuf.Timestamp create_time = 1 [json_name="createTime"];
  // User-provided description of the endpoint
  optional string description = 2 [json_name="description"];
  // Output only. The fully qualified URL of the endpoint's ILB Forwarding Rule.
  optional string endpoint_forwarding_rule = 3 [json_name="endpointForwardingRule"];
  // Output only. The IP address of the IDS Endpoint's ILB.
  optional string endpoint_ip = 4 [json_name="endpointIp"];
  // The labels of the endpoint.
  map<string, string> labels = 5 [json_name="labels"];
  // Output only. The name of the endpoint.
  optional string name = 6 [json_name="name"];
  // Required. The fully qualified URL of the network to which the IDS Endpoint is attached.
  optional string network = 7 [json_name="network"];
  // Output only. [Output Only] Reserved for future use.
  optional bool satisfies_pzi = 8 [json_name="satisfiesPzi"];
  // Output only. [Output Only] Reserved for future use.
  optional bool satisfies_pzs = 9 [json_name="satisfiesPzs"];
  // Required. Lowest threat severity that this endpoint will alert on.
  optional string severity = 10 [json_name="severity"];
  // Output only. Current state of the endpoint.
  optional string state = 11 [json_name="state"];
  // List of threat IDs to be excepted from generating alerts.
  repeated string threat_exceptions = 12 [json_name="threatExceptions"];
  // Whether the endpoint should report traffic logs in addition to threat logs.
  optional bool traffic_logs = 13 [json_name="trafficLogs"];
  // Output only. The update time timestamp.
  optional .google.protobuf.Timestamp update_time = 14 [json_name="updateTime"];
}

// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
message Expr {
  // Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
  optional string description = 1 [json_name="description"];
  // Textual representation of an expression in Common Expression Language syntax.
  optional string expression = 2 [json_name="expression"];
  // Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
  optional string location = 3 [json_name="location"];
  // Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
  optional string title = 4 [json_name="title"];
}

message ListEndpointsResponse {
  // The list of endpoints response.
  repeated Endpoint endpoints = 1 [json_name="endpoints"];
  // A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
  optional string next_page_token = 2 [json_name="nextPageToken"];
  // Locations that could not be reached.
  repeated string unreachable = 3 [json_name="unreachable"];
}

// The response message for Locations.ListLocations.
message ListLocationsResponse {
  // A list of locations that matches the specified filter in the request.
  repeated Location locations = 1 [json_name="locations"];
  // The standard List next-page token.
  optional string next_page_token = 2 [json_name="nextPageToken"];
}

// The response message for Operations.ListOperations.
message ListOperationsResponse {
  // The standard List next-page token.
  optional string next_page_token = 1 [json_name="nextPageToken"];
  // A list of operations that matches the specified filter in the request.
  repeated .google.longrunning.Operation operations = 2 [json_name="operations"];
}

// A resource that represents a Google Cloud location.
message Location {
  // The friendly name for this location, typically a nearby city name. For example, "Tokyo".
  optional string display_name = 1 [json_name="displayName"];
  // Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-east1"}
  map<string, string> labels = 2 [json_name="labels"];
  // The canonical id for this location. For example: `"us-east1"`.
  optional string location_id = 3 [json_name="locationId"];
  // Service-specific metadata. For example the available capacity at the given location.
  map<string, .google.protobuf.Any> metadata = 4 [json_name="metadata"];
  // Resource name for the location, which may vary between implementations. For example: `"projects/example-project/locations/us-east1"`
  optional string name = 5 [json_name="name"];
}

// Represents the metadata of the long-running operation.
message OperationMetadata {
  // Output only. API version used to start the operation.
  optional string api_version = 1 [json_name="apiVersion"];
  // Output only. The time the operation was created.
  optional .google.protobuf.Timestamp create_time = 2 [json_name="createTime"];
  // Output only. The time the operation finished running.
  optional .google.protobuf.Timestamp end_time = 3 [json_name="endTime"];
  // Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
  optional bool requested_cancellation = 4 [json_name="requestedCancellation"];
  // Output only. Human-readable status of the operation, if any.
  optional string status_message = 5 [json_name="statusMessage"];
  // Output only. Server-defined resource path for the target of the operation.
  optional string target = 6 [json_name="target"];
  // Output only. Name of the verb executed by the operation.
  optional string verb = 7 [json_name="verb"];
}

// An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** ``` { "bindings": [ { "role": "roles/resourcemanager.organizationAdmin", "members": [ "user:mike@example.com", "group:admins@example.com", "domain:google.com", "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, { "role": "roles/resourcemanager.organizationViewer", "members": [ "user:eve@example.com" ], "condition": { "title": "expirable access", "description": "Does not grant access after Sep 2020", "expression": "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag": "BwWWja0YfJA=", "version": 3 } ``` **YAML example:** ``` bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 ``` For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).
message Policy {
  // Specifies cloud audit logging configuration for this policy.
  repeated AuditConfig audit_configs = 1 [json_name="auditConfigs"];
  // Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.
  repeated Binding bindings = 2 [json_name="bindings"];
  // `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.
  optional bytes etag = 3 [json_name="etag"];
  // Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
  optional int32 version = 4 [json_name="version"];
}

// Request message for `SetIamPolicy` method.
message SetIamPolicyRequest {
  // REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.
  optional Policy policy = 1 [json_name="policy"];
  // OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: "bindings, etag"`
  optional string update_mask = 2 [json_name="updateMask"];
}

// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
message Status {
  // The status code, which should be an enum value of google.rpc.Code.
  optional int32 code = 1 [json_name="code"];
  // A list of messages that carry the error details. There is a common set of message types for APIs to use.
  repeated .google.protobuf.Any details = 2 [json_name="details"];
  // A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
  optional string message = 3 [json_name="message"];
}

// Request message for `TestIamPermissions` method.
message TestIamPermissionsRequest {
  // The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
  repeated string permissions = 1 [json_name="permissions"];
}

// Response message for `TestIamPermissions` method.
message TestIamPermissionsResponse {
  // A subset of `TestPermissionsRequest.permissions` that the caller is allowed.
  repeated string permissions = 1 [json_name="permissions"];
}

message GetProjectsLocationRequest {
  optional string name = 1;
}

message ListProjectsLocationsRequest {
  optional string filter = 1;
  optional string name = 2;
  optional int32 page_size = 3;
  optional string page_token = 4;
}

message CreateProjectsLocationsEndpointRequest {
  optional string endpoint_id = 1;
  optional string parent = 2;
  optional string request_id = 3;
  optional Endpoint projects_locations_endpoint = 4;
}

message DeleteProjectsLocationsEndpointRequest {
  optional string name = 1;
  optional string request_id = 2;
}

message GetProjectsLocationsEndpointRequest {
  optional string name = 1;
}

message ListProjectsLocationsEndpointsRequest {
  optional string filter = 1;
  optional string order_by = 2;
  optional int32 page_size = 3;
  optional string page_token = 4;
  optional string parent = 5;
}

message PatchProjectsLocationsEndpointRequest {
  optional string name = 1;
  optional string request_id = 2;
  optional string update_mask = 3;
  optional Endpoint projects_locations_endpoint = 4;
}
