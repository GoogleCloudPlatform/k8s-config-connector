// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";
package mockgcp.cloud.networkconnectivity.v1;
import "google/api/annotations.proto";
import "google/longrunning/operations.proto";
import "google/protobuf/any.proto";
import "google/protobuf/timestamp.proto";
option go_package = "cloud.google.com/go/networkconnectivity/apiv1/networkconnectivitypb;networkconnectivitypb";

service ProjectsServer {
}

service ProjectsLocationsServer {

  // Gets information about a location.
  rpc GetProjectsLocation(GetProjectsLocationRequest) returns (Location) {
    option (google.api.http) = {
      get: "/v1/{name=projects/*/locations/*}"
    };
  };

  // Lists information about the supported locations for this service.
  rpc ListProjectsLocations(ListProjectsLocationsRequest) returns (ListLocationsResponse) {
    option (google.api.http) = {
      get: "/v1/{name=projects/*}/locations"
    };
  };
}

service ProjectsLocationsGlobalServer {
}

service ProjectsLocationsGlobalHubsServer {

  // Accepts a proposal to attach a Network Connectivity Center spoke to a hub.
  rpc AcceptSpokeProjectsLocationsGlobalHub(AcceptSpokeProjectsLocationsGlobalHubRequest) returns (.google.longrunning.Operation) {
    option (google.api.http) = {
      post: "/v1/{name=projects/*/locations/global/hubs/*}:acceptSpoke"
      body: "projects_locations_global_hub"
    };
  };

  // Creates a new Network Connectivity Center hub in the specified project.
  rpc CreateProjectsLocationsGlobalHub(CreateProjectsLocationsGlobalHubRequest) returns (.google.longrunning.Operation) {
    option (google.api.http) = {
      post: "/v1/{parent=projects/*/locations/global}/hubs"
      body: "projects_locations_global_hub"
    };
  };

  // Deletes a Network Connectivity Center hub.
  rpc DeleteProjectsLocationsGlobalHub(DeleteProjectsLocationsGlobalHubRequest) returns (.google.longrunning.Operation) {
    option (google.api.http) = {
      delete: "/v1/{name=projects/*/locations/global/hubs/*}"
    };
  };

  // Gets details about a Network Connectivity Center hub.
  rpc GetProjectsLocationsGlobalHub(GetProjectsLocationsGlobalHubRequest) returns (Hub) {
    option (google.api.http) = {
      get: "/v1/{name=projects/*/locations/global/hubs/*}"
    };
  };

  // Lists the Network Connectivity Center hubs associated with a given project.
  rpc ListProjectsLocationsGlobalHubs(ListProjectsLocationsGlobalHubsRequest) returns (ListHubsResponse) {
    option (google.api.http) = {
      get: "/v1/{parent=projects/*/locations/global}/hubs"
    };
  };

  // Lists the Network Connectivity Center spokes associated with a specified hub and location. The list includes both spokes that are attached to the hub and spokes that have been proposed but not yet accepted.
  rpc ListSpokesProjectsLocationsGlobalHub(ListSpokesProjectsLocationsGlobalHubRequest) returns (ListHubSpokesResponse) {
    option (google.api.http) = {
      get: "/v1/{name=projects/*/locations/global/hubs/*}:listSpokes"
    };
  };

  // Updates the description and/or labels of a Network Connectivity Center hub.
  rpc PatchProjectsLocationsGlobalHub(PatchProjectsLocationsGlobalHubRequest) returns (.google.longrunning.Operation) {
    option (google.api.http) = {
      patch: "/v1/{name=projects/*/locations/global/hubs/*}"
      body: "projects_locations_global_hub"
    };
  };

  // Query the Private Service Connect propagation status of a Network Connectivity Center hub.
  rpc QueryStatusProjectsLocationsGlobalHub(QueryStatusProjectsLocationsGlobalHubRequest) returns (QueryHubStatusResponse) {
    option (google.api.http) = {
      get: "/v1/{name=projects/*/locations/global/hubs/*}:queryStatus"
    };
  };

  // Rejects a Network Connectivity Center spoke from being attached to a hub. If the spoke was previously in the `ACTIVE` state, it transitions to the `INACTIVE` state and is no longer able to connect to other spokes that are attached to the hub.
  rpc RejectSpokeProjectsLocationsGlobalHub(RejectSpokeProjectsLocationsGlobalHubRequest) returns (.google.longrunning.Operation) {
    option (google.api.http) = {
      post: "/v1/{name=projects/*/locations/global/hubs/*}:rejectSpoke"
      body: "projects_locations_global_hub"
    };
  };
}

service ProjectsLocationsGlobalHubsGroupsServer {

  // Gets details about a Network Connectivity Center group.
  rpc GetProjectsLocationsGlobalHubsGroup(GetProjectsLocationsGlobalHubsGroupRequest) returns (Group) {
    option (google.api.http) = {
      get: "/v1/{name=projects/*/locations/global/hubs/*/groups/*}"
    };
  };

  // Lists groups in a given hub.
  rpc ListProjectsLocationsGlobalHubsGroups(ListProjectsLocationsGlobalHubsGroupsRequest) returns (ListGroupsResponse) {
    option (google.api.http) = {
      get: "/v1/{parent=projects/*/locations/global/hubs/*}/groups"
    };
  };

  // Updates the parameters of a Network Connectivity Center group.
  rpc PatchProjectsLocationsGlobalHubsGroup(PatchProjectsLocationsGlobalHubsGroupRequest) returns (.google.longrunning.Operation) {
    option (google.api.http) = {
      patch: "/v1/{name=projects/*/locations/global/hubs/*/groups/*}"
      body: "projects_locations_global_hubs_group"
    };
  };
}

service ProjectsLocationsGlobalHubsRouteTablesServer {

  // Gets details about a Network Connectivity Center route table.
  rpc GetProjectsLocationsGlobalHubsRouteTable(GetProjectsLocationsGlobalHubsRouteTableRequest) returns (RouteTable) {
    option (google.api.http) = {
      get: "/v1/{name=projects/*/locations/global/hubs/*/routeTables/*}"
    };
  };

  // Lists route tables in a given hub.
  rpc ListProjectsLocationsGlobalHubsRouteTables(ListProjectsLocationsGlobalHubsRouteTablesRequest) returns (ListRouteTablesResponse) {
    option (google.api.http) = {
      get: "/v1/{parent=projects/*/locations/global/hubs/*}/routeTables"
    };
  };
}

service ProjectsLocationsGlobalHubsRouteTablesRoutesServer {

  // Gets details about the specified route.
  rpc GetProjectsLocationsGlobalHubsRouteTablesRoute(GetProjectsLocationsGlobalHubsRouteTablesRouteRequest) returns (Route) {
    option (google.api.http) = {
      get: "/v1/{name=projects/*/locations/global/hubs/*/routeTables/*/routes/*}"
    };
  };

  // Lists routes in a given route table.
  rpc ListProjectsLocationsGlobalHubsRouteTablesRoutes(ListProjectsLocationsGlobalHubsRouteTablesRoutesRequest) returns (ListRoutesResponse) {
    option (google.api.http) = {
      get: "/v1/{parent=projects/*/locations/global/hubs/*/routeTables/*}/routes"
    };
  };
}

service ProjectsLocationsGlobalPolicyBasedRoutesServer {

  // Creates a new policy-based route in a given project and location.
  rpc CreateProjectsLocationsGlobalPolicyBasedRoute(CreateProjectsLocationsGlobalPolicyBasedRouteRequest) returns (.google.longrunning.Operation) {
    option (google.api.http) = {
      post: "/v1/{parent=projects/*/locations/global}/policyBasedRoutes"
      body: "projects_locations_global_policy_based_route"
    };
  };

  // Deletes a single policy-based route.
  rpc DeleteProjectsLocationsGlobalPolicyBasedRoute(DeleteProjectsLocationsGlobalPolicyBasedRouteRequest) returns (.google.longrunning.Operation) {
    option (google.api.http) = {
      delete: "/v1/{name=projects/*/locations/global/policyBasedRoutes/*}"
    };
  };

  // Gets details of a single policy-based route.
  rpc GetProjectsLocationsGlobalPolicyBasedRoute(GetProjectsLocationsGlobalPolicyBasedRouteRequest) returns (PolicyBasedRoute) {
    option (google.api.http) = {
      get: "/v1/{name=projects/*/locations/global/policyBasedRoutes/*}"
    };
  };

  // Lists policy-based routes in a given project and location.
  rpc ListProjectsLocationsGlobalPolicyBasedRoutes(ListProjectsLocationsGlobalPolicyBasedRoutesRequest) returns (ListPolicyBasedRoutesResponse) {
    option (google.api.http) = {
      get: "/v1/{parent=projects/*/locations/global}/policyBasedRoutes"
    };
  };
}

service ProjectsLocationsInternalRangesServer {

  // Creates a new internal range in a given project and location.
  rpc CreateProjectsLocationsInternalRange(CreateProjectsLocationsInternalRangeRequest) returns (.google.longrunning.Operation) {
    option (google.api.http) = {
      post: "/v1/{parent=projects/*/locations/*}/internalRanges"
      body: "projects_locations_internal_range"
    };
  };

  // Deletes a single internal range.
  rpc DeleteProjectsLocationsInternalRange(DeleteProjectsLocationsInternalRangeRequest) returns (.google.longrunning.Operation) {
    option (google.api.http) = {
      delete: "/v1/{name=projects/*/locations/*/internalRanges/*}"
    };
  };

  // Gets details of a single internal range.
  rpc GetProjectsLocationsInternalRange(GetProjectsLocationsInternalRangeRequest) returns (InternalRange) {
    option (google.api.http) = {
      get: "/v1/{name=projects/*/locations/*/internalRanges/*}"
    };
  };

  // Lists internal ranges in a given project and location.
  rpc ListProjectsLocationsInternalRanges(ListProjectsLocationsInternalRangesRequest) returns (ListInternalRangesResponse) {
    option (google.api.http) = {
      get: "/v1/{parent=projects/*/locations/*}/internalRanges"
    };
  };

  // Updates the parameters of a single internal range.
  rpc PatchProjectsLocationsInternalRange(PatchProjectsLocationsInternalRangeRequest) returns (.google.longrunning.Operation) {
    option (google.api.http) = {
      patch: "/v1/{name=projects/*/locations/*/internalRanges/*}"
      body: "projects_locations_internal_range"
    };
  };
}

service ProjectsLocationsRegionalEndpointsServer {

  // Creates a new RegionalEndpoint in a given project and location.
  rpc CreateProjectsLocationsRegionalEndpoint(CreateProjectsLocationsRegionalEndpointRequest) returns (.google.longrunning.Operation) {
    option (google.api.http) = {
      post: "/v1/{parent=projects/*/locations/*}/regionalEndpoints"
      body: "projects_locations_regional_endpoint"
    };
  };

  // Deletes a single RegionalEndpoint.
  rpc DeleteProjectsLocationsRegionalEndpoint(DeleteProjectsLocationsRegionalEndpointRequest) returns (.google.longrunning.Operation) {
    option (google.api.http) = {
      delete: "/v1/{name=projects/*/locations/*/regionalEndpoints/*}"
    };
  };

  // Gets details of a single RegionalEndpoint.
  rpc GetProjectsLocationsRegionalEndpoint(GetProjectsLocationsRegionalEndpointRequest) returns (RegionalEndpoint) {
    option (google.api.http) = {
      get: "/v1/{name=projects/*/locations/*/regionalEndpoints/*}"
    };
  };

  // Lists RegionalEndpoints in a given project and location.
  rpc ListProjectsLocationsRegionalEndpoints(ListProjectsLocationsRegionalEndpointsRequest) returns (ListRegionalEndpointsResponse) {
    option (google.api.http) = {
      get: "/v1/{parent=projects/*/locations/*}/regionalEndpoints"
    };
  };
}

service ProjectsLocationsServiceClassesServer {

  // Deletes a single ServiceClass.
  rpc DeleteProjectsLocationsServiceClasse(DeleteProjectsLocationsServiceClasseRequest) returns (.google.longrunning.Operation) {
    option (google.api.http) = {
      delete: "/v1/{name=projects/*/locations/*/serviceClasses/*}"
    };
  };

  // Gets details of a single ServiceClass.
  rpc GetProjectsLocationsServiceClasse(GetProjectsLocationsServiceClasseRequest) returns (ServiceClass) {
    option (google.api.http) = {
      get: "/v1/{name=projects/*/locations/*/serviceClasses/*}"
    };
  };

  // Lists ServiceClasses in a given project and location.
  rpc ListProjectsLocationsServiceClasses(ListProjectsLocationsServiceClassesRequest) returns (ListServiceClassesResponse) {
    option (google.api.http) = {
      get: "/v1/{parent=projects/*/locations/*}/serviceClasses"
    };
  };

  // Updates the parameters of a single ServiceClass.
  rpc PatchProjectsLocationsServiceClasse(PatchProjectsLocationsServiceClasseRequest) returns (.google.longrunning.Operation) {
    option (google.api.http) = {
      patch: "/v1/{name=projects/*/locations/*/serviceClasses/*}"
      body: "projects_locations_service_classe"
    };
  };
}

service ProjectsLocationsServiceConnectionMapsServer {

  // Creates a new ServiceConnectionMap in a given project and location.
  rpc CreateProjectsLocationsServiceConnectionMap(CreateProjectsLocationsServiceConnectionMapRequest) returns (.google.longrunning.Operation) {
    option (google.api.http) = {
      post: "/v1/{parent=projects/*/locations/*}/serviceConnectionMaps"
      body: "projects_locations_service_connection_map"
    };
  };

  // Deletes a single ServiceConnectionMap.
  rpc DeleteProjectsLocationsServiceConnectionMap(DeleteProjectsLocationsServiceConnectionMapRequest) returns (.google.longrunning.Operation) {
    option (google.api.http) = {
      delete: "/v1/{name=projects/*/locations/*/serviceConnectionMaps/*}"
    };
  };

  // Gets details of a single ServiceConnectionMap.
  rpc GetProjectsLocationsServiceConnectionMap(GetProjectsLocationsServiceConnectionMapRequest) returns (ServiceConnectionMap) {
    option (google.api.http) = {
      get: "/v1/{name=projects/*/locations/*/serviceConnectionMaps/*}"
    };
  };

  // Lists ServiceConnectionMaps in a given project and location.
  rpc ListProjectsLocationsServiceConnectionMaps(ListProjectsLocationsServiceConnectionMapsRequest) returns (ListServiceConnectionMapsResponse) {
    option (google.api.http) = {
      get: "/v1/{parent=projects/*/locations/*}/serviceConnectionMaps"
    };
  };

  // Updates the parameters of a single ServiceConnectionMap.
  rpc PatchProjectsLocationsServiceConnectionMap(PatchProjectsLocationsServiceConnectionMapRequest) returns (.google.longrunning.Operation) {
    option (google.api.http) = {
      patch: "/v1/{name=projects/*/locations/*/serviceConnectionMaps/*}"
      body: "projects_locations_service_connection_map"
    };
  };
}

service ProjectsLocationsServiceConnectionPoliciesServer {

  // Creates a new ServiceConnectionPolicy in a given project and location.
  rpc CreateProjectsLocationsServiceConnectionPolicy(CreateProjectsLocationsServiceConnectionPolicyRequest) returns (.google.longrunning.Operation) {
    option (google.api.http) = {
      post: "/v1/{parent=projects/*/locations/*}/serviceConnectionPolicies"
      body: "projects_locations_service_connection_policy"
    };
  };

  // Deletes a single ServiceConnectionPolicy.
  rpc DeleteProjectsLocationsServiceConnectionPolicy(DeleteProjectsLocationsServiceConnectionPolicyRequest) returns (.google.longrunning.Operation) {
    option (google.api.http) = {
      delete: "/v1/{name=projects/*/locations/*/serviceConnectionPolicies/*}"
    };
  };

  // Gets details of a single ServiceConnectionPolicy.
  rpc GetProjectsLocationsServiceConnectionPolicy(GetProjectsLocationsServiceConnectionPolicyRequest) returns (ServiceConnectionPolicy) {
    option (google.api.http) = {
      get: "/v1/{name=projects/*/locations/*/serviceConnectionPolicies/*}"
    };
  };

  // Lists ServiceConnectionPolicies in a given project and location.
  rpc ListProjectsLocationsServiceConnectionPolicies(ListProjectsLocationsServiceConnectionPoliciesRequest) returns (ListServiceConnectionPoliciesResponse) {
    option (google.api.http) = {
      get: "/v1/{parent=projects/*/locations/*}/serviceConnectionPolicies"
    };
  };

  // Updates the parameters of a single ServiceConnectionPolicy.
  rpc PatchProjectsLocationsServiceConnectionPolicy(PatchProjectsLocationsServiceConnectionPolicyRequest) returns (.google.longrunning.Operation) {
    option (google.api.http) = {
      patch: "/v1/{name=projects/*/locations/*/serviceConnectionPolicies/*}"
      body: "projects_locations_service_connection_policy"
    };
  };
}

service ProjectsLocationsServiceConnectionTokensServer {

  // Creates a new ServiceConnectionToken in a given project and location.
  rpc CreateProjectsLocationsServiceConnectionToken(CreateProjectsLocationsServiceConnectionTokenRequest) returns (.google.longrunning.Operation) {
    option (google.api.http) = {
      post: "/v1/{parent=projects/*/locations/*}/serviceConnectionTokens"
      body: "projects_locations_service_connection_token"
    };
  };

  // Deletes a single ServiceConnectionToken.
  rpc DeleteProjectsLocationsServiceConnectionToken(DeleteProjectsLocationsServiceConnectionTokenRequest) returns (.google.longrunning.Operation) {
    option (google.api.http) = {
      delete: "/v1/{name=projects/*/locations/*/serviceConnectionTokens/*}"
    };
  };

  // Gets details of a single ServiceConnectionToken.
  rpc GetProjectsLocationsServiceConnectionToken(GetProjectsLocationsServiceConnectionTokenRequest) returns (ServiceConnectionToken) {
    option (google.api.http) = {
      get: "/v1/{name=projects/*/locations/*/serviceConnectionTokens/*}"
    };
  };

  // Lists ServiceConnectionTokens in a given project and location.
  rpc ListProjectsLocationsServiceConnectionTokens(ListProjectsLocationsServiceConnectionTokensRequest) returns (ListServiceConnectionTokensResponse) {
    option (google.api.http) = {
      get: "/v1/{parent=projects/*/locations/*}/serviceConnectionTokens"
    };
  };
}

service ProjectsLocationsSpokesServer {

  // Creates a Network Connectivity Center spoke.
  rpc CreateProjectsLocationsSpoke(CreateProjectsLocationsSpokeRequest) returns (.google.longrunning.Operation) {
    option (google.api.http) = {
      post: "/v1/{parent=projects/*/locations/*}/spokes"
      body: "projects_locations_spoke"
    };
  };

  // Deletes a Network Connectivity Center spoke.
  rpc DeleteProjectsLocationsSpoke(DeleteProjectsLocationsSpokeRequest) returns (.google.longrunning.Operation) {
    option (google.api.http) = {
      delete: "/v1/{name=projects/*/locations/*/spokes/*}"
    };
  };

  // Gets details about a Network Connectivity Center spoke.
  rpc GetProjectsLocationsSpoke(GetProjectsLocationsSpokeRequest) returns (Spoke) {
    option (google.api.http) = {
      get: "/v1/{name=projects/*/locations/*/spokes/*}"
    };
  };

  // Lists the Network Connectivity Center spokes in a specified project and location.
  rpc ListProjectsLocationsSpokes(ListProjectsLocationsSpokesRequest) returns (ListSpokesResponse) {
    option (google.api.http) = {
      get: "/v1/{parent=projects/*/locations/*}/spokes"
    };
  };

  // Updates the parameters of a Network Connectivity Center spoke.
  rpc PatchProjectsLocationsSpoke(PatchProjectsLocationsSpokeRequest) returns (.google.longrunning.Operation) {
    option (google.api.http) = {
      patch: "/v1/{name=projects/*/locations/*/spokes/*}"
      body: "projects_locations_spoke"
    };
  };
}

// The request for HubService.AcceptHubSpoke.
message AcceptHubSpokeRequest {
  // Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server knows to ignore the request if it has already been completed. The server guarantees that a request doesn't result in creation of duplicate commitments for at least 60 minutes. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check to see whether the original operation was received. If it was, the server ignores the second request. This behavior prevents clients from mistakenly creating duplicate commitments. The request ID must be a valid UUID, with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
  string request_id = 1 [json_name="requestId"];
  // Required. The URI of the spoke to accept into the hub.
  string spoke_uri = 2 [json_name="spokeUri"];
}

// The response for HubService.AcceptHubSpoke.
message AcceptHubSpokeResponse {
  // The spoke that was operated on.
  Spoke spoke = 1 [json_name="spoke"];
}

// Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.
message AuditConfig {
  // The configuration for logging of each type of permission.
  repeated AuditLogConfig audit_log_configs = 1 [json_name="auditLogConfigs"];
  // Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
  string service = 2 [json_name="service"];
}

// Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.
message AuditLogConfig {
  // Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
  repeated string exempted_members = 1 [json_name="exemptedMembers"];
  // The log type that this config enables.
  string log_type = 2 [json_name="logType"];
}

// The auto-accept setting for a group controls whether proposed spokes are automatically attached to the hub. If auto-accept is enabled, the spoke immediately is attached to the hub and becomes part of the group. In this case, the new spoke is in the ACTIVE state. If auto-accept is disabled, the spoke goes to the INACTIVE state, and it must be reviewed and accepted by a hub administrator.
message AutoAccept {
  // Optional. A list of project ids or project numbers for which you want to enable auto-accept. The auto-accept setting is applied to spokes being created or updated in these projects.
  repeated string auto_accept_projects = 1 [json_name="autoAcceptProjects"];
}

// Associates `members`, or principals, with a `role`.
message Binding {
  // The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
  Expr condition = 1 [json_name="condition"];
  // Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`: A single identity in a workforce identity pool. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/group/{group_id}`: All workforce identities in a group. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/attribute.{attribute_name}/{attribute_value}`: All workforce identities with a specific attribute value. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/*`: All identities in a workforce identity pool. * `principal://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/subject/{subject_attribute_value}`: A single identity in a workload identity pool. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/group/{group_id}`: A workload identity pool group. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/attribute.{attribute_name}/{attribute_value}`: All identities in a workload identity pool with a certain attribute. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/*`: All identities in a workload identity pool. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `deleted:principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`: Deleted single identity in a workforce identity pool. For example, `deleted:principal://iam.googleapis.com/locations/global/workforcePools/my-pool-id/subject/my-subject-attribute-value`.
  repeated string members = 2 [json_name="members"];
  // Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`. For an overview of the IAM roles and permissions, see the [IAM documentation](https://cloud.google.com/iam/docs/roles-overview). For a list of the available pre-defined roles, see [here](https://cloud.google.com/iam/docs/understanding-roles).
  string role = 3 [json_name="role"];
}

// Allow the producer to specify which consumers can connect to it.
message ConsumerPscConfig {
  // Required. The project ID or project number of the consumer project. This project is the one that the consumer uses to interact with the producer instance. From the perspective of a consumer who's created a producer instance, this is the project of the producer instance. Format: 'projects/' Eg. 'projects/consumer-project' or 'projects/1234'
  string consumer_instance_project = 1 [json_name="consumerInstanceProject"];
  // This is used in PSC consumer ForwardingRule to control whether the PSC endpoint can be accessed from another region.
  bool disable_global_access = 2 [json_name="disableGlobalAccess"];
  // The requested IP version for the PSC connection.
  string ip_version = 3 [json_name="ipVersion"];
  // The resource path of the consumer network where PSC connections are allowed to be created in. Note, this network does not need be in the ConsumerPscConfig.project in the case of SharedVPC. Example: projects/{projectNumOrId}/global/networks/{networkId}.
  string network = 4 [json_name="network"];
  // Immutable. Deprecated. Use producer_instance_metadata instead. An immutable identifier for the producer instance.
  string producer_instance_id = 5 [json_name="producerInstanceId"];
  // Immutable. An immutable map for the producer instance metadata.
  map<string, string> producer_instance_metadata = 6 [json_name="producerInstanceMetadata"];
  // The consumer project where PSC connections are allowed to be created in.
  string project = 7 [json_name="project"];
  // Output only. A map to store mapping between customer vip and target service attachment. Only service attachment with producer specified ip addresses are stored here.
  map<string, string> service_attachment_ip_address_map = 8 [json_name="serviceAttachmentIpAddressMap"];
  // Output only. Overall state of PSC Connections management for this consumer psc config.
  string state = 9 [json_name="state"];
}

// PSC connection details on consumer side.
message ConsumerPscConnection {
  // The most recent error during operating this connection.
  GoogleRpcStatus error = 1 [json_name="error"];
  // Output only. The error info for the latest error during operating this connection.
  GoogleRpcErrorInfo error_info = 2 [json_name="errorInfo"];
  // The error type indicates whether the error is consumer facing, producer facing or system internal.
  string error_type = 3 [json_name="errorType"];
  // The URI of the consumer forwarding rule created. Example: projects/{projectNumOrId}/regions/us-east1/networks/{resourceId}.
  string forwarding_rule = 4 [json_name="forwardingRule"];
  // The last Compute Engine operation to setup PSC connection.
  string gce_operation = 5 [json_name="gceOperation"];
  // The IP literal allocated on the consumer network for the PSC forwarding rule that is created to connect to the producer service attachment in this service connection map.
  string ip = 6 [json_name="ip"];
  // The requested IP version for the PSC connection.
  string ip_version = 7 [json_name="ipVersion"];
  // The consumer network whose PSC forwarding rule is connected to the service attachments in this service connection map. Note that the network could be on a different project (shared VPC).
  string network = 8 [json_name="network"];
  // Immutable. Deprecated. Use producer_instance_metadata instead. An immutable identifier for the producer instance.
  string producer_instance_id = 9 [json_name="producerInstanceId"];
  // Immutable. An immutable map for the producer instance metadata.
  map<string, string> producer_instance_metadata = 10 [json_name="producerInstanceMetadata"];
  // The consumer project whose PSC forwarding rule is connected to the service attachments in this service connection map.
  string project = 11 [json_name="project"];
  // The PSC connection id of the PSC forwarding rule connected to the service attachments in this service connection map.
  string psc_connection_id = 12 [json_name="pscConnectionId"];
  // Output only. The URI of the selected subnetwork selected to allocate IP address for this connection.
  string selected_subnetwork = 13 [json_name="selectedSubnetwork"];
  // The URI of a service attachment which is the target of the PSC connection.
  string service_attachment_uri = 14 [json_name="serviceAttachmentUri"];
  // The state of the PSC connection.
  string state = 15 [json_name="state"];
}

// A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
message Empty {
}

// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
message Expr {
  // Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
  string description = 1 [json_name="description"];
  // Textual representation of an expression in Common Expression Language syntax.
  string expression = 2 [json_name="expression"];
  // Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
  string location = 3 [json_name="location"];
  // Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
  string title = 4 [json_name="title"];
}

// Filter matches L4 traffic.
message Filter {
  // Optional. The destination IP range of outgoing packets that this policy-based route applies to. Default is "0.0.0.0/0" if protocol version is IPv4.
  string dest_range = 1 [json_name="destRange"];
  // Optional. The IP protocol that this policy-based route applies to. Valid values are 'TCP', 'UDP', and 'ALL'. Default is 'ALL'.
  string ip_protocol = 2 [json_name="ipProtocol"];
  // Required. Internet protocol versions this policy-based route applies to. For this version, only IPV4 is supported. IPV6 is supported in preview.
  string protocol_version = 3 [json_name="protocolVersion"];
  // Optional. The source IP range of outgoing packets that this policy-based route applies to. Default is "0.0.0.0/0" if protocol version is IPv4.
  string src_range = 4 [json_name="srcRange"];
}

// The request message for Operations.CancelOperation.
message GoogleLongrunningCancelOperationRequest {
}

// The response message for Operations.ListOperations.
message GoogleLongrunningListOperationsResponse {
  // The standard List next-page token.
  string next_page_token = 1 [json_name="nextPageToken"];
  // A list of operations that matches the specified filter in the request.
  repeated .google.longrunning.Operation operations = 2 [json_name="operations"];
}

// Describes the cause of the error with structured details. Example of an error when contacting the "pubsub.googleapis.com" API when it is not enabled: { "reason": "API_DISABLED" "domain": "googleapis.com" "metadata": { "resource": "projects/123", "service": "pubsub.googleapis.com" } } This response indicates that the pubsub.googleapis.com API is not enabled. Example of an error that is returned when attempting to create a Spanner instance in a region that is out of stock: { "reason": "STOCKOUT" "domain": "spanner.googleapis.com", "metadata": { "availableRegions": "us-central1,us-east2" } }
message GoogleRpcErrorInfo {
  // The logical grouping to which the "reason" belongs. The error domain is typically the registered service name of the tool or product that generates the error. Example: "pubsub.googleapis.com". If the error is generated by some common infrastructure, the error domain must be a globally unique value that identifies the infrastructure. For Google API infrastructure, the error domain is "googleapis.com".
  string domain = 1 [json_name="domain"];
  // Additional structured details about this error. Keys must match a regular expression of `a-z+` but should ideally be lowerCamelCase. Also, they must be limited to 64 characters in length. When identifying the current value of an exceeded limit, the units should be contained in the key, not the value. For example, rather than `{"instanceLimit": "100/request"}`, should be returned as, `{"instanceLimitPerRequest": "100"}`, if the client exceeds the number of instances that can be created in a single (batch) request.
  map<string, string> metadata = 2 [json_name="metadata"];
  // The reason of the error. This is a constant value that identifies the proximate cause of the error. Error reasons are unique within a particular domain of errors. This should be at most 63 characters and match a regular expression of `A-Z+[A-Z0-9]`, which represents UPPER_SNAKE_CASE.
  string reason = 3 [json_name="reason"];
}

// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
message GoogleRpcStatus {
  // The status code, which should be an enum value of google.rpc.Code.
  int32 code = 1 [json_name="code"];
  // A list of messages that carry the error details. There is a common set of message types for APIs to use.
  repeated .google.protobuf.Any details = 2 [json_name="details"];
  // A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
  string message = 3 [json_name="message"];
}

// A group represents a subset of spokes attached to a hub.
message Group {
  // Optional. The auto-accept setting for this group.
  AutoAccept auto_accept = 1 [json_name="autoAccept"];
  // Output only. The time the group was created.
  .google.protobuf.Timestamp create_time = 2 [json_name="createTime"];
  // Optional. The description of the group.
  string description = 3 [json_name="description"];
  // Optional. Labels in key-value pair format. For more information about labels, see [Requirements for labels](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements).
  map<string, string> labels = 4 [json_name="labels"];
  // Immutable. The name of the group. Group names must be unique. They use the following form: `projects/{project_number}/locations/global/hubs/{hub}/groups/{group_id}`
  string name = 5 [json_name="name"];
  // Output only. The name of the route table that corresponds to this group. They use the following form: `projects/{project_number}/locations/global/hubs/{hub_id}/routeTables/{route_table_id}`
  string route_table = 6 [json_name="routeTable"];
  // Output only. The current lifecycle state of this group.
  string state = 7 [json_name="state"];
  // Output only. The Google-generated UUID for the group. This value is unique across all group resources. If a group is deleted and another with the same name is created, the new route table is assigned a different unique_id.
  string uid = 8 [json_name="uid"];
  // Output only. The time the group was last updated.
  .google.protobuf.Timestamp update_time = 9 [json_name="updateTime"];
}

// A Network Connectivity Center hub is a global management resource to which you attach spokes. A single hub can contain spokes from multiple regions. However, if any of a hub's spokes use the site-to-site data transfer feature, the resources associated with those spokes must all be in the same VPC network. Spokes that do not use site-to-site data transfer can be associated with any VPC network in your project.
message Hub {
  // Output only. The time the hub was created.
  .google.protobuf.Timestamp create_time = 1 [json_name="createTime"];
  // Optional. An optional description of the hub.
  string description = 2 [json_name="description"];
  // Optional. Whether Private Service Connect transitivity is enabled for the hub. If true, Private Service Connect endpoints in VPC spokes attached to the hub are made accessible to other VPC spokes attached to the hub. The default value is false.
  bool export_psc = 3 [json_name="exportPsc"];
  // Optional labels in key-value pair format. For more information about labels, see [Requirements for labels](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements).
  map<string, string> labels = 4 [json_name="labels"];
  // Immutable. The name of the hub. Hub names must be unique. They use the following form: `projects/{project_number}/locations/global/hubs/{hub_id}`
  string name = 5 [json_name="name"];
  // Optional. The policy mode of this hub. This field can be either PRESET or CUSTOM. If unspecified, the policy_mode defaults to PRESET.
  string policy_mode = 6 [json_name="policyMode"];
  // Optional. The topology implemented in this hub. Currently, this field is only used when policy_mode = PRESET. The available preset topologies are MESH and STAR. If preset_topology is unspecified and policy_mode = PRESET, the preset_topology defaults to MESH. When policy_mode = CUSTOM, the preset_topology is set to PRESET_TOPOLOGY_UNSPECIFIED.
  string preset_topology = 7 [json_name="presetTopology"];
  // Output only. The route tables that belong to this hub. They use the following form: `projects/{project_number}/locations/global/hubs/{hub_id}/routeTables/{route_table_id}` This field is read-only. Network Connectivity Center automatically populates it based on the route tables nested under the hub.
  repeated string route_tables = 8 [json_name="routeTables"];
  // The VPC networks associated with this hub's spokes. This field is read-only. Network Connectivity Center automatically populates it based on the set of spokes attached to the hub.
  repeated RoutingVPC routing_vpcs = 9 [json_name="routingVpcs"];
  // Output only. A summary of the spokes associated with a hub. The summary includes a count of spokes according to type and according to state. If any spokes are inactive, the summary also lists the reasons they are inactive, including a count for each reason.
  SpokeSummary spoke_summary = 10 [json_name="spokeSummary"];
  // Output only. The current lifecycle state of this hub.
  string state = 11 [json_name="state"];
  // Output only. The Google-generated UUID for the hub. This value is unique across all hub resources. If a hub is deleted and another with the same name is created, the new hub is assigned a different unique_id.
  string unique_id = 12 [json_name="uniqueId"];
  // Output only. The time the hub was last updated.
  .google.protobuf.Timestamp update_time = 13 [json_name="updateTime"];
}

// A hub status entry represents the status of a set of propagated Private Service Connect connections grouped by certain fields.
message HubStatusEntry {
  // The number of propagated Private Service Connect connections with this status. If the `group_by` field was not set in the request message, the value of this field is 1.
  int32 count = 1 [json_name="count"];
  // The fields that this entry is grouped by. This has the same value as the `group_by` field in the request message.
  string group_by = 2 [json_name="groupBy"];
  // The Private Service Connect propagation status.
  PscPropagationStatus psc_propagation_status = 3 [json_name="pscPropagationStatus"];
}

// InterconnectAttachment that this route applies to.
message InterconnectAttachment {
  // Optional. Cloud region to install this policy-based route on interconnect attachment. Use `all` to install it on all interconnect attachments.
  string region = 1 [json_name="region"];
}

// The internal range resource for IPAM operations within a VPC network. Used to represent a private address range along with behavioral characteristics of that range (its usage and peering behavior). Networking resources can link to this range if they are created as belonging to it.
message InternalRange {
  // Time when the internal range was created.
  .google.protobuf.Timestamp create_time = 1 [json_name="createTime"];
  // A description of this resource.
  string description = 2 [json_name="description"];
  // The IP range that this internal range defines. NOTE: IPv6 ranges are limited to usage=EXTERNAL_TO_VPC and peering=FOR_SELF. NOTE: For IPv6 Ranges this field is compulsory, i.e. the address range must be specified explicitly.
  string ip_cidr_range = 3 [json_name="ipCidrRange"];
  // User-defined labels.
  map<string, string> labels = 4 [json_name="labels"];
  // Optional. Must be present if usage is set to FOR_MIGRATION. This field is for internal use.
  Migration migration = 5 [json_name="migration"];
  // Immutable. The name of an internal range. Format: projects/{project}/locations/{location}/internalRanges/{internal_range} See: https://google.aip.dev/122#fields-representing-resource-names
  string name = 6 [json_name="name"];
  // The URL or resource ID of the network in which to reserve the internal range. The network cannot be deleted if there are any reserved internal ranges referring to it. Legacy networks are not supported. For example: https://www.googleapis.com/compute/v1/projects/{project}/locations/global/networks/{network} projects/{project}/locations/global/networks/{network} {network}
  string network = 7 [json_name="network"];
  // Optional. Types of resources that are allowed to overlap with the current internal range.
  repeated string overlaps = 8 [json_name="overlaps"];
  // The type of peering set for this internal range.
  string peering = 9 [json_name="peering"];
  // An alternate to ip_cidr_range. Can be set when trying to create an IPv4 reservation that automatically finds a free range of the given size. If both ip_cidr_range and prefix_length are set, there is an error if the range sizes do not match. Can also be used during updates to change the range size. NOTE: For IPv6 this field only works if ip_cidr_range is set as well, and both fields must match. In other words, with IPv6 this field only works as a redundant parameter.
  int32 prefix_length = 10 [json_name="prefixLength"];
  // Optional. Can be set to narrow down or pick a different address space while searching for a free range. If not set, defaults to the "10.0.0.0/8" address space. This can be used to search in other rfc-1918 address spaces like "172.16.0.0/12" and "192.168.0.0/16" or non-rfc-1918 address spaces used in the VPC.
  repeated string target_cidr_range = 11 [json_name="targetCidrRange"];
  // Time when the internal range was updated.
  .google.protobuf.Timestamp update_time = 12 [json_name="updateTime"];
  // The type of usage set for this InternalRange.
  string usage = 13 [json_name="usage"];
  // Output only. The list of resources that refer to this internal range. Resources that use the internal range for their range allocation are referred to as users of the range. Other resources mark themselves as users while doing so by creating a reference to this internal range. Having a user, based on this reference, prevents deletion of the internal range referred to. Can be empty.
  repeated string users = 14 [json_name="users"];
}

// A collection of VLAN attachment resources. These resources should be redundant attachments that all advertise the same prefixes to Google Cloud. Alternatively, in active/passive configurations, all attachments should be capable of advertising the same prefixes.
message LinkedInterconnectAttachments {
  // Optional. IP ranges allowed to be included during import from hub (does not control transit connectivity). The only allowed value for now is "ALL_IPV4_RANGES".
  repeated string include_import_ranges = 1 [json_name="includeImportRanges"];
  // A value that controls whether site-to-site data transfer is enabled for these resources. Data transfer is available only in [supported locations](https://cloud.google.com/network-connectivity/docs/network-connectivity-center/concepts/locations).
  bool site_to_site_data_transfer = 2 [json_name="siteToSiteDataTransfer"];
  // The URIs of linked interconnect attachment resources
  repeated string uris = 3 [json_name="uris"];
  // Output only. The VPC network where these VLAN attachments are located.
  string vpc_network = 4 [json_name="vpcNetwork"];
}

message LinkedProducerVpcNetwork {
  // Optional. IP ranges encompassing the subnets to be excluded from peering.
  repeated string exclude_export_ranges = 1 [json_name="excludeExportRanges"];
  // Optional. IP ranges allowed to be included from peering.
  repeated string include_export_ranges = 2 [json_name="includeExportRanges"];
  // Immutable. The URI of the Service Consumer VPC that the Producer VPC is peered with.
  string network = 3 [json_name="network"];
  // Immutable. The name of the VPC peering between the Service Consumer VPC and the Producer VPC (defined in the Tenant project) which is added to the NCC hub. This peering must be in ACTIVE state.
  string peering = 4 [json_name="peering"];
  // Output only. The URI of the Producer VPC.
  string producer_network = 5 [json_name="producerNetwork"];
  // Output only. The Service Consumer Network spoke.
  string service_consumer_vpc_spoke = 6 [json_name="serviceConsumerVpcSpoke"];
}

// A collection of router appliance instances. If you configure multiple router appliance instances to receive data from the same set of sites outside of Google Cloud, we recommend that you associate those instances with the same spoke.
message LinkedRouterApplianceInstances {
  // Optional. IP ranges allowed to be included during import from hub (does not control transit connectivity). The only allowed value for now is "ALL_IPV4_RANGES".
  repeated string include_import_ranges = 1 [json_name="includeImportRanges"];
  // The list of router appliance instances.
  repeated RouterApplianceInstance instances = 2 [json_name="instances"];
  // A value that controls whether site-to-site data transfer is enabled for these resources. Data transfer is available only in [supported locations](https://cloud.google.com/network-connectivity/docs/network-connectivity-center/concepts/locations).
  bool site_to_site_data_transfer = 3 [json_name="siteToSiteDataTransfer"];
  // Output only. The VPC network where these router appliance instances are located.
  string vpc_network = 4 [json_name="vpcNetwork"];
}

// An existing VPC network.
message LinkedVpcNetwork {
  // Optional. IP ranges encompassing the subnets to be excluded from peering.
  repeated string exclude_export_ranges = 1 [json_name="excludeExportRanges"];
  // Optional. IP ranges allowed to be included from peering.
  repeated string include_export_ranges = 2 [json_name="includeExportRanges"];
  // Output only. The list of Producer VPC spokes that this VPC spoke is a service consumer VPC spoke for. These producer VPCs are connected through VPC peering to this spoke's backing VPC network.
  repeated string producer_vpc_spokes = 3 [json_name="producerVpcSpokes"];
  // Required. The URI of the VPC network resource.
  string uri = 4 [json_name="uri"];
}

// A collection of Cloud VPN tunnel resources. These resources should be redundant HA VPN tunnels that all advertise the same prefixes to Google Cloud. Alternatively, in a passive/active configuration, all tunnels should be capable of advertising the same prefixes.
message LinkedVpnTunnels {
  // Optional. IP ranges allowed to be included during import from hub (does not control transit connectivity). The only allowed value for now is "ALL_IPV4_RANGES".
  repeated string include_import_ranges = 1 [json_name="includeImportRanges"];
  // A value that controls whether site-to-site data transfer is enabled for these resources. Data transfer is available only in [supported locations](https://cloud.google.com/network-connectivity/docs/network-connectivity-center/concepts/locations).
  bool site_to_site_data_transfer = 2 [json_name="siteToSiteDataTransfer"];
  // The URIs of linked VPN tunnel resources.
  repeated string uris = 3 [json_name="uris"];
  // Output only. The VPC network where these VPN tunnels are located.
  string vpc_network = 4 [json_name="vpcNetwork"];
}

// Response for HubService.ListGroups method.
message ListGroupsResponse {
  // The requested groups.
  repeated Group groups = 1 [json_name="groups"];
  // The token for the next page of the response. To see more results, use this value as the page_token for your next request. If this value is empty, there are no more results.
  string next_page_token = 2 [json_name="nextPageToken"];
  // Hubs that could not be reached.
  repeated string unreachable = 3 [json_name="unreachable"];
}

// The response for HubService.ListHubSpokes.
message ListHubSpokesResponse {
  // The token for the next page of the response. To see more results, use this value as the page_token for your next request. If this value is empty, there are no more results.
  string next_page_token = 1 [json_name="nextPageToken"];
  // The requested spokes. The spoke fields can be partially populated based on the `view` field in the request message.
  repeated Spoke spokes = 2 [json_name="spokes"];
  // Locations that could not be reached.
  repeated string unreachable = 3 [json_name="unreachable"];
}

// Response for HubService.ListHubs method.
message ListHubsResponse {
  // The requested hubs.
  repeated Hub hubs = 1 [json_name="hubs"];
  // The token for the next page of the response. To see more results, use this value as the page_token for your next request. If this value is empty, there are no more results.
  string next_page_token = 2 [json_name="nextPageToken"];
  // Locations that could not be reached.
  repeated string unreachable = 3 [json_name="unreachable"];
}

// Response for InternalRange.ListInternalRanges
message ListInternalRangesResponse {
  // Internal ranges to be returned.
  repeated InternalRange internal_ranges = 1 [json_name="internalRanges"];
  // The next pagination token in the List response. It should be used as page_token for the following request. An empty value means no more result.
  string next_page_token = 2 [json_name="nextPageToken"];
  // Locations that could not be reached.
  repeated string unreachable = 3 [json_name="unreachable"];
}

// The response message for Locations.ListLocations.
message ListLocationsResponse {
  // A list of locations that matches the specified filter in the request.
  repeated Location locations = 1 [json_name="locations"];
  // The standard List next-page token.
  string next_page_token = 2 [json_name="nextPageToken"];
}

// Response for PolicyBasedRoutingService.ListPolicyBasedRoutes method.
message ListPolicyBasedRoutesResponse {
  // The next pagination token in the List response. It should be used as page_token for the following request. An empty value means no more result.
  string next_page_token = 1 [json_name="nextPageToken"];
  // Policy-based routes to be returned.
  repeated PolicyBasedRoute policy_based_routes = 2 [json_name="policyBasedRoutes"];
  // Locations that could not be reached.
  repeated string unreachable = 3 [json_name="unreachable"];
}

// Response for ListRegionalEndpoints.
message ListRegionalEndpointsResponse {
  // The next pagination token in the List response. It should be used as page_token for the following request. An empty value means no more result.
  string next_page_token = 1 [json_name="nextPageToken"];
  // Regional endpoints to be returned.
  repeated RegionalEndpoint regional_endpoints = 2 [json_name="regionalEndpoints"];
  // Locations that could not be reached.
  repeated string unreachable = 3 [json_name="unreachable"];
}

// Response for HubService.ListRouteTables method.
message ListRouteTablesResponse {
  // The token for the next page of the response. To see more results, use this value as the page_token for your next request. If this value is empty, there are no more results.
  string next_page_token = 1 [json_name="nextPageToken"];
  // The requested route tables.
  repeated RouteTable route_tables = 2 [json_name="routeTables"];
  // Hubs that could not be reached.
  repeated string unreachable = 3 [json_name="unreachable"];
}

// Response for HubService.ListRoutes method.
message ListRoutesResponse {
  // The token for the next page of the response. To see more results, use this value as the page_token for your next request. If this value is empty, there are no more results.
  string next_page_token = 1 [json_name="nextPageToken"];
  // The requested routes.
  repeated Route routes = 2 [json_name="routes"];
  // RouteTables that could not be reached.
  repeated string unreachable = 3 [json_name="unreachable"];
}

// Response for ListServiceClasses.
message ListServiceClassesResponse {
  // The next pagination token in the List response. It should be used as page_token for the following request. An empty value means no more result.
  string next_page_token = 1 [json_name="nextPageToken"];
  // ServiceClasses to be returned.
  repeated ServiceClass service_classes = 2 [json_name="serviceClasses"];
  // Locations that could not be reached.
  repeated string unreachable = 3 [json_name="unreachable"];
}

// Response for ListServiceConnectionMaps.
message ListServiceConnectionMapsResponse {
  // The next pagination token in the List response. It should be used as page_token for the following request. An empty value means no more result.
  string next_page_token = 1 [json_name="nextPageToken"];
  // ServiceConnectionMaps to be returned.
  repeated ServiceConnectionMap service_connection_maps = 2 [json_name="serviceConnectionMaps"];
  // Locations that could not be reached.
  repeated string unreachable = 3 [json_name="unreachable"];
}

// Response for ListServiceConnectionPolicies.
message ListServiceConnectionPoliciesResponse {
  // The next pagination token in the List response. It should be used as page_token for the following request. An empty value means no more result.
  string next_page_token = 1 [json_name="nextPageToken"];
  // ServiceConnectionPolicies to be returned.
  repeated ServiceConnectionPolicy service_connection_policies = 2 [json_name="serviceConnectionPolicies"];
  // Locations that could not be reached.
  repeated string unreachable = 3 [json_name="unreachable"];
}

// Response for ListServiceConnectionTokens.
message ListServiceConnectionTokensResponse {
  // The next pagination token in the List response. It should be used as page_token for the following request. An empty value means no more result.
  string next_page_token = 1 [json_name="nextPageToken"];
  // ServiceConnectionTokens to be returned.
  repeated ServiceConnectionToken service_connection_tokens = 2 [json_name="serviceConnectionTokens"];
  // Locations that could not be reached.
  repeated string unreachable = 3 [json_name="unreachable"];
}

// The response for HubService.ListSpokes.
message ListSpokesResponse {
  // The token for the next page of the response. To see more results, use this value as the page_token for your next request. If this value is empty, there are no more results.
  string next_page_token = 1 [json_name="nextPageToken"];
  // The requested spokes.
  repeated Spoke spokes = 2 [json_name="spokes"];
  // Locations that could not be reached.
  repeated string unreachable = 3 [json_name="unreachable"];
}

// A resource that represents a Google Cloud location.
message Location {
  // The friendly name for this location, typically a nearby city name. For example, "Tokyo".
  string display_name = 1 [json_name="displayName"];
  // Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-east1"}
  map<string, string> labels = 2 [json_name="labels"];
  // The canonical id for this location. For example: `"us-east1"`.
  string location_id = 3 [json_name="locationId"];
  // Service-specific metadata. For example the available capacity at the given location.
  map<string, .google.protobuf.Any> metadata = 4 [json_name="metadata"];
  // Resource name for the location, which may vary between implementations. For example: `"projects/example-project/locations/us-east1"`
  string name = 5 [json_name="name"];
}

// Metadata about locations
message LocationMetadata {
  // List of supported features
  repeated string location_features = 1 [json_name="locationFeatures"];
}

// Specification for migration with source and target resource names.
message Migration {
  // Immutable. Resource path as an URI of the source resource, for example a subnet. The project for the source resource should match the project for the InternalRange. An example: /projects/{project}/regions/{region}/subnetworks/{subnet}
  string source = 1 [json_name="source"];
  // Immutable. Resource path of the target resource. The target project can be different, as in the cases when migrating to peer networks. The resource For example: /projects/{project}/regions/{region}/subnetworks/{subnet}
  string target = 2 [json_name="target"];
}

// A route next hop that leads to an interconnect attachment resource.
message NextHopInterconnectAttachment {
  // Indicates whether site-to-site data transfer is allowed for this interconnect attachment resource. Data transfer is available only in [supported locations](https://cloud.google.com/network-connectivity/docs/network-connectivity-center/concepts/locations).
  bool site_to_site_data_transfer = 1 [json_name="siteToSiteDataTransfer"];
  // The URI of the interconnect attachment resource.
  string uri = 2 [json_name="uri"];
  // The VPC network where this interconnect attachment is located.
  string vpc_network = 3 [json_name="vpcNetwork"];
}

// A route next hop that leads to a Router appliance instance.
message NextHopRouterApplianceInstance {
  // Indicates whether site-to-site data transfer is allowed for this Router appliance instance resource. Data transfer is available only in [supported locations](https://cloud.google.com/network-connectivity/docs/network-connectivity-center/concepts/locations).
  bool site_to_site_data_transfer = 1 [json_name="siteToSiteDataTransfer"];
  // The URI of the Router appliance instance.
  string uri = 2 [json_name="uri"];
  // The VPC network where this VM is located.
  string vpc_network = 3 [json_name="vpcNetwork"];
}

// A route next hop that leads to a VPN tunnel resource.
message NextHopVPNTunnel {
  // Indicates whether site-to-site data transfer is allowed for this VPN tunnel resource. Data transfer is available only in [supported locations](https://cloud.google.com/network-connectivity/docs/network-connectivity-center/concepts/locations).
  bool site_to_site_data_transfer = 1 [json_name="siteToSiteDataTransfer"];
  // The URI of the VPN tunnel resource.
  string uri = 2 [json_name="uri"];
  // The VPC network where this VPN tunnel is located.
  string vpc_network = 3 [json_name="vpcNetwork"];
}

message NextHopVpcNetwork {
  // The URI of the VPC network resource
  string uri = 1 [json_name="uri"];
}

// Represents the metadata of the long-running operation.
message OperationMetadata {
  // Output only. API version used to start the operation.
  string api_version = 1 [json_name="apiVersion"];
  // Output only. The time the operation was created.
  .google.protobuf.Timestamp create_time = 2 [json_name="createTime"];
  // Output only. The time the operation finished running.
  .google.protobuf.Timestamp end_time = 3 [json_name="endTime"];
  // Output only. Identifies whether the user has requested cancellation of the operation. Operations that have been cancelled successfully have google.longrunning.Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
  bool requested_cancellation = 4 [json_name="requestedCancellation"];
  // Output only. Human-readable status of the operation, if any.
  string status_message = 5 [json_name="statusMessage"];
  // Output only. Server-defined resource path for the target of the operation.
  string target = 6 [json_name="target"];
  // Output only. Name of the verb executed by the operation.
  string verb = 7 [json_name="verb"];
}

// An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** ``` { "bindings": [ { "role": "roles/resourcemanager.organizationAdmin", "members": [ "user:mike@example.com", "group:admins@example.com", "domain:google.com", "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, { "role": "roles/resourcemanager.organizationViewer", "members": [ "user:eve@example.com" ], "condition": { "title": "expirable access", "description": "Does not grant access after Sep 2020", "expression": "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag": "BwWWja0YfJA=", "version": 3 } ``` **YAML example:** ``` bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 ``` For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).
message Policy {
  // Specifies cloud audit logging configuration for this policy.
  repeated AuditConfig audit_configs = 1 [json_name="auditConfigs"];
  // Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.
  repeated Binding bindings = 2 [json_name="bindings"];
  // `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.
  bytes etag = 3 [json_name="etag"];
  // Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
  int32 version = 4 [json_name="version"];
}

// Policy-based routes route L4 network traffic based on not just destination IP address, but also source IP address, protocol, and more. If a policy-based route conflicts with other types of routes, the policy-based route always takes precedence.
message PolicyBasedRoute {
  // Output only. Time when the policy-based route was created.
  .google.protobuf.Timestamp create_time = 1 [json_name="createTime"];
  // Optional. An optional description of this resource. Provide this field when you create the resource.
  string description = 2 [json_name="description"];
  // Required. The filter to match L4 traffic.
  Filter filter = 3 [json_name="filter"];
  // Optional. The interconnect attachments that this policy-based route applies to.
  InterconnectAttachment interconnect_attachment = 4 [json_name="interconnectAttachment"];
  // Output only. Type of this resource. Always networkconnectivity#policyBasedRoute for policy-based Route resources.
  string kind = 5 [json_name="kind"];
  // User-defined labels.
  map<string, string> labels = 6 [json_name="labels"];
  // Immutable. A unique name of the resource in the form of `projects/{project_number}/locations/global/PolicyBasedRoutes/{policy_based_route_id}`
  string name = 7 [json_name="name"];
  // Required. Fully-qualified URL of the network that this route applies to, for example: projects/my-project/global/networks/my-network.
  string network = 8 [json_name="network"];
  // Optional. The IP address of a global-access-enabled L4 ILB that is the next hop for matching packets. For this version, only nextHopIlbIp is supported.
  string next_hop_ilb_ip = 9 [json_name="nextHopIlbIp"];
  // Optional. Other routes that will be referenced to determine the next hop of the packet.
  string next_hop_other_routes = 10 [json_name="nextHopOtherRoutes"];
  // Optional. The priority of this policy-based route. Priority is used to break ties in cases where there are more than one matching policy-based routes found. In cases where multiple policy-based routes are matched, the one with the lowest-numbered priority value wins. The default value is 1000. The priority value must be from 1 to 65535, inclusive.
  int32 priority = 11 [json_name="priority"];
  // Output only. Server-defined fully-qualified URL for this resource.
  string self_link = 12 [json_name="selfLink"];
  // Output only. Time when the policy-based route was updated.
  .google.protobuf.Timestamp update_time = 13 [json_name="updateTime"];
  // Optional. VM instances that this policy-based route applies to.
  VirtualMachine virtual_machine = 14 [json_name="virtualMachine"];
  // Output only. If potential misconfigurations are detected for this route, this field will be populated with warning messages.
  repeated Warnings warnings = 15 [json_name="warnings"];
}

// The PSC configurations on producer side.
message ProducerPscConfig {
  // The resource path of a service attachment. Example: projects/{projectNumOrId}/regions/{region}/serviceAttachments/{resourceId}.
  string service_attachment_uri = 1 [json_name="serviceAttachmentUri"];
}

// Configuration used for Private Service Connect connections. Used when Infrastructure is PSC.
message PscConfig {
  // Optional. List of Projects, Folders, or Organizations from where the Producer instance can be within. For example, a network administrator can provide both 'organizations/foo' and 'projects/bar' as allowed_google_producers_resource_hierarchy_levels. This allowlists this network to connect with any Producer instance within the 'foo' organization or the 'bar' project. By default, allowed_google_producers_resource_hierarchy_level is empty. The format for each allowed_google_producers_resource_hierarchy_level is / where is one of 'projects', 'folders', or 'organizations' and is either the ID or the number of the resource type. Format for each allowed_google_producers_resource_hierarchy_level value: 'projects/' or 'folders/' or 'organizations/' Eg. [projects/my-project-id, projects/567, folders/891, organizations/123]
  repeated string allowed_google_producers_resource_hierarchy_level = 1 [json_name="allowedGoogleProducersResourceHierarchyLevel"];
  // Optional. Max number of PSC connections for this policy.
  int64 limit = 2 [json_name="limit"];
  // Required. ProducerInstanceLocation is used to specify which authorization mechanism to use to determine which projects the Producer instance can be within.
  string producer_instance_location = 3 [json_name="producerInstanceLocation"];
  // The resource paths of subnetworks to use for IP address management. Example: projects/{projectNumOrId}/regions/{region}/subnetworks/{resourceId}.
  repeated string subnetworks = 4 [json_name="subnetworks"];
}

// Information about a specific Private Service Connect connection.
message PscConnection {
  // The resource reference of the consumer address.
  string consumer_address = 1 [json_name="consumerAddress"];
  // The resource reference of the PSC Forwarding Rule within the consumer VPC.
  string consumer_forwarding_rule = 2 [json_name="consumerForwardingRule"];
  // The project where the PSC connection is created.
  string consumer_target_project = 3 [json_name="consumerTargetProject"];
  // The most recent error during operating this connection. Deprecated, please use error_info instead.
  GoogleRpcStatus error = 4 [json_name="error"];
  // Output only. The error info for the latest error during operating this connection.
  GoogleRpcErrorInfo error_info = 5 [json_name="errorInfo"];
  // The error type indicates whether the error is consumer facing, producer facing or system internal.
  string error_type = 6 [json_name="errorType"];
  // The last Compute Engine operation to setup PSC connection.
  string gce_operation = 7 [json_name="gceOperation"];
  // The requested IP version for the PSC connection.
  string ip_version = 8 [json_name="ipVersion"];
  // Immutable. Deprecated. Use producer_instance_metadata instead. An immutable identifier for the producer instance.
  string producer_instance_id = 9 [json_name="producerInstanceId"];
  // Immutable. An immutable map for the producer instance metadata.
  map<string, string> producer_instance_metadata = 10 [json_name="producerInstanceMetadata"];
  // The PSC connection id of the PSC forwarding rule.
  string psc_connection_id = 11 [json_name="pscConnectionId"];
  // Output only. The URI of the subnetwork selected to allocate IP address for this connection.
  string selected_subnetwork = 12 [json_name="selectedSubnetwork"];
  // Output only. [Output only] The service class associated with this PSC Connection. The value is derived from the SCPolicy and matches the service class name provided by the customer.
  string service_class = 13 [json_name="serviceClass"];
  // State of the PSC Connection
  string state = 14 [json_name="state"];
}

// The status of one or more propagated Private Service Connect connections in a hub.
message PscPropagationStatus {
  // The propagation status.
  string code = 1 [json_name="code"];
  // The human-readable summary of the Private Service Connect connection propagation status.
  string message = 2 [json_name="message"];
  // The name of the forwarding rule exported to the hub.
  string source_forwarding_rule = 3 [json_name="sourceForwardingRule"];
  // The name of the group that the source spoke belongs to.
  string source_group = 4 [json_name="sourceGroup"];
  // The name of the spoke that the source forwarding rule belongs to.
  string source_spoke = 5 [json_name="sourceSpoke"];
  // The name of the group that the target spoke belongs to.
  string target_group = 6 [json_name="targetGroup"];
  // The name of the spoke that the source forwarding rule propagates to.
  string target_spoke = 7 [json_name="targetSpoke"];
}

// The response for HubService.QueryHubStatus.
message QueryHubStatusResponse {
  // The list of hub status.
  repeated HubStatusEntry hub_status_entries = 1 [json_name="hubStatusEntries"];
  // The token for the next page of the response. To see more results, use this value as the page_token for your next request. If this value is empty, there are no more results.
  string next_page_token = 2 [json_name="nextPageToken"];
}

// The RegionalEndpoint resource.
message RegionalEndpoint {
  // Required. The access type of this regional endpoint. This field is reflected in the PSC Forwarding Rule configuration to enable global access.
  string access_type = 1 [json_name="accessType"];
  // Optional. The IP Address of the Regional Endpoint. When no address is provided, an IP from the subnetwork is allocated. Use one of the following formats: * IPv4 address as in `10.0.0.1` * Address resource URI as in `projects/{project}/regions/{region}/addresses/{address_name}` for an IPv4 or IPv6 address.
  string address = 2 [json_name="address"];
  // Output only. Time when the RegionalEndpoint was created.
  .google.protobuf.Timestamp create_time = 3 [json_name="createTime"];
  // Optional. A description of this resource.
  string description = 4 [json_name="description"];
  // Output only. The literal IP address of the PSC Forwarding Rule created on behalf of the customer. This field is deprecated. Use address instead.
  string ip_address = 5 [json_name="ipAddress"];
  // User-defined labels.
  map<string, string> labels = 6 [json_name="labels"];
  // Output only. The name of a RegionalEndpoint. Format: `projects/{project}/locations/{location}/regionalEndpoints/{regional_endpoint}`.
  string name = 7 [json_name="name"];
  // The name of the VPC network for this private regional endpoint. Format: `projects/{project}/global/networks/{network}`
  string network = 8 [json_name="network"];
  // Output only. The resource reference of the PSC Forwarding Rule created on behalf of the customer. Format: `//compute.googleapis.com/projects/{project}/regions/{region}/forwardingRules/{forwarding_rule_name}`
  string psc_forwarding_rule = 9 [json_name="pscForwardingRule"];
  // The name of the subnetwork from which the IP address will be allocated. Format: `projects/{project}/regions/{region}/subnetworks/{subnetwork}`
  string subnetwork = 10 [json_name="subnetwork"];
  // Required. The service endpoint this private regional endpoint connects to. Format: `{apiname}.{region}.p.rep.googleapis.com` Example: "cloudkms.us-central1.p.rep.googleapis.com".
  string target_google_api = 11 [json_name="targetGoogleApi"];
  // Output only. Time when the RegionalEndpoint was updated.
  .google.protobuf.Timestamp update_time = 12 [json_name="updateTime"];
}

// The request for HubService.RejectHubSpoke.
message RejectHubSpokeRequest {
  // Optional. Additional information provided by the hub administrator.
  string details = 1 [json_name="details"];
  // Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server knows to ignore the request if it has already been completed. The server guarantees that a request doesn't result in creation of duplicate commitments for at least 60 minutes. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check to see whether the original operation was received. If it was, the server ignores the second request. This behavior prevents clients from mistakenly creating duplicate commitments. The request ID must be a valid UUID, with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
  string request_id = 2 [json_name="requestId"];
  // Required. The URI of the spoke to reject from the hub.
  string spoke_uri = 3 [json_name="spokeUri"];
}

// The response for HubService.RejectHubSpoke.
message RejectHubSpokeResponse {
  // The spoke that was operated on.
  Spoke spoke = 1 [json_name="spoke"];
}

// A route defines a path from VM instances within a spoke to a specific destination resource. Only VPC spokes have routes.
message Route {
  // Output only. The time the route was created.
  .google.protobuf.Timestamp create_time = 1 [json_name="createTime"];
  // An optional description of the route.
  string description = 2 [json_name="description"];
  // The destination IP address range.
  string ip_cidr_range = 3 [json_name="ipCidrRange"];
  // Optional labels in key-value pair format. For more information about labels, see [Requirements for labels](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements).
  map<string, string> labels = 4 [json_name="labels"];
  // Output only. The origin location of the route. Uses the following form: "projects/{project}/locations/{location}" Example: projects/1234/locations/us-central1
  string location = 5 [json_name="location"];
  // Immutable. The name of the route. Route names must be unique. Route names use the following form: `projects/{project_number}/locations/global/hubs/{hub}/routeTables/{route_table_id}/routes/{route_id}`
  string name = 6 [json_name="name"];
  // Immutable. The next-hop VLAN attachment for packets on this route.
  NextHopInterconnectAttachment next_hop_interconnect_attachment = 7 [json_name="nextHopInterconnectAttachment"];
  // Immutable. The next-hop Router appliance instance for packets on this route.
  NextHopRouterApplianceInstance next_hop_router_appliance_instance = 8 [json_name="nextHopRouterApplianceInstance"];
  // Immutable. The destination VPC network for packets on this route.
  NextHopVpcNetwork next_hop_vpc_network = 9 [json_name="nextHopVpcNetwork"];
  // Immutable. The next-hop VPN tunnel for packets on this route.
  NextHopVPNTunnel next_hop_vpn_tunnel = 10 [json_name="nextHopVpnTunnel"];
  // Output only. The priority of this route. Priority is used to break ties in cases where a destination matches more than one route. In these cases the route with the lowest-numbered priority value wins.
  int64 priority = 11 [json_name="priority"];
  // Immutable. The spoke that this route leads to. Example: projects/12345/locations/global/spokes/SPOKE
  string spoke = 12 [json_name="spoke"];
  // Output only. The current lifecycle state of the route.
  string state = 13 [json_name="state"];
  // Output only. The route's type. Its type is determined by the properties of its IP address range.
  string type = 14 [json_name="type"];
  // Output only. The Google-generated UUID for the route. This value is unique across all Network Connectivity Center route resources. If a route is deleted and another with the same name is created, the new route is assigned a different `uid`.
  string uid = 15 [json_name="uid"];
  // Output only. The time the route was last updated.
  .google.protobuf.Timestamp update_time = 16 [json_name="updateTime"];
}

message RouteTable {
  // Output only. The time the route table was created.
  .google.protobuf.Timestamp create_time = 1 [json_name="createTime"];
  // An optional description of the route table.
  string description = 2 [json_name="description"];
  // Optional labels in key-value pair format. For more information about labels, see [Requirements for labels](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements).
  map<string, string> labels = 3 [json_name="labels"];
  // Immutable. The name of the route table. Route table names must be unique. They use the following form: `projects/{project_number}/locations/global/hubs/{hub}/routeTables/{route_table_id}`
  string name = 4 [json_name="name"];
  // Output only. The current lifecycle state of this route table.
  string state = 5 [json_name="state"];
  // Output only. The Google-generated UUID for the route table. This value is unique across all route table resources. If a route table is deleted and another with the same name is created, the new route table is assigned a different `uid`.
  string uid = 6 [json_name="uid"];
  // Output only. The time the route table was last updated.
  .google.protobuf.Timestamp update_time = 7 [json_name="updateTime"];
}

// A router appliance instance is a Compute Engine virtual machine (VM) instance that acts as a BGP speaker. A router appliance instance is specified by the URI of the VM and the internal IP address of one of the VM's network interfaces.
message RouterApplianceInstance {
  // The IP address on the VM to use for peering.
  string ip_address = 1 [json_name="ipAddress"];
  // The URI of the VM.
  string virtual_machine = 2 [json_name="virtualMachine"];
}

// RoutingVPC contains information about the VPC networks associated with the spokes of a Network Connectivity Center hub.
message RoutingVPC {
  // Output only. If true, indicates that this VPC network is currently associated with spokes that use the data transfer feature (spokes where the site_to_site_data_transfer field is set to true). If you create new spokes that use data transfer, they must be associated with this VPC network. At most, one VPC network will have this field set to true.
  bool required_for_new_site_to_site_data_transfer_spokes = 1 [json_name="requiredForNewSiteToSiteDataTransferSpokes"];
  // The URI of the VPC network.
  string uri = 2 [json_name="uri"];
}

// The ServiceClass resource.
message ServiceClass {
  // Output only. Time when the ServiceClass was created.
  .google.protobuf.Timestamp create_time = 1 [json_name="createTime"];
  // A description of this resource.
  string description = 2 [json_name="description"];
  // Optional. The etag is computed by the server, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
  string etag = 3 [json_name="etag"];
  // User-defined labels.
  map<string, string> labels = 4 [json_name="labels"];
  // Immutable. The name of a ServiceClass resource. Format: projects/{project}/locations/{location}/serviceClasses/{service_class} See: https://google.aip.dev/122#fields-representing-resource-names
  string name = 5 [json_name="name"];
  // Output only. The generated service class name. Use this name to refer to the Service class in Service Connection Maps and Service Connection Policies.
  string service_class = 6 [json_name="serviceClass"];
  // Output only. Time when the ServiceClass was updated.
  .google.protobuf.Timestamp update_time = 7 [json_name="updateTime"];
}

// The ServiceConnectionMap resource.
message ServiceConnectionMap {
  // The PSC configurations on consumer side.
  repeated ConsumerPscConfig consumer_psc_configs = 1 [json_name="consumerPscConfigs"];
  // Output only. PSC connection details on consumer side.
  repeated ConsumerPscConnection consumer_psc_connections = 2 [json_name="consumerPscConnections"];
  // Output only. Time when the ServiceConnectionMap was created.
  .google.protobuf.Timestamp create_time = 3 [json_name="createTime"];
  // A description of this resource.
  string description = 4 [json_name="description"];
  // Optional. The etag is computed by the server, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
  string etag = 5 [json_name="etag"];
  // Output only. The infrastructure used for connections between consumers/producers.
  string infrastructure = 6 [json_name="infrastructure"];
  // User-defined labels.
  map<string, string> labels = 7 [json_name="labels"];
  // Immutable. The name of a ServiceConnectionMap. Format: projects/{project}/locations/{location}/serviceConnectionMaps/{service_connection_map} See: https://google.aip.dev/122#fields-representing-resource-names
  string name = 8 [json_name="name"];
  // The PSC configurations on producer side.
  repeated ProducerPscConfig producer_psc_configs = 9 [json_name="producerPscConfigs"];
  // The service class identifier this ServiceConnectionMap is for. The user of ServiceConnectionMap create API needs to have networkconnecitivty.serviceclasses.use iam permission for the service class.
  string service_class = 10 [json_name="serviceClass"];
  // Output only. The service class uri this ServiceConnectionMap is for.
  string service_class_uri = 11 [json_name="serviceClassUri"];
  // The token provided by the consumer. This token authenticates that the consumer can create a connection within the specified project and network.
  string token = 12 [json_name="token"];
  // Output only. Time when the ServiceConnectionMap was updated.
  .google.protobuf.Timestamp update_time = 13 [json_name="updateTime"];
}

// The ServiceConnectionPolicy resource.
message ServiceConnectionPolicy {
  // Output only. Time when the ServiceConnectionPolicy was created.
  .google.protobuf.Timestamp create_time = 1 [json_name="createTime"];
  // A description of this resource.
  string description = 2 [json_name="description"];
  // Optional. The etag is computed by the server, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
  string etag = 3 [json_name="etag"];
  // Output only. The type of underlying resources used to create the connection.
  string infrastructure = 4 [json_name="infrastructure"];
  // User-defined labels.
  map<string, string> labels = 5 [json_name="labels"];
  // Immutable. The name of a ServiceConnectionPolicy. Format: projects/{project}/locations/{location}/serviceConnectionPolicies/{service_connection_policy} See: https://google.aip.dev/122#fields-representing-resource-names
  string name = 6 [json_name="name"];
  // The resource path of the consumer network. Example: - projects/{projectNumOrId}/global/networks/{resourceId}.
  string network = 7 [json_name="network"];
  // Configuration used for Private Service Connect connections. Used when Infrastructure is PSC.
  PscConfig psc_config = 8 [json_name="pscConfig"];
  // Output only. [Output only] Information about each Private Service Connect connection.
  repeated PscConnection psc_connections = 9 [json_name="pscConnections"];
  // The service class identifier for which this ServiceConnectionPolicy is for. The service class identifier is a unique, symbolic representation of a ServiceClass. It is provided by the Service Producer. Google services have a prefix of gcp or google-cloud. For example, gcp-memorystore-redis or google-cloud-sql. 3rd party services do not. For example, test-service-a3dfcx.
  string service_class = 10 [json_name="serviceClass"];
  // Output only. Time when the ServiceConnectionPolicy was updated.
  .google.protobuf.Timestamp update_time = 11 [json_name="updateTime"];
}

// The ServiceConnectionToken resource.
message ServiceConnectionToken {
  // Output only. Time when the ServiceConnectionToken was created.
  .google.protobuf.Timestamp create_time = 1 [json_name="createTime"];
  // A description of this resource.
  string description = 2 [json_name="description"];
  // Optional. The etag is computed by the server, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
  string etag = 3 [json_name="etag"];
  // Output only. The time to which this token is valid.
  .google.protobuf.Timestamp expire_time = 4 [json_name="expireTime"];
  // User-defined labels.
  map<string, string> labels = 5 [json_name="labels"];
  // Immutable. The name of a ServiceConnectionToken. Format: projects/{project}/locations/{location}/ServiceConnectionTokens/{service_connection_token} See: https://google.aip.dev/122#fields-representing-resource-names
  string name = 6 [json_name="name"];
  // The resource path of the network associated with this token. Example: projects/{projectNumOrId}/global/networks/{resourceId}.
  string network = 7 [json_name="network"];
  // Output only. The token generated by Automation.
  string token = 8 [json_name="token"];
  // Output only. Time when the ServiceConnectionToken was updated.
  .google.protobuf.Timestamp update_time = 9 [json_name="updateTime"];
}

// Request message for `SetIamPolicy` method.
message SetIamPolicyRequest {
  // REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.
  Policy policy = 1 [json_name="policy"];
  // OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: "bindings, etag"`
  string update_mask = 2 [json_name="updateMask"];
}

// A Network Connectivity Center spoke represents one or more network connectivity resources. When you create a spoke, you associate it with a hub. You must also identify a value for exactly one of the following fields: * linked_vpn_tunnels * linked_interconnect_attachments * linked_router_appliance_instances * linked_vpc_network
message Spoke {
  // Output only. The time the spoke was created.
  .google.protobuf.Timestamp create_time = 1 [json_name="createTime"];
  // Optional. An optional description of the spoke.
  string description = 2 [json_name="description"];
  // Optional. The name of the group that this spoke is associated with.
  string group = 3 [json_name="group"];
  // Immutable. The name of the hub that this spoke is attached to.
  string hub = 4 [json_name="hub"];
  // Optional labels in key-value pair format. For more information about labels, see [Requirements for labels](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements).
  map<string, string> labels = 5 [json_name="labels"];
  // Optional. VLAN attachments that are associated with the spoke.
  LinkedInterconnectAttachments linked_interconnect_attachments = 6 [json_name="linkedInterconnectAttachments"];
  // Optional. The linked producer VPC that is associated with the spoke.
  LinkedProducerVpcNetwork linked_producer_vpc_network = 7 [json_name="linkedProducerVpcNetwork"];
  // Optional. Router appliance instances that are associated with the spoke.
  LinkedRouterApplianceInstances linked_router_appliance_instances = 8 [json_name="linkedRouterApplianceInstances"];
  // Optional. VPC network that is associated with the spoke.
  LinkedVpcNetwork linked_vpc_network = 9 [json_name="linkedVpcNetwork"];
  // Optional. VPN tunnels that are associated with the spoke.
  LinkedVpnTunnels linked_vpn_tunnels = 10 [json_name="linkedVpnTunnels"];
  // Immutable. The name of the spoke. Spoke names must be unique. They use the following form: `projects/{project_number}/locations/{region}/spokes/{spoke_id}`
  string name = 11 [json_name="name"];
  // Output only. The reasons for current state of the spoke.
  repeated StateReason reasons = 12 [json_name="reasons"];
  // Output only. The type of resource associated with the spoke.
  string spoke_type = 13 [json_name="spokeType"];
  // Output only. The current lifecycle state of this spoke.
  string state = 14 [json_name="state"];
  // Output only. The Google-generated UUID for the spoke. This value is unique across all spoke resources. If a spoke is deleted and another with the same name is created, the new spoke is assigned a different `unique_id`.
  string unique_id = 15 [json_name="uniqueId"];
  // Output only. The time the spoke was last updated.
  .google.protobuf.Timestamp update_time = 16 [json_name="updateTime"];
}

// The number of spokes that are in a particular state and associated with a given hub.
message SpokeStateCount {
  // Output only. The total number of spokes that are in this state and associated with a given hub.
  int64 count = 1 [json_name="count"];
  // Output only. The state of the spokes.
  string state = 2 [json_name="state"];
}

// The number of spokes in the hub that are inactive for this reason.
message SpokeStateReasonCount {
  // Output only. The total number of spokes that are inactive for a particular reason and associated with a given hub.
  int64 count = 1 [json_name="count"];
  // Output only. The reason that a spoke is inactive.
  string state_reason_code = 2 [json_name="stateReasonCode"];
}

// Summarizes information about the spokes associated with a hub. The summary includes a count of spokes according to type and according to state. If any spokes are inactive, the summary also lists the reasons they are inactive, including a count for each reason.
message SpokeSummary {
  // Output only. Counts the number of spokes that are in each state and associated with a given hub.
  repeated SpokeStateCount spoke_state_counts = 1 [json_name="spokeStateCounts"];
  // Output only. Counts the number of spokes that are inactive for each possible reason and associated with a given hub.
  repeated SpokeStateReasonCount spoke_state_reason_counts = 2 [json_name="spokeStateReasonCounts"];
  // Output only. Counts the number of spokes of each type that are associated with a specific hub.
  repeated SpokeTypeCount spoke_type_counts = 3 [json_name="spokeTypeCounts"];
}

// The number of spokes of a given type that are associated with a specific hub. The type indicates what kind of resource is associated with the spoke.
message SpokeTypeCount {
  // Output only. The total number of spokes of this type that are associated with the hub.
  int64 count = 1 [json_name="count"];
  // Output only. The type of the spokes.
  string spoke_type = 2 [json_name="spokeType"];
}

// The reason a spoke is inactive.
message StateReason {
  // The code associated with this reason.
  string code = 1 [json_name="code"];
  // Human-readable details about this reason.
  string message = 2 [json_name="message"];
  // Additional information provided by the user in the RejectSpoke call.
  string user_details = 3 [json_name="userDetails"];
}

// Request message for `TestIamPermissions` method.
message TestIamPermissionsRequest {
  // The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
  repeated string permissions = 1 [json_name="permissions"];
}

// Response message for `TestIamPermissions` method.
message TestIamPermissionsResponse {
  // A subset of `TestPermissionsRequest.permissions` that the caller is allowed.
  repeated string permissions = 1 [json_name="permissions"];
}

// VM instances that this policy-based route applies to.
message VirtualMachine {
  // Optional. A list of VM instance tags that this policy-based route applies to. VM instances that have ANY of tags specified here installs this PBR.
  repeated string tags = 1 [json_name="tags"];
}

// Informational warning message.
message Warnings {
  // Output only. A warning code, if applicable.
  string code = 1 [json_name="code"];
  // Output only. Metadata about this warning in key: value format. The key should provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement.
  map<string, string> data = 2 [json_name="data"];
  // Output only. A human-readable description of the warning code.
  string warning_message = 3 [json_name="warningMessage"];
}

message GetProjectsLocationRequest {
  string name = 1;
}

message ListProjectsLocationsRequest {
  string filter = 1;
  string name = 2;
  int32 page_size = 3;
  string page_token = 4;
}

message AcceptSpokeProjectsLocationsGlobalHubRequest {
  string name = 1;
  AcceptHubSpokeRequest projects_locations_global_hub = 2;
}

message CreateProjectsLocationsGlobalHubRequest {
  string hub_id = 1;
  string parent = 2;
  string request_id = 3;
  Hub projects_locations_global_hub = 4;
}

message DeleteProjectsLocationsGlobalHubRequest {
  string name = 1;
  string request_id = 2;
}

message GetProjectsLocationsGlobalHubRequest {
  string name = 1;
}

message ListProjectsLocationsGlobalHubsRequest {
  string filter = 1;
  string order_by = 2;
  int32 page_size = 3;
  string page_token = 4;
  string parent = 5;
}

message ListSpokesProjectsLocationsGlobalHubRequest {
  string filter = 1;
  string name = 2;
  string order_by = 3;
  int32 page_size = 4;
  string page_token = 5;
  string spoke_locations = 6;
  string view = 7;
}

message PatchProjectsLocationsGlobalHubRequest {
  string name = 1;
  string request_id = 2;
  string update_mask = 3;
  Hub projects_locations_global_hub = 4;
}

message QueryStatusProjectsLocationsGlobalHubRequest {
  string filter = 1;
  string group_by = 2;
  string name = 3;
  string order_by = 4;
  int32 page_size = 5;
  string page_token = 6;
}

message RejectSpokeProjectsLocationsGlobalHubRequest {
  string name = 1;
  RejectHubSpokeRequest projects_locations_global_hub = 2;
}

message GetProjectsLocationsGlobalHubsGroupRequest {
  string name = 1;
}

message ListProjectsLocationsGlobalHubsGroupsRequest {
  string filter = 1;
  string order_by = 2;
  int32 page_size = 3;
  string page_token = 4;
  string parent = 5;
}

message PatchProjectsLocationsGlobalHubsGroupRequest {
  string name = 1;
  string request_id = 2;
  string update_mask = 3;
  Group projects_locations_global_hubs_group = 4;
}

message GetProjectsLocationsGlobalHubsRouteTableRequest {
  string name = 1;
}

message ListProjectsLocationsGlobalHubsRouteTablesRequest {
  string filter = 1;
  string order_by = 2;
  int32 page_size = 3;
  string page_token = 4;
  string parent = 5;
}

message GetProjectsLocationsGlobalHubsRouteTablesRouteRequest {
  string name = 1;
}

message ListProjectsLocationsGlobalHubsRouteTablesRoutesRequest {
  string filter = 1;
  string order_by = 2;
  int32 page_size = 3;
  string page_token = 4;
  string parent = 5;
}

message CreateProjectsLocationsGlobalPolicyBasedRouteRequest {
  string parent = 1;
  string policy_based_route_id = 2;
  string request_id = 3;
  PolicyBasedRoute projects_locations_global_policy_based_route = 4;
}

message DeleteProjectsLocationsGlobalPolicyBasedRouteRequest {
  string name = 1;
  string request_id = 2;
}

message GetProjectsLocationsGlobalPolicyBasedRouteRequest {
  string name = 1;
}

message ListProjectsLocationsGlobalPolicyBasedRoutesRequest {
  string filter = 1;
  string order_by = 2;
  int32 page_size = 3;
  string page_token = 4;
  string parent = 5;
}

message CreateProjectsLocationsInternalRangeRequest {
  string internal_range_id = 1;
  string parent = 2;
  string request_id = 3;
  InternalRange projects_locations_internal_range = 4;
}

message DeleteProjectsLocationsInternalRangeRequest {
  string name = 1;
  string request_id = 2;
}

message GetProjectsLocationsInternalRangeRequest {
  string name = 1;
}

message ListProjectsLocationsInternalRangesRequest {
  string filter = 1;
  string order_by = 2;
  int32 page_size = 3;
  string page_token = 4;
  string parent = 5;
}

message PatchProjectsLocationsInternalRangeRequest {
  string name = 1;
  string request_id = 2;
  string update_mask = 3;
  InternalRange projects_locations_internal_range = 4;
}

message CreateProjectsLocationsRegionalEndpointRequest {
  string parent = 1;
  string regional_endpoint_id = 2;
  string request_id = 3;
  RegionalEndpoint projects_locations_regional_endpoint = 4;
}

message DeleteProjectsLocationsRegionalEndpointRequest {
  string name = 1;
  string request_id = 2;
}

message GetProjectsLocationsRegionalEndpointRequest {
  string name = 1;
}

message ListProjectsLocationsRegionalEndpointsRequest {
  string filter = 1;
  string order_by = 2;
  int32 page_size = 3;
  string page_token = 4;
  string parent = 5;
}

message DeleteProjectsLocationsServiceClasseRequest {
  string etag = 1;
  string name = 2;
  string request_id = 3;
}

message GetProjectsLocationsServiceClasseRequest {
  string name = 1;
}

message ListProjectsLocationsServiceClassesRequest {
  string filter = 1;
  string order_by = 2;
  int32 page_size = 3;
  string page_token = 4;
  string parent = 5;
}

message PatchProjectsLocationsServiceClasseRequest {
  string name = 1;
  string request_id = 2;
  string update_mask = 3;
  ServiceClass projects_locations_service_classe = 4;
}

message CreateProjectsLocationsServiceConnectionMapRequest {
  string parent = 1;
  string request_id = 2;
  string service_connection_map_id = 3;
  ServiceConnectionMap projects_locations_service_connection_map = 4;
}

message DeleteProjectsLocationsServiceConnectionMapRequest {
  string etag = 1;
  string name = 2;
  string request_id = 3;
}

message GetProjectsLocationsServiceConnectionMapRequest {
  string name = 1;
}

message ListProjectsLocationsServiceConnectionMapsRequest {
  string filter = 1;
  string order_by = 2;
  int32 page_size = 3;
  string page_token = 4;
  string parent = 5;
}

message PatchProjectsLocationsServiceConnectionMapRequest {
  string name = 1;
  string request_id = 2;
  string update_mask = 3;
  ServiceConnectionMap projects_locations_service_connection_map = 4;
}

message CreateProjectsLocationsServiceConnectionPolicyRequest {
  string parent = 1;
  string request_id = 2;
  string service_connection_policy_id = 3;
  ServiceConnectionPolicy projects_locations_service_connection_policy = 4;
}

message DeleteProjectsLocationsServiceConnectionPolicyRequest {
  string etag = 1;
  string name = 2;
  string request_id = 3;
}

message GetProjectsLocationsServiceConnectionPolicyRequest {
  string name = 1;
}

message ListProjectsLocationsServiceConnectionPoliciesRequest {
  string filter = 1;
  string order_by = 2;
  int32 page_size = 3;
  string page_token = 4;
  string parent = 5;
}

message PatchProjectsLocationsServiceConnectionPolicyRequest {
  string name = 1;
  string request_id = 2;
  string update_mask = 3;
  ServiceConnectionPolicy projects_locations_service_connection_policy = 4;
}

message CreateProjectsLocationsServiceConnectionTokenRequest {
  string parent = 1;
  string request_id = 2;
  string service_connection_token_id = 3;
  ServiceConnectionToken projects_locations_service_connection_token = 4;
}

message DeleteProjectsLocationsServiceConnectionTokenRequest {
  string etag = 1;
  string name = 2;
  string request_id = 3;
}

message GetProjectsLocationsServiceConnectionTokenRequest {
  string name = 1;
}

message ListProjectsLocationsServiceConnectionTokensRequest {
  string filter = 1;
  string order_by = 2;
  int32 page_size = 3;
  string page_token = 4;
  string parent = 5;
}

message CreateProjectsLocationsSpokeRequest {
  string parent = 1;
  string request_id = 2;
  string spoke_id = 3;
  Spoke projects_locations_spoke = 4;
}

message DeleteProjectsLocationsSpokeRequest {
  string name = 1;
  string request_id = 2;
}

message GetProjectsLocationsSpokeRequest {
  string name = 1;
}

message ListProjectsLocationsSpokesRequest {
  string filter = 1;
  string order_by = 2;
  int32 page_size = 3;
  string page_token = 4;
  string parent = 5;
}

message PatchProjectsLocationsSpokeRequest {
  string name = 1;
  string request_id = 2;
  string update_mask = 3;
  Spoke projects_locations_spoke = 4;
}
