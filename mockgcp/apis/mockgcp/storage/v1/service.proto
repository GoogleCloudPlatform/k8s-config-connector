// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto2";
package google.cloud.storage.v1;
import "google/api/annotations.proto";
import "google/protobuf/any.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
option go_package = "cloud.google.com/go/storage/apiv1/storagepb;storagepb";
service AnywhereCachesServer {
  rpc DisableAnywhereCache(DisableAnywhereCacheRequest) returns (AnywhereCache){
  option (google.api.http) = {
    post: "/storage/v1/b/{bucket}/anywhereCaches/{anywhere_cache_id}/disable"
  };
}
;
  rpc GetAnywhereCache(GetAnywhereCacheRequest) returns (AnywhereCache){
  option (google.api.http) = {
    get: "/storage/v1/b/{bucket}/anywhereCaches/{anywhere_cache_id}"
  };
}
;
  rpc InsertAnywhereCache(InsertAnywhereCacheRequest) returns (GoogleLongrunningOperation){
  option (google.api.http) = {
    post: "/storage/v1/b/{bucket}/anywhereCaches"
    body: "anywhere_cache"
  };
}
;
  rpc ListAnywhereCaches(ListAnywhereCachesRequest) returns (AnywhereCaches){
  option (google.api.http) = {
    get: "/storage/v1/b/{bucket}/anywhereCaches"
  };
}
;
  rpc PauseAnywhereCache(PauseAnywhereCacheRequest) returns (AnywhereCache){
  option (google.api.http) = {
    post: "/storage/v1/b/{bucket}/anywhereCaches/{anywhere_cache_id}/pause"
  };
}
;
  rpc ResumeAnywhereCache(ResumeAnywhereCacheRequest) returns (AnywhereCache){
  option (google.api.http) = {
    post: "/storage/v1/b/{bucket}/anywhereCaches/{anywhere_cache_id}/resume"
  };
}
;
  rpc UpdateAnywhereCache(UpdateAnywhereCacheRequest) returns (GoogleLongrunningOperation){
  option (google.api.http) = {
    patch: "/storage/v1/b/{bucket}/anywhereCaches/{anywhere_cache_id}"
    body: "anywhere_cache"
  };
}
;
}
service BucketAccessControlsServer {
  rpc DeleteBucketAccessControl(DeleteBucketAccessControlRequest) returns (.google.protobuf.Empty){
  option (google.api.http) = {
    delete: "/storage/v1/b/{bucket}/acl/{entity}"
  };
}
;
  rpc GetBucketAccessControl(GetBucketAccessControlRequest) returns (BucketAccessControl){
  option (google.api.http) = {
    get: "/storage/v1/b/{bucket}/acl/{entity}"
  };
}
;
  rpc InsertBucketAccessControl(InsertBucketAccessControlRequest) returns (BucketAccessControl){
  option (google.api.http) = {
    post: "/storage/v1/b/{bucket}/acl"
    body: "bucket_access_control"
  };
}
;
  rpc ListBucketAccessControls(ListBucketAccessControlsRequest) returns (BucketAccessControls){
  option (google.api.http) = {
    get: "/storage/v1/b/{bucket}/acl"
  };
}
;
  rpc PatchBucketAccessControl(PatchBucketAccessControlRequest) returns (BucketAccessControl){
  option (google.api.http) = {
    patch: "/storage/v1/b/{bucket}/acl/{entity}"
    body: "bucket_access_control"
  };
}
;
  rpc UpdateBucketAccessControl(UpdateBucketAccessControlRequest) returns (BucketAccessControl){
  option (google.api.http) = {
    put: "/storage/v1/b/{bucket}/acl/{entity}"
    body: "bucket_access_control"
  };
}
;
}
service BucketsServer {
  rpc DeleteBucket(DeleteBucketRequest) returns (.google.protobuf.Empty){
  option (google.api.http) = {
    delete: "/storage/v1/b/{name}"
  };
}
;
  rpc GetBucket(GetBucketRequest) returns (Bucket){
  option (google.api.http) = {
    get: "/storage/v1/b/{name}"
  };
}
;
  rpc GetStorageLayoutBucket(GetStorageLayoutBucketRequest) returns (BucketStorageLayout){
  option (google.api.http) = {
    get: "/storage/v1/b/{name}/storageLayout"
  };
}
;
  rpc InsertBucket(InsertBucketRequest) returns (Bucket){
  option (google.api.http) = {
    post: "/storage/v1/b"
    body: "bucket"
  };
}
;
  rpc ListBuckets(ListBucketsRequest) returns (Buckets){
  option (google.api.http) = {
    get: "/storage/v1/b"
  };
}
;
  rpc LockRetentionPolicyBucket(LockRetentionPolicyBucketRequest) returns (Bucket){
  option (google.api.http) = {
    post: "/storage/v1/b/{name}/lockRetentionPolicy"
  };
}
;
  rpc PatchBucket(PatchBucketRequest) returns (Bucket){
  option (google.api.http) = {
    patch: "/storage/v1/b/{name}"
    body: "bucket"
  };
}
;
  rpc UpdateBucket(UpdateBucketRequest) returns (Bucket){
  option (google.api.http) = {
    put: "/storage/v1/b/{name}"
    body: "bucket"
  };
}
;
}
service ChannelsServer {
  rpc StopChannel(StopChannelRequest) returns (.google.protobuf.Empty){
  option (google.api.http) = {
    post: "/storage/v1/channels/stop"
    body: "channel"
  };
}
;
}
service DefaultObjectAccessControlsServer {
  rpc DeleteDefaultObjectAccessControl(DeleteDefaultObjectAccessControlRequest) returns (.google.protobuf.Empty){
  option (google.api.http) = {
    delete: "/storage/v1/b/{bucket}/defaultObjectAcl/{entity}"
  };
}
;
  rpc GetDefaultObjectAccessControl(GetDefaultObjectAccessControlRequest) returns (ObjectAccessControl){
  option (google.api.http) = {
    get: "/storage/v1/b/{bucket}/defaultObjectAcl/{entity}"
  };
}
;
  rpc InsertDefaultObjectAccessControl(InsertDefaultObjectAccessControlRequest) returns (ObjectAccessControl){
  option (google.api.http) = {
    post: "/storage/v1/b/{bucket}/defaultObjectAcl"
    body: "default_object_access_control"
  };
}
;
  rpc ListDefaultObjectAccessControls(ListDefaultObjectAccessControlsRequest) returns (ObjectAccessControls){
  option (google.api.http) = {
    get: "/storage/v1/b/{bucket}/defaultObjectAcl"
  };
}
;
  rpc PatchDefaultObjectAccessControl(PatchDefaultObjectAccessControlRequest) returns (ObjectAccessControl){
  option (google.api.http) = {
    patch: "/storage/v1/b/{bucket}/defaultObjectAcl/{entity}"
    body: "default_object_access_control"
  };
}
;
  rpc UpdateDefaultObjectAccessControl(UpdateDefaultObjectAccessControlRequest) returns (ObjectAccessControl){
  option (google.api.http) = {
    put: "/storage/v1/b/{bucket}/defaultObjectAcl/{entity}"
    body: "default_object_access_control"
  };
}
;
}
service FoldersServer {
  rpc DeleteFolder(DeleteFolderRequest) returns (.google.protobuf.Empty){
  option (google.api.http) = {
    delete: "/storage/v1/b/{bucket}/folders/{name}"
  };
}
;
  rpc GetFolder(GetFolderRequest) returns (Folder){
  option (google.api.http) = {
    get: "/storage/v1/b/{bucket}/folders/{name}"
  };
}
;
  rpc InsertFolder(InsertFolderRequest) returns (Folder){
  option (google.api.http) = {
    post: "/storage/v1/b/{bucket}/folders"
    body: "folder"
  };
}
;
  rpc ListFolders(ListFoldersRequest) returns (Folders){
  option (google.api.http) = {
    get: "/storage/v1/b/{bucket}/folders"
  };
}
;
  rpc RenameFolder(RenameFolderRequest) returns (GoogleLongrunningOperation){
  option (google.api.http) = {
    post: "/storage/v1/b/{bucket}/folders/{source_folder}/renameTo/folders/{destination_folder}"
  };
}
;
}
service ManagedFoldersServer {
  rpc DeleteManagedFolder(DeleteManagedFolderRequest) returns (.google.protobuf.Empty){
  option (google.api.http) = {
    delete: "/storage/v1/b/{bucket}/managedFolders/{name}"
  };
}
;
  rpc GetManagedFolder(GetManagedFolderRequest) returns (ManagedFolder){
  option (google.api.http) = {
    get: "/storage/v1/b/{bucket}/managedFolders/{name}"
  };
}
;
  rpc InsertManagedFolder(InsertManagedFolderRequest) returns (ManagedFolder){
  option (google.api.http) = {
    post: "/storage/v1/b/{bucket}/managedFolders"
    body: "managed_folder"
  };
}
;
  rpc ListManagedFolders(ListManagedFoldersRequest) returns (ManagedFolders){
  option (google.api.http) = {
    get: "/storage/v1/b/{bucket}/managedFolders"
  };
}
;
}
service NotificationsServer {
  rpc DeleteNotification(DeleteNotificationRequest) returns (.google.protobuf.Empty){
  option (google.api.http) = {
    delete: "/storage/v1/b/{bucket}/notificationConfigs/{name}"
  };
}
;
  rpc GetNotification(GetNotificationRequest) returns (Notification){
  option (google.api.http) = {
    get: "/storage/v1/b/{bucket}/notificationConfigs/{name}"
  };
}
;
  rpc InsertNotification(InsertNotificationRequest) returns (Notification){
  option (google.api.http) = {
    post: "/storage/v1/b/{bucket}/notificationConfigs"
    body: "notification"
  };
}
;
  rpc ListNotifications(ListNotificationsRequest) returns (Notifications){
  option (google.api.http) = {
    get: "/storage/v1/b/{bucket}/notificationConfigs"
  };
}
;
}
service ObjectAccessControlsServer {
  rpc DeleteObjectAccessControl(DeleteObjectAccessControlRequest) returns (.google.protobuf.Empty){
  option (google.api.http) = {
    delete: "/storage/v1/b/{bucket}/o/{object}/acl/{entity}"
  };
}
;
  rpc GetObjectAccessControl(GetObjectAccessControlRequest) returns (ObjectAccessControl){
  option (google.api.http) = {
    get: "/storage/v1/b/{bucket}/o/{object}/acl/{entity}"
  };
}
;
  rpc InsertObjectAccessControl(InsertObjectAccessControlRequest) returns (ObjectAccessControl){
  option (google.api.http) = {
    post: "/storage/v1/b/{bucket}/o/{object}/acl"
    body: "object_access_control"
  };
}
;
  rpc ListObjectAccessControls(ListObjectAccessControlsRequest) returns (ObjectAccessControls){
  option (google.api.http) = {
    get: "/storage/v1/b/{bucket}/o/{object}/acl"
  };
}
;
  rpc PatchObjectAccessControl(PatchObjectAccessControlRequest) returns (ObjectAccessControl){
  option (google.api.http) = {
    patch: "/storage/v1/b/{bucket}/o/{object}/acl/{entity}"
    body: "object_access_control"
  };
}
;
  rpc UpdateObjectAccessControl(UpdateObjectAccessControlRequest) returns (ObjectAccessControl){
  option (google.api.http) = {
    put: "/storage/v1/b/{bucket}/o/{object}/acl/{entity}"
    body: "object_access_control"
  };
}
;
}
service ObjectsServer {
  rpc BulkRestoreObject(BulkRestoreObjectRequest) returns (GoogleLongrunningOperation){
  option (google.api.http) = {
    post: "/storage/v1/b/{bucket}/o/bulkRestore"
    body: "object"
  };
}
;
  rpc ComposeObject(ComposeObjectRequest) returns (Object){
  option (google.api.http) = {
    post: "/storage/v1/b/{destination_bucket}/o/{destination_object}/compose"
    body: "object"
  };
}
;
  rpc CopyObject(CopyObjectRequest) returns (Object){
  option (google.api.http) = {
    post: "/storage/v1/b/{source_bucket}/o/{source_object}/copyTo/b/{destination_bucket}/o/{destination_object}"
    body: "object"
  };
}
;
  rpc DeleteObject(DeleteObjectRequest) returns (.google.protobuf.Empty){
  option (google.api.http) = {
    delete: "/storage/v1/b/{bucket}/o/{name}"
  };
}
;
  rpc GetObject(GetObjectRequest) returns (Object){
  option (google.api.http) = {
    get: "/storage/v1/b/{bucket}/o/{name}"
  };
}
;
  rpc InsertObject(InsertObjectRequest) returns (Object){
  option (google.api.http) = {
    post: "/storage/v1/b/{bucket}/o"
    body: "object"
  };
}
;
  rpc ListObjects(ListObjectsRequest) returns (Objects){
  option (google.api.http) = {
    get: "/storage/v1/b/{bucket}/o"
  };
}
;
  rpc PatchObject(PatchObjectRequest) returns (Object){
  option (google.api.http) = {
    patch: "/storage/v1/b/{bucket}/o/{name}"
    body: "object"
  };
}
;
  rpc RestoreObject(RestoreObjectRequest) returns (Object){
  option (google.api.http) = {
    post: "/storage/v1/b/{bucket}/o/{name}/restore"
  };
}
;
  rpc RewriteObject(RewriteObjectRequest) returns (RewriteResponse){
  option (google.api.http) = {
    post: "/storage/v1/b/{source_bucket}/o/{source_object}/rewriteTo/b/{destination_bucket}/o/{destination_object}"
    body: "object"
  };
}
;
  rpc UpdateObject(UpdateObjectRequest) returns (Object){
  option (google.api.http) = {
    put: "/storage/v1/b/{bucket}/o/{name}"
    body: "object"
  };
}
;
  rpc WatchAllObject(WatchAllObjectRequest) returns (Channel){
  option (google.api.http) = {
    post: "/storage/v1/b/{bucket}/o/watch"
    body: "object"
  };
}
;
}
service ProjectsServer {
}
service ProjectsHmacKeysServer {
  rpc CreateProjectsHmacKey(CreateProjectsHmacKeyRequest) returns (HmacKey){
  option (google.api.http) = {
    post: "/storage/v1/projects/{project_id}/hmacKeys"
  };
}
;
  rpc DeleteProjectsHmacKey(DeleteProjectsHmacKeyRequest) returns (.google.protobuf.Empty){
  option (google.api.http) = {
    delete: "/storage/v1/projects/{project_id}/hmacKeys/{access_id}"
  };
}
;
  rpc GetProjectsHmacKey(GetProjectsHmacKeyRequest) returns (HmacKeyMetadata){
  option (google.api.http) = {
    get: "/storage/v1/projects/{project_id}/hmacKeys/{access_id}"
  };
}
;
  rpc ListProjectsHmacKeys(ListProjectsHmacKeysRequest) returns (HmacKeysMetadata){
  option (google.api.http) = {
    get: "/storage/v1/projects/{project_id}/hmacKeys"
  };
}
;
  rpc UpdateProjectsHmacKey(UpdateProjectsHmacKeyRequest) returns (HmacKeyMetadata){
  option (google.api.http) = {
    put: "/storage/v1/projects/{project_id}/hmacKeys/{access_id}"
    body: "projects_hmac_key"
  };
}
;
}
service ProjectsServiceAccountServer {
  rpc GetProjectsServiceAccount(GetProjectsServiceAccountRequest) returns (ServiceAccount){
  option (google.api.http) = {
    get: "/storage/v1/projects/{project_id}/serviceAccount"
  };
}
;
}
message AnywhereCache {
  optional string admission_policy = 1 [json_name="admissionPolicy"];
  optional string anywhere_cache_id = 2 [json_name="anywhereCacheId"];
  optional string bucket = 3 [json_name="bucket"];
  optional .google.protobuf.Timestamp create_time = 4 [json_name="createTime"];
  optional string id = 5 [json_name="id"];
  optional string kind = 6 [json_name="kind"];
  optional bool pending_update = 7 [json_name="pendingUpdate"];
  optional string self_link = 8 [json_name="selfLink"];
  optional string state = 9 [json_name="state"];
  optional .google.protobuf.Duration ttl = 10 [json_name="ttl"];
  optional .google.protobuf.Timestamp update_time = 11 [json_name="updateTime"];
  optional string zone = 12 [json_name="zone"];
}
message AnywhereCaches {
  repeated AnywhereCache items = 1 [json_name="items"];
  optional string kind = 2 [json_name="kind"];
  optional string next_page_token = 3 [json_name="nextPageToken"];
}
message BucketAutoclass {
  optional bool enabled = 1 [json_name="enabled"];
  optional string terminal_storage_class = 2 [json_name="terminalStorageClass"];
  optional .google.protobuf.Timestamp terminal_storage_class_update_time = 3 [json_name="terminalStorageClassUpdateTime"];
  optional .google.protobuf.Timestamp toggle_time = 4 [json_name="toggleTime"];
}
message BucketBilling {
  optional bool requester_pays = 1 [json_name="requesterPays"];
}
message BucketCors {
  optional int32 max_age_seconds = 1 [json_name="maxAgeSeconds"];
  repeated string method = 2 [json_name="method"];
  repeated string origin = 3 [json_name="origin"];
  repeated string response_header = 4 [json_name="responseHeader"];
}
message BucketCustomPlacementConfig {
  repeated string data_locations = 1 [json_name="dataLocations"];
}
message BucketEncryption {
  optional string default_kms_key_name = 1 [json_name="defaultKmsKeyName"];
}
message BucketHierarchicalNamespace {
  optional bool enabled = 1 [json_name="enabled"];
}
message BucketPolicyOnly {
  optional bool enabled = 1 [json_name="enabled"];
  optional .google.protobuf.Timestamp locked_time = 2 [json_name="lockedTime"];
}
message UniformBucketLevelAccess {
  optional bool enabled = 1 [json_name="enabled"];
  optional .google.protobuf.Timestamp locked_time = 2 [json_name="lockedTime"];
}
message BucketIamConfiguration {
  optional BucketPolicyOnly bucket_policy_only = 1 [json_name="bucketPolicyOnly"];
  optional string public_access_prevention = 2 [json_name="publicAccessPrevention"];
  optional UniformBucketLevelAccess uniform_bucket_level_access = 3 [json_name="uniformBucketLevelAccess"];
}
message Action {
  optional string storage_class = 1 [json_name="storageClass"];
  optional string type = 2 [json_name="type"];
}
message Condition {
  optional int32 age = 1 [json_name="age"];
  optional string created_before = 2 [json_name="createdBefore"];
  optional string custom_time_before = 3 [json_name="customTimeBefore"];
  optional int32 days_since_custom_time = 4 [json_name="daysSinceCustomTime"];
  optional int32 days_since_noncurrent_time = 5 [json_name="daysSinceNoncurrentTime"];
  optional bool is_live = 6 [json_name="isLive"];
  optional string matches_pattern = 7 [json_name="matchesPattern"];
  repeated string matches_prefix = 8 [json_name="matchesPrefix"];
  repeated string matches_storage_class = 9 [json_name="matchesStorageClass"];
  repeated string matches_suffix = 10 [json_name="matchesSuffix"];
  optional string noncurrent_time_before = 11 [json_name="noncurrentTimeBefore"];
  optional int32 num_newer_versions = 12 [json_name="numNewerVersions"];
}
message Rule {
  optional Action action = 1 [json_name="action"];
  optional Condition condition = 2 [json_name="condition"];
}
message BucketLifecycle {
  repeated Rule rule = 1 [json_name="rule"];
}
message BucketLogging {
  optional string log_bucket = 1 [json_name="logBucket"];
  optional string log_object_prefix = 2 [json_name="logObjectPrefix"];
}
message BucketObjectRetention {
  optional string mode = 1 [json_name="mode"];
}
message BucketOwner {
  optional string entity = 1 [json_name="entity"];
  optional string entity_id = 2 [json_name="entityId"];
}
message BucketRetentionPolicy {
  optional .google.protobuf.Timestamp effective_time = 1 [json_name="effectiveTime"];
  optional bool is_locked = 2 [json_name="isLocked"];
  optional int64 retention_period = 3 [json_name="retentionPeriod"];
}
message BucketSoftDeletePolicy {
  optional .google.protobuf.Timestamp effective_time = 1 [json_name="effectiveTime"];
  optional int64 retention_duration_seconds = 2 [json_name="retentionDurationSeconds"];
}
message BucketVersioning {
  optional bool enabled = 1 [json_name="enabled"];
}
message BucketWebsite {
  optional string main_page_suffix = 1 [json_name="mainPageSuffix"];
  optional string not_found_page = 2 [json_name="notFoundPage"];
}
message Bucket {
  repeated BucketAccessControl acl = 1 [json_name="acl"];
  optional BucketAutoclass autoclass = 2 [json_name="autoclass"];
  optional BucketBilling billing = 3 [json_name="billing"];
  repeated BucketCors cors = 4 [json_name="cors"];
  optional BucketCustomPlacementConfig custom_placement_config = 5 [json_name="customPlacementConfig"];
  optional bool default_event_based_hold = 6 [json_name="defaultEventBasedHold"];
  repeated ObjectAccessControl default_object_acl = 7 [json_name="defaultObjectAcl"];
  optional BucketEncryption encryption = 8 [json_name="encryption"];
  optional string etag = 9 [json_name="etag"];
  optional BucketHierarchicalNamespace hierarchical_namespace = 10 [json_name="hierarchicalNamespace"];
  optional BucketIamConfiguration iam_configuration = 11 [json_name="iamConfiguration"];
  optional string id = 12 [json_name="id"];
  optional string kind = 13 [json_name="kind"];
  map<string, string> labels = 14 [json_name="labels"];
  optional BucketLifecycle lifecycle = 15 [json_name="lifecycle"];
  optional string location = 16 [json_name="location"];
  optional string location_type = 17 [json_name="locationType"];
  optional BucketLogging logging = 18 [json_name="logging"];
  optional int64 metageneration = 19 [json_name="metageneration"];
  optional string name = 20 [json_name="name"];
  optional BucketObjectRetention object_retention = 21 [json_name="objectRetention"];
  optional BucketOwner owner = 22 [json_name="owner"];
  optional uint64 project_number = 23 [json_name="projectNumber"];
  optional BucketRetentionPolicy retention_policy = 24 [json_name="retentionPolicy"];
  optional string rpo = 25 [json_name="rpo"];
  optional bool satisfies_p_z_s = 26 [json_name="satisfiesPZS"];
  optional string self_link = 27 [json_name="selfLink"];
  optional BucketSoftDeletePolicy soft_delete_policy = 28 [json_name="softDeletePolicy"];
  optional string storage_class = 29 [json_name="storageClass"];
  optional .google.protobuf.Timestamp time_created = 30 [json_name="timeCreated"];
  optional .google.protobuf.Timestamp updated = 31 [json_name="updated"];
  optional BucketVersioning versioning = 32 [json_name="versioning"];
  optional BucketWebsite website = 33 [json_name="website"];
}
message BucketAccessControlProjectTeam {
  optional string project_number = 1 [json_name="projectNumber"];
  optional string team = 2 [json_name="team"];
}
message BucketAccessControl {
  optional string bucket = 1 [json_name="bucket"];
  optional string domain = 2 [json_name="domain"];
  optional string email = 3 [json_name="email"];
  optional string entity = 4 [json_name="entity"];
  optional string entity_id = 5 [json_name="entityId"];
  optional string etag = 6 [json_name="etag"];
  optional string id = 7 [json_name="id"];
  optional string kind = 8 [json_name="kind"];
  optional BucketAccessControlProjectTeam project_team = 9 [json_name="projectTeam"];
  optional string role = 10 [json_name="role"];
  optional string self_link = 11 [json_name="selfLink"];
}
message BucketAccessControls {
  repeated BucketAccessControl items = 1 [json_name="items"];
  optional string kind = 2 [json_name="kind"];
}
message BucketStorageLayoutCustomPlacementConfig {
  repeated string data_locations = 1 [json_name="dataLocations"];
}
message BucketStorageLayoutHierarchicalNamespace {
  optional bool enabled = 1 [json_name="enabled"];
}
message BucketStorageLayout {
  optional string bucket = 1 [json_name="bucket"];
  optional BucketStorageLayoutCustomPlacementConfig custom_placement_config = 2 [json_name="customPlacementConfig"];
  optional BucketStorageLayoutHierarchicalNamespace hierarchical_namespace = 3 [json_name="hierarchicalNamespace"];
  optional string kind = 4 [json_name="kind"];
  optional string location = 5 [json_name="location"];
  optional string location_type = 6 [json_name="locationType"];
}
message Buckets {
  repeated Bucket items = 1 [json_name="items"];
  optional string kind = 2 [json_name="kind"];
  optional string next_page_token = 3 [json_name="nextPageToken"];
}
message BulkRestoreObjectsRequest {
  optional bool allow_overwrite = 1 [json_name="allowOverwrite"];
  optional bool copy_source_acl = 2 [json_name="copySourceAcl"];
  repeated string match_globs = 3 [json_name="matchGlobs"];
  optional .google.protobuf.Timestamp soft_deleted_after_time = 4 [json_name="softDeletedAfterTime"];
  optional .google.protobuf.Timestamp soft_deleted_before_time = 5 [json_name="softDeletedBeforeTime"];
}
message Channel {
  optional string address = 1 [json_name="address"];
  optional int64 expiration = 2 [json_name="expiration"];
  optional string id = 3 [json_name="id"];
  optional string kind = 4 [json_name="kind"];
  map<string, string> params = 5 [json_name="params"];
  optional bool payload = 6 [json_name="payload"];
  optional string resource_id = 7 [json_name="resourceId"];
  optional string resource_uri = 8 [json_name="resourceUri"];
  optional string token = 9 [json_name="token"];
  optional string type = 10 [json_name="type"];
}
message ObjectPreconditions {
  optional int64 if_generation_match = 1 [json_name="ifGenerationMatch"];
}
message ComposeRequestSourceObjects {
  optional int64 generation = 1 [json_name="generation"];
  optional string name = 2 [json_name="name"];
  optional ObjectPreconditions object_preconditions = 3 [json_name="objectPreconditions"];
}
message ComposeRequest {
  optional Object destination = 1 [json_name="destination"];
  optional string kind = 2 [json_name="kind"];
  repeated ComposeRequestSourceObjects source_objects = 3 [json_name="sourceObjects"];
}
message Expr {
  optional string description = 1 [json_name="description"];
  optional string expression = 2 [json_name="expression"];
  optional string location = 3 [json_name="location"];
  optional string title = 4 [json_name="title"];
}
message FolderPendingRenameInfo {
  optional string operation_id = 1 [json_name="operationId"];
}
message Folder {
  optional string bucket = 1 [json_name="bucket"];
  optional .google.protobuf.Timestamp create_time = 2 [json_name="createTime"];
  optional string id = 3 [json_name="id"];
  optional string kind = 4 [json_name="kind"];
  optional int64 metageneration = 5 [json_name="metageneration"];
  optional string name = 6 [json_name="name"];
  optional FolderPendingRenameInfo pending_rename_info = 7 [json_name="pendingRenameInfo"];
  optional string self_link = 8 [json_name="selfLink"];
  optional .google.protobuf.Timestamp update_time = 9 [json_name="updateTime"];
}
message Folders {
  repeated Folder items = 1 [json_name="items"];
  optional string kind = 2 [json_name="kind"];
  optional string next_page_token = 3 [json_name="nextPageToken"];
}
message GoogleLongrunningListOperationsResponse {
  optional string next_page_token = 1 [json_name="nextPageToken"];
  repeated GoogleLongrunningOperation operations = 2 [json_name="operations"];
}
message GoogleLongrunningOperation {
  optional bool done = 1 [json_name="done"];
  optional GoogleRpcStatus error = 2 [json_name="error"];
  map<string, .google.protobuf.Any> metadata = 3 [json_name="metadata"];
  optional string name = 4 [json_name="name"];
  map<string, .google.protobuf.Any> response = 5 [json_name="response"];
}
message GoogleRpcStatus {
  optional int32 code = 1 [json_name="code"];
  repeated .google.protobuf.Any details = 2 [json_name="details"];
  optional string message = 3 [json_name="message"];
}
message HmacKey {
  optional string kind = 1 [json_name="kind"];
  optional HmacKeyMetadata metadata = 2 [json_name="metadata"];
  optional string secret = 3 [json_name="secret"];
}
message HmacKeyMetadata {
  optional string access_id = 1 [json_name="accessId"];
  optional string etag = 2 [json_name="etag"];
  optional string id = 3 [json_name="id"];
  optional string kind = 4 [json_name="kind"];
  optional string project_id = 5 [json_name="projectId"];
  optional string self_link = 6 [json_name="selfLink"];
  optional string service_account_email = 7 [json_name="serviceAccountEmail"];
  optional string state = 8 [json_name="state"];
  optional .google.protobuf.Timestamp time_created = 9 [json_name="timeCreated"];
  optional .google.protobuf.Timestamp updated = 10 [json_name="updated"];
}
message HmacKeysMetadata {
  repeated HmacKeyMetadata items = 1 [json_name="items"];
  optional string kind = 2 [json_name="kind"];
  optional string next_page_token = 3 [json_name="nextPageToken"];
}
message ManagedFolder {
  optional string bucket = 1 [json_name="bucket"];
  optional .google.protobuf.Timestamp create_time = 2 [json_name="createTime"];
  optional string id = 3 [json_name="id"];
  optional string kind = 4 [json_name="kind"];
  optional int64 metageneration = 5 [json_name="metageneration"];
  optional string name = 6 [json_name="name"];
  optional string self_link = 7 [json_name="selfLink"];
  optional .google.protobuf.Timestamp update_time = 8 [json_name="updateTime"];
}
message ManagedFolders {
  repeated ManagedFolder items = 1 [json_name="items"];
  optional string kind = 2 [json_name="kind"];
  optional string next_page_token = 3 [json_name="nextPageToken"];
}
message Notification {
  map<string, string> custom_attributes = 1 [json_name="custom_attributes"];
  optional string etag = 2 [json_name="etag"];
  repeated string event_types = 3 [json_name="event_types"];
  optional string id = 4 [json_name="id"];
  optional string kind = 5 [json_name="kind"];
  optional string object_name_prefix = 6 [json_name="object_name_prefix"];
  optional string payload_format = 7 [json_name="payload_format"];
  optional string self_link = 8 [json_name="selfLink"];
  optional string topic = 9 [json_name="topic"];
}
message Notifications {
  repeated Notification items = 1 [json_name="items"];
  optional string kind = 2 [json_name="kind"];
}
message ObjectCustomerEncryption {
  optional string encryption_algorithm = 1 [json_name="encryptionAlgorithm"];
  optional string key_sha256 = 2 [json_name="keySha256"];
}
message ObjectOwner {
  optional string entity = 1 [json_name="entity"];
  optional string entity_id = 2 [json_name="entityId"];
}
message ObjectRetention {
  optional string mode = 1 [json_name="mode"];
  optional .google.protobuf.Timestamp retain_until_time = 2 [json_name="retainUntilTime"];
}
message Object {
  repeated ObjectAccessControl acl = 1 [json_name="acl"];
  optional string bucket = 2 [json_name="bucket"];
  optional string cache_control = 3 [json_name="cacheControl"];
  optional int32 component_count = 4 [json_name="componentCount"];
  optional string content_disposition = 5 [json_name="contentDisposition"];
  optional string content_encoding = 6 [json_name="contentEncoding"];
  optional string content_language = 7 [json_name="contentLanguage"];
  optional string content_type = 8 [json_name="contentType"];
  optional string crc32c = 9 [json_name="crc32c"];
  optional .google.protobuf.Timestamp custom_time = 10 [json_name="customTime"];
  optional ObjectCustomerEncryption customer_encryption = 11 [json_name="customerEncryption"];
  optional string etag = 12 [json_name="etag"];
  optional bool event_based_hold = 13 [json_name="eventBasedHold"];
  optional int64 generation = 14 [json_name="generation"];
  optional .google.protobuf.Timestamp hard_delete_time = 15 [json_name="hardDeleteTime"];
  optional string id = 16 [json_name="id"];
  optional string kind = 17 [json_name="kind"];
  optional string kms_key_name = 18 [json_name="kmsKeyName"];
  optional string md5_hash = 19 [json_name="md5Hash"];
  optional string media_link = 20 [json_name="mediaLink"];
  map<string, string> metadata = 21 [json_name="metadata"];
  optional int64 metageneration = 22 [json_name="metageneration"];
  optional string name = 23 [json_name="name"];
  optional ObjectOwner owner = 24 [json_name="owner"];
  optional ObjectRetention retention = 25 [json_name="retention"];
  optional .google.protobuf.Timestamp retention_expiration_time = 26 [json_name="retentionExpirationTime"];
  optional string self_link = 27 [json_name="selfLink"];
  optional uint64 size = 28 [json_name="size"];
  optional .google.protobuf.Timestamp soft_delete_time = 29 [json_name="softDeleteTime"];
  optional string storage_class = 30 [json_name="storageClass"];
  optional bool temporary_hold = 31 [json_name="temporaryHold"];
  optional .google.protobuf.Timestamp time_created = 32 [json_name="timeCreated"];
  optional .google.protobuf.Timestamp time_deleted = 33 [json_name="timeDeleted"];
  optional .google.protobuf.Timestamp time_storage_class_updated = 34 [json_name="timeStorageClassUpdated"];
  optional .google.protobuf.Timestamp updated = 35 [json_name="updated"];
}
message ObjectAccessControlProjectTeam {
  optional string project_number = 1 [json_name="projectNumber"];
  optional string team = 2 [json_name="team"];
}
message ObjectAccessControl {
  optional string bucket = 1 [json_name="bucket"];
  optional string domain = 2 [json_name="domain"];
  optional string email = 3 [json_name="email"];
  optional string entity = 4 [json_name="entity"];
  optional string entity_id = 5 [json_name="entityId"];
  optional string etag = 6 [json_name="etag"];
  optional int64 generation = 7 [json_name="generation"];
  optional string id = 8 [json_name="id"];
  optional string kind = 9 [json_name="kind"];
  optional string object = 10 [json_name="object"];
  optional ObjectAccessControlProjectTeam project_team = 11 [json_name="projectTeam"];
  optional string role = 12 [json_name="role"];
  optional string self_link = 13 [json_name="selfLink"];
}
message ObjectAccessControls {
  repeated ObjectAccessControl items = 1 [json_name="items"];
  optional string kind = 2 [json_name="kind"];
}
message Objects {
  repeated Object items = 1 [json_name="items"];
  optional string kind = 2 [json_name="kind"];
  optional string next_page_token = 3 [json_name="nextPageToken"];
  repeated string prefixes = 4 [json_name="prefixes"];
}
message PolicyBindings {
  optional Expr condition = 1 [json_name="condition"];
  repeated string members = 2 [json_name="members"];
  optional string role = 3 [json_name="role"];
}
message Policy {
  repeated PolicyBindings bindings = 1 [json_name="bindings"];
  optional bytes etag = 2 [json_name="etag"];
  optional string kind = 3 [json_name="kind"];
  optional string resource_id = 4 [json_name="resourceId"];
  optional int32 version = 5 [json_name="version"];
}
message RewriteResponse {
  optional bool done = 1 [json_name="done"];
  optional string kind = 2 [json_name="kind"];
  optional int64 object_size = 3 [json_name="objectSize"];
  optional Object resource = 4 [json_name="resource"];
  optional string rewrite_token = 5 [json_name="rewriteToken"];
  optional int64 total_bytes_rewritten = 6 [json_name="totalBytesRewritten"];
}
message ServiceAccount {
  optional string email_address = 1 [json_name="email_address"];
  optional string kind = 2 [json_name="kind"];
}
message TestIamPermissionsResponse {
  optional string kind = 1 [json_name="kind"];
  repeated string permissions = 2 [json_name="permissions"];
}
message DisableAnywhereCacheRequest {
  optional string anywhere_cache_id = 1;
  optional string bucket = 2;
}
message GetAnywhereCacheRequest {
  optional string anywhere_cache_id = 1;
  optional string bucket = 2;
}
message InsertAnywhereCacheRequest {
  optional string bucket = 1;
  optional AnywhereCache anywhere_cache = 2;
}
message ListAnywhereCachesRequest {
  optional string bucket = 1;
  optional int32 page_size = 2;
  optional string page_token = 3;
}
message PauseAnywhereCacheRequest {
  optional string anywhere_cache_id = 1;
  optional string bucket = 2;
}
message ResumeAnywhereCacheRequest {
  optional string anywhere_cache_id = 1;
  optional string bucket = 2;
}
message UpdateAnywhereCacheRequest {
  optional string anywhere_cache_id = 1;
  optional string bucket = 2;
  optional AnywhereCache anywhere_cache = 3;
}
message DeleteBucketAccessControlRequest {
  optional string bucket = 1;
  optional string entity = 2;
  optional string user_project = 3;
}
message GetBucketAccessControlRequest {
  optional string bucket = 1;
  optional string entity = 2;
  optional string user_project = 3;
}
message InsertBucketAccessControlRequest {
  optional string bucket = 1;
  optional string user_project = 2;
  optional BucketAccessControl bucket_access_control = 3;
}
message ListBucketAccessControlsRequest {
  optional string bucket = 1;
  optional string user_project = 2;
}
message PatchBucketAccessControlRequest {
  optional string bucket = 1;
  optional string entity = 2;
  optional string user_project = 3;
  optional BucketAccessControl bucket_access_control = 4;
}
message UpdateBucketAccessControlRequest {
  optional string bucket = 1;
  optional string entity = 2;
  optional string user_project = 3;
  optional BucketAccessControl bucket_access_control = 4;
}
message DeleteBucketRequest {
  optional string name = 1;
  optional string if_metageneration_match = 2;
  optional string if_metageneration_not_match = 3;
  optional string user_project = 4;
}
message GetBucketRequest {
  optional string name = 1;
  optional string if_metageneration_match = 2;
  optional string if_metageneration_not_match = 3;
  optional string projection = 4;
  optional string user_project = 5;
}
message GetStorageLayoutBucketRequest {
  optional string name = 1;
  optional string prefix = 2;
}
message InsertBucketRequest {
  optional bool enable_object_retention = 1;
  optional string predefined_acl = 2;
  optional string predefined_default_object_acl = 3;
  optional string project = 4;
  optional string projection = 5;
  optional string user_project = 6;
  optional Bucket bucket = 7;
}
message ListBucketsRequest {
  optional int32 max_results = 1;
  optional string page_token = 2;
  optional string prefix = 3;
  optional string project = 4;
  optional string projection = 5;
  optional string user_project = 6;
}
message LockRetentionPolicyBucketRequest {
  optional string name = 1;
  optional string if_metageneration_match = 2;
  optional string user_project = 3;
}
message PatchBucketRequest {
  optional string name = 1;
  optional string if_metageneration_match = 2;
  optional string if_metageneration_not_match = 3;
  optional string predefined_acl = 4;
  optional string predefined_default_object_acl = 5;
  optional string projection = 6;
  optional string user_project = 7;
  optional Bucket bucket = 8;
}
message UpdateBucketRequest {
  optional string name = 1;
  optional string if_metageneration_match = 2;
  optional string if_metageneration_not_match = 3;
  optional string predefined_acl = 4;
  optional string predefined_default_object_acl = 5;
  optional string projection = 6;
  optional string user_project = 7;
  optional Bucket bucket = 8;
}
message StopChannelRequest {
  optional Channel channel = 1;
}
message DeleteDefaultObjectAccessControlRequest {
  optional string bucket = 1;
  optional string entity = 2;
  optional string user_project = 3;
}
message GetDefaultObjectAccessControlRequest {
  optional string bucket = 1;
  optional string entity = 2;
  optional string user_project = 3;
}
message InsertDefaultObjectAccessControlRequest {
  optional string bucket = 1;
  optional string user_project = 2;
  optional ObjectAccessControl default_object_access_control = 3;
}
message ListDefaultObjectAccessControlsRequest {
  optional string bucket = 1;
  optional string if_metageneration_match = 2;
  optional string if_metageneration_not_match = 3;
  optional string user_project = 4;
}
message PatchDefaultObjectAccessControlRequest {
  optional string bucket = 1;
  optional string entity = 2;
  optional string user_project = 3;
  optional ObjectAccessControl default_object_access_control = 4;
}
message UpdateDefaultObjectAccessControlRequest {
  optional string bucket = 1;
  optional string entity = 2;
  optional string user_project = 3;
  optional ObjectAccessControl default_object_access_control = 4;
}
message DeleteFolderRequest {
  optional string bucket = 1;
  optional string name = 2;
  optional string if_metageneration_match = 3;
  optional string if_metageneration_not_match = 4;
}
message GetFolderRequest {
  optional string bucket = 1;
  optional string name = 2;
  optional string if_metageneration_match = 3;
  optional string if_metageneration_not_match = 4;
}
message InsertFolderRequest {
  optional string bucket = 1;
  optional bool recursive = 2;
  optional Folder folder = 3;
}
message ListFoldersRequest {
  optional string bucket = 1;
  optional string delimiter = 2;
  optional string end_offset = 3;
  optional int32 page_size = 4;
  optional string page_token = 5;
  optional string prefix = 6;
  optional string start_offset = 7;
}
message RenameFolderRequest {
  optional string bucket = 1;
  optional string destination_folder = 2;
  optional string if_source_metageneration_match = 3;
  optional string if_source_metageneration_not_match = 4;
  optional string source_folder = 5;
}
message DeleteManagedFolderRequest {
  optional bool allow_non_empty = 1;
  optional string bucket = 2;
  optional string if_metageneration_match = 3;
  optional string if_metageneration_not_match = 4;
  optional string name = 5;
}
message GetManagedFolderRequest {
  optional string bucket = 1;
  optional string if_metageneration_match = 2;
  optional string if_metageneration_not_match = 3;
  optional string name = 4;
}
message InsertManagedFolderRequest {
  optional string bucket = 1;
  optional ManagedFolder managed_folder = 2;
}
message ListManagedFoldersRequest {
  optional string bucket = 1;
  optional int32 page_size = 2;
  optional string page_token = 3;
  optional string prefix = 4;
}
message DeleteNotificationRequest {
  optional string bucket = 1;
  optional string name = 2;
  optional string user_project = 3;
}
message GetNotificationRequest {
  optional string bucket = 1;
  optional string name = 2;
  optional string user_project = 3;
}
message InsertNotificationRequest {
  optional string bucket = 1;
  optional string user_project = 2;
  optional Notification notification = 3;
}
message ListNotificationsRequest {
  optional string bucket = 1;
  optional string user_project = 2;
}
message DeleteObjectAccessControlRequest {
  optional string bucket = 1;
  optional string entity = 2;
  optional string generation = 3;
  optional string object = 4;
  optional string user_project = 5;
}
message GetObjectAccessControlRequest {
  optional string bucket = 1;
  optional string entity = 2;
  optional string generation = 3;
  optional string object = 4;
  optional string user_project = 5;
}
message InsertObjectAccessControlRequest {
  optional string bucket = 1;
  optional string generation = 2;
  optional string object = 3;
  optional string user_project = 4;
  optional ObjectAccessControl object_access_control = 5;
}
message ListObjectAccessControlsRequest {
  optional string bucket = 1;
  optional string generation = 2;
  optional string object = 3;
  optional string user_project = 4;
}
message PatchObjectAccessControlRequest {
  optional string bucket = 1;
  optional string entity = 2;
  optional string generation = 3;
  optional string object = 4;
  optional string user_project = 5;
  optional ObjectAccessControl object_access_control = 6;
}
message UpdateObjectAccessControlRequest {
  optional string bucket = 1;
  optional string entity = 2;
  optional string generation = 3;
  optional string object = 4;
  optional string user_project = 5;
  optional ObjectAccessControl object_access_control = 6;
}
message BulkRestoreObjectRequest {
  optional string bucket = 1;
  optional BulkRestoreObjectsRequest object = 2;
}
message ComposeObjectRequest {
  optional string destination_bucket = 1;
  optional string destination_object = 2;
  optional string destination_predefined_acl = 3;
  optional string if_generation_match = 4;
  optional string if_metageneration_match = 5;
  optional string kms_key_name = 6;
  optional string user_project = 7;
  optional ComposeRequest object = 8;
}
message CopyObjectRequest {
  optional string destination_bucket = 1;
  optional string destination_kms_key_name = 2;
  optional string destination_object = 3;
  optional string destination_predefined_acl = 4;
  optional string if_generation_match = 5;
  optional string if_generation_not_match = 6;
  optional string if_metageneration_match = 7;
  optional string if_metageneration_not_match = 8;
  optional string if_source_generation_match = 9;
  optional string if_source_generation_not_match = 10;
  optional string if_source_metageneration_match = 11;
  optional string if_source_metageneration_not_match = 12;
  optional string projection = 13;
  optional string source_bucket = 14;
  optional string source_generation = 15;
  optional string source_object = 16;
  optional string user_project = 17;
  optional Object object = 18;
}
message DeleteObjectRequest {
  optional string bucket = 1;
  optional string generation = 2;
  optional string if_generation_match = 3;
  optional string if_generation_not_match = 4;
  optional string if_metageneration_match = 5;
  optional string if_metageneration_not_match = 6;
  optional string name = 7;
  optional string user_project = 8;
}
message GetObjectRequest {
  optional string bucket = 1;
  optional string generation = 2;
  optional string if_generation_match = 3;
  optional string if_generation_not_match = 4;
  optional string if_metageneration_match = 5;
  optional string if_metageneration_not_match = 6;
  optional string name = 7;
  optional string projection = 8;
  optional bool soft_deleted = 9;
  optional string user_project = 10;
}
message InsertObjectRequest {
  optional string bucket = 1;
  optional string content_encoding = 2;
  optional string if_generation_match = 3;
  optional string if_generation_not_match = 4;
  optional string if_metageneration_match = 5;
  optional string if_metageneration_not_match = 6;
  optional string kms_key_name = 7;
  optional string name = 8;
  optional string predefined_acl = 9;
  optional string projection = 10;
  optional string user_project = 11;
  optional Object object = 12;
}
message ListObjectsRequest {
  optional string bucket = 1;
  optional string delimiter = 2;
  optional string end_offset = 3;
  optional bool include_folders_as_prefixes = 4;
  optional bool include_trailing_delimiter = 5;
  optional string match_glob = 6;
  optional int32 max_results = 7;
  optional string page_token = 8;
  optional string prefix = 9;
  optional string projection = 10;
  optional bool soft_deleted = 11;
  optional string start_offset = 12;
  optional string user_project = 13;
  optional bool versions = 14;
}
message PatchObjectRequest {
  optional string bucket = 1;
  optional string generation = 2;
  optional string if_generation_match = 3;
  optional string if_generation_not_match = 4;
  optional string if_metageneration_match = 5;
  optional string if_metageneration_not_match = 6;
  optional string name = 7;
  optional bool override_unlocked_retention = 8;
  optional string predefined_acl = 9;
  optional string projection = 10;
  optional string user_project = 11;
  optional Object object = 12;
}
message RestoreObjectRequest {
  optional string bucket = 1;
  optional bool copy_source_acl = 2;
  optional string generation = 3;
  optional string if_generation_match = 4;
  optional string if_generation_not_match = 5;
  optional string if_metageneration_match = 6;
  optional string if_metageneration_not_match = 7;
  optional string name = 8;
  optional string projection = 9;
  optional string user_project = 10;
}
message RewriteObjectRequest {
  optional string destination_bucket = 1;
  optional string destination_kms_key_name = 2;
  optional string destination_object = 3;
  optional string destination_predefined_acl = 4;
  optional string if_generation_match = 5;
  optional string if_generation_not_match = 6;
  optional string if_metageneration_match = 7;
  optional string if_metageneration_not_match = 8;
  optional string if_source_generation_match = 9;
  optional string if_source_generation_not_match = 10;
  optional string if_source_metageneration_match = 11;
  optional string if_source_metageneration_not_match = 12;
  optional string max_bytes_rewritten_per_call = 13;
  optional string projection = 14;
  optional string rewrite_token = 15;
  optional string source_bucket = 16;
  optional string source_generation = 17;
  optional string source_object = 18;
  optional string user_project = 19;
  optional Object object = 20;
}
message UpdateObjectRequest {
  optional string bucket = 1;
  optional string generation = 2;
  optional string if_generation_match = 3;
  optional string if_generation_not_match = 4;
  optional string if_metageneration_match = 5;
  optional string if_metageneration_not_match = 6;
  optional string name = 7;
  optional bool override_unlocked_retention = 8;
  optional string predefined_acl = 9;
  optional string projection = 10;
  optional string user_project = 11;
  optional Object object = 12;
}
message WatchAllObjectRequest {
  optional string bucket = 1;
  optional string delimiter = 2;
  optional string end_offset = 3;
  optional bool include_trailing_delimiter = 4;
  optional int32 max_results = 5;
  optional string page_token = 6;
  optional string prefix = 7;
  optional string projection = 8;
  optional string start_offset = 9;
  optional string user_project = 10;
  optional bool versions = 11;
  optional Channel object = 12;
}
message CreateProjectsHmacKeyRequest {
  optional string project_id = 1;
  optional string service_account_email = 2;
  optional string user_project = 3;
}
message DeleteProjectsHmacKeyRequest {
  optional string access_id = 1;
  optional string project_id = 2;
  optional string user_project = 3;
}
message GetProjectsHmacKeyRequest {
  optional string access_id = 1;
  optional string project_id = 2;
  optional string user_project = 3;
}
message ListProjectsHmacKeysRequest {
  optional int32 max_results = 1;
  optional string page_token = 2;
  optional string project_id = 3;
  optional string service_account_email = 4;
  optional bool show_deleted_keys = 5;
  optional string user_project = 6;
}
message UpdateProjectsHmacKeyRequest {
  optional string access_id = 1;
  optional string project_id = 2;
  optional string user_project = 3;
  optional HmacKeyMetadata projects_hmac_key = 4;
}
message GetProjectsServiceAccountRequest {
  optional string project_id = 1;
  optional string user_project = 2;
}
